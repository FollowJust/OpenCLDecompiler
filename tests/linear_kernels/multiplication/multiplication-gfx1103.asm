// llvm-mc -triple=amdgcn--amdhsa -mcpu=gfx1103 -mattr=+wavefrontsize32,+wavefrontsize64

	.section	.note,#alloc
	.section	.dynsym,#alloc
	.long 0                                                    // 000000056D38: 00000000
	.long 0                                                    // 000000056D3C: 00000000
	.long 0                                                    // 000000056D40: 00000000
	.long 0                                                    // 000000056D44: 00000000
	.long 0                                                    // 000000056D48: 00000000
	.long 0                                                    // 000000056D4C: 00000000
	.ascii "5"                                                 // 000000056D50: 35
	.byte 0x1                                                  // 000000056D51: 01
	.short 0                                                   // 000000056D52: 0000
	.long 0x60311                                              // 000000056D54: 00060311
	.long 0x616c0                                              // 000000056D58: 000616C0
	.long 0                                                    // 000000056D5C: 00000000
	.ascii "@"                                                 // 000000056D60: 40
	.byte 0                                                    // 000000056D61: 00
	.short 0                                                   // 000000056D62: 0000
	.long 0                                                    // 000000056D64: 00000000
	.long 0x51b                                                // 000000056D68: 0000051B
	.long 0x60311                                              // 000000056D6C: 00060311
	.long 0x61a80                                              // 000000056D70: 00061A80
	.long 0                                                    // 000000056D74: 00000000
	.ascii "@"                                                 // 000000056D78: 40
	.byte 0                                                    // 000000056D79: 00
	.short 0                                                   // 000000056D7A: 0000
	.long 0                                                    // 000000056D7C: 00000000
	.long 0x1906                                               // 000000056D80: 00001906
	.long 0x60311                                              // 000000056D84: 00060311
	.long 0x62fc0                                              // 000000056D88: 00062FC0
	.long 0                                                    // 000000056D8C: 00000000
	.ascii "@"                                                 // 000000056D90: 40
	.byte 0                                                    // 000000056D91: 00
	.short 0                                                   // 000000056D92: 0000
	.long 0                                                    // 000000056D94: 00000000
	.long 0x2114                                               // 000000056D98: 00002114
	.long 0x60311                                              // 000000056D9C: 00060311
	.long 0x63680                                              // 000000056DA0: 00063680
	.long 0                                                    // 000000056DA4: 00000000
	.ascii "@"                                                 // 000000056DA8: 40
	.byte 0                                                    // 000000056DA9: 00
	.short 0                                                   // 000000056DAA: 0000
	.long 0                                                    // 000000056DAC: 00000000
	.ascii "P4"                                                // 000000056DB0: 3450
	.short 0                                                   // 000000056DB2: 0000
	.long 0x70312                                              // 000000056DB4: 00070312
	.long 0x7b000                                              // 000000056DB8: 0007B000
	.long 0                                                    // 000000056DBC: 00000000
	.long 0xa8                                                 // 000000056DC0: 000000A8
	.long 0                                                    // 000000056DC4: 00000000
	.ascii "LC"                                                // 000000056DC8: 434C
	.short 0                                                   // 000000056DCA: 0000
	.long 0x70312                                              // 000000056DCC: 00070312
	.long 0x7f200                                              // 000000056DD0: 0007F200
	.long 0                                                    // 000000056DD4: 00000000
	.long 0x110                                                // 000000056DD8: 00000110
	.long 0                                                    // 000000056DDC: 00000000
	.long 0x1a9                                                // 000000056DE0: 000001A9
	.long 0x70312                                              // 000000056DE4: 00070312
	.long 0x67d00                                              // 000000056DE8: 00067D00
	.long 0                                                    // 000000056DEC: 00000000
	.long 0xec                                                 // 000000056DF0: 000000EC
	.long 0                                                    // 000000056DF4: 00000000
	.long 0xabd                                                // 000000056DF8: 00000ABD
	.long 0x60311                                              // 000000056DFC: 00060311
	.long 0x62000                                              // 000000056E00: 00062000
	.long 0                                                    // 000000056E04: 00000000
	.ascii "@"                                                 // 000000056E08: 40
	.byte 0                                                    // 000000056E09: 00
	.short 0                                                   // 000000056E0A: 0000
	.long 0                                                    // 000000056E0C: 00000000
	.long 0xfcb                                                // 000000056E10: 00000FCB
	.long 0x70312                                              // 000000056E14: 00070312
	.long 0x6d300                                              // 000000056E18: 0006D300
	.long 0                                                    // 000000056E1C: 00000000
	.ascii "H"                                                 // 000000056E20: 48
	.byte 0x1                                                  // 000000056E21: 01
	.short 0                                                   // 000000056E22: 0000
	.long 0                                                    // 000000056E24: 00000000
	.long 0x1ebd                                               // 000000056E28: 00001EBD
	.long 0x60311                                              // 000000056E2C: 00060311
	.long 0x63480                                              // 000000056E30: 00063480
	.long 0                                                    // 000000056E34: 00000000
	.ascii "@"                                                 // 000000056E38: 40
	.byte 0                                                    // 000000056E39: 00
	.short 0                                                   // 000000056E3A: 0000
	.long 0                                                    // 000000056E3C: 00000000
	.ascii "m4"                                                // 000000056E40: 346D
	.short 0                                                   // 000000056E42: 0000
	.long 0x60311                                              // 000000056E44: 00060311
	.long 0x648c0                                              // 000000056E48: 000648C0
	.long 0                                                    // 000000056E4C: 00000000
	.ascii "@"                                                 // 000000056E50: 40
	.byte 0                                                    // 000000056E51: 00
	.short 0                                                   // 000000056E52: 0000
	.long 0                                                    // 000000056E54: 00000000
	.ascii "sC"                                                // 000000056E58: 4373
	.short 0                                                   // 000000056E5A: 0000
	.long 0x60311                                              // 000000056E5C: 00060311
	.ascii "@U"                                                // 000000056E60: 5540
	.short 0x6                                                 // 000000056E62: 0006
	.long 0                                                    // 000000056E64: 00000000
	.ascii "@"                                                 // 000000056E68: 40
	.byte 0                                                    // 000000056E69: 00
	.short 0                                                   // 000000056E6A: 0000
	.long 0                                                    // 000000056E6C: 00000000
	.long 0x481c                                               // 000000056E70: 0000481C
	.long 0x70312                                              // 000000056E74: 00070312
	.long 0x80900                                              // 000000056E78: 00080900
	.long 0                                                    // 000000056E7C: 00000000
	.long 0xb4                                                 // 000000056E80: 000000B4
	.long 0                                                    // 000000056E84: 00000000
	.long 0x11ba                                               // 000000056E88: 000011BA
	.long 0x70312                                              // 000000056E8C: 00070312
	.long 0x6e100                                              // 000000056E90: 0006E100
	.long 0                                                    // 000000056E94: 00000000
	.ascii "\\"                                                // 000000056E98: 5C
	.byte 0x1                                                  // 000000056E99: 01
	.short 0                                                   // 000000056E9A: 0000
	.long 0                                                    // 000000056E9C: 00000000
	.long 0x2cc7                                               // 000000056EA0: 00002CC7
	.long 0x60311                                              // 000000056EA4: 00060311
	.ascii "@@"                                                // 000000056EA8: 4040
	.short 0x6                                                 // 000000056EAA: 0006
	.long 0                                                    // 000000056EAC: 00000000
	.ascii "@"                                                 // 000000056EB0: 40
	.byte 0                                                    // 000000056EB1: 00
	.short 0                                                   // 000000056EB2: 0000
	.long 0                                                    // 000000056EB4: 00000000
	.long 0x3aec                                               // 000000056EB8: 00003AEC
	.long 0x70312                                              // 000000056EBC: 00070312
	.long 0x7c800                                              // 000000056EC0: 0007C800
	.long 0                                                    // 000000056EC4: 00000000
	.long 0x114                                                // 000000056EC8: 00000114
	.long 0                                                    // 000000056ECC: 00000000
	.long 0xb0b                                                // 000000056ED0: 00000B0B
	.long 0x70312                                              // 000000056ED4: 00070312
	.long 0x6b300                                              // 000000056ED8: 0006B300
	.long 0                                                    // 000000056EDC: 00000000
	.long 0xf4                                                 // 000000056EE0: 000000F4
	.long 0                                                    // 000000056EE4: 00000000
	.long 0x14ad                                               // 000000056EE8: 000014AD
	.long 0x70312                                              // 000000056EEC: 00070312
	.long 0x6f300                                              // 000000056EF0: 0006F300
	.long 0                                                    // 000000056EF4: 00000000
	.ascii "d"                                                 // 000000056EF8: 64
	.byte 0                                                    // 000000056EF9: 00
	.short 0                                                   // 000000056EFA: 0000
	.long 0                                                    // 000000056EFC: 00000000
	.long 0x18d1                                               // 000000056F00: 000018D1
	.long 0x60311                                              // 000000056F04: 00060311
	.long 0x62f80                                              // 000000056F08: 00062F80
	.long 0                                                    // 000000056F0C: 00000000
	.ascii "@"                                                 // 000000056F10: 40
	.byte 0                                                    // 000000056F11: 00
	.short 0                                                   // 000000056F12: 0000
	.long 0                                                    // 000000056F14: 00000000
	.long 0x3391                                               // 000000056F18: 00003391
	.long 0x60311                                              // 000000056F1C: 00060311
	.long 0x647c0                                              // 000000056F20: 000647C0
	.long 0                                                    // 000000056F24: 00000000
	.ascii "@"                                                 // 000000056F28: 40
	.byte 0                                                    // 000000056F29: 00
	.short 0                                                   // 000000056F2A: 0000
	.long 0                                                    // 000000056F2C: 00000000
	.ascii "f"                                                 // 000000056F30: 66
	.byte 0x1b                                                 // 000000056F31: 1B
	.short 0                                                   // 000000056F32: 0000
	.long 0x70312                                              // 000000056F34: 00070312
	.long 0x71c00                                              // 000000056F38: 00071C00
	.long 0                                                    // 000000056F3C: 00000000
	.ascii "t"                                                 // 000000056F40: 74
	.byte 0x1                                                  // 000000056F41: 01
	.short 0                                                   // 000000056F42: 0000
	.long 0                                                    // 000000056F44: 00000000
	.ascii "&0"                                                // 000000056F48: 3026
	.short 0                                                   // 000000056F4A: 0000
	.long 0x70312                                              // 000000056F4C: 00070312
	.long 0x79a00                                              // 000000056F50: 00079A00
	.long 0                                                    // 000000056F54: 00000000
	.long 0x94                                                 // 000000056F58: 00000094
	.long 0                                                    // 000000056F5C: 00000000
	.long 0x32db                                               // 000000056F60: 000032DB
	.long 0x70312                                              // 000000056F64: 00070312
	.long 0x7a700                                              // 000000056F68: 0007A700
	.long 0                                                    // 000000056F6C: 00000000
	.long 0xa8                                                 // 000000056F70: 000000A8
	.long 0                                                    // 000000056F74: 00000000
	.long 0x33e6                                               // 000000056F78: 000033E6
	.long 0x70312                                              // 000000056F7C: 00070312
	.long 0x7ad00                                              // 000000056F80: 0007AD00
	.long 0                                                    // 000000056F84: 00000000
	.long 0x10c                                                // 000000056F88: 0000010C
	.long 0                                                    // 000000056F8C: 00000000
	.ascii "e)"                                                // 000000056F90: 2965
	.short 0                                                   // 000000056F92: 0000
	.long 0x70312                                              // 000000056F94: 00070312
	.long 0x77100                                              // 000000056F98: 00077100
	.long 0                                                    // 000000056F9C: 00000000
	.long 0x18c                                                // 000000056FA0: 0000018C
	.long 0                                                    // 000000056FA4: 00000000
	.ascii "@*"                                                // 000000056FA8: 2A40
	.short 0                                                   // 000000056FAA: 0000
	.long 0x70312                                              // 000000056FAC: 00070312
	.long 0x77700                                              // 000000056FB0: 00077700
	.long 0                                                    // 000000056FB4: 00000000
	.ascii "`"                                                 // 000000056FB8: 60
	.byte 0x1                                                  // 000000056FB9: 01
	.short 0                                                   // 000000056FBA: 0000
	.long 0                                                    // 000000056FBC: 00000000
	.long 0x2bf6                                               // 000000056FC0: 00002BF6
	.long 0x60311                                              // 000000056FC4: 00060311
	.long 0x63f80                                              // 000000056FC8: 00063F80
	.long 0                                                    // 000000056FCC: 00000000
	.ascii "@"                                                 // 000000056FD0: 40
	.byte 0                                                    // 000000056FD1: 00
	.short 0                                                   // 000000056FD2: 0000
	.long 0                                                    // 000000056FD4: 00000000
	.ascii "j."                                                // 000000056FD8: 2E6A
	.short 0                                                   // 000000056FDA: 0000
	.long 0x70312                                              // 000000056FDC: 00070312
	.long 0x79200                                              // 000000056FE0: 00079200
	.long 0                                                    // 000000056FE4: 00000000
	.long 0xfc                                                 // 000000056FE8: 000000FC
	.long 0                                                    // 000000056FEC: 00000000
	.ascii "i<"                                                // 000000056FF0: 3C69
	.short 0                                                   // 000000056FF2: 0000
	.long 0x70312                                              // 000000056FF4: 00070312
	.long 0x7ce00                                              // 000000056FF8: 0007CE00
	.long 0                                                    // 000000056FFC: 00000000
	.long 0x118                                                // 000000057000: 00000118
	.long 0                                                    // 000000057004: 00000000
	.long 0x44cb                                               // 000000057008: 000044CB
	.long 0x70312                                              // 00000005700C: 00070312
	.long 0x7fa00                                              // 000000057010: 0007FA00
	.long 0                                                    // 000000057014: 00000000
	.long 0xfc                                                 // 000000057018: 000000FC
	.long 0                                                    // 00000005701C: 00000000
	.ascii "@J"                                                // 000000057020: 4A40
	.short 0                                                   // 000000057022: 0000
	.long 0x70312                                              // 000000057024: 00070312
	.long 0x81300                                              // 000000057028: 00081300
	.long 0                                                    // 00000005702C: 00000000
	.ascii "@"                                                 // 000000057030: 40
	.byte 0                                                    // 000000057031: 00
	.short 0                                                   // 000000057032: 0000
	.long 0                                                    // 000000057034: 00000000
	.ascii " "                                                 // 000000057038: 20
	.byte 0x1                                                  // 000000057039: 01
	.short 0                                                   // 00000005703A: 0000
	.long 0x70312                                              // 00000005703C: 00070312
	.long 0x67900                                              // 000000057040: 00067900
	.long 0                                                    // 000000057044: 00000000
	.ascii "P"                                                 // 000000057048: 50
	.byte 0x1                                                  // 000000057049: 01
	.short 0                                                   // 00000005704A: 0000
	.long 0                                                    // 00000005704C: 00000000
	.ascii "I"                                                 // 000000057050: 49
	.byte 0x12                                                 // 000000057051: 12
	.short 0                                                   // 000000057052: 0000
	.long 0x60311                                              // 000000057054: 00060311
	.ascii "@'"                                                // 000000057058: 2740
	.short 0x6                                                 // 00000005705A: 0006
	.long 0                                                    // 00000005705C: 00000000
	.ascii "@"                                                 // 000000057060: 40
	.byte 0                                                    // 000000057061: 00
	.short 0                                                   // 000000057062: 0000
	.long 0                                                    // 000000057064: 00000000
	.long 0x161c                                               // 000000057068: 0000161C
	.long 0x60311                                              // 00000005706C: 00060311
	.long 0x62c00                                              // 000000057070: 00062C00
	.long 0                                                    // 000000057074: 00000000
	.ascii "@"                                                 // 000000057078: 40
	.byte 0                                                    // 000000057079: 00
	.short 0                                                   // 00000005707A: 0000
	.long 0                                                    // 00000005707C: 00000000
	.ascii "N"                                                 // 000000057080: 4E
	.byte 0x1f                                                 // 000000057081: 1F
	.short 0                                                   // 000000057082: 0000
	.long 0x60311                                              // 000000057084: 00060311
	.long 0x63500                                              // 000000057088: 00063500
	.long 0                                                    // 00000005708C: 00000000
	.ascii "@"                                                 // 000000057090: 40
	.byte 0                                                    // 000000057091: 00
	.short 0                                                   // 000000057092: 0000
	.long 0                                                    // 000000057094: 00000000
	.long 0x2d83                                               // 000000057098: 00002D83
	.long 0x70312                                              // 00000005709C: 00070312
	.long 0x78c00                                              // 0000000570A0: 00078C00
	.long 0                                                    // 0000000570A4: 00000000
	.long 0x108                                                // 0000000570A8: 00000108
	.long 0                                                    // 0000000570AC: 00000000
	.long 0x36ec                                               // 0000000570B0: 000036EC
	.long 0x70312                                              // 0000000570B4: 00070312
	.long 0x7b900                                              // 0000000570B8: 0007B900
	.long 0                                                    // 0000000570BC: 00000000
	.long 0xa8                                                 // 0000000570C0: 000000A8
	.long 0                                                    // 0000000570C4: 00000000
	.long 0x47a8                                               // 0000000570C8: 000047A8
	.long 0x60311                                              // 0000000570CC: 00060311
	.long 0x658c0                                              // 0000000570D0: 000658C0
	.long 0                                                    // 0000000570D4: 00000000
	.ascii "@"                                                 // 0000000570D8: 40
	.byte 0                                                    // 0000000570D9: 00
	.short 0                                                   // 0000000570DA: 0000
	.long 0                                                    // 0000000570DC: 00000000
	.long 0x881                                                // 0000000570E0: 00000881
	.long 0x70312                                              // 0000000570E4: 00070312
	.long 0x6a000                                              // 0000000570E8: 0006A000
	.long 0                                                    // 0000000570EC: 00000000
	.ascii "h"                                                 // 0000000570F0: 68
	.byte 0x1                                                  // 0000000570F1: 01
	.short 0                                                   // 0000000570F2: 0000
	.long 0                                                    // 0000000570F4: 00000000
	.ascii "T!"                                                // 0000000570F8: 2154
	.short 0                                                   // 0000000570FA: 0000
	.long 0x60311                                              // 0000000570FC: 00060311
	.long 0x636c0                                              // 000000057100: 000636C0
	.long 0                                                    // 000000057104: 00000000
	.ascii "@"                                                 // 000000057108: 40
	.byte 0                                                    // 000000057109: 00
	.short 0                                                   // 00000005710A: 0000
	.long 0                                                    // 00000005710C: 00000000
	.long 0x32f3                                               // 000000057110: 000032F3
	.long 0x60311                                              // 000000057114: 00060311
	.long 0x64700                                              // 000000057118: 00064700
	.long 0                                                    // 00000005711C: 00000000
	.ascii "@"                                                 // 000000057120: 40
	.byte 0                                                    // 000000057121: 00
	.short 0                                                   // 000000057122: 0000
	.long 0                                                    // 000000057124: 00000000
	.long 0x49bc                                               // 000000057128: 000049BC
	.long 0x60311                                              // 00000005712C: 00060311
	.long 0x65a80                                              // 000000057130: 00065A80
	.long 0                                                    // 000000057134: 00000000
	.ascii "@"                                                 // 000000057138: 40
	.byte 0                                                    // 000000057139: 00
	.short 0                                                   // 00000005713A: 0000
	.long 0                                                    // 00000005713C: 00000000
	.long 0x1cdf                                               // 000000057140: 00001CDF
	.long 0x70312                                              // 000000057144: 00070312
	.long 0x72300                                              // 000000057148: 00072300
	.long 0                                                    // 00000005714C: 00000000
	.long 0xec                                                 // 000000057150: 000000EC
	.long 0                                                    // 000000057154: 00000000
	.ascii "\n"                                                // 000000057158: 0A
	.ascii "1"                                                 // 000000057159: 31
	.short 0                                                   // 00000005715A: 0000
	.long 0x60311                                              // 00000005715C: 00060311
	.long 0x644c0                                              // 000000057160: 000644C0
	.long 0                                                    // 000000057164: 00000000
	.ascii "@"                                                 // 000000057168: 40
	.byte 0                                                    // 000000057169: 00
	.short 0                                                   // 00000005716A: 0000
	.long 0                                                    // 00000005716C: 00000000
	.long 0x348d                                               // 000000057170: 0000348D
	.long 0x70312                                              // 000000057174: 00070312
	.long 0x7b100                                              // 000000057178: 0007B100
	.long 0                                                    // 00000005717C: 00000000
	.long 0xa0                                                 // 000000057180: 000000A0
	.long 0                                                    // 000000057184: 00000000
	.ascii ">"                                                 // 000000057188: 3E
	.byte 0x5                                                  // 000000057189: 05
	.short 0                                                   // 00000005718A: 0000
	.long 0x70312                                              // 00000005718C: 00070312
	.long 0x68e00                                              // 000000057190: 00068E00
	.long 0                                                    // 000000057194: 00000000
	.long 0xf4                                                 // 000000057198: 000000F4
	.long 0                                                    // 00000005719C: 00000000
	.ascii "["                                                 // 0000000571A0: 5B
	.byte 0x10                                                 // 0000000571A1: 10
	.short 0                                                   // 0000000571A2: 0000
	.long 0x70312                                              // 0000000571A4: 00070312
	.long 0x6d700                                              // 0000000571A8: 0006D700
	.long 0                                                    // 0000000571AC: 00000000
	.ascii "H"                                                 // 0000000571B0: 48
	.byte 0x1                                                  // 0000000571B1: 01
	.short 0                                                   // 0000000571B2: 0000
	.long 0                                                    // 0000000571B4: 00000000
	.ascii "*#"                                                // 0000000571B8: 232A
	.short 0                                                   // 0000000571BA: 0000
	.long 0x60311                                              // 0000000571BC: 00060311
	.ascii "@8"                                                // 0000000571C0: 3840
	.short 0x6                                                 // 0000000571C2: 0006
	.long 0                                                    // 0000000571C4: 00000000
	.ascii "@"                                                 // 0000000571C8: 40
	.byte 0                                                    // 0000000571C9: 00
	.short 0                                                   // 0000000571CA: 0000
	.long 0                                                    // 0000000571CC: 00000000
	.ascii "g6"                                                // 0000000571D0: 3667
	.short 0                                                   // 0000000571D2: 0000
	.long 0x60311                                              // 0000000571D4: 00060311
	.ascii "@J"                                                // 0000000571D8: 4A40
	.short 0x6                                                 // 0000000571DA: 0006
	.long 0                                                    // 0000000571DC: 00000000
	.ascii "@"                                                 // 0000000571E0: 40
	.byte 0                                                    // 0000000571E1: 00
	.short 0                                                   // 0000000571E2: 0000
	.long 0                                                    // 0000000571E4: 00000000
	.ascii "YJ"                                                // 0000000571E8: 4A59
	.short 0                                                   // 0000000571EA: 0000
	.long 0x60311                                              // 0000000571EC: 00060311
	.ascii "@["                                                // 0000000571F0: 5B40
	.short 0x6                                                 // 0000000571F2: 0006
	.long 0                                                    // 0000000571F4: 00000000
	.ascii "@"                                                 // 0000000571F8: 40
	.byte 0                                                    // 0000000571F9: 00
	.short 0                                                   // 0000000571FA: 0000
	.long 0                                                    // 0000000571FC: 00000000
	.long 0x17df                                               // 000000057200: 000017DF
	.long 0x70312                                              // 000000057204: 00070312
	.long 0x70500                                              // 000000057208: 00070500
	.long 0                                                    // 00000005720C: 00000000
	.long 0xfc                                                 // 000000057210: 000000FC
	.long 0                                                    // 000000057214: 00000000
	.long 0x329e                                               // 000000057218: 0000329E
	.long 0x70312                                              // 00000005721C: 00070312
	.long 0x7a600                                              // 000000057220: 0007A600
	.long 0                                                    // 000000057224: 00000000
	.long 0xa8                                                 // 000000057228: 000000A8
	.long 0                                                    // 00000005722C: 00000000
	.long 0x1                                                  // 000000057230: 00000001
	.long 0x70312                                              // 000000057234: 00070312
	.long 0x67000                                              // 000000057238: 00067000
	.long 0                                                    // 00000005723C: 00000000
	.ascii "l"                                                 // 000000057240: 6C
	.byte 0                                                    // 000000057241: 00
	.short 0                                                   // 000000057242: 0000
	.long 0                                                    // 000000057244: 00000000
	.long 0x19e3                                               // 000000057248: 000019E3
	.long 0x60311                                              // 00000005724C: 00060311
	.long 0x63080                                              // 000000057250: 00063080
	.long 0                                                    // 000000057254: 00000000
	.ascii "@"                                                 // 000000057258: 40
	.byte 0                                                    // 000000057259: 00
	.short 0                                                   // 00000005725A: 0000
	.long 0                                                    // 00000005725C: 00000000
	.long 0x44ae                                               // 000000057260: 000044AE
	.long 0x60311                                              // 000000057264: 00060311
	.ascii "@V"                                                // 000000057268: 5640
	.short 0x6                                                 // 00000005726A: 0006
	.long 0                                                    // 00000005726C: 00000000
	.ascii "@"                                                 // 000000057270: 40
	.byte 0                                                    // 000000057271: 00
	.short 0                                                   // 000000057272: 0000
	.long 0                                                    // 000000057274: 00000000
	.ascii "3"                                                 // 000000057278: 33
	.byte 0xf                                                  // 000000057279: 0F
	.short 0                                                   // 00000005727A: 0000
	.long 0x60311                                              // 00000005727C: 00060311
	.ascii "@$"                                                // 000000057280: 2440
	.short 0x6                                                 // 000000057282: 0006
	.long 0                                                    // 000000057284: 00000000
	.ascii "@"                                                 // 000000057288: 40
	.byte 0                                                    // 000000057289: 00
	.short 0                                                   // 00000005728A: 0000
	.long 0                                                    // 00000005728C: 00000000
	.long 0xff0                                                // 000000057290: 00000FF0
	.long 0x60311                                              // 000000057294: 00060311
	.long 0x62500                                              // 000000057298: 00062500
	.long 0                                                    // 00000005729C: 00000000
	.ascii "@"                                                 // 0000000572A0: 40
	.byte 0                                                    // 0000000572A1: 00
	.short 0                                                   // 0000000572A2: 0000
	.long 0                                                    // 0000000572A4: 00000000
	.long 0x281d                                               // 0000000572A8: 0000281D
	.long 0x70312                                              // 0000000572AC: 00070312
	.long 0x76900                                              // 0000000572B0: 00076900
	.long 0                                                    // 0000000572B4: 00000000
	.ascii "8"                                                 // 0000000572B8: 38
	.byte 0x1                                                  // 0000000572B9: 01
	.short 0                                                   // 0000000572BA: 0000
	.long 0                                                    // 0000000572BC: 00000000
	.ascii "A3"                                                // 0000000572C0: 3341
	.short 0                                                   // 0000000572C2: 0000
	.long 0x70312                                              // 0000000572C4: 00070312
	.long 0x7a900                                              // 0000000572C8: 0007A900
	.long 0                                                    // 0000000572CC: 00000000
	.ascii " "                                                 // 0000000572D0: 20
	.byte 0x1                                                  // 0000000572D1: 01
	.short 0                                                   // 0000000572D2: 0000
	.long 0                                                    // 0000000572D4: 00000000
	.long 0x48d6                                               // 0000000572D8: 000048D6
	.long 0x60311                                              // 0000000572DC: 00060311
	.long 0x659c0                                              // 0000000572E0: 000659C0
	.long 0                                                    // 0000000572E4: 00000000
	.ascii "@"                                                 // 0000000572E8: 40
	.byte 0                                                    // 0000000572E9: 00
	.short 0                                                   // 0000000572EA: 0000
	.long 0                                                    // 0000000572EC: 00000000
	.ascii "~"                                                 // 0000000572F0: 7E
	.byte 0xe                                                  // 0000000572F1: 0E
	.short 0                                                   // 0000000572F2: 0000
	.long 0x70312                                              // 0000000572F4: 00070312
	.long 0x6c900                                              // 0000000572F8: 0006C900
	.long 0                                                    // 0000000572FC: 00000000
	.ascii "8"                                                 // 000000057300: 38
	.byte 0x1                                                  // 000000057301: 01
	.short 0                                                   // 000000057302: 0000
	.long 0                                                    // 000000057304: 00000000
	.long 0x1d02                                               // 000000057308: 00001D02
	.long 0x60311                                              // 00000005730C: 00060311
	.long 0x63300                                              // 000000057310: 00063300
	.long 0                                                    // 000000057314: 00000000
	.ascii "@"                                                 // 000000057318: 40
	.byte 0                                                    // 000000057319: 00
	.short 0                                                   // 00000005731A: 0000
	.long 0                                                    // 00000005731C: 00000000
	.ascii "[-"                                                // 000000057320: 2D5B
	.short 0                                                   // 000000057322: 0000
	.long 0x60311                                              // 000000057324: 00060311
	.long 0x640c0                                              // 000000057328: 000640C0
	.long 0                                                    // 00000005732C: 00000000
	.ascii "@"                                                 // 000000057330: 40
	.byte 0                                                    // 000000057331: 00
	.short 0                                                   // 000000057332: 0000
	.long 0                                                    // 000000057334: 00000000
	.long 0x42f9                                               // 000000057338: 000042F9
	.long 0x70312                                              // 00000005733C: 00070312
	.long 0x7f000                                              // 000000057340: 0007F000
	.long 0                                                    // 000000057344: 00000000
	.ascii "P"                                                 // 000000057348: 50
	.byte 0x1                                                  // 000000057349: 01
	.short 0                                                   // 00000005734A: 0000
	.long 0                                                    // 00000005734C: 00000000
	.long 0x47f6                                               // 000000057350: 000047F6
	.long 0x60311                                              // 000000057354: 00060311
	.long 0x65900                                              // 000000057358: 00065900
	.long 0                                                    // 00000005735C: 00000000
	.ascii "@"                                                 // 000000057360: 40
	.byte 0                                                    // 000000057361: 00
	.short 0                                                   // 000000057362: 0000
	.long 0                                                    // 000000057364: 00000000
	.long 0x4d1e                                               // 000000057368: 00004D1E
	.long 0x60311                                              // 00000005736C: 00060311
	.long 0x65e80                                              // 000000057370: 00065E80
	.long 0                                                    // 000000057374: 00000000
	.ascii "@"                                                 // 000000057378: 40
	.byte 0                                                    // 000000057379: 00
	.short 0                                                   // 00000005737A: 0000
	.long 0                                                    // 00000005737C: 00000000
	.long 0x99                                                 // 000000057380: 00000099
	.long 0x70312                                              // 000000057384: 00070312
	.long 0x67400                                              // 000000057388: 00067400
	.long 0                                                    // 00000005738C: 00000000
	.ascii "h"                                                 // 000000057390: 68
	.byte 0x1                                                  // 000000057391: 01
	.short 0                                                   // 000000057392: 0000
	.long 0                                                    // 000000057394: 00000000
	.ascii "4"                                                 // 000000057398: 34
	.byte 0x1e                                                 // 000000057399: 1E
	.short 0                                                   // 00000005739A: 0000
	.long 0x60311                                              // 00000005739C: 00060311
	.long 0x63400                                              // 0000000573A0: 00063400
	.long 0                                                    // 0000000573A4: 00000000
	.ascii "@"                                                 // 0000000573A8: 40
	.byte 0                                                    // 0000000573A9: 00
	.short 0                                                   // 0000000573AA: 0000
	.long 0                                                    // 0000000573AC: 00000000
	.long 0x2ba7                                               // 0000000573B0: 00002BA7
	.long 0x60311                                              // 0000000573B4: 00060311
	.ascii "@?"                                                // 0000000573B8: 3F40
	.short 0x6                                                 // 0000000573BA: 0006
	.long 0                                                    // 0000000573BC: 00000000
	.ascii "@"                                                 // 0000000573C0: 40
	.byte 0                                                    // 0000000573C1: 00
	.short 0                                                   // 0000000573C2: 0000
	.long 0                                                    // 0000000573C4: 00000000
	.ascii "MG"                                                // 0000000573C8: 474D
	.short 0                                                   // 0000000573CA: 0000
	.long 0x70312                                              // 0000000573CC: 00070312
	.long 0x80600                                              // 0000000573D0: 00080600
	.long 0                                                    // 0000000573D4: 00000000
	.long 0xa0                                                 // 0000000573D8: 000000A0
	.long 0                                                    // 0000000573DC: 00000000
	.long 0x4afd                                               // 0000000573E0: 00004AFD
	.long 0x60311                                              // 0000000573E4: 00060311
	.long 0x65c00                                              // 0000000573E8: 00065C00
	.long 0                                                    // 0000000573EC: 00000000
	.ascii "@"                                                 // 0000000573F0: 40
	.byte 0                                                    // 0000000573F1: 00
	.short 0                                                   // 0000000573F2: 0000
	.long 0                                                    // 0000000573F4: 00000000
	.long 0x9e9                                                // 0000000573F8: 000009E9
	.long 0x60311                                              // 0000000573FC: 00060311
	.ascii "@"                                                 // 000000057400: 40
	.byte 0x1f                                                 // 000000057401: 1F
	.short 0x6                                                 // 000000057402: 0006
	.long 0                                                    // 000000057404: 00000000
	.ascii "@"                                                 // 000000057408: 40
	.byte 0                                                    // 000000057409: 00
	.short 0                                                   // 00000005740A: 0000
	.long 0                                                    // 00000005740C: 00000000
	.ascii "}$"                                                // 000000057410: 247D
	.short 0                                                   // 000000057412: 0000
	.long 0x70312                                              // 000000057414: 00070312
	.long 0x75100                                              // 000000057418: 00075100
	.long 0                                                    // 00000005741C: 00000000
	.ascii "D"                                                 // 000000057420: 44
	.byte 0x1                                                  // 000000057421: 01
	.short 0                                                   // 000000057422: 0000
	.long 0                                                    // 000000057424: 00000000
	.long 0x2600                                               // 000000057428: 00002600
	.long 0x70312                                              // 00000005742C: 00070312
	.long 0x75b00                                              // 000000057430: 00075B00
	.long 0                                                    // 000000057434: 00000000
	.long 0x18c                                                // 000000057438: 0000018C
	.long 0                                                    // 00000005743C: 00000000
	.ascii "r7"                                                // 000000057440: 3772
	.short 0                                                   // 000000057442: 0000
	.long 0x70312                                              // 000000057444: 00070312
	.long 0x7bb00                                              // 000000057448: 0007BB00
	.long 0                                                    // 00000005744C: 00000000
	.long 0xa0                                                 // 000000057450: 000000A0
	.long 0                                                    // 000000057454: 00000000
	.long 0x439d                                               // 000000057458: 0000439D
	.long 0x70312                                              // 00000005745C: 00070312
	.long 0x7f400                                              // 000000057460: 0007F400
	.long 0                                                    // 000000057464: 00000000
	.long 0xf8                                                 // 000000057468: 000000F8
	.long 0                                                    // 00000005746C: 00000000
	.long 0x4b8e                                               // 000000057470: 00004B8E
	.long 0x70312                                              // 000000057474: 00070312
	.long 0x81900                                              // 000000057478: 00081900
	.long 0                                                    // 00000005747C: 00000000
	.ascii "X"                                                 // 000000057480: 58
	.byte 0                                                    // 000000057481: 00
	.short 0                                                   // 000000057482: 0000
	.long 0                                                    // 000000057484: 00000000
	.long 0x170b                                               // 000000057488: 0000170B
	.long 0x60311                                              // 00000005748C: 00060311
	.ascii "@-"                                                // 000000057490: 2D40
	.short 0x6                                                 // 000000057492: 0006
	.long 0                                                    // 000000057494: 00000000
	.ascii "@"                                                 // 000000057498: 40
	.byte 0                                                    // 000000057499: 00
	.short 0                                                   // 00000005749A: 0000
	.long 0                                                    // 00000005749C: 00000000
	.long 0x17c4                                               // 0000000574A0: 000017C4
	.long 0x60311                                              // 0000000574A4: 00060311
	.ascii "@."                                                // 0000000574A8: 2E40
	.short 0x6                                                 // 0000000574AA: 0006
	.long 0                                                    // 0000000574AC: 00000000
	.ascii "@"                                                 // 0000000574B0: 40
	.byte 0                                                    // 0000000574B1: 00
	.short 0                                                   // 0000000574B2: 0000
	.long 0                                                    // 0000000574B4: 00000000
	.ascii "^1"                                                // 0000000574B8: 315E
	.short 0                                                   // 0000000574BA: 0000
	.long 0x70312                                              // 0000000574BC: 00070312
	.long 0x7a000                                              // 0000000574C0: 0007A000
	.long 0                                                    // 0000000574C4: 00000000
	.long 0xa8                                                 // 0000000574C8: 000000A8
	.long 0                                                    // 0000000574CC: 00000000
	.ascii "];"                                                // 0000000574D0: 3B5D
	.short 0                                                   // 0000000574D2: 0000
	.long 0x60311                                              // 0000000574D4: 00060311
	.long 0x64e80                                              // 0000000574D8: 00064E80
	.long 0                                                    // 0000000574DC: 00000000
	.ascii "@"                                                 // 0000000574E0: 40
	.byte 0                                                    // 0000000574E1: 00
	.short 0                                                   // 0000000574E2: 0000
	.long 0                                                    // 0000000574E4: 00000000
	.long 0x1dc0                                               // 0000000574E8: 00001DC0
	.long 0x70312                                              // 0000000574EC: 00070312
	.long 0x72700                                              // 0000000574F0: 00072700
	.long 0                                                    // 0000000574F4: 00000000
	.ascii "@"                                                 // 0000000574F8: 40
	.byte 0x1                                                  // 0000000574F9: 01
	.short 0                                                   // 0000000574FA: 0000
	.long 0                                                    // 0000000574FC: 00000000
	.long 0x1e0f                                               // 000000057500: 00001E0F
	.long 0x70312                                              // 000000057504: 00070312
	.long 0x72900                                              // 000000057508: 00072900
	.long 0                                                    // 00000005750C: 00000000
	.ascii "H"                                                 // 000000057510: 48
	.byte 0x1                                                  // 000000057511: 01
	.short 0                                                   // 000000057512: 0000
	.long 0                                                    // 000000057514: 00000000
	.long 0x26d3                                               // 000000057518: 000026D3
	.long 0x70312                                              // 00000005751C: 00070312
	.long 0x76100                                              // 000000057520: 00076100
	.long 0                                                    // 000000057524: 00000000
	.ascii "T"                                                 // 000000057528: 54
	.byte 0x1                                                  // 000000057529: 01
	.short 0                                                   // 00000005752A: 0000
	.long 0                                                    // 00000005752C: 00000000
	.ascii "=5"                                                // 000000057530: 353D
	.short 0                                                   // 000000057532: 0000
	.long 0x70312                                              // 000000057534: 00070312
	.long 0x7b300                                              // 000000057538: 0007B300
	.long 0                                                    // 00000005753C: 00000000
	.long 0xa4                                                 // 000000057540: 000000A4
	.long 0                                                    // 000000057544: 00000000
	.ascii "%G"                                                // 000000057548: 4725
	.short 0                                                   // 00000005754A: 0000
	.long 0x60311                                              // 00000005754C: 00060311
	.ascii "@X"                                                // 000000057550: 5840
	.short 0x6                                                 // 000000057552: 0006
	.long 0                                                    // 000000057554: 00000000
	.ascii "@"                                                 // 000000057558: 40
	.byte 0                                                    // 000000057559: 00
	.short 0                                                   // 00000005755A: 0000
	.long 0                                                    // 00000005755C: 00000000
	.long 0x39a                                                // 000000057560: 0000039A
	.long 0x60311                                              // 000000057564: 00060311
	.long 0x61900                                              // 000000057568: 00061900
	.long 0                                                    // 00000005756C: 00000000
	.ascii "@"                                                 // 000000057570: 40
	.byte 0                                                    // 000000057571: 00
	.short 0                                                   // 000000057572: 0000
	.long 0                                                    // 000000057574: 00000000
	.ascii "&"                                                 // 000000057578: 26
	.byte 0x12                                                 // 000000057579: 12
	.short 0                                                   // 00000005757A: 0000
	.long 0x70312                                              // 00000005757C: 00070312
	.long 0x6e400                                              // 000000057580: 0006E400
	.long 0                                                    // 000000057584: 00000000
	.long 0xfc                                                 // 000000057588: 000000FC
	.long 0                                                    // 00000005758C: 00000000
	.ascii "K"                                                 // 000000057590: 4B
	.byte 0x15                                                 // 000000057591: 15
	.short 0                                                   // 000000057592: 0000
	.long 0x60311                                              // 000000057594: 00060311
	.long 0x62ac0                                              // 000000057598: 00062AC0
	.long 0                                                    // 00000005759C: 00000000
	.ascii "@"                                                 // 0000000575A0: 40
	.byte 0                                                    // 0000000575A1: 00
	.short 0                                                   // 0000000575A2: 0000
	.long 0                                                    // 0000000575A4: 00000000
	.long 0x16c1                                               // 0000000575A8: 000016C1
	.long 0x70312                                              // 0000000575AC: 00070312
	.long 0x6ff00                                              // 0000000575B0: 0006FF00
	.long 0                                                    // 0000000575B4: 00000000
	.long 0x90                                                 // 0000000575B8: 00000090
	.long 0                                                    // 0000000575BC: 00000000
	.long 0xa0d                                                // 0000000575C0: 00000A0D
	.long 0x70312                                              // 0000000575C4: 00070312
	.long 0x6ac00                                              // 0000000575C8: 0006AC00
	.long 0                                                    // 0000000575CC: 00000000
	.long 0x1a8                                                // 0000000575D0: 000001A8
	.long 0                                                    // 0000000575D4: 00000000
	.long 0xdf0                                                // 0000000575D8: 00000DF0
	.long 0x70312                                              // 0000000575DC: 00070312
	.long 0x6c500                                              // 0000000575E0: 0006C500
	.long 0                                                    // 0000000575E4: 00000000
	.ascii "@"                                                 // 0000000575E8: 40
	.byte 0x1                                                  // 0000000575E9: 01
	.short 0                                                   // 0000000575EA: 0000
	.long 0                                                    // 0000000575EC: 00000000
	.ascii "z"                                                 // 0000000575F0: 7A
	.byte 0xf                                                  // 0000000575F1: 0F
	.short 0                                                   // 0000000575F2: 0000
	.long 0x60311                                              // 0000000575F4: 00060311
	.long 0x62480                                              // 0000000575F8: 00062480
	.long 0                                                    // 0000000575FC: 00000000
	.ascii "@"                                                 // 000000057600: 40
	.byte 0                                                    // 000000057601: 00
	.short 0                                                   // 000000057602: 0000
	.long 0                                                    // 000000057604: 00000000
	.long 0x1a8b                                               // 000000057608: 00001A8B
	.long 0x60311                                              // 00000005760C: 00060311
	.long 0x63100                                              // 000000057610: 00063100
	.long 0                                                    // 000000057614: 00000000
	.ascii "@"                                                 // 000000057618: 40
	.byte 0                                                    // 000000057619: 00
	.short 0                                                   // 00000005761A: 0000
	.long 0                                                    // 00000005761C: 00000000
	.long 0x44f5                                               // 000000057620: 000044F5
	.long 0x60311                                              // 000000057624: 00060311
	.long 0x65680                                              // 000000057628: 00065680
	.long 0                                                    // 00000005762C: 00000000
	.ascii "@"                                                 // 000000057630: 40
	.byte 0                                                    // 000000057631: 00
	.short 0                                                   // 000000057632: 0000
	.long 0                                                    // 000000057634: 00000000
	.long 0x3e84                                               // 000000057638: 00003E84
	.long 0x70312                                              // 00000005763C: 00070312
	.long 0x7dc00                                              // 000000057640: 0007DC00
	.long 0                                                    // 000000057644: 00000000
	.ascii "\\"                                                // 000000057648: 5C
	.byte 0x1                                                  // 000000057649: 01
	.short 0                                                   // 00000005764A: 0000
	.long 0                                                    // 00000005764C: 00000000
	.long 0x5c4                                                // 000000057650: 000005C4
	.long 0x70312                                              // 000000057654: 00070312
	.long 0x69100                                              // 000000057658: 00069100
	.long 0                                                    // 00000005765C: 00000000
	.ascii "H"                                                 // 000000057660: 48
	.byte 0x1                                                  // 000000057661: 01
	.short 0                                                   // 000000057662: 0000
	.long 0                                                    // 000000057664: 00000000
	.long 0xf10                                                // 000000057668: 00000F10
	.long 0x70312                                              // 00000005766C: 00070312
	.long 0x6cd00                                              // 000000057670: 0006CD00
	.long 0                                                    // 000000057674: 00000000
	.ascii "h"                                                 // 000000057678: 68
	.byte 0x1                                                  // 000000057679: 01
	.short 0                                                   // 00000005767A: 0000
	.long 0                                                    // 00000005767C: 00000000
	.long 0x3007                                               // 000000057680: 00003007
	.long 0x60311                                              // 000000057684: 00060311
	.long 0x64380                                              // 000000057688: 00064380
	.long 0                                                    // 00000005768C: 00000000
	.ascii "@"                                                 // 000000057690: 40
	.byte 0                                                    // 000000057691: 00
	.short 0                                                   // 000000057692: 0000
	.long 0                                                    // 000000057694: 00000000
	.ascii "eH"                                                // 000000057698: 4865
	.short 0                                                   // 00000005769A: 0000
	.long 0x70312                                              // 00000005769C: 00070312
	.long 0x80a00                                              // 0000000576A0: 00080A00
	.long 0                                                    // 0000000576A4: 00000000
	.ascii "$"                                                 // 0000000576A8: 24
	.byte 0x1                                                  // 0000000576A9: 01
	.short 0                                                   // 0000000576AA: 0000
	.long 0                                                    // 0000000576AC: 00000000
	.long 0x3281                                               // 0000000576B0: 00003281
	.long 0x70312                                              // 0000000576B4: 00070312
	.long 0x7a500                                              // 0000000576B8: 0007A500
	.long 0                                                    // 0000000576BC: 00000000
	.ascii "L"                                                 // 0000000576C0: 4C
	.byte 0                                                    // 0000000576C1: 00
	.short 0                                                   // 0000000576C2: 0000
	.long 0                                                    // 0000000576C4: 00000000
	.ascii "0\n"                                               // 0000000576C8: 0A30
	.short 0                                                   // 0000000576CA: 0000
	.long 0x60311                                              // 0000000576CC: 00060311
	.long 0x61f80                                              // 0000000576D0: 00061F80
	.long 0                                                    // 0000000576D4: 00000000
	.ascii "@"                                                 // 0000000576D8: 40
	.byte 0                                                    // 0000000576D9: 00
	.short 0                                                   // 0000000576DA: 0000
	.long 0                                                    // 0000000576DC: 00000000
	.long 0xe11                                                // 0000000576E0: 00000E11
	.long 0x60311                                              // 0000000576E4: 00060311
	.ascii "@#"                                                // 0000000576E8: 2340
	.short 0x6                                                 // 0000000576EA: 0006
	.long 0                                                    // 0000000576EC: 00000000
	.ascii "@"                                                 // 0000000576F0: 40
	.byte 0                                                    // 0000000576F1: 00
	.short 0                                                   // 0000000576F2: 0000
	.long 0                                                    // 0000000576F4: 00000000
	.long 0x2da7                                               // 0000000576F8: 00002DA7
	.long 0x60311                                              // 0000000576FC: 00060311
	.long 0x64100                                              // 000000057700: 00064100
	.long 0                                                    // 000000057704: 00000000
	.ascii "@"                                                 // 000000057708: 40
	.byte 0                                                    // 000000057709: 00
	.short 0                                                   // 00000005770A: 0000
	.long 0                                                    // 00000005770C: 00000000
	.long 0x38a4                                               // 000000057710: 000038A4
	.long 0x70312                                              // 000000057714: 00070312
	.long 0x7c000                                              // 000000057718: 0007C000
	.long 0                                                    // 00000005771C: 00000000
	.long 0xd4                                                 // 000000057720: 000000D4
	.long 0                                                    // 000000057724: 00000000
	.ascii "O"                                                 // 000000057728: 4F
	.byte 0x13                                                 // 000000057729: 13
	.short 0                                                   // 00000005772A: 0000
	.long 0x60311                                              // 00000005772C: 00060311
	.ascii "@("                                                // 000000057730: 2840
	.short 0x6                                                 // 000000057732: 0006
	.long 0                                                    // 000000057734: 00000000
	.ascii "@"                                                 // 000000057738: 40
	.byte 0                                                    // 000000057739: 00
	.short 0                                                   // 00000005773A: 0000
	.long 0                                                    // 00000005773C: 00000000
	.long 0x24ec                                               // 000000057740: 000024EC
	.long 0x60311                                              // 000000057744: 00060311
	.long 0x639c0                                              // 000000057748: 000639C0
	.long 0                                                    // 00000005774C: 00000000
	.ascii "@"                                                 // 000000057750: 40
	.byte 0                                                    // 000000057751: 00
	.short 0                                                   // 000000057752: 0000
	.long 0                                                    // 000000057754: 00000000
	.ascii "18"                                                // 000000057758: 3831
	.short 0                                                   // 00000005775A: 0000
	.long 0x60311                                              // 00000005775C: 00060311
	.long 0x64bc0                                              // 000000057760: 00064BC0
	.long 0                                                    // 000000057764: 00000000
	.ascii "@"                                                 // 000000057768: 40
	.byte 0                                                    // 000000057769: 00
	.short 0                                                   // 00000005776A: 0000
	.long 0                                                    // 00000005776C: 00000000
	.ascii "Y>"                                                // 000000057770: 3E59
	.short 0                                                   // 000000057772: 0000
	.long 0x60311                                              // 000000057774: 00060311
	.long 0x65100                                              // 000000057778: 00065100
	.long 0                                                    // 00000005777C: 00000000
	.ascii "@"                                                 // 000000057780: 40
	.byte 0                                                    // 000000057781: 00
	.short 0                                                   // 000000057782: 0000
	.long 0                                                    // 000000057784: 00000000
	.long 0x21f                                                // 000000057788: 0000021F
	.long 0x60311                                              // 00000005778C: 00060311
	.long 0x617c0                                              // 000000057790: 000617C0
	.long 0                                                    // 000000057794: 00000000
	.ascii "@"                                                 // 000000057798: 40
	.byte 0                                                    // 000000057799: 00
	.short 0                                                   // 00000005779A: 0000
	.long 0                                                    // 00000005779C: 00000000
	.long 0xbb6                                                // 0000000577A0: 00000BB6
	.long 0x60311                                              // 0000000577A4: 00060311
	.long 0x62100                                              // 0000000577A8: 00062100
	.long 0                                                    // 0000000577AC: 00000000
	.ascii "@"                                                 // 0000000577B0: 40
	.byte 0                                                    // 0000000577B1: 00
	.short 0                                                   // 0000000577B2: 0000
	.long 0                                                    // 0000000577B4: 00000000
	.long 0x1ab8                                               // 0000000577B8: 00001AB8
	.long 0x70312                                              // 0000000577BC: 00070312
	.long 0x71800                                              // 0000000577C0: 00071800
	.long 0                                                    // 0000000577C4: 00000000
	.ascii " "                                                 // 0000000577C8: 20
	.byte 0x1                                                  // 0000000577C9: 01
	.short 0                                                   // 0000000577CA: 0000
	.long 0                                                    // 0000000577CC: 00000000
	.ascii "\"E"                                               // 0000000577D0: 4522
	.short 0                                                   // 0000000577D2: 0000
	.long 0x70312                                              // 0000000577D4: 00070312
	.long 0x7fb00                                              // 0000000577D8: 0007FB00
	.long 0                                                    // 0000000577DC: 00000000
	.long 0xf8                                                 // 0000000577E0: 000000F8
	.long 0                                                    // 0000000577E4: 00000000
	.long 0x488a                                               // 0000000577E8: 0000488A
	.long 0x60311                                              // 0000000577EC: 00060311
	.long 0x65980                                              // 0000000577F0: 00065980
	.long 0                                                    // 0000000577F4: 00000000
	.ascii "@"                                                 // 0000000577F8: 40
	.byte 0                                                    // 0000000577F9: 00
	.short 0                                                   // 0000000577FA: 0000
	.long 0                                                    // 0000000577FC: 00000000
	.ascii "v"                                                 // 000000057800: 76
	.byte 0x1                                                  // 000000057801: 01
	.short 0                                                   // 000000057802: 0000
	.long 0x70312                                              // 000000057804: 00070312
	.long 0x67c00                                              // 000000057808: 00067C00
	.long 0                                                    // 00000005780C: 00000000
	.long 0xf0                                                 // 000000057810: 000000F0
	.long 0                                                    // 000000057814: 00000000
	.long 0x6b8                                                // 000000057818: 000006B8
	.long 0x70312                                              // 00000005781C: 00070312
	.long 0x69600                                              // 000000057820: 00069600
	.long 0                                                    // 000000057824: 00000000
	.long 0xf4                                                 // 000000057828: 000000F4
	.long 0                                                    // 00000005782C: 00000000
	.ascii "_/"                                                // 000000057830: 2F5F
	.short 0                                                   // 000000057832: 0000
	.long 0x60311                                              // 000000057834: 00060311
	.long 0x642c0                                              // 000000057838: 000642C0
	.long 0                                                    // 00000005783C: 00000000
	.ascii "@"                                                 // 000000057840: 40
	.byte 0                                                    // 000000057841: 00
	.short 0                                                   // 000000057842: 0000
	.long 0                                                    // 000000057844: 00000000
	.long 0x3512                                               // 000000057848: 00003512
	.long 0x60311                                              // 00000005784C: 00060311
	.ascii "@I"                                                // 000000057850: 4940
	.short 0x6                                                 // 000000057852: 0006
	.long 0                                                    // 000000057854: 00000000
	.ascii "@"                                                 // 000000057858: 40
	.byte 0                                                    // 000000057859: 00
	.short 0                                                   // 00000005785A: 0000
	.long 0                                                    // 00000005785C: 00000000
	.long 0x2ff                                                // 000000057860: 000002FF
	.long 0x60311                                              // 000000057864: 00060311
	.long 0x61880                                              // 000000057868: 00061880
	.long 0                                                    // 00000005786C: 00000000
	.ascii "@"                                                 // 000000057870: 40
	.byte 0                                                    // 000000057871: 00
	.short 0                                                   // 000000057872: 0000
	.long 0                                                    // 000000057874: 00000000
	.long 0xcc8                                                // 000000057878: 00000CC8
	.long 0x60311                                              // 00000005787C: 00060311
	.long 0x62200                                              // 000000057880: 00062200
	.long 0                                                    // 000000057884: 00000000
	.ascii "@"                                                 // 000000057888: 40
	.byte 0                                                    // 000000057889: 00
	.short 0                                                   // 00000005788A: 0000
	.long 0                                                    // 00000005788C: 00000000
	.long 0xcec                                                // 000000057890: 00000CEC
	.long 0x70312                                              // 000000057894: 00070312
	.long 0x6bd00                                              // 000000057898: 0006BD00
	.long 0                                                    // 00000005789C: 00000000
	.long 0x104                                                // 0000000578A0: 00000104
	.long 0                                                    // 0000000578A4: 00000000
	.long 0x309d                                               // 0000000578A8: 0000309D
	.long 0x60311                                              // 0000000578AC: 00060311
	.ascii "@D"                                                // 0000000578B0: 4440
	.short 0x6                                                 // 0000000578B2: 0006
	.long 0                                                    // 0000000578B4: 00000000
	.ascii "@"                                                 // 0000000578B8: 40
	.byte 0                                                    // 0000000578B9: 00
	.short 0                                                   // 0000000578BA: 0000
	.long 0                                                    // 0000000578BC: 00000000
	.ascii "/A"                                                // 0000000578C0: 412F
	.short 0                                                   // 0000000578C2: 0000
	.long 0x70312                                              // 0000000578C4: 00070312
	.long 0x7e900                                              // 0000000578C8: 0007E900
	.long 0                                                    // 0000000578CC: 00000000
	.ascii "8"                                                 // 0000000578D0: 38
	.byte 0x1                                                  // 0000000578D1: 01
	.short 0                                                   // 0000000578D2: 0000
	.long 0                                                    // 0000000578D4: 00000000
	.ascii "#I"                                                // 0000000578D8: 4923
	.short 0                                                   // 0000000578DA: 0000
	.long 0x60311                                              // 0000000578DC: 00060311
	.long 0x65a00                                              // 0000000578E0: 00065A00
	.long 0                                                    // 0000000578E4: 00000000
	.ascii "@"                                                 // 0000000578E8: 40
	.byte 0                                                    // 0000000578E9: 00
	.short 0                                                   // 0000000578EA: 0000
	.long 0                                                    // 0000000578EC: 00000000
	.ascii "y"                                                 // 0000000578F0: 79
	.byte 0x7                                                  // 0000000578F1: 07
	.short 0                                                   // 0000000578F2: 0000
	.long 0x70312                                              // 0000000578F4: 00070312
	.long 0x69a00                                              // 0000000578F8: 00069A00
	.long 0                                                    // 0000000578FC: 00000000
	.long 0xf8                                                 // 000000057900: 000000F8
	.long 0                                                    // 000000057904: 00000000
	.long 0xbd8                                                // 000000057908: 00000BD8
	.long 0x70312                                              // 00000005790C: 00070312
	.long 0x6b600                                              // 000000057910: 0006B600
	.long 0                                                    // 000000057914: 00000000
	.ascii "l"                                                 // 000000057918: 6C
	.byte 0x1                                                  // 000000057919: 01
	.short 0                                                   // 00000005791A: 0000
	.long 0                                                    // 00000005791C: 00000000
	.ascii ". "                                                // 000000057920: 202E
	.short 0                                                   // 000000057922: 0000
	.long 0x60311                                              // 000000057924: 00060311
	.long 0x635c0                                              // 000000057928: 000635C0
	.long 0                                                    // 00000005792C: 00000000
	.ascii "@"                                                 // 000000057930: 40
	.byte 0                                                    // 000000057931: 00
	.short 0                                                   // 000000057932: 0000
	.long 0                                                    // 000000057934: 00000000
	.ascii "9%"                                                // 000000057938: 2539
	.short 0                                                   // 00000005793A: 0000
	.long 0x60311                                              // 00000005793C: 00060311
	.long 0x63a00                                              // 000000057940: 00063A00
	.long 0                                                    // 000000057944: 00000000
	.ascii "@"                                                 // 000000057948: 40
	.byte 0                                                    // 000000057949: 00
	.short 0                                                   // 00000005794A: 0000
	.long 0                                                    // 00000005794C: 00000000
	.long 0x320f                                               // 000000057950: 0000320F
	.long 0x70312                                              // 000000057954: 00070312
	.long 0x7a300                                              // 000000057958: 0007A300
	.long 0                                                    // 00000005795C: 00000000
	.long 0x9c                                                 // 000000057960: 0000009C
	.long 0                                                    // 000000057964: 00000000
	.ascii " <"                                                // 000000057968: 3C20
	.short 0                                                   // 00000005796A: 0000
	.long 0x70312                                              // 00000005796C: 00070312
	.long 0x7cd00                                              // 000000057970: 0007CD00
	.long 0                                                    // 000000057974: 00000000
	.long 0xb4                                                 // 000000057978: 000000B4
	.long 0                                                    // 00000005797C: 00000000
	.long 0x4594                                               // 000000057980: 00004594
	.long 0x60311                                              // 000000057984: 00060311
	.long 0x65700                                              // 000000057988: 00065700
	.long 0                                                    // 00000005798C: 00000000
	.ascii "@"                                                 // 000000057990: 40
	.byte 0                                                    // 000000057991: 00
	.short 0                                                   // 000000057992: 0000
	.long 0                                                    // 000000057994: 00000000
	.long 0x83                                                 // 000000057998: 00000083
	.long 0x60311                                              // 00000005799C: 00060311
	.long 0x615c0                                              // 0000000579A0: 000615C0
	.long 0                                                    // 0000000579A4: 00000000
	.ascii "@"                                                 // 0000000579A8: 40
	.byte 0                                                    // 0000000579A9: 00
	.short 0                                                   // 0000000579AA: 0000
	.long 0                                                    // 0000000579AC: 00000000
	.long 0x798                                                // 0000000579B0: 00000798
	.long 0x60311                                              // 0000000579B4: 00060311
	.long 0x61d00                                              // 0000000579B8: 00061D00
	.long 0                                                    // 0000000579BC: 00000000
	.ascii "@"                                                 // 0000000579C0: 40
	.byte 0                                                    // 0000000579C1: 00
	.short 0                                                   // 0000000579C2: 0000
	.long 0                                                    // 0000000579C4: 00000000
	.ascii "F/"                                                // 0000000579C8: 2F46
	.short 0                                                   // 0000000579CA: 0000
	.long 0x70312                                              // 0000000579CC: 00070312
	.long 0x79600                                              // 0000000579D0: 00079600
	.long 0                                                    // 0000000579D4: 00000000
	.ascii "h"                                                 // 0000000579D8: 68
	.byte 0                                                    // 0000000579D9: 00
	.short 0                                                   // 0000000579DA: 0000
	.long 0                                                    // 0000000579DC: 00000000
	.long 0x37c5                                               // 0000000579E0: 000037C5
	.long 0x70312                                              // 0000000579E4: 00070312
	.long 0x7bc00                                              // 0000000579E8: 0007BC00
	.long 0                                                    // 0000000579EC: 00000000
	.long 0x94                                                 // 0000000579F0: 00000094
	.long 0                                                    // 0000000579F4: 00000000
	.long 0x38ef                                               // 0000000579F8: 000038EF
	.long 0x70312                                              // 0000000579FC: 00070312
	.long 0x7c100                                              // 000000057A00: 0007C100
	.long 0                                                    // 000000057A04: 00000000
	.long 0xec                                                 // 000000057A08: 000000EC
	.long 0                                                    // 000000057A0C: 00000000
	.long 0x1ae1                                               // 000000057A10: 00001AE1
	.long 0x60311                                              // 000000057A14: 00060311
	.ascii "@1"                                                // 000000057A18: 3140
	.short 0x6                                                 // 000000057A1A: 0006
	.long 0                                                    // 000000057A1C: 00000000
	.ascii "@"                                                 // 000000057A20: 40
	.byte 0                                                    // 000000057A21: 00
	.short 0                                                   // 000000057A22: 0000
	.long 0                                                    // 000000057A24: 00000000
	.long 0x328e                                               // 000000057A28: 0000328E
	.long 0x60311                                              // 000000057A2C: 00060311
	.long 0x64680                                              // 000000057A30: 00064680
	.long 0                                                    // 000000057A34: 00000000
	.ascii "@"                                                 // 000000057A38: 40
	.byte 0                                                    // 000000057A39: 00
	.short 0                                                   // 000000057A3A: 0000
	.long 0                                                    // 000000057A3C: 00000000
	.long 0x3b11                                               // 000000057A40: 00003B11
	.long 0x60311                                              // 000000057A44: 00060311
	.ascii "@N"                                                // 000000057A48: 4E40
	.short 0x6                                                 // 000000057A4A: 0006
	.long 0                                                    // 000000057A4C: 00000000
	.ascii "@"                                                 // 000000057A50: 40
	.byte 0                                                    // 000000057A51: 00
	.short 0                                                   // 000000057A52: 0000
	.long 0                                                    // 000000057A54: 00000000
	.long 0xb97                                                // 000000057A58: 00000B97
	.long 0x70312                                              // 000000057A5C: 00070312
	.long 0x6b500                                              // 000000057A60: 0006B500
	.long 0                                                    // 000000057A64: 00000000
	.long 0xf4                                                 // 000000057A68: 000000F4
	.long 0                                                    // 000000057A6C: 00000000
	.ascii "\\"                                                // 000000057A70: 5C
	.byte 0xd                                                  // 000000057A71: 0D
	.short 0                                                   // 000000057A72: 0000
	.long 0x70312                                              // 000000057A74: 00070312
	.long 0x6c100                                              // 000000057A78: 0006C100
	.long 0                                                    // 000000057A7C: 00000000
	.ascii "@"                                                 // 000000057A80: 40
	.byte 0x1                                                  // 000000057A81: 01
	.short 0                                                   // 000000057A82: 0000
	.long 0                                                    // 000000057A84: 00000000
	.ascii "b"                                                 // 000000057A88: 62
	.byte 0x18                                                 // 000000057A89: 18
	.short 0                                                   // 000000057A8A: 0000
	.long 0x60311                                              // 000000057A8C: 00060311
	.long 0x62f00                                              // 000000057A90: 00062F00
	.long 0                                                    // 000000057A94: 00000000
	.ascii "@"                                                 // 000000057A98: 40
	.byte 0                                                    // 000000057A99: 00
	.short 0                                                   // 000000057A9A: 0000
	.long 0                                                    // 000000057A9C: 00000000
	.long 0x2289                                               // 000000057AA0: 00002289
	.long 0x60311                                              // 000000057AA4: 00060311
	.long 0x637c0                                              // 000000057AA8: 000637C0
	.long 0                                                    // 000000057AAC: 00000000
	.ascii "@"                                                 // 000000057AB0: 40
	.byte 0                                                    // 000000057AB1: 00
	.short 0                                                   // 000000057AB2: 0000
	.long 0                                                    // 000000057AB4: 00000000
	.ascii "A0"                                                // 000000057AB8: 3041
	.short 0                                                   // 000000057ABA: 0000
	.long 0x60311                                              // 000000057ABC: 00060311
	.long 0x643c0                                              // 000000057AC0: 000643C0
	.long 0                                                    // 000000057AC4: 00000000
	.ascii "@"                                                 // 000000057AC8: 40
	.byte 0                                                    // 000000057AC9: 00
	.short 0                                                   // 000000057ACA: 0000
	.long 0                                                    // 000000057ACC: 00000000
	.long 0x3baa                                               // 000000057AD0: 00003BAA
	.long 0x60311                                              // 000000057AD4: 00060311
	.long 0x64ec0                                              // 000000057AD8: 00064EC0
	.long 0                                                    // 000000057ADC: 00000000
	.ascii "@"                                                 // 000000057AE0: 40
	.byte 0                                                    // 000000057AE1: 00
	.short 0                                                   // 000000057AE2: 0000
	.long 0                                                    // 000000057AE4: 00000000
	.long 0x3fd0                                               // 000000057AE8: 00003FD0
	.long 0x60311                                              // 000000057AEC: 00060311
	.ascii "@R"                                                // 000000057AF0: 5240
	.short 0x6                                                 // 000000057AF2: 0006
	.long 0                                                    // 000000057AF4: 00000000
	.ascii "@"                                                 // 000000057AF8: 40
	.byte 0                                                    // 000000057AF9: 00
	.short 0                                                   // 000000057AFA: 0000
	.long 0                                                    // 000000057AFC: 00000000
	.ascii "f"                                                 // 000000057B00: 66
	.byte 0x14                                                 // 000000057B01: 14
	.short 0                                                   // 000000057B02: 0000
	.long 0x60311                                              // 000000057B04: 00060311
	.long 0x62980                                              // 000000057B08: 00062980
	.long 0                                                    // 000000057B0C: 00000000
	.ascii "@"                                                 // 000000057B10: 40
	.byte 0                                                    // 000000057B11: 00
	.short 0                                                   // 000000057B12: 0000
	.long 0                                                    // 000000057B14: 00000000
	.ascii "U#"                                                // 000000057B18: 2355
	.short 0                                                   // 000000057B1A: 0000
	.long 0x70312                                              // 000000057B1C: 00070312
	.long 0x74900                                              // 000000057B20: 00074900
	.long 0                                                    // 000000057B24: 00000000
	.long 0x1c4                                                // 000000057B28: 000001C4
	.long 0                                                    // 000000057B2C: 00000000
	.long 0x2fb4                                               // 000000057B30: 00002FB4
	.long 0x70312                                              // 000000057B34: 00070312
	.long 0x79800                                              // 000000057B38: 00079800
	.long 0                                                    // 000000057B3C: 00000000
	.ascii "l"                                                 // 000000057B40: 6C
	.byte 0                                                    // 000000057B41: 00
	.short 0                                                   // 000000057B42: 0000
	.long 0                                                    // 000000057B44: 00000000
	.ascii "J2"                                                // 000000057B48: 324A
	.short 0                                                   // 000000057B4A: 0000
	.long 0x70312                                              // 000000057B4C: 00070312
	.long 0x7a400                                              // 000000057B50: 0007A400
	.long 0                                                    // 000000057B54: 00000000
	.long 0x9c                                                 // 000000057B58: 0000009C
	.long 0                                                    // 000000057B5C: 00000000
	.long 0x4202                                               // 000000057B60: 00004202
	.long 0x70312                                              // 000000057B64: 00070312
	.long 0x7ed00                                              // 000000057B68: 0007ED00
	.long 0                                                    // 000000057B6C: 00000000
	.long 0xf0                                                 // 000000057B70: 000000F0
	.long 0                                                    // 000000057B74: 00000000
	.ascii "V\n"                                               // 000000057B78: 0A56
	.short 0                                                   // 000000057B7A: 0000
	.long 0x70312                                              // 000000057B7C: 00070312
	.long 0x6ae00                                              // 000000057B80: 0006AE00
	.long 0                                                    // 000000057B84: 00000000
	.long 0x1ac                                                // 000000057B88: 000001AC
	.long 0                                                    // 000000057B8C: 00000000
	.long 0x13d6                                               // 000000057B90: 000013D6
	.long 0x60311                                              // 000000057B94: 00060311
	.long 0x628c0                                              // 000000057B98: 000628C0
	.long 0                                                    // 000000057B9C: 00000000
	.ascii "@"                                                 // 000000057BA0: 40
	.byte 0                                                    // 000000057BA1: 00
	.short 0                                                   // 000000057BA2: 0000
	.long 0                                                    // 000000057BA4: 00000000
	.long 0x15ea                                               // 000000057BA8: 000015EA
	.long 0x60311                                              // 000000057BAC: 00060311
	.long 0x62bc0                                              // 000000057BB0: 00062BC0
	.long 0                                                    // 000000057BB4: 00000000
	.ascii "@"                                                 // 000000057BB8: 40
	.byte 0                                                    // 000000057BB9: 00
	.short 0                                                   // 000000057BBA: 0000
	.long 0                                                    // 000000057BBC: 00000000
	.long 0x1f00                                               // 000000057BC0: 00001F00
	.long 0x60311                                              // 000000057BC4: 00060311
	.long 0x634c0                                              // 000000057BC8: 000634C0
	.long 0                                                    // 000000057BCC: 00000000
	.ascii "@"                                                 // 000000057BD0: 40
	.byte 0                                                    // 000000057BD1: 00
	.short 0                                                   // 000000057BD2: 0000
	.long 0                                                    // 000000057BD4: 00000000
	.ascii "D("                                                // 000000057BD8: 2844
	.short 0                                                   // 000000057BDA: 0000
	.long 0x60311                                              // 000000057BDC: 00060311
	.long 0x63c80                                              // 000000057BE0: 00063C80
	.long 0                                                    // 000000057BE4: 00000000
	.ascii "@"                                                 // 000000057BE8: 40
	.byte 0                                                    // 000000057BE9: 00
	.short 0                                                   // 000000057BEA: 0000
	.long 0                                                    // 000000057BEC: 00000000
	.ascii "ED"                                                // 000000057BF0: 4445
	.short 0                                                   // 000000057BF2: 0000
	.long 0x70312                                              // 000000057BF4: 00070312
	.long 0x7f700                                              // 000000057BF8: 0007F700
	.long 0                                                    // 000000057BFC: 00000000
	.long 0x100                                                // 000000057C00: 00000100
	.long 0                                                    // 000000057C04: 00000000
	.long 0x4ba4                                               // 000000057C08: 00004BA4
	.long 0x60311                                              // 000000057C0C: 00060311
	.long 0x65cc0                                              // 000000057C10: 00065CC0
	.long 0                                                    // 000000057C14: 00000000
	.ascii "@"                                                 // 000000057C18: 40
	.byte 0                                                    // 000000057C19: 00
	.short 0                                                   // 000000057C1A: 0000
	.long 0                                                    // 000000057C1C: 00000000
	.long 0x4c1f                                               // 000000057C20: 00004C1F
	.long 0x70312                                              // 000000057C24: 00070312
	.long 0x81c00                                              // 000000057C28: 00081C00
	.long 0                                                    // 000000057C2C: 00000000
	.ascii "X"                                                 // 000000057C30: 58
	.byte 0                                                    // 000000057C31: 00
	.short 0                                                   // 000000057C32: 0000
	.long 0                                                    // 000000057C34: 00000000
	.ascii "x\n"                                               // 000000057C38: 0A78
	.short 0                                                   // 000000057C3A: 0000
	.long 0x60311                                              // 000000057C3C: 00060311
	.long 0x61fc0                                              // 000000057C40: 00061FC0
	.long 0                                                    // 000000057C44: 00000000
	.ascii "@"                                                 // 000000057C48: 40
	.byte 0                                                    // 000000057C49: 00
	.short 0                                                   // 000000057C4A: 0000
	.long 0                                                    // 000000057C4C: 00000000
	.long 0x2f11                                               // 000000057C50: 00002F11
	.long 0x70312                                              // 000000057C54: 00070312
	.long 0x79500                                              // 000000057C58: 00079500
	.long 0                                                    // 000000057C5C: 00000000
	.ascii "d"                                                 // 000000057C60: 64
	.byte 0                                                    // 000000057C61: 00
	.short 0                                                   // 000000057C62: 0000
	.long 0                                                    // 000000057C64: 00000000
	.long 0x3a07                                               // 000000057C68: 00003A07
	.long 0x70312                                              // 000000057C6C: 00070312
	.long 0x7c500                                              // 000000057C70: 0007C500
	.long 0                                                    // 000000057C74: 00000000
	.long 0xa4                                                 // 000000057C78: 000000A4
	.long 0                                                    // 000000057C7C: 00000000
	.ascii "W7"                                                // 000000057C80: 3757
	.short 0                                                   // 000000057C82: 0000
	.long 0x60311                                              // 000000057C84: 00060311
	.long 0x64b00                                              // 000000057C88: 00064B00
	.long 0                                                    // 000000057C8C: 00000000
	.ascii "@"                                                 // 000000057C90: 40
	.byte 0                                                    // 000000057C91: 00
	.short 0                                                   // 000000057C92: 0000
	.long 0                                                    // 000000057C94: 00000000
	.long 0x4a8e                                               // 000000057C98: 00004A8E
	.long 0x60311                                              // 000000057C9C: 00060311
	.long 0x65b80                                              // 000000057CA0: 00065B80
	.long 0                                                    // 000000057CA4: 00000000
	.ascii "@"                                                 // 000000057CA8: 40
	.byte 0                                                    // 000000057CA9: 00
	.short 0                                                   // 000000057CAA: 0000
	.long 0                                                    // 000000057CAC: 00000000
	.ascii "VL"                                                // 000000057CB0: 4C56
	.short 0                                                   // 000000057CB2: 0000
	.long 0x70312                                              // 000000057CB4: 00070312
	.long 0x81d00                                              // 000000057CB8: 00081D00
	.long 0                                                    // 000000057CBC: 00000000
	.ascii "D"                                                 // 000000057CC0: 44
	.byte 0                                                    // 000000057CC1: 00
	.short 0                                                   // 000000057CC2: 0000
	.long 0                                                    // 000000057CC4: 00000000
	.long 0x5a0                                                // 000000057CC8: 000005A0
	.long 0x60311                                              // 000000057CCC: 00060311
	.long 0x61b00                                              // 000000057CD0: 00061B00
	.long 0                                                    // 000000057CD4: 00000000
	.ascii "@"                                                 // 000000057CD8: 40
	.byte 0                                                    // 000000057CD9: 00
	.short 0                                                   // 000000057CDA: 0000
	.long 0                                                    // 000000057CDC: 00000000
	.long 0x715                                                // 000000057CE0: 00000715
	.long 0x60311                                              // 000000057CE4: 00060311
	.long 0x61c80                                              // 000000057CE8: 00061C80
	.long 0                                                    // 000000057CEC: 00000000
	.ascii "@"                                                 // 000000057CF0: 40
	.byte 0                                                    // 000000057CF1: 00
	.short 0                                                   // 000000057CF2: 0000
	.long 0                                                    // 000000057CF4: 00000000
	.long 0xdcc                                                // 000000057CF8: 00000DCC
	.long 0x60311                                              // 000000057CFC: 00060311
	.long 0x62300                                              // 000000057D00: 00062300
	.long 0                                                    // 000000057D04: 00000000
	.ascii "@"                                                 // 000000057D08: 40
	.byte 0                                                    // 000000057D09: 00
	.short 0                                                   // 000000057D0A: 0000
	.long 0                                                    // 000000057D0C: 00000000
	.long 0x1607                                               // 000000057D10: 00001607
	.long 0x70312                                              // 000000057D14: 00070312
	.long 0x6fb00                                              // 000000057D18: 0006FB00
	.long 0                                                    // 000000057D1C: 00000000
	.ascii "p"                                                 // 000000057D20: 70
	.byte 0                                                    // 000000057D21: 00
	.short 0                                                   // 000000057D22: 0000
	.long 0                                                    // 000000057D24: 00000000
	.long 0x1be5                                               // 000000057D28: 00001BE5
	.long 0x60311                                              // 000000057D2C: 00060311
	.long 0x63200                                              // 000000057D30: 00063200
	.long 0                                                    // 000000057D34: 00000000
	.ascii "@"                                                 // 000000057D38: 40
	.byte 0                                                    // 000000057D39: 00
	.short 0                                                   // 000000057D3A: 0000
	.long 0                                                    // 000000057D3C: 00000000
	.ascii "U "                                                // 000000057D40: 2055
	.short 0                                                   // 000000057D42: 0000
	.long 0x70312                                              // 000000057D44: 00070312
	.long 0x73500                                              // 000000057D48: 00073500
	.long 0                                                    // 000000057D4C: 00000000
	.ascii "T"                                                 // 000000057D50: 54
	.byte 0x1                                                  // 000000057D51: 01
	.short 0                                                   // 000000057D52: 0000
	.long 0                                                    // 000000057D54: 00000000
	.long 0x14                                                 // 000000057D58: 00000014
	.long 0x70312                                              // 000000057D5C: 00070312
	.long 0x67100                                              // 000000057D60: 00067100
	.long 0                                                    // 000000057D64: 00000000
	.long 0xf0                                                 // 000000057D68: 000000F0
	.long 0                                                    // 000000057D6C: 00000000
	.long 0x2b04                                               // 000000057D70: 00002B04
	.long 0x60311                                              // 000000057D74: 00060311
	.long 0x63ec0                                              // 000000057D78: 00063EC0
	.long 0                                                    // 000000057D7C: 00000000
	.ascii "@"                                                 // 000000057D80: 40
	.byte 0                                                    // 000000057D81: 00
	.short 0                                                   // 000000057D82: 0000
	.long 0                                                    // 000000057D84: 00000000
	.ascii ">M"                                                // 000000057D88: 4D3E
	.short 0                                                   // 000000057D8A: 0000
	.long 0x70312                                              // 000000057D8C: 00070312
	.long 0x82100                                              // 000000057D90: 00082100
	.long 0                                                    // 000000057D94: 00000000
	.ascii "|"                                                 // 000000057D98: 7C
	.byte 0                                                    // 000000057D99: 00
	.short 0                                                   // 000000057D9A: 0000
	.long 0                                                    // 000000057D9C: 00000000
	.long 0x81f                                                // 000000057DA0: 0000081F
	.long 0x60311                                              // 000000057DA4: 00060311
	.long 0x61d80                                              // 000000057DA8: 00061D80
	.long 0                                                    // 000000057DAC: 00000000
	.ascii "@"                                                 // 000000057DB0: 40
	.byte 0                                                    // 000000057DB1: 00
	.short 0                                                   // 000000057DB2: 0000
	.long 0                                                    // 000000057DB4: 00000000
	.long 0xc82                                                // 000000057DB8: 00000C82
	.long 0x60311                                              // 000000057DBC: 00060311
	.long 0x621c0                                              // 000000057DC0: 000621C0
	.long 0                                                    // 000000057DC4: 00000000
	.ascii "@"                                                 // 000000057DC8: 40
	.byte 0                                                    // 000000057DC9: 00
	.short 0                                                   // 000000057DCA: 0000
	.long 0                                                    // 000000057DCC: 00000000
	.long 0xfb3                                                // 000000057DD0: 00000FB3
	.long 0x60311                                              // 000000057DD4: 00060311
	.long 0x624c0                                              // 000000057DD8: 000624C0
	.long 0                                                    // 000000057DDC: 00000000
	.ascii "@"                                                 // 000000057DE0: 40
	.byte 0                                                    // 000000057DE1: 00
	.short 0                                                   // 000000057DE2: 0000
	.long 0                                                    // 000000057DE4: 00000000
	.long 0x299c                                               // 000000057DE8: 0000299C
	.long 0x70312                                              // 000000057DEC: 00070312
	.long 0x77300                                              // 000000057DF0: 00077300
	.long 0                                                    // 000000057DF4: 00000000
	.ascii "\\"                                                // 000000057DF8: 5C
	.byte 0x1                                                  // 000000057DF9: 01
	.short 0                                                   // 000000057DFA: 0000
	.long 0                                                    // 000000057DFC: 00000000
	.ascii "oE"                                                // 000000057E00: 456F
	.short 0                                                   // 000000057E02: 0000
	.long 0x70312                                              // 000000057E04: 00070312
	.long 0x7fc00                                              // 000000057E08: 0007FC00
	.long 0                                                    // 000000057E0C: 00000000
	.long 0xfc                                                 // 000000057E10: 000000FC
	.long 0                                                    // 000000057E14: 00000000
	.long 0x4bfd                                               // 000000057E18: 00004BFD
	.long 0x60311                                              // 000000057E1C: 00060311
	.ascii "@]"                                                // 000000057E20: 5D40
	.short 0x6                                                 // 000000057E22: 0006
	.long 0                                                    // 000000057E24: 00000000
	.ascii "@"                                                 // 000000057E28: 40
	.byte 0                                                    // 000000057E29: 00
	.short 0                                                   // 000000057E2A: 0000
	.long 0                                                    // 000000057E2C: 00000000
	.ascii "p"                                                 // 000000057E30: 70
	.byte 0                                                    // 000000057E31: 00
	.short 0                                                   // 000000057E32: 0000
	.long 0x70312                                              // 000000057E34: 00070312
	.long 0x67300                                              // 000000057E38: 00067300
	.long 0                                                    // 000000057E3C: 00000000
	.long 0xf0                                                 // 000000057E40: 000000F0
	.long 0                                                    // 000000057E44: 00000000
	.long 0x1fc                                                // 000000057E48: 000001FC
	.long 0x70312                                              // 000000057E4C: 00070312
	.long 0x67e00                                              // 000000057E50: 00067E00
	.long 0                                                    // 000000057E54: 00000000
	.long 0xec                                                 // 000000057E58: 000000EC
	.long 0                                                    // 000000057E5C: 00000000
	.ascii "k"                                                 // 000000057E60: 6B
	.byte 0x1c                                                 // 000000057E61: 1C
	.short 0                                                   // 000000057E62: 0000
	.long 0x60311                                              // 000000057E64: 00060311
	.long 0x63280                                              // 000000057E68: 00063280
	.long 0                                                    // 000000057E6C: 00000000
	.ascii "@"                                                 // 000000057E70: 40
	.byte 0                                                    // 000000057E71: 00
	.short 0                                                   // 000000057E72: 0000
	.long 0                                                    // 000000057E74: 00000000
	.ascii "*/"                                                // 000000057E78: 2F2A
	.short 0                                                   // 000000057E7A: 0000
	.long 0x60311                                              // 000000057E7C: 00060311
	.long 0x64280                                              // 000000057E80: 00064280
	.long 0                                                    // 000000057E84: 00000000
	.ascii "@"                                                 // 000000057E88: 40
	.byte 0                                                    // 000000057E89: 00
	.short 0                                                   // 000000057E8A: 0000
	.long 0                                                    // 000000057E8C: 00000000
	.long 0x3eab                                               // 000000057E90: 00003EAB
	.long 0x60311                                              // 000000057E94: 00060311
	.ascii "@Q"                                                // 000000057E98: 5140
	.short 0x6                                                 // 000000057E9A: 0006
	.long 0                                                    // 000000057E9C: 00000000
	.ascii "@"                                                 // 000000057EA0: 40
	.byte 0                                                    // 000000057EA1: 00
	.short 0                                                   // 000000057EA2: 0000
	.long 0                                                    // 000000057EA4: 00000000
	.long 0x607                                                // 000000057EA8: 00000607
	.long 0x70312                                              // 000000057EAC: 00070312
	.long 0x69300                                              // 000000057EB0: 00069300
	.long 0                                                    // 000000057EB4: 00000000
	.long 0xf0                                                 // 000000057EB8: 000000F0
	.long 0                                                    // 000000057EBC: 00000000
	.ascii "{"                                                 // 000000057EC0: 7B
	.byte 0x15                                                 // 000000057EC1: 15
	.short 0                                                   // 000000057EC2: 0000
	.long 0x60311                                              // 000000057EC4: 00060311
	.long 0x62b00                                              // 000000057EC8: 00062B00
	.long 0                                                    // 000000057ECC: 00000000
	.ascii "@"                                                 // 000000057ED0: 40
	.byte 0                                                    // 000000057ED1: 00
	.short 0                                                   // 000000057ED2: 0000
	.long 0                                                    // 000000057ED4: 00000000
	.ascii "o"                                                 // 000000057ED8: 6F
	.byte 0x17                                                 // 000000057ED9: 17
	.short 0                                                   // 000000057EDA: 0000
	.long 0x70312                                              // 000000057EDC: 00070312
	.long 0x70300                                              // 000000057EE0: 00070300
	.long 0                                                    // 000000057EE4: 00000000
	.long 0xfc                                                 // 000000057EE8: 000000FC
	.long 0                                                    // 000000057EEC: 00000000
	.long 0x27ca                                               // 000000057EF0: 000027CA
	.long 0x70312                                              // 000000057EF4: 00070312
	.long 0x76700                                              // 000000057EF8: 00076700
	.long 0                                                    // 000000057EFC: 00000000
	.long 0x1c0                                                // 000000057F00: 000001C0
	.long 0                                                    // 000000057F04: 00000000
	.ascii "x3"                                                // 000000057F08: 3378
	.short 0                                                   // 000000057F0A: 0000
	.long 0x70312                                              // 000000057F0C: 00070312
	.long 0x7ab00                                              // 000000057F10: 0007AB00
	.long 0                                                    // 000000057F14: 00000000
	.long 0xdc                                                 // 000000057F18: 000000DC
	.long 0                                                    // 000000057F1C: 00000000
	.ascii "[B"                                                // 000000057F20: 425B
	.short 0                                                   // 000000057F22: 0000
	.long 0x70312                                              // 000000057F24: 00070312
	.long 0x7ee00                                              // 000000057F28: 0007EE00
	.long 0                                                    // 000000057F2C: 00000000
	.long 0xf0                                                 // 000000057F30: 000000F0
	.long 0                                                    // 000000057F34: 00000000
	.long 0x4ce3                                               // 000000057F38: 00004CE3
	.long 0x60311                                              // 000000057F3C: 00060311
	.ascii "@^"                                                // 000000057F40: 5E40
	.short 0x6                                                 // 000000057F42: 0006
	.long 0                                                    // 000000057F44: 00000000
	.ascii "@"                                                 // 000000057F48: 40
	.byte 0                                                    // 000000057F49: 00
	.short 0                                                   // 000000057F4A: 0000
	.long 0                                                    // 000000057F4C: 00000000
	.long 0xf1                                                 // 000000057F50: 000000F1
	.long 0x70312                                              // 000000057F54: 00070312
	.long 0x67700                                              // 000000057F58: 00067700
	.long 0                                                    // 000000057F5C: 00000000
	.ascii "H"                                                 // 000000057F60: 48
	.byte 0x1                                                  // 000000057F61: 01
	.short 0                                                   // 000000057F62: 0000
	.long 0                                                    // 000000057F64: 00000000
	.long 0x16d9                                               // 000000057F68: 000016D9
	.long 0x60311                                              // 000000057F6C: 00060311
	.long 0x62d00                                              // 000000057F70: 00062D00
	.long 0                                                    // 000000057F74: 00000000
	.ascii "@"                                                 // 000000057F78: 40
	.byte 0                                                    // 000000057F79: 00
	.short 0                                                   // 000000057F7A: 0000
	.long 0                                                    // 000000057F7C: 00000000
	.long 0x21ed                                               // 000000057F80: 000021ED
	.long 0x60311                                              // 000000057F84: 00060311
	.ascii "@7"                                                // 000000057F88: 3740
	.short 0x6                                                 // 000000057F8A: 0006
	.long 0                                                    // 000000057F8C: 00000000
	.ascii "@"                                                 // 000000057F90: 40
	.byte 0                                                    // 000000057F91: 00
	.short 0                                                   // 000000057F92: 0000
	.long 0                                                    // 000000057F94: 00000000
	.long 0x4da                                                // 000000057F98: 000004DA
	.long 0x60311                                              // 000000057F9C: 00060311
	.ascii "@"                                                 // 000000057FA0: 40
	.byte 0x1a                                                 // 000000057FA1: 1A
	.short 0x6                                                 // 000000057FA2: 0006
	.long 0                                                    // 000000057FA4: 00000000
	.ascii "@"                                                 // 000000057FA8: 40
	.byte 0                                                    // 000000057FA9: 00
	.short 0                                                   // 000000057FAA: 0000
	.long 0                                                    // 000000057FAC: 00000000
	.long 0x151c                                               // 000000057FB0: 0000151C
	.long 0x60311                                              // 000000057FB4: 00060311
	.long 0x62a80                                              // 000000057FB8: 00062A80
	.long 0                                                    // 000000057FBC: 00000000
	.ascii "@"                                                 // 000000057FC0: 40
	.byte 0                                                    // 000000057FC1: 00
	.short 0                                                   // 000000057FC2: 0000
	.long 0                                                    // 000000057FC4: 00000000
	.ascii ":"                                                 // 000000057FC8: 3A
	.byte 0x17                                                 // 000000057FC9: 17
	.short 0                                                   // 000000057FCA: 0000
	.long 0x60311                                              // 000000057FCC: 00060311
	.long 0x62d80                                              // 000000057FD0: 00062D80
	.long 0                                                    // 000000057FD4: 00000000
	.ascii "@"                                                 // 000000057FD8: 40
	.byte 0                                                    // 000000057FD9: 00
	.short 0                                                   // 000000057FDA: 0000
	.long 0                                                    // 000000057FDC: 00000000
	.ascii "C"                                                 // 000000057FE0: 43
	.byte 0x1c                                                 // 000000057FE1: 1C
	.short 0                                                   // 000000057FE2: 0000
	.long 0x70312                                              // 000000057FE4: 00070312
	.long 0x72100                                              // 000000057FE8: 00072100
	.long 0                                                    // 000000057FEC: 00000000
	.long 0xec                                                 // 000000057FF0: 000000EC
	.long 0                                                    // 000000057FF4: 00000000
	.ascii "W?"                                                // 000000057FF8: 3F57
	.short 0                                                   // 000000057FFA: 0000
	.long 0x70312                                              // 000000057FFC: 00070312
	.long 0x7e100                                              // 000000058000: 0007E100
	.long 0                                                    // 000000058004: 00000000
	.long 0xe0                                                 // 000000058008: 000000E0
	.long 0                                                    // 00000005800C: 00000000
	.long 0x2897                                               // 000000058010: 00002897
	.long 0x60311                                              // 000000058014: 00060311
	.long 0x63cc0                                              // 000000058018: 00063CC0
	.long 0                                                    // 00000005801C: 00000000
	.ascii "@"                                                 // 000000058020: 40
	.byte 0                                                    // 000000058021: 00
	.short 0                                                   // 000000058022: 0000
	.long 0                                                    // 000000058024: 00000000
	.long 0x32bb                                               // 000000058028: 000032BB
	.long 0x60311                                              // 00000005802C: 00060311
	.long 0x646c0                                              // 000000058030: 000646C0
	.long 0                                                    // 000000058034: 00000000
	.ascii "@"                                                 // 000000058038: 40
	.byte 0                                                    // 000000058039: 00
	.short 0                                                   // 00000005803A: 0000
	.long 0                                                    // 00000005803C: 00000000
	.long 0x35ba                                               // 000000058040: 000035BA
	.long 0x60311                                              // 000000058044: 00060311
	.long 0x649c0                                              // 000000058048: 000649C0
	.long 0                                                    // 00000005804C: 00000000
	.ascii "@"                                                 // 000000058050: 40
	.byte 0                                                    // 000000058051: 00
	.short 0                                                   // 000000058052: 0000
	.long 0                                                    // 000000058054: 00000000
	.long 0x4105                                               // 000000058058: 00004105
	.long 0x60311                                              // 00000005805C: 00060311
	.ascii "@S"                                                // 000000058060: 5340
	.short 0x6                                                 // 000000058062: 0006
	.long 0                                                    // 000000058064: 00000000
	.ascii "@"                                                 // 000000058068: 40
	.byte 0                                                    // 000000058069: 00
	.short 0                                                   // 00000005806A: 0000
	.long 0                                                    // 00000005806C: 00000000
	.long 0x1a0e                                               // 000000058070: 00001A0E
	.long 0x70312                                              // 000000058074: 00070312
	.long 0x71400                                              // 000000058078: 00071400
	.long 0                                                    // 00000005807C: 00000000
	.long 0x118                                                // 000000058080: 00000118
	.long 0                                                    // 000000058084: 00000000
	.long 0x1e7f                                               // 000000058088: 00001E7F
	.long 0x60311                                              // 00000005808C: 00060311
	.ascii "@4"                                                // 000000058090: 3440
	.short 0x6                                                 // 000000058092: 0006
	.long 0                                                    // 000000058094: 00000000
	.ascii "@"                                                 // 000000058098: 40
	.byte 0                                                    // 000000058099: 00
	.short 0                                                   // 00000005809A: 0000
	.long 0                                                    // 00000005809C: 00000000
	.ascii "+"                                                 // 0000000580A0: 2B
	.byte 0x1f                                                 // 0000000580A1: 1F
	.short 0                                                   // 0000000580A2: 0000
	.long 0x70312                                              // 0000000580A4: 00070312
	.long 0x72f00                                              // 0000000580A8: 00072F00
	.long 0                                                    // 0000000580AC: 00000000
	.long 0xec                                                 // 0000000580B0: 000000EC
	.long 0                                                    // 0000000580B4: 00000000
	.ascii "("                                                 // 0000000580B8: 28
	.byte 0x1c                                                 // 0000000580B9: 1C
	.short 0                                                   // 0000000580BA: 0000
	.long 0x60311                                              // 0000000580BC: 00060311
	.ascii "@2"                                                // 0000000580C0: 3240
	.short 0x6                                                 // 0000000580C2: 0006
	.long 0                                                    // 0000000580C4: 00000000
	.ascii "@"                                                 // 0000000580C8: 40
	.byte 0                                                    // 0000000580C9: 00
	.short 0                                                   // 0000000580CA: 0000
	.long 0                                                    // 0000000580CC: 00000000
	.long 0x24a1                                               // 0000000580D0: 000024A1
	.long 0x60311                                              // 0000000580D4: 00060311
	.long 0x63980                                              // 0000000580D8: 00063980
	.long 0                                                    // 0000000580DC: 00000000
	.ascii "@"                                                 // 0000000580E0: 40
	.byte 0                                                    // 0000000580E1: 00
	.short 0                                                   // 0000000580E2: 0000
	.long 0                                                    // 0000000580E4: 00000000
	.long 0x2f96                                               // 0000000580E8: 00002F96
	.long 0x60311                                              // 0000000580EC: 00060311
	.long 0x64300                                              // 0000000580F0: 00064300
	.long 0                                                    // 0000000580F4: 00000000
	.ascii "@"                                                 // 0000000580F8: 40
	.byte 0                                                    // 0000000580F9: 00
	.short 0                                                   // 0000000580FA: 0000
	.long 0                                                    // 0000000580FC: 00000000
	.ascii "d2"                                                // 000000058100: 3264
	.short 0                                                   // 000000058102: 0000
	.long 0x60311                                              // 000000058104: 00060311
	.ascii "@F"                                                // 000000058108: 4640
	.short 0x6                                                 // 00000005810A: 0006
	.long 0                                                    // 00000005810C: 00000000
	.ascii "@"                                                 // 000000058110: 40
	.byte 0                                                    // 000000058111: 00
	.short 0                                                   // 000000058112: 0000
	.long 0                                                    // 000000058114: 00000000
	.ascii "u"                                                 // 000000058118: 75
	.byte 0xb                                                  // 000000058119: 0B
	.short 0                                                   // 00000005811A: 0000
	.long 0x60311                                              // 00000005811C: 00060311
	.long 0x620c0                                              // 000000058120: 000620C0
	.long 0                                                    // 000000058124: 00000000
	.ascii "@"                                                 // 000000058128: 40
	.byte 0                                                    // 000000058129: 00
	.short 0                                                   // 00000005812A: 0000
	.long 0                                                    // 00000005812C: 00000000
	.ascii "ZM"                                                // 000000058130: 4D5A
	.short 0                                                   // 000000058132: 0000
	.long 0x60311                                              // 000000058134: 00060311
	.long 0x65ec0                                              // 000000058138: 00065EC0
	.long 0                                                    // 00000005813C: 00000000
	.ascii "@"                                                 // 000000058140: 40
	.byte 0                                                    // 000000058141: 00
	.short 0                                                   // 000000058142: 0000
	.long 0                                                    // 000000058144: 00000000
	.long 0x57f                                                // 000000058148: 0000057F
	.long 0x70312                                              // 00000005814C: 00070312
	.long 0x68f00                                              // 000000058150: 00068F00
	.long 0                                                    // 000000058154: 00000000
	.ascii "@"                                                 // 000000058158: 40
	.byte 0x1                                                  // 000000058159: 01
	.short 0                                                   // 00000005815A: 0000
	.long 0                                                    // 00000005815C: 00000000
	.long 0x1482                                               // 000000058160: 00001482
	.long 0x70312                                              // 000000058164: 00070312
	.long 0x6f200                                              // 000000058168: 0006F200
	.long 0                                                    // 00000005816C: 00000000
	.ascii "`"                                                 // 000000058170: 60
	.byte 0                                                    // 000000058171: 00
	.short 0                                                   // 000000058172: 0000
	.long 0                                                    // 000000058174: 00000000
	.long 0x15c3                                               // 000000058178: 000015C3
	.long 0x60311                                              // 00000005817C: 00060311
	.long 0x62b80                                              // 000000058180: 00062B80
	.long 0                                                    // 000000058184: 00000000
	.ascii "@"                                                 // 000000058188: 40
	.byte 0                                                    // 000000058189: 00
	.short 0                                                   // 00000005818A: 0000
	.long 0                                                    // 00000005818C: 00000000
	.long 0x3f80                                               // 000000058190: 00003F80
	.long 0x60311                                              // 000000058194: 00060311
	.long 0x65200                                              // 000000058198: 00065200
	.long 0                                                    // 00000005819C: 00000000
	.ascii "@"                                                 // 0000000581A0: 40
	.byte 0                                                    // 0000000581A1: 00
	.short 0                                                   // 0000000581A2: 0000
	.long 0                                                    // 0000000581A4: 00000000
	.ascii "o"                                                 // 0000000581A8: 6F
	.byte 0x12                                                 // 0000000581A9: 12
	.short 0                                                   // 0000000581AA: 0000
	.long 0x70312                                              // 0000000581AC: 00070312
	.long 0x6e500                                              // 0000000581B0: 0006E500
	.long 0                                                    // 0000000581B4: 00000000
	.long 0xf0                                                 // 0000000581B8: 000000F0
	.long 0                                                    // 0000000581BC: 00000000
	.long 0x4b1a                                               // 0000000581C0: 00004B1A
	.long 0x70312                                              // 0000000581C4: 00070312
	.long 0x81700                                              // 0000000581C8: 00081700
	.long 0                                                    // 0000000581CC: 00000000
	.ascii "d"                                                 // 0000000581D0: 64
	.byte 0                                                    // 0000000581D1: 00
	.short 0                                                   // 0000000581D2: 0000
	.long 0                                                    // 0000000581D4: 00000000
	.long 0x40b                                                // 0000000581D8: 0000040B
	.long 0x70312                                              // 0000000581DC: 00070312
	.long 0x68800                                              // 0000000581E0: 00068800
	.long 0                                                    // 0000000581E4: 00000000
	.long 0xf4                                                 // 0000000581E8: 000000F4
	.long 0                                                    // 0000000581EC: 00000000
	.ascii "-"                                                 // 0000000581F0: 2D
	.byte 0xd                                                  // 0000000581F1: 0D
	.short 0                                                   // 0000000581F2: 0000
	.long 0x70312                                              // 0000000581F4: 00070312
	.long 0x6bf00                                              // 0000000581F8: 0006BF00
	.long 0                                                    // 0000000581FC: 00000000
	.ascii "H"                                                 // 000000058200: 48
	.byte 0x1                                                  // 000000058201: 01
	.short 0                                                   // 000000058202: 0000
	.long 0                                                    // 000000058204: 00000000
	.ascii "6K"                                                // 000000058208: 4B36
	.short 0                                                   // 00000005820A: 0000
	.long 0x60311                                              // 00000005820C: 00060311
	.ascii "@\\"                                               // 000000058210: 5C40
	.short 0x6                                                 // 000000058212: 0006
	.long 0                                                    // 000000058214: 00000000
	.ascii "@"                                                 // 000000058218: 40
	.byte 0                                                    // 000000058219: 00
	.short 0                                                   // 00000005821A: 0000
	.long 0                                                    // 00000005821C: 00000000
	.long 0x692                                                // 000000058220: 00000692
	.long 0x60311                                              // 000000058224: 00060311
	.long 0x61c00                                              // 000000058228: 00061C00
	.long 0                                                    // 00000005822C: 00000000
	.ascii "@"                                                 // 000000058230: 40
	.byte 0                                                    // 000000058231: 00
	.short 0                                                   // 000000058232: 0000
	.long 0                                                    // 000000058234: 00000000
	.ascii "0"                                                 // 000000058238: 30
	.byte 0x13                                                 // 000000058239: 13
	.short 0                                                   // 00000005823A: 0000
	.long 0x70312                                              // 00000005823C: 00070312
	.long 0x6e900                                              // 000000058240: 0006E900
	.long 0                                                    // 000000058244: 00000000
	.long 0x104                                                // 000000058248: 00000104
	.long 0                                                    // 00000005824C: 00000000
	.long 0x4494                                               // 000000058250: 00004494
	.long 0x70312                                              // 000000058254: 00070312
	.long 0x7f800                                              // 000000058258: 0007F800
	.long 0                                                    // 00000005825C: 00000000
	.long 0x10c                                                // 000000058260: 0000010C
	.long 0                                                    // 000000058264: 00000000
	.long 0x4999                                               // 000000058268: 00004999
	.long 0x70312                                              // 00000005826C: 00070312
	.long 0x81000                                              // 000000058270: 00081000
	.long 0                                                    // 000000058274: 00000000
	.long 0xa0                                                 // 000000058278: 000000A0
	.long 0                                                    // 00000005827C: 00000000
	.long 0x6f7                                                // 000000058280: 000006F7
	.long 0x70312                                              // 000000058284: 00070312
	.long 0x69700                                              // 000000058288: 00069700
	.long 0                                                    // 00000005828C: 00000000
	.long 0xf0                                                 // 000000058290: 000000F0
	.long 0                                                    // 000000058294: 00000000
	.ascii "I"                                                 // 000000058298: 49
	.byte 0x16                                                 // 000000058299: 16
	.short 0                                                   // 00000005829A: 0000
	.long 0x60311                                              // 00000005829C: 00060311
	.ascii "@,"                                                // 0000000582A0: 2C40
	.short 0x6                                                 // 0000000582A2: 0006
	.long 0                                                    // 0000000582A4: 00000000
	.ascii "@"                                                 // 0000000582A8: 40
	.byte 0                                                    // 0000000582A9: 00
	.short 0                                                   // 0000000582AA: 0000
	.long 0                                                    // 0000000582AC: 00000000
	.long 0x198b                                               // 0000000582B0: 0000198B
	.long 0x60311                                              // 0000000582B4: 00060311
	.ascii "@0"                                                // 0000000582B8: 3040
	.short 0x6                                                 // 0000000582BA: 0006
	.long 0                                                    // 0000000582BC: 00000000
	.ascii "@"                                                 // 0000000582C0: 40
	.byte 0                                                    // 0000000582C1: 00
	.short 0                                                   // 0000000582C2: 0000
	.long 0                                                    // 0000000582C4: 00000000
	.long 0x1cb9                                               // 0000000582C8: 00001CB9
	.long 0x60311                                              // 0000000582CC: 00060311
	.long 0x632c0                                              // 0000000582D0: 000632C0
	.long 0                                                    // 0000000582D4: 00000000
	.ascii "@"                                                 // 0000000582D8: 40
	.byte 0                                                    // 0000000582D9: 00
	.short 0                                                   // 0000000582DA: 0000
	.long 0                                                    // 0000000582DC: 00000000
	.ascii "/:"                                                // 0000000582E0: 3A2F
	.short 0                                                   // 0000000582E2: 0000
	.long 0x60311                                              // 0000000582E4: 00060311
	.long 0x64d80                                              // 0000000582E8: 00064D80
	.long 0                                                    // 0000000582EC: 00000000
	.ascii "@"                                                 // 0000000582F0: 40
	.byte 0                                                    // 0000000582F1: 00
	.short 0                                                   // 0000000582F2: 0000
	.long 0                                                    // 0000000582F4: 00000000
	.ascii "^	"                                                // 0000000582F8: 095E
	.short 0                                                   // 0000000582FA: 0000
	.long 0x60311                                              // 0000000582FC: 00060311
	.long 0x61ec0                                              // 000000058300: 00061EC0
	.long 0                                                    // 000000058304: 00000000
	.ascii "@"                                                 // 000000058308: 40
	.byte 0                                                    // 000000058309: 00
	.short 0                                                   // 00000005830A: 0000
	.long 0                                                    // 00000005830C: 00000000
	.long 0xaf4                                                // 000000058310: 00000AF4
	.long 0x60311                                              // 000000058314: 00060311
	.ascii "@ "                                                // 000000058318: 2040
	.short 0x6                                                 // 00000005831A: 0006
	.long 0                                                    // 00000005831C: 00000000
	.ascii "@"                                                 // 000000058320: 40
	.byte 0                                                    // 000000058321: 00
	.short 0                                                   // 000000058322: 0000
	.long 0                                                    // 000000058324: 00000000
	.ascii "Y"                                                 // 000000058328: 59
	.byte 0xf                                                  // 000000058329: 0F
	.short 0                                                   // 00000005832A: 0000
	.long 0x70312                                              // 00000005832C: 00070312
	.long 0x6cf00                                              // 000000058330: 0006CF00
	.long 0                                                    // 000000058334: 00000000
	.ascii "L"                                                 // 000000058338: 4C
	.byte 0x1                                                  // 000000058339: 01
	.short 0                                                   // 00000005833A: 0000
	.long 0                                                    // 00000005833C: 00000000
	.ascii "8"                                                 // 000000058340: 38
	.byte 0x10                                                 // 000000058341: 10
	.short 0                                                   // 000000058342: 0000
	.long 0x60311                                              // 000000058344: 00060311
	.ascii "@%"                                                // 000000058348: 2540
	.short 0x6                                                 // 00000005834A: 0006
	.long 0                                                    // 00000005834C: 00000000
	.ascii "@"                                                 // 000000058350: 40
	.byte 0                                                    // 000000058351: 00
	.short 0                                                   // 000000058352: 0000
	.long 0                                                    // 000000058354: 00000000
	.ascii ">9"                                                // 000000058358: 393E
	.short 0                                                   // 00000005835A: 0000
	.long 0x70312                                              // 00000005835C: 00070312
	.long 0x7c200                                              // 000000058360: 0007C200
	.long 0                                                    // 000000058364: 00000000
	.long 0xf8                                                 // 000000058368: 000000F8
	.long 0                                                    // 00000005836C: 00000000
	.ascii "C<"                                                // 000000058370: 3C43
	.short 0                                                   // 000000058372: 0000
	.long 0x60311                                              // 000000058374: 00060311
	.ascii "@O"                                                // 000000058378: 4F40
	.short 0x6                                                 // 00000005837A: 0006
	.long 0                                                    // 00000005837C: 00000000
	.ascii "@"                                                 // 000000058380: 40
	.byte 0                                                    // 000000058381: 00
	.short 0                                                   // 000000058382: 0000
	.long 0                                                    // 000000058384: 00000000
	.long 0x41a2                                               // 000000058388: 000041A2
	.long 0x60311                                              // 00000005838C: 00060311
	.long 0x653c0                                              // 000000058390: 000653C0
	.long 0                                                    // 000000058394: 00000000
	.ascii "@"                                                 // 000000058398: 40
	.byte 0                                                    // 000000058399: 00
	.short 0                                                   // 00000005839A: 0000
	.long 0                                                    // 00000005839C: 00000000
	.long 0x4a01                                               // 0000000583A0: 00004A01
	.long 0x70312                                              // 0000000583A4: 00070312
	.long 0x81200                                              // 0000000583A8: 00081200
	.long 0                                                    // 0000000583AC: 00000000
	.ascii "D"                                                 // 0000000583B0: 44
	.byte 0                                                    // 0000000583B1: 00
	.short 0                                                   // 0000000583B2: 0000
	.long 0                                                    // 0000000583B4: 00000000
	.long 0x3e5                                                // 0000000583B8: 000003E5
	.long 0x60311                                              // 0000000583BC: 00060311
	.ascii "@"                                                 // 0000000583C0: 40
	.byte 0x19                                                 // 0000000583C1: 19
	.short 0x6                                                 // 0000000583C2: 0006
	.long 0                                                    // 0000000583C4: 00000000
	.ascii "@"                                                 // 0000000583C8: 40
	.byte 0                                                    // 0000000583C9: 00
	.short 0                                                   // 0000000583CA: 0000
	.long 0                                                    // 0000000583CC: 00000000
	.long 0xf9e                                                // 0000000583D0: 00000F9E
	.long 0x70312                                              // 0000000583D4: 00070312
	.long 0x6d100                                              // 0000000583D8: 0006D100
	.long 0                                                    // 0000000583DC: 00000000
	.ascii "P"                                                 // 0000000583E0: 50
	.byte 0x1                                                  // 0000000583E1: 01
	.short 0                                                   // 0000000583E2: 0000
	.long 0                                                    // 0000000583E4: 00000000
	.ascii "6"                                                 // 0000000583E8: 36
	.byte 0x1a                                                 // 0000000583E9: 1A
	.short 0                                                   // 0000000583EA: 0000
	.long 0x60311                                              // 0000000583EC: 00060311
	.long 0x630c0                                              // 0000000583F0: 000630C0
	.long 0                                                    // 0000000583F4: 00000000
	.ascii "@"                                                 // 0000000583F8: 40
	.byte 0                                                    // 0000000583F9: 00
	.short 0                                                   // 0000000583FA: 0000
	.long 0                                                    // 0000000583FC: 00000000
	.long 0x26b5                                               // 000000058400: 000026B5
	.long 0x60311                                              // 000000058404: 00060311
	.ascii "@;"                                                // 000000058408: 3B40
	.short 0x6                                                 // 00000005840A: 0006
	.long 0                                                    // 00000005840C: 00000000
	.ascii "@"                                                 // 000000058410: 40
	.byte 0                                                    // 000000058411: 00
	.short 0                                                   // 000000058412: 0000
	.long 0                                                    // 000000058414: 00000000
	.long 0x34ba                                               // 000000058418: 000034BA
	.long 0x60311                                              // 00000005841C: 00060311
	.long 0x64900                                              // 000000058420: 00064900
	.long 0                                                    // 000000058424: 00000000
	.ascii "@"                                                 // 000000058428: 40
	.byte 0                                                    // 000000058429: 00
	.short 0                                                   // 00000005842A: 0000
	.long 0                                                    // 00000005842C: 00000000
	.long 0x14ee                                               // 000000058430: 000014EE
	.long 0x60311                                              // 000000058434: 00060311
	.ascii "@*"                                                // 000000058438: 2A40
	.short 0x6                                                 // 00000005843A: 0006
	.long 0                                                    // 00000005843C: 00000000
	.ascii "@"                                                 // 000000058440: 40
	.byte 0                                                    // 000000058441: 00
	.short 0                                                   // 000000058442: 0000
	.long 0                                                    // 000000058444: 00000000
	.long 0x15b9                                               // 000000058448: 000015B9
	.long 0x70312                                              // 00000005844C: 00070312
	.long 0x6f900                                              // 000000058450: 0006F900
	.long 0                                                    // 000000058454: 00000000
	.long 0x94                                                 // 000000058458: 00000094
	.long 0                                                    // 00000005845C: 00000000
	.ascii "A1"                                                // 000000058460: 3141
	.short 0                                                   // 000000058462: 0000
	.long 0x60311                                              // 000000058464: 00060311
	.long 0x64500                                              // 000000058468: 00064500
	.long 0                                                    // 00000005846C: 00000000
	.ascii "@"                                                 // 000000058470: 40
	.byte 0                                                    // 000000058471: 00
	.short 0                                                   // 000000058472: 0000
	.long 0                                                    // 000000058474: 00000000
	.long 0x3714                                               // 000000058478: 00003714
	.long 0x60311                                              // 00000005847C: 00060311
	.long 0x64ac0                                              // 000000058480: 00064AC0
	.long 0                                                    // 000000058484: 00000000
	.ascii "@"                                                 // 000000058488: 40
	.byte 0                                                    // 000000058489: 00
	.short 0                                                   // 00000005848A: 0000
	.long 0                                                    // 00000005848C: 00000000
	.long 0x380e                                               // 000000058490: 0000380E
	.long 0x70312                                              // 000000058494: 00070312
	.long 0x7bd00                                              // 000000058498: 0007BD00
	.long 0                                                    // 00000005849C: 00000000
	.long 0xa0                                                 // 0000000584A0: 000000A0
	.long 0                                                    // 0000000584A4: 00000000
	.long 0x4aaa                                               // 0000000584A8: 00004AAA
	.long 0x70312                                              // 0000000584AC: 00070312
	.long 0x81500                                              // 0000000584B0: 00081500
	.long 0                                                    // 0000000584B4: 00000000
	.ascii "x"                                                 // 0000000584B8: 78
	.byte 0                                                    // 0000000584B9: 00
	.short 0                                                   // 0000000584BA: 0000
	.long 0                                                    // 0000000584BC: 00000000
	.long 0x2ef0                                               // 0000000584C0: 00002EF0
	.long 0x60311                                              // 0000000584C4: 00060311
	.ascii "@B"                                                // 0000000584C8: 4240
	.short 0x6                                                 // 0000000584CA: 0006
	.long 0                                                    // 0000000584CC: 00000000
	.ascii "@"                                                 // 0000000584D0: 40
	.byte 0                                                    // 0000000584D1: 00
	.short 0                                                   // 0000000584D2: 0000
	.long 0                                                    // 0000000584D4: 00000000
	.long 0x3d1c                                               // 0000000584D8: 00003D1C
	.long 0x60311                                              // 0000000584DC: 00060311
	.long 0x65000                                              // 0000000584E0: 00065000
	.long 0                                                    // 0000000584E4: 00000000
	.ascii "@"                                                 // 0000000584E8: 40
	.byte 0                                                    // 0000000584E9: 00
	.short 0                                                   // 0000000584EA: 0000
	.long 0                                                    // 0000000584EC: 00000000
	.long 0x1d1                                                // 0000000584F0: 000001D1
	.long 0x60311                                              // 0000000584F4: 00060311
	.long 0x61780                                              // 0000000584F8: 00061780
	.long 0                                                    // 0000000584FC: 00000000
	.ascii "@"                                                 // 000000058500: 40
	.byte 0                                                    // 000000058501: 00
	.short 0                                                   // 000000058502: 0000
	.long 0                                                    // 000000058504: 00000000
	.ascii "W"                                                 // 000000058508: 57
	.byte 0x4                                                  // 000000058509: 04
	.short 0                                                   // 00000005850A: 0000
	.long 0x60311                                              // 00000005850C: 00060311
	.long 0x619c0                                              // 000000058510: 000619C0
	.long 0                                                    // 000000058514: 00000000
	.ascii "@"                                                 // 000000058518: 40
	.byte 0                                                    // 000000058519: 00
	.short 0                                                   // 00000005851A: 0000
	.long 0                                                    // 00000005851C: 00000000
	.long 0x2eb3                                               // 000000058520: 00002EB3
	.long 0x70312                                              // 000000058524: 00070312
	.long 0x79300                                              // 000000058528: 00079300
	.long 0                                                    // 00000005852C: 00000000
	.ascii "t"                                                 // 000000058530: 74
	.byte 0                                                    // 000000058531: 00
	.short 0                                                   // 000000058532: 0000
	.long 0                                                    // 000000058534: 00000000
	.long 0x28e                                                // 000000058538: 0000028E
	.long 0x70312                                              // 00000005853C: 00070312
	.long 0x68000                                              // 000000058540: 00068000
	.long 0                                                    // 000000058544: 00000000
	.ascii "`"                                                 // 000000058548: 60
	.byte 0x1                                                  // 000000058549: 01
	.short 0                                                   // 00000005854A: 0000
	.long 0                                                    // 00000005854C: 00000000
	.long 0x219b                                               // 000000058550: 0000219B
	.long 0x60311                                              // 000000058554: 00060311
	.long 0x63700                                              // 000000058558: 00063700
	.long 0                                                    // 00000005855C: 00000000
	.ascii "@"                                                 // 000000058560: 40
	.byte 0                                                    // 000000058561: 00
	.short 0                                                   // 000000058562: 0000
	.long 0                                                    // 000000058564: 00000000
	.ascii "e*"                                                // 000000058568: 2A65
	.short 0                                                   // 00000005856A: 0000
	.long 0x60311                                              // 00000005856C: 00060311
	.ascii "@>"                                                // 000000058570: 3E40
	.short 0x6                                                 // 000000058572: 0006
	.long 0                                                    // 000000058574: 00000000
	.ascii "@"                                                 // 000000058578: 40
	.byte 0                                                    // 000000058579: 00
	.short 0                                                   // 00000005857A: 0000
	.long 0                                                    // 00000005857C: 00000000
	.long 0x379a                                               // 000000058580: 0000379A
	.long 0x60311                                              // 000000058584: 00060311
	.ascii "@K"                                                // 000000058588: 4B40
	.short 0x6                                                 // 00000005858A: 0006
	.long 0                                                    // 00000005858C: 00000000
	.ascii "@"                                                 // 000000058590: 40
	.byte 0                                                    // 000000058591: 00
	.short 0                                                   // 000000058592: 0000
	.long 0                                                    // 000000058594: 00000000
	.long 0x3e08                                               // 000000058598: 00003E08
	.long 0x60311                                              // 00000005859C: 00060311
	.long 0x650c0                                              // 0000000585A0: 000650C0
	.long 0                                                    // 0000000585A4: 00000000
	.ascii "@"                                                 // 0000000585A8: 40
	.byte 0                                                    // 0000000585A9: 00
	.short 0                                                   // 0000000585AA: 0000
	.long 0                                                    // 0000000585AC: 00000000
	.long 0x22b3                                               // 0000000585B0: 000022B3
	.long 0x70312                                              // 0000000585B4: 00070312
	.long 0x74500                                              // 0000000585B8: 00074500
	.long 0                                                    // 0000000585BC: 00000000
	.ascii "d"                                                 // 0000000585C0: 64
	.byte 0x1                                                  // 0000000585C1: 01
	.short 0                                                   // 0000000585C2: 0000
	.long 0                                                    // 0000000585C4: 00000000
	.ascii "n("                                                // 0000000585C8: 286E
	.short 0                                                   // 0000000585CA: 0000
	.long 0x70312                                              // 0000000585CC: 00070312
	.long 0x76b00                                              // 0000000585D0: 00076B00
	.long 0                                                    // 0000000585D4: 00000000
	.ascii "T"                                                 // 0000000585D8: 54
	.byte 0x1                                                  // 0000000585D9: 01
	.short 0                                                   // 0000000585DA: 0000
	.long 0                                                    // 0000000585DC: 00000000
	.long 0x39ae                                               // 0000000585E0: 000039AE
	.long 0x60311                                              // 0000000585E4: 00060311
	.long 0x64d00                                              // 0000000585E8: 00064D00
	.long 0                                                    // 0000000585EC: 00000000
	.ascii "@"                                                 // 0000000585F0: 40
	.byte 0                                                    // 0000000585F1: 00
	.short 0                                                   // 0000000585F2: 0000
	.long 0                                                    // 0000000585F4: 00000000
	.ascii "1>"                                                // 0000000585F8: 3E31
	.short 0                                                   // 0000000585FA: 0000
	.long 0x70312                                              // 0000000585FC: 00070312
	.long 0x7da00                                              // 000000058600: 0007DA00
	.long 0                                                    // 000000058604: 00000000
	.ascii "P"                                                 // 000000058608: 50
	.byte 0x1                                                  // 000000058609: 01
	.short 0                                                   // 00000005860A: 0000
	.long 0                                                    // 00000005860C: 00000000
	.long 0xdab                                                // 000000058610: 00000DAB
	.long 0x70312                                              // 000000058614: 00070312
	.long 0x6c300                                              // 000000058618: 0006C300
	.long 0                                                    // 00000005861C: 00000000
	.ascii "@"                                                 // 000000058620: 40
	.byte 0x1                                                  // 000000058621: 01
	.short 0                                                   // 000000058622: 0000
	.long 0                                                    // 000000058624: 00000000
	.ascii "\\"                                                // 000000058628: 5C
	.byte 0x1e                                                 // 000000058629: 1E
	.short 0                                                   // 00000005862A: 0000
	.long 0x70312                                              // 00000005862C: 00070312
	.long 0x72b00                                              // 000000058630: 00072B00
	.long 0                                                    // 000000058634: 00000000
	.long 0xf8                                                 // 000000058638: 000000F8
	.long 0                                                    // 00000005863C: 00000000
	.long 0x1fe2                                               // 000000058640: 00001FE2
	.long 0x60311                                              // 000000058644: 00060311
	.long 0x63580                                              // 000000058648: 00063580
	.long 0                                                    // 00000005864C: 00000000
	.ascii "@"                                                 // 000000058650: 40
	.byte 0                                                    // 000000058651: 00
	.short 0                                                   // 000000058652: 0000
	.long 0                                                    // 000000058654: 00000000
	.long 0x2587                                               // 000000058658: 00002587
	.long 0x60311                                              // 00000005865C: 00060311
	.ascii "@:"                                                // 000000058660: 3A40
	.short 0x6                                                 // 000000058662: 0006
	.long 0                                                    // 000000058664: 00000000
	.ascii "@"                                                 // 000000058668: 40
	.byte 0                                                    // 000000058669: 00
	.short 0                                                   // 00000005866A: 0000
	.long 0                                                    // 00000005866C: 00000000
	.ascii "}:"                                                // 000000058670: 3A7D
	.short 0                                                   // 000000058672: 0000
	.long 0x60311                                              // 000000058674: 00060311
	.long 0x64dc0                                              // 000000058678: 00064DC0
	.long 0                                                    // 00000005867C: 00000000
	.ascii "@"                                                 // 000000058680: 40
	.byte 0                                                    // 000000058681: 00
	.short 0                                                   // 000000058682: 0000
	.long 0                                                    // 000000058684: 00000000
	.long 0x15d0                                               // 000000058688: 000015D0
	.long 0x70312                                              // 00000005868C: 00070312
	.long 0x6fa00                                              // 000000058690: 0006FA00
	.long 0                                                    // 000000058694: 00000000
	.ascii "d"                                                 // 000000058698: 64
	.byte 0                                                    // 000000058699: 00
	.short 0                                                   // 00000005869A: 0000
	.long 0                                                    // 00000005869C: 00000000
	.long 0x1c10                                               // 0000000586A0: 00001C10
	.long 0x70312                                              // 0000000586A4: 00070312
	.long 0x72000                                              // 0000000586A8: 00072000
	.long 0                                                    // 0000000586AC: 00000000
	.long 0xf4                                                 // 0000000586B0: 000000F4
	.long 0                                                    // 0000000586B4: 00000000
	.ascii "+2"                                                // 0000000586B8: 322B
	.short 0                                                   // 0000000586BA: 0000
	.long 0x60311                                              // 0000000586BC: 00060311
	.long 0x64600                                              // 0000000586C0: 00064600
	.long 0                                                    // 0000000586C4: 00000000
	.ascii "@"                                                 // 0000000586C8: 40
	.byte 0                                                    // 0000000586C9: 00
	.short 0                                                   // 0000000586CA: 0000
	.long 0                                                    // 0000000586CC: 00000000
	.long 0x330e                                               // 0000000586D0: 0000330E
	.long 0x70312                                              // 0000000586D4: 00070312
	.long 0x7a800                                              // 0000000586D8: 0007A800
	.long 0                                                    // 0000000586DC: 00000000
	.long 0xac                                                 // 0000000586E0: 000000AC
	.long 0                                                    // 0000000586E4: 00000000
	.long 0x3d91                                               // 0000000586E8: 00003D91
	.long 0x70312                                              // 0000000586EC: 00070312
	.long 0x7d600                                              // 0000000586F0: 0007D600
	.long 0                                                    // 0000000586F4: 00000000
	.long 0x118                                                // 0000000586F8: 00000118
	.long 0                                                    // 0000000586FC: 00000000
	.ascii "V"                                                 // 000000058700: 56
	.byte 0xb                                                  // 000000058701: 0B
	.short 0                                                   // 000000058702: 0000
	.long 0x70312                                              // 000000058704: 00070312
	.long 0x6b400                                              // 000000058708: 0006B400
	.long 0                                                    // 00000005870C: 00000000
	.long 0xf4                                                 // 000000058710: 000000F4
	.long 0                                                    // 000000058714: 00000000
	.ascii ">"                                                 // 000000058718: 3E
	.byte 0x19                                                 // 000000058719: 19
	.short 0                                                   // 00000005871A: 0000
	.long 0x60311                                              // 00000005871C: 00060311
	.long 0x63000                                              // 000000058720: 00063000
	.long 0                                                    // 000000058724: 00000000
	.ascii "@"                                                 // 000000058728: 40
	.byte 0                                                    // 000000058729: 00
	.short 0                                                   // 00000005872A: 0000
	.long 0                                                    // 00000005872C: 00000000
	.ascii "C"                                                 // 000000058730: 43
	.byte 0xd                                                  // 000000058731: 0D
	.short 0                                                   // 000000058732: 0000
	.long 0x60311                                              // 000000058734: 00060311
	.long 0x62280                                              // 000000058738: 00062280
	.long 0                                                    // 00000005873C: 00000000
	.ascii "@"                                                 // 000000058740: 40
	.byte 0                                                    // 000000058741: 00
	.short 0                                                   // 000000058742: 0000
	.long 0                                                    // 000000058744: 00000000
	.long 0x3590                                               // 000000058748: 00003590
	.long 0x70312                                              // 00000005874C: 00070312
	.long 0x7b400                                              // 000000058750: 0007B400
	.long 0                                                    // 000000058754: 00000000
	.long 0x110                                                // 000000058758: 00000110
	.long 0                                                    // 00000005875C: 00000000
	.ascii "kD"                                                // 000000058760: 446B
	.short 0                                                   // 000000058762: 0000
	.long 0x60311                                              // 000000058764: 00060311
	.long 0x65600                                              // 000000058768: 00065600
	.long 0                                                    // 00000005876C: 00000000
	.ascii "@"                                                 // 000000058770: 40
	.byte 0                                                    // 000000058771: 00
	.short 0                                                   // 000000058772: 0000
	.long 0                                                    // 000000058774: 00000000
	.long 0x1210                                               // 000000058778: 00001210
	.long 0x60311                                              // 00000005877C: 00060311
	.long 0x62700                                              // 000000058780: 00062700
	.long 0                                                    // 000000058784: 00000000
	.ascii "@"                                                 // 000000058788: 40
	.byte 0                                                    // 000000058789: 00
	.short 0                                                   // 00000005878A: 0000
	.long 0                                                    // 00000005878C: 00000000
	.long 0x31d2                                               // 000000058790: 000031D2
	.long 0x70312                                              // 000000058794: 00070312
	.long 0x7a200                                              // 000000058798: 0007A200
	.long 0                                                    // 00000005879C: 00000000
	.long 0x98                                                 // 0000000587A0: 00000098
	.long 0                                                    // 0000000587A4: 00000000
	.long 0x38c8                                               // 0000000587A8: 000038C8
	.long 0x60311                                              // 0000000587AC: 00060311
	.ascii "@L"                                                // 0000000587B0: 4C40
	.short 0x6                                                 // 0000000587B2: 0006
	.long 0                                                    // 0000000587B4: 00000000
	.ascii "@"                                                 // 0000000587B8: 40
	.byte 0                                                    // 0000000587B9: 00
	.short 0                                                   // 0000000587BA: 0000
	.long 0                                                    // 0000000587BC: 00000000
	.long 0x3c2                                                // 0000000587C0: 000003C2
	.long 0x70312                                              // 0000000587C4: 00070312
	.long 0x68700                                              // 0000000587C8: 00068700
	.long 0                                                    // 0000000587CC: 00000000
	.long 0xfc                                                 // 0000000587D0: 000000FC
	.long 0                                                    // 0000000587D4: 00000000
	.long 0x1ed8                                               // 0000000587D8: 00001ED8
	.long 0x70312                                              // 0000000587DC: 00070312
	.long 0x72e00                                              // 0000000587E0: 00072E00
	.long 0                                                    // 0000000587E4: 00000000
	.long 0x100                                                // 0000000587E8: 00000100
	.long 0                                                    // 0000000587EC: 00000000
	.long 0x2ade                                               // 0000000587F0: 00002ADE
	.long 0x70312                                              // 0000000587F4: 00070312
	.long 0x77b00                                              // 0000000587F8: 00077B00
	.long 0                                                    // 0000000587FC: 00000000
	.ascii "P"                                                 // 000000058800: 50
	.byte 0x1                                                  // 000000058801: 01
	.short 0                                                   // 000000058802: 0000
	.long 0                                                    // 000000058804: 00000000
	.ascii "{/"                                                // 000000058808: 2F7B
	.short 0                                                   // 00000005880A: 0000
	.long 0x70312                                              // 00000005880C: 00070312
	.long 0x79700                                              // 000000058810: 00079700
	.long 0                                                    // 000000058814: 00000000
	.long 0x94                                                 // 000000058818: 00000094
	.long 0                                                    // 00000005881C: 00000000
	.long 0x1899                                               // 000000058820: 00001899
	.long 0x60311                                              // 000000058824: 00060311
	.ascii "@/"                                                // 000000058828: 2F40
	.short 0x6                                                 // 00000005882A: 0006
	.long 0                                                    // 00000005882C: 00000000
	.ascii "@"                                                 // 000000058830: 40
	.byte 0                                                    // 000000058831: 00
	.short 0                                                   // 000000058832: 0000
	.long 0                                                    // 000000058834: 00000000
	.ascii "M"                                                 // 000000058838: 4D
	.byte 0x1d                                                 // 000000058839: 1D
	.short 0                                                   // 00000005883A: 0000
	.long 0x60311                                              // 00000005883C: 00060311
	.ascii "@3"                                                // 000000058840: 3340
	.short 0x6                                                 // 000000058842: 0006
	.long 0                                                    // 000000058844: 00000000
	.ascii "@"                                                 // 000000058848: 40
	.byte 0                                                    // 000000058849: 00
	.short 0                                                   // 00000005884A: 0000
	.long 0                                                    // 00000005884C: 00000000
	.long 0x27f2                                               // 000000058850: 000027F2
	.long 0x60311                                              // 000000058854: 00060311
	.ascii "@<"                                                // 000000058858: 3C40
	.short 0x6                                                 // 00000005885A: 0006
	.long 0                                                    // 00000005885C: 00000000
	.ascii "@"                                                 // 000000058860: 40
	.byte 0                                                    // 000000058861: 00
	.short 0                                                   // 000000058862: 0000
	.long 0                                                    // 000000058864: 00000000
	.long 0x37e8                                               // 000000058868: 000037E8
	.long 0x60311                                              // 00000005886C: 00060311
	.long 0x64b80                                              // 000000058870: 00064B80
	.long 0                                                    // 000000058874: 00000000
	.ascii "@"                                                 // 000000058878: 40
	.byte 0                                                    // 000000058879: 00
	.short 0                                                   // 00000005887A: 0000
	.long 0                                                    // 00000005887C: 00000000
	.long 0x1417                                               // 000000058880: 00001417
	.long 0x60311                                              // 000000058884: 00060311
	.long 0x62900                                              // 000000058888: 00062900
	.long 0                                                    // 00000005888C: 00000000
	.ascii "@"                                                 // 000000058890: 40
	.byte 0                                                    // 000000058891: 00
	.short 0                                                   // 000000058892: 0000
	.long 0                                                    // 000000058894: 00000000
	.ascii "a"                                                 // 000000058898: 61
	.byte 0x16                                                 // 000000058899: 16
	.short 0                                                   // 00000005889A: 0000
	.long 0x70312                                              // 00000005889C: 00070312
	.long 0x6fd00                                              // 0000000588A0: 0006FD00
	.long 0                                                    // 0000000588A4: 00000000
	.long 0xa4                                                 // 0000000588A8: 000000A4
	.long 0                                                    // 0000000588AC: 00000000
	.long 0x1692                                               // 0000000588B0: 00001692
	.long 0x70312                                              // 0000000588B4: 00070312
	.long 0x6fe00                                              // 0000000588B8: 0006FE00
	.long 0                                                    // 0000000588BC: 00000000
	.long 0x80                                                 // 0000000588C0: 00000080
	.long 0                                                    // 0000000588C4: 00000000
	.long 0x49e2                                               // 0000000588C8: 000049E2
	.long 0x70312                                              // 0000000588CC: 00070312
	.long 0x81100                                              // 0000000588D0: 00081100
	.long 0                                                    // 0000000588D4: 00000000
	.ascii "L"                                                 // 0000000588D8: 4C
	.byte 0                                                    // 0000000588D9: 00
	.short 0                                                   // 0000000588DA: 0000
	.long 0                                                    // 0000000588DC: 00000000
	.ascii "`"                                                 // 0000000588E0: 60
	.byte 0x1                                                  // 0000000588E1: 01
	.short 0                                                   // 0000000588E2: 0000
	.long 0x60311                                              // 0000000588E4: 00060311
	.long 0x61700                                              // 0000000588E8: 00061700
	.long 0                                                    // 0000000588EC: 00000000
	.ascii "@"                                                 // 0000000588F0: 40
	.byte 0                                                    // 0000000588F1: 00
	.short 0                                                   // 0000000588F2: 0000
	.long 0                                                    // 0000000588F4: 00000000
	.ascii "*"                                                 // 0000000588F8: 2A
	.byte 0x11                                                 // 0000000588F9: 11
	.short 0                                                   // 0000000588FA: 0000
	.long 0x70312                                              // 0000000588FC: 00070312
	.long 0x6dd00                                              // 000000058900: 0006DD00
	.long 0                                                    // 000000058904: 00000000
	.ascii "\\"                                                // 000000058908: 5C
	.byte 0x1                                                  // 000000058909: 01
	.short 0                                                   // 00000005890A: 0000
	.long 0                                                    // 00000005890C: 00000000
	.long 0x26fe                                               // 000000058910: 000026FE
	.long 0x60311                                              // 000000058914: 00060311
	.long 0x63b80                                              // 000000058918: 00063B80
	.long 0                                                    // 00000005891C: 00000000
	.ascii "@"                                                 // 000000058920: 40
	.byte 0                                                    // 000000058921: 00
	.short 0                                                   // 000000058922: 0000
	.long 0                                                    // 000000058924: 00000000
	.long 0x2ca4                                               // 000000058928: 00002CA4
	.long 0x70312                                              // 00000005892C: 00070312
	.long 0x78700                                              // 000000058930: 00078700
	.long 0                                                    // 000000058934: 00000000
	.long 0xf8                                                 // 000000058938: 000000F8
	.long 0                                                    // 00000005893C: 00000000
	.ascii "u0"                                                // 000000058940: 3075
	.short 0                                                   // 000000058942: 0000
	.long 0x60311                                              // 000000058944: 00060311
	.long 0x64400                                              // 000000058948: 00064400
	.long 0                                                    // 00000005894C: 00000000
	.ascii "@"                                                 // 000000058950: 40
	.byte 0                                                    // 000000058951: 00
	.short 0                                                   // 000000058952: 0000
	.long 0                                                    // 000000058954: 00000000
	.long 0x3400                                               // 000000058958: 00003400
	.long 0x60311                                              // 00000005895C: 00060311
	.ascii "@H"                                                // 000000058960: 4840
	.short 0x6                                                 // 000000058962: 0006
	.long 0                                                    // 000000058964: 00000000
	.ascii "@"                                                 // 000000058968: 40
	.byte 0                                                    // 000000058969: 00
	.short 0                                                   // 00000005896A: 0000
	.long 0                                                    // 00000005896C: 00000000
	.long 0x42d0                                               // 000000058970: 000042D0
	.long 0x60311                                              // 000000058974: 00060311
	.long 0x654c0                                              // 000000058978: 000654C0
	.long 0                                                    // 00000005897C: 00000000
	.ascii "@"                                                 // 000000058980: 40
	.byte 0                                                    // 000000058981: 00
	.short 0                                                   // 000000058982: 0000
	.long 0                                                    // 000000058984: 00000000
	.ascii "Y"                                                 // 000000058988: 59
	.byte 0x6                                                  // 000000058989: 06
	.short 0                                                   // 00000005898A: 0000
	.long 0x60311                                              // 00000005898C: 00060311
	.long 0x61bc0                                              // 000000058990: 00061BC0
	.long 0                                                    // 000000058994: 00000000
	.ascii "@"                                                 // 000000058998: 40
	.byte 0                                                    // 000000058999: 00
	.short 0                                                   // 00000005899A: 0000
	.long 0                                                    // 00000005899C: 00000000
	.long 0x46af                                               // 0000000589A0: 000046AF
	.long 0x70312                                              // 0000000589A4: 00070312
	.long 0x80300                                              // 0000000589A8: 00080300
	.long 0                                                    // 0000000589AC: 00000000
	.long 0xfc                                                 // 0000000589B0: 000000FC
	.long 0                                                    // 0000000589B4: 00000000
	.ascii "[3"                                                // 0000000589B8: 335B
	.short 0                                                   // 0000000589BA: 0000
	.long 0x60311                                              // 0000000589BC: 00060311
	.long 0x64780                                              // 0000000589C0: 00064780
	.long 0                                                    // 0000000589C4: 00000000
	.ascii "@"                                                 // 0000000589C8: 40
	.byte 0                                                    // 0000000589C9: 00
	.short 0                                                   // 0000000589CA: 0000
	.long 0                                                    // 0000000589CC: 00000000
	.ascii "M"                                                 // 0000000589D0: 4D
	.byte 0x1                                                  // 0000000589D1: 01
	.short 0                                                   // 0000000589D2: 0000
	.long 0x70312                                              // 0000000589D4: 00070312
	.long 0x67b00                                              // 0000000589D8: 00067B00
	.long 0                                                    // 0000000589DC: 00000000
	.long 0x80                                                 // 0000000589E0: 00000080
	.long 0                                                    // 0000000589E4: 00000000
	.long 0x10c0                                               // 0000000589E8: 000010C0
	.long 0x60311                                              // 0000000589EC: 00060311
	.long 0x625c0                                              // 0000000589F0: 000625C0
	.long 0                                                    // 0000000589F4: 00000000
	.ascii "@"                                                 // 0000000589F8: 40
	.byte 0                                                    // 0000000589F9: 00
	.short 0                                                   // 0000000589FA: 0000
	.long 0                                                    // 0000000589FC: 00000000
	.ascii "t"                                                 // 000000058A00: 74
	.byte 0x1f                                                 // 000000058A01: 1F
	.short 0                                                   // 000000058A02: 0000
	.long 0x70312                                              // 000000058A04: 00070312
	.long 0x73000                                              // 000000058A08: 00073000
	.long 0                                                    // 000000058A0C: 00000000
	.long 0x104                                                // 000000058A10: 00000104
	.long 0                                                    // 000000058A14: 00000000
	.ascii "?7"                                                // 000000058A18: 373F
	.short 0                                                   // 000000058A1A: 0000
	.long 0x70312                                              // 000000058A1C: 00070312
	.long 0x7ba00                                              // 000000058A20: 0007BA00
	.long 0                                                    // 000000058A24: 00000000
	.long 0xa8                                                 // 000000058A28: 000000A8
	.long 0                                                    // 000000058A2C: 00000000
	.ascii "`"                                                 // 000000058A30: 60
	.byte 0x8                                                  // 000000058A31: 08
	.short 0                                                   // 000000058A32: 0000
	.long 0x60311                                              // 000000058A34: 00060311
	.long 0x61dc0                                              // 000000058A38: 00061DC0
	.long 0                                                    // 000000058A3C: 00000000
	.ascii "@"                                                 // 000000058A40: 40
	.byte 0                                                    // 000000058A41: 00
	.short 0                                                   // 000000058A42: 0000
	.long 0                                                    // 000000058A44: 00000000
	.ascii "e"                                                 // 000000058A48: 65
	.byte 0x15                                                 // 000000058A49: 15
	.short 0                                                   // 000000058A4A: 0000
	.long 0x70312                                              // 000000058A4C: 00070312
	.long 0x6f700                                              // 000000058A50: 0006F700
	.long 0                                                    // 000000058A54: 00000000
	.long 0x8c                                                 // 000000058A58: 0000008C
	.long 0                                                    // 000000058A5C: 00000000
	.ascii "e5"                                                // 000000058A60: 3565
	.short 0                                                   // 000000058A62: 0000
	.long 0x60311                                              // 000000058A64: 00060311
	.long 0x64980                                              // 000000058A68: 00064980
	.long 0                                                    // 000000058A6C: 00000000
	.ascii "@"                                                 // 000000058A70: 40
	.byte 0                                                    // 000000058A71: 00
	.short 0                                                   // 000000058A72: 0000
	.long 0                                                    // 000000058A74: 00000000
	.ascii "UA"                                                // 000000058A78: 4155
	.short 0                                                   // 000000058A7A: 0000
	.long 0x60311                                              // 000000058A7C: 00060311
	.long 0x65380                                              // 000000058A80: 00065380
	.long 0                                                    // 000000058A84: 00000000
	.ascii "@"                                                 // 000000058A88: 40
	.byte 0                                                    // 000000058A89: 00
	.short 0                                                   // 000000058A8A: 0000
	.long 0                                                    // 000000058A8C: 00000000
	.ascii "!"                                                 // 000000058A90: 21
	.byte 0x19                                                 // 000000058A91: 19
	.short 0                                                   // 000000058A92: 0000
	.long 0x70312                                              // 000000058A94: 00070312
	.long 0x70e00                                              // 000000058A98: 00070E00
	.long 0                                                    // 000000058A9C: 00000000
	.ascii "8"                                                 // 000000058AA0: 38
	.byte 0x1                                                  // 000000058AA1: 01
	.short 0                                                   // 000000058AA2: 0000
	.long 0                                                    // 000000058AA4: 00000000
	.long 0x2df4                                               // 000000058AA8: 00002DF4
	.long 0x60311                                              // 000000058AAC: 00060311
	.ascii "@A"                                                // 000000058AB0: 4140
	.short 0x6                                                 // 000000058AB2: 0006
	.long 0                                                    // 000000058AB4: 00000000
	.ascii "@"                                                 // 000000058AB8: 40
	.byte 0                                                    // 000000058AB9: 00
	.short 0                                                   // 000000058ABA: 0000
	.long 0                                                    // 000000058ABC: 00000000
	.long 0x3de2                                               // 000000058AC0: 00003DE2
	.long 0x70312                                              // 000000058AC4: 00070312
	.long 0x7d800                                              // 000000058AC8: 0007D800
	.long 0                                                    // 000000058ACC: 00000000
	.ascii "<"                                                 // 000000058AD0: 3C
	.byte 0x1                                                  // 000000058AD1: 01
	.short 0                                                   // 000000058AD2: 0000
	.long 0                                                    // 000000058AD4: 00000000
	.long 0x128d                                               // 000000058AD8: 0000128D
	.long 0x60311                                              // 000000058ADC: 00060311
	.long 0x62780                                              // 000000058AE0: 00062780
	.long 0                                                    // 000000058AE4: 00000000
	.ascii "@"                                                 // 000000058AE8: 40
	.byte 0                                                    // 000000058AE9: 00
	.short 0                                                   // 000000058AEA: 0000
	.long 0                                                    // 000000058AEC: 00000000
	.long 0x3c83                                               // 000000058AF0: 00003C83
	.long 0x60311                                              // 000000058AF4: 00060311
	.long 0x64f80                                              // 000000058AF8: 00064F80
	.long 0                                                    // 000000058AFC: 00000000
	.ascii "@"                                                 // 000000058B00: 40
	.byte 0                                                    // 000000058B01: 00
	.short 0                                                   // 000000058B02: 0000
	.long 0                                                    // 000000058B04: 00000000
	.long 0x40b6                                               // 000000058B08: 000040B6
	.long 0x60311                                              // 000000058B0C: 00060311
	.long 0x65300                                              // 000000058B10: 00065300
	.long 0                                                    // 000000058B14: 00000000
	.ascii "@"                                                 // 000000058B18: 40
	.byte 0                                                    // 000000058B19: 00
	.short 0                                                   // 000000058B1A: 0000
	.long 0                                                    // 000000058B1C: 00000000
	.ascii ","                                                 // 000000058B20: 2C
	.byte 0                                                    // 000000058B21: 00
	.short 0                                                   // 000000058B22: 0000
	.long 0x60311                                              // 000000058B24: 00060311
	.ascii "@"                                                 // 000000058B28: 40
	.byte 0x15                                                 // 000000058B29: 15
	.short 0x6                                                 // 000000058B2A: 0006
	.long 0                                                    // 000000058B2C: 00000000
	.ascii "@"                                                 // 000000058B30: 40
	.byte 0                                                    // 000000058B31: 00
	.short 0                                                   // 000000058B32: 0000
	.long 0                                                    // 000000058B34: 00000000
	.long 0x12ae                                               // 000000058B38: 000012AE
	.long 0x70312                                              // 000000058B3C: 00070312
	.long 0x6e600                                              // 000000058B40: 0006E600
	.long 0                                                    // 000000058B44: 00000000
	.long 0xfc                                                 // 000000058B48: 000000FC
	.long 0                                                    // 000000058B4C: 00000000
	.long 0x1b0d                                               // 000000058B50: 00001B0D
	.long 0x70312                                              // 000000058B54: 00070312
	.long 0x71a00                                              // 000000058B58: 00071A00
	.long 0                                                    // 000000058B5C: 00000000
	.ascii "p"                                                 // 000000058B60: 70
	.byte 0x1                                                  // 000000058B61: 01
	.short 0                                                   // 000000058B62: 0000
	.long 0                                                    // 000000058B64: 00000000
	.ascii "b\""                                               // 000000058B68: 2262
	.short 0                                                   // 000000058B6A: 0000
	.long 0x70312                                              // 000000058B6C: 00070312
	.long 0x74300                                              // 000000058B70: 00074300
	.long 0                                                    // 000000058B74: 00000000
	.ascii "`"                                                 // 000000058B78: 60
	.byte 0x1                                                  // 000000058B79: 01
	.short 0                                                   // 000000058B7A: 0000
	.long 0                                                    // 000000058B7C: 00000000
	.ascii "qI"                                                // 000000058B80: 4971
	.short 0                                                   // 000000058B82: 0000
	.long 0x60311                                              // 000000058B84: 00060311
	.ascii "@Z"                                                // 000000058B88: 5A40
	.short 0x6                                                 // 000000058B8A: 0006
	.long 0                                                    // 000000058B8C: 00000000
	.ascii "@"                                                 // 000000058B90: 40
	.byte 0                                                    // 000000058B91: 00
	.short 0                                                   // 000000058B92: 0000
	.long 0                                                    // 000000058B94: 00000000
	.ascii "9L"                                                // 000000058B98: 4C39
	.short 0                                                   // 000000058B9A: 0000
	.long 0x60311                                              // 000000058B9C: 00060311
	.long 0x65d80                                              // 000000058BA0: 00065D80
	.long 0                                                    // 000000058BA4: 00000000
	.ascii "@"                                                 // 000000058BA8: 40
	.byte 0                                                    // 000000058BA9: 00
	.short 0                                                   // 000000058BAA: 0000
	.long 0                                                    // 000000058BAC: 00000000
	.ascii "4"                                                 // 000000058BB0: 34
	.byte 0x4                                                  // 000000058BB1: 04
	.short 0                                                   // 000000058BB2: 0000
	.long 0x70312                                              // 000000058BB4: 00070312
	.long 0x68900                                              // 000000058BB8: 00068900
	.long 0                                                    // 000000058BBC: 00000000
	.long 0xec                                                 // 000000058BC0: 000000EC
	.long 0                                                    // 000000058BC4: 00000000
	.long 0x981                                                // 000000058BC8: 00000981
	.long 0x70312                                              // 000000058BCC: 00070312
	.long 0x6a800                                              // 000000058BD0: 0006A800
	.long 0                                                    // 000000058BD4: 00000000
	.ascii "`"                                                 // 000000058BD8: 60
	.byte 0x1                                                  // 000000058BD9: 01
	.short 0                                                   // 000000058BDA: 0000
	.long 0                                                    // 000000058BDC: 00000000
	.long 0x45e3                                               // 000000058BE0: 000045E3
	.long 0x60311                                              // 000000058BE4: 00060311
	.ascii "@W"                                                // 000000058BE8: 5740
	.short 0x6                                                 // 000000058BEA: 0006
	.long 0                                                    // 000000058BEC: 00000000
	.ascii "@"                                                 // 000000058BF0: 40
	.byte 0                                                    // 000000058BF1: 00
	.short 0                                                   // 000000058BF2: 0000
	.long 0                                                    // 000000058BF4: 00000000
	.long 0x49f0                                               // 000000058BF8: 000049F0
	.long 0x60311                                              // 000000058BFC: 00060311
	.long 0x65ac0                                              // 000000058C00: 00065AC0
	.long 0                                                    // 000000058C04: 00000000
	.ascii "@"                                                 // 000000058C08: 40
	.byte 0                                                    // 000000058C09: 00
	.short 0                                                   // 000000058C0A: 0000
	.long 0                                                    // 000000058C0C: 00000000
	.long 0x31ef                                               // 000000058C10: 000031EF
	.long 0x60311                                              // 000000058C14: 00060311
	.long 0x645c0                                              // 000000058C18: 000645C0
	.long 0                                                    // 000000058C1C: 00000000
	.ascii "@"                                                 // 000000058C20: 40
	.byte 0                                                    // 000000058C21: 00
	.short 0                                                   // 000000058C22: 0000
	.long 0                                                    // 000000058C24: 00000000
	.ascii "%"                                                 // 000000058C28: 25
	.byte 0x6                                                  // 000000058C29: 06
	.short 0                                                   // 000000058C2A: 0000
	.long 0x60311                                              // 000000058C2C: 00060311
	.long 0x61b80                                              // 000000058C30: 00061B80
	.long 0                                                    // 000000058C34: 00000000
	.ascii "@"                                                 // 000000058C38: 40
	.byte 0                                                    // 000000058C39: 00
	.short 0                                                   // 000000058C3A: 0000
	.long 0                                                    // 000000058C3C: 00000000
	.long 0x11da                                               // 000000058C40: 000011DA
	.long 0x60311                                              // 000000058C44: 00060311
	.long 0x626c0                                              // 000000058C48: 000626C0
	.long 0                                                    // 000000058C4C: 00000000
	.ascii "@"                                                 // 000000058C50: 40
	.byte 0                                                    // 000000058C51: 00
	.short 0                                                   // 000000058C52: 0000
	.long 0                                                    // 000000058C54: 00000000
	.long 0x1d99                                               // 000000058C58: 00001D99
	.long 0x60311                                              // 000000058C5C: 00060311
	.long 0x63380                                              // 000000058C60: 00063380
	.long 0                                                    // 000000058C64: 00000000
	.ascii "@"                                                 // 000000058C68: 40
	.byte 0                                                    // 000000058C69: 00
	.short 0                                                   // 000000058C6A: 0000
	.long 0                                                    // 000000058C6C: 00000000
	.ascii "{ "                                                // 000000058C70: 207B
	.short 0                                                   // 000000058C72: 0000
	.long 0x60311                                              // 000000058C74: 00060311
	.long 0x63600                                              // 000000058C78: 00063600
	.long 0                                                    // 000000058C7C: 00000000
	.ascii "@"                                                 // 000000058C80: 40
	.byte 0                                                    // 000000058C81: 00
	.short 0                                                   // 000000058C82: 0000
	.long 0                                                    // 000000058C84: 00000000
	.ascii "|#"                                                // 000000058C88: 237C
	.short 0                                                   // 000000058C8A: 0000
	.long 0x60311                                              // 000000058C8C: 00060311
	.long 0x63880                                              // 000000058C90: 00063880
	.long 0                                                    // 000000058C94: 00000000
	.ascii "@"                                                 // 000000058C98: 40
	.byte 0                                                    // 000000058C99: 00
	.short 0                                                   // 000000058C9A: 0000
	.long 0                                                    // 000000058C9C: 00000000
	.long 0x2b3                                                // 000000058CA0: 000002B3
	.long 0x60311                                              // 000000058CA4: 00060311
	.ascii "@"                                                 // 000000058CA8: 40
	.byte 0x18                                                 // 000000058CA9: 18
	.short 0x6                                                 // 000000058CAA: 0006
	.long 0                                                    // 000000058CAC: 00000000
	.ascii "@"                                                 // 000000058CB0: 40
	.byte 0                                                    // 000000058CB1: 00
	.short 0                                                   // 000000058CB2: 0000
	.long 0                                                    // 000000058CB4: 00000000
	.ascii "]"                                                 // 000000058CB8: 5D
	.byte 0x5                                                  // 000000058CB9: 05
	.short 0                                                   // 000000058CBA: 0000
	.long 0x60311                                              // 000000058CBC: 00060311
	.long 0x61ac0                                              // 000000058CC0: 00061AC0
	.long 0                                                    // 000000058CC4: 00000000
	.ascii "@"                                                 // 000000058CC8: 40
	.byte 0                                                    // 000000058CC9: 00
	.short 0                                                   // 000000058CCA: 0000
	.long 0                                                    // 000000058CCC: 00000000
	.long 0x6d6                                                // 000000058CD0: 000006D6
	.long 0x60311                                              // 000000058CD4: 00060311
	.ascii "@"                                                 // 000000058CD8: 40
	.byte 0x1c                                                 // 000000058CD9: 1C
	.short 0x6                                                 // 000000058CDA: 0006
	.long 0                                                    // 000000058CDC: 00000000
	.ascii "@"                                                 // 000000058CE0: 40
	.byte 0                                                    // 000000058CE1: 00
	.short 0                                                   // 000000058CE2: 0000
	.long 0                                                    // 000000058CE4: 00000000
	.ascii "W8"                                                // 000000058CE8: 3857
	.short 0                                                   // 000000058CEA: 0000
	.long 0x70312                                              // 000000058CEC: 00070312
	.long 0x7be00                                              // 000000058CF0: 0007BE00
	.long 0                                                    // 000000058CF4: 00000000
	.long 0x118                                                // 000000058CF8: 00000118
	.long 0                                                    // 000000058CFC: 00000000
	.long 0x3fac                                               // 000000058D00: 00003FAC
	.long 0x70312                                              // 000000058D04: 00070312
	.long 0x7e200                                              // 000000058D08: 0007E200
	.long 0                                                    // 000000058D0C: 00000000
	.long 0xe0                                                 // 000000058D10: 000000E0
	.long 0                                                    // 000000058D14: 00000000
	.long 0x460d                                               // 000000058D18: 0000460D
	.long 0x70312                                              // 000000058D1C: 00070312
	.long 0x7ff00                                              // 000000058D20: 0007FF00
	.long 0                                                    // 000000058D24: 00000000
	.long 0x11c                                                // 000000058D28: 0000011C
	.long 0                                                    // 000000058D2C: 00000000
	.ascii "8"                                                 // 000000058D30: 38
	.byte 0x1b                                                 // 000000058D31: 1B
	.short 0                                                   // 000000058D32: 0000
	.long 0x60311                                              // 000000058D34: 00060311
	.long 0x63180                                              // 000000058D38: 00063180
	.long 0                                                    // 000000058D3C: 00000000
	.ascii "@"                                                 // 000000058D40: 40
	.byte 0                                                    // 000000058D41: 00
	.short 0                                                   // 000000058D42: 0000
	.long 0                                                    // 000000058D44: 00000000
	.ascii "|8"                                                // 000000058D48: 387C
	.short 0                                                   // 000000058D4A: 0000
	.long 0x60311                                              // 000000058D4C: 00060311
	.long 0x64c00                                              // 000000058D50: 00064C00
	.long 0                                                    // 000000058D54: 00000000
	.ascii "@"                                                 // 000000058D58: 40
	.byte 0                                                    // 000000058D59: 00
	.short 0                                                   // 000000058D5A: 0000
	.long 0                                                    // 000000058D5C: 00000000
	.ascii "	"                                                 // 000000058D60: 09
	.byte 0                                                    // 000000058D61: 00
	.short 0                                                   // 000000058D62: 0000
	.long 0x60311                                              // 000000058D64: 00060311
	.long 0x61500                                              // 000000058D68: 00061500
	.long 0                                                    // 000000058D6C: 00000000
	.ascii "@"                                                 // 000000058D70: 40
	.byte 0                                                    // 000000058D71: 00
	.short 0                                                   // 000000058D72: 0000
	.long 0                                                    // 000000058D74: 00000000
	.long 0x15a5                                               // 000000058D78: 000015A5
	.long 0x60311                                              // 000000058D7C: 00060311
	.ascii "@+"                                                // 000000058D80: 2B40
	.short 0x6                                                 // 000000058D82: 0006
	.long 0                                                    // 000000058D84: 00000000
	.ascii "@"                                                 // 000000058D88: 40
	.byte 0                                                    // 000000058D89: 00
	.short 0                                                   // 000000058D8A: 0000
	.long 0                                                    // 000000058D8C: 00000000
	.long 0x16f4                                               // 000000058D90: 000016F4
	.long 0x70312                                              // 000000058D94: 00070312
	.long 0x70000                                              // 000000058D98: 00070000
	.long 0                                                    // 000000058D9C: 00000000
	.long 0x94                                                 // 000000058DA0: 00000094
	.long 0                                                    // 000000058DA4: 00000000
	.long 0x20a4                                               // 000000058DA8: 000020A4
	.long 0x70312                                              // 000000058DAC: 00070312
	.long 0x73700                                              // 000000058DB0: 00073700
	.long 0                                                    // 000000058DB4: 00000000
	.ascii "`"                                                 // 000000058DB8: 60
	.byte 0x1                                                  // 000000058DB9: 01
	.short 0                                                   // 000000058DBA: 0000
	.long 0                                                    // 000000058DBC: 00000000
	.long 0x3efa                                               // 000000058DC0: 00003EFA
	.long 0x60311                                              // 000000058DC4: 00060311
	.long 0x65180                                              // 000000058DC8: 00065180
	.long 0                                                    // 000000058DCC: 00000000
	.ascii "@"                                                 // 000000058DD0: 40
	.byte 0                                                    // 000000058DD1: 00
	.short 0                                                   // 000000058DD2: 0000
	.long 0                                                    // 000000058DD4: 00000000
	.long 0x2db                                                // 000000058DD8: 000002DB
	.long 0x70312                                              // 000000058DDC: 00070312
	.long 0x68200                                              // 000000058DE0: 00068200
	.long 0                                                    // 000000058DE4: 00000000
	.long 0xf8                                                 // 000000058DE8: 000000F8
	.long 0                                                    // 000000058DEC: 00000000
	.long 0x18ee                                               // 000000058DF0: 000018EE
	.long 0x70312                                              // 000000058DF4: 00070312
	.long 0x70d00                                              // 000000058DF8: 00070D00
	.long 0                                                    // 000000058DFC: 00000000
	.long 0x84                                                 // 000000058E00: 00000084
	.long 0                                                    // 000000058E04: 00000000
	.long 0x25d6                                               // 000000058E08: 000025D6
	.long 0x60311                                              // 000000058E0C: 00060311
	.long 0x63a80                                              // 000000058E10: 00063A80
	.long 0                                                    // 000000058E14: 00000000
	.ascii "@"                                                 // 000000058E18: 40
	.byte 0                                                    // 000000058E19: 00
	.short 0                                                   // 000000058E1A: 0000
	.long 0                                                    // 000000058E1C: 00000000
	.long 0x3915                                               // 000000058E20: 00003915
	.long 0x60311                                              // 000000058E24: 00060311
	.long 0x64c80                                              // 000000058E28: 00064C80
	.long 0                                                    // 000000058E2C: 00000000
	.ascii "@"                                                 // 000000058E30: 40
	.byte 0                                                    // 000000058E31: 00
	.short 0                                                   // 000000058E32: 0000
	.long 0                                                    // 000000058E34: 00000000
	.long 0x4281                                               // 000000058E38: 00004281
	.long 0x60311                                              // 000000058E3C: 00060311
	.long 0x65480                                              // 000000058E40: 00065480
	.long 0                                                    // 000000058E44: 00000000
	.ascii "@"                                                 // 000000058E48: 40
	.byte 0                                                    // 000000058E49: 00
	.short 0                                                   // 000000058E4A: 0000
	.long 0                                                    // 000000058E4C: 00000000
	.ascii "X"                                                 // 000000058E50: 58
	.byte 0xe                                                  // 000000058E51: 0E
	.short 0                                                   // 000000058E52: 0000
	.long 0x60311                                              // 000000058E54: 00060311
	.long 0x62380                                              // 000000058E58: 00062380
	.long 0                                                    // 000000058E5C: 00000000
	.ascii "@"                                                 // 000000058E60: 40
	.byte 0                                                    // 000000058E61: 00
	.short 0                                                   // 000000058E62: 0000
	.long 0                                                    // 000000058E64: 00000000
	.ascii "4"                                                 // 000000058E68: 34
	.byte 0x16                                                 // 000000058E69: 16
	.short 0                                                   // 000000058E6A: 0000
	.long 0x70312                                              // 000000058E6C: 00070312
	.long 0x6fc00                                              // 000000058E70: 0006FC00
	.long 0                                                    // 000000058E74: 00000000
	.ascii "d"                                                 // 000000058E78: 64
	.byte 0                                                    // 000000058E79: 00
	.short 0                                                   // 000000058E7A: 0000
	.long 0                                                    // 000000058E7C: 00000000
	.long 0x1ea5                                               // 000000058E80: 00001EA5
	.long 0x70312                                              // 000000058E84: 00070312
	.long 0x72c00                                              // 000000058E88: 00072C00
	.long 0                                                    // 000000058E8C: 00000000
	.ascii " "                                                 // 000000058E90: 20
	.byte 0x1                                                  // 000000058E91: 01
	.short 0                                                   // 000000058E92: 0000
	.long 0                                                    // 000000058E94: 00000000
	.long 0x2b80                                               // 000000058E98: 00002B80
	.long 0x70312                                              // 000000058E9C: 00070312
	.long 0x77f00                                              // 000000058EA0: 00077F00
	.long 0                                                    // 000000058EA4: 00000000
	.ascii "\\"                                                // 000000058EA8: 5C
	.byte 0x1                                                  // 000000058EA9: 01
	.short 0                                                   // 000000058EAA: 0000
	.long 0                                                    // 000000058EAC: 00000000
	.long 0x2feb                                               // 000000058EB0: 00002FEB
	.long 0x70312                                              // 000000058EB4: 00070312
	.long 0x79900                                              // 000000058EB8: 00079900
	.long 0                                                    // 000000058EBC: 00000000
	.long 0x8c                                                 // 000000058EC0: 0000008C
	.long 0                                                    // 000000058EC4: 00000000
	.long 0x4ae3                                               // 000000058EC8: 00004AE3
	.long 0x70312                                              // 000000058ECC: 00070312
	.long 0x81600                                              // 000000058ED0: 00081600
	.long 0                                                    // 000000058ED4: 00000000
	.ascii "\\"                                                // 000000058ED8: 5C
	.byte 0                                                    // 000000058ED9: 00
	.short 0                                                   // 000000058EDA: 0000
	.long 0                                                    // 000000058EDC: 00000000
	.ascii "s"                                                 // 000000058EE0: 73
	.byte 0x11                                                 // 000000058EE1: 11
	.short 0                                                   // 000000058EE2: 0000
	.long 0x70312                                              // 000000058EE4: 00070312
	.long 0x6df00                                              // 000000058EE8: 0006DF00
	.long 0                                                    // 000000058EEC: 00000000
	.ascii "H"                                                 // 000000058EF0: 48
	.byte 0x1                                                  // 000000058EF1: 01
	.short 0                                                   // 000000058EF2: 0000
	.long 0                                                    // 000000058EF4: 00000000
	.long 0x3cca                                               // 000000058EF8: 00003CCA
	.long 0x60311                                              // 000000058EFC: 00060311
	.long 0x64fc0                                              // 000000058F00: 00064FC0
	.long 0                                                    // 000000058F04: 00000000
	.ascii "@"                                                 // 000000058F08: 40
	.byte 0                                                    // 000000058F09: 00
	.short 0                                                   // 000000058F0A: 0000
	.long 0                                                    // 000000058F0C: 00000000
	.ascii "!C"                                                // 000000058F10: 4321
	.short 0                                                   // 000000058F12: 0000
	.long 0x60311                                              // 000000058F14: 00060311
	.long 0x65500                                              // 000000058F18: 00065500
	.long 0                                                    // 000000058F1C: 00000000
	.ascii "@"                                                 // 000000058F20: 40
	.byte 0                                                    // 000000058F21: 00
	.short 0                                                   // 000000058F22: 0000
	.long 0                                                    // 000000058F24: 00000000
	.long 0xda                                                 // 000000058F28: 000000DA
	.long 0x60311                                              // 000000058F2C: 00060311
	.ascii "@"                                                 // 000000058F30: 40
	.byte 0x16                                                 // 000000058F31: 16
	.short 0x6                                                 // 000000058F32: 0006
	.long 0                                                    // 000000058F34: 00000000
	.ascii "@"                                                 // 000000058F38: 40
	.byte 0                                                    // 000000058F39: 00
	.short 0                                                   // 000000058F3A: 0000
	.long 0                                                    // 000000058F3C: 00000000
	.long 0xbf9                                                // 000000058F40: 00000BF9
	.long 0x60311                                              // 000000058F44: 00060311
	.ascii "@!"                                                // 000000058F48: 2140
	.short 0x6                                                 // 000000058F4A: 0006
	.long 0                                                    // 000000058F4C: 00000000
	.ascii "@"                                                 // 000000058F50: 40
	.byte 0                                                    // 000000058F51: 00
	.short 0                                                   // 000000058F52: 0000
	.long 0                                                    // 000000058F54: 00000000
	.long 0xee9                                                // 000000058F58: 00000EE9
	.long 0x60311                                              // 000000058F5C: 00060311
	.long 0x62400                                              // 000000058F60: 00062400
	.long 0                                                    // 000000058F64: 00000000
	.ascii "@"                                                 // 000000058F68: 40
	.byte 0                                                    // 000000058F69: 00
	.short 0                                                   // 000000058F6A: 0000
	.long 0                                                    // 000000058F6C: 00000000
	.ascii "("                                                 // 000000058F70: 28
	.byte 0x1d                                                 // 000000058F71: 1D
	.short 0                                                   // 000000058F72: 0000
	.long 0x70312                                              // 000000058F74: 00070312
	.long 0x72400                                              // 000000058F78: 00072400
	.long 0                                                    // 000000058F7C: 00000000
	.ascii "\\"                                                // 000000058F80: 5C
	.byte 0x1                                                  // 000000058F81: 01
	.short 0                                                   // 000000058F82: 0000
	.long 0                                                    // 000000058F84: 00000000
	.long 0x21c8                                               // 000000058F88: 000021C8
	.long 0x70312                                              // 000000058F8C: 00070312
	.long 0x73f00                                              // 000000058F90: 00073F00
	.long 0                                                    // 000000058F94: 00000000
	.ascii "\\"                                                // 000000058F98: 5C
	.byte 0x1                                                  // 000000058F99: 01
	.short 0                                                   // 000000058F9A: 0000
	.long 0                                                    // 000000058F9C: 00000000
	.long 0x30ce                                               // 000000058FA0: 000030CE
	.long 0x60311                                              // 000000058FA4: 00060311
	.long 0x64480                                              // 000000058FA8: 00064480
	.long 0                                                    // 000000058FAC: 00000000
	.ascii "@"                                                 // 000000058FB0: 40
	.byte 0                                                    // 000000058FB1: 00
	.short 0                                                   // 000000058FB2: 0000
	.long 0                                                    // 000000058FB4: 00000000
	.long 0x7ff                                                // 000000058FB8: 000007FF
	.long 0x70312                                              // 000000058FBC: 00070312
	.long 0x69d00                                              // 000000058FC0: 00069D00
	.long 0                                                    // 000000058FC4: 00000000
	.ascii "H"                                                 // 000000058FC8: 48
	.byte 0x1                                                  // 000000058FC9: 01
	.short 0                                                   // 000000058FCA: 0000
	.long 0                                                    // 000000058FCC: 00000000
	.long 0x1507                                               // 000000058FD0: 00001507
	.long 0x70312                                              // 000000058FD4: 00070312
	.long 0x6f500                                              // 000000058FD8: 0006F500
	.long 0                                                    // 000000058FDC: 00000000
	.ascii "d"                                                 // 000000058FE0: 64
	.byte 0                                                    // 000000058FE1: 00
	.short 0                                                   // 000000058FE2: 0000
	.long 0                                                    // 000000058FE4: 00000000
	.long 0x297f                                               // 000000058FE8: 0000297F
	.long 0x60311                                              // 000000058FEC: 00060311
	.long 0x63d80                                              // 000000058FF0: 00063D80
	.long 0                                                    // 000000058FF4: 00000000
	.ascii "@"                                                 // 000000058FF8: 40
	.byte 0                                                    // 000000058FF9: 00
	.short 0                                                   // 000000058FFA: 0000
	.long 0                                                    // 000000058FFC: 00000000
	.ascii "Z"                                                 // 000000059000: 5A
	.byte 0                                                    // 000000059001: 00
	.short 0                                                   // 000000059002: 0000
	.long 0x60311                                              // 000000059004: 00060311
	.long 0x61580                                              // 000000059008: 00061580
	.long 0                                                    // 00000005900C: 00000000
	.ascii "@"                                                 // 000000059010: 40
	.byte 0                                                    // 000000059011: 00
	.short 0                                                   // 000000059012: 0000
	.long 0                                                    // 000000059014: 00000000
	.long 0xc6                                                 // 000000059018: 000000C6
	.long 0x70312                                              // 00000005901C: 00070312
	.long 0x67600                                              // 000000059020: 00067600
	.long 0                                                    // 000000059024: 00000000
	.long 0xf4                                                 // 000000059028: 000000F4
	.long 0                                                    // 00000005902C: 00000000
	.long 0x130d                                               // 000000059030: 0000130D
	.long 0x60311                                              // 000000059034: 00060311
	.long 0x62800                                              // 000000059038: 00062800
	.long 0                                                    // 00000005903C: 00000000
	.ascii "@"                                                 // 000000059040: 40
	.byte 0                                                    // 000000059041: 00
	.short 0                                                   // 000000059042: 0000
	.long 0                                                    // 000000059044: 00000000
	.long 0x1594                                               // 000000059048: 00001594
	.long 0x70312                                              // 00000005904C: 00070312
	.long 0x6f800                                              // 000000059050: 0006F800
	.long 0                                                    // 000000059054: 00000000
	.ascii "x"                                                 // 000000059058: 78
	.byte 0                                                    // 000000059059: 00
	.short 0                                                   // 00000005905A: 0000
	.long 0                                                    // 00000005905C: 00000000
	.ascii "U+"                                                // 000000059060: 2B55
	.short 0                                                   // 000000059062: 0000
	.long 0x60311                                              // 000000059064: 00060311
	.long 0x63f00                                              // 000000059068: 00063F00
	.long 0                                                    // 00000005906C: 00000000
	.ascii "@"                                                 // 000000059070: 40
	.byte 0                                                    // 000000059071: 00
	.short 0                                                   // 000000059072: 0000
	.long 0                                                    // 000000059074: 00000000
	.ascii "Q,"                                                // 000000059078: 2C51
	.short 0                                                   // 00000005907A: 0000
	.long 0x70312                                              // 00000005907C: 00070312
	.long 0x78500                                              // 000000059080: 00078500
	.long 0                                                    // 000000059084: 00000000
	.long 0x104                                                // 000000059088: 00000104
	.long 0                                                    // 00000005908C: 00000000
	.ascii "~A"                                                // 000000059090: 417E
	.short 0                                                   // 000000059092: 0000
	.long 0x70312                                              // 000000059094: 00070312
	.long 0x7eb00                                              // 000000059098: 0007EB00
	.long 0                                                    // 00000005909C: 00000000
	.long 0xe8                                                 // 0000000590A0: 000000E8
	.long 0                                                    // 0000000590A4: 00000000
	.long 0x5e4                                                // 0000000590A8: 000005E4
	.long 0x60311                                              // 0000000590AC: 00060311
	.ascii "@"                                                 // 0000000590B0: 40
	.byte 0x1b                                                 // 0000000590B1: 1B
	.short 0x6                                                 // 0000000590B2: 0006
	.long 0                                                    // 0000000590B4: 00000000
	.ascii "@"                                                 // 0000000590B8: 40
	.byte 0                                                    // 0000000590B9: 00
	.short 0                                                   // 0000000590BA: 0000
	.long 0                                                    // 0000000590BC: 00000000
	.long 0x2302                                               // 0000000590C0: 00002302
	.long 0x70312                                              // 0000000590C4: 00070312
	.long 0x74700                                              // 0000000590C8: 00074700
	.long 0                                                    // 0000000590CC: 00000000
	.long 0x1c0                                                // 0000000590D0: 000001C0
	.long 0                                                    // 0000000590D4: 00000000
	.ascii "($"                                                // 0000000590D8: 2428
	.short 0                                                   // 0000000590DA: 0000
	.long 0x70312                                              // 0000000590DC: 00070312
	.long 0x74f00                                              // 0000000590E0: 00074F00
	.long 0                                                    // 0000000590E4: 00000000
	.ascii "D"                                                 // 0000000590E8: 44
	.byte 0x1                                                  // 0000000590E9: 01
	.short 0                                                   // 0000000590EA: 0000
	.long 0                                                    // 0000000590EC: 00000000
	.ascii "{'"                                                // 0000000590F0: 277B
	.short 0                                                   // 0000000590F2: 0000
	.long 0x70312                                              // 0000000590F4: 00070312
	.long 0x76500                                              // 0000000590F8: 00076500
	.long 0                                                    // 0000000590FC: 00000000
	.ascii "T"                                                 // 000000059100: 54
	.byte 0x1                                                  // 000000059101: 01
	.short 0                                                   // 000000059102: 0000
	.long 0                                                    // 000000059104: 00000000
	.ascii "9;"                                                // 000000059108: 3B39
	.short 0                                                   // 00000005910A: 0000
	.long 0x70312                                              // 00000005910C: 00070312
	.long 0x7ca00                                              // 000000059110: 0007CA00
	.long 0                                                    // 000000059114: 00000000
	.long 0xd4                                                 // 000000059118: 000000D4
	.long 0                                                    // 00000005911C: 00000000
	.long 0x4fb                                                // 000000059120: 000004FB
	.long 0x70312                                              // 000000059124: 00070312
	.long 0x68c00                                              // 000000059128: 00068C00
	.long 0                                                    // 00000005912C: 00000000
	.ascii "T"                                                 // 000000059130: 54
	.byte 0x1                                                  // 000000059131: 01
	.short 0                                                   // 000000059132: 0000
	.long 0                                                    // 000000059134: 00000000
	.long 0x8fb                                                // 000000059138: 000008FB
	.long 0x70312                                              // 00000005913C: 00070312
	.long 0x6a400                                              // 000000059140: 0006A400
	.long 0                                                    // 000000059144: 00000000
	.ascii "T"                                                 // 000000059148: 54
	.byte 0x1                                                  // 000000059149: 01
	.short 0                                                   // 00000005914A: 0000
	.long 0                                                    // 00000005914C: 00000000
	.long 0xca7                                                // 000000059150: 00000CA7
	.long 0x70312                                              // 000000059154: 00070312
	.long 0x6bb00                                              // 000000059158: 0006BB00
	.long 0                                                    // 00000005915C: 00000000
	.ascii "P"                                                 // 000000059160: 50
	.byte 0x1                                                  // 000000059161: 01
	.short 0                                                   // 000000059162: 0000
	.long 0                                                    // 000000059164: 00000000
	.long 0x23a6                                               // 000000059168: 000023A6
	.long 0x70312                                              // 00000005916C: 00070312
	.long 0x74b00                                              // 000000059170: 00074B00
	.long 0                                                    // 000000059174: 00000000
	.ascii "x"                                                 // 000000059178: 78
	.byte 0x1                                                  // 000000059179: 01
	.short 0                                                   // 00000005917A: 0000
	.long 0                                                    // 00000005917C: 00000000
	.long 0x2fce                                               // 000000059180: 00002FCE
	.long 0x60311                                              // 000000059184: 00060311
	.ascii "@C"                                                // 000000059188: 4340
	.short 0x6                                                 // 00000005918A: 0006
	.long 0                                                    // 00000005918C: 00000000
	.ascii "@"                                                 // 000000059190: 40
	.byte 0                                                    // 000000059191: 00
	.short 0                                                   // 000000059192: 0000
	.long 0                                                    // 000000059194: 00000000
	.ascii "b%"                                                // 000000059198: 2562
	.short 0                                                   // 00000005919A: 0000
	.long 0x70312                                              // 00000005919C: 00070312
	.long 0x75700                                              // 0000000591A0: 00075700
	.long 0                                                    // 0000000591A4: 00000000
	.ascii "D"                                                 // 0000000591A8: 44
	.byte 0x1                                                  // 0000000591A9: 01
	.short 0                                                   // 0000000591AA: 0000
	.long 0                                                    // 0000000591AC: 00000000
	.long 0x28c3                                               // 0000000591B0: 000028C3
	.long 0x70312                                              // 0000000591B4: 00070312
	.long 0x76d00                                              // 0000000591B8: 00076D00
	.long 0                                                    // 0000000591BC: 00000000
	.ascii "|"                                                 // 0000000591C0: 7C
	.byte 0x1                                                  // 0000000591C1: 01
	.short 0                                                   // 0000000591C2: 0000
	.long 0                                                    // 0000000591C4: 00000000
	.ascii "&"                                                 // 0000000591C8: 26
	.byte 0x3                                                  // 0000000591C9: 03
	.short 0                                                   // 0000000591CA: 0000
	.long 0x70312                                              // 0000000591CC: 00070312
	.long 0x68300                                              // 0000000591D0: 00068300
	.long 0                                                    // 0000000591D4: 00000000
	.ascii "@"                                                 // 0000000591D8: 40
	.byte 0x1                                                  // 0000000591D9: 01
	.short 0                                                   // 0000000591DA: 0000
	.long 0                                                    // 0000000591DC: 00000000
	.long 0x9c8                                                // 0000000591E0: 000009C8
	.long 0x70312                                              // 0000000591E4: 00070312
	.long 0x6aa00                                              // 0000000591E8: 0006AA00
	.long 0                                                    // 0000000591EC: 00000000
	.ascii "d"                                                 // 0000000591F0: 64
	.byte 0x1                                                  // 0000000591F1: 01
	.short 0                                                   // 0000000591F2: 0000
	.long 0                                                    // 0000000591F4: 00000000
	.ascii "x"                                                 // 0000000591F8: 78
	.byte 0x16                                                 // 0000000591F9: 16
	.short 0                                                   // 0000000591FA: 0000
	.long 0x60311                                              // 0000000591FC: 00060311
	.long 0x62c80                                              // 000000059200: 00062C80
	.long 0                                                    // 000000059204: 00000000
	.ascii "@"                                                 // 000000059208: 40
	.byte 0                                                    // 000000059209: 00
	.short 0                                                   // 00000005920A: 0000
	.long 0                                                    // 00000005920C: 00000000
	.long 0x341d                                               // 000000059210: 0000341D
	.long 0x70312                                              // 000000059214: 00070312
	.long 0x7af00                                              // 000000059218: 0007AF00
	.long 0                                                    // 00000005921C: 00000000
	.ascii "T"                                                 // 000000059220: 54
	.byte 0                                                    // 000000059221: 00
	.short 0                                                   // 000000059222: 0000
	.long 0                                                    // 000000059224: 00000000
	.long 0x1496                                               // 000000059228: 00001496
	.long 0x60311                                              // 00000005922C: 00060311
	.long 0x629c0                                              // 000000059230: 000629C0
	.long 0                                                    // 000000059234: 00000000
	.ascii "@"                                                 // 000000059238: 40
	.byte 0                                                    // 000000059239: 00
	.short 0                                                   // 00000005923A: 0000
	.long 0                                                    // 00000005923C: 00000000
	.ascii "<6"                                                // 000000059240: 363C
	.short 0                                                   // 000000059242: 0000
	.long 0x70312                                              // 000000059244: 00070312
	.long 0x7b700                                              // 000000059248: 0007B700
	.long 0                                                    // 00000005924C: 00000000
	.long 0xec                                                 // 000000059250: 000000EC
	.long 0                                                    // 000000059254: 00000000
	.long 0x3ff7                                               // 000000059258: 00003FF7
	.long 0x70312                                              // 00000005925C: 00070312
	.long 0x7e300                                              // 000000059260: 0007E300
	.long 0                                                    // 000000059264: 00000000
	.long 0xe0                                                 // 000000059268: 000000E0
	.long 0                                                    // 00000005926C: 00000000
	.long 0x8ae                                                // 000000059270: 000008AE
	.long 0x70312                                              // 000000059274: 00070312
	.long 0x6a200                                              // 000000059278: 0006A200
	.long 0                                                    // 00000005927C: 00000000
	.ascii "`"                                                 // 000000059280: 60
	.byte 0x1                                                  // 000000059281: 01
	.short 0                                                   // 000000059282: 0000
	.long 0                                                    // 000000059284: 00000000
	.long 0x2ced                                               // 000000059288: 00002CED
	.long 0x70312                                              // 00000005928C: 00070312
	.long 0x78800                                              // 000000059290: 00078800
	.long 0                                                    // 000000059294: 00000000
	.long 0x108                                                // 000000059298: 00000108
	.long 0                                                    // 00000005929C: 00000000
	.ascii "&3"                                                // 0000000592A0: 3326
	.short 0                                                   // 0000000592A2: 0000
	.long 0x60311                                              // 0000000592A4: 00060311
	.ascii "@G"                                                // 0000000592A8: 4740
	.short 0x6                                                 // 0000000592AA: 0006
	.long 0                                                    // 0000000592AC: 00000000
	.ascii "@"                                                 // 0000000592B0: 40
	.byte 0                                                    // 0000000592B1: 00
	.short 0                                                   // 0000000592B2: 0000
	.long 0                                                    // 0000000592B4: 00000000
	.long 0x4bde                                               // 0000000592B8: 00004BDE
	.long 0x70312                                              // 0000000592BC: 00070312
	.long 0x81b00                                              // 0000000592C0: 00081B00
	.long 0                                                    // 0000000592C4: 00000000
	.ascii "D"                                                 // 0000000592C8: 44
	.byte 0                                                    // 0000000592C9: 00
	.short 0                                                   // 0000000592CA: 0000
	.long 0                                                    // 0000000592CC: 00000000
	.long 0xa9d                                                // 0000000592D0: 00000A9D
	.long 0x70312                                              // 0000000592D4: 00070312
	.long 0x6b000                                              // 0000000592D8: 0006B000
	.long 0                                                    // 0000000592DC: 00000000
	.ascii "t"                                                 // 0000000592E0: 74
	.byte 0x1                                                  // 0000000592E1: 01
	.short 0                                                   // 0000000592E2: 0000
	.long 0                                                    // 0000000592E4: 00000000
	.long 0x1106                                               // 0000000592E8: 00001106
	.long 0x60311                                              // 0000000592EC: 00060311
	.long 0x62600                                              // 0000000592F0: 00062600
	.long 0                                                    // 0000000592F4: 00000000
	.ascii "@"                                                 // 0000000592F8: 40
	.byte 0                                                    // 0000000592F9: 00
	.short 0                                                   // 0000000592FA: 0000
	.long 0                                                    // 0000000592FC: 00000000
	.ascii "Z:"                                                // 000000059300: 3A5A
	.short 0                                                   // 000000059302: 0000
	.long 0x70312                                              // 000000059304: 00070312
	.long 0x7c600                                              // 000000059308: 0007C600
	.long 0                                                    // 00000005930C: 00000000
	.long 0xa0                                                 // 000000059310: 000000A0
	.long 0                                                    // 000000059314: 00000000
	.long 0x3b84                                               // 000000059318: 00003B84
	.long 0x70312                                              // 00000005931C: 00070312
	.long 0x7cb00                                              // 000000059320: 0007CB00
	.long 0                                                    // 000000059324: 00000000
	.long 0xec                                                 // 000000059328: 000000EC
	.long 0                                                    // 00000005932C: 00000000
	.long 0xc1d                                                // 000000059330: 00000C1D
	.long 0x70312                                              // 000000059334: 00070312
	.long 0x6b800                                              // 000000059338: 0006B800
	.long 0                                                    // 00000005933C: 00000000
	.long 0xf8                                                 // 000000059340: 000000F8
	.long 0                                                    // 000000059344: 00000000
	.long 0x28eb                                               // 000000059348: 000028EB
	.long 0x60311                                              // 00000005934C: 00060311
	.long 0x63d00                                              // 000000059350: 00063D00
	.long 0                                                    // 000000059354: 00000000
	.ascii "@"                                                 // 000000059358: 40
	.byte 0                                                    // 000000059359: 00
	.short 0                                                   // 00000005935A: 0000
	.long 0                                                    // 00000005935C: 00000000
	.long 0x18b7                                               // 000000059360: 000018B7
	.long 0x70312                                              // 000000059364: 00070312
	.long 0x70b00                                              // 000000059368: 00070B00
	.long 0                                                    // 00000005936C: 00000000
	.ascii "`"                                                 // 000000059370: 60
	.byte 0x1                                                  // 000000059371: 01
	.short 0                                                   // 000000059372: 0000
	.long 0                                                    // 000000059374: 00000000
	.ascii ":!"                                                // 000000059378: 213A
	.short 0                                                   // 00000005937A: 0000
	.long 0x70312                                              // 00000005937C: 00070312
	.long 0x73b00                                              // 000000059380: 00073B00
	.long 0                                                    // 000000059384: 00000000
	.long 0x180                                                // 000000059388: 00000180
	.long 0                                                    // 00000005938C: 00000000
	.long 0x2215                                               // 000000059390: 00002215
	.long 0x70312                                              // 000000059394: 00070312
	.long 0x74100                                              // 000000059398: 00074100
	.long 0                                                    // 00000005939C: 00000000
	.ascii "x"                                                 // 0000000593A0: 78
	.byte 0x1                                                  // 0000000593A1: 01
	.short 0                                                   // 0000000593A2: 0000
	.long 0                                                    // 0000000593A4: 00000000
	.long 0x2513                                               // 0000000593A8: 00002513
	.long 0x70312                                              // 0000000593AC: 00070312
	.long 0x75500                                              // 0000000593B0: 00075500
	.long 0                                                    // 0000000593B4: 00000000
	.long 0x1b4                                                // 0000000593B8: 000001B4
	.long 0                                                    // 0000000593BC: 00000000
	.long 0x3ca0                                               // 0000000593C0: 00003CA0
	.long 0x70312                                              // 0000000593C4: 00070312
	.long 0x7d000                                              // 0000000593C8: 0007D000
	.long 0                                                    // 0000000593CC: 00000000
	.long 0x110                                                // 0000000593D0: 00000110
	.long 0                                                    // 0000000593D4: 00000000
	.ascii "uJ"                                                // 0000000593D8: 4A75
	.short 0                                                   // 0000000593DA: 0000
	.long 0x70312                                              // 0000000593DC: 00070312
	.long 0x81400                                              // 0000000593E0: 00081400
	.long 0                                                    // 0000000593E4: 00000000
	.ascii "D"                                                 // 0000000593E8: 44
	.byte 0                                                    // 0000000593E9: 00
	.short 0                                                   // 0000000593EA: 0000
	.long 0                                                    // 0000000593EC: 00000000
	.long 0xae                                                 // 0000000593F0: 000000AE
	.long 0x60311                                              // 0000000593F4: 00060311
	.long 0x61600                                              // 0000000593F8: 00061600
	.long 0                                                    // 0000000593FC: 00000000
	.ascii "@"                                                 // 000000059400: 40
	.byte 0                                                    // 000000059401: 00
	.short 0                                                   // 000000059402: 0000
	.long 0                                                    // 000000059404: 00000000
	.ascii "a"                                                 // 000000059408: 61
	.byte 0x1a                                                 // 000000059409: 1A
	.short 0                                                   // 00000005940A: 0000
	.long 0x70312                                              // 00000005940C: 00070312
	.long 0x71600                                              // 000000059410: 00071600
	.long 0                                                    // 000000059414: 00000000
	.long 0x19c                                                // 000000059418: 0000019C
	.long 0                                                    // 00000005941C: 00000000
	.ascii "\"?"                                               // 000000059420: 3F22
	.short 0                                                   // 000000059422: 0000
	.long 0x70312                                              // 000000059424: 00070312
	.long 0x7e000                                              // 000000059428: 0007E000
	.long 0                                                    // 00000005942C: 00000000
	.long 0xe8                                                 // 000000059430: 000000E8
	.long 0                                                    // 000000059434: 00000000
	.long 0x4780                                               // 000000059438: 00004780
	.long 0x70312                                              // 00000005943C: 00070312
	.long 0x80700                                              // 000000059440: 00080700
	.long 0                                                    // 000000059444: 00000000
	.long 0xb8                                                 // 000000059448: 000000B8
	.long 0                                                    // 00000005944C: 00000000
	.ascii "/"                                                 // 000000059450: 2F
	.byte 0xb                                                  // 000000059451: 0B
	.short 0                                                   // 000000059452: 0000
	.long 0x60311                                              // 000000059454: 00060311
	.long 0x62080                                              // 000000059458: 00062080
	.long 0                                                    // 00000005945C: 00000000
	.ascii "@"                                                 // 000000059460: 40
	.byte 0                                                    // 000000059461: 00
	.short 0                                                   // 000000059462: 0000
	.long 0                                                    // 000000059464: 00000000
	.long 0x2d10                                               // 000000059468: 00002D10
	.long 0x60311                                              // 00000005946C: 00060311
	.long 0x64080                                              // 000000059470: 00064080
	.long 0                                                    // 000000059474: 00000000
	.ascii "@"                                                 // 000000059478: 40
	.byte 0                                                    // 000000059479: 00
	.short 0                                                   // 00000005947A: 0000
	.long 0                                                    // 00000005947C: 00000000
	.long 0x42aa                                               // 000000059480: 000042AA
	.long 0x70312                                              // 000000059484: 00070312
	.long 0x7ef00                                              // 000000059488: 0007EF00
	.long 0                                                    // 00000005948C: 00000000
	.long 0xf4                                                 // 000000059490: 000000F4
	.long 0                                                    // 000000059494: 00000000
	.ascii "u"                                                 // 000000059498: 75
	.byte 0x3                                                  // 000000059499: 03
	.short 0                                                   // 00000005949A: 0000
	.long 0x70312                                              // 00000005949C: 00070312
	.long 0x68500                                              // 0000000594A0: 00068500
	.long 0                                                    // 0000000594A4: 00000000
	.ascii "H"                                                 // 0000000594A8: 48
	.byte 0x1                                                  // 0000000594A9: 01
	.short 0                                                   // 0000000594AA: 0000
	.long 0                                                    // 0000000594AC: 00000000
	.ascii ">	"                                                // 0000000594B0: 093E
	.short 0                                                   // 0000000594B2: 0000
	.long 0x70312                                              // 0000000594B4: 00070312
	.long 0x6a600                                              // 0000000594B8: 0006A600
	.long 0                                                    // 0000000594BC: 00000000
	.ascii "`"                                                 // 0000000594C0: 60
	.byte 0x1                                                  // 0000000594C1: 01
	.short 0                                                   // 0000000594C2: 0000
	.long 0                                                    // 0000000594C4: 00000000
	.long 0xae0                                                // 0000000594C8: 00000AE0
	.long 0x70312                                              // 0000000594CC: 00070312
	.long 0x6b200                                              // 0000000594D0: 0006B200
	.long 0                                                    // 0000000594D4: 00000000
	.long 0xfc                                                 // 0000000594D8: 000000FC
	.long 0                                                    // 0000000594DC: 00000000
	.long 0x17f7                                               // 0000000594E0: 000017F7
	.long 0x60311                                              // 0000000594E4: 00060311
	.long 0x62e80                                              // 0000000594E8: 00062E80
	.long 0                                                    // 0000000594EC: 00000000
	.ascii "@"                                                 // 0000000594F0: 40
	.byte 0                                                    // 0000000594F1: 00
	.short 0                                                   // 0000000594F2: 0000
	.long 0                                                    // 0000000594F4: 00000000
	.ascii ","                                                 // 0000000594F8: 2C
	.byte 0x18                                                 // 0000000594F9: 18
	.short 0                                                   // 0000000594FA: 0000
	.long 0x60311                                              // 0000000594FC: 00060311
	.long 0x62ec0                                              // 000000059500: 00062EC0
	.long 0                                                    // 000000059504: 00000000
	.ascii "@"                                                 // 000000059508: 40
	.byte 0                                                    // 000000059509: 00
	.short 0                                                   // 00000005950A: 0000
	.long 0                                                    // 00000005950C: 00000000
	.long 0x1b90                                               // 000000059510: 00001B90
	.long 0x60311                                              // 000000059514: 00060311
	.long 0x631c0                                              // 000000059518: 000631C0
	.long 0                                                    // 00000005951C: 00000000
	.ascii "@"                                                 // 000000059520: 40
	.byte 0                                                    // 000000059521: 00
	.short 0                                                   // 000000059522: 0000
	.long 0                                                    // 000000059524: 00000000
	.long 0x22d9                                               // 000000059528: 000022D9
	.long 0x60311                                              // 00000005952C: 00060311
	.long 0x63800                                              // 000000059530: 00063800
	.long 0                                                    // 000000059534: 00000000
	.ascii "@"                                                 // 000000059538: 40
	.byte 0                                                    // 000000059539: 00
	.short 0                                                   // 00000005953A: 0000
	.long 0                                                    // 00000005953C: 00000000
	.long 0x240c                                               // 000000059540: 0000240C
	.long 0x60311                                              // 000000059544: 00060311
	.long 0x63900                                              // 000000059548: 00063900
	.long 0                                                    // 00000005954C: 00000000
	.ascii "@"                                                 // 000000059550: 40
	.byte 0                                                    // 000000059551: 00
	.short 0                                                   // 000000059552: 0000
	.long 0                                                    // 000000059554: 00000000
	.long 0x2dce                                               // 000000059558: 00002DCE
	.long 0x70312                                              // 00000005955C: 00070312
	.long 0x78e00                                              // 000000059560: 00078E00
	.long 0                                                    // 000000059564: 00000000
	.ascii "D"                                                 // 000000059568: 44
	.byte 0x1                                                  // 000000059569: 01
	.short 0                                                   // 00000005956A: 0000
	.long 0                                                    // 00000005956C: 00000000
	.long 0x2e1d                                               // 000000059570: 00002E1D
	.long 0x70312                                              // 000000059574: 00070312
	.long 0x79000                                              // 000000059578: 00079000
	.long 0                                                    // 00000005957C: 00000000
	.ascii "`"                                                 // 000000059580: 60
	.byte 0x1                                                  // 000000059581: 01
	.short 0                                                   // 000000059582: 0000
	.long 0                                                    // 000000059584: 00000000
	.long 0x896                                                // 000000059588: 00000896
	.long 0x60311                                              // 00000005958C: 00060311
	.long 0x61e00                                              // 000000059590: 00061E00
	.long 0                                                    // 000000059594: 00000000
	.ascii "@"                                                 // 000000059598: 40
	.byte 0                                                    // 000000059599: 00
	.short 0                                                   // 00000005959A: 0000
	.long 0                                                    // 00000005959C: 00000000
	.ascii "M"                                                 // 0000000595A0: 4D
	.byte 0x11                                                 // 0000000595A1: 11
	.short 0                                                   // 0000000595A2: 0000
	.long 0x60311                                              // 0000000595A4: 00060311
	.ascii "@&"                                                // 0000000595A8: 2640
	.short 0x6                                                 // 0000000595AA: 0006
	.long 0                                                    // 0000000595AC: 00000000
	.ascii "@"                                                 // 0000000595B0: 40
	.byte 0                                                    // 0000000595B1: 00
	.short 0                                                   // 0000000595B2: 0000
	.long 0                                                    // 0000000595B4: 00000000
	.ascii "u"                                                 // 0000000595B8: 75
	.byte 0x1d                                                 // 0000000595B9: 1D
	.short 0                                                   // 0000000595BA: 0000
	.long 0x70312                                              // 0000000595BC: 00070312
	.long 0x72600                                              // 0000000595C0: 00072600
	.long 0                                                    // 0000000595C4: 00000000
	.long 0xf0                                                 // 0000000595C8: 000000F0
	.long 0                                                    // 0000000595CC: 00000000
	.ascii "B."                                                // 0000000595D0: 2E42
	.short 0                                                   // 0000000595D2: 0000
	.long 0x60311                                              // 0000000595D4: 00060311
	.long 0x64180                                              // 0000000595D8: 00064180
	.long 0                                                    // 0000000595DC: 00000000
	.ascii "@"                                                 // 0000000595E0: 40
	.byte 0                                                    // 0000000595E1: 00
	.short 0                                                   // 0000000595E2: 0000
	.long 0                                                    // 0000000595E4: 00000000
	.long 0x43f2                                               // 0000000595E8: 000043F2
	.long 0x70312                                              // 0000000595EC: 00070312
	.long 0x7f500                                              // 0000000595F0: 0007F500
	.long 0                                                    // 0000000595F4: 00000000
	.ascii " "                                                 // 0000000595F8: 20
	.byte 0x1                                                  // 0000000595F9: 01
	.short 0                                                   // 0000000595FA: 0000
	.long 0                                                    // 0000000595FC: 00000000
	.ascii "Q$"                                                // 000000059600: 2451
	.short 0                                                   // 000000059602: 0000
	.long 0x60311                                              // 000000059604: 00060311
	.ascii "@9"                                                // 000000059608: 3940
	.short 0x6                                                 // 00000005960A: 0006
	.long 0                                                    // 00000005960C: 00000000
	.ascii "@"                                                 // 000000059610: 40
	.byte 0                                                    // 000000059611: 00
	.short 0                                                   // 000000059612: 0000
	.long 0                                                    // 000000059614: 00000000
	.long 0x2c1e                                               // 000000059618: 00002C1E
	.long 0x70312                                              // 00000005961C: 00070312
	.long 0x78300                                              // 000000059620: 00078300
	.long 0                                                    // 000000059624: 00000000
	.long 0x104                                                // 000000059628: 00000104
	.long 0                                                    // 00000005962C: 00000000
	.long 0x4684                                               // 000000059630: 00004684
	.long 0x60311                                              // 000000059634: 00060311
	.long 0x657c0                                              // 000000059638: 000657C0
	.long 0                                                    // 00000005963C: 00000000
	.ascii "@"                                                 // 000000059640: 40
	.byte 0                                                    // 000000059641: 00
	.short 0                                                   // 000000059642: 0000
	.long 0                                                    // 000000059644: 00000000
	.ascii "pK"                                                // 000000059648: 4B70
	.short 0                                                   // 00000005964A: 0000
	.long 0x60311                                              // 00000005964C: 00060311
	.long 0x65c80                                              // 000000059650: 00065C80
	.long 0                                                    // 000000059654: 00000000
	.ascii "@"                                                 // 000000059658: 40
	.byte 0                                                    // 000000059659: 00
	.short 0                                                   // 00000005965A: 0000
	.long 0                                                    // 00000005965C: 00000000
	.ascii "B"                                                 // 000000059660: 42
	.byte 0x8                                                  // 000000059661: 08
	.short 0                                                   // 000000059662: 0000
	.long 0x70312                                              // 000000059664: 00070312
	.long 0x69f00                                              // 000000059668: 00069F00
	.long 0                                                    // 00000005966C: 00000000
	.long 0xfc                                                 // 000000059670: 000000FC
	.long 0                                                    // 000000059674: 00000000
	.ascii "A"                                                 // 000000059678: 41
	.byte 0x14                                                 // 000000059679: 14
	.short 0                                                   // 00000005967A: 0000
	.long 0x60311                                              // 00000005967C: 00060311
	.ascii "@)"                                                // 000000059680: 2940
	.short 0x6                                                 // 000000059682: 0006
	.long 0                                                    // 000000059684: 00000000
	.ascii "@"                                                 // 000000059688: 40
	.byte 0                                                    // 000000059689: 00
	.short 0                                                   // 00000005968A: 0000
	.long 0                                                    // 00000005968C: 00000000
	.ascii "R"                                                 // 000000059690: 52
	.byte 0x17                                                 // 000000059691: 17
	.short 0                                                   // 000000059692: 0000
	.long 0x70312                                              // 000000059694: 00070312
	.long 0x70200                                              // 000000059698: 00070200
	.long 0                                                    // 00000005969C: 00000000
	.ascii "t"                                                 // 0000000596A0: 74
	.byte 0                                                    // 0000000596A1: 00
	.short 0                                                   // 0000000596A2: 0000
	.long 0                                                    // 0000000596A4: 00000000
	.long 0x1812                                               // 0000000596A8: 00001812
	.long 0x70312                                              // 0000000596AC: 00070312
	.long 0x70600                                              // 0000000596B0: 00070600
	.long 0                                                    // 0000000596B4: 00000000
	.ascii "`"                                                 // 0000000596B8: 60
	.byte 0x1                                                  // 0000000596B9: 01
	.short 0                                                   // 0000000596BA: 0000
	.long 0                                                    // 0000000596BC: 00000000
	.long 0x1fbd                                               // 0000000596C0: 00001FBD
	.long 0x70312                                              // 0000000596C4: 00070312
	.long 0x73200                                              // 0000000596C8: 00073200
	.long 0                                                    // 0000000596CC: 00000000
	.ascii "x"                                                 // 0000000596D0: 78
	.byte 0x1                                                  // 0000000596D1: 01
	.short 0                                                   // 0000000596D2: 0000
	.long 0                                                    // 0000000596D4: 00000000
	.long 0x33ad                                               // 0000000596D8: 000033AD
	.long 0x70312                                              // 0000000596DC: 00070312
	.long 0x7ac00                                              // 0000000596E0: 0007AC00
	.long 0                                                    // 0000000596E4: 00000000
	.long 0xf4                                                 // 0000000596E8: 000000F4
	.long 0                                                    // 0000000596EC: 00000000
	.ascii "}"                                                 // 0000000596F0: 7D
	.byte 0x4                                                  // 0000000596F1: 04
	.short 0                                                   // 0000000596F2: 0000
	.long 0x70312                                              // 0000000596F4: 00070312
	.long 0x68a00                                              // 0000000596F8: 00068A00
	.long 0                                                    // 0000000596FC: 00000000
	.long 0xe8                                                 // 000000059700: 000000E8
	.long 0                                                    // 000000059704: 00000000
	.long 0x1f97                                               // 000000059708: 00001F97
	.long 0x60311                                              // 00000005970C: 00060311
	.ascii "@5"                                                // 000000059710: 3540
	.short 0x6                                                 // 000000059712: 0006
	.long 0                                                    // 000000059714: 00000000
	.ascii "@"                                                 // 000000059718: 40
	.byte 0                                                    // 000000059719: 00
	.short 0                                                   // 00000005971A: 0000
	.long 0                                                    // 00000005971C: 00000000
	.long 0x30af                                               // 000000059720: 000030AF
	.long 0x70312                                              // 000000059724: 00070312
	.long 0x79d00                                              // 000000059728: 00079D00
	.long 0                                                    // 00000005972C: 00000000
	.ascii "l"                                                 // 000000059730: 6C
	.byte 0                                                    // 000000059731: 00
	.short 0                                                   // 000000059732: 0000
	.long 0                                                    // 000000059734: 00000000
	.long 0x13b6                                               // 000000059738: 000013B6
	.long 0x70312                                              // 00000005973C: 00070312
	.long 0x6ed00                                              // 000000059740: 0006ED00
	.long 0                                                    // 000000059744: 00000000
	.ascii "T"                                                 // 000000059748: 54
	.byte 0x1                                                  // 000000059749: 01
	.short 0                                                   // 00000005974A: 0000
	.long 0                                                    // 00000005974C: 00000000
	.ascii "<)"                                                // 000000059750: 293C
	.short 0                                                   // 000000059752: 0000
	.long 0x60311                                              // 000000059754: 00060311
	.ascii "@="                                                // 000000059758: 3D40
	.short 0x6                                                 // 00000005975A: 0006
	.long 0                                                    // 00000005975C: 00000000
	.ascii "@"                                                 // 000000059760: 40
	.byte 0                                                    // 000000059761: 00
	.short 0                                                   // 000000059762: 0000
	.long 0                                                    // 000000059764: 00000000
	.long 0x3695                                               // 000000059768: 00003695
	.long 0x70312                                              // 00000005976C: 00070312
	.long 0x7b800                                              // 000000059770: 0007B800
	.long 0                                                    // 000000059774: 00000000
	.long 0xfc                                                 // 000000059778: 000000FC
	.long 0                                                    // 00000005977C: 00000000
	.ascii "\\F"                                               // 000000059780: 465C
	.short 0                                                   // 000000059782: 0000
	.long 0x70312                                              // 000000059784: 00070312
	.long 0x80100                                              // 000000059788: 00080100
	.long 0                                                    // 00000005978C: 00000000
	.long 0x118                                                // 000000059790: 00000118
	.long 0                                                    // 000000059794: 00000000
	.long 0x178c                                               // 000000059798: 0000178C
	.long 0x60311                                              // 00000005979C: 00060311
	.long 0x62e00                                              // 0000000597A0: 00062E00
	.long 0                                                    // 0000000597A4: 00000000
	.ascii "@"                                                 // 0000000597A8: 40
	.byte 0                                                    // 0000000597A9: 00
	.short 0                                                   // 0000000597AA: 0000
	.long 0                                                    // 0000000597AC: 00000000
	.long 0x20c9                                               // 0000000597B0: 000020C9
	.long 0x60311                                              // 0000000597B4: 00060311
	.ascii "@6"                                                // 0000000597B8: 3640
	.short 0x6                                                 // 0000000597BA: 0006
	.long 0                                                    // 0000000597BC: 00000000
	.ascii "@"                                                 // 0000000597C0: 40
	.byte 0                                                    // 0000000597C1: 00
	.short 0                                                   // 0000000597C2: 0000
	.long 0                                                    // 0000000597C4: 00000000
	.long 0x398b                                               // 0000000597C8: 0000398B
	.long 0x70312                                              // 0000000597CC: 00070312
	.long 0x7c300                                              // 0000000597D0: 0007C300
	.long 0                                                    // 0000000597D4: 00000000
	.long 0xa8                                                 // 0000000597D8: 000000A8
	.long 0                                                    // 0000000597DC: 00000000
	.long 0x19bb                                               // 0000000597E0: 000019BB
	.long 0x70312                                              // 0000000597E4: 00070312
	.long 0x71200                                              // 0000000597E8: 00071200
	.long 0                                                    // 0000000597EC: 00000000
	.long 0x10c                                                // 0000000597F0: 0000010C
	.long 0                                                    // 0000000597F4: 00000000
	.long 0x23cb                                               // 0000000597F8: 000023CB
	.long 0x60311                                              // 0000000597FC: 00060311
	.long 0x638c0                                              // 000000059800: 000638C0
	.long 0                                                    // 000000059804: 00000000
	.ascii "@"                                                 // 000000059808: 40
	.byte 0                                                    // 000000059809: 00
	.short 0                                                   // 00000005980A: 0000
	.long 0                                                    // 00000005980C: 00000000
	.ascii "s&"                                                // 000000059810: 2673
	.short 0                                                   // 000000059812: 0000
	.long 0x60311                                              // 000000059814: 00060311
	.long 0x63b00                                              // 000000059818: 00063B00
	.long 0                                                    // 00000005981C: 00000000
	.ascii "@"                                                 // 000000059820: 40
	.byte 0                                                    // 000000059821: 00
	.short 0                                                   // 000000059822: 0000
	.long 0                                                    // 000000059824: 00000000
	.long 0x40de                                               // 000000059828: 000040DE
	.long 0x70312                                              // 00000005982C: 00070312
	.long 0x7e700                                              // 000000059830: 0007E700
	.long 0                                                    // 000000059834: 00000000
	.ascii "$"                                                 // 000000059838: 24
	.byte 0x1                                                  // 000000059839: 01
	.short 0                                                   // 00000005983A: 0000
	.long 0                                                    // 00000005983C: 00000000
	.long 0x45bc                                               // 000000059840: 000045BC
	.long 0x70312                                              // 000000059844: 00070312
	.long 0x7fd00                                              // 000000059848: 0007FD00
	.long 0                                                    // 00000005984C: 00000000
	.ascii "X"                                                 // 000000059850: 58
	.byte 0x1                                                  // 000000059851: 01
	.short 0                                                   // 000000059852: 0000
	.long 0                                                    // 000000059854: 00000000
	.ascii "6"                                                 // 000000059858: 36
	.byte 0x7                                                  // 000000059859: 07
	.short 0                                                   // 00000005985A: 0000
	.long 0x70312                                              // 00000005985C: 00070312
	.long 0x69800                                              // 000000059860: 00069800
	.long 0                                                    // 000000059864: 00000000
	.ascii "`"                                                 // 000000059868: 60
	.byte 0x1                                                  // 000000059869: 01
	.short 0                                                   // 00000005986A: 0000
	.long 0                                                    // 00000005986C: 00000000
	.long 0xd0b                                                // 000000059870: 00000D0B
	.long 0x60311                                              // 000000059874: 00060311
	.ascii "@\""                                               // 000000059878: 2240
	.short 0x6                                                 // 00000005987A: 0006
	.long 0                                                    // 00000005987C: 00000000
	.ascii "@"                                                 // 000000059880: 40
	.byte 0                                                    // 000000059881: 00
	.short 0                                                   // 000000059882: 0000
	.long 0                                                    // 000000059884: 00000000
	.long 0x48b2                                               // 000000059888: 000048B2
	.long 0x70312                                              // 00000005988C: 00070312
	.long 0x80c00                                              // 000000059890: 00080C00
	.long 0                                                    // 000000059894: 00000000
	.long 0xe0                                                 // 000000059898: 000000E0
	.long 0                                                    // 00000005989C: 00000000
	.long 0x4bbd                                               // 0000000598A0: 00004BBD
	.long 0x70312                                              // 0000000598A4: 00070312
	.long 0x81a00                                              // 0000000598A8: 00081A00
	.long 0                                                    // 0000000598AC: 00000000
	.ascii "p"                                                 // 0000000598B0: 70
	.byte 0                                                    // 0000000598B1: 00
	.short 0                                                   // 0000000598B2: 0000
	.long 0                                                    // 0000000598B4: 00000000
	.ascii "B@"                                                // 0000000598B8: 4042
	.short 0                                                   // 0000000598BA: 0000
	.long 0x70312                                              // 0000000598BC: 00070312
	.long 0x7e400                                              // 0000000598C0: 0007E400
	.long 0                                                    // 0000000598C4: 00000000
	.ascii "X"                                                 // 0000000598C8: 58
	.byte 0x1                                                  // 0000000598C9: 01
	.short 0                                                   // 0000000598CA: 0000
	.long 0                                                    // 0000000598CC: 00000000
	.long 0x7ba                                                // 0000000598D0: 000007BA
	.long 0x70312                                              // 0000000598D4: 00070312
	.long 0x69b00                                              // 0000000598D8: 00069B00
	.long 0                                                    // 0000000598DC: 00000000
	.ascii "@"                                                 // 0000000598E0: 40
	.byte 0x1                                                  // 0000000598E1: 01
	.short 0                                                   // 0000000598E2: 0000
	.long 0                                                    // 0000000598E4: 00000000
	.long 0x27a1                                               // 0000000598E8: 000027A1
	.long 0x60311                                              // 0000000598EC: 00060311
	.long 0x63c00                                              // 0000000598F0: 00063C00
	.long 0                                                    // 0000000598F4: 00000000
	.ascii "@"                                                 // 0000000598F8: 40
	.byte 0                                                    // 0000000598F9: 00
	.short 0                                                   // 0000000598FA: 0000
	.long 0                                                    // 0000000598FC: 00000000
	.long 0x2ab4                                               // 000000059900: 00002AB4
	.long 0x60311                                              // 000000059904: 00060311
	.long 0x63e80                                              // 000000059908: 00063E80
	.long 0                                                    // 00000005990C: 00000000
	.ascii "@"                                                 // 000000059910: 40
	.byte 0                                                    // 000000059911: 00
	.short 0                                                   // 000000059912: 0000
	.long 0                                                    // 000000059914: 00000000
	.ascii ";?"                                                // 000000059918: 3F3B
	.short 0                                                   // 00000005991A: 0000
	.long 0x60311                                              // 00000005991C: 00060311
	.long 0x651c0                                              // 000000059920: 000651C0
	.long 0                                                    // 000000059924: 00000000
	.ascii "@"                                                 // 000000059928: 40
	.byte 0                                                    // 000000059929: 00
	.short 0                                                   // 00000005992A: 0000
	.long 0                                                    // 00000005992C: 00000000
	.long 0x401b                                               // 000000059930: 0000401B
	.long 0x60311                                              // 000000059934: 00060311
	.long 0x65280                                              // 000000059938: 00065280
	.long 0                                                    // 00000005993C: 00000000
	.ascii "@"                                                 // 000000059940: 40
	.byte 0                                                    // 000000059941: 00
	.short 0                                                   // 000000059942: 0000
	.long 0                                                    // 000000059944: 00000000
	.long 0x441a                                               // 000000059948: 0000441A
	.long 0x60311                                              // 00000005994C: 00060311
	.long 0x655c0                                              // 000000059950: 000655C0
	.long 0                                                    // 000000059954: 00000000
	.ascii "@"                                                 // 000000059958: 40
	.byte 0                                                    // 000000059959: 00
	.short 0                                                   // 00000005995A: 0000
	.long 0                                                    // 00000005995C: 00000000
	.ascii "h"                                                 // 000000059960: 68
	.byte 0x2                                                  // 000000059961: 02
	.short 0                                                   // 000000059962: 0000
	.long 0x60311                                              // 000000059964: 00060311
	.long 0x61800                                              // 000000059968: 00061800
	.long 0                                                    // 00000005996C: 00000000
	.ascii "@"                                                 // 000000059970: 40
	.byte 0                                                    // 000000059971: 00
	.short 0                                                   // 000000059972: 0000
	.long 0                                                    // 000000059974: 00000000
	.long 0x31b4                                               // 000000059978: 000031B4
	.long 0x60311                                              // 00000005997C: 00060311
	.long 0x64580                                              // 000000059980: 00064580
	.long 0                                                    // 000000059984: 00000000
	.ascii "@"                                                 // 000000059988: 40
	.byte 0                                                    // 000000059989: 00
	.short 0                                                   // 00000005998A: 0000
	.long 0                                                    // 00000005998C: 00000000
	.long 0x41c9                                               // 000000059990: 000041C9
	.long 0x70312                                              // 000000059994: 00070312
	.long 0x7ec00                                              // 000000059998: 0007EC00
	.long 0                                                    // 00000005999C: 00000000
	.long 0xf8                                                 // 0000000599A0: 000000F8
	.long 0                                                    // 0000000599A4: 00000000
	.ascii "F"                                                 // 0000000599A8: 46
	.byte 0x6                                                  // 0000000599A9: 06
	.short 0                                                   // 0000000599AA: 0000
	.long 0x70312                                              // 0000000599AC: 00070312
	.long 0x69400                                              // 0000000599B0: 00069400
	.long 0                                                    // 0000000599B4: 00000000
	.long 0xf0                                                 // 0000000599B8: 000000F0
	.long 0                                                    // 0000000599BC: 00000000
	.long 0xec5                                                // 0000000599C0: 00000EC5
	.long 0x70312                                              // 0000000599C4: 00070312
	.long 0x6cb00                                              // 0000000599C8: 0006CB00
	.long 0                                                    // 0000000599CC: 00000000
	.ascii "@"                                                 // 0000000599D0: 40
	.byte 0x1                                                  // 0000000599D1: 01
	.short 0                                                   // 0000000599D2: 0000
	.long 0                                                    // 0000000599D4: 00000000
	.long 0x4d93                                               // 0000000599D8: 00004D93
	.long 0x60311                                              // 0000000599DC: 00060311
	.long 0x65f00                                              // 0000000599E0: 00065F00
	.long 0                                                    // 0000000599E4: 00000000
	.ascii "@"                                                 // 0000000599E8: 40
	.byte 0                                                    // 0000000599E9: 00
	.short 0                                                   // 0000000599EA: 0000
	.long 0                                                    // 0000000599EC: 00000000
	.long 0x1195                                               // 0000000599F0: 00001195
	.long 0x60311                                              // 0000000599F4: 00060311
	.long 0x62680                                              // 0000000599F8: 00062680
	.long 0                                                    // 0000000599FC: 00000000
	.ascii "@"                                                 // 000000059A00: 40
	.byte 0                                                    // 000000059A01: 00
	.short 0                                                   // 000000059A02: 0000
	.long 0                                                    // 000000059A04: 00000000
	.ascii "~"                                                 // 000000059A08: 7E
	.byte 0x18                                                 // 000000059A09: 18
	.short 0                                                   // 000000059A0A: 0000
	.long 0x70312                                              // 000000059A0C: 00070312
	.long 0x70900                                              // 000000059A10: 00070900
	.long 0                                                    // 000000059A14: 00000000
	.ascii "@"                                                 // 000000059A18: 40
	.byte 0x1                                                  // 000000059A19: 01
	.short 0                                                   // 000000059A1A: 0000
	.long 0                                                    // 000000059A1C: 00000000
	.ascii "?H"                                                // 000000059A20: 483F
	.short 0                                                   // 000000059A22: 0000
	.long 0x60311                                              // 000000059A24: 00060311
	.ascii "@Y"                                                // 000000059A28: 5940
	.short 0x6                                                 // 000000059A2A: 0006
	.long 0                                                    // 000000059A2C: 00000000
	.ascii "@"                                                 // 000000059A30: 40
	.byte 0                                                    // 000000059A31: 00
	.short 0                                                   // 000000059A32: 0000
	.long 0                                                    // 000000059A34: 00000000
	.ascii "5"                                                 // 000000059A38: 35
	.byte 0xe                                                  // 000000059A39: 0E
	.short 0                                                   // 000000059A3A: 0000
	.long 0x70312                                              // 000000059A3C: 00070312
	.long 0x6c700                                              // 000000059A40: 0006C700
	.long 0                                                    // 000000059A44: 00000000
	.long 0x1a8                                                // 000000059A48: 000001A8
	.long 0                                                    // 000000059A4C: 00000000
	.ascii "&&"                                                // 000000059A50: 2626
	.short 0                                                   // 000000059A52: 0000
	.long 0x60311                                              // 000000059A54: 00060311
	.long 0x63ac0                                              // 000000059A58: 00063AC0
	.long 0                                                    // 000000059A5C: 00000000
	.ascii "@"                                                 // 000000059A60: 40
	.byte 0                                                    // 000000059A61: 00
	.short 0                                                   // 000000059A62: 0000
	.long 0                                                    // 000000059A64: 00000000
	.long 0x47d3                                               // 000000059A68: 000047D3
	.long 0x70312                                              // 000000059A6C: 00070312
	.long 0x80800                                              // 000000059A70: 00080800
	.long 0                                                    // 000000059A74: 00000000
	.long 0xa4                                                 // 000000059A78: 000000A4
	.long 0                                                    // 000000059A7C: 00000000
	.long 0x48fd                                               // 000000059A80: 000048FD
	.long 0x70312                                              // 000000059A84: 00070312
	.long 0x80d00                                              // 000000059A88: 00080D00
	.long 0                                                    // 000000059A8C: 00000000
	.long 0xfc                                                 // 000000059A90: 000000FC
	.long 0                                                    // 000000059A94: 00000000
	.long 0x107                                                // 000000059A98: 00000107
	.long 0x60311                                              // 000000059A9C: 00060311
	.long 0x61680                                              // 000000059AA0: 00061680
	.long 0                                                    // 000000059AA4: 00000000
	.ascii "@"                                                 // 000000059AA8: 40
	.byte 0                                                    // 000000059AA9: 00
	.short 0                                                   // 000000059AAA: 0000
	.long 0                                                    // 000000059AAC: 00000000
	.long 0x41e                                                // 000000059AB0: 0000041E
	.long 0x60311                                              // 000000059AB4: 00060311
	.long 0x61980                                              // 000000059AB8: 00061980
	.long 0                                                    // 000000059ABC: 00000000
	.ascii "@"                                                 // 000000059AC0: 40
	.byte 0                                                    // 000000059AC1: 00
	.short 0                                                   // 000000059AC2: 0000
	.long 0                                                    // 000000059AC4: 00000000
	.long 0x8d3                                                // 000000059AC8: 000008D3
	.long 0x60311                                              // 000000059ACC: 00060311
	.ascii "@"                                                 // 000000059AD0: 40
	.byte 0x1e                                                 // 000000059AD1: 1E
	.short 0x6                                                 // 000000059AD2: 0006
	.long 0                                                    // 000000059AD4: 00000000
	.ascii "@"                                                 // 000000059AD8: 40
	.byte 0                                                    // 000000059AD9: 00
	.short 0                                                   // 000000059ADA: 0000
	.long 0                                                    // 000000059ADC: 00000000
	.long 0x91b                                                // 000000059AE0: 0000091B
	.long 0x60311                                              // 000000059AE4: 00060311
	.long 0x61e80                                              // 000000059AE8: 00061E80
	.long 0                                                    // 000000059AEC: 00000000
	.ascii "@"                                                 // 000000059AF0: 40
	.byte 0                                                    // 000000059AF1: 00
	.short 0                                                   // 000000059AF2: 0000
	.long 0                                                    // 000000059AF4: 00000000
	.ascii "I"                                                 // 000000059AF8: 49
	.byte 0x18                                                 // 000000059AF9: 18
	.short 0                                                   // 000000059AFA: 0000
	.long 0x70312                                              // 000000059AFC: 00070312
	.long 0x70800                                              // 000000059B00: 00070800
	.long 0                                                    // 000000059B04: 00000000
	.long 0x100                                                // 000000059B08: 00000100
	.long 0                                                    // 000000059B0C: 00000000
	.long 0x3bd3                                               // 000000059B10: 00003BD3
	.long 0x70312                                              // 000000059B14: 00070312
	.long 0x7cc00                                              // 000000059B18: 0007CC00
	.long 0                                                    // 000000059B1C: 00000000
	.long 0xfc                                                 // 000000059B20: 000000FC
	.long 0                                                    // 000000059B24: 00000000
	.long 0x3610                                               // 000000059B28: 00003610
	.long 0x60311                                              // 000000059B2C: 00060311
	.long 0x64a00                                              // 000000059B30: 00064A00
	.long 0                                                    // 000000059B34: 00000000
	.ascii "@"                                                 // 000000059B38: 40
	.byte 0                                                    // 000000059B39: 00
	.short 0                                                   // 000000059B3A: 0000
	.long 0                                                    // 000000059B3C: 00000000
	.long 0x4ac5                                               // 000000059B40: 00004AC5
	.long 0x60311                                              // 000000059B44: 00060311
	.long 0x65bc0                                              // 000000059B48: 00065BC0
	.long 0                                                    // 000000059B4C: 00000000
	.ascii "@"                                                 // 000000059B50: 40
	.byte 0                                                    // 000000059B51: 00
	.short 0                                                   // 000000059B52: 0000
	.long 0                                                    // 000000059B54: 00000000
	.long 0xd82                                                // 000000059B58: 00000D82
	.long 0x60311                                              // 000000059B5C: 00060311
	.long 0x622c0                                              // 000000059B60: 000622C0
	.long 0                                                    // 000000059B64: 00000000
	.ascii "@"                                                 // 000000059B68: 40
	.byte 0                                                    // 000000059B69: 00
	.short 0                                                   // 000000059B6A: 0000
	.long 0                                                    // 000000059B6C: 00000000
	.long 0x3aa3                                               // 000000059B70: 00003AA3
	.long 0x70312                                              // 000000059B74: 00070312
	.long 0x7c700                                              // 000000059B78: 0007C700
	.long 0                                                    // 000000059B7C: 00000000
	.long 0xa8                                                 // 000000059B80: 000000A8
	.long 0                                                    // 000000059B84: 00000000
	.ascii "E"                                                 // 000000059B88: 45
	.byte 0x2                                                  // 000000059B89: 02
	.short 0                                                   // 000000059B8A: 0000
	.long 0x70312                                              // 000000059B8C: 00070312
	.long 0x67f00                                              // 000000059B90: 00067F00
	.long 0                                                    // 000000059B94: 00000000
	.long 0xe8                                                 // 000000059B98: 000000E8
	.long 0                                                    // 000000059B9C: 00000000
	.long 0x3ac6                                               // 000000059BA0: 00003AC6
	.long 0x60311                                              // 000000059BA4: 00060311
	.long 0x64e00                                              // 000000059BA8: 00064E00
	.long 0                                                    // 000000059BAC: 00000000
	.ascii "@"                                                 // 000000059BB0: 40
	.byte 0                                                    // 000000059BB1: 00
	.short 0                                                   // 000000059BB2: 0000
	.long 0                                                    // 000000059BB4: 00000000
	.long 0x46d6                                               // 000000059BB8: 000046D6
	.long 0x60311                                              // 000000059BBC: 00060311
	.long 0x65800                                              // 000000059BC0: 00065800
	.long 0                                                    // 000000059BC4: 00000000
	.ascii "@"                                                 // 000000059BC8: 40
	.byte 0                                                    // 000000059BC9: 00
	.short 0                                                   // 000000059BCA: 0000
	.long 0                                                    // 000000059BCC: 00000000
	.long 0x14c1                                               // 000000059BD0: 000014C1
	.long 0x60311                                              // 000000059BD4: 00060311
	.long 0x62a00                                              // 000000059BD8: 00062A00
	.long 0                                                    // 000000059BDC: 00000000
	.ascii "@"                                                 // 000000059BE0: 40
	.byte 0                                                    // 000000059BE1: 00
	.short 0                                                   // 000000059BE2: 0000
	.long 0                                                    // 000000059BE4: 00000000
	.long 0x3cf7                                               // 000000059BE8: 00003CF7
	.long 0x70312                                              // 000000059BEC: 00070312
	.long 0x7d200                                              // 000000059BF0: 0007D200
	.long 0                                                    // 000000059BF4: 00000000
	.long 0x110                                                // 000000059BF8: 00000110
	.long 0                                                    // 000000059BFC: 00000000
	.long 0x16a8                                               // 000000059C00: 000016A8
	.long 0x60311                                              // 000000059C04: 00060311
	.long 0x62cc0                                              // 000000059C08: 00062CC0
	.long 0                                                    // 000000059C0C: 00000000
	.ascii "@"                                                 // 000000059C10: 40
	.byte 0                                                    // 000000059C11: 00
	.short 0                                                   // 000000059C12: 0000
	.long 0                                                    // 000000059C14: 00000000
	.ascii ":\""                                               // 000000059C18: 223A
	.short 0                                                   // 000000059C1A: 0000
	.long 0x60311                                              // 000000059C1C: 00060311
	.long 0x63780                                              // 000000059C20: 00063780
	.long 0                                                    // 000000059C24: 00000000
	.ascii "@"                                                 // 000000059C28: 40
	.byte 0                                                    // 000000059C29: 00
	.short 0                                                   // 000000059C2A: 0000
	.long 0                                                    // 000000059C2C: 00000000
	.long 0x2916                                               // 000000059C30: 00002916
	.long 0x70312                                              // 000000059C34: 00070312
	.long 0x76f00                                              // 000000059C38: 00076F00
	.long 0                                                    // 000000059C3C: 00000000
	.ascii "`"                                                 // 000000059C40: 60
	.byte 0x1                                                  // 000000059C41: 01
	.short 0                                                   // 000000059C42: 0000
	.long 0                                                    // 000000059C44: 00000000
	.long 0x2a18                                               // 000000059C48: 00002A18
	.long 0x60311                                              // 000000059C4C: 00060311
	.long 0x63e00                                              // 000000059C50: 00063E00
	.long 0                                                    // 000000059C54: 00000000
	.ascii "@"                                                 // 000000059C58: 40
	.byte 0                                                    // 000000059C59: 00
	.short 0                                                   // 000000059C5A: 0000
	.long 0                                                    // 000000059C5C: 00000000
	.long 0x3bf8                                               // 000000059C60: 00003BF8
	.long 0x60311                                              // 000000059C64: 00060311
	.long 0x64f00                                              // 000000059C68: 00064F00
	.long 0                                                    // 000000059C6C: 00000000
	.ascii "@"                                                 // 000000059C70: 40
	.byte 0                                                    // 000000059C71: 00
	.short 0                                                   // 000000059C72: 0000
	.long 0                                                    // 000000059C74: 00000000
	.long 0x25af                                               // 000000059C78: 000025AF
	.long 0x70312                                              // 000000059C7C: 00070312
	.long 0x75900                                              // 000000059C80: 00075900
	.long 0                                                    // 000000059C84: 00000000
	.long 0x194                                                // 000000059C88: 00000194
	.long 0                                                    // 000000059C8C: 00000000
	.long 0x269a                                               // 000000059C90: 0000269A
	.long 0x70312                                              // 000000059C94: 00070312
	.long 0x75f00                                              // 000000059C98: 00075F00
	.long 0                                                    // 000000059C9C: 00000000
	.ascii "x"                                                 // 000000059CA0: 78
	.byte 0x1                                                  // 000000059CA1: 01
	.short 0                                                   // 000000059CA2: 0000
	.long 0                                                    // 000000059CA4: 00000000
	.long 0x2a8d                                               // 000000059CA8: 00002A8D
	.long 0x70312                                              // 000000059CAC: 00070312
	.long 0x77900                                              // 000000059CB0: 00077900
	.long 0                                                    // 000000059CB4: 00000000
	.long 0x1c8                                                // 000000059CB8: 000001C8
	.long 0                                                    // 000000059CBC: 00000000
	.long 0x34ea                                               // 000000059CC0: 000034EA
	.long 0x70312                                              // 000000059CC4: 00070312
	.long 0x7b200                                              // 000000059CC8: 0007B200
	.long 0                                                    // 000000059CCC: 00000000
	.long 0xa0                                                 // 000000059CD0: 000000A0
	.long 0                                                    // 000000059CD4: 00000000
	.ascii "pL"                                                // 000000059CD8: 4C70
	.short 0                                                   // 000000059CDA: 0000
	.long 0x60311                                              // 000000059CDC: 00060311
	.long 0x65dc0                                              // 000000059CE0: 00065DC0
	.long 0                                                    // 000000059CE4: 00000000
	.ascii "@"                                                 // 000000059CE8: 40
	.byte 0                                                    // 000000059CE9: 00
	.short 0                                                   // 000000059CEA: 0000
	.long 0                                                    // 000000059CEC: 00000000
	.long 0x4ca9                                               // 000000059CF0: 00004CA9
	.long 0x60311                                              // 000000059CF4: 00060311
	.long 0x65e00                                              // 000000059CF8: 00065E00
	.long 0                                                    // 000000059CFC: 00000000
	.ascii "@"                                                 // 000000059D00: 40
	.byte 0                                                    // 000000059D01: 00
	.short 0                                                   // 000000059D02: 0000
	.long 0                                                    // 000000059D04: 00000000
	.ascii "G"                                                 // 000000059D08: 47
	.byte 0                                                    // 000000059D09: 00
	.short 0                                                   // 000000059D0A: 0000
	.long 0x70312                                              // 000000059D0C: 00070312
	.long 0x67200                                              // 000000059D10: 00067200
	.long 0                                                    // 000000059D14: 00000000
	.long 0xf4                                                 // 000000059D18: 000000F4
	.long 0                                                    // 000000059D1C: 00000000
	.ascii "`"                                                 // 000000059D20: 60
	.byte 0xc                                                  // 000000059D21: 0C
	.short 0                                                   // 000000059D22: 0000
	.long 0x70312                                              // 000000059D24: 00070312
	.long 0x6b900                                              // 000000059D28: 0006B900
	.long 0                                                    // 000000059D2C: 00000000
	.ascii "H"                                                 // 000000059D30: 48
	.byte 0x1                                                  // 000000059D31: 01
	.short 0                                                   // 000000059D32: 0000
	.long 0                                                    // 000000059D34: 00000000
	.long 0x109e                                               // 000000059D38: 0000109E
	.long 0x70312                                              // 000000059D3C: 00070312
	.long 0x6d900                                              // 000000059D40: 0006D900
	.long 0                                                    // 000000059D44: 00000000
	.long 0x1b0                                                // 000000059D48: 000001B0
	.long 0                                                    // 000000059D4C: 00000000
	.long 0x20f1                                               // 000000059D50: 000020F1
	.long 0x70312                                              // 000000059D54: 00070312
	.long 0x73900                                              // 000000059D58: 00073900
	.long 0                                                    // 000000059D5C: 00000000
	.long 0x110                                                // 000000059D60: 00000110
	.long 0                                                    // 000000059D64: 00000000
	.ascii "O&"                                                // 000000059D68: 264F
	.short 0                                                   // 000000059D6A: 0000
	.long 0x70312                                              // 000000059D6C: 00070312
	.long 0x75d00                                              // 000000059D70: 00075D00
	.long 0                                                    // 000000059D74: 00000000
	.ascii "P"                                                 // 000000059D78: 50
	.byte 0x1                                                  // 000000059D79: 01
	.short 0                                                   // 000000059D7A: 0000
	.long 0                                                    // 000000059D7C: 00000000
	.ascii "^"                                                 // 000000059D80: 5E
	.byte 0x19                                                 // 000000059D81: 19
	.short 0                                                   // 000000059D82: 0000
	.long 0x70312                                              // 000000059D84: 00070312
	.long 0x71000                                              // 000000059D88: 00071000
	.long 0                                                    // 000000059D8C: 00000000
	.long 0x114                                                // 000000059D90: 00000114
	.long 0                                                    // 000000059D94: 00000000
	.long 0x1c96                                               // 000000059D98: 00001C96
	.long 0x70312                                              // 000000059D9C: 00070312
	.long 0x72200                                              // 000000059DA0: 00072200
	.long 0                                                    // 000000059DA4: 00000000
	.long 0xf0                                                 // 000000059DA8: 000000F0
	.long 0                                                    // 000000059DAC: 00000000
	.ascii "\n"                                                // 000000059DB0: 0A
	.ascii " "                                                 // 000000059DB1: 20
	.short 0                                                   // 000000059DB2: 0000
	.long 0x70312                                              // 000000059DB4: 00070312
	.long 0x73400                                              // 000000059DB8: 00073400
	.long 0                                                    // 000000059DBC: 00000000
	.long 0xf0                                                 // 000000059DC0: 000000F0
	.long 0                                                    // 000000059DC4: 00000000
	.long 0x2ed2                                               // 000000059DC8: 00002ED2
	.long 0x70312                                              // 000000059DCC: 00070312
	.long 0x79400                                              // 000000059DD0: 00079400
	.long 0                                                    // 000000059DD4: 00000000
	.ascii "l"                                                 // 000000059DD8: 6C
	.byte 0                                                    // 000000059DD9: 00
	.short 0                                                   // 000000059DDA: 0000
	.long 0                                                    // 000000059DDC: 00000000
	.long 0x35e7                                               // 000000059DE0: 000035E7
	.long 0x70312                                              // 000000059DE4: 00070312
	.long 0x7b600                                              // 000000059DE8: 0007B600
	.long 0                                                    // 000000059DEC: 00000000
	.long 0xd4                                                 // 000000059DF0: 000000D4
	.long 0                                                    // 000000059DF4: 00000000
	.ascii "yM"                                                // 000000059DF8: 4D79
	.short 0                                                   // 000000059DFA: 0000
	.long 0x70312                                              // 000000059DFC: 00070312
	.long 0x82200                                              // 000000059E00: 00082200
	.long 0                                                    // 000000059E04: 00000000
	.ascii "p"                                                 // 000000059E08: 70
	.byte 0                                                    // 000000059E09: 00
	.short 0                                                   // 000000059E0A: 0000
	.long 0                                                    // 000000059E0C: 00000000
	.long 0x1de6                                               // 000000059E10: 00001DE6
	.long 0x60311                                              // 000000059E14: 00060311
	.long 0x633c0                                              // 000000059E18: 000633C0
	.long 0                                                    // 000000059E1C: 00000000
	.ascii "@"                                                 // 000000059E20: 40
	.byte 0                                                    // 000000059E21: 00
	.short 0                                                   // 000000059E22: 0000
	.long 0                                                    // 000000059E24: 00000000
	.ascii "R'"                                                // 000000059E28: 2752
	.short 0                                                   // 000000059E2A: 0000
	.long 0x60311                                              // 000000059E2C: 00060311
	.long 0x63bc0                                              // 000000059E30: 00063BC0
	.long 0                                                    // 000000059E34: 00000000
	.ascii "@"                                                 // 000000059E38: 40
	.byte 0                                                    // 000000059E39: 00
	.short 0                                                   // 000000059E3A: 0000
	.long 0                                                    // 000000059E3C: 00000000
	.long 0x3ed5                                               // 000000059E40: 00003ED5
	.long 0x70312                                              // 000000059E44: 00070312
	.long 0x7de00                                              // 000000059E48: 0007DE00
	.long 0                                                    // 000000059E4C: 00000000
	.ascii "$"                                                 // 000000059E50: 24
	.byte 0x1                                                  // 000000059E51: 01
	.short 0                                                   // 000000059E52: 0000
	.long 0                                                    // 000000059E54: 00000000
	.long 0x41e4                                               // 000000059E58: 000041E4
	.long 0x60311                                              // 000000059E5C: 00060311
	.long 0x65400                                              // 000000059E60: 00065400
	.long 0                                                    // 000000059E64: 00000000
	.ascii "@"                                                 // 000000059E68: 40
	.byte 0                                                    // 000000059E69: 00
	.short 0                                                   // 000000059E6A: 0000
	.long 0                                                    // 000000059E6C: 00000000
	.long 0x4c8d                                               // 000000059E70: 00004C8D
	.long 0x70312                                              // 000000059E74: 00070312
	.long 0x81e00                                              // 000000059E78: 00081E00
	.long 0                                                    // 000000059E7C: 00000000
	.long 0x8c                                                 // 000000059E80: 0000008C
	.long 0                                                    // 000000059E84: 00000000
	.long 0x49b                                                // 000000059E88: 0000049B
	.long 0x60311                                              // 000000059E8C: 00060311
	.long 0x61a00                                              // 000000059E90: 00061A00
	.long 0                                                    // 000000059E94: 00000000
	.ascii "@"                                                 // 000000059E98: 40
	.byte 0                                                    // 000000059E99: 00
	.short 0                                                   // 000000059E9A: 0000
	.long 0                                                    // 000000059E9C: 00000000
	.long 0x4091                                               // 000000059EA0: 00004091
	.long 0x70312                                              // 000000059EA4: 00070312
	.long 0x7e600                                              // 000000059EA8: 0007E600
	.long 0                                                    // 000000059EAC: 00000000
	.long 0xd4                                                 // 000000059EB0: 000000D4
	.long 0                                                    // 000000059EB4: 00000000
	.ascii "eG"                                                // 000000059EB8: 4765
	.short 0                                                   // 000000059EBA: 0000
	.long 0x60311                                              // 000000059EBC: 00060311
	.long 0x65880                                              // 000000059EC0: 00065880
	.long 0                                                    // 000000059EC4: 00000000
	.ascii "@"                                                 // 000000059EC8: 40
	.byte 0                                                    // 000000059EC9: 00
	.short 0                                                   // 000000059ECA: 0000
	.long 0                                                    // 000000059ECC: 00000000
	.long 0x1392                                               // 000000059ED0: 00001392
	.long 0x60311                                              // 000000059ED4: 00060311
	.long 0x62880                                              // 000000059ED8: 00062880
	.long 0                                                    // 000000059EDC: 00000000
	.ascii "@"                                                 // 000000059EE0: 40
	.byte 0                                                    // 000000059EE1: 00
	.short 0                                                   // 000000059EE2: 0000
	.long 0                                                    // 000000059EE4: 00000000
	.long 0x13f9                                               // 000000059EE8: 000013F9
	.long 0x70312                                              // 000000059EEC: 00070312
	.long 0x6ef00                                              // 000000059EF0: 0006EF00
	.long 0                                                    // 000000059EF4: 00000000
	.long 0xec                                                 // 000000059EF8: 000000EC
	.long 0                                                    // 000000059EFC: 00000000
	.ascii "8"                                                 // 000000059F00: 38
	.byte 0x14                                                 // 000000059F01: 14
	.short 0                                                   // 000000059F02: 0000
	.long 0x70312                                              // 000000059F04: 00070312
	.long 0x6f000                                              // 000000059F08: 0006F000
	.long 0                                                    // 000000059F0C: 00000000
	.ascii "l"                                                 // 000000059F10: 6C
	.byte 0                                                    // 000000059F11: 00
	.short 0                                                   // 000000059F12: 0000
	.long 0                                                    // 000000059F14: 00000000
	.ascii "%"                                                 // 000000059F18: 25
	.byte 0x17                                                 // 000000059F19: 17
	.short 0                                                   // 000000059F1A: 0000
	.long 0x70312                                              // 000000059F1C: 00070312
	.long 0x70100                                              // 000000059F20: 00070100
	.long 0                                                    // 000000059F24: 00000000
	.long 0x9c                                                 // 000000059F28: 0000009C
	.long 0                                                    // 000000059F2C: 00000000
	.ascii "6-"                                                // 000000059F30: 2D36
	.short 0                                                   // 000000059F32: 0000
	.long 0x70312                                              // 000000059F34: 00070312
	.long 0x78a00                                              // 000000059F38: 00078A00
	.long 0                                                    // 000000059F3C: 00000000
	.ascii "t"                                                 // 000000059F40: 74
	.byte 0x1                                                  // 000000059F41: 01
	.short 0                                                   // 000000059F42: 0000
	.long 0                                                    // 000000059F44: 00000000
	.long 0x36bf                                               // 000000059F48: 000036BF
	.long 0x60311                                              // 000000059F4C: 00060311
	.long 0x64a80                                              // 000000059F50: 00064A80
	.long 0                                                    // 000000059F54: 00000000
	.ascii "@"                                                 // 000000059F58: 40
	.byte 0                                                    // 000000059F59: 00
	.short 0                                                   // 000000059F5A: 0000
	.long 0                                                    // 000000059F5C: 00000000
	.ascii "c9"                                                // 000000059F60: 3963
	.short 0                                                   // 000000059F62: 0000
	.long 0x60311                                              // 000000059F64: 00060311
	.long 0x64cc0                                              // 000000059F68: 00064CC0
	.long 0                                                    // 000000059F6C: 00000000
	.ascii "@"                                                 // 000000059F70: 40
	.byte 0                                                    // 000000059F71: 00
	.short 0                                                   // 000000059F72: 0000
	.long 0                                                    // 000000059F74: 00000000
	.ascii "h@"                                                // 000000059F78: 4068
	.short 0                                                   // 000000059F7A: 0000
	.long 0x60311                                              // 000000059F7C: 00060311
	.long 0x652c0                                              // 000000059F80: 000652C0
	.long 0                                                    // 000000059F84: 00000000
	.ascii "@"                                                 // 000000059F88: 40
	.byte 0                                                    // 000000059F89: 00
	.short 0                                                   // 000000059F8A: 0000
	.long 0                                                    // 000000059F8C: 00000000
	.long 0x4a1f                                               // 000000059F90: 00004A1F
	.long 0x60311                                              // 000000059F94: 00060311
	.long 0x65b00                                              // 000000059F98: 00065B00
	.long 0                                                    // 000000059F9C: 00000000
	.ascii "@"                                                 // 000000059FA0: 40
	.byte 0                                                    // 000000059FA1: 00
	.short 0                                                   // 000000059FA2: 0000
	.long 0                                                    // 000000059FA4: 00000000
	.long 0x18e                                                // 000000059FA8: 0000018E
	.long 0x60311                                              // 000000059FAC: 00060311
	.ascii "@"                                                 // 000000059FB0: 40
	.byte 0x17                                                 // 000000059FB1: 17
	.short 0x6                                                 // 000000059FB2: 0006
	.long 0                                                    // 000000059FB4: 00000000
	.ascii "@"                                                 // 000000059FB8: 40
	.byte 0                                                    // 000000059FB9: 00
	.short 0                                                   // 000000059FBA: 0000
	.long 0                                                    // 000000059FBC: 00000000
	.long 0x24c8                                               // 000000059FC0: 000024C8
	.long 0x70312                                              // 000000059FC4: 00070312
	.long 0x75300                                              // 000000059FC8: 00075300
	.long 0                                                    // 000000059FCC: 00000000
	.ascii "D"                                                 // 000000059FD0: 44
	.byte 0x1                                                  // 000000059FD1: 01
	.short 0                                                   // 000000059FD2: 0000
	.long 0                                                    // 000000059FD4: 00000000
	.ascii ",'"                                                // 000000059FD8: 272C
	.short 0                                                   // 000000059FDA: 0000
	.long 0x70312                                              // 000000059FDC: 00070312
	.long 0x76300                                              // 000000059FE0: 00076300
	.long 0                                                    // 000000059FE4: 00000000
	.ascii "@"                                                 // 000000059FE8: 40
	.byte 0x1                                                  // 000000059FE9: 01
	.short 0                                                   // 000000059FEA: 0000
	.long 0                                                    // 000000059FEC: 00000000
	.ascii "_"                                                 // 000000059FF0: 5F
	.byte 0x17                                                 // 000000059FF1: 17
	.short 0                                                   // 000000059FF2: 0000
	.long 0x60311                                              // 000000059FF4: 00060311
	.long 0x62dc0                                              // 000000059FF8: 00062DC0
	.long 0                                                    // 000000059FFC: 00000000
	.ascii "@"                                                 // 00000005A000: 40
	.byte 0                                                    // 00000005A001: 00
	.short 0                                                   // 00000005A002: 0000
	.long 0                                                    // 00000005A004: 00000000
	.long 0x30f0                                               // 00000005A008: 000030F0
	.long 0x70312                                              // 00000005A00C: 00070312
	.long 0x79e00                                              // 00000005A010: 00079E00
	.long 0                                                    // 00000005A014: 00000000
	.ascii "x"                                                 // 00000005A018: 78
	.byte 0                                                    // 00000005A019: 00
	.short 0                                                   // 00000005A01A: 0000
	.long 0                                                    // 00000005A01C: 00000000
	.long 0x4cc8                                               // 00000005A020: 00004CC8
	.long 0x70312                                              // 00000005A024: 00070312
	.long 0x81f00                                              // 00000005A028: 00081F00
	.long 0                                                    // 00000005A02C: 00000000
	.ascii "x"                                                 // 00000005A030: 78
	.byte 0                                                    // 00000005A031: 00
	.short 0                                                   // 00000005A032: 0000
	.long 0                                                    // 00000005A034: 00000000
	.ascii "L"                                                 // 00000005A038: 4C
	.byte 0x3                                                  // 00000005A039: 03
	.short 0                                                   // 00000005A03A: 0000
	.long 0x60311                                              // 00000005A03C: 00060311
	.long 0x618c0                                              // 00000005A040: 000618C0
	.long 0                                                    // 00000005A044: 00000000
	.ascii "@"                                                 // 00000005A048: 40
	.byte 0                                                    // 00000005A049: 00
	.short 0                                                   // 00000005A04A: 0000
	.long 0                                                    // 00000005A04C: 00000000
	.ascii "y,"                                                // 00000005A050: 2C79
	.short 0                                                   // 00000005A052: 0000
	.long 0x60311                                              // 00000005A054: 00060311
	.long 0x64000                                              // 00000005A058: 00064000
	.long 0                                                    // 00000005A05C: 00000000
	.ascii "@"                                                 // 00000005A060: 40
	.byte 0                                                    // 00000005A061: 00
	.short 0                                                   // 00000005A062: 0000
	.long 0                                                    // 00000005A064: 00000000
	.ascii "54"                                                // 00000005A068: 3435
	.short 0                                                   // 00000005A06A: 0000
	.long 0x60311                                              // 00000005A06C: 00060311
	.long 0x64880                                              // 00000005A070: 00064880
	.long 0                                                    // 00000005A074: 00000000
	.ascii "@"                                                 // 00000005A078: 40
	.byte 0                                                    // 00000005A079: 00
	.short 0                                                   // 00000005A07A: 0000
	.long 0                                                    // 00000005A07C: 00000000
	.long 0x4bcc                                               // 00000005A080: 00004BCC
	.long 0x60311                                              // 00000005A084: 00060311
	.long 0x65d00                                              // 00000005A088: 00065D00
	.long 0                                                    // 00000005A08C: 00000000
	.ascii "@"                                                 // 00000005A090: 40
	.byte 0                                                    // 00000005A091: 00
	.short 0                                                   // 00000005A092: 0000
	.long 0                                                    // 00000005A094: 00000000
	.long 0x4bc                                                // 00000005A098: 000004BC
	.long 0x70312                                              // 00000005A09C: 00070312
	.long 0x68b00                                              // 00000005A0A0: 00068B00
	.long 0                                                    // 00000005A0A4: 00000000
	.long 0xf4                                                 // 00000005A0A8: 000000F4
	.long 0                                                    // 00000005A0AC: 00000000
	.long 0x2ec1                                               // 00000005A0B0: 00002EC1
	.long 0x60311                                              // 00000005A0B4: 00060311
	.long 0x64200                                              // 00000005A0B8: 00064200
	.long 0                                                    // 00000005A0BC: 00000000
	.ascii "@"                                                 // 00000005A0C0: 40
	.byte 0                                                    // 00000005A0C1: 00
	.short 0                                                   // 00000005A0C2: 0000
	.long 0                                                    // 00000005A0C4: 00000000
	.ascii "'1"                                                // 00000005A0C8: 3127
	.short 0                                                   // 00000005A0CA: 0000
	.long 0x70312                                              // 00000005A0CC: 00070312
	.long 0x79f00                                              // 00000005A0D0: 00079F00
	.long 0                                                    // 00000005A0D4: 00000000
	.ascii "h"                                                 // 00000005A0D8: 68
	.byte 0                                                    // 00000005A0D9: 00
	.short 0                                                   // 00000005A0DA: 0000
	.long 0                                                    // 00000005A0DC: 00000000
	.long 0x39ec                                               // 00000005A0E0: 000039EC
	.long 0x60311                                              // 00000005A0E4: 00060311
	.ascii "@M"                                                // 00000005A0E8: 4D40
	.short 0x6                                                 // 00000005A0EA: 0006
	.long 0                                                    // 00000005A0EC: 00000000
	.ascii "@"                                                 // 00000005A0F0: 40
	.byte 0                                                    // 00000005A0F1: 00
	.short 0                                                   // 00000005A0F2: 0000
	.long 0                                                    // 00000005A0F4: 00000000
	.long 0x43c6                                               // 00000005A0F8: 000043C6
	.long 0x60311                                              // 00000005A0FC: 00060311
	.long 0x65580                                              // 00000005A100: 00065580
	.long 0                                                    // 00000005A104: 00000000
	.ascii "@"                                                 // 00000005A108: 40
	.byte 0                                                    // 00000005A109: 00
	.short 0                                                   // 00000005A10A: 0000
	.long 0                                                    // 00000005A10C: 00000000
	.long 0x4700                                               // 00000005A110: 00004700
	.long 0x70312                                              // 00000005A114: 00070312
	.long 0x80400                                              // 00000005A118: 00080400
	.long 0                                                    // 00000005A11C: 00000000
	.long 0x114                                                // 00000005A120: 00000114
	.long 0                                                    // 00000005A124: 00000000
	.long 0x4d01                                               // 00000005A128: 00004D01
	.long 0x70312                                              // 00000005A12C: 00070312
	.long 0x82000                                              // 00000005A130: 00082000
	.long 0                                                    // 00000005A134: 00000000
	.ascii "p"                                                 // 00000005A138: 70
	.byte 0                                                    // 00000005A139: 00
	.short 0                                                   // 00000005A13A: 0000
	.long 0                                                    // 00000005A13C: 00000000
	.long 0x7db                                                // 00000005A140: 000007DB
	.long 0x60311                                              // 00000005A144: 00060311
	.ascii "@"                                                 // 00000005A148: 40
	.byte 0x1d                                                 // 00000005A149: 1D
	.short 0x6                                                 // 00000005A14A: 0006
	.long 0                                                    // 00000005A14C: 00000000
	.ascii "@"                                                 // 00000005A150: 40
	.byte 0                                                    // 00000005A151: 00
	.short 0                                                   // 00000005A152: 0000
	.long 0                                                    // 00000005A154: 00000000
	.ascii "{"                                                 // 00000005A158: 7B
	.byte 0x10                                                 // 00000005A159: 10
	.short 0                                                   // 00000005A15A: 0000
	.long 0x60311                                              // 00000005A15C: 00060311
	.long 0x62580                                              // 00000005A160: 00062580
	.long 0                                                    // 00000005A164: 00000000
	.ascii "@"                                                 // 00000005A168: 40
	.byte 0                                                    // 00000005A169: 00
	.short 0                                                   // 00000005A16A: 0000
	.long 0                                                    // 00000005A16C: 00000000
	.long 0x12ed                                               // 00000005A170: 000012ED
	.long 0x70312                                              // 00000005A174: 00070312
	.long 0x6e700                                              // 00000005A178: 0006E700
	.long 0                                                    // 00000005A17C: 00000000
	.ascii "p"                                                 // 00000005A180: 70
	.byte 0x1                                                  // 00000005A181: 01
	.short 0                                                   // 00000005A182: 0000
	.long 0                                                    // 00000005A184: 00000000
	.long 0x23f3                                               // 00000005A188: 000023F3
	.long 0x70312                                              // 00000005A18C: 00070312
	.long 0x74d00                                              // 00000005A190: 00074D00
	.long 0                                                    // 00000005A194: 00000000
	.ascii "t"                                                 // 00000005A198: 74
	.byte 0x1                                                  // 00000005A199: 01
	.short 0                                                   // 00000005A19A: 0000
	.long 0                                                    // 00000005A19C: 00000000
	.long 0x29f3                                               // 00000005A1A0: 000029F3
	.long 0x70312                                              // 00000005A1A4: 00070312
	.long 0x77500                                              // 00000005A1A8: 00077500
	.long 0                                                    // 00000005A1AC: 00000000
	.ascii "H"                                                 // 00000005A1B0: 48
	.byte 0x1                                                  // 00000005A1B1: 01
	.short 0                                                   // 00000005A1B2: 0000
	.long 0                                                    // 00000005A1B4: 00000000
	.long 0x12cc                                               // 00000005A1B8: 000012CC
	.long 0x60311                                              // 00000005A1BC: 00060311
	.long 0x627c0                                              // 00000005A1C0: 000627C0
	.long 0                                                    // 00000005A1C4: 00000000
	.ascii "@"                                                 // 00000005A1C8: 40
	.byte 0                                                    // 00000005A1C9: 00
	.short 0                                                   // 00000005A1CA: 0000
	.long 0                                                    // 00000005A1CC: 00000000
	.ascii "M"                                                 // 00000005A1D0: 4D
	.byte 0x14                                                 // 00000005A1D1: 14
	.short 0                                                   // 00000005A1D2: 0000
	.long 0x70312                                              // 00000005A1D4: 00070312
	.long 0x6f100                                              // 00000005A1D8: 0006F100
	.long 0                                                    // 00000005A1DC: 00000000
	.ascii "d"                                                 // 00000005A1E0: 64
	.byte 0                                                    // 00000005A1E1: 00
	.short 0                                                   // 00000005A1E2: 0000
	.long 0                                                    // 00000005A1E4: 00000000
	.ascii "4"                                                 // 00000005A1E8: 34
	.byte 0x15                                                 // 00000005A1E9: 15
	.short 0                                                   // 00000005A1EA: 0000
	.long 0x70312                                              // 00000005A1EC: 00070312
	.long 0x6f600                                              // 00000005A1F0: 0006F600
	.long 0                                                    // 00000005A1F4: 00000000
	.long 0x84                                                 // 00000005A1F8: 00000084
	.long 0                                                    // 00000005A1FC: 00000000
	.long 0x1bbd                                               // 00000005A200: 00001BBD
	.long 0x70312                                              // 00000005A204: 00070312
	.long 0x71e00                                              // 00000005A208: 00071E00
	.long 0                                                    // 00000005A20C: 00000000
	.ascii "$"                                                 // 00000005A210: 24
	.byte 0x1                                                  // 00000005A211: 01
	.short 0                                                   // 00000005A212: 0000
	.long 0                                                    // 00000005A214: 00000000
	.ascii "V"                                                 // 00000005A218: 56
	.byte 0x7                                                  // 00000005A219: 07
	.short 0                                                   // 00000005A21A: 0000
	.long 0x60311                                              // 00000005A21C: 00060311
	.long 0x61cc0                                              // 00000005A220: 00061CC0
	.long 0                                                    // 00000005A224: 00000000
	.ascii "@"                                                 // 00000005A228: 40
	.byte 0                                                    // 00000005A229: 00
	.short 0                                                   // 00000005A22A: 0000
	.long 0                                                    // 00000005A22C: 00000000
	.long 0x9a3                                                // 00000005A230: 000009A3
	.long 0x60311                                              // 00000005A234: 00060311
	.long 0x61f00                                              // 00000005A238: 00061F00
	.long 0                                                    // 00000005A23C: 00000000
	.ascii "@"                                                 // 00000005A240: 40
	.byte 0                                                    // 00000005A241: 00
	.short 0                                                   // 00000005A242: 0000
	.long 0                                                    // 00000005A244: 00000000
	.ascii "="                                                 // 00000005A248: 3D
	.byte 0xc                                                  // 00000005A249: 0C
	.short 0                                                   // 00000005A24A: 0000
	.long 0x60311                                              // 00000005A24C: 00060311
	.long 0x62180                                              // 00000005A250: 00062180
	.long 0                                                    // 00000005A254: 00000000
	.ascii "@"                                                 // 00000005A258: 40
	.byte 0                                                    // 00000005A259: 00
	.short 0                                                   // 00000005A25A: 0000
	.long 0                                                    // 00000005A25C: 00000000
	.ascii "q"                                                 // 00000005A260: 71
	.byte 0x13                                                 // 00000005A261: 13
	.short 0                                                   // 00000005A262: 0000
	.long 0x70312                                              // 00000005A264: 00070312
	.long 0x6eb00                                              // 00000005A268: 0006EB00
	.long 0                                                    // 00000005A26C: 00000000
	.ascii "P"                                                 // 00000005A270: 50
	.byte 0x1                                                  // 00000005A271: 01
	.short 0                                                   // 00000005A272: 0000
	.long 0                                                    // 00000005A274: 00000000
	.long 0x17ac                                               // 00000005A278: 000017AC
	.long 0x70312                                              // 00000005A27C: 00070312
	.long 0x70400                                              // 00000005A280: 00070400
	.long 0                                                    // 00000005A284: 00000000
	.long 0xfc                                                 // 00000005A288: 000000FC
	.long 0                                                    // 00000005A28C: 00000000
	.ascii "q!"                                                // 00000005A290: 2171
	.short 0                                                   // 00000005A292: 0000
	.long 0x70312                                              // 00000005A294: 00070312
	.long 0x73d00                                              // 00000005A298: 00073D00
	.long 0                                                    // 00000005A29C: 00000000
	.ascii "x"                                                 // 00000005A2A0: 78
	.byte 0x1                                                  // 00000005A2A1: 01
	.short 0                                                   // 00000005A2A2: 0000
	.long 0                                                    // 00000005A2A4: 00000000
	.long 0x39d4                                               // 00000005A2A8: 000039D4
	.long 0x70312                                              // 00000005A2AC: 00070312
	.long 0x7c400                                              // 00000005A2B0: 0007C400
	.long 0                                                    // 00000005A2B4: 00000000
	.long 0xac                                                 // 00000005A2B8: 000000AC
	.long 0                                                    // 00000005A2BC: 00000000
	.ascii "D="                                                // 00000005A2C0: 3D44
	.short 0                                                   // 00000005A2C2: 0000
	.long 0x70312                                              // 00000005A2C4: 00070312
	.long 0x7d400                                              // 00000005A2C8: 0007D400
	.long 0                                                    // 00000005A2CC: 00000000
	.long 0x114                                                // 00000005A2D0: 00000114
	.long 0                                                    // 00000005A2D4: 00000000
	.ascii "UK"                                                // 00000005A2D8: 4B55
	.short 0                                                   // 00000005A2DA: 0000
	.long 0x70312                                              // 00000005A2DC: 00070312
	.long 0x81800                                              // 00000005A2E0: 00081800
	.long 0                                                    // 00000005A2E4: 00000000
	.ascii "p"                                                 // 00000005A2E8: 70
	.byte 0                                                    // 00000005A2E9: 00
	.short 0                                                   // 00000005A2EA: 0000
	.long 0                                                    // 00000005A2EC: 00000000
	.long 0x14d8                                               // 00000005A2F0: 000014D8
	.long 0x70312                                              // 00000005A2F4: 00070312
	.long 0x6f400                                              // 00000005A2F8: 0006F400
	.long 0                                                    // 00000005A2FC: 00000000
	.long 0x90                                                 // 00000005A300: 00000090
	.long 0                                                    // 00000005A304: 00000000
	.long 0x2e8d                                               // 00000005A308: 00002E8D
	.long 0x60311                                              // 00000005A30C: 00060311
	.long 0x641c0                                              // 00000005A310: 000641C0
	.long 0                                                    // 00000005A314: 00000000
	.ascii "@"                                                 // 00000005A318: 40
	.byte 0                                                    // 00000005A319: 00
	.short 0                                                   // 00000005A31A: 0000
	.long 0                                                    // 00000005A31C: 00000000
	.ascii "i="                                                // 00000005A320: 3D69
	.short 0                                                   // 00000005A322: 0000
	.long 0x60311                                              // 00000005A324: 00060311
	.ascii "@P"                                                // 00000005A328: 5040
	.short 0x6                                                 // 00000005A32A: 0006
	.long 0                                                    // 00000005A32C: 00000000
	.ascii "@"                                                 // 00000005A330: 40
	.byte 0                                                    // 00000005A331: 00
	.short 0                                                   // 00000005A332: 0000
	.long 0                                                    // 00000005A334: 00000000
	.ascii "GE"                                                // 00000005A338: 4547
	.short 0                                                   // 00000005A33A: 0000
	.long 0x60311                                              // 00000005A33C: 00060311
	.long 0x656c0                                              // 00000005A340: 000656C0
	.long 0                                                    // 00000005A344: 00000000
	.ascii "@"                                                 // 00000005A348: 40
	.byte 0                                                    // 00000005A349: 00
	.short 0                                                   // 00000005A34A: 0000
	.long 0                                                    // 00000005A34C: 00000000
	.long 0xea0                                                // 00000005A350: 00000EA0
	.long 0x60311                                              // 00000005A354: 00060311
	.long 0x623c0                                              // 00000005A358: 000623C0
	.long 0                                                    // 00000005A35C: 00000000
	.ascii "@"                                                 // 00000005A360: 40
	.byte 0                                                    // 00000005A361: 00
	.short 0                                                   // 00000005A362: 0000
	.long 0                                                    // 00000005A364: 00000000
	.long 0x11fd                                               // 00000005A368: 000011FD
	.long 0x70312                                              // 00000005A36C: 00070312
	.long 0x6e300                                              // 00000005A370: 0006E300
	.long 0                                                    // 00000005A374: 00000000
	.long 0xf4                                                 // 00000005A378: 000000F4
	.long 0                                                    // 00000005A37C: 00000000
	.ascii "-+"                                                // 00000005A380: 2B2D
	.short 0                                                   // 00000005A382: 0000
	.long 0x70312                                              // 00000005A384: 00070312
	.long 0x77d00                                              // 00000005A388: 00077D00
	.long 0                                                    // 00000005A38C: 00000000
	.ascii "x"                                                 // 00000005A390: 78
	.byte 0x1                                                  // 00000005A391: 01
	.short 0                                                   // 00000005A392: 0000
	.long 0                                                    // 00000005A394: 00000000
	.ascii "6,"                                                // 00000005A398: 2C36
	.short 0                                                   // 00000005A39A: 0000
	.long 0x60311                                              // 00000005A39C: 00060311
	.long 0x63fc0                                              // 00000005A3A0: 00063FC0
	.long 0                                                    // 00000005A3A4: 00000000
	.ascii "@"                                                 // 00000005A3A8: 40
	.byte 0                                                    // 00000005A3A9: 00
	.short 0                                                   // 00000005A3AA: 0000
	.long 0                                                    // 00000005A3AC: 00000000
	.ascii "_0"                                                // 00000005A3B0: 305F
	.short 0                                                   // 00000005A3B2: 0000
	.long 0x70312                                              // 00000005A3B4: 00070312
	.long 0x79b00                                              // 00000005A3B8: 00079B00
	.long 0                                                    // 00000005A3BC: 00000000
	.ascii "|"                                                 // 00000005A3C0: 7C
	.byte 0                                                    // 00000005A3C1: 00
	.short 0                                                   // 00000005A3C2: 0000
	.long 0                                                    // 00000005A3C4: 00000000
	.ascii "z1"                                                // 00000005A3C8: 317A
	.short 0                                                   // 00000005A3CA: 0000
	.long 0x60311                                              // 00000005A3CC: 00060311
	.ascii "@E"                                                // 00000005A3D0: 4540
	.short 0x6                                                 // 00000005A3D2: 0006
	.long 0                                                    // 00000005A3D4: 00000000
	.ascii "@"                                                 // 00000005A3D8: 40
	.byte 0                                                    // 00000005A3D9: 00
	.short 0                                                   // 00000005A3DA: 0000
	.long 0                                                    // 00000005A3DC: 00000000
	.long 0x1018                                               // 00000005A3E0: 00001018
	.long 0x70312                                              // 00000005A3E4: 00070312
	.long 0x6d500                                              // 00000005A3E8: 0006D500
	.long 0                                                    // 00000005A3EC: 00000000
	.ascii "H"                                                 // 00000005A3F0: 48
	.byte 0x1                                                  // 00000005A3F1: 01
	.short 0                                                   // 00000005A3F2: 0000
	.long 0                                                    // 00000005A3F4: 00000000
	.long 0x29c6                                               // 00000005A3F8: 000029C6
	.long 0x60311                                              // 00000005A3FC: 00060311
	.long 0x63dc0                                              // 00000005A400: 00063DC0
	.long 0                                                    // 00000005A404: 00000000
	.ascii "@"                                                 // 00000005A408: 40
	.byte 0                                                    // 00000005A409: 00
	.short 0                                                   // 00000005A40A: 0000
	.long 0                                                    // 00000005A40C: 00000000
	.long 0x2bd1                                               // 00000005A410: 00002BD1
	.long 0x70312                                              // 00000005A414: 00070312
	.long 0x78100                                              // 00000005A418: 00078100
	.long 0                                                    // 00000005A41C: 00000000
	.ascii "p"                                                 // 00000005A420: 70
	.byte 0x1                                                  // 00000005A421: 01
	.short 0                                                   // 00000005A422: 0000
	.long 0                                                    // 00000005A424: 00000000
	.long 0x33c8                                               // 00000005A428: 000033C8
	.long 0x60311                                              // 00000005A42C: 00060311
	.long 0x64800                                              // 00000005A430: 00064800
	.long 0                                                    // 00000005A434: 00000000
	.ascii "@"                                                 // 00000005A438: 40
	.byte 0                                                    // 00000005A439: 00
	.short 0                                                   // 00000005A43A: 0000
	.long 0                                                    // 00000005A43C: 00000000
	.ascii "3F"                                                // 00000005A440: 4633
	.short 0                                                   // 00000005A442: 0000
	.long 0x60311                                              // 00000005A444: 00060311
	.long 0x65780                                              // 00000005A448: 00065780
	.long 0                                                    // 00000005A44C: 00000000
	.ascii "@"                                                 // 00000005A450: 40
	.byte 0                                                    // 00000005A451: 00
	.short 0                                                   // 00000005A452: 0000
	.long 0                                                    // 00000005A454: 00000000
	.ascii "o"                                                 // 00000005A458: 6F
	.byte 0x6                                                  // 00000005A459: 06
	.short 0                                                   // 00000005A45A: 0000
	.long 0x70312                                              // 00000005A45C: 00070312
	.long 0x69500                                              // 00000005A460: 00069500
	.long 0                                                    // 00000005A464: 00000000
	.long 0xe8                                                 // 00000005A468: 000000E8
	.long 0                                                    // 00000005A46C: 00000000
	.long 0x10e5                                               // 00000005A470: 000010E5
	.long 0x70312                                              // 00000005A474: 00070312
	.long 0x6db00                                              // 00000005A478: 0006DB00
	.long 0                                                    // 00000005A47C: 00000000
	.ascii "L"                                                 // 00000005A480: 4C
	.byte 0x1                                                  // 00000005A481: 01
	.short 0                                                   // 00000005A482: 0000
	.long 0                                                    // 00000005A484: 00000000
	.long 0x308e                                               // 00000005A488: 0000308E
	.long 0x70312                                              // 00000005A48C: 00070312
	.long 0x79c00                                              // 00000005A490: 00079C00
	.long 0                                                    // 00000005A494: 00000000
	.long 0x94                                                 // 00000005A498: 00000094
	.long 0                                                    // 00000005A49C: 00000000
	.long 0x3199                                               // 00000005A4A0: 00003199
	.long 0x70312                                              // 00000005A4A4: 00070312
	.long 0x7a100                                              // 00000005A4A8: 0007A100
	.long 0                                                    // 00000005A4AC: 00000000
	.long 0x84                                                 // 00000005A4B0: 00000084
	.long 0                                                    // 00000005A4B4: 00000000
	.long 0x3db8                                               // 00000005A4B8: 00003DB8
	.long 0x60311                                              // 00000005A4BC: 00060311
	.long 0x65080                                              // 00000005A4C0: 00065080
	.long 0                                                    // 00000005A4C4: 00000000
	.ascii "@"                                                 // 00000005A4C8: 40
	.byte 0                                                    // 00000005A4C9: 00
	.short 0                                                   // 00000005A4CA: 0000
	.long 0                                                    // 00000005A4CC: 00000000
	.ascii "-B"                                                // 00000005A4D0: 422D
	.short 0                                                   // 00000005A4D2: 0000
	.long 0x60311                                              // 00000005A4D4: 00060311
	.ascii "@T"                                                // 00000005A4D8: 5440
	.short 0x6                                                 // 00000005A4DA: 0006
	.long 0                                                    // 00000005A4DC: 00000000
	.ascii "@"                                                 // 00000005A4E0: 40
	.byte 0                                                    // 00000005A4E1: 00
	.short 0                                                   // 00000005A4E2: 0000
	.long 0                                                    // 00000005A4E4: 00000000
	.ascii "LI"                                                // 00000005A4E8: 494C
	.short 0                                                   // 00000005A4EA: 0000
	.long 0x70312                                              // 00000005A4EC: 00070312
	.long 0x80e00                                              // 00000005A4F0: 00080E00
	.long 0                                                    // 00000005A4F4: 00000000
	.long 0x114                                                // 00000005A4F8: 00000114
	.long 0                                                    // 00000005A4FC: 00000000

	.section	.gnu.hash,#alloc
	.long 0x94                                                 // 00000005A500: 00000094
	.long 0x1                                                  // 00000005A504: 00000001
	.long 0x80                                                 // 00000005A508: 00000080
	.long 0x1a                                                 // 00000005A50C: 0000001A
	.long 0x50066010                                           // 00000005A510: 50066010
	.long 0x21124003                                           // 00000005A514: 21124003
	.long 0x102000                                             // 00000005A518: 00102000
	.long 0x203a808                                            // 00000005A51C: 0203A808
	.long 0x11084800                                           // 00000005A520: 11084800
	.long 0x208080                                             // 00000005A524: 00208080
	.long 0x90080801                                           // 00000005A528: 90080801
	.long 0x2000000                                            // 00000005A52C: 02000000
	.long 0x2088                                               // 00000005A530: 00002088
	.long 0x4c0a080e                                           // 00000005A534: 4C0A080E
	.long 0                                                    // 00000005A538: 00000000
	.long 0                                                    // 00000005A53C: 00000000
	.long 0x401542f2                                           // 00000005A540: 401542F2
	.ascii ")"                                                 // 00000005A544: 29
	.byte 0x2                                                  // 00000005A545: 02
	.short 0x281                                               // 00000005A546: 0281
	.long 0x891200c                                            // 00000005A548: 0891200C
	.long 0x4480000                                            // 00000005A54C: 04480000
	.long 0x10486804                                           // 00000005A550: 10486804
	.long 0x4                                                  // 00000005A554: 00000004
	.long 0x80204000                                           // 00000005A558: 80204000
	.long 0x4000000                                            // 00000005A55C: 04000000
	.long 0x80708002                                           // 00000005A560: 80708002
	.long 0                                                    // 00000005A564: 00000000
	.long 0                                                    // 00000005A568: 00000000
	.long 0x81100100                                           // 00000005A56C: 81100100
	.long 0x20000212                                           // 00000005A570: 20000212
	.long 0x8021000                                            // 00000005A574: 08021000
	.long 0x1080f800                                           // 00000005A578: 1080F800
	.long 0x9804200                                            // 00000005A57C: 09804200
	.long 0x87290212                                           // 00000005A580: 87290212
	.long 0x81886404                                           // 00000005A584: 81886404
	.long 0x1100c00                                            // 00000005A588: 01100C00
	.long 0x30900                                              // 00000005A58C: 00030900
	.long 0x96042202                                           // 00000005A590: 96042202
	.long 0x92008100                                           // 00000005A594: 92008100
	.long 0x101800c0                                           // 00000005A598: 101800C0
	.long 0x100000                                             // 00000005A59C: 00100000
	.long 0x83060006                                           // 00000005A5A0: 83060006
	.long 0x10150002                                           // 00000005A5A4: 10150002
	.long 0x5020010                                            // 00000005A5A8: 05020010
	.long 0x8020800                                            // 00000005A5AC: 08020800
	.ascii "@"                                                 // 00000005A5B0: 40
	.byte 0                                                    // 00000005A5B1: 00
	.short 0                                                   // 00000005A5B2: 0000
	.long 0x20000008                                           // 00000005A5B4: 20000008
	.long 0x81040004                                           // 00000005A5B8: 81040004
	.long 0x40001                                              // 00000005A5BC: 00040001
	.ascii "`"                                                 // 00000005A5C0: 60
	.byte 0x2                                                  // 00000005A5C1: 02
	.ascii "\""                                                // 00000005A5C2: 22
	.byte 0                                                    // 00000005A5C3: 00
	.long 0x4000204                                            // 00000005A5C4: 04000204
	.long 0x14204680                                           // 00000005A5C8: 14204680
	.long 0x18010406                                           // 00000005A5CC: 18010406
	.long 0x10100008                                           // 00000005A5D0: 10100008
	.long 0x10010200                                           // 00000005A5D4: 10010200
	.long 0xc0898481                                           // 00000005A5D8: C0898481
	.long 0x81410                                              // 00000005A5DC: 00081410
	.long 0x800b4800                                           // 00000005A5E0: 800B4800
	.long 0x80080211                                           // 00000005A5E4: 80080211
	.ascii "B@"                                                // 00000005A5E8: 4042
	.short 0                                                   // 00000005A5EA: 0000
	.long 0x8b090000                                           // 00000005A5EC: 8B090000
	.long 0x86200000                                           // 00000005A5F0: 86200000
	.long 0x682b00                                             // 00000005A5F4: 00682B00
	.long 0x2000001c                                           // 00000005A5F8: 2000001C
	.long 0x4110400                                            // 00000005A5FC: 04110400
	.long 0x3082e0a0                                           // 00000005A600: 3082E0A0
	.long 0x40008000                                           // 00000005A604: 40008000
	.long 0x10c0001                                            // 00000005A608: 010C0001
	.long 0x10000010                                           // 00000005A60C: 10000010
	.ascii "d"                                                 // 00000005A610: 64
	.byte 0xc2                                                 // 00000005A611: C2
	.ascii "0"                                                 // 00000005A612: 30
	.byte 0                                                    // 00000005A613: 00
	.long 0x12500000                                           // 00000005A614: 12500000
	.long 0xa800201                                            // 00000005A618: 0A800201
	.long 0x14000012                                           // 00000005A61C: 14000012
	.ascii "@"                                                 // 00000005A620: 40
	.byte 0                                                    // 00000005A621: 00
	.short 0x1000                                              // 00000005A622: 1000
	.long 0x114008                                             // 00000005A624: 00114008
	.long 0x28180088                                           // 00000005A628: 28180088
	.ascii "d"                                                 // 00000005A62C: 64
	.byte 0x2                                                  // 00000005A62D: 02
	.short 0x480                                               // 00000005A62E: 0480
	.long 0x4812                                               // 00000005A630: 00004812
	.ascii "@A"                                                // 00000005A634: 4140
	.short 0xa02                                               // 00000005A636: 0A02
	.ascii "Aq"                                                // 00000005A638: 7141
	.short 0                                                   // 00000005A63A: 0000
	.long 0x102104                                             // 00000005A63C: 00102104
	.long 0x1d00800                                            // 00000005A640: 01D00800
	.ascii " "                                                 // 00000005A644: 20
	.byte 0x1                                                  // 00000005A645: 01
	.ascii ","                                                 // 00000005A646: 2C
	.byte 0                                                    // 00000005A647: 00
	.long 0x40002                                              // 00000005A648: 00040002
	.long 0x1000080                                            // 00000005A64C: 01000080
	.ascii ":"                                                 // 00000005A650: 3A
	.byte 0xa0                                                 // 00000005A651: A0
	.ascii "0"                                                 // 00000005A652: 30
	.byte 0x19                                                 // 00000005A653: 19
	.long 0x82a010b0                                           // 00000005A654: 82A010B0
	.long 0x60400                                              // 00000005A658: 00060400
	.long 0x20813400                                           // 00000005A65C: 20813400
	.ascii "V"                                                 // 00000005A660: 56
	.byte 0                                                    // 00000005A661: 00
	.short 0x5080                                              // 00000005A662: 5080
	.long 0x319201                                             // 00000005A664: 00319201
	.long 0x414                                                // 00000005A668: 00000414
	.long 0x800082                                             // 00000005A66C: 00800082
	.ascii "@"                                                 // 00000005A670: 40
	.byte 0x5                                                  // 00000005A671: 05
	.short 0x2                                                 // 00000005A672: 0002
	.long 0x8100                                               // 00000005A674: 00008100
	.long 0x88040080                                           // 00000005A678: 88040080
	.long 0x2410800                                            // 00000005A67C: 02410800
	.long 0x100000                                             // 00000005A680: 00100000
	.long 0x400a01                                             // 00000005A684: 00400A01
	.long 0x4000000                                            // 00000005A688: 04000000
	.long 0x42100008                                           // 00000005A68C: 42100008
	.ascii "!"                                                 // 00000005A690: 21
	.byte 0                                                    // 00000005A691: 00
	.short 0x1                                                 // 00000005A692: 0001
	.ascii "@"                                                 // 00000005A694: 40
	.byte 0                                                    // 00000005A695: 00
	.ascii "@"                                                 // 00000005A696: 40
	.byte 0xa0                                                 // 00000005A697: A0
	.ascii "i\"("                                              // 00000005A698: 282269
	.byte 0                                                    // 00000005A69B: 00
	.long 0x2800                                               // 00000005A69C: 00002800
	.long 0x80032000                                           // 00000005A6A0: 80032000
	.ascii "D 0"                                               // 00000005A6A4: 302044
	.byte 0x80                                                 // 00000005A6A7: 80
	.ascii " "                                                 // 00000005A6A8: 20
	.byte 0                                                    // 00000005A6A9: 00
	.short 0x2                                                 // 00000005A6AA: 0002
	.long 0x50001002                                           // 00000005A6AC: 50001002
	.long 0x22000004                                           // 00000005A6B0: 22000004
	.long 0x800                                                // 00000005A6B4: 00000800
	.long 0x410100                                             // 00000005A6B8: 00410100
	.long 0x10090                                              // 00000005A6BC: 00010090
	.long 0x50202                                              // 00000005A6C0: 00050202
	.long 0x10000000                                           // 00000005A6C4: 10000000
	.ascii "1"                                                 // 00000005A6C8: 31
	.byte 0                                                    // 00000005A6C9: 00
	.short 0x6d81                                              // 00000005A6CA: 6D81
	.long 0x42428004                                           // 00000005A6CC: 42428004
	.long 0x4000500                                            // 00000005A6D0: 04000500
	.long 0x1d4                                                // 00000005A6D4: 000001D4
	.long 0xa4002880                                           // 00000005A6D8: A4002880
	.ascii " "                                                 // 00000005A6DC: 20
	.byte 0                                                    // 00000005A6DD: 00
	.ascii " "                                                 // 00000005A6DE: 20
	.byte 0                                                    // 00000005A6DF: 00
	.long 0                                                    // 00000005A6E0: 00000000
	.long 0x400008                                             // 00000005A6E4: 00400008
	.long 0x14528001                                           // 00000005A6E8: 14528001
	.ascii "@"                                                 // 00000005A6EC: 40
	.byte 0                                                    // 00000005A6ED: 00
	.short 0x1000                                              // 00000005A6EE: 1000
	.long 0x500010                                             // 00000005A6F0: 00500010
	.long 0x40000                                              // 00000005A6F4: 00040000
	.long 0xf0001                                              // 00000005A6F8: 000F0001
	.long 0x4408081d                                           // 00000005A6FC: 4408081D
	.long 0x18002a00                                           // 00000005A700: 18002A00
	.ascii " "                                                 // 00000005A704: 20
	.byte 0x8                                                  // 00000005A705: 08
	.short 0x9004                                              // 00000005A706: 9004
	.long 0xb02a0202                                           // 00000005A708: B02A0202
	.ascii " T"                                                // 00000005A70C: 5420
	.short 0x1605                                              // 00000005A70E: 1605
	.long 0x4260000                                            // 00000005A710: 04260000
	.long 0xa8000092                                           // 00000005A714: A8000092
	.long 0x22000008                                           // 00000005A718: 22000008
	.long 0x9c002                                              // 00000005A71C: 0009C002
	.ascii "($"                                                // 00000005A720: 2428
	.short 0xa0a9                                              // 00000005A722: A0A9
	.ascii "*"                                                 // 00000005A724: 2A
	.byte 0x81                                                 // 00000005A725: 81
	.short 0x1000                                              // 00000005A726: 1000
	.long 0x100080                                             // 00000005A728: 00100080
	.ascii "@"                                                 // 00000005A72C: 40
	.byte 0                                                    // 00000005A72D: 00
	.short 0x8480                                              // 00000005A72E: 8480
	.long 0x100801                                             // 00000005A730: 00100801
	.long 0x10100192                                           // 00000005A734: 10100192
	.long 0x4008088                                            // 00000005A738: 04008088
	.long 0x4408c                                              // 00000005A73C: 0004408C
	.long 0x2000000                                            // 00000005A740: 02000000
	.long 0x400000                                             // 00000005A744: 00400000
	.long 0                                                    // 00000005A748: 00000000
	.long 0x104000                                             // 00000005A74C: 00104000
	.ascii "@Jb"                                               // 00000005A750: 624A40
	.byte 0                                                    // 00000005A753: 00
	.ascii "%"                                                 // 00000005A754: 25
	.byte 0                                                    // 00000005A755: 00
	.short 0xa008                                              // 00000005A756: A008
	.ascii "@"                                                 // 00000005A758: 40
	.byte 0x1                                                  // 00000005A759: 01
	.short 0x410                                               // 00000005A75A: 0410
	.long 0x80010082                                           // 00000005A75C: 80010082
	.ascii "@"                                                 // 00000005A760: 40
	.byte 0                                                    // 00000005A761: 00
	.short 0x9080                                              // 00000005A762: 9080
	.long 0x401001                                             // 00000005A764: 00401001
	.ascii " `"                                                // 00000005A768: 6020
	.short 0x2281                                              // 00000005A76A: 2281
	.long 0x10005080                                           // 00000005A76C: 10005080
	.long 0x20000001                                           // 00000005A770: 20000001
	.long 0xc000098                                            // 00000005A774: 0C000098
	.ascii "@"                                                 // 00000005A778: 40
	.byte 0                                                    // 00000005A779: 00
	.short 0x606                                               // 00000005A77A: 0606
	.long 0x10024401                                           // 00000005A77C: 10024401
	.long 0x10040510                                           // 00000005A780: 10040510
	.long 0x1c004002                                           // 00000005A784: 1C004002
	.long 0x10020006                                           // 00000005A788: 10020006
	.long 0x1000400                                            // 00000005A78C: 01000400
	.long 0x18100000                                           // 00000005A790: 18100000
	.long 0x10040002                                           // 00000005A794: 10040002
	.long 0x86004808                                           // 00000005A798: 86004808
	.long 0x20c20408                                           // 00000005A79C: 20C20408
	.long 0x10108804                                           // 00000005A7A0: 10108804
	.long 0x808208                                             // 00000005A7A4: 00808208
	.long 0x100480                                             // 00000005A7A8: 00100480
	.ascii " "                                                 // 00000005A7AC: 20
	.byte 0x8                                                  // 00000005A7AD: 08
	.ascii ","                                                 // 00000005A7AE: 2C
	.byte 0                                                    // 00000005A7AF: 00
	.long 0x410200                                             // 00000005A7B0: 00410200
	.long 0x3121810                                            // 00000005A7B4: 03121810
	.long 0x12024400                                           // 00000005A7B8: 12024400
	.long 0                                                    // 00000005A7BC: 00000000
	.long 0x12842201                                           // 00000005A7C0: 12842201
	.long 0x2000404                                            // 00000005A7C4: 02000404
	.long 0x84220080                                           // 00000005A7C8: 84220080
	.long 0x50104010                                           // 00000005A7CC: 50104010
	.long 0x20000800                                           // 00000005A7D0: 20000800
	.long 0x80004000                                           // 00000005A7D4: 80004000
	.long 0x8041800b                                           // 00000005A7D8: 8041800B
	.long 0x20000a4                                            // 00000005A7DC: 020000A4
	.long 0x2a0000                                             // 00000005A7E0: 002A0000
	.long 0x40010818                                           // 00000005A7E4: 40010818
	.long 0x300002                                             // 00000005A7E8: 00300002
	.ascii "D"                                                 // 00000005A7EC: 44
	.byte 0x8                                                  // 00000005A7ED: 08
	.short 0x2406                                              // 00000005A7EE: 2406
	.long 0x4010401                                            // 00000005A7F0: 04010401
	.long 0x43102c08                                           // 00000005A7F4: 43102C08
	.long 0xb0018085                                           // 00000005A7F8: B0018085
	.long 0                                                    // 00000005A7FC: 00000000
	.long 0x18                                                 // 00000005A800: 00000018
	.long 0                                                    // 00000005A804: 00000000
	.long 0x19041800                                           // 00000005A808: 19041800
	.long 0x142400                                             // 00000005A80C: 00142400
	.long 0x40182082                                           // 00000005A810: 40182082
	.long 0x80484201                                           // 00000005A814: 80484201
	.long 0x20001000                                           // 00000005A818: 20001000
	.long 0x8000c                                              // 00000005A81C: 0008000C
	.long 0x12000                                              // 00000005A820: 00012000
	.long 0x2008c                                              // 00000005A824: 0002008C
	.ascii "D@ "                                               // 00000005A828: 204044
	.byte 0                                                    // 00000005A82B: 00
	.long 0x21400200                                           // 00000005A82C: 21400200
	.long 0x220050c6                                           // 00000005A830: 220050C6
	.long 0x400003                                             // 00000005A834: 00400003
	.long 0x40405                                              // 00000005A838: 00040405
	.long 0xa0810880                                           // 00000005A83C: A0810880
	.long 0xc0900                                              // 00000005A840: 000C0900
	.long 0x3144001                                            // 00000005A844: 03144001
	.long 0xc8821210                                           // 00000005A848: C8821210
	.long 0x118000c8                                           // 00000005A84C: 118000C8
	.ascii ","                                                 // 00000005A850: 2C
	.byte 0                                                    // 00000005A851: 00
	.short 0x14                                                // 00000005A852: 0014
	.long 0x4020400                                            // 00000005A854: 04020400
	.ascii "H"                                                 // 00000005A858: 48
	.byte 0                                                    // 00000005A859: 00
	.short 0x200                                               // 00000005A85A: 0200
	.long 0x204201                                             // 00000005A85C: 00204201
	.ascii " "                                                 // 00000005A860: 20
	.byte 0                                                    // 00000005A861: 00
	.ascii "("                                                 // 00000005A862: 28
	.byte 0x10                                                 // 00000005A863: 10
	.ascii ")"                                                 // 00000005A864: 29
	.byte 0                                                    // 00000005A865: 00
	.short 0x2001                                              // 00000005A866: 2001
	.long 0x80900                                              // 00000005A868: 00080900
	.ascii " "                                                 // 00000005A86C: 20
	.byte 0                                                    // 00000005A86D: 00
	.short 0x2                                                 // 00000005A86E: 0002
	.ascii "H"                                                 // 00000005A870: 48
	.byte 0                                                    // 00000005A871: 00
	.short 0                                                   // 00000005A872: 0000
	.long 0x124a8                                              // 00000005A874: 000124A8
	.long 0x800                                                // 00000005A878: 00000800
	.long 0x14040090                                           // 00000005A87C: 14040090
	.long 0x202c000                                            // 00000005A880: 0202C000
	.long 0x2001                                               // 00000005A884: 00002001
	.ascii "@"                                                 // 00000005A888: 40
	.byte 0xe4                                                 // 00000005A889: E4
	.short 0                                                   // 00000005A88A: 0000
	.long 0x20000000                                           // 00000005A88C: 20000000
	.ascii "1B"                                                // 00000005A890: 4231
	.short 0x100                                               // 00000005A892: 0100
	.ascii "!DP"                                               // 00000005A894: 504421
	.byte 0                                                    // 00000005A897: 00
	.long 0x90208000                                           // 00000005A898: 90208000
	.long 0x40104004                                           // 00000005A89C: 40104004
	.long 0x2004010                                            // 00000005A8A0: 02004010
	.long 0x1000001                                            // 00000005A8A4: 01000001
	.ascii " "                                                 // 00000005A8A8: 20
	.byte 0x4                                                  // 00000005A8A9: 04
	.ascii "( "                                                // 00000005A8AA: 2028
	.long 0x50802001                                           // 00000005A8AC: 50802001
	.long 0x400                                                // 00000005A8B0: 00000400
	.long 0x30002000                                           // 00000005A8B4: 30002000
	.long 0xb0204004                                           // 00000005A8B8: B0204004
	.long 0x9014008                                            // 00000005A8BC: 09014008
	.long 0x250c80                                             // 00000005A8C0: 00250C80
	.long 0x900004                                             // 00000005A8C4: 00900004
	.long 0x80044100                                           // 00000005A8C8: 80044100
	.long 0xa0144200                                           // 00000005A8CC: A0144200
	.long 0x90a00200                                           // 00000005A8D0: 90A00200
	.long 0x4400000                                            // 00000005A8D4: 04400000
	.long 0                                                    // 00000005A8D8: 00000000
	.long 0x1000400                                            // 00000005A8DC: 01000400
	.ascii "  "                                                // 00000005A8E0: 2020
	.short 0x8202                                              // 00000005A8E2: 8202
	.ascii "$"                                                 // 00000005A8E4: 24
	.byte 0x1                                                  // 00000005A8E5: 01
	.short 0x206                                               // 00000005A8E6: 0206
	.long 0x20000808                                           // 00000005A8E8: 20000808
	.long 0x4804011                                            // 00000005A8EC: 04804011
	.ascii "K@"                                                // 00000005A8F0: 404B
	.short 0x54c0                                              // 00000005A8F2: 54C0
	.ascii "$"                                                 // 00000005A8F4: 24
	.byte 0                                                    // 00000005A8F5: 00
	.short 0x480                                               // 00000005A8F6: 0480
	.long 0x2000c2                                             // 00000005A8F8: 002000C2
	.long 0x80580412                                           // 00000005A8FC: 80580412
	.long 0x380880                                             // 00000005A900: 00380880
	.long 0x40024001                                           // 00000005A904: 40024001
	.long 0x90040800                                           // 00000005A908: 90040800
	.long 0x4400                                               // 00000005A90C: 00004400
	.long 0x1                                                  // 00000005A910: 00000001
	.long 0x7                                                  // 00000005A914: 00000007
	.long 0xe                                                  // 00000005A918: 0000000E
	.long 0x11                                                 // 00000005A91C: 00000011
	.long 0x15                                                 // 00000005A920: 00000015
	.long 0                                                    // 00000005A924: 00000000
	.long 0x19                                                 // 00000005A928: 00000019
	.ascii " "                                                 // 00000005A92C: 20
	.byte 0                                                    // 00000005A92D: 00
	.short 0                                                   // 00000005A92E: 0000
	.ascii "&"                                                 // 00000005A930: 26
	.byte 0                                                    // 00000005A931: 00
	.short 0                                                   // 00000005A932: 0000
	.ascii "'"                                                 // 00000005A934: 27
	.byte 0                                                    // 00000005A935: 00
	.short 0                                                   // 00000005A936: 0000
	.ascii "+"                                                 // 00000005A938: 2B
	.byte 0                                                    // 00000005A939: 00
	.short 0                                                   // 00000005A93A: 0000
	.ascii "."                                                 // 00000005A93C: 2E
	.byte 0                                                    // 00000005A93D: 00
	.short 0                                                   // 00000005A93E: 0000
	.ascii "3"                                                 // 00000005A940: 33
	.byte 0                                                    // 00000005A941: 00
	.short 0                                                   // 00000005A942: 0000
	.ascii "5"                                                 // 00000005A944: 35
	.byte 0                                                    // 00000005A945: 00
	.short 0                                                   // 00000005A946: 0000
	.ascii "8"                                                 // 00000005A948: 38
	.byte 0                                                    // 00000005A949: 00
	.short 0                                                   // 00000005A94A: 0000
	.ascii "="                                                 // 00000005A94C: 3D
	.byte 0                                                    // 00000005A94D: 00
	.short 0                                                   // 00000005A94E: 0000
	.ascii "?"                                                 // 00000005A950: 3F
	.byte 0                                                    // 00000005A951: 00
	.short 0                                                   // 00000005A952: 0000
	.ascii "C"                                                 // 00000005A954: 43
	.byte 0                                                    // 00000005A955: 00
	.short 0                                                   // 00000005A956: 0000
	.ascii "H"                                                 // 00000005A958: 48
	.byte 0                                                    // 00000005A959: 00
	.short 0                                                   // 00000005A95A: 0000
	.ascii "N"                                                 // 00000005A95C: 4E
	.byte 0                                                    // 00000005A95D: 00
	.short 0                                                   // 00000005A95E: 0000
	.ascii "R"                                                 // 00000005A960: 52
	.byte 0                                                    // 00000005A961: 00
	.short 0                                                   // 00000005A962: 0000
	.long 0                                                    // 00000005A964: 00000000
	.ascii "W"                                                 // 00000005A968: 57
	.byte 0                                                    // 00000005A969: 00
	.short 0                                                   // 00000005A96A: 0000
	.ascii "["                                                 // 00000005A96C: 5B
	.byte 0                                                    // 00000005A96D: 00
	.short 0                                                   // 00000005A96E: 0000
	.ascii "`"                                                 // 00000005A970: 60
	.byte 0                                                    // 00000005A971: 00
	.short 0                                                   // 00000005A972: 0000
	.ascii "a"                                                 // 00000005A974: 61
	.byte 0                                                    // 00000005A975: 00
	.short 0                                                   // 00000005A976: 0000
	.ascii "e"                                                 // 00000005A978: 65
	.byte 0                                                    // 00000005A979: 00
	.short 0                                                   // 00000005A97A: 0000
	.long 0                                                    // 00000005A97C: 00000000
	.ascii "f"                                                 // 00000005A980: 66
	.byte 0                                                    // 00000005A981: 00
	.short 0                                                   // 00000005A982: 0000
	.ascii "j"                                                 // 00000005A984: 6A
	.byte 0                                                    // 00000005A985: 00
	.short 0                                                   // 00000005A986: 0000
	.ascii "n"                                                 // 00000005A988: 6E
	.byte 0                                                    // 00000005A989: 00
	.short 0                                                   // 00000005A98A: 0000
	.ascii "s"                                                 // 00000005A98C: 73
	.byte 0                                                    // 00000005A98D: 00
	.short 0                                                   // 00000005A98E: 0000
	.ascii "w"                                                 // 00000005A990: 77
	.byte 0                                                    // 00000005A991: 00
	.short 0                                                   // 00000005A992: 0000
	.ascii "}"                                                 // 00000005A994: 7D
	.byte 0                                                    // 00000005A995: 00
	.short 0                                                   // 00000005A996: 0000
	.long 0x84                                                 // 00000005A998: 00000084
	.long 0x89                                                 // 00000005A99C: 00000089
	.long 0                                                    // 00000005A9A0: 00000000
	.long 0x8c                                                 // 00000005A9A4: 0000008C
	.long 0x93                                                 // 00000005A9A8: 00000093
	.long 0x98                                                 // 00000005A9AC: 00000098
	.long 0xa0                                                 // 00000005A9B0: 000000A0
	.long 0xa3                                                 // 00000005A9B4: 000000A3
	.long 0xa6                                                 // 00000005A9B8: 000000A6
	.long 0xac                                                 // 00000005A9BC: 000000AC
	.long 0xaf                                                 // 00000005A9C0: 000000AF
	.long 0xb5                                                 // 00000005A9C4: 000000B5
	.long 0xba                                                 // 00000005A9C8: 000000BA
	.long 0xc1                                                 // 00000005A9CC: 000000C1
	.long 0xc4                                                 // 00000005A9D0: 000000C4
	.long 0xc9                                                 // 00000005A9D4: 000000C9
	.long 0xcd                                                 // 00000005A9D8: 000000CD
	.long 0xd0                                                 // 00000005A9DC: 000000D0
	.long 0xd4                                                 // 00000005A9E0: 000000D4
	.long 0xd6                                                 // 00000005A9E4: 000000D6
	.long 0xda                                                 // 00000005A9E8: 000000DA
	.long 0xdc                                                 // 00000005A9EC: 000000DC
	.long 0xdf                                                 // 00000005A9F0: 000000DF
	.long 0xe3                                                 // 00000005A9F4: 000000E3
	.long 0xe8                                                 // 00000005A9F8: 000000E8
	.long 0xf0                                                 // 00000005A9FC: 000000F0
	.long 0xf5                                                 // 00000005AA00: 000000F5
	.long 0xfb                                                 // 00000005AA04: 000000FB
	.long 0xfd                                                 // 00000005AA08: 000000FD
	.long 0x100                                                // 00000005AA0C: 00000100
	.long 0x105                                                // 00000005AA10: 00000105
	.ascii "	"                                                 // 00000005AA14: 09
	.byte 0x1                                                  // 00000005AA15: 01
	.short 0                                                   // 00000005AA16: 0000
	.long 0x10e                                                // 00000005AA18: 0000010E
	.long 0x113                                                // 00000005AA1C: 00000113
	.long 0x115                                                // 00000005AA20: 00000115
	.long 0x118                                                // 00000005AA24: 00000118
	.long 0x11b                                                // 00000005AA28: 0000011B
	.long 0x11f                                                // 00000005AA2C: 0000011F
	.ascii "#"                                                 // 00000005AA30: 23
	.byte 0x1                                                  // 00000005AA31: 01
	.short 0                                                   // 00000005AA32: 0000
	.ascii "'"                                                 // 00000005AA34: 27
	.byte 0x1                                                  // 00000005AA35: 01
	.short 0                                                   // 00000005AA36: 0000
	.ascii "."                                                 // 00000005AA38: 2E
	.byte 0x1                                                  // 00000005AA39: 01
	.short 0                                                   // 00000005AA3A: 0000
	.ascii "0"                                                 // 00000005AA3C: 30
	.byte 0x1                                                  // 00000005AA3D: 01
	.short 0                                                   // 00000005AA3E: 0000
	.ascii "1"                                                 // 00000005AA40: 31
	.byte 0x1                                                  // 00000005AA41: 01
	.short 0                                                   // 00000005AA42: 0000
	.ascii "5"                                                 // 00000005AA44: 35
	.byte 0x1                                                  // 00000005AA45: 01
	.short 0                                                   // 00000005AA46: 0000
	.ascii "9"                                                 // 00000005AA48: 39
	.byte 0x1                                                  // 00000005AA49: 01
	.short 0                                                   // 00000005AA4A: 0000
	.ascii "<"                                                 // 00000005AA4C: 3C
	.byte 0x1                                                  // 00000005AA4D: 01
	.short 0                                                   // 00000005AA4E: 0000
	.ascii "?"                                                 // 00000005AA50: 3F
	.byte 0x1                                                  // 00000005AA51: 01
	.short 0                                                   // 00000005AA52: 0000
	.ascii "E"                                                 // 00000005AA54: 45
	.byte 0x1                                                  // 00000005AA55: 01
	.short 0                                                   // 00000005AA56: 0000
	.ascii "I"                                                 // 00000005AA58: 49
	.byte 0x1                                                  // 00000005AA59: 01
	.short 0                                                   // 00000005AA5A: 0000
	.ascii "J"                                                 // 00000005AA5C: 4A
	.byte 0x1                                                  // 00000005AA5D: 01
	.short 0                                                   // 00000005AA5E: 0000
	.ascii "O"                                                 // 00000005AA60: 4F
	.byte 0x1                                                  // 00000005AA61: 01
	.short 0                                                   // 00000005AA62: 0000
	.ascii "U"                                                 // 00000005AA64: 55
	.byte 0x1                                                  // 00000005AA65: 01
	.short 0                                                   // 00000005AA66: 0000
	.ascii "W"                                                 // 00000005AA68: 57
	.byte 0x1                                                  // 00000005AA69: 01
	.short 0                                                   // 00000005AA6A: 0000
	.ascii "\\"                                                // 00000005AA6C: 5C
	.byte 0x1                                                  // 00000005AA6D: 01
	.short 0                                                   // 00000005AA6E: 0000
	.ascii "a"                                                 // 00000005AA70: 61
	.byte 0x1                                                  // 00000005AA71: 01
	.short 0                                                   // 00000005AA72: 0000
	.ascii "g"                                                 // 00000005AA74: 67
	.byte 0x1                                                  // 00000005AA75: 01
	.short 0                                                   // 00000005AA76: 0000
	.ascii "j"                                                 // 00000005AA78: 6A
	.byte 0x1                                                  // 00000005AA79: 01
	.short 0                                                   // 00000005AA7A: 0000
	.ascii "p"                                                 // 00000005AA7C: 70
	.byte 0x1                                                  // 00000005AA7D: 01
	.short 0                                                   // 00000005AA7E: 0000
	.ascii "s"                                                 // 00000005AA80: 73
	.byte 0x1                                                  // 00000005AA81: 01
	.short 0                                                   // 00000005AA82: 0000
	.ascii "t"                                                 // 00000005AA84: 74
	.byte 0x1                                                  // 00000005AA85: 01
	.short 0                                                   // 00000005AA86: 0000
	.ascii "z"                                                 // 00000005AA88: 7A
	.byte 0x1                                                  // 00000005AA89: 01
	.short 0                                                   // 00000005AA8A: 0000
	.long 0x17f                                                // 00000005AA8C: 0000017F
	.long 0x184                                                // 00000005AA90: 00000184
	.long 0x186                                                // 00000005AA94: 00000186
	.long 0x18a                                                // 00000005AA98: 0000018A
	.long 0x18d                                                // 00000005AA9C: 0000018D
	.long 0x191                                                // 00000005AAA0: 00000191
	.long 0x195                                                // 00000005AAA4: 00000195
	.long 0x197                                                // 00000005AAA8: 00000197
	.long 0                                                    // 00000005AAAC: 00000000
	.long 0x198                                                // 00000005AAB0: 00000198
	.long 0                                                    // 00000005AAB4: 00000000
	.long 0x19d                                                // 00000005AAB8: 0000019D
	.long 0x1a0                                                // 00000005AABC: 000001A0
	.long 0x1a1                                                // 00000005AAC0: 000001A1
	.long 0x1a4                                                // 00000005AAC4: 000001A4
	.long 0x1ae                                                // 00000005AAC8: 000001AE
	.long 0x1b3                                                // 00000005AACC: 000001B3
	.long 0x1b7                                                // 00000005AAD0: 000001B7
	.long 0x1bd                                                // 00000005AAD4: 000001BD
	.long 0x1c0                                                // 00000005AAD8: 000001C0
	.long 0x1c4                                                // 00000005AADC: 000001C4
	.long 0x1c7                                                // 00000005AAE0: 000001C7
	.long 0x1cc                                                // 00000005AAE4: 000001CC
	.long 0x1d0                                                // 00000005AAE8: 000001D0
	.long 0x1d1                                                // 00000005AAEC: 000001D1
	.long 0x1d7                                                // 00000005AAF0: 000001D7
	.long 0x1da                                                // 00000005AAF4: 000001DA
	.long 0x1dd                                                // 00000005AAF8: 000001DD
	.long 0x1e0                                                // 00000005AAFC: 000001E0
	.long 0x1e4                                                // 00000005AB00: 000001E4
	.long 0x1ea                                                // 00000005AB04: 000001EA
	.long 0x1ec                                                // 00000005AB08: 000001EC
	.long 0x1ee                                                // 00000005AB0C: 000001EE
	.long 0x1f1                                                // 00000005AB10: 000001F1
	.long 0x1f3                                                // 00000005AB14: 000001F3
	.long 0x1f8                                                // 00000005AB18: 000001F8
	.long 0x1fe                                                // 00000005AB1C: 000001FE
	.long 0x203                                                // 00000005AB20: 00000203
	.ascii "	"                                                 // 00000005AB24: 09
	.byte 0x2                                                  // 00000005AB25: 02
	.short 0                                                   // 00000005AB26: 0000
	.long 0x20e                                                // 00000005AB28: 0000020E
	.long 0x211                                                // 00000005AB2C: 00000211
	.long 0x21a                                                // 00000005AB30: 0000021A
	.long 0x21d                                                // 00000005AB34: 0000021D
	.ascii " "                                                 // 00000005AB38: 20
	.byte 0x2                                                  // 00000005AB39: 02
	.short 0                                                   // 00000005AB3A: 0000
	.ascii "$"                                                 // 00000005AB3C: 24
	.byte 0x2                                                  // 00000005AB3D: 02
	.short 0                                                   // 00000005AB3E: 0000
	.ascii "+"                                                 // 00000005AB40: 2B
	.byte 0x2                                                  // 00000005AB41: 02
	.short 0                                                   // 00000005AB42: 0000
	.ascii "0"                                                 // 00000005AB44: 30
	.byte 0x2                                                  // 00000005AB45: 02
	.short 0                                                   // 00000005AB46: 0000
	.ascii "4"                                                 // 00000005AB48: 34
	.byte 0x2                                                  // 00000005AB49: 02
	.short 0                                                   // 00000005AB4A: 0000
	.ascii "="                                                 // 00000005AB4C: 3D
	.byte 0x2                                                  // 00000005AB4D: 02
	.short 0                                                   // 00000005AB4E: 0000
	.ascii "A"                                                 // 00000005AB50: 41
	.byte 0x2                                                  // 00000005AB51: 02
	.short 0                                                   // 00000005AB52: 0000
	.ascii "G"                                                 // 00000005AB54: 47
	.byte 0x2                                                  // 00000005AB55: 02
	.short 0                                                   // 00000005AB56: 0000
	.long 0                                                    // 00000005AB58: 00000000
	.ascii "L"                                                 // 00000005AB5C: 4C
	.byte 0x2                                                  // 00000005AB5D: 02
	.short 0                                                   // 00000005AB5E: 0000
	.ascii "4"                                                 // 00000005AB60: 34
	.byte 0x8                                                  // 00000005AB61: 08
	.short 0xda89                                              // 00000005AB62: DA89
	.long 0x44a8cb08                                           // 00000005AB64: 44A8CB08
	.long 0x8dc93090                                           // 00000005AB68: 8DC93090
	.long 0x24f985f0                                           // 00000005AB6C: 24F985F0
	.long 0xe2add3dc                                           // 00000005AB70: E2ADD3DC
	.long 0x44cc2ed5                                           // 00000005AB74: 44CC2ED5
	.ascii "<,r"                                               // 00000005AB78: 722C3C
	.byte 0x17                                                 // 00000005AB7B: 17
	.ascii "L"                                                 // 00000005AB7C: 4C
	.byte 0xc9                                                 // 00000005AB7D: C9
	.short 0x21ae                                              // 00000005AB7E: 21AE
	.long 0xb828afd4                                           // 00000005AB80: B828AFD4
	.long 0x74ddf2cc                                           // 00000005AB84: 74DDF2CC
	.ascii "8h"                                                // 00000005AB88: 6838
	.short 0xf3ba                                              // 00000005AB8A: F3BA
	.ascii "0"                                                 // 00000005AB8C: 30
	.byte 0x80                                                 // 00000005AB8D: 80
	.short 0xbafa                                              // 00000005AB8E: BAFA
	.long 0x9ab876c1                                           // 00000005AB90: 9AB876C1
	.long 0xecbd53ba                                           // 00000005AB94: ECBD53BA
	.long 0x7a07000e                                           // 00000005AB98: 7A07000E
	.ascii "+"                                                 // 00000005AB9C: 2B
	.byte 0xfc                                                 // 00000005AB9D: FC
	.ascii "t"                                                 // 00000005AB9E: 74
	.byte 0x82                                                 // 00000005AB9F: 82
	.long 0xd30b88a2                                           // 00000005ABA0: D30B88A2
	.long 0x838b3f92                                           // 00000005ABA4: 838B3F92
	.ascii "\""                                                // 00000005ABA8: 22
	.byte 0xa1                                                 // 00000005ABA9: A1
	.ascii "v"                                                 // 00000005ABAA: 76
	.byte 0x87                                                 // 00000005ABAB: 87
	.long 0x24aa19df                                           // 00000005ABAC: 24AA19DF
	.long 0xc8bccf04                                           // 00000005ABB0: C8BCCF04
	.ascii "x="                                                // 00000005ABB4: 3D78
	.short 0x8f0d                                              // 00000005ABB6: 8F0D
	.ascii "<"                                                 // 00000005ABB8: 3C
	.byte 0x9d                                                 // 00000005ABB9: 9D
	.short 0x2aa8                                              // 00000005ABBA: 2AA8
	.long 0x614dd7f5                                           // 00000005ABBC: 614DD7F5
	.long 0xdc5c30e6                                           // 00000005ABC0: DC5C30E6
	.long 0x5f300a86                                           // 00000005ABC4: 5F300A86
	.long 0xefa08e6                                            // 00000005ABC8: 0EFA08E6
	.ascii "v"                                                 // 00000005ABCC: 76
	.byte 0xd4                                                 // 00000005ABCD: D4
	.ascii "w"                                                 // 00000005ABCE: 77
	.byte 0xab                                                 // 00000005ABCF: AB
	.long 0x5467bd8a                                           // 00000005ABD0: 5467BD8A
	.long 0xa16c6412                                           // 00000005ABD4: A16C6412
	.ascii "o<"                                                // 00000005ABD8: 3C6F
	.short 0x7fbc                                              // 00000005ABDA: 7FBC
	.long 0x4868fdb6                                           // 00000005ABDC: 4868FDB6
	.ascii ">"                                                 // 00000005ABE0: 3E
	.byte 0xa4                                                 // 00000005ABE1: A4
	.short 0x25d9                                              // 00000005ABE2: 25D9
	.ascii "R"                                                 // 00000005ABE4: 52
	.byte 0xac                                                 // 00000005ABE5: AC
	.short 0xb504                                              // 00000005ABE6: B504
	.ascii "j"                                                 // 00000005ABE8: 6A
	.byte 0xab                                                 // 00000005ABE9: AB
	.ascii "g"                                                 // 00000005ABEA: 67
	.byte 0x1e                                                 // 00000005ABEB: 1E
	.ascii "Vhl"                                               // 00000005ABEC: 6C6856
	.byte 0                                                    // 00000005ABEF: 00
	.long 0xe0c502ff                                           // 00000005ABF0: E0C502FF
	.long 0x3793e01d                                           // 00000005ABF4: 3793E01D
	.ascii "L"                                                 // 00000005ABF8: 4C
	.byte 0xe3                                                 // 00000005ABF9: E3
	.short 0x3b82                                              // 00000005ABFA: 3B82
	.long 0xcdd4a6f8                                           // 00000005ABFC: CDD4A6F8
	.long 0x5fe13598                                           // 00000005AC00: 5FE13598
	.long 0x53a3e281                                           // 00000005AC04: 53A3E281
	.long 0x5d18a78e                                           // 00000005AC08: 5D18A78E
	.ascii "BE"                                                // 00000005AC0C: 4542
	.short 0x61f2                                              // 00000005AC0E: 61F2
	.ascii "["                                                 // 00000005AC10: 5B
	.byte 0xd3                                                 // 00000005AC11: D3
	.short 0x80aa                                              // 00000005AC12: 80AA
	.long 0xcdc4a1c2                                           // 00000005AC14: CDC4A1C2
	.long 0x71fcf296                                           // 00000005AC18: 71FCF296
	.ascii "JC"                                                // 00000005AC1C: 434A
	.short 0xa4f0                                              // 00000005AC1E: A4F0
	.long 0xc1e963ca                                           // 00000005AC20: C1E963CA
	.long 0x575fdf8b                                           // 00000005AC24: 575FDF8B
	.ascii "P"                                                 // 00000005AC28: 50
	.byte 0xd7                                                 // 00000005AC29: D7
	.short 0x3cf0                                              // 00000005AC2A: 3CF0
	.ascii "]"                                                 // 00000005AC2C: 5D
	.byte 0xbd                                                 // 00000005AC2D: BD
	.short 0xed84                                              // 00000005AC2E: ED84
	.long 0xe30f86c0                                           // 00000005AC30: E30F86C0
	.ascii "("                                                 // 00000005AC34: 28
	.byte 0x6                                                  // 00000005AC35: 06
	.short 0x730f                                              // 00000005AC36: 730F
	.ascii "1"                                                 // 00000005AC38: 31
	.byte 0x95                                                 // 00000005AC39: 95
	.short 0xd2cf                                              // 00000005AC3A: D2CF
	.ascii "F_"                                                // 00000005AC3C: 5F46
	.short 0xfc19                                              // 00000005AC3E: FC19
	.long 0x793ed92                                            // 00000005AC40: 0793ED92
	.ascii "&)`"                                               // 00000005AC44: 602926
	.byte 0x10                                                 // 00000005AC47: 10
	.ascii "*w"                                                // 00000005AC48: 772A
	.short 0x8f01                                              // 00000005AC4A: 8F01
	.long 0xa68ff483                                           // 00000005AC4C: A68FF483
	.ascii "vY"                                                // 00000005AC50: 5976
	.short 0xa07                                               // 00000005AC52: 0A07
	.long 0xc1f9f6ab                                           // 00000005AC54: C1F9F6AB
	.long 0x1edeefc                                            // 00000005AC58: 01EDEEFC
	.long 0x6216e4bc                                           // 00000005AC5C: 6216E4BC
	.long 0x4d1207fc                                           // 00000005AC60: 4D1207FC
	.ascii "e"                                                 // 00000005AC64: 65
	.byte 0x8f                                                 // 00000005AC65: 8F
	.short 0x8c96                                              // 00000005AC66: 8C96
	.long 0x761c9cec                                           // 00000005AC68: 761C9CEC
	.long 0x9cec8ae0                                           // 00000005AC6C: 9CEC8AE0
	.ascii "X"                                                 // 00000005AC70: 58
	.byte 0x90                                                 // 00000005AC71: 90
	.short 0xb8de                                              // 00000005AC72: B8DE
	.long 0x73b6c5e0                                           // 00000005AC74: 73B6C5E0
	.long 0xb5454c91                                           // 00000005AC78: B5454C91
	.long 0x73f73fee                                           // 00000005AC7C: 73F73FEE
	.long 0xc141a4b2                                           // 00000005AC80: C141A4B2
	.long 0x2ffddfea                                           // 00000005AC84: 2FFDDFEA
	.long 0x9d192e1a                                           // 00000005AC88: 9D192E1A
	.long 0x12c20ac2                                           // 00000005AC8C: 12C20AC2
	.long 0x3e501bcb                                           // 00000005AC90: 3E501BCB
	.long 0xefb9eca                                            // 00000005AC94: 0EFB9ECA
	.long 0x63e5a4ea                                           // 00000005AC98: 63E5A4EA
	.ascii "r?"                                                // 00000005AC9C: 3F72
	.short 0xd9cd                                              // 00000005AC9E: D9CD
	.long 0x4af09fdf                                           // 00000005ACA0: 4AF09FDF
	.long 0xafe9d700                                           // 00000005ACA4: AFE9D700
	.long 0xc8ab784                                            // 00000005ACA8: 0C8AB784
	.long 0xe49cedc0                                           // 00000005ACAC: E49CEDC0
	.long 0x28c110bc                                           // 00000005ACB0: 28C110BC
	.ascii "U"                                                 // 00000005ACB4: 55
	.byte 0xc4                                                 // 00000005ACB5: C4
	.short 0xd0e6                                              // 00000005ACB6: D0E6
	.ascii "r"                                                 // 00000005ACB8: 72
	.byte 0xdb                                                 // 00000005ACB9: DB
	.ascii "9"                                                 // 00000005ACBA: 39
	.byte 0xf2                                                 // 00000005ACBB: F2
	.long 0x54391da2                                           // 00000005ACBC: 54391DA2
	.long 0xa1fcfea2                                           // 00000005ACC0: A1FCFEA2
	.long 0x1d1045cb                                           // 00000005ACC4: 1D1045CB
	.long 0x804e729e                                           // 00000005ACC8: 804E729E
	.long 0xb8727992                                           // 00000005ACCC: B8727992
	.ascii "2"                                                 // 00000005ACD0: 32
	.byte 0x81                                                 // 00000005ACD1: 81
	.ascii "_6"                                                // 00000005ACD2: 365F
	.long 0x31a679d6                                           // 00000005ACD4: 31A679D6
	.long 0x70cc94af                                           // 00000005ACD8: 70CC94AF
	.ascii "aO"                                                // 00000005ACDC: 4F61
	.short 0x8e88                                              // 00000005ACDE: 8E88
	.long 0x1f579f94                                           // 00000005ACE0: 1F579F94
	.long 0x55885e08                                           // 00000005ACE4: 55885E08
	.ascii "P"                                                 // 00000005ACE8: 50
	.byte 0x8f                                                 // 00000005ACE9: 8F
	.short 0x40b4                                              // 00000005ACEA: 40B4
	.long 0x65e4dbad                                           // 00000005ACEC: 65E4DBAD
	.long 0x9feaf9df                                           // 00000005ACF0: 9FEAF9DF
	.long 0x8469341c                                           // 00000005ACF4: 8469341C
	.long 0x7ddd4690                                           // 00000005ACF8: 7DDD4690
	.long 0x7223eed4                                           // 00000005ACFC: 7223EED4
	.ascii "A,"                                                // 00000005AD00: 2C41
	.short 0xd19                                               // 00000005AD02: 0D19
	.ascii "$"                                                 // 00000005AD04: 24
	.byte 0x1f                                                 // 00000005AD05: 1F
	.short 0x6bcb                                              // 00000005AD06: 6BCB
	.long 0xcc618690                                           // 00000005AD08: CC618690
	.long 0x9504fe98                                           // 00000005AD0C: 9504FE98
	.long 0x96236ff9                                           // 00000005AD10: 96236FF9
	.long 0x5287f6fa                                           // 00000005AD14: 5287F6FA
	.long 0xc608b6e2                                           // 00000005AD18: C608B6E2
	.long 0x9f797012                                           // 00000005AD1C: 9F797012
	.long 0xa9d50ff2                                           // 00000005AD20: A9D50FF2
	.ascii "k"                                                 // 00000005AD24: 6B
	.byte 0xaa                                                 // 00000005AD25: AA
	.short 0xc3da                                              // 00000005AD26: C3DA
	.long 0x4c9dc6be                                           // 00000005AD28: 4C9DC6BE
	.long 0x6936441e                                           // 00000005AD2C: 6936441E
	.long 0x689f039e                                           // 00000005AD30: 689F039E
	.long 0x644232d7                                           // 00000005AD34: 644232D7
	.long 0xa4e52ba0                                           // 00000005AD38: A4E52BA0
	.long 0x5db2a18                                            // 00000005AD3C: 05DB2A18
	.long 0x29f8c3e8                                           // 00000005AD40: 29F8C3E8
	.ascii "d&T("                                              // 00000005AD44: 28542664
	.long 0x308e7d8                                            // 00000005AD48: 0308E7D8
	.ascii "q"                                                 // 00000005AD4C: 71
	.byte 0xd0                                                 // 00000005AD4D: D0
	.short 0x7485                                              // 00000005AD4E: 7485
	.long 0x34d432c4                                           // 00000005AD50: 34D432C4
	.ascii "P"                                                 // 00000005AD54: 50
	.byte 0xea                                                 // 00000005AD55: EA
	.short 0xb38d                                              // 00000005AD56: B38D
	.ascii "0"                                                 // 00000005AD58: 30
	.byte 0x9a                                                 // 00000005AD59: 9A
	.short 0x1684                                              // 00000005AD5A: 1684
	.long 0xa4b65dfc                                           // 00000005AD5C: A4B65DFC
	.long 0x70b4fabc                                           // 00000005AD60: 70B4FABC
	.long 0xbb2853a0                                           // 00000005AD64: BB2853A0
	.long 0x18e2d211                                           // 00000005AD68: 18E2D211
	.long 0x937d95fe                                           // 00000005AD6C: 937D95FE
	.long 0x102bca82                                           // 00000005AD70: 102BCA82
	.long 0xdb0bb902                                           // 00000005AD74: DB0BB902
	.long 0x51a561fa                                           // 00000005AD78: 51A561FA
	.long 0x82f4deef                                           // 00000005AD7C: 82F4DEEF
	.long 0xd64e20ae                                           // 00000005AD80: D64E20AE
	.long 0x18aee6fa                                           // 00000005AD84: 18AEE6FA
	.long 0x683b55c7                                           // 00000005AD88: 683B55C7
	.ascii "${!"                                               // 00000005AD8C: 217B24
	.byte 0xaa                                                 // 00000005AD8F: AA
	.long 0xc415de90                                           // 00000005AD90: C415DE90
	.ascii "ps<"                                               // 00000005AD94: 3C7370
	.byte 0xa9                                                 // 00000005AD97: A9
	.long 0x1e0d6184                                           // 00000005AD98: 1E0D6184
	.ascii "T"                                                 // 00000005AD9C: 54
	.byte 0xbc                                                 // 00000005AD9D: BC
	.short 0x71a2                                              // 00000005AD9E: 71A2
	.long 0x18e67bcc                                           // 00000005ADA0: 18E67BCC
	.long 0x545d96fd                                           // 00000005ADA4: 545D96FD
	.long 0x6233bc0e                                           // 00000005ADA8: 6233BC0E
	.long 0x5a1c49b2                                           // 00000005ADAC: 5A1C49B2
	.ascii "F$"                                                // 00000005ADB0: 2446
	.short 0x70fe                                              // 00000005ADB2: 70FE
	.long 0xc0cd08a                                            // 00000005ADB4: 0C0CD08A
	.ascii "o"                                                 // 00000005ADB8: 6F
	.byte 0x1a                                                 // 00000005ADB9: 1A
	.short 0xd5d0                                              // 00000005ADBA: D5D0
	.long 0x53c37a02                                           // 00000005ADBC: 53C37A02
	.long 0xb74c23b6                                           // 00000005ADC0: B74C23B6
	.ascii "R&d"                                               // 00000005ADC4: 642652
	.byte 0xb0                                                 // 00000005ADC7: B0
	.long 0xeac15eca                                           // 00000005ADC8: EAC15ECA
	.ascii "B1"                                                // 00000005ADCC: 3142
	.short 0xcaf1                                              // 00000005ADCE: CAF1
	.long 0xf1e01cd2                                           // 00000005ADD0: F1E01CD2
	.ascii "f"                                                 // 00000005ADD4: 66
	.byte 0xd1                                                 // 00000005ADD5: D1
	.short 0x6b8d                                              // 00000005ADD6: 6B8D
	.ascii "s"                                                 // 00000005ADD8: 73
	.byte 0xd8                                                 // 00000005ADD9: D8
	.ascii "Cw"                                                // 00000005ADDA: 7743
	.long 0xa3cbb100                                           // 00000005ADDC: A3CBB100
	.ascii "@"                                                 // 00000005ADE0: 40
	.byte 0xaf                                                 // 00000005ADE1: AF
	.short 0x4ad8                                              // 00000005ADE2: 4AD8
	.long 0x428bf1d                                            // 00000005ADE4: 0428BF1D
	.long 0xe0a679b8                                           // 00000005ADE8: E0A679B8
	.long 0xe40caa0c                                           // 00000005ADEC: E40CAA0C
	.ascii "u"                                                 // 00000005ADF0: 75
	.byte 0x1a                                                 // 00000005ADF1: 1A
	.short 0xdd8                                               // 00000005ADF2: 0DD8
	.ascii "n"                                                 // 00000005ADF4: 6E
	.byte 0xd1                                                 // 00000005ADF5: D1
	.ascii "c"                                                 // 00000005ADF6: 63
	.byte 0x89                                                 // 00000005ADF7: 89
	.long 0xbe96ea9e                                           // 00000005ADF8: BE96EA9E
	.long 0xf59af8ce                                           // 00000005ADFC: F59AF8CE
	.ascii "6"                                                 // 00000005AE00: 36
	.byte 0xfe                                                 // 00000005AE01: FE
	.ascii "^^"                                                // 00000005AE02: 5E5E
	.long 0xf7173bce                                           // 00000005AE04: F7173BCE
	.long 0x16f96803                                           // 00000005AE08: 16F96803
	.ascii ">"                                                 // 00000005AE0C: 3E
	.byte 0xb0                                                 // 00000005AE0D: B0
	.ascii "tWf1"                                              // 00000005AE0E: 31665774
	.short 0x8f9b                                              // 00000005AE12: 8F9B
	.ascii "+"                                                 // 00000005AE14: 2B
	.byte 0xa1                                                 // 00000005AE15: A1
	.ascii "\""                                                // 00000005AE16: 22
	.byte 0xec                                                 // 00000005AE17: EC
	.long 0x5baccf14                                           // 00000005AE18: 5BACCF14
	.long 0x8106b9b4                                           // 00000005AE1C: 8106B9B4
	.long 0x3cbf8814                                           // 00000005AE20: 3CBF8814
	.ascii "$"                                                 // 00000005AE24: 24
	.byte 0x15                                                 // 00000005AE25: 15
	.ascii "c"                                                 // 00000005AE26: 63
	.byte 0xb1                                                 // 00000005AE27: B1
	.long 0x9be2ccb4                                           // 00000005AE28: 9BE2CCB4
	.long 0x2729ed91                                           // 00000005AE2C: 2729ED91
	.long 0x97614fc0                                           // 00000005AE30: 97614FC0
	.ascii "<"                                                 // 00000005AE34: 3C
	.byte 0xf2                                                 // 00000005AE35: F2
	.short 0x5af2                                              // 00000005AE36: 5AF2
	.long 0x5a8e5508                                           // 00000005AE38: 5A8E5508
	.long 0xdbf2391c                                           // 00000005AE3C: DBF2391C
	.ascii "=e"                                                // 00000005AE40: 653D
	.short 0x8d0f                                              // 00000005AE42: 8D0F
	.long 0x49a13c2                                            // 00000005AE44: 049A13C2
	.long 0x27020586                                           // 00000005AE48: 27020586
	.ascii ".Ib"                                               // 00000005AE4C: 62492E
	.byte 0x4                                                  // 00000005AE4F: 04
	.ascii "N)*"                                               // 00000005AE50: 2A294E
	.byte 0xa0                                                 // 00000005AE53: A0
	.ascii "Bw"                                                // 00000005AE54: 7742
	.short 0x9c4                                               // 00000005AE56: 09C4
	.ascii "NBN"                                               // 00000005AE58: 4E424E
	.byte 0xeb                                                 // 00000005AE5B: EB
	.ascii "7"                                                 // 00000005AE5C: 37
	.byte 0xc7                                                 // 00000005AE5D: C7
	.short 0x65a7                                              // 00000005AE5E: 65A7
	.long 0x6efbc8d2                                           // 00000005AE60: 6EFBC8D2
	.ascii "f"                                                 // 00000005AE64: 66
	.byte 0xbb                                                 // 00000005AE65: BB
	.ascii "U"                                                 // 00000005AE66: 55
	.byte 0xe9                                                 // 00000005AE67: E9
	.long 0xaeff17                                             // 00000005AE68: 00AEFF17
	.long 0x2e63e0dc                                           // 00000005AE6C: 2E63E0DC
	.ascii "t?5"                                               // 00000005AE70: 353F74
	.byte 0x1f                                                 // 00000005AE73: 1F
	.ascii "8"                                                 // 00000005AE74: 38
	.byte 0xb5                                                 // 00000005AE75: B5
	.short 0xe5f9                                              // 00000005AE76: E5F9
	.long 0xdb2c72ac                                           // 00000005AE78: DB2C72AC
	.ascii "A)["                                               // 00000005AE7C: 5B2941
	.byte 0xd2                                                 // 00000005AE7F: D2
	.long 0x21d03af0                                           // 00000005AE80: 21D03AF0
	.long 0x96dae1b8                                           // 00000005AE84: 96DAE1B8
	.long 0x3c578a04                                           // 00000005AE88: 3C578A04
	.long 0x6a4a6df1                                           // 00000005AE8C: 6A4A6DF1
	.ascii "NU"                                                // 00000005AE90: 554E
	.short 0x66d4                                              // 00000005AE92: 66D4
	.ascii ".|"                                                // 00000005AE94: 7C2E
	.short 0x94c6                                              // 00000005AE96: 94C6
	.ascii "O"                                                 // 00000005AE98: 4F
	.byte 0x94                                                 // 00000005AE99: 94
	.short 0xc594                                              // 00000005AE9A: C594
	.ascii "\n"                                                // 00000005AE9C: 0A
	.byte 0xe9                                                 // 00000005AE9D: E9
	.short 0xe4aa                                              // 00000005AE9E: E4AA
	.ascii "N"                                                 // 00000005AEA0: 4E
	.byte 0x91                                                 // 00000005AEA1: 91
	.short 0x1ff1                                              // 00000005AEA2: 1FF1
	.long 0x81df068a                                           // 00000005AEA4: 81DF068A
	.ascii "'N"                                                // 00000005AEA8: 4E27
	.short 0x92e7                                              // 00000005AEAA: 92E7
	.long 0x1998c1a0                                           // 00000005AEAC: 1998C1A0
	.ascii ")gCi0"                                             // 00000005AEB0: 69436729 30
	.byte 0xc1                                                 // 00000005AEB5: C1
	.ascii "S"                                                 // 00000005AEB6: 53
	.byte 0x1c                                                 // 00000005AEB7: 1C
	.long 0xf35835d0                                           // 00000005AEB8: F35835D0
	.long 0xeb735e14                                           // 00000005AEBC: EB735E14
	.long 0x8f1a731d                                           // 00000005AEC0: 8F1A731D
	.long 0x4ca623a2                                           // 00000005AEC4: 4CA623A2
	.ascii "c8"                                                // 00000005AEC8: 3863
	.short 0x33f9                                              // 00000005AECA: 33F9
	.ascii "^."                                                // 00000005AECC: 2E5E
	.short 0x2cb8                                              // 00000005AECE: 2CB8
	.long 0x3534f092                                           // 00000005AED0: 3534F092
	.long 0xfc44c6ff                                           // 00000005AED4: FC44C6FF
	.long 0xca3a4f9c                                           // 00000005AED8: CA3A4F9C
	.ascii "H"                                                 // 00000005AEDC: 48
	.byte 0x12                                                 // 00000005AEDD: 12
	.ascii "D"                                                 // 00000005AEDE: 44
	.byte 0x18                                                 // 00000005AEDF: 18
	.long 0xadb163d4                                           // 00000005AEE0: ADB163D4
	.ascii "%3"                                                // 00000005AEE4: 3325
	.short 0x9e98                                              // 00000005AEE6: 9E98
	.ascii "`"                                                 // 00000005AEE8: 60
	.byte 0xe8                                                 // 00000005AEE9: E8
	.short 0x67c9                                              // 00000005AEEA: 67C9
	.long 0xd74ac714                                           // 00000005AEEC: D74AC714
	.long 0x4a5fd588                                           // 00000005AEF0: 4A5FD588
	.long 0x8e34a1a8                                           // 00000005AEF4: 8E34A1A8
	.ascii "y"                                                 // 00000005AEF8: 79
	.byte 0x8b                                                 // 00000005AEF9: 8B
	.short 0xdbf4                                              // 00000005AEFA: DBF4
	.ascii "\n"                                                // 00000005AEFC: 0A
	.byte 0xd7                                                 // 00000005AEFD: D7
	.short 0x69aa                                              // 00000005AEFE: 69AA
	.long 0xdb1a0de2                                           // 00000005AF00: DB1A0DE2
	.long 0x8b3eff16                                           // 00000005AF04: 8B3EFF16
	.long 0x4b14b392                                           // 00000005AF08: 4B14B392
	.long 0x493d79b2                                           // 00000005AF0C: 493D79B2
	.long 0xf8048dde                                           // 00000005AF10: F8048DDE
	.ascii "\""                                                // 00000005AF14: 22
	.byte 0xc2                                                 // 00000005AF15: C2
	.ascii "*-"                                                // 00000005AF16: 2D2A
	.long 0x9e1c608f                                           // 00000005AF18: 9E1C608F
	.long 0xd6902c9e                                           // 00000005AF1C: D6902C9E
	.long 0x94cc8996                                           // 00000005AF20: 94CC8996
	.ascii "j"                                                 // 00000005AF24: 6A
	.byte 0xcc                                                 // 00000005AF25: CC
	.short 0x151b                                              // 00000005AF26: 151B
	.ascii "^"                                                 // 00000005AF28: 5E
	.byte 0x14                                                 // 00000005AF29: 14
	.ascii "Ag"                                                // 00000005AF2A: 6741
	.long 0x2c501ef7                                           // 00000005AF2C: 2C501EF7
	.long 0x373e4fbc                                           // 00000005AF30: 373E4FBC
	.ascii "87"                                                // 00000005AF34: 3738
	.short 0xe50b                                              // 00000005AF36: E50B
	.long 0x84386004                                           // 00000005AF38: 84386004
	.ascii "|hJ"                                               // 00000005AF3C: 4A687C
	.byte 0xe8                                                 // 00000005AF3F: E8
	.ascii "<"                                                 // 00000005AF40: 3C
	.byte 0x6                                                  // 00000005AF41: 06
	.ascii "9P"                                                // 00000005AF42: 5039
	.long 0x6f30541d                                           // 00000005AF44: 6F30541D
	.ascii "|4"                                                // 00000005AF48: 347C
	.short 0x8d12                                              // 00000005AF4A: 8D12
	.long 0xc29bba85                                           // 00000005AF4C: C29BBA85
	.long 0x5274f0fa                                           // 00000005AF50: 5274F0FA
	.long 0x3a0745da                                           // 00000005AF54: 3A0745DA
	.ascii "cO"                                                // 00000005AF58: 4F63
	.short 0xfa83                                              // 00000005AF5A: FA83
	.long 0x5089b4ea                                           // 00000005AF5C: 5089B4EA
	.ascii "v\n"                                               // 00000005AF60: 0A76
	.ascii "CJ"                                                // 00000005AF62: 4A43
	.long 0x56f616a2                                           // 00000005AF64: 56F616A2
	.long 0x4bc181b6                                           // 00000005AF68: 4BC181B6
	.long 0x7346e08b                                           // 00000005AF6C: 7346E08B
	.long 0xe50fd580                                           // 00000005AF70: E50FD580
	.long 0x133de194                                           // 00000005AF74: 133DE194
	.long 0x67d1841c                                           // 00000005AF78: 67D1841C
	.long 0x13adf39d                                           // 00000005AF7C: 13ADF39D
	.long 0x84ad2490                                           // 00000005AF80: 84AD2490
	.long 0x60f863f0                                           // 00000005AF84: 60F863F0
	.ascii "X"                                                 // 00000005AF88: 58
	.byte 0x9a                                                 // 00000005AF89: 9A
	.ascii "N"                                                 // 00000005AF8A: 4E
	.byte 0xa6                                                 // 00000005AF8B: A6
	.long 0x1bac58d4                                           // 00000005AF8C: 1BAC58D4
	.ascii "Y"                                                 // 00000005AF90: 59
	.byte 0xb3                                                 // 00000005AF91: B3
	.ascii "r"                                                 // 00000005AF92: 72
	.byte 0xf1                                                 // 00000005AF93: F1
	.ascii "6"                                                 // 00000005AF94: 36
	.byte 0xb8                                                 // 00000005AF95: B8
	.ascii "`"                                                 // 00000005AF96: 60
	.byte 0x7                                                  // 00000005AF97: 07
	.long 0xd247b5ee                                           // 00000005AF98: D247B5EE
	.ascii "z/"                                                // 00000005AF9C: 2F7A
	.short 0xadb3                                              // 00000005AF9E: ADB3
	.long 0x93e076be                                           // 00000005AFA0: 93E076BE
	.ascii "Wvr"                                               // 00000005AFA4: 727657
	.byte 0x8a                                                 // 00000005AFA7: 8A
	.long 0xd9194ea2                                           // 00000005AFA8: D9194EA2
	.long 0xc6233acb                                           // 00000005AFAC: C6233ACB
	.long 0x1ca05d90                                           // 00000005AFB0: 1CA05D90
	.ascii "(i"                                                // 00000005AFB4: 6928
	.short 0x39cd                                              // 00000005AFB6: 39CD
	.long 0x35af21d1                                           // 00000005AFB8: 35AF21D1
	.ascii "@"                                                 // 00000005AFBC: 40
	.byte 0xb6                                                 // 00000005AFBD: B6
	.short 0x96f8                                              // 00000005AFBE: 96F8
	.long 0xc9fddeb8                                           // 00000005AFC0: C9FDDEB8
	.long 0xbabd961d                                           // 00000005AFC4: BABD961D
	.long 0x4d658202                                           // 00000005AFC8: 4D658202
	.long 0x423c03ae                                           // 00000005AFCC: 423C03AE
	.long 0x3e597bca                                           // 00000005AFD0: 3E597BCA
	.ascii "o"                                                 // 00000005AFD4: 6F
	.byte 0xc3                                                 // 00000005AFD5: C3
	.ascii "4s"                                                // 00000005AFD6: 7334
	.long 0x9dc049e                                            // 00000005AFD8: 09DC049E
	.long 0x161b9096                                           // 00000005AFDC: 161B9096
	.ascii "j "                                                // 00000005AFE0: 206A
	.short 0xbe91                                              // 00000005AFE2: BE91
	.long 0x613fa997                                           // 00000005AFE4: 613FA997
	.long 0xed02c4c4                                           // 00000005AFE8: ED02C4C4
	.ascii "d"                                                 // 00000005AFEC: 64
	.byte 0x88                                                 // 00000005AFED: 88
	.short 0x6fb6                                              // 00000005AFEE: 6FB6
	.long 0x573e2a1c                                           // 00000005AFF0: 573E2A1C
	.ascii "Q-J"                                               // 00000005AFF4: 4A2D51
	.byte 0x9d                                                 // 00000005AFF7: 9D
	.ascii "`"                                                 // 00000005AFF8: 60
	.byte 0x9f                                                 // 00000005AFF9: 9F
	.ascii "DT"                                                // 00000005AFFA: 5444
	.long 0xd99818e8                                           // 00000005AFFC: D99818E8
	.long 0x717be79c                                           // 00000005B000: 717BE79C
	.long 0xa90473d0                                           // 00000005B004: A90473D0
	.ascii "8D"                                                // 00000005B008: 4438
	.short 0x36aa                                              // 00000005B00A: 36AA
	.ascii "P"                                                 // 00000005B00C: 50
	.byte 0x15                                                 // 00000005B00D: 15
	.short 0x7099                                              // 00000005B00E: 7099
	.ascii "-"                                                 // 00000005B010: 2D
	.byte 0xe7                                                 // 00000005B011: E7
	.ascii ",}"                                                // 00000005B012: 7D2C
	.long 0x3b59619e                                           // 00000005B014: 3B59619E
	.long 0xe7d1f5ab                                           // 00000005B018: E7D1F5AB
	.long 0xfcb9f0c7                                           // 00000005B01C: FCB9F0C7
	.long 0x16471c04                                           // 00000005B020: 16471C04
	.ascii "@v"                                                // 00000005B024: 7640
	.short 0x40ab                                              // 00000005B026: 40AB
	.long 0xc4283890                                           // 00000005B028: C4283890
	.ascii "]U7) pc"                                           // 00000005B02C: 2937555D 637020
	.byte 0x91                                                 // 00000005B033: 91
	.ascii "H"                                                 // 00000005B034: 48
	.byte 0xac                                                 // 00000005B035: AC
	.short 0x5588                                              // 00000005B036: 5588
	.long 0x64ef918                                            // 00000005B038: 064EF918
	.long 0x52acab5                                            // 00000005B03C: 052ACAB5
	.long 0xf98b5fae                                           // 00000005B040: F98B5FAE
	.ascii "B"                                                 // 00000005B044: 42
	.byte 0xa7                                                 // 00000005B045: A7
	.short 0x7501                                              // 00000005B046: 7501
	.ascii "o"                                                 // 00000005B048: 6F
	.byte 0xdd                                                 // 00000005B049: DD
	.short 0xb81a                                              // 00000005B04A: B81A
	.ascii ">"                                                 // 00000005B04C: 3E
	.byte 0xea                                                 // 00000005B04D: EA
	.ascii "p"                                                 // 00000005B04E: 70
	.byte 0xe6                                                 // 00000005B04F: E6
	.ascii "&"                                                 // 00000005B050: 26
	.byte 0x1b                                                 // 00000005B051: 1B
	.short 0xb6f7                                              // 00000005B052: B6F7
	.ascii "C"                                                 // 00000005B054: 43
	.byte 0x14                                                 // 00000005B055: 14
	.short 0xdd99                                              // 00000005B056: DD99
	.long 0xf39a0dbc                                           // 00000005B058: F39A0DBC
	.long 0x4b39c7e4                                           // 00000005B05C: 4B39C7E4
	.long 0xd0a6fc00                                           // 00000005B060: D0A6FC00
	.long 0x560670a8                                           // 00000005B064: 560670A8
	.long 0x4aaba4b4                                           // 00000005B068: 4AABA4B4
	.ascii "q"                                                 // 00000005B06C: 71
	.byte 0xb9                                                 // 00000005B06D: B9
	.short 0x4b14                                              // 00000005B06E: 4B14
	.long 0x9b9ad1c                                            // 00000005B070: 09B9AD1C
	.long 0x4fada0f8                                           // 00000005B074: 4FADA0F8
	.ascii "|*"                                                // 00000005B078: 2A7C
	.short 0x29ef                                              // 00000005B07A: 29EF
	.ascii "-"                                                 // 00000005B07C: 2D
	.byte 0xbd                                                 // 00000005B07D: BD
	.short 0x29e3                                              // 00000005B07E: 29E3
	.long 0x5eff61f7                                           // 00000005B080: 5EFF61F7
	.ascii "^f0"                                               // 00000005B084: 30665E
	.byte 0x1                                                  // 00000005B087: 01
	.ascii "VC"                                                // 00000005B088: 4356
	.short 0x3d87                                              // 00000005B08A: 3D87
	.ascii "n"                                                 // 00000005B08C: 6E
	.byte 0x90                                                 // 00000005B08D: 90
	.ascii "Q"                                                 // 00000005B08E: 51
	.byte 0x86                                                 // 00000005B08F: 86
	.long 0x1962529e                                           // 00000005B090: 1962529E
	.ascii "O"                                                 // 00000005B094: 4F
	.byte 0x16                                                 // 00000005B095: 16
	.short 0x9d06                                              // 00000005B096: 9D06
	.long 0xd31ee2e8                                           // 00000005B098: D31EE2E8
	.long 0x7ff8c0c0                                           // 00000005B09C: 7FF8C0C0
	.long 0x8ad1959c                                           // 00000005B0A0: 8AD1959C
	.ascii "(ke"                                               // 00000005B0A4: 656B28
	.byte 0x1b                                                 // 00000005B0A7: 1B
	.ascii " "                                                 // 00000005B0A8: 20
	.byte 0xd9                                                 // 00000005B0A9: D9
	.ascii "m"                                                 // 00000005B0AA: 6D
	.byte 0x18                                                 // 00000005B0AB: 18
	.long 0x116483b9                                           // 00000005B0AC: 116483B9
	.long 0x61164ddc                                           // 00000005B0B0: 61164DDC
	.long 0xd8084c05                                           // 00000005B0B4: D8084C05
	.long 0x86946cfe                                           // 00000005B0B8: 86946CFE
	.long 0xdf29caca                                           // 00000005B0BC: DF29CACA
	.long 0x69e43ae                                            // 00000005B0C0: 069E43AE
	.long 0x739a4886                                           // 00000005B0C4: 739A4886
	.ascii "KJ"                                                // 00000005B0C8: 4A4B
	.short 0xb50e                                              // 00000005B0CA: B50E
	.long 0x9fadf8a2                                           // 00000005B0CC: 9FADF8A2
	.long 0xbbd6a392                                           // 00000005B0D0: BBD6A392
	.long 0x7a411f02                                           // 00000005B0D4: 7A411F02
	.ascii "\n"                                                // 00000005B0D8: 0A
	.ascii "r"                                                 // 00000005B0D9: 72
	.short 0x88b3                                              // 00000005B0DA: 88B3
	.ascii "k"                                                 // 00000005B0DC: 6B
	.byte 0x99                                                 // 00000005B0DD: 99
	.short 0xf4ea                                              // 00000005B0DE: F4EA
	.ascii "<"                                                 // 00000005B0E0: 3C
	.byte 0x11                                                 // 00000005B0E1: 11
	.ascii "\n"                                                // 00000005B0E2: 0A
	.byte 0x9e                                                 // 00000005B0E3: 9E
	.ascii "8@"                                                // 00000005B0E4: 4038
	.short 0xf4f3                                              // 00000005B0E6: F4F3
	.long 0x395746f0                                           // 00000005B0E8: 395746F0
	.long 0xb365effc                                           // 00000005B0EC: B365EFFC
	.long 0xb88b91f4                                           // 00000005B0F0: B88B91F4
	.ascii "5WSBL "                                            // 00000005B0F4: 42535735 204C
	.short 0xad0d                                              // 00000005B0FA: AD0D
	.long 0x54f41aa4                                           // 00000005B0FC: 54F41AA4
	.long 0xafc44d19                                           // 00000005B100: AFC44D19
	.ascii "b"                                                 // 00000005B104: 62
	.byte 0xbc                                                 // 00000005B105: BC
	.ascii "%?"                                                // 00000005B106: 3F25
	.long 0xa4eae68e                                           // 00000005B108: A4EAE68E
	.long 0xf06745e2                                           // 00000005B10C: F06745E2
	.long 0xdeb2a8fa                                           // 00000005B110: DEB2A8FA
	.ascii "z"                                                 // 00000005B114: 7A
	.byte 0xa7                                                 // 00000005B115: A7
	.short 0x13d8                                              // 00000005B116: 13D8
	.long 0x3711aca3                                           // 00000005B118: 3711ACA3
	.long 0x86673096                                           // 00000005B11C: 86673096
	.long 0x296e7cf6                                           // 00000005B120: 296E7CF6
	.long 0xe9ad2103                                           // 00000005B124: E9AD2103
	.long 0x2a6113bd                                           // 00000005B128: 2A6113BD
	.long 0x7d6070a4                                           // 00000005B12C: 7D6070A4
	.ascii "l){0"                                              // 00000005B130: 307B296C
	.long 0xa6b0d80c                                           // 00000005B134: A6B0D80C
	.ascii "T"                                                 // 00000005B138: 54
	.byte 0xbd                                                 // 00000005B139: BD
	.short 0xc0c8                                              // 00000005B13A: C0C8
	.ascii "0"                                                 // 00000005B13C: 30
	.byte 0xe3                                                 // 00000005B13D: E3
	.short 0x25ab                                              // 00000005B13E: 25AB
	.ascii "eNMiR"                                             // 00000005B140: 694D4E65 52
	.byte 0xc5                                                 // 00000005B145: C5
	.ascii "y"                                                 // 00000005B146: 79
	.byte 0xcb                                                 // 00000005B147: CB
	.ascii ".8"                                                // 00000005B148: 382E
	.short 0x51c1                                              // 00000005B14A: 51C1
	.long 0xd2d70012                                           // 00000005B14C: D2D70012
	.ascii "b"                                                 // 00000005B150: 62
	.byte 0x8f                                                 // 00000005B151: 8F
	.short 0x4c08                                              // 00000005B152: 4C08
	.ascii "C"                                                 // 00000005B154: 43
	.byte 0xbd                                                 // 00000005B155: BD
	.ascii "(t\n"                                              // 00000005B156: 0A7428
	.byte 0x91                                                 // 00000005B159: 91
	.short 0xf17f                                              // 00000005B15A: F17F
	.long 0x26a58f8a                                           // 00000005B15C: 26A58F8A
	.long 0x9c67ca1a                                           // 00000005B160: 9C67CA1A
	.ascii "^"                                                 // 00000005B164: 5E
	.byte 0xc5                                                 // 00000005B165: C5
	.short 0x80a6                                              // 00000005B166: 80A6
	.ascii "c"                                                 // 00000005B168: 63
	.byte 0xd8                                                 // 00000005B169: D8
	.ascii "\""                                                // 00000005B16A: 22
	.byte 0xcc                                                 // 00000005B16B: CC
	.long 0x5a829f8                                            // 00000005B16C: 05A829F8
	.long 0x26fb2399                                           // 00000005B170: 26FB2399
	.long 0xb01fecd0                                           // 00000005B174: B01FECD0
	.long 0x5179bfb0                                           // 00000005B178: 5179BFB0
	.long 0x26c12fc0                                           // 00000005B17C: 26C12FC0
	.long 0x12c64301                                           // 00000005B180: 12C64301
	.long 0x71db820e                                           // 00000005B184: 71DB820E
	.long 0xc1da28ae                                           // 00000005B188: C1DA28AE
	.long 0xe97605a3                                           // 00000005B18C: E97605A3
	.long 0x5edf098a                                           // 00000005B190: 5EDF098A
	.long 0xa7981812                                           // 00000005B194: A7981812
	.long 0xc8fdb7da                                           // 00000005B198: C8FDB7DA
	.long 0x61a88093                                           // 00000005B19C: 61A88093
	.ascii "p"                                                 // 00000005B1A0: 70
	.byte 0xad                                                 // 00000005B1A1: AD
	.ascii "s"                                                 // 00000005B1A2: 73
	.byte 0x93                                                 // 00000005B1A3: 93
	.long 0x8fcfb9f8                                           // 00000005B1A4: 8FCFB9F8
	.long 0xb8b4f2fc                                           // 00000005B1A8: B8B4F2FC
	.long 0xea046ff1                                           // 00000005B1AC: EA046FF1
	.long 0x18751208                                           // 00000005B1B0: 18751208
	.ascii "un"                                                // 00000005B1B4: 6E75
	.short 0x1ca0                                              // 00000005B1B6: 1CA0
	.long 0x8ff8a507                                           // 00000005B1B8: 8FF8A507
	.long 0x83128a9c                                           // 00000005B1BC: 83128A9C
	.ascii "<d"                                                // 00000005B1C0: 643C
	.short 0x5e6                                               // 00000005B1C2: 05E6
	.ascii " "                                                 // 00000005B1C4: 20
	.byte 0                                                    // 00000005B1C5: 00
	.ascii "$G"                                                // 00000005B1C6: 4724
	.long 0x4822bdc8                                           // 00000005B1C8: 4822BDC8
	.ascii "1F"                                                // 00000005B1CC: 4631
	.short 0xfef                                               // 00000005B1CE: 0FEF
	.long 0x66a9e3aa                                           // 00000005B1D0: 66A9E3AA
	.ascii ":"                                                 // 00000005B1D4: 3A
	.byte 0x1a                                                 // 00000005B1D5: 1A
	.short 0x49c4                                              // 00000005B1D6: 49C4
	.long 0xe23e38c3                                           // 00000005B1D8: E23E38C3
	.long 0xe7989e9f                                           // 00000005B1DC: E7989E9F
	.long 0x4618bba0                                           // 00000005B1E0: 4618BBA0
	.long 0xadcc5510                                           // 00000005B1E4: ADCC5510
	.ascii "Q"                                                 // 00000005B1E8: 51
	.byte 0x97                                                 // 00000005B1E9: 97
	.short 0x1f13                                              // 00000005B1EA: 1F13
	.long 0xcf8269b4                                           // 00000005B1EC: CF8269B4
	.ascii "LL"                                                // 00000005B1F0: 4C4C
	.short 0x18b3                                              // 00000005B1F2: 18B3
	.ascii "$2"                                                // 00000005B1F4: 3224
	.short 0x55da                                              // 00000005B1F6: 55DA
	.ascii ",'"                                                // 00000005B1F8: 272C
	.short 0xcd02                                              // 00000005B1FA: CD02
	.long 0x13977c98                                           // 00000005B1FC: 13977C98
	.ascii "`r"                                                // 00000005B200: 7260
	.short 0x50c1                                              // 00000005B202: 50C1
	.ascii "\\"                                                // 00000005B204: 5C
	.byte 0xb7                                                 // 00000005B205: B7
	.short 0x73c2                                              // 00000005B206: 73C2
	.long 0x4530c4f0                                           // 00000005B208: 4530C4F0
	.long 0xfa694784                                           // 00000005B20C: FA694784
	.ascii "	(\n"                                              // 00000005B210: 0A2809
	.ascii "W\n"                                               // 00000005B213: 0A57
	.byte 0xe                                                  // 00000005B215: 0E
	.short 0x20e7                                              // 00000005B216: 20E7
	.ascii "&"                                                 // 00000005B218: 26
	.byte 0xae                                                 // 00000005B219: AE
	.ascii "A"                                                 // 00000005B21A: 41
	.byte 0xa0                                                 // 00000005B21B: A0
	.long 0xb5ecf7d2                                           // 00000005B21C: B5ECF7D2
	.ascii "F"                                                 // 00000005B220: 46
	.byte 0xe9                                                 // 00000005B221: E9
	.short 0x88be                                              // 00000005B222: 88BE
	.long 0xe8e7df07                                           // 00000005B224: E8E7DF07
	.long 0x7781b0ae                                           // 00000005B228: 7781B0AE
	.ascii "r&"                                                // 00000005B22C: 2672
	.short 0x1cc7                                              // 00000005B22E: 1CC7
	.long 0xb1fbea02                                           // 00000005B230: B1FBEA02
	.ascii "C"                                                 // 00000005B234: 43
	.byte 0xb6                                                 // 00000005B235: B6
	.short 0x7f13                                              // 00000005B236: 7F13
	.long 0x6ba9a4c4                                           // 00000005B238: 6BA9A4C4
	.long 0x547a0390                                           // 00000005B23C: 547A0390
	.long 0x269f21b0                                           // 00000005B240: 269F21B0
	.ascii "<D"                                                // 00000005B244: 443C
	.short 0xbdac                                              // 00000005B246: BDAC
	.long 0x45c239fc                                           // 00000005B248: 45C239FC
	.long 0xa47beab1                                           // 00000005B24C: A47BEAB1
	.long 0x226b31c                                            // 00000005B250: 0226B31C
	.ascii "l"                                                 // 00000005B254: 6C
	.byte 0                                                    // 00000005B255: 00
	.ascii "-R"                                                // 00000005B256: 522D
	.long 0xa61848e5                                           // 00000005B258: A61848E5
	.long 0x69d7101a                                           // 00000005B25C: 69D7101A
	.long 0x362af8a2                                           // 00000005B260: 362AF8A2
	.long 0xb8c61df2                                           // 00000005B264: B8C61DF2
	.long 0x6cf799e7                                           // 00000005B268: 6CF799E7
	.ascii "J"                                                 // 00000005B26C: 4A
	.byte 0xb4                                                 // 00000005B26D: B4
	.ascii "Ci"                                                // 00000005B26E: 6943
	.long 0x2d1f94a2                                           // 00000005B270: 2D1F94A2
	.long 0x5418c29f                                           // 00000005B274: 5418C29F
	.long 0x2c65b7cc                                           // 00000005B278: 2C65B7CC
	.long 0xf3218edc                                           // 00000005B27C: F3218EDC
	.ascii "t"                                                 // 00000005B280: 74
	.byte 0xbc                                                 // 00000005B281: BC
	.short 0xf8be                                              // 00000005B282: F8BE
	.long 0x73acf494                                           // 00000005B284: 73ACF494
	.long 0xe3bc1ca1                                           // 00000005B288: E3BC1CA1
	.long 0x588f220c                                           // 00000005B28C: 588F220C
	.long 0xf265ecc4                                           // 00000005B290: F265ECC4
	.long 0x57989cc4                                           // 00000005B294: 57989CC4
	.long 0x468fe595                                           // 00000005B298: 468FE595
	.long 0x1a2f080f                                           // 00000005B29C: 1A2F080F
	.ascii "2Rc"                                               // 00000005B2A0: 635232
	.byte 0x83                                                 // 00000005B2A3: 83
	.long 0x7da8bdfe                                           // 00000005B2A4: 7DA8BDFE
	.long 0x39e5db8e                                           // 00000005B2A8: 39E5DB8E
	.ascii "^k"                                                // 00000005B2AC: 6B5E
	.short 0xc09e                                              // 00000005B2AE: C09E
	.ascii ">"                                                 // 00000005B2B0: 3E
	.byte 0x8c                                                 // 00000005B2B1: 8C
	.short 0xcd                                                // 00000005B2B2: 00CD
	.ascii "#"                                                 // 00000005B2B4: 23
	.byte 0x9b                                                 // 00000005B2B5: 9B
	.short 0xdd3                                               // 00000005B2B6: 0DD3
	.ascii "<"                                                 // 00000005B2B8: 3C
	.byte 0xbd                                                 // 00000005B2B9: BD
	.short 0xf494                                              // 00000005B2BA: F494
	.ascii "H"                                                 // 00000005B2BC: 48
	.byte 0xcd                                                 // 00000005B2BD: CD
	.ascii "6Xq"                                               // 00000005B2BE: 715836
	.byte 0x12                                                 // 00000005B2C1: 12
	.short 0x6ab5                                              // 00000005B2C2: 6AB5
	.ascii "`"                                                 // 00000005B2C4: 60
	.byte 0xbf                                                 // 00000005B2C5: BF
	.short 0x93c7                                              // 00000005B2C6: 93C7
	.ascii "$jr"                                               // 00000005B2C8: 726A24
	.byte 0x13                                                 // 00000005B2CB: 13
	.ascii "U"                                                 // 00000005B2CC: 55
	.byte 0xc2                                                 // 00000005B2CD: C2
	.ascii "	|\n"                                              // 00000005B2CE: 0A7C09
	.ascii "+"                                                 // 00000005B2D1: 2B
	.short 0xbfa4                                              // 00000005B2D2: BFA4
	.long 0xa8805a02                                           // 00000005B2D4: A8805A02
	.long 0x80d75cff                                           // 00000005B2D8: 80D75CFF
	.long 0xceb763be                                           // 00000005B2DC: CEB763BE
	.long 0x5a6a186                                            // 00000005B2E0: 05A6A186
	.ascii "~"                                                 // 00000005B2E4: 7E
	.byte 0xd2                                                 // 00000005B2E5: D2
	.ascii "$"                                                 // 00000005B2E6: 24
	.byte 0x9c                                                 // 00000005B2E7: 9C
	.ascii "sOt"                                               // 00000005B2E8: 744F73
	.byte 0xcd                                                 // 00000005B2EB: CD
	.long 0xbf3b4dd0                                           // 00000005B2EC: BF3B4DD0
	.long 0xab2657dc                                           // 00000005B2F0: AB2657DC
	.long 0xebbb7388                                           // 00000005B2F4: EBBB7388
	.long 0x2f3c3988                                           // 00000005B2F8: 2F3C3988
	.long 0xd4e0ea14                                           // 00000005B2FC: D4E0EA14
	.long 0xb04d0ab5                                           // 00000005B300: B04D0AB5
	.long 0xede6e31c                                           // 00000005B304: EDE6E31C
	.ascii "y"                                                 // 00000005B308: 79
	.byte 0                                                    // 00000005B309: 00
	.ascii "P"                                                 // 00000005B30A: 50
	.byte 0x8f                                                 // 00000005B30B: 8F
	.long 0x420172ce                                           // 00000005B30C: 420172CE
	.ascii "?"                                                 // 00000005B310: 3F
	.byte 0x97                                                 // 00000005B311: 97
	.ascii "H"                                                 // 00000005B312: 48
	.byte 0xb7                                                 // 00000005B313: B7
	.long 0x95618fbe                                           // 00000005B314: 95618FBE
	.ascii "Z"                                                 // 00000005B318: 5A
	.byte 0x8                                                  // 00000005B319: 08
	.ascii "8%G"                                               // 00000005B31A: 472538
	.byte 0xdf                                                 // 00000005B31D: DF
	.short 0xa8e7                                              // 00000005B31E: A8E7
	.long 0xfe884c90                                           // 00000005B320: FE884C90
	.long 0x508b69a9                                           // 00000005B324: 508B69A9
	.ascii "x"                                                 // 00000005B328: 78
	.byte 0x16                                                 // 00000005B329: 16
	.short 0xd96                                               // 00000005B32A: 0D96
	.long 0x3b1d9c98                                           // 00000005B32C: 3B1D9C98
	.long 0x1ed514e4                                           // 00000005B330: 1ED514E4
	.ascii " y"                                                // 00000005B334: 7920
	.short 0x1c87                                              // 00000005B336: 1C87
	.long 0xef0c5011                                           // 00000005B338: EF0C5011
	.long 0x3f40eee6                                           // 00000005B33C: 3F40EEE6
	.long 0x6eb981c2                                           // 00000005B340: 6EB981C2
	.long 0xaf5016f2                                           // 00000005B344: AF5016F2
	.ascii ":sR"                                               // 00000005B348: 52733A
	.byte 0xee                                                 // 00000005B34B: EE
	.ascii "2"                                                 // 00000005B34C: 32
	.byte 0xd4                                                 // 00000005B34D: D4
	.ascii "Zm"                                                // 00000005B34E: 6D5A
	.long 0x8108f81f                                           // 00000005B350: 8108F81F
	.ascii ">v).6"                                             // 00000005B354: 2E29763E 36
	.byte 0x1f                                                 // 00000005B359: 1F
	.short 0x38e8                                              // 00000005B35A: 38E8
	.ascii "BG"                                                // 00000005B35C: 4742
	.short 0xa8f7                                              // 00000005B35E: A8F7
	.long 0xc807f4f2                                           // 00000005B360: C807F4F2
	.long 0x122119f7                                           // 00000005B364: 122119F7
	.ascii ","                                                 // 00000005B368: 2C
	.byte 0xc3                                                 // 00000005B369: C3
	.short 0x75f9                                              // 00000005B36A: 75F9
	.ascii "L"                                                 // 00000005B36C: 4C
	.byte 0x3                                                  // 00000005B36D: 03
	.short 0x5e85                                              // 00000005B36E: 5E85
	.long 0x1cfc88d4                                           // 00000005B370: 1CFC88D4
	.long 0x90ab66a0                                           // 00000005B374: 90AB66A0
	.ascii "@"                                                 // 00000005B378: 40
	.byte 0x99                                                 // 00000005B379: 99
	.short 0x9efd                                              // 00000005B37A: 9EFD
	.ascii "y"                                                 // 00000005B37C: 79
	.byte 0x3                                                  // 00000005B37D: 03
	.ascii "b"                                                 // 00000005B37E: 62
	.byte 0xdd                                                 // 00000005B37F: DD
	.long 0x892f48dc                                           // 00000005B380: 892F48DC
	.ascii "<pf"                                               // 00000005B384: 66703C
	.byte 0xf5                                                 // 00000005B387: F5
	.long 0xbd59878c                                           // 00000005B388: BD59878C
	.ascii "L"                                                 // 00000005B38C: 4C
	.byte 0xe                                                  // 00000005B38D: 0E
	.short 0x74b2                                              // 00000005B38E: 74B2
	.long 0x553ae5e1                                           // 00000005B390: 553AE5E1
	.long 0xfa9e8bda                                           // 00000005B394: FA9E8BDA
	.ascii "&"                                                 // 00000005B398: 26
	.byte 0xec                                                 // 00000005B399: EC
	.ascii "ZB"                                                // 00000005B39A: 425A
	.long 0xcc78d81f                                           // 00000005B39C: CC78D81F
	.long 0x75362fd2                                           // 00000005B3A0: 75362FD2
	.ascii "F"                                                 // 00000005B3A4: 46
	.byte 0x84                                                 // 00000005B3A5: 84
	.short 0x4f19                                              // 00000005B3A6: 4F19
	.long 0x45005692                                           // 00000005B3A8: 45005692
	.ascii ":)}"                                               // 00000005B3AC: 7D293A
	.byte 0xc4                                                 // 00000005B3AF: C4
	.ascii "~"                                                 // 00000005B3B0: 7E
	.byte 0x19                                                 // 00000005B3B1: 19
	.ascii "2)"                                                // 00000005B3B2: 2932
	.long 0x5b72828e                                           // 00000005B3B4: 5B72828E
	.ascii "NF"                                                // 00000005B3B8: 464E
	.short 0x5ed9                                              // 00000005B3BA: 5ED9
	.ascii "*"                                                 // 00000005B3BC: 2A
	.byte 0x87                                                 // 00000005B3BD: 87
	.ascii ":"                                                 // 00000005B3BE: 3A
	.byte 0xa4                                                 // 00000005B3BF: A4
	.long 0x6d8f0fab                                           // 00000005B3C0: 6D8F0FAB
	.ascii "<"                                                 // 00000005B3C4: 3C
	.byte 0x94                                                 // 00000005B3C5: 94
	.ascii "yP4"                                               // 00000005B3C6: 345079
	.byte 0xd1                                                 // 00000005B3C9: D1
	.ascii "I"                                                 // 00000005B3CA: 49
	.byte 0x92                                                 // 00000005B3CB: 92
	.ascii "a:C"                                               // 00000005B3CC: 433A61
	.byte 0x18                                                 // 00000005B3CF: 18
	.long 0xa8b8d58c                                           // 00000005B3D0: A8B8D58C
	.long 0xa5eea584                                           // 00000005B3D4: A5EEA584
	.long 0x8cbe4bf9                                           // 00000005B3D8: 8CBE4BF9
	.long 0x319bd90e                                           // 00000005B3DC: 319BD90E
	.ascii "n"                                                 // 00000005B3E0: 6E
	.byte 0xb3                                                 // 00000005B3E1: B3
	.ascii "`F>"                                               // 00000005B3E2: 3E4660
	.byte 0xc1                                                 // 00000005B3E5: C1
	.short 0x89c4                                              // 00000005B3E6: 89C4
	.ascii "SK"                                                // 00000005B3E8: 4B53
	.short 0x6e14                                              // 00000005B3EA: 6E14
	.ascii "^W"                                                // 00000005B3EC: 575E
	.short 0xba                                                // 00000005B3EE: 00BA
	.long 0xbb2b7dfe                                           // 00000005B3F0: BB2B7DFE
	.long 0x3c82e786                                           // 00000005B3F4: 3C82E786
	.ascii "z"                                                 // 00000005B3F8: 7A
	.byte 0x83                                                 // 00000005B3F9: 83
	.short 0x70d9                                              // 00000005B3FA: 70D9
	.ascii "^"                                                 // 00000005B3FC: 5E
	.byte 0xfd                                                 // 00000005B3FD: FD
	.ascii "h9"                                                // 00000005B3FE: 3968
	.long 0x16a32dd6                                           // 00000005B400: 16A32DD6
	.long 0xb32052e7                                           // 00000005B404: B32052E7
	.ascii "0"                                                 // 00000005B408: 30
	.byte 0xdb                                                 // 00000005B409: DB
	.short 0x1996                                              // 00000005B40A: 1996
	.long 0x85835114                                           // 00000005B40C: 85835114
	.long 0x3bff0190                                           // 00000005B410: 3BFF0190
	.long 0xad5aab94                                           // 00000005B414: AD5AAB94
	.long 0x6d224dc5                                           // 00000005B418: 6D224DC5
	.ascii "@?6"                                               // 00000005B41C: 363F40
	.byte 0x1a                                                 // 00000005B41F: 1A
	.long 0x460aafd0                                           // 00000005B420: 460AAFD0
	.long 0x4e74dae4                                           // 00000005B424: 4E74DAE4
	.long 0x1ed84791                                           // 00000005B428: 1ED84791
	.long 0xd4dbd4ca                                           // 00000005B42C: D4DBD4CA
	.ascii "6"                                                 // 00000005B430: 36
	.byte 0xfc                                                 // 00000005B431: FC
	.short 0x24d2                                              // 00000005B432: 24D2
	.ascii "F"                                                 // 00000005B434: 46
	.byte 0x93                                                 // 00000005B435: 93
	.ascii "9J"                                                // 00000005B436: 4A39
	.long 0x66d331b6                                           // 00000005B438: 66D331B6
	.long 0xd3b8fdce                                           // 00000005B43C: D3B8FDCE
	.long 0x58196eda                                           // 00000005B440: 58196EDA
	.ascii "^"                                                 // 00000005B444: 5E
	.byte 0xe6                                                 // 00000005B445: E6
	.ascii "F"                                                 // 00000005B446: 46
	.byte 0x90                                                 // 00000005B447: 90
	.ascii "j&"                                                // 00000005B448: 266A
	.short 0x4299                                              // 00000005B44A: 4299
	.ascii "'"                                                 // 00000005B44C: 27
	.byte 0xce                                                 // 00000005B44D: CE
	.short 0x8b08                                              // 00000005B44E: 8B08
	.ascii ">2"                                                // 00000005B450: 323E
	.short 0x39b0                                              // 00000005B452: 39B0
	.long 0x8098da92                                           // 00000005B454: 8098DA92
	.long 0xfd0a5806                                           // 00000005B458: FD0A5806
	.long 0xde74348f                                           // 00000005B45C: DE74348F
	.long 0xd1b6cbf4                                           // 00000005B460: D1B6CBF4
	.long 0x77379ee4                                           // 00000005B464: 77379EE4
	.ascii "x"                                                 // 00000005B468: 78
	.byte 0xde                                                 // 00000005B469: DE
	.ascii "\n"                                                // 00000005B46A: 0A
	.byte 0xab                                                 // 00000005B46B: AB
	.ascii "pG}"                                               // 00000005B46C: 7D4770
	.byte 0xd0                                                 // 00000005B46F: D0
	.long 0x7c4b2fdc                                           // 00000005B470: 7C4B2FDC
	.ascii "q"                                                 // 00000005B474: 71
	.byte 0xc0                                                 // 00000005B475: C0
	.ascii "x"                                                 // 00000005B476: 78
	.byte 0xc5                                                 // 00000005B477: C5
	.long 0x7fef35d4                                           // 00000005B478: 7FEF35D4
	.long 0x661b8480                                           // 00000005B47C: 661B8480
	.long 0xd9f06ba8                                           // 00000005B480: D9F06BA8
	.long 0x174cfe8c                                           // 00000005B484: 174CFE8C
	.long 0x8f1f5a95                                           // 00000005B488: 8F1F5A95
	.long 0x70c93e1e                                           // 00000005B48C: 70C93E1E
	.long 0xaac365fa                                           // 00000005B490: AAC365FA
	.long 0x4aed49e6                                           // 00000005B494: 4AED49E6
	.ascii "J"                                                 // 00000005B498: 4A
	.byte 0xbb                                                 // 00000005B499: BB
	.short 0x90c2                                              // 00000005B49A: 90C2
	.ascii "r"                                                 // 00000005B49C: 72
	.byte 0xb0                                                 // 00000005B49D: B0
	.short 0xe16                                               // 00000005B49E: 0E16
	.long 0xd24efd8a                                           // 00000005B4A0: D24EFD8A
	.ascii "7"                                                 // 00000005B4A4: 37
	.byte 0xea                                                 // 00000005B4A5: EA
	.short 0x93bc                                              // 00000005B4A6: 93BC

	.section	.hash,#alloc
	.ascii "S"                                                 // 00000005B4A8: 53
	.byte 0x2                                                  // 00000005B4A9: 02
	.short 0                                                   // 00000005B4AA: 0000
	.ascii "S"                                                 // 00000005B4AC: 53
	.byte 0x2                                                  // 00000005B4AD: 02
	.short 0                                                   // 00000005B4AE: 0000
	.ascii "@"                                                 // 00000005B4B0: 40
	.byte 0x2                                                  // 00000005B4B1: 02
	.short 0                                                   // 00000005B4B2: 0000
	.long 0                                                    // 00000005B4B4: 00000000
	.long 0x1ce                                                // 00000005B4B8: 000001CE
	.long 0x98                                                 // 00000005B4BC: 00000098
	.long 0                                                    // 00000005B4C0: 00000000
	.long 0                                                    // 00000005B4C4: 00000000
	.long 0xac                                                 // 00000005B4C8: 000000AC
	.ascii "B"                                                 // 00000005B4CC: 42
	.byte 0x1                                                  // 00000005B4CD: 01
	.short 0                                                   // 00000005B4CE: 0000
	.long 0                                                    // 00000005B4D0: 00000000
	.long 0xf6                                                 // 00000005B4D4: 000000F6
	.long 0                                                    // 00000005B4D8: 00000000
	.long 0x21c                                                // 00000005B4DC: 0000021C
	.long 0xdd                                                 // 00000005B4E0: 000000DD
	.long 0x1d9                                                // 00000005B4E4: 000001D9
	.long 0                                                    // 00000005B4E8: 00000000
	.long 0x113                                                // 00000005B4EC: 00000113
	.long 0x16                                                 // 00000005B4F0: 00000016
	.long 0                                                    // 00000005B4F4: 00000000
	.long 0x1db                                                // 00000005B4F8: 000001DB
	.ascii "\\"                                                // 00000005B4FC: 5C
	.byte 0                                                    // 00000005B4FD: 00
	.short 0                                                   // 00000005B4FE: 0000
	.long 0x80                                                 // 00000005B500: 00000080
	.ascii "O"                                                 // 00000005B504: 4F
	.byte 0x2                                                  // 00000005B505: 02
	.short 0                                                   // 00000005B506: 0000
	.long 0x1c5                                                // 00000005B508: 000001C5
	.long 0                                                    // 00000005B50C: 00000000
	.ascii "q"                                                 // 00000005B510: 71
	.byte 0                                                    // 00000005B511: 00
	.short 0                                                   // 00000005B512: 0000
	.long 0                                                    // 00000005B514: 00000000
	.long 0x20f                                                // 00000005B518: 0000020F
	.ascii "&"                                                 // 00000005B51C: 26
	.byte 0x1                                                  // 00000005B51D: 01
	.short 0                                                   // 00000005B51E: 0000
	.ascii "G"                                                 // 00000005B520: 47
	.byte 0x1                                                  // 00000005B521: 01
	.short 0                                                   // 00000005B522: 0000
	.ascii ")"                                                 // 00000005B524: 29
	.byte 0x2                                                  // 00000005B525: 02
	.short 0                                                   // 00000005B526: 0000
	.ascii "Y"                                                 // 00000005B528: 59
	.byte 0                                                    // 00000005B529: 00
	.short 0                                                   // 00000005B52A: 0000
	.long 0                                                    // 00000005B52C: 00000000
	.long 0                                                    // 00000005B530: 00000000
	.long 0x18f                                                // 00000005B534: 0000018F
	.ascii "5"                                                 // 00000005B538: 35
	.byte 0x2                                                  // 00000005B539: 02
	.short 0                                                   // 00000005B53A: 0000
	.long 0xc7                                                 // 00000005B53C: 000000C7
	.long 0                                                    // 00000005B540: 00000000
	.long 0                                                    // 00000005B544: 00000000
	.long 0                                                    // 00000005B548: 00000000
	.long 0                                                    // 00000005B54C: 00000000
	.long 0                                                    // 00000005B550: 00000000
	.ascii "!"                                                 // 00000005B554: 21
	.byte 0x1                                                  // 00000005B555: 01
	.short 0                                                   // 00000005B556: 0000
	.long 0                                                    // 00000005B558: 00000000
	.long 0x108                                                // 00000005B55C: 00000108
	.long 0x1d1                                                // 00000005B560: 000001D1
	.long 0                                                    // 00000005B564: 00000000
	.long 0x1fd                                                // 00000005B568: 000001FD
	.long 0xbb                                                 // 00000005B56C: 000000BB
	.long 0                                                    // 00000005B570: 00000000
	.long 0                                                    // 00000005B574: 00000000
	.long 0x96                                                 // 00000005B578: 00000096
	.long 0x1b0                                                // 00000005B57C: 000001B0
	.long 0                                                    // 00000005B580: 00000000
	.ascii "M"                                                 // 00000005B584: 4D
	.byte 0                                                    // 00000005B585: 00
	.short 0                                                   // 00000005B586: 0000
	.long 0                                                    // 00000005B588: 00000000
	.long 0x10d                                                // 00000005B58C: 0000010D
	.long 0                                                    // 00000005B590: 00000000
	.long 0x1bd                                                // 00000005B594: 000001BD
	.long 0x17f                                                // 00000005B598: 0000017F
	.long 0                                                    // 00000005B59C: 00000000
	.ascii "j"                                                 // 00000005B5A0: 6A
	.byte 0                                                    // 00000005B5A1: 00
	.short 0                                                   // 00000005B5A2: 0000
	.long 0x19e                                                // 00000005B5A4: 0000019E
	.long 0                                                    // 00000005B5A8: 00000000
	.long 0x4                                                  // 00000005B5AC: 00000004
	.long 0x1e6                                                // 00000005B5B0: 000001E6
	.ascii ","                                                 // 00000005B5B4: 2C
	.byte 0x2                                                  // 00000005B5B5: 02
	.short 0                                                   // 00000005B5B6: 0000
	.ascii "6"                                                 // 00000005B5B8: 36
	.byte 0x1                                                  // 00000005B5B9: 01
	.short 0                                                   // 00000005B5BA: 0000
	.long 0x1f5                                                // 00000005B5BC: 000001F5
	.long 0xb8                                                 // 00000005B5C0: 000000B8
	.long 0xab                                                 // 00000005B5C4: 000000AB
	.long 0xf2                                                 // 00000005B5C8: 000000F2
	.ascii "F"                                                 // 00000005B5CC: 46
	.byte 0x2                                                  // 00000005B5CD: 02
	.short 0                                                   // 00000005B5CE: 0000
	.long 0                                                    // 00000005B5D0: 00000000
	.long 0xc3                                                 // 00000005B5D4: 000000C3
	.long 0xed                                                 // 00000005B5D8: 000000ED
	.long 0x1ef                                                // 00000005B5DC: 000001EF
	.long 0xdf                                                 // 00000005B5E0: 000000DF
	.long 0                                                    // 00000005B5E4: 00000000
	.long 0                                                    // 00000005B5E8: 00000000
	.long 0                                                    // 00000005B5EC: 00000000
	.long 0xd1                                                 // 00000005B5F0: 000000D1
	.long 0                                                    // 00000005B5F4: 00000000
	.long 0xd6                                                 // 00000005B5F8: 000000D6
	.ascii "_"                                                 // 00000005B5FC: 5F
	.byte 0x1                                                  // 00000005B5FD: 01
	.short 0                                                   // 00000005B5FE: 0000
	.long 0x1c0                                                // 00000005B600: 000001C0
	.long 0                                                    // 00000005B604: 00000000
	.ascii ","                                                 // 00000005B608: 2C
	.byte 0x1                                                  // 00000005B609: 01
	.short 0                                                   // 00000005B60A: 0000
	.long 0                                                    // 00000005B60C: 00000000
	.long 0x95                                                 // 00000005B610: 00000095
	.long 0                                                    // 00000005B614: 00000000
	.long 0                                                    // 00000005B618: 00000000
	.long 0                                                    // 00000005B61C: 00000000
	.long 0x20e                                                // 00000005B620: 0000020E
	.long 0x1f0                                                // 00000005B624: 000001F0
	.long 0                                                    // 00000005B628: 00000000
	.ascii "$"                                                 // 00000005B62C: 24
	.byte 0x2                                                  // 00000005B62D: 02
	.short 0                                                   // 00000005B62E: 0000
	.long 0xa1                                                 // 00000005B630: 000000A1
	.long 0                                                    // 00000005B634: 00000000
	.ascii ";"                                                 // 00000005B638: 3B
	.byte 0x1                                                  // 00000005B639: 01
	.short 0                                                   // 00000005B63A: 0000
	.long 0                                                    // 00000005B63C: 00000000
	.long 0                                                    // 00000005B640: 00000000
	.long 0                                                    // 00000005B644: 00000000
	.ascii "5"                                                 // 00000005B648: 35
	.byte 0x1                                                  // 00000005B649: 01
	.short 0                                                   // 00000005B64A: 0000
	.long 0x195                                                // 00000005B64C: 00000195
	.long 0                                                    // 00000005B650: 00000000
	.long 0x11                                                 // 00000005B654: 00000011
	.long 0x116                                                // 00000005B658: 00000116
	.ascii "E"                                                 // 00000005B65C: 45
	.byte 0x2                                                  // 00000005B65D: 02
	.short 0                                                   // 00000005B65E: 0000
	.long 0xb                                                  // 00000005B660: 0000000B
	.long 0                                                    // 00000005B664: 00000000
	.long 0x206                                                // 00000005B668: 00000206
	.long 0                                                    // 00000005B66C: 00000000
	.long 0x181                                                // 00000005B670: 00000181
	.long 0                                                    // 00000005B674: 00000000
	.ascii "H"                                                 // 00000005B678: 48
	.byte 0x1                                                  // 00000005B679: 01
	.short 0                                                   // 00000005B67A: 0000
	.ascii "b"                                                 // 00000005B67C: 62
	.byte 0x1                                                  // 00000005B67D: 01
	.short 0                                                   // 00000005B67E: 0000
	.ascii "v"                                                 // 00000005B680: 76
	.byte 0x1                                                  // 00000005B681: 01
	.short 0                                                   // 00000005B682: 0000
	.long 0                                                    // 00000005B684: 00000000
	.long 0xfd                                                 // 00000005B688: 000000FD
	.ascii "I"                                                 // 00000005B68C: 49
	.byte 0x1                                                  // 00000005B68D: 01
	.short 0                                                   // 00000005B68E: 0000
	.ascii "%"                                                 // 00000005B690: 25
	.byte 0x1                                                  // 00000005B691: 01
	.short 0                                                   // 00000005B692: 0000
	.long 0                                                    // 00000005B694: 00000000
	.long 0xff                                                 // 00000005B698: 000000FF
	.ascii "P"                                                 // 00000005B69C: 50
	.byte 0x1                                                  // 00000005B69D: 01
	.short 0                                                   // 00000005B69E: 0000
	.long 0x1ee                                                // 00000005B6A0: 000001EE
	.long 0x1f7                                                // 00000005B6A4: 000001F7
	.ascii "l"                                                 // 00000005B6A8: 6C
	.byte 0                                                    // 00000005B6A9: 00
	.short 0                                                   // 00000005B6AA: 0000
	.long 0                                                    // 00000005B6AC: 00000000
	.long 0x10                                                 // 00000005B6B0: 00000010
	.ascii "&"                                                 // 00000005B6B4: 26
	.byte 0x2                                                  // 00000005B6B5: 02
	.short 0                                                   // 00000005B6B6: 0000
	.ascii "h"                                                 // 00000005B6B8: 68
	.byte 0x1                                                  // 00000005B6B9: 01
	.short 0                                                   // 00000005B6BA: 0000
	.long 0                                                    // 00000005B6BC: 00000000
	.long 0x1dc                                                // 00000005B6C0: 000001DC
	.long 0xf5                                                 // 00000005B6C4: 000000F5
	.long 0                                                    // 00000005B6C8: 00000000
	.long 0                                                    // 00000005B6CC: 00000000
	.ascii " "                                                 // 00000005B6D0: 20
	.byte 0x2                                                  // 00000005B6D1: 02
	.short 0                                                   // 00000005B6D2: 0000
	.ascii "j"                                                 // 00000005B6D4: 6A
	.byte 0x1                                                  // 00000005B6D5: 01
	.short 0                                                   // 00000005B6D6: 0000
	.ascii "-"                                                 // 00000005B6D8: 2D
	.byte 0x2                                                  // 00000005B6D9: 02
	.short 0                                                   // 00000005B6DA: 0000
	.long 0                                                    // 00000005B6DC: 00000000
	.ascii "s"                                                 // 00000005B6E0: 73
	.byte 0                                                    // 00000005B6E1: 00
	.short 0                                                   // 00000005B6E2: 0000
	.long 0                                                    // 00000005B6E4: 00000000
	.long 0x1c9                                                // 00000005B6E8: 000001C9
	.ascii " "                                                 // 00000005B6EC: 20
	.byte 0x1                                                  // 00000005B6ED: 01
	.short 0                                                   // 00000005B6EE: 0000
	.ascii "\""                                                // 00000005B6F0: 22
	.byte 0x2                                                  // 00000005B6F1: 02
	.short 0                                                   // 00000005B6F2: 0000
	.long 0x1a4                                                // 00000005B6F4: 000001A4
	.ascii "A"                                                 // 00000005B6F8: 41
	.byte 0x2                                                  // 00000005B6F9: 02
	.short 0                                                   // 00000005B6FA: 0000
	.ascii "w"                                                 // 00000005B6FC: 77
	.byte 0                                                    // 00000005B6FD: 00
	.short 0                                                   // 00000005B6FE: 0000
	.long 0                                                    // 00000005B700: 00000000
	.long 0                                                    // 00000005B704: 00000000
	.ascii "k"                                                 // 00000005B708: 6B
	.byte 0                                                    // 00000005B709: 00
	.short 0                                                   // 00000005B70A: 0000
	.long 0xbe                                                 // 00000005B70C: 000000BE
	.long 0x1f4                                                // 00000005B710: 000001F4
	.long 0x1d8                                                // 00000005B714: 000001D8
	.long 0                                                    // 00000005B718: 00000000
	.ascii "L"                                                 // 00000005B71C: 4C
	.byte 0x1                                                  // 00000005B71D: 01
	.short 0                                                   // 00000005B71E: 0000
	.long 0xc                                                  // 00000005B720: 0000000C
	.ascii "p"                                                 // 00000005B724: 70
	.byte 0x1                                                  // 00000005B725: 01
	.short 0                                                   // 00000005B726: 0000
	.long 0x212                                                // 00000005B728: 00000212
	.long 0                                                    // 00000005B72C: 00000000
	.ascii "N"                                                 // 00000005B730: 4E
	.byte 0x1                                                  // 00000005B731: 01
	.short 0                                                   // 00000005B732: 0000
	.long 0                                                    // 00000005B734: 00000000
	.ascii "J"                                                 // 00000005B738: 4A
	.byte 0x2                                                  // 00000005B739: 02
	.short 0                                                   // 00000005B73A: 0000
	.long 0x1df                                                // 00000005B73C: 000001DF
	.long 0                                                    // 00000005B740: 00000000
	.long 0                                                    // 00000005B744: 00000000
	.long 0                                                    // 00000005B748: 00000000
	.ascii "\n"                                                // 00000005B74C: 0A
	.byte 0x1                                                  // 00000005B74D: 01
	.short 0                                                   // 00000005B74E: 0000
	.long 0                                                    // 00000005B750: 00000000
	.long 0x202                                                // 00000005B754: 00000202
	.ascii "r"                                                 // 00000005B758: 72
	.byte 0                                                    // 00000005B759: 00
	.short 0                                                   // 00000005B75A: 0000
	.long 0                                                    // 00000005B75C: 00000000
	.long 0                                                    // 00000005B760: 00000000
	.ascii "i"                                                 // 00000005B764: 69
	.byte 0                                                    // 00000005B765: 00
	.short 0                                                   // 00000005B766: 0000
	.long 0xd5                                                 // 00000005B768: 000000D5
	.long 0x18c                                                // 00000005B76C: 0000018C
	.long 0x99                                                 // 00000005B770: 00000099
	.long 0x10c                                                // 00000005B774: 0000010C
	.long 0                                                    // 00000005B778: 00000000
	.long 0xc1                                                 // 00000005B77C: 000000C1
	.ascii "6"                                                 // 00000005B780: 36
	.byte 0x2                                                  // 00000005B781: 02
	.short 0                                                   // 00000005B782: 0000
	.long 0                                                    // 00000005B784: 00000000
	.long 0                                                    // 00000005B788: 00000000
	.long 0x1cb                                                // 00000005B78C: 000001CB
	.long 0                                                    // 00000005B790: 00000000
	.long 0                                                    // 00000005B794: 00000000
	.ascii "x"                                                 // 00000005B798: 78
	.byte 0                                                    // 00000005B799: 00
	.short 0                                                   // 00000005B79A: 0000
	.long 0x8                                                  // 00000005B79C: 00000008
	.long 0                                                    // 00000005B7A0: 00000000
	.ascii "'"                                                 // 00000005B7A4: 27
	.byte 0x2                                                  // 00000005B7A5: 02
	.short 0                                                   // 00000005B7A6: 0000
	.long 0x1e1                                                // 00000005B7A8: 000001E1
	.long 0                                                    // 00000005B7AC: 00000000
	.long 0                                                    // 00000005B7B0: 00000000
	.ascii "w"                                                 // 00000005B7B4: 77
	.byte 0x1                                                  // 00000005B7B5: 01
	.short 0                                                   // 00000005B7B6: 0000
	.ascii "e"                                                 // 00000005B7B8: 65
	.byte 0                                                    // 00000005B7B9: 00
	.short 0                                                   // 00000005B7BA: 0000
	.ascii "="                                                 // 00000005B7BC: 3D
	.byte 0x2                                                  // 00000005B7BD: 02
	.short 0                                                   // 00000005B7BE: 0000
	.long 0xd7                                                 // 00000005B7C0: 000000D7
	.long 0x1d7                                                // 00000005B7C4: 000001D7
	.long 0                                                    // 00000005B7C8: 00000000
	.long 0                                                    // 00000005B7CC: 00000000
	.long 0                                                    // 00000005B7D0: 00000000
	.long 0                                                    // 00000005B7D4: 00000000
	.long 0                                                    // 00000005B7D8: 00000000
	.long 0x9a                                                 // 00000005B7DC: 0000009A
	.long 0                                                    // 00000005B7E0: 00000000
	.long 0                                                    // 00000005B7E4: 00000000
	.long 0                                                    // 00000005B7E8: 00000000
	.ascii "g"                                                 // 00000005B7EC: 67
	.byte 0x1                                                  // 00000005B7ED: 01
	.short 0                                                   // 00000005B7EE: 0000
	.long 0x114                                                // 00000005B7F0: 00000114
	.long 0                                                    // 00000005B7F4: 00000000
	.ascii "B"                                                 // 00000005B7F8: 42
	.byte 0x2                                                  // 00000005B7F9: 02
	.short 0                                                   // 00000005B7FA: 0000
	.long 0                                                    // 00000005B7FC: 00000000
	.long 0x1ed                                                // 00000005B800: 000001ED
	.ascii "Q"                                                 // 00000005B804: 51
	.byte 0x1                                                  // 00000005B805: 01
	.short 0                                                   // 00000005B806: 0000
	.long 0                                                    // 00000005B808: 00000000
	.long 0                                                    // 00000005B80C: 00000000
	.long 0xb0                                                 // 00000005B810: 000000B0
	.long 0                                                    // 00000005B814: 00000000
	.ascii "a"                                                 // 00000005B818: 61
	.byte 0x1                                                  // 00000005B819: 01
	.short 0                                                   // 00000005B81A: 0000
	.ascii "n"                                                 // 00000005B81C: 6E
	.byte 0                                                    // 00000005B81D: 00
	.short 0                                                   // 00000005B81E: 0000
	.long 0                                                    // 00000005B820: 00000000
	.long 0x188                                                // 00000005B824: 00000188
	.ascii "C"                                                 // 00000005B828: 43
	.byte 0x2                                                  // 00000005B829: 02
	.short 0                                                   // 00000005B82A: 0000
	.long 0xb6                                                 // 00000005B82C: 000000B6
	.long 0                                                    // 00000005B830: 00000000
	.long 0                                                    // 00000005B834: 00000000
	.ascii "S"                                                 // 00000005B838: 53
	.byte 0x1                                                  // 00000005B839: 01
	.short 0                                                   // 00000005B83A: 0000
	.long 0xee                                                 // 00000005B83C: 000000EE
	.long 0x1d6                                                // 00000005B840: 000001D6
	.long 0                                                    // 00000005B844: 00000000
	.long 0x18b                                                // 00000005B848: 0000018B
	.ascii "{"                                                 // 00000005B84C: 7B
	.byte 0x1                                                  // 00000005B84D: 01
	.short 0                                                   // 00000005B84E: 0000
	.long 0                                                    // 00000005B850: 00000000
	.ascii "N"                                                 // 00000005B854: 4E
	.byte 0x2                                                  // 00000005B855: 02
	.short 0                                                   // 00000005B856: 0000
	.ascii "s"                                                 // 00000005B858: 73
	.byte 0x1                                                  // 00000005B859: 01
	.short 0                                                   // 00000005B85A: 0000
	.long 0                                                    // 00000005B85C: 00000000
	.long 0x213                                                // 00000005B860: 00000213
	.long 0                                                    // 00000005B864: 00000000
	.long 0                                                    // 00000005B868: 00000000
	.ascii "*"                                                 // 00000005B86C: 2A
	.byte 0                                                    // 00000005B86D: 00
	.short 0                                                   // 00000005B86E: 0000
	.long 0                                                    // 00000005B870: 00000000
	.long 0                                                    // 00000005B874: 00000000
	.long 0x20b                                                // 00000005B878: 0000020B
	.long 0                                                    // 00000005B87C: 00000000
	.long 0                                                    // 00000005B880: 00000000
	.long 0                                                    // 00000005B884: 00000000
	.long 0x1fb                                                // 00000005B888: 000001FB
	.long 0x85                                                 // 00000005B88C: 00000085
	.long 0x8f                                                 // 00000005B890: 0000008F
	.ascii "/"                                                 // 00000005B894: 2F
	.byte 0x2                                                  // 00000005B895: 02
	.short 0                                                   // 00000005B896: 0000
	.long 0x190                                                // 00000005B898: 00000190
	.ascii "@"                                                 // 00000005B89C: 40
	.byte 0                                                    // 00000005B89D: 00
	.short 0                                                   // 00000005B89E: 0000
	.long 0x20d                                                // 00000005B8A0: 0000020D
	.long 0x8b                                                 // 00000005B8A4: 0000008B
	.long 0                                                    // 00000005B8A8: 00000000
	.long 0                                                    // 00000005B8AC: 00000000
	.long 0x199                                                // 00000005B8B0: 00000199
	.long 0                                                    // 00000005B8B4: 00000000
	.long 0xec                                                 // 00000005B8B8: 000000EC
	.long 0x10b                                                // 00000005B8BC: 0000010B
	.long 0                                                    // 00000005B8C0: 00000000
	.ascii "L"                                                 // 00000005B8C4: 4C
	.byte 0x2                                                  // 00000005B8C5: 02
	.short 0                                                   // 00000005B8C6: 0000
	.long 0x1b1                                                // 00000005B8C8: 000001B1
	.long 0                                                    // 00000005B8CC: 00000000
	.long 0xcd                                                 // 00000005B8D0: 000000CD
	.ascii "#"                                                 // 00000005B8D4: 23
	.byte 0x2                                                  // 00000005B8D5: 02
	.short 0                                                   // 00000005B8D6: 0000
	.ascii "y"                                                 // 00000005B8D8: 79
	.byte 0x1                                                  // 00000005B8D9: 01
	.short 0                                                   // 00000005B8DA: 0000
	.long 0x1e3                                                // 00000005B8DC: 000001E3
	.ascii "o"                                                 // 00000005B8E0: 6F
	.byte 0x1                                                  // 00000005B8E1: 01
	.short 0                                                   // 00000005B8E2: 0000
	.ascii "P"                                                 // 00000005B8E4: 50
	.byte 0x2                                                  // 00000005B8E5: 02
	.short 0                                                   // 00000005B8E6: 0000
	.long 0x192                                                // 00000005B8E8: 00000192
	.long 0                                                    // 00000005B8EC: 00000000
	.ascii "M"                                                 // 00000005B8F0: 4D
	.byte 0x2                                                  // 00000005B8F1: 02
	.short 0                                                   // 00000005B8F2: 0000
	.long 0x200                                                // 00000005B8F4: 00000200
	.long 0                                                    // 00000005B8F8: 00000000
	.long 0                                                    // 00000005B8FC: 00000000
	.ascii "H"                                                 // 00000005B900: 48
	.byte 0x2                                                  // 00000005B901: 02
	.short 0                                                   // 00000005B902: 0000
	.ascii "K"                                                 // 00000005B904: 4B
	.byte 0x1                                                  // 00000005B905: 01
	.short 0                                                   // 00000005B906: 0000
	.long 0                                                    // 00000005B908: 00000000
	.long 0x1aa                                                // 00000005B90C: 000001AA
	.long 0                                                    // 00000005B910: 00000000
	.long 0                                                    // 00000005B914: 00000000
	.long 0x1ae                                                // 00000005B918: 000001AE
	.ascii "?"                                                 // 00000005B91C: 3F
	.byte 0x2                                                  // 00000005B91D: 02
	.short 0                                                   // 00000005B91E: 0000
	.long 0                                                    // 00000005B920: 00000000
	.long 0x21d                                                // 00000005B924: 0000021D
	.long 0xda                                                 // 00000005B928: 000000DA
	.long 0                                                    // 00000005B92C: 00000000
	.long 0                                                    // 00000005B930: 00000000
	.long 0x119                                                // 00000005B934: 00000119
	.long 0                                                    // 00000005B938: 00000000
	.long 0x1e4                                                // 00000005B93C: 000001E4
	.ascii " "                                                 // 00000005B940: 20
	.byte 0                                                    // 00000005B941: 00
	.short 0                                                   // 00000005B942: 0000
	.long 0x94                                                 // 00000005B944: 00000094
	.long 0                                                    // 00000005B948: 00000000
	.long 0                                                    // 00000005B94C: 00000000
	.long 0x1b3                                                // 00000005B950: 000001B3
	.long 0x102                                                // 00000005B954: 00000102
	.long 0                                                    // 00000005B958: 00000000
	.long 0xc5                                                 // 00000005B95C: 000000C5
	.long 0x19c                                                // 00000005B960: 0000019C
	.long 0x183                                                // 00000005B964: 00000183
	.long 0x219                                                // 00000005B968: 00000219
	.ascii "7"                                                 // 00000005B96C: 37
	.byte 0x2                                                  // 00000005B96D: 02
	.short 0                                                   // 00000005B96E: 0000
	.long 0                                                    // 00000005B970: 00000000
	.long 0x1ff                                                // 00000005B974: 000001FF
	.ascii "-"                                                 // 00000005B978: 2D
	.byte 0x1                                                  // 00000005B979: 01
	.short 0                                                   // 00000005B97A: 0000
	.ascii "3"                                                 // 00000005B97C: 33
	.byte 0x2                                                  // 00000005B97D: 02
	.short 0                                                   // 00000005B97E: 0000
	.long 0x1e2                                                // 00000005B980: 000001E2
	.long 0x1f6                                                // 00000005B984: 000001F6
	.long 0                                                    // 00000005B988: 00000000
	.long 0                                                    // 00000005B98C: 00000000
	.ascii "P"                                                 // 00000005B990: 50
	.byte 0                                                    // 00000005B991: 00
	.short 0                                                   // 00000005B992: 0000
	.ascii "8"                                                 // 00000005B994: 38
	.byte 0x1                                                  // 00000005B995: 01
	.short 0                                                   // 00000005B996: 0000
	.ascii "J"                                                 // 00000005B998: 4A
	.byte 0                                                    // 00000005B999: 00
	.short 0                                                   // 00000005B99A: 0000
	.ascii "u"                                                 // 00000005B99C: 75
	.byte 0x1                                                  // 00000005B99D: 01
	.short 0                                                   // 00000005B99E: 0000
	.long 0x1c1                                                // 00000005B9A0: 000001C1
	.long 0xa4                                                 // 00000005B9A4: 000000A4
	.long 0x1a1                                                // 00000005B9A8: 000001A1
	.long 0                                                    // 00000005B9AC: 00000000
	.long 0x107                                                // 00000005B9B0: 00000107
	.long 0                                                    // 00000005B9B4: 00000000
	.long 0                                                    // 00000005B9B8: 00000000
	.long 0x1d5                                                // 00000005B9BC: 000001D5
	.long 0                                                    // 00000005B9C0: 00000000
	.ascii "?"                                                 // 00000005B9C4: 3F
	.byte 0                                                    // 00000005B9C5: 00
	.short 0                                                   // 00000005B9C6: 0000
	.long 0                                                    // 00000005B9C8: 00000000
	.ascii "'"                                                 // 00000005B9CC: 27
	.byte 0                                                    // 00000005B9CD: 00
	.short 0                                                   // 00000005B9CE: 0000
	.long 0x1e9                                                // 00000005B9D0: 000001E9
	.long 0                                                    // 00000005B9D4: 00000000
	.long 0                                                    // 00000005B9D8: 00000000
	.long 0xeb                                                 // 00000005B9DC: 000000EB
	.long 0x1f8                                                // 00000005B9E0: 000001F8
	.long 0x189                                                // 00000005B9E4: 00000189
	.long 0                                                    // 00000005B9E8: 00000000
	.long 0x1a5                                                // 00000005B9EC: 000001A5
	.long 0x210                                                // 00000005B9F0: 00000210
	.long 0                                                    // 00000005B9F4: 00000000
	.ascii "2"                                                 // 00000005B9F8: 32
	.byte 0x2                                                  // 00000005B9F9: 02
	.short 0                                                   // 00000005B9FA: 0000
	.long 0x191                                                // 00000005B9FC: 00000191
	.long 0                                                    // 00000005BA00: 00000000
	.long 0xe3                                                 // 00000005BA04: 000000E3
	.ascii "1"                                                 // 00000005BA08: 31
	.byte 0                                                    // 00000005BA09: 00
	.short 0                                                   // 00000005BA0A: 0000
	.long 0x8d                                                 // 00000005BA0C: 0000008D
	.ascii "n"                                                 // 00000005BA10: 6E
	.byte 0x1                                                  // 00000005BA11: 01
	.short 0                                                   // 00000005BA12: 0000
	.long 0                                                    // 00000005BA14: 00000000
	.long 0x1c                                                 // 00000005BA18: 0000001C
	.long 0                                                    // 00000005BA1C: 00000000
	.long 0x21e                                                // 00000005BA20: 0000021E
	.long 0                                                    // 00000005BA24: 00000000
	.long 0                                                    // 00000005BA28: 00000000
	.long 0                                                    // 00000005BA2C: 00000000
	.long 0                                                    // 00000005BA30: 00000000
	.ascii "T"                                                 // 00000005BA34: 54
	.byte 0                                                    // 00000005BA35: 00
	.short 0                                                   // 00000005BA36: 0000
	.ascii "D"                                                 // 00000005BA38: 44
	.byte 0x2                                                  // 00000005BA39: 02
	.short 0                                                   // 00000005BA3A: 0000
	.long 0x1af                                                // 00000005BA3C: 000001AF
	.long 0                                                    // 00000005BA40: 00000000
	.long 0                                                    // 00000005BA44: 00000000
	.long 0x1c4                                                // 00000005BA48: 000001C4
	.long 0x1a2                                                // 00000005BA4C: 000001A2
	.long 0                                                    // 00000005BA50: 00000000
	.long 0xd2                                                 // 00000005BA54: 000000D2
	.ascii ">"                                                 // 00000005BA58: 3E
	.byte 0x2                                                  // 00000005BA59: 02
	.short 0                                                   // 00000005BA5A: 0000
	.ascii "F"                                                 // 00000005BA5C: 46
	.byte 0                                                    // 00000005BA5D: 00
	.short 0                                                   // 00000005BA5E: 0000
	.long 0                                                    // 00000005BA60: 00000000
	.long 0x182                                                // 00000005BA64: 00000182
	.ascii "K"                                                 // 00000005BA68: 4B
	.byte 0x2                                                  // 00000005BA69: 02
	.short 0                                                   // 00000005BA6A: 0000
	.long 0                                                    // 00000005BA6C: 00000000
	.ascii "\n"                                                // 00000005BA70: 0A
	.byte 0                                                    // 00000005BA71: 00
	.short 0                                                   // 00000005BA72: 0000
	.long 0                                                    // 00000005BA74: 00000000
	.ascii "1"                                                 // 00000005BA78: 31
	.byte 0x1                                                  // 00000005BA79: 01
	.short 0                                                   // 00000005BA7A: 0000
	.long 0x21a                                                // 00000005BA7C: 0000021A
	.long 0                                                    // 00000005BA80: 00000000
	.long 0x1cd                                                // 00000005BA84: 000001CD
	.long 0                                                    // 00000005BA88: 00000000
	.ascii "7"                                                 // 00000005BA8C: 37
	.byte 0x1                                                  // 00000005BA8D: 01
	.short 0                                                   // 00000005BA8E: 0000
	.long 0                                                    // 00000005BA90: 00000000
	.long 0                                                    // 00000005BA94: 00000000
	.long 0                                                    // 00000005BA98: 00000000
	.ascii "I"                                                 // 00000005BA9C: 49
	.byte 0x2                                                  // 00000005BA9D: 02
	.short 0                                                   // 00000005BA9E: 0000
	.long 0x18d                                                // 00000005BAA0: 0000018D
	.long 0                                                    // 00000005BAA4: 00000000
	.long 0x1e7                                                // 00000005BAA8: 000001E7
	.long 0                                                    // 00000005BAAC: 00000000
	.ascii "?"                                                 // 00000005BAB0: 3F
	.byte 0x1                                                  // 00000005BAB1: 01
	.short 0                                                   // 00000005BAB2: 0000
	.long 0                                                    // 00000005BAB4: 00000000
	.long 0x11a                                                // 00000005BAB8: 0000011A
	.long 0x1a8                                                // 00000005BABC: 000001A8
	.long 0x21b                                                // 00000005BAC0: 0000021B
	.long 0x218                                                // 00000005BAC4: 00000218
	.long 0x19d                                                // 00000005BAC8: 0000019D
	.long 0                                                    // 00000005BACC: 00000000
	.ascii "G"                                                 // 00000005BAD0: 47
	.byte 0x2                                                  // 00000005BAD1: 02
	.short 0                                                   // 00000005BAD2: 0000
	.long 0                                                    // 00000005BAD4: 00000000
	.long 0x1ba                                                // 00000005BAD8: 000001BA
	.long 0                                                    // 00000005BADC: 00000000
	.long 0x18a                                                // 00000005BAE0: 0000018A
	.long 0x18e                                                // 00000005BAE4: 0000018E
	.long 0x11f                                                // 00000005BAE8: 0000011F
	.long 0                                                    // 00000005BAEC: 00000000
	.long 0x197                                                // 00000005BAF0: 00000197
	.ascii "#"                                                 // 00000005BAF4: 23
	.byte 0x1                                                  // 00000005BAF5: 01
	.short 0                                                   // 00000005BAF6: 0000
	.long 0x193                                                // 00000005BAF8: 00000193
	.long 0x1ad                                                // 00000005BAFC: 000001AD
	.long 0                                                    // 00000005BB00: 00000000
	.ascii "p"                                                 // 00000005BB04: 70
	.byte 0                                                    // 00000005BB05: 00
	.short 0                                                   // 00000005BB06: 0000
	.long 0x211                                                // 00000005BB08: 00000211
	.long 0                                                    // 00000005BB0C: 00000000
	.ascii "R"                                                 // 00000005BB10: 52
	.byte 0x2                                                  // 00000005BB11: 02
	.short 0                                                   // 00000005BB12: 0000
	.long 0x1f9                                                // 00000005BB14: 000001F9
	.ascii "%"                                                 // 00000005BB18: 25
	.byte 0x2                                                  // 00000005BB19: 02
	.short 0                                                   // 00000005BB1A: 0000
	.long 0x1ea                                                // 00000005BB1C: 000001EA
	.long 0                                                    // 00000005BB20: 00000000
	.long 0xdb                                                 // 00000005BB24: 000000DB
	.long 0                                                    // 00000005BB28: 00000000
	.long 0                                                    // 00000005BB2C: 00000000
	.long 0                                                    // 00000005BB30: 00000000
	.ascii "Z"                                                 // 00000005BB34: 5A
	.byte 0x1                                                  // 00000005BB35: 01
	.short 0                                                   // 00000005BB36: 0000
	.long 0                                                    // 00000005BB38: 00000000
	.long 0x1a9                                                // 00000005BB3C: 000001A9
	.long 0xba                                                 // 00000005BB40: 000000BA
	.long 0xfe                                                 // 00000005BB44: 000000FE
	.long 0xbf                                                 // 00000005BB48: 000000BF
	.long 0                                                    // 00000005BB4C: 00000000
	.long 0xb1                                                 // 00000005BB50: 000000B1
	.long 0                                                    // 00000005BB54: 00000000
	.long 0x13                                                 // 00000005BB58: 00000013
	.ascii ">"                                                 // 00000005BB5C: 3E
	.byte 0x1                                                  // 00000005BB5D: 01
	.short 0                                                   // 00000005BB5E: 0000
	.ascii "Q"                                                 // 00000005BB60: 51
	.byte 0x2                                                  // 00000005BB61: 02
	.short 0                                                   // 00000005BB62: 0000
	.long 0x216                                                // 00000005BB64: 00000216
	.long 0xe5                                                 // 00000005BB68: 000000E5
	.ascii "("                                                 // 00000005BB6C: 28
	.byte 0x2                                                  // 00000005BB6D: 02
	.short 0                                                   // 00000005BB6E: 0000
	.long 0x1b7                                                // 00000005BB70: 000001B7
	.long 0                                                    // 00000005BB74: 00000000
	.long 0                                                    // 00000005BB78: 00000000
	.long 0                                                    // 00000005BB7C: 00000000
	.long 0                                                    // 00000005BB80: 00000000
	.long 0                                                    // 00000005BB84: 00000000
	.long 0x1bb                                                // 00000005BB88: 000001BB
	.long 0                                                    // 00000005BB8C: 00000000
	.long 0x20c                                                // 00000005BB90: 0000020C
	.long 0                                                    // 00000005BB94: 00000000
	.long 0                                                    // 00000005BB98: 00000000
	.long 0                                                    // 00000005BB9C: 00000000
	.long 0xb7                                                 // 00000005BBA0: 000000B7
	.long 0xb2                                                 // 00000005BBA4: 000000B2
	.ascii "4"                                                 // 00000005BBA8: 34
	.byte 0x2                                                  // 00000005BBA9: 02
	.short 0                                                   // 00000005BBAA: 0000
	.ascii "W"                                                 // 00000005BBAC: 57
	.byte 0x1                                                  // 00000005BBAD: 01
	.short 0                                                   // 00000005BBAE: 0000
	.long 0x8a                                                 // 00000005BBB0: 0000008A
	.long 0x1d4                                                // 00000005BBB4: 000001D4
	.ascii "+"                                                 // 00000005BBB8: 2B
	.byte 0x2                                                  // 00000005BBB9: 02
	.short 0                                                   // 00000005BBBA: 0000
	.long 0                                                    // 00000005BBBC: 00000000
	.long 0xc2                                                 // 00000005BBC0: 000000C2
	.ascii "f"                                                 // 00000005BBC4: 66
	.byte 0x1                                                  // 00000005BBC5: 01
	.short 0                                                   // 00000005BBC6: 0000
	.ascii "^"                                                 // 00000005BBC8: 5E
	.byte 0                                                    // 00000005BBC9: 00
	.short 0                                                   // 00000005BBCA: 0000
	.long 0x194                                                // 00000005BBCC: 00000194
	.long 0xa2                                                 // 00000005BBD0: 000000A2
	.ascii "^"                                                 // 00000005BBD4: 5E
	.byte 0x1                                                  // 00000005BBD5: 01
	.short 0                                                   // 00000005BBD6: 0000
	.ascii "/"                                                 // 00000005BBD8: 2F
	.byte 0x1                                                  // 00000005BBD9: 01
	.short 0                                                   // 00000005BBDA: 0000
	.long 0x11c                                                // 00000005BBDC: 0000011C
	.long 0                                                    // 00000005BBE0: 00000000
	.ascii "*"                                                 // 00000005BBE4: 2A
	.byte 0x2                                                  // 00000005BBE5: 02
	.short 0                                                   // 00000005BBE6: 0000
	.ascii "!"                                                 // 00000005BBE8: 21
	.byte 0x2                                                  // 00000005BBE9: 02
	.short 0                                                   // 00000005BBEA: 0000
	.long 0x1ec                                                // 00000005BBEC: 000001EC
	.long 0x1ac                                                // 00000005BBF0: 000001AC
	.long 0                                                    // 00000005BBF4: 00000000
	.long 0x1e0                                                // 00000005BBF8: 000001E0
	.ascii "'"                                                 // 00000005BBFC: 27
	.byte 0x1                                                  // 00000005BBFD: 01
	.short 0                                                   // 00000005BBFE: 0000
	.long 0                                                    // 00000005BC00: 00000000
	.long 0x185                                                // 00000005BC04: 00000185
	.long 0                                                    // 00000005BC08: 00000000
	.long 0x1c2                                                // 00000005BC0C: 000001C2
	.long 0x1e5                                                // 00000005BC10: 000001E5
	.long 0x117                                                // 00000005BC14: 00000117
	.long 0                                                    // 00000005BC18: 00000000
	.ascii "<"                                                 // 00000005BC1C: 3C
	.byte 0x1                                                  // 00000005BC1D: 01
	.short 0                                                   // 00000005BC1E: 0000
	.long 0                                                    // 00000005BC20: 00000000
	.long 0                                                    // 00000005BC24: 00000000
	.long 0                                                    // 00000005BC28: 00000000
	.long 0x1a7                                                // 00000005BC2C: 000001A7
	.long 0                                                    // 00000005BC30: 00000000
	.ascii "G"                                                 // 00000005BC34: 47
	.byte 0                                                    // 00000005BC35: 00
	.short 0                                                   // 00000005BC36: 0000
	.long 0x205                                                // 00000005BC38: 00000205
	.long 0x103                                                // 00000005BC3C: 00000103
	.long 0x217                                                // 00000005BC40: 00000217
	.long 0xd8                                                 // 00000005BC44: 000000D8
	.ascii "u"                                                 // 00000005BC48: 75
	.byte 0                                                    // 00000005BC49: 00
	.short 0                                                   // 00000005BC4A: 0000
	.ascii "F"                                                 // 00000005BC4C: 46
	.byte 0x1                                                  // 00000005BC4D: 01
	.short 0                                                   // 00000005BC4E: 0000
	.long 0                                                    // 00000005BC50: 00000000
	.long 0                                                    // 00000005BC54: 00000000
	.long 0x1a                                                 // 00000005BC58: 0000001A
	.long 0x1ab                                                // 00000005BC5C: 000001AB
	.long 0                                                    // 00000005BC60: 00000000
	.ascii "O"                                                 // 00000005BC64: 4F
	.byte 0                                                    // 00000005BC65: 00
	.short 0                                                   // 00000005BC66: 0000
	.ascii "="                                                 // 00000005BC68: 3D
	.byte 0                                                    // 00000005BC69: 00
	.short 0                                                   // 00000005BC6A: 0000
	.long 0xe2                                                 // 00000005BC6C: 000000E2
	.long 0x1fa                                                // 00000005BC70: 000001FA
	.long 0                                                    // 00000005BC74: 00000000
	.long 0x1cf                                                // 00000005BC78: 000001CF
	.long 0                                                    // 00000005BC7C: 00000000
	.long 0x1cc                                                // 00000005BC80: 000001CC
	.long 0x8e                                                 // 00000005BC84: 0000008E
	.long 0                                                    // 00000005BC88: 00000000
	.long 0                                                    // 00000005BC8C: 00000000
	.ascii ":"                                                 // 00000005BC90: 3A
	.byte 0x2                                                  // 00000005BC91: 02
	.short 0                                                   // 00000005BC92: 0000
	.ascii "+"                                                 // 00000005BC94: 2B
	.byte 0                                                    // 00000005BC95: 00
	.short 0                                                   // 00000005BC96: 0000
	.long 0x21f                                                // 00000005BC98: 0000021F
	.ascii "<"                                                 // 00000005BC9C: 3C
	.byte 0                                                    // 00000005BC9D: 00
	.short 0                                                   // 00000005BC9E: 0000
	.long 0                                                    // 00000005BCA0: 00000000
	.long 0xf4                                                 // 00000005BCA4: 000000F4
	.long 0                                                    // 00000005BCA8: 00000000
	.long 0                                                    // 00000005BCAC: 00000000
	.long 0                                                    // 00000005BCB0: 00000000
	.ascii "9"                                                 // 00000005BCB4: 39
	.byte 0x2                                                  // 00000005BCB5: 02
	.short 0                                                   // 00000005BCB6: 0000
	.ascii "U"                                                 // 00000005BCB8: 55
	.byte 0x1                                                  // 00000005BCB9: 01
	.short 0                                                   // 00000005BCBA: 0000
	.long 0x1f                                                 // 00000005BCBC: 0000001F
	.long 0                                                    // 00000005BCC0: 00000000
	.ascii ")"                                                 // 00000005BCC4: 29
	.byte 0x1                                                  // 00000005BCC5: 01
	.short 0                                                   // 00000005BCC6: 0000
	.long 0                                                    // 00000005BCC8: 00000000
	.long 0                                                    // 00000005BCCC: 00000000
	.long 0xe6                                                 // 00000005BCD0: 000000E6
	.long 0                                                    // 00000005BCD4: 00000000
	.long 0x1b5                                                // 00000005BCD8: 000001B5
	.long 0x215                                                // 00000005BCDC: 00000215
	.ascii "q"                                                 // 00000005BCE0: 71
	.byte 0x1                                                  // 00000005BCE1: 01
	.short 0                                                   // 00000005BCE2: 0000
	.long 0                                                    // 00000005BCE4: 00000000
	.long 0                                                    // 00000005BCE8: 00000000
	.long 0x203                                                // 00000005BCEC: 00000203
	.long 0xf1                                                 // 00000005BCF0: 000000F1
	.long 0xc8                                                 // 00000005BCF4: 000000C8
	.long 0                                                    // 00000005BCF8: 00000000
	.long 0x207                                                // 00000005BCFC: 00000207
	.long 0x1eb                                                // 00000005BD00: 000001EB
	.ascii "8"                                                 // 00000005BD04: 38
	.byte 0x2                                                  // 00000005BD05: 02
	.short 0                                                   // 00000005BD06: 0000
	.ascii "<"                                                 // 00000005BD08: 3C
	.byte 0x2                                                  // 00000005BD09: 02
	.short 0                                                   // 00000005BD0A: 0000
	.ascii "\n"                                                // 00000005BD0C: 0A
	.byte 0x2                                                  // 00000005BD0D: 02
	.short 0                                                   // 00000005BD0E: 0000
	.ascii "&"                                                 // 00000005BD10: 26
	.byte 0                                                    // 00000005BD11: 00
	.short 0                                                   // 00000005BD12: 0000
	.long 0x10f                                                // 00000005BD14: 0000010F
	.long 0                                                    // 00000005BD18: 00000000
	.long 0                                                    // 00000005BD1C: 00000000
	.long 0x11e                                                // 00000005BD20: 0000011E
	.long 0x7f                                                 // 00000005BD24: 0000007F
	.long 0                                                    // 00000005BD28: 00000000
	.long 0x1de                                                // 00000005BD2C: 000001DE
	.ascii "O"                                                 // 00000005BD30: 4F
	.byte 0x1                                                  // 00000005BD31: 01
	.short 0                                                   // 00000005BD32: 0000
	.ascii "1"                                                 // 00000005BD34: 31
	.byte 0x2                                                  // 00000005BD35: 02
	.short 0                                                   // 00000005BD36: 0000
	.ascii "W"                                                 // 00000005BD38: 57
	.byte 0                                                    // 00000005BD39: 00
	.short 0                                                   // 00000005BD3A: 0000
	.ascii "9"                                                 // 00000005BD3C: 39
	.byte 0x1                                                  // 00000005BD3D: 01
	.short 0                                                   // 00000005BD3E: 0000
	.long 0x110                                                // 00000005BD40: 00000110
	.long 0x9e                                                 // 00000005BD44: 0000009E
	.long 0                                                    // 00000005BD48: 00000000
	.ascii "e"                                                 // 00000005BD4C: 65
	.byte 0x1                                                  // 00000005BD4D: 01
	.short 0                                                   // 00000005BD4E: 0000
	.long 0                                                    // 00000005BD50: 00000000
	.long 0                                                    // 00000005BD54: 00000000
	.long 0                                                    // 00000005BD58: 00000000
	.ascii "|"                                                 // 00000005BD5C: 7C
	.byte 0x1                                                  // 00000005BD5D: 01
	.short 0                                                   // 00000005BD5E: 0000
	.long 0xe8                                                 // 00000005BD60: 000000E8
	.long 0xcb                                                 // 00000005BD64: 000000CB
	.long 0x1fe                                                // 00000005BD68: 000001FE
	.long 0x1c7                                                // 00000005BD6C: 000001C7
	.ascii "`"                                                 // 00000005BD70: 60
	.byte 0                                                    // 00000005BD71: 00
	.short 0                                                   // 00000005BD72: 0000
	.long 0x1d0                                                // 00000005BD74: 000001D0
	.long 0x214                                                // 00000005BD78: 00000214
	.long 0                                                    // 00000005BD7C: 00000000
	.long 0                                                    // 00000005BD80: 00000000
	.long 0xf9                                                 // 00000005BD84: 000000F9
	.ascii "	"                                                 // 00000005BD88: 09
	.byte 0x2                                                  // 00000005BD89: 02
	.short 0                                                   // 00000005BD8A: 0000
	.long 0                                                    // 00000005BD8C: 00000000
	.long 0xb5                                                 // 00000005BD90: 000000B5
	.ascii ";"                                                 // 00000005BD94: 3B
	.byte 0x2                                                  // 00000005BD95: 02
	.short 0                                                   // 00000005BD96: 0000
	.long 0x1fc                                                // 00000005BD98: 000001FC
	.long 0x9f                                                 // 00000005BD9C: 0000009F
	.long 0x1bf                                                // 00000005BDA0: 000001BF
	.long 0                                                    // 00000005BDA4: 00000000
	.long 0x1bc                                                // 00000005BDA8: 000001BC
	.long 0x180                                                // 00000005BDAC: 00000180
	.ascii "	"                                                 // 00000005BDB0: 09
	.byte 0x1                                                  // 00000005BDB1: 01
	.short 0                                                   // 00000005BDB2: 0000
	.long 0                                                    // 00000005BDB4: 00000000
	.long 0                                                    // 00000005BDB8: 00000000
	.long 0x93                                                 // 00000005BDBC: 00000093
	.ascii "I"                                                 // 00000005BDC0: 49
	.byte 0                                                    // 00000005BDC1: 00
	.short 0                                                   // 00000005BDC2: 0000
	.long 0                                                    // 00000005BDC4: 00000000
	.long 0x19b                                                // 00000005BDC8: 0000019B
	.long 0x186                                                // 00000005BDCC: 00000186
	.long 0x1d3                                                // 00000005BDD0: 000001D3
	.long 0                                                    // 00000005BDD4: 00000000
	.long 0                                                    // 00000005BDD8: 00000000
	.long 0                                                    // 00000005BDDC: 00000000
	.long 0x101                                                // 00000005BDE0: 00000101
	.long 0x84                                                 // 00000005BDE4: 00000084
	.long 0x1dd                                                // 00000005BDE8: 000001DD
	.long 0xd4                                                 // 00000005BDEC: 000000D4
	.ascii "."                                                 // 00000005BDF0: 2E
	.byte 0                                                    // 00000005BDF1: 00
	.short 0                                                   // 00000005BDF2: 0000
	.long 0x1b9                                                // 00000005BDF4: 000001B9
	.long 0xf0                                                 // 00000005BDF8: 000000F0
	.long 0                                                    // 00000005BDFC: 00000000
	.long 0                                                    // 00000005BE00: 00000000
	.long 0                                                    // 00000005BE04: 00000000
	.long 0                                                    // 00000005BE08: 00000000
	.long 0                                                    // 00000005BE0C: 00000000
	.long 0                                                    // 00000005BE10: 00000000
	.long 0                                                    // 00000005BE14: 00000000
	.long 0                                                    // 00000005BE18: 00000000
	.long 0                                                    // 00000005BE1C: 00000000
	.long 0                                                    // 00000005BE20: 00000000
	.long 0                                                    // 00000005BE24: 00000000
	.long 0                                                    // 00000005BE28: 00000000
	.long 0                                                    // 00000005BE2C: 00000000
	.long 0                                                    // 00000005BE30: 00000000
	.long 0                                                    // 00000005BE34: 00000000
	.long 0                                                    // 00000005BE38: 00000000
	.long 0                                                    // 00000005BE3C: 00000000
	.long 0                                                    // 00000005BE40: 00000000
	.long 0                                                    // 00000005BE44: 00000000
	.long 0                                                    // 00000005BE48: 00000000
	.long 0                                                    // 00000005BE4C: 00000000
	.long 0                                                    // 00000005BE50: 00000000
	.long 0                                                    // 00000005BE54: 00000000
	.long 0                                                    // 00000005BE58: 00000000
	.long 0                                                    // 00000005BE5C: 00000000
	.long 0                                                    // 00000005BE60: 00000000
	.long 0                                                    // 00000005BE64: 00000000
	.long 0                                                    // 00000005BE68: 00000000
	.long 0x7                                                  // 00000005BE6C: 00000007
	.long 0x2                                                  // 00000005BE70: 00000002
	.long 0                                                    // 00000005BE74: 00000000
	.long 0                                                    // 00000005BE78: 00000000
	.long 0                                                    // 00000005BE7C: 00000000
	.long 0                                                    // 00000005BE80: 00000000
	.long 0                                                    // 00000005BE84: 00000000
	.long 0                                                    // 00000005BE88: 00000000
	.long 0                                                    // 00000005BE8C: 00000000
	.long 0                                                    // 00000005BE90: 00000000
	.long 0                                                    // 00000005BE94: 00000000
	.long 0                                                    // 00000005BE98: 00000000
	.long 0                                                    // 00000005BE9C: 00000000
	.long 0                                                    // 00000005BEA0: 00000000
	.long 0                                                    // 00000005BEA4: 00000000
	.long 0                                                    // 00000005BEA8: 00000000
	.long 0                                                    // 00000005BEAC: 00000000
	.long 0                                                    // 00000005BEB0: 00000000
	.long 0                                                    // 00000005BEB4: 00000000
	.long 0                                                    // 00000005BEB8: 00000000
	.long 0                                                    // 00000005BEBC: 00000000
	.long 0x18                                                 // 00000005BEC0: 00000018
	.long 0                                                    // 00000005BEC4: 00000000
	.long 0                                                    // 00000005BEC8: 00000000
	.long 0x6                                                  // 00000005BECC: 00000006
	.long 0                                                    // 00000005BED0: 00000000
	.long 0x15                                                 // 00000005BED4: 00000015
	.long 0                                                    // 00000005BED8: 00000000
	.long 0                                                    // 00000005BEDC: 00000000
	.long 0                                                    // 00000005BEE0: 00000000
	.long 0                                                    // 00000005BEE4: 00000000
	.long 0                                                    // 00000005BEE8: 00000000
	.long 0                                                    // 00000005BEEC: 00000000
	.long 0                                                    // 00000005BEF0: 00000000
	.long 0                                                    // 00000005BEF4: 00000000
	.long 0                                                    // 00000005BEF8: 00000000
	.long 0                                                    // 00000005BEFC: 00000000
	.long 0                                                    // 00000005BF00: 00000000
	.long 0                                                    // 00000005BF04: 00000000
	.long 0                                                    // 00000005BF08: 00000000
	.long 0                                                    // 00000005BF0C: 00000000
	.long 0                                                    // 00000005BF10: 00000000
	.long 0                                                    // 00000005BF14: 00000000
	.long 0                                                    // 00000005BF18: 00000000
	.long 0x17                                                 // 00000005BF1C: 00000017
	.long 0                                                    // 00000005BF20: 00000000
	.long 0                                                    // 00000005BF24: 00000000
	.long 0                                                    // 00000005BF28: 00000000
	.long 0                                                    // 00000005BF2C: 00000000
	.long 0                                                    // 00000005BF30: 00000000
	.long 0                                                    // 00000005BF34: 00000000
	.long 0                                                    // 00000005BF38: 00000000
	.long 0                                                    // 00000005BF3C: 00000000
	.long 0                                                    // 00000005BF40: 00000000
	.long 0                                                    // 00000005BF44: 00000000
	.ascii "D"                                                 // 00000005BF48: 44
	.byte 0                                                    // 00000005BF49: 00
	.short 0                                                   // 00000005BF4A: 0000
	.long 0                                                    // 00000005BF4C: 00000000
	.long 0                                                    // 00000005BF50: 00000000
	.long 0                                                    // 00000005BF54: 00000000
	.long 0xe                                                  // 00000005BF58: 0000000E
	.long 0                                                    // 00000005BF5C: 00000000
	.long 0                                                    // 00000005BF60: 00000000
	.long 0                                                    // 00000005BF64: 00000000
	.long 0                                                    // 00000005BF68: 00000000
	.long 0                                                    // 00000005BF6C: 00000000
	.long 0                                                    // 00000005BF70: 00000000
	.long 0                                                    // 00000005BF74: 00000000
	.ascii "$"                                                 // 00000005BF78: 24
	.byte 0                                                    // 00000005BF79: 00
	.short 0                                                   // 00000005BF7A: 0000
	.long 0                                                    // 00000005BF7C: 00000000
	.ascii "6"                                                 // 00000005BF80: 36
	.byte 0                                                    // 00000005BF81: 00
	.short 0                                                   // 00000005BF82: 0000
	.long 0                                                    // 00000005BF84: 00000000
	.long 0                                                    // 00000005BF88: 00000000
	.long 0                                                    // 00000005BF8C: 00000000
	.long 0                                                    // 00000005BF90: 00000000
	.ascii "b"                                                 // 00000005BF94: 62
	.byte 0                                                    // 00000005BF95: 00
	.short 0                                                   // 00000005BF96: 0000
	.long 0                                                    // 00000005BF98: 00000000
	.long 0                                                    // 00000005BF9C: 00000000
	.long 0                                                    // 00000005BFA0: 00000000
	.ascii "X"                                                 // 00000005BFA4: 58
	.byte 0                                                    // 00000005BFA5: 00
	.short 0                                                   // 00000005BFA6: 0000
	.long 0                                                    // 00000005BFA8: 00000000
	.long 0                                                    // 00000005BFAC: 00000000
	.long 0                                                    // 00000005BFB0: 00000000
	.ascii "S"                                                 // 00000005BFB4: 53
	.byte 0                                                    // 00000005BFB5: 00
	.short 0                                                   // 00000005BFB6: 0000
	.long 0                                                    // 00000005BFB8: 00000000
	.long 0                                                    // 00000005BFBC: 00000000
	.long 0                                                    // 00000005BFC0: 00000000
	.long 0                                                    // 00000005BFC4: 00000000
	.long 0                                                    // 00000005BFC8: 00000000
	.long 0                                                    // 00000005BFCC: 00000000
	.long 0                                                    // 00000005BFD0: 00000000
	.long 0                                                    // 00000005BFD4: 00000000
	.ascii "K"                                                 // 00000005BFD8: 4B
	.byte 0                                                    // 00000005BFD9: 00
	.short 0                                                   // 00000005BFDA: 0000
	.long 0                                                    // 00000005BFDC: 00000000
	.long 0                                                    // 00000005BFE0: 00000000
	.long 0                                                    // 00000005BFE4: 00000000
	.long 0                                                    // 00000005BFE8: 00000000
	.long 0                                                    // 00000005BFEC: 00000000
	.ascii "R"                                                 // 00000005BFF0: 52
	.byte 0                                                    // 00000005BFF1: 00
	.short 0                                                   // 00000005BFF2: 0000
	.ascii "0"                                                 // 00000005BFF4: 30
	.byte 0                                                    // 00000005BFF5: 00
	.short 0                                                   // 00000005BFF6: 0000
	.long 0                                                    // 00000005BFF8: 00000000
	.ascii "-"                                                 // 00000005BFFC: 2D
	.byte 0                                                    // 00000005BFFD: 00
	.short 0                                                   // 00000005BFFE: 0000
	.long 0                                                    // 00000005C000: 00000000
	.long 0                                                    // 00000005C004: 00000000
	.long 0                                                    // 00000005C008: 00000000
	.long 0                                                    // 00000005C00C: 00000000
	.ascii "5"                                                 // 00000005C010: 35
	.byte 0                                                    // 00000005C011: 00
	.short 0                                                   // 00000005C012: 0000
	.long 0                                                    // 00000005C014: 00000000
	.long 0                                                    // 00000005C018: 00000000
	.long 0                                                    // 00000005C01C: 00000000
	.long 0                                                    // 00000005C020: 00000000
	.long 0                                                    // 00000005C024: 00000000
	.ascii "%"                                                 // 00000005C028: 25
	.byte 0                                                    // 00000005C029: 00
	.short 0                                                   // 00000005C02A: 0000
	.long 0                                                    // 00000005C02C: 00000000
	.ascii "Q"                                                 // 00000005C030: 51
	.byte 0                                                    // 00000005C031: 00
	.short 0                                                   // 00000005C032: 0000
	.long 0                                                    // 00000005C034: 00000000
	.long 0                                                    // 00000005C038: 00000000
	.long 0                                                    // 00000005C03C: 00000000
	.ascii "t"                                                 // 00000005C040: 74
	.byte 0                                                    // 00000005C041: 00
	.short 0                                                   // 00000005C042: 0000
	.long 0                                                    // 00000005C044: 00000000
	.long 0x82                                                 // 00000005C048: 00000082
	.long 0                                                    // 00000005C04C: 00000000
	.ascii "]"                                                 // 00000005C050: 5D
	.byte 0                                                    // 00000005C051: 00
	.short 0                                                   // 00000005C052: 0000
	.long 0                                                    // 00000005C054: 00000000
	.long 0                                                    // 00000005C058: 00000000
	.long 0                                                    // 00000005C05C: 00000000
	.long 0                                                    // 00000005C060: 00000000
	.ascii "f"                                                 // 00000005C064: 66
	.byte 0                                                    // 00000005C065: 00
	.short 0                                                   // 00000005C066: 0000
	.ascii "3"                                                 // 00000005C068: 33
	.byte 0                                                    // 00000005C069: 00
	.short 0                                                   // 00000005C06A: 0000
	.long 0                                                    // 00000005C06C: 00000000
	.long 0                                                    // 00000005C070: 00000000
	.long 0                                                    // 00000005C074: 00000000
	.ascii ":"                                                 // 00000005C078: 3A
	.byte 0                                                    // 00000005C079: 00
	.short 0                                                   // 00000005C07A: 0000
	.long 0                                                    // 00000005C07C: 00000000
	.long 0                                                    // 00000005C080: 00000000
	.long 0                                                    // 00000005C084: 00000000
	.long 0                                                    // 00000005C088: 00000000
	.long 0x12                                                 // 00000005C08C: 00000012
	.long 0                                                    // 00000005C090: 00000000
	.ascii "v"                                                 // 00000005C094: 76
	.byte 0                                                    // 00000005C095: 00
	.short 0                                                   // 00000005C096: 0000
	.long 0                                                    // 00000005C098: 00000000
	.long 0                                                    // 00000005C09C: 00000000
	.long 0                                                    // 00000005C0A0: 00000000
	.long 0                                                    // 00000005C0A4: 00000000
	.long 0                                                    // 00000005C0A8: 00000000
	.ascii "y"                                                 // 00000005C0AC: 79
	.byte 0                                                    // 00000005C0AD: 00
	.short 0                                                   // 00000005C0AE: 0000
	.long 0                                                    // 00000005C0B0: 00000000
	.long 0                                                    // 00000005C0B4: 00000000
	.long 0                                                    // 00000005C0B8: 00000000
	.long 0xae                                                 // 00000005C0BC: 000000AE
	.long 0                                                    // 00000005C0C0: 00000000
	.long 0                                                    // 00000005C0C4: 00000000
	.long 0                                                    // 00000005C0C8: 00000000
	.long 0                                                    // 00000005C0CC: 00000000
	.long 0                                                    // 00000005C0D0: 00000000
	.ascii "z"                                                 // 00000005C0D4: 7A
	.byte 0                                                    // 00000005C0D5: 00
	.short 0                                                   // 00000005C0D6: 0000
	.long 0                                                    // 00000005C0D8: 00000000
	.long 0                                                    // 00000005C0DC: 00000000
	.long 0                                                    // 00000005C0E0: 00000000
	.ascii ">"                                                 // 00000005C0E4: 3E
	.byte 0                                                    // 00000005C0E5: 00
	.short 0                                                   // 00000005C0E6: 0000
	.long 0                                                    // 00000005C0E8: 00000000
	.long 0xa7                                                 // 00000005C0EC: 000000A7
	.long 0                                                    // 00000005C0F0: 00000000
	.ascii "B"                                                 // 00000005C0F4: 42
	.byte 0                                                    // 00000005C0F5: 00
	.short 0                                                   // 00000005C0F6: 0000
	.long 0                                                    // 00000005C0F8: 00000000
	.ascii ")"                                                 // 00000005C0FC: 29
	.byte 0                                                    // 00000005C0FD: 00
	.short 0                                                   // 00000005C0FE: 0000
	.long 0x1e                                                 // 00000005C100: 0000001E
	.long 0                                                    // 00000005C104: 00000000
	.long 0                                                    // 00000005C108: 00000000
	.long 0                                                    // 00000005C10C: 00000000
	.long 0x3                                                  // 00000005C110: 00000003
	.ascii "}"                                                 // 00000005C114: 7D
	.byte 0                                                    // 00000005C115: 00
	.short 0                                                   // 00000005C116: 0000
	.long 0                                                    // 00000005C118: 00000000
	.ascii "\""                                                // 00000005C11C: 22
	.byte 0                                                    // 00000005C11D: 00
	.short 0                                                   // 00000005C11E: 0000
	.long 0                                                    // 00000005C120: 00000000
	.long 0                                                    // 00000005C124: 00000000
	.ascii "E"                                                 // 00000005C128: 45
	.byte 0                                                    // 00000005C129: 00
	.short 0                                                   // 00000005C12A: 0000
	.long 0                                                    // 00000005C12C: 00000000
	.ascii "c"                                                 // 00000005C130: 63
	.byte 0                                                    // 00000005C131: 00
	.short 0                                                   // 00000005C132: 0000
	.long 0                                                    // 00000005C134: 00000000
	.long 0                                                    // 00000005C138: 00000000
	.long 0                                                    // 00000005C13C: 00000000
	.long 0                                                    // 00000005C140: 00000000
	.long 0                                                    // 00000005C144: 00000000
	.long 0                                                    // 00000005C148: 00000000
	.ascii "	"                                                 // 00000005C14C: 09
	.byte 0                                                    // 00000005C14D: 00
	.short 0                                                   // 00000005C14E: 0000
	.long 0                                                    // 00000005C150: 00000000
	.ascii "V"                                                 // 00000005C154: 56
	.byte 0                                                    // 00000005C155: 00
	.short 0                                                   // 00000005C156: 0000
	.long 0                                                    // 00000005C158: 00000000
	.long 0                                                    // 00000005C15C: 00000000
	.long 0                                                    // 00000005C160: 00000000
	.ascii "~"                                                 // 00000005C164: 7E
	.byte 0                                                    // 00000005C165: 00
	.short 0                                                   // 00000005C166: 0000
	.long 0                                                    // 00000005C168: 00000000
	.long 0                                                    // 00000005C16C: 00000000
	.ascii "7"                                                 // 00000005C170: 37
	.byte 0                                                    // 00000005C171: 00
	.short 0                                                   // 00000005C172: 0000
	.long 0                                                    // 00000005C174: 00000000
	.long 0xc6                                                 // 00000005C178: 000000C6
	.long 0                                                    // 00000005C17C: 00000000
	.long 0                                                    // 00000005C180: 00000000
	.long 0xcc                                                 // 00000005C184: 000000CC
	.long 0x83                                                 // 00000005C188: 00000083
	.long 0                                                    // 00000005C18C: 00000000
	.long 0xb4                                                 // 00000005C190: 000000B4
	.long 0                                                    // 00000005C194: 00000000
	.long 0                                                    // 00000005C198: 00000000
	.long 0                                                    // 00000005C19C: 00000000
	.long 0                                                    // 00000005C1A0: 00000000
	.long 0                                                    // 00000005C1A4: 00000000
	.long 0                                                    // 00000005C1A8: 00000000
	.long 0                                                    // 00000005C1AC: 00000000
	.long 0                                                    // 00000005C1B0: 00000000
	.long 0                                                    // 00000005C1B4: 00000000
	.long 0                                                    // 00000005C1B8: 00000000
	.long 0                                                    // 00000005C1BC: 00000000
	.long 0                                                    // 00000005C1C0: 00000000
	.long 0x97                                                 // 00000005C1C4: 00000097
	.ascii ";"                                                 // 00000005C1C8: 3B
	.byte 0                                                    // 00000005C1C9: 00
	.short 0                                                   // 00000005C1CA: 0000
	.long 0                                                    // 00000005C1CC: 00000000
	.long 0                                                    // 00000005C1D0: 00000000
	.long 0xe9                                                 // 00000005C1D4: 000000E9
	.long 0                                                    // 00000005C1D8: 00000000
	.long 0                                                    // 00000005C1DC: 00000000
	.long 0                                                    // 00000005C1E0: 00000000
	.long 0                                                    // 00000005C1E4: 00000000
	.long 0xd9                                                 // 00000005C1E8: 000000D9
	.long 0                                                    // 00000005C1EC: 00000000
	.long 0                                                    // 00000005C1F0: 00000000
	.long 0                                                    // 00000005C1F4: 00000000
	.long 0                                                    // 00000005C1F8: 00000000
	.long 0                                                    // 00000005C1FC: 00000000
	.long 0                                                    // 00000005C200: 00000000
	.long 0                                                    // 00000005C204: 00000000
	.long 0xc9                                                 // 00000005C208: 000000C9
	.ascii "2"                                                 // 00000005C20C: 32
	.byte 0                                                    // 00000005C20D: 00
	.short 0                                                   // 00000005C20E: 0000
	.long 0                                                    // 00000005C210: 00000000
	.long 0                                                    // 00000005C214: 00000000
	.long 0xcf                                                 // 00000005C218: 000000CF
	.ascii "!"                                                 // 00000005C21C: 21
	.byte 0                                                    // 00000005C21D: 00
	.short 0                                                   // 00000005C21E: 0000
	.long 0                                                    // 00000005C220: 00000000
	.long 0                                                    // 00000005C224: 00000000
	.long 0                                                    // 00000005C228: 00000000
	.long 0                                                    // 00000005C22C: 00000000
	.long 0                                                    // 00000005C230: 00000000
	.long 0                                                    // 00000005C234: 00000000
	.long 0xf                                                  // 00000005C238: 0000000F
	.long 0                                                    // 00000005C23C: 00000000
	.long 0                                                    // 00000005C240: 00000000
	.long 0                                                    // 00000005C244: 00000000
	.long 0                                                    // 00000005C248: 00000000
	.long 0                                                    // 00000005C24C: 00000000
	.long 0                                                    // 00000005C250: 00000000
	.long 0xa5                                                 // 00000005C254: 000000A5
	.long 0                                                    // 00000005C258: 00000000
	.long 0                                                    // 00000005C25C: 00000000
	.long 0                                                    // 00000005C260: 00000000
	.long 0                                                    // 00000005C264: 00000000
	.long 0                                                    // 00000005C268: 00000000
	.long 0                                                    // 00000005C26C: 00000000
	.long 0x1d                                                 // 00000005C270: 0000001D
	.long 0                                                    // 00000005C274: 00000000
	.long 0                                                    // 00000005C278: 00000000
	.long 0                                                    // 00000005C27C: 00000000
	.long 0                                                    // 00000005C280: 00000000
	.ascii "9"                                                 // 00000005C284: 39
	.byte 0                                                    // 00000005C285: 00
	.short 0                                                   // 00000005C286: 0000
	.ascii "#"                                                 // 00000005C288: 23
	.byte 0                                                    // 00000005C289: 00
	.short 0                                                   // 00000005C28A: 0000
	.long 0                                                    // 00000005C28C: 00000000
	.long 0                                                    // 00000005C290: 00000000
	.long 0x1b                                                 // 00000005C294: 0000001B
	.long 0                                                    // 00000005C298: 00000000
	.long 0x92                                                 // 00000005C29C: 00000092
	.ascii "_"                                                 // 00000005C2A0: 5F
	.byte 0                                                    // 00000005C2A1: 00
	.short 0                                                   // 00000005C2A2: 0000
	.long 0                                                    // 00000005C2A4: 00000000
	.long 0                                                    // 00000005C2A8: 00000000
	.long 0                                                    // 00000005C2AC: 00000000
	.long 0xbd                                                 // 00000005C2B0: 000000BD
	.long 0xce                                                 // 00000005C2B4: 000000CE
	.ascii "L"                                                 // 00000005C2B8: 4C
	.byte 0                                                    // 00000005C2B9: 00
	.short 0                                                   // 00000005C2BA: 0000
	.long 0                                                    // 00000005C2BC: 00000000
	.long 0                                                    // 00000005C2C0: 00000000
	.long 0                                                    // 00000005C2C4: 00000000
	.long 0                                                    // 00000005C2C8: 00000000
	.long 0                                                    // 00000005C2CC: 00000000
	.long 0                                                    // 00000005C2D0: 00000000
	.long 0                                                    // 00000005C2D4: 00000000
	.long 0                                                    // 00000005C2D8: 00000000
	.long 0xca                                                 // 00000005C2DC: 000000CA
	.long 0x9d                                                 // 00000005C2E0: 0000009D
	.long 0xfa                                                 // 00000005C2E4: 000000FA
	.long 0                                                    // 00000005C2E8: 00000000
	.long 0                                                    // 00000005C2EC: 00000000
	.long 0xd3                                                 // 00000005C2F0: 000000D3
	.long 0                                                    // 00000005C2F4: 00000000
	.long 0                                                    // 00000005C2F8: 00000000
	.long 0                                                    // 00000005C2FC: 00000000
	.long 0                                                    // 00000005C300: 00000000
	.long 0                                                    // 00000005C304: 00000000
	.long 0                                                    // 00000005C308: 00000000
	.long 0xa9                                                 // 00000005C30C: 000000A9
	.long 0                                                    // 00000005C310: 00000000
	.long 0                                                    // 00000005C314: 00000000
	.ascii "("                                                 // 00000005C318: 28
	.byte 0                                                    // 00000005C319: 00
	.short 0                                                   // 00000005C31A: 0000
	.long 0                                                    // 00000005C31C: 00000000
	.long 0                                                    // 00000005C320: 00000000
	.long 0                                                    // 00000005C324: 00000000
	.ascii "@"                                                 // 00000005C328: 40
	.byte 0x1                                                  // 00000005C329: 01
	.short 0                                                   // 00000005C32A: 0000
	.long 0                                                    // 00000005C32C: 00000000
	.long 0xd                                                  // 00000005C330: 0000000D
	.long 0                                                    // 00000005C334: 00000000
	.long 0                                                    // 00000005C338: 00000000
	.long 0                                                    // 00000005C33C: 00000000
	.long 0x118                                                // 00000005C340: 00000118
	.long 0                                                    // 00000005C344: 00000000
	.long 0xad                                                 // 00000005C348: 000000AD
	.long 0                                                    // 00000005C34C: 00000000
	.ascii "C"                                                 // 00000005C350: 43
	.byte 0x1                                                  // 00000005C351: 01
	.short 0                                                   // 00000005C352: 0000
	.long 0xa0                                                 // 00000005C354: 000000A0
	.long 0                                                    // 00000005C358: 00000000
	.long 0                                                    // 00000005C35C: 00000000
	.long 0                                                    // 00000005C360: 00000000
	.long 0x86                                                 // 00000005C364: 00000086
	.long 0xa3                                                 // 00000005C368: 000000A3
	.ascii "m"                                                 // 00000005C36C: 6D
	.byte 0                                                    // 00000005C36D: 00
	.short 0                                                   // 00000005C36E: 0000
	.long 0                                                    // 00000005C370: 00000000
	.long 0                                                    // 00000005C374: 00000000
	.ascii "|"                                                 // 00000005C378: 7C
	.byte 0                                                    // 00000005C379: 00
	.short 0                                                   // 00000005C37A: 0000
	.long 0                                                    // 00000005C37C: 00000000
	.ascii ":"                                                 // 00000005C380: 3A
	.byte 0x1                                                  // 00000005C381: 01
	.short 0                                                   // 00000005C382: 0000
	.long 0                                                    // 00000005C384: 00000000
	.long 0                                                    // 00000005C388: 00000000
	.long 0                                                    // 00000005C38C: 00000000
	.long 0                                                    // 00000005C390: 00000000
	.ascii "o"                                                 // 00000005C394: 6F
	.byte 0                                                    // 00000005C395: 00
	.short 0                                                   // 00000005C396: 0000
	.long 0xe7                                                 // 00000005C398: 000000E7
	.ascii "+"                                                 // 00000005C39C: 2B
	.byte 0x1                                                  // 00000005C39D: 01
	.short 0                                                   // 00000005C39E: 0000
	.long 0xde                                                 // 00000005C3A0: 000000DE
	.ascii "/"                                                 // 00000005C3A4: 2F
	.byte 0                                                    // 00000005C3A5: 00
	.short 0                                                   // 00000005C3A6: 0000
	.long 0                                                    // 00000005C3A8: 00000000
	.long 0                                                    // 00000005C3AC: 00000000
	.long 0                                                    // 00000005C3B0: 00000000
	.ascii "]"                                                 // 00000005C3B4: 5D
	.byte 0x1                                                  // 00000005C3B5: 01
	.short 0                                                   // 00000005C3B6: 0000
	.long 0                                                    // 00000005C3B8: 00000000
	.ascii "8"                                                 // 00000005C3BC: 38
	.byte 0                                                    // 00000005C3BD: 00
	.short 0                                                   // 00000005C3BE: 0000
	.ascii "V"                                                 // 00000005C3C0: 56
	.byte 0x1                                                  // 00000005C3C1: 01
	.short 0                                                   // 00000005C3C2: 0000
	.long 0xd0                                                 // 00000005C3C4: 000000D0
	.ascii "M"                                                 // 00000005C3C8: 4D
	.byte 0x1                                                  // 00000005C3C9: 01
	.short 0                                                   // 00000005C3CA: 0000
	.ascii "3"                                                 // 00000005C3CC: 33
	.byte 0x1                                                  // 00000005C3CD: 01
	.short 0                                                   // 00000005C3CE: 0000
	.long 0                                                    // 00000005C3D0: 00000000
	.long 0                                                    // 00000005C3D4: 00000000
	.long 0                                                    // 00000005C3D8: 00000000
	.long 0                                                    // 00000005C3DC: 00000000
	.ascii "i"                                                 // 00000005C3E0: 69
	.byte 0x1                                                  // 00000005C3E1: 01
	.short 0                                                   // 00000005C3E2: 0000
	.long 0                                                    // 00000005C3E4: 00000000
	.long 0x11b                                                // 00000005C3E8: 0000011B
	.long 0                                                    // 00000005C3EC: 00000000
	.long 0                                                    // 00000005C3F0: 00000000
	.long 0                                                    // 00000005C3F4: 00000000
	.ascii "g"                                                 // 00000005C3F8: 67
	.byte 0                                                    // 00000005C3F9: 00
	.short 0                                                   // 00000005C3FA: 0000
	.long 0                                                    // 00000005C3FC: 00000000
	.long 0x19                                                 // 00000005C400: 00000019
	.long 0                                                    // 00000005C404: 00000000
	.ascii "["                                                 // 00000005C408: 5B
	.byte 0                                                    // 00000005C409: 00
	.short 0                                                   // 00000005C40A: 0000
	.long 0x8c                                                 // 00000005C40C: 0000008C
	.long 0                                                    // 00000005C410: 00000000
	.long 0                                                    // 00000005C414: 00000000
	.long 0x112                                                // 00000005C418: 00000112
	.long 0                                                    // 00000005C41C: 00000000
	.long 0xea                                                 // 00000005C420: 000000EA
	.long 0xe1                                                 // 00000005C424: 000000E1
	.long 0                                                    // 00000005C428: 00000000
	.ascii "z"                                                 // 00000005C42C: 7A
	.byte 0x1                                                  // 00000005C42D: 01
	.short 0                                                   // 00000005C42E: 0000
	.ascii "X"                                                 // 00000005C430: 58
	.byte 0x1                                                  // 00000005C431: 01
	.short 0                                                   // 00000005C432: 0000
	.long 0                                                    // 00000005C434: 00000000
	.long 0xb9                                                 // 00000005C438: 000000B9
	.long 0                                                    // 00000005C43C: 00000000
	.long 0x9c                                                 // 00000005C440: 0000009C
	.ascii "4"                                                 // 00000005C444: 34
	.byte 0                                                    // 00000005C445: 00
	.short 0                                                   // 00000005C446: 0000
	.ascii "m"                                                 // 00000005C448: 6D
	.byte 0x1                                                  // 00000005C449: 01
	.short 0                                                   // 00000005C44A: 0000
	.ascii "~"                                                 // 00000005C44C: 7E
	.byte 0x1                                                  // 00000005C44D: 01
	.short 0                                                   // 00000005C44E: 0000
	.long 0                                                    // 00000005C450: 00000000
	.ascii "\""                                                // 00000005C454: 22
	.byte 0x1                                                  // 00000005C455: 01
	.short 0                                                   // 00000005C456: 0000
	.long 0x104                                                // 00000005C458: 00000104
	.long 0                                                    // 00000005C45C: 00000000
	.long 0                                                    // 00000005C460: 00000000
	.long 0                                                    // 00000005C464: 00000000
	.long 0                                                    // 00000005C468: 00000000
	.ascii "N"                                                 // 00000005C46C: 4E
	.byte 0                                                    // 00000005C46D: 00
	.short 0                                                   // 00000005C46E: 0000
	.long 0                                                    // 00000005C470: 00000000
	.ascii "k"                                                 // 00000005C474: 6B
	.byte 0x1                                                  // 00000005C475: 01
	.short 0                                                   // 00000005C476: 0000
	.ascii "2"                                                 // 00000005C478: 32
	.byte 0x1                                                  // 00000005C479: 01
	.short 0                                                   // 00000005C47A: 0000
	.long 0                                                    // 00000005C47C: 00000000
	.long 0                                                    // 00000005C480: 00000000
	.long 0                                                    // 00000005C484: 00000000
	.long 0xa8                                                 // 00000005C488: 000000A8
	.long 0x106                                                // 00000005C48C: 00000106
	.long 0                                                    // 00000005C490: 00000000
	.long 0x19a                                                // 00000005C494: 0000019A
	.long 0                                                    // 00000005C498: 00000000
	.ascii "Z"                                                 // 00000005C49C: 5A
	.byte 0                                                    // 00000005C49D: 00
	.short 0                                                   // 00000005C49E: 0000
	.long 0                                                    // 00000005C4A0: 00000000
	.ascii "J"                                                 // 00000005C4A4: 4A
	.byte 0x1                                                  // 00000005C4A5: 01
	.short 0                                                   // 00000005C4A6: 0000
	.long 0                                                    // 00000005C4A8: 00000000
	.long 0                                                    // 00000005C4AC: 00000000
	.long 0                                                    // 00000005C4B0: 00000000
	.long 0                                                    // 00000005C4B4: 00000000
	.ascii "("                                                 // 00000005C4B8: 28
	.byte 0x1                                                  // 00000005C4B9: 01
	.short 0                                                   // 00000005C4BA: 0000
	.long 0xe0                                                 // 00000005C4BC: 000000E0
	.long 0                                                    // 00000005C4C0: 00000000
	.long 0                                                    // 00000005C4C4: 00000000
	.long 0xf8                                                 // 00000005C4C8: 000000F8
	.long 0                                                    // 00000005C4CC: 00000000
	.long 0                                                    // 00000005C4D0: 00000000
	.long 0x89                                                 // 00000005C4D4: 00000089
	.long 0                                                    // 00000005C4D8: 00000000
	.long 0                                                    // 00000005C4DC: 00000000
	.long 0x1                                                  // 00000005C4E0: 00000001
	.ascii "d"                                                 // 00000005C4E4: 64
	.byte 0x1                                                  // 00000005C4E5: 01
	.short 0                                                   // 00000005C4E6: 0000
	.long 0x14                                                 // 00000005C4E8: 00000014
	.long 0                                                    // 00000005C4EC: 00000000
	.ascii "c"                                                 // 00000005C4F0: 63
	.byte 0x1                                                  // 00000005C4F1: 01
	.short 0                                                   // 00000005C4F2: 0000
	.long 0                                                    // 00000005C4F4: 00000000
	.long 0                                                    // 00000005C4F8: 00000000
	.ascii "A"                                                 // 00000005C4FC: 41
	.byte 0                                                    // 00000005C4FD: 00
	.short 0                                                   // 00000005C4FE: 0000
	.long 0                                                    // 00000005C500: 00000000
	.long 0                                                    // 00000005C504: 00000000
	.long 0x1a6                                                // 00000005C508: 000001A6
	.long 0                                                    // 00000005C50C: 00000000
	.long 0                                                    // 00000005C510: 00000000
	.long 0                                                    // 00000005C514: 00000000
	.ascii "D"                                                 // 00000005C518: 44
	.byte 0x1                                                  // 00000005C519: 01
	.short 0                                                   // 00000005C51A: 0000
	.long 0                                                    // 00000005C51C: 00000000
	.long 0x184                                                // 00000005C520: 00000184
	.long 0x187                                                // 00000005C524: 00000187
	.ascii "T"                                                 // 00000005C528: 54
	.byte 0x1                                                  // 00000005C529: 01
	.short 0                                                   // 00000005C52A: 0000
	.ascii "C"                                                 // 00000005C52C: 43
	.byte 0                                                    // 00000005C52D: 00
	.short 0                                                   // 00000005C52E: 0000
	.long 0                                                    // 00000005C530: 00000000
	.long 0                                                    // 00000005C534: 00000000
	.long 0                                                    // 00000005C538: 00000000
	.ascii "E"                                                 // 00000005C53C: 45
	.byte 0x1                                                  // 00000005C53D: 01
	.short 0                                                   // 00000005C53E: 0000
	.ascii "U"                                                 // 00000005C540: 55
	.byte 0                                                    // 00000005C541: 00
	.short 0                                                   // 00000005C542: 0000
	.long 0x1be                                                // 00000005C544: 000001BE
	.ascii "*"                                                 // 00000005C548: 2A
	.byte 0x1                                                  // 00000005C549: 01
	.short 0                                                   // 00000005C54A: 0000
	.long 0                                                    // 00000005C54C: 00000000
	.long 0                                                    // 00000005C550: 00000000
	.long 0x1a0                                                // 00000005C554: 000001A0
	.ascii "["                                                 // 00000005C558: 5B
	.byte 0x1                                                  // 00000005C559: 01
	.short 0                                                   // 00000005C55A: 0000
	.long 0                                                    // 00000005C55C: 00000000
	.long 0xaf                                                 // 00000005C560: 000000AF
	.ascii "R"                                                 // 00000005C564: 52
	.byte 0x1                                                  // 00000005C565: 01
	.short 0                                                   // 00000005C566: 0000
	.long 0xf3                                                 // 00000005C568: 000000F3
	.long 0                                                    // 00000005C56C: 00000000
	.long 0x81                                                 // 00000005C570: 00000081
	.ascii "$"                                                 // 00000005C574: 24
	.byte 0x1                                                  // 00000005C575: 01
	.short 0                                                   // 00000005C576: 0000
	.long 0x1da                                                // 00000005C578: 000001DA
	.long 0                                                    // 00000005C57C: 00000000
	.ascii "l"                                                 // 00000005C580: 6C
	.byte 0x1                                                  // 00000005C581: 01
	.short 0                                                   // 00000005C582: 0000
	.long 0x198                                                // 00000005C584: 00000198
	.long 0                                                    // 00000005C588: 00000000
	.long 0x1b4                                                // 00000005C58C: 000001B4
	.long 0xaa                                                 // 00000005C590: 000000AA
	.long 0                                                    // 00000005C594: 00000000
	.long 0x1c6                                                // 00000005C598: 000001C6
	.long 0x100                                                // 00000005C59C: 00000100
	.long 0                                                    // 00000005C5A0: 00000000
	.long 0                                                    // 00000005C5A4: 00000000
	.ascii "="                                                 // 00000005C5A8: 3D
	.byte 0x1                                                  // 00000005C5A9: 01
	.short 0                                                   // 00000005C5AA: 0000
	.ascii "Y"                                                 // 00000005C5AC: 59
	.byte 0x1                                                  // 00000005C5AD: 01
	.short 0                                                   // 00000005C5AE: 0000
	.long 0xe4                                                 // 00000005C5B0: 000000E4
	.long 0                                                    // 00000005C5B4: 00000000
	.long 0x88                                                 // 00000005C5B8: 00000088
	.long 0                                                    // 00000005C5BC: 00000000
	.long 0                                                    // 00000005C5C0: 00000000
	.long 0x111                                                // 00000005C5C4: 00000111
	.long 0                                                    // 00000005C5C8: 00000000
	.long 0xa6                                                 // 00000005C5CC: 000000A6
	.long 0                                                    // 00000005C5D0: 00000000
	.long 0xef                                                 // 00000005C5D4: 000000EF
	.long 0x105                                                // 00000005C5D8: 00000105
	.long 0x91                                                 // 00000005C5DC: 00000091
	.ascii "t"                                                 // 00000005C5E0: 74
	.byte 0x1                                                  // 00000005C5E1: 01
	.short 0                                                   // 00000005C5E2: 0000
	.long 0                                                    // 00000005C5E4: 00000000
	.long 0                                                    // 00000005C5E8: 00000000
	.ascii "a"                                                 // 00000005C5EC: 61
	.byte 0                                                    // 00000005C5ED: 00
	.short 0                                                   // 00000005C5EE: 0000
	.long 0                                                    // 00000005C5F0: 00000000
	.long 0                                                    // 00000005C5F4: 00000000
	.long 0                                                    // 00000005C5F8: 00000000
	.long 0                                                    // 00000005C5FC: 00000000
	.long 0                                                    // 00000005C600: 00000000
	.long 0xc4                                                 // 00000005C604: 000000C4
	.long 0                                                    // 00000005C608: 00000000
	.long 0                                                    // 00000005C60C: 00000000
	.ascii "h"                                                 // 00000005C610: 68
	.byte 0                                                    // 00000005C611: 00
	.short 0                                                   // 00000005C612: 0000
	.long 0                                                    // 00000005C614: 00000000
	.long 0                                                    // 00000005C618: 00000000
	.ascii ","                                                 // 00000005C61C: 2C
	.byte 0                                                    // 00000005C61D: 00
	.short 0                                                   // 00000005C61E: 0000
	.long 0                                                    // 00000005C620: 00000000
	.long 0xf7                                                 // 00000005C624: 000000F7
	.ascii "4"                                                 // 00000005C628: 34
	.byte 0x1                                                  // 00000005C629: 01
	.short 0                                                   // 00000005C62A: 0000
	.long 0                                                    // 00000005C62C: 00000000
	.long 0                                                    // 00000005C630: 00000000
	.long 0                                                    // 00000005C634: 00000000
	.ascii "d"                                                 // 00000005C638: 64
	.byte 0                                                    // 00000005C639: 00
	.short 0                                                   // 00000005C63A: 0000
	.long 0                                                    // 00000005C63C: 00000000
	.long 0x19f                                                // 00000005C640: 0000019F
	.long 0x87                                                 // 00000005C644: 00000087
	.long 0x1b8                                                // 00000005C648: 000001B8
	.long 0x208                                                // 00000005C64C: 00000208
	.long 0                                                    // 00000005C650: 00000000
	.long 0x1c3                                                // 00000005C654: 000001C3
	.long 0                                                    // 00000005C658: 00000000
	.long 0                                                    // 00000005C65C: 00000000
	.long 0x1f1                                                // 00000005C660: 000001F1
	.long 0x1b2                                                // 00000005C664: 000001B2
	.long 0                                                    // 00000005C668: 00000000
	.long 0x196                                                // 00000005C66C: 00000196
	.long 0x1f3                                                // 00000005C670: 000001F3
	.ascii "r"                                                 // 00000005C674: 72
	.byte 0x1                                                  // 00000005C675: 01
	.short 0                                                   // 00000005C676: 0000
	.ascii "H"                                                 // 00000005C678: 48
	.byte 0                                                    // 00000005C679: 00
	.short 0                                                   // 00000005C67A: 0000
	.long 0                                                    // 00000005C67C: 00000000
	.long 0                                                    // 00000005C680: 00000000
	.long 0xbc                                                 // 00000005C684: 000000BC
	.long 0x201                                                // 00000005C688: 00000201
	.long 0                                                    // 00000005C68C: 00000000
	.ascii "`"                                                 // 00000005C690: 60
	.byte 0x1                                                  // 00000005C691: 01
	.short 0                                                   // 00000005C692: 0000
	.long 0x10e                                                // 00000005C694: 0000010E
	.long 0                                                    // 00000005C698: 00000000
	.ascii "\\"                                                // 00000005C69C: 5C
	.byte 0x1                                                  // 00000005C69D: 01
	.short 0                                                   // 00000005C69E: 0000
	.long 0xfb                                                 // 00000005C6A0: 000000FB
	.long 0                                                    // 00000005C6A4: 00000000
	.long 0                                                    // 00000005C6A8: 00000000
	.ascii "0"                                                 // 00000005C6AC: 30
	.byte 0x1                                                  // 00000005C6AD: 01
	.short 0                                                   // 00000005C6AE: 0000
	.long 0                                                    // 00000005C6B0: 00000000
	.long 0                                                    // 00000005C6B4: 00000000
	.long 0                                                    // 00000005C6B8: 00000000
	.long 0x5                                                  // 00000005C6BC: 00000005
	.ascii "}"                                                 // 00000005C6C0: 7D
	.byte 0x1                                                  // 00000005C6C1: 01
	.short 0                                                   // 00000005C6C2: 0000
	.long 0xc0                                                 // 00000005C6C4: 000000C0
	.ascii "0"                                                 // 00000005C6C8: 30
	.byte 0x2                                                  // 00000005C6C9: 02
	.short 0                                                   // 00000005C6CA: 0000
	.ascii "{"                                                 // 00000005C6CC: 7B
	.byte 0                                                    // 00000005C6CD: 00
	.short 0                                                   // 00000005C6CE: 0000
	.long 0x11d                                                // 00000005C6D0: 0000011D
	.long 0x1b6                                                // 00000005C6D4: 000001B6
	.long 0xb3                                                 // 00000005C6D8: 000000B3
	.long 0xfc                                                 // 00000005C6DC: 000000FC
	.long 0x1ca                                                // 00000005C6E0: 000001CA
	.long 0x1c8                                                // 00000005C6E4: 000001C8
	.ascii "."                                                 // 00000005C6E8: 2E
	.byte 0x1                                                  // 00000005C6E9: 01
	.short 0                                                   // 00000005C6EA: 0000
	.long 0                                                    // 00000005C6EC: 00000000
	.long 0                                                    // 00000005C6F0: 00000000
	.ascii "."                                                 // 00000005C6F4: 2E
	.byte 0x2                                                  // 00000005C6F5: 02
	.short 0                                                   // 00000005C6F6: 0000
	.long 0                                                    // 00000005C6F8: 00000000
	.long 0x9b                                                 // 00000005C6FC: 0000009B
	.long 0x204                                                // 00000005C700: 00000204
	.long 0x1d2                                                // 00000005C704: 000001D2
	.long 0x115                                                // 00000005C708: 00000115
	.long 0                                                    // 00000005C70C: 00000000
	.long 0x1e8                                                // 00000005C710: 000001E8
	.long 0                                                    // 00000005C714: 00000000
	.ascii "A"                                                 // 00000005C718: 41
	.byte 0x1                                                  // 00000005C719: 01
	.short 0                                                   // 00000005C71A: 0000
	.ascii "x"                                                 // 00000005C71C: 78
	.byte 0x1                                                  // 00000005C71D: 01
	.short 0                                                   // 00000005C71E: 0000
	.long 0                                                    // 00000005C720: 00000000
	.long 0x1a3                                                // 00000005C724: 000001A3
	.long 0                                                    // 00000005C728: 00000000
	.long 0                                                    // 00000005C72C: 00000000
	.long 0                                                    // 00000005C730: 00000000
	.long 0x90                                                 // 00000005C734: 00000090
	.long 0xdc                                                 // 00000005C738: 000000DC
	.long 0x1f2                                                // 00000005C73C: 000001F2
	.long 0                                                    // 00000005C740: 00000000
	.long 0                                                    // 00000005C744: 00000000

	.section	.rodata,#alloc
	.type	mul_x_x.kd,@object
mul_x_x.kd:
	.long 0                                                    // 000000061500: 00000000
	.long 0                                                    // 000000061504: 00000000
	.long 0x110                                                // 000000061508: 00000110
	.long 0                                                    // 00000006150C: 00000000
	.long 0x5b00                                               // 000000061510: 00005B00
	.long 0                                                    // 000000061514: 00000000
	.long 0                                                    // 000000061518: 00000000
	.long 0                                                    // 00000006151C: 00000000
	.long 0                                                    // 000000061520: 00000000
	.long 0                                                    // 000000061524: 00000000
	.long 0                                                    // 000000061528: 00000000
	.long 0                                                    // 00000006152C: 00000000
	.long 0x60af0100                                           // 000000061530: 60AF0100
	.long 0x84                                                 // 000000061534: 00000084
	.long 0x408                                                // 000000061538: 00000408
	.long 0                                                    // 00000006153C: 00000000
	.type	mul_get_global_offset_x.kd,@object
mul_get_global_offset_x.kd:
	.long 0                                                    // 000000061540: 00000000
	.long 0                                                    // 000000061544: 00000000
	.long 0x110                                                // 000000061548: 00000110
	.long 0                                                    // 00000006154C: 00000000
	.long 0x5bc0                                               // 000000061550: 00005BC0
	.long 0                                                    // 000000061554: 00000000
	.long 0                                                    // 000000061558: 00000000
	.long 0                                                    // 00000006155C: 00000000
	.long 0                                                    // 000000061560: 00000000
	.long 0                                                    // 000000061564: 00000000
	.long 0                                                    // 000000061568: 00000000
	.long 0                                                    // 00000006156C: 00000000
	.long 0x60af0101                                           // 000000061570: 60AF0101
	.long 0x1384                                               // 000000061574: 00001384
	.long 0x408                                                // 000000061578: 00000408
	.long 0                                                    // 00000006157C: 00000000
	.type	mul_get_local_id_x.kd,@object
mul_get_local_id_x.kd:
	.long 0                                                    // 000000061580: 00000000
	.long 0                                                    // 000000061584: 00000000
	.long 0x110                                                // 000000061588: 00000110
	.long 0                                                    // 00000006158C: 00000000
	.long 0x5c80                                               // 000000061590: 00005C80
	.long 0                                                    // 000000061594: 00000000
	.long 0                                                    // 000000061598: 00000000
	.long 0                                                    // 00000006159C: 00000000
	.long 0                                                    // 0000000615A0: 00000000
	.long 0                                                    // 0000000615A4: 00000000
	.long 0                                                    // 0000000615A8: 00000000
	.long 0                                                    // 0000000615AC: 00000000
	.long 0x60af0101                                           // 0000000615B0: 60AF0101
	.long 0x1384                                               // 0000000615B4: 00001384
	.long 0x408                                                // 0000000615B8: 00000408
	.long 0                                                    // 0000000615BC: 00000000
	.type	mul_get_group_id_x.kd,@object
mul_get_group_id_x.kd:
	.long 0                                                    // 0000000615C0: 00000000
	.long 0                                                    // 0000000615C4: 00000000
	.long 0x110                                                // 0000000615C8: 00000110
	.long 0                                                    // 0000000615CC: 00000000
	.ascii "@]"                                                // 0000000615D0: 5D40
	.short 0                                                   // 0000000615D2: 0000
	.long 0                                                    // 0000000615D4: 00000000
	.long 0                                                    // 0000000615D8: 00000000
	.long 0                                                    // 0000000615DC: 00000000
	.long 0                                                    // 0000000615E0: 00000000
	.long 0                                                    // 0000000615E4: 00000000
	.long 0                                                    // 0000000615E8: 00000000
	.long 0                                                    // 0000000615EC: 00000000
	.long 0x60af0101                                           // 0000000615F0: 60AF0101
	.long 0x1384                                               // 0000000615F4: 00001384
	.long 0x408                                                // 0000000615F8: 00000408
	.long 0                                                    // 0000000615FC: 00000000
	.type	mul_get_local_size_x.kd,@object
mul_get_local_size_x.kd:
	.long 0                                                    // 000000061600: 00000000
	.long 0                                                    // 000000061604: 00000000
	.long 0x110                                                // 000000061608: 00000110
	.long 0                                                    // 00000006160C: 00000000
	.long 0x5e00                                               // 000000061610: 00005E00
	.long 0                                                    // 000000061614: 00000000
	.long 0                                                    // 000000061618: 00000000
	.long 0                                                    // 00000006161C: 00000000
	.long 0                                                    // 000000061620: 00000000
	.long 0                                                    // 000000061624: 00000000
	.long 0                                                    // 000000061628: 00000000
	.long 0                                                    // 00000006162C: 00000000
	.long 0x60af0101                                           // 000000061630: 60AF0101
	.long 0x1384                                               // 000000061634: 00001384
	.long 0x408                                                // 000000061638: 00000408
	.long 0                                                    // 00000006163C: 00000000
	.type	mul_get_global_id_x.kd,@object
mul_get_global_id_x.kd:
	.long 0                                                    // 000000061640: 00000000
	.long 0                                                    // 000000061644: 00000000
	.long 0x110                                                // 000000061648: 00000110
	.long 0                                                    // 00000006164C: 00000000
	.long 0x5fc0                                               // 000000061650: 00005FC0
	.long 0                                                    // 000000061654: 00000000
	.long 0                                                    // 000000061658: 00000000
	.long 0                                                    // 00000006165C: 00000000
	.long 0                                                    // 000000061660: 00000000
	.long 0                                                    // 000000061664: 00000000
	.long 0                                                    // 000000061668: 00000000
	.long 0                                                    // 00000006166C: 00000000
	.long 0x60af0101                                           // 000000061670: 60AF0101
	.long 0x1384                                               // 000000061674: 00001384
	.long 0x408                                                // 000000061678: 00000408
	.long 0                                                    // 00000006167C: 00000000
	.type	mul_get_global_size_x.kd,@object
mul_get_global_size_x.kd:
	.long 0                                                    // 000000061680: 00000000
	.long 0                                                    // 000000061684: 00000000
	.long 0x110                                                // 000000061688: 00000110
	.long 0                                                    // 00000006168C: 00000000
	.long 0x6080                                               // 000000061690: 00006080
	.long 0                                                    // 000000061694: 00000000
	.long 0                                                    // 000000061698: 00000000
	.long 0                                                    // 00000006169C: 00000000
	.long 0                                                    // 0000000616A0: 00000000
	.long 0                                                    // 0000000616A4: 00000000
	.long 0                                                    // 0000000616A8: 00000000
	.long 0                                                    // 0000000616AC: 00000000
	.long 0x60af0101                                           // 0000000616B0: 60AF0101
	.long 0x1384                                               // 0000000616B4: 00001384
	.long 0x408                                                // 0000000616B8: 00000408
	.long 0                                                    // 0000000616BC: 00000000
	.type	mul_get_num_groups_x.kd,@object
mul_get_num_groups_x.kd:
	.long 0                                                    // 0000000616C0: 00000000
	.long 0                                                    // 0000000616C4: 00000000
	.long 0x110                                                // 0000000616C8: 00000110
	.long 0                                                    // 0000000616CC: 00000000
	.ascii "@b"                                                // 0000000616D0: 6240
	.short 0                                                   // 0000000616D2: 0000
	.long 0                                                    // 0000000616D4: 00000000
	.long 0                                                    // 0000000616D8: 00000000
	.long 0                                                    // 0000000616DC: 00000000
	.long 0                                                    // 0000000616E0: 00000000
	.long 0                                                    // 0000000616E4: 00000000
	.long 0                                                    // 0000000616E8: 00000000
	.long 0                                                    // 0000000616EC: 00000000
	.long 0x60af0101                                           // 0000000616F0: 60AF0101
	.long 0x1384                                               // 0000000616F4: 00001384
	.long 0x408                                                // 0000000616F8: 00000408
	.long 0                                                    // 0000000616FC: 00000000
	.type	mul_get_work_dim_x.kd,@object
mul_get_work_dim_x.kd:
	.long 0                                                    // 000000061700: 00000000
	.long 0                                                    // 000000061704: 00000000
	.long 0x110                                                // 000000061708: 00000110
	.long 0                                                    // 00000006170C: 00000000
	.long 0x6400                                               // 000000061710: 00006400
	.long 0                                                    // 000000061714: 00000000
	.long 0                                                    // 000000061718: 00000000
	.long 0                                                    // 00000006171C: 00000000
	.long 0                                                    // 000000061720: 00000000
	.long 0                                                    // 000000061724: 00000000
	.long 0                                                    // 000000061728: 00000000
	.long 0                                                    // 00000006172C: 00000000
	.long 0x60af0100                                           // 000000061730: 60AF0100
	.long 0x84                                                 // 000000061734: 00000084
	.long 0x408                                                // 000000061738: 00000408
	.long 0                                                    // 00000006173C: 00000000
	.type	mul_x_get_global_offset.kd,@object
mul_x_get_global_offset.kd:
	.long 0                                                    // 000000061740: 00000000
	.long 0                                                    // 000000061744: 00000000
	.long 0x110                                                // 000000061748: 00000110
	.long 0                                                    // 00000006174C: 00000000
	.long 0x64c0                                               // 000000061750: 000064C0
	.long 0                                                    // 000000061754: 00000000
	.long 0                                                    // 000000061758: 00000000
	.long 0                                                    // 00000006175C: 00000000
	.long 0                                                    // 000000061760: 00000000
	.long 0                                                    // 000000061764: 00000000
	.long 0                                                    // 000000061768: 00000000
	.long 0                                                    // 00000006176C: 00000000
	.long 0x60af0101                                           // 000000061770: 60AF0101
	.long 0x1384                                               // 000000061774: 00001384
	.long 0x408                                                // 000000061778: 00000408
	.long 0                                                    // 00000006177C: 00000000
	.type	mul_get_global_offset_get_global_offset.kd,@object
mul_get_global_offset_get_global_offset.kd:
	.long 0                                                    // 000000061780: 00000000
	.long 0                                                    // 000000061784: 00000000
	.long 0x110                                                // 000000061788: 00000110
	.long 0                                                    // 00000006178C: 00000000
	.long 0x6580                                               // 000000061790: 00006580
	.long 0                                                    // 000000061794: 00000000
	.long 0                                                    // 000000061798: 00000000
	.long 0                                                    // 00000006179C: 00000000
	.long 0                                                    // 0000000617A0: 00000000
	.long 0                                                    // 0000000617A4: 00000000
	.long 0                                                    // 0000000617A8: 00000000
	.long 0                                                    // 0000000617AC: 00000000
	.long 0x60af0101                                           // 0000000617B0: 60AF0101
	.long 0x1384                                               // 0000000617B4: 00001384
	.long 0x408                                                // 0000000617B8: 00000408
	.long 0                                                    // 0000000617BC: 00000000
	.type	mul_get_local_id_get_global_offset.kd,@object
mul_get_local_id_get_global_offset.kd:
	.long 0                                                    // 0000000617C0: 00000000
	.long 0                                                    // 0000000617C4: 00000000
	.long 0x110                                                // 0000000617C8: 00000110
	.long 0                                                    // 0000000617CC: 00000000
	.ascii "@f"                                                // 0000000617D0: 6640
	.short 0                                                   // 0000000617D2: 0000
	.long 0                                                    // 0000000617D4: 00000000
	.long 0                                                    // 0000000617D8: 00000000
	.long 0                                                    // 0000000617DC: 00000000
	.long 0                                                    // 0000000617E0: 00000000
	.long 0                                                    // 0000000617E4: 00000000
	.long 0                                                    // 0000000617E8: 00000000
	.long 0                                                    // 0000000617EC: 00000000
	.long 0x60af0101                                           // 0000000617F0: 60AF0101
	.long 0x1384                                               // 0000000617F4: 00001384
	.long 0x408                                                // 0000000617F8: 00000408
	.long 0                                                    // 0000000617FC: 00000000
	.type	mul_get_group_id_get_global_offset.kd,@object
mul_get_group_id_get_global_offset.kd:
	.long 0                                                    // 000000061800: 00000000
	.long 0                                                    // 000000061804: 00000000
	.long 0x110                                                // 000000061808: 00000110
	.long 0                                                    // 00000006180C: 00000000
	.long 0x6700                                               // 000000061810: 00006700
	.long 0                                                    // 000000061814: 00000000
	.long 0                                                    // 000000061818: 00000000
	.long 0                                                    // 00000006181C: 00000000
	.long 0                                                    // 000000061820: 00000000
	.long 0                                                    // 000000061824: 00000000
	.long 0                                                    // 000000061828: 00000000
	.long 0                                                    // 00000006182C: 00000000
	.long 0x60af0101                                           // 000000061830: 60AF0101
	.long 0x1384                                               // 000000061834: 00001384
	.long 0x408                                                // 000000061838: 00000408
	.long 0                                                    // 00000006183C: 00000000
	.type	mul_get_local_size_get_global_offset.kd,@object
mul_get_local_size_get_global_offset.kd:
	.long 0                                                    // 000000061840: 00000000
	.long 0                                                    // 000000061844: 00000000
	.long 0x110                                                // 000000061848: 00000110
	.long 0                                                    // 00000006184C: 00000000
	.long 0x67c0                                               // 000000061850: 000067C0
	.long 0                                                    // 000000061854: 00000000
	.long 0                                                    // 000000061858: 00000000
	.long 0                                                    // 00000006185C: 00000000
	.long 0                                                    // 000000061860: 00000000
	.long 0                                                    // 000000061864: 00000000
	.long 0                                                    // 000000061868: 00000000
	.long 0                                                    // 00000006186C: 00000000
	.long 0x60af0101                                           // 000000061870: 60AF0101
	.long 0x1384                                               // 000000061874: 00001384
	.long 0x408                                                // 000000061878: 00000408
	.long 0                                                    // 00000006187C: 00000000
	.type	mul_get_global_id_get_global_offset.kd,@object
mul_get_global_id_get_global_offset.kd:
	.long 0                                                    // 000000061880: 00000000
	.long 0                                                    // 000000061884: 00000000
	.long 0x110                                                // 000000061888: 00000110
	.long 0                                                    // 00000006188C: 00000000
	.long 0x6980                                               // 000000061890: 00006980
	.long 0                                                    // 000000061894: 00000000
	.long 0                                                    // 000000061898: 00000000
	.long 0                                                    // 00000006189C: 00000000
	.long 0                                                    // 0000000618A0: 00000000
	.long 0                                                    // 0000000618A4: 00000000
	.long 0                                                    // 0000000618A8: 00000000
	.long 0                                                    // 0000000618AC: 00000000
	.long 0x60af0101                                           // 0000000618B0: 60AF0101
	.long 0x1384                                               // 0000000618B4: 00001384
	.long 0x408                                                // 0000000618B8: 00000408
	.long 0                                                    // 0000000618BC: 00000000
	.type	mul_get_global_size_get_global_offset.kd,@object
mul_get_global_size_get_global_offset.kd:
	.long 0                                                    // 0000000618C0: 00000000
	.long 0                                                    // 0000000618C4: 00000000
	.long 0x110                                                // 0000000618C8: 00000110
	.long 0                                                    // 0000000618CC: 00000000
	.ascii "@j"                                                // 0000000618D0: 6A40
	.short 0                                                   // 0000000618D2: 0000
	.long 0                                                    // 0000000618D4: 00000000
	.long 0                                                    // 0000000618D8: 00000000
	.long 0                                                    // 0000000618DC: 00000000
	.long 0                                                    // 0000000618E0: 00000000
	.long 0                                                    // 0000000618E4: 00000000
	.long 0                                                    // 0000000618E8: 00000000
	.long 0                                                    // 0000000618EC: 00000000
	.long 0x60af0101                                           // 0000000618F0: 60AF0101
	.long 0x1384                                               // 0000000618F4: 00001384
	.long 0x408                                                // 0000000618F8: 00000408
	.long 0                                                    // 0000000618FC: 00000000
	.type	mul_get_num_groups_get_global_offset.kd,@object
mul_get_num_groups_get_global_offset.kd:
	.long 0                                                    // 000000061900: 00000000
	.long 0                                                    // 000000061904: 00000000
	.long 0x110                                                // 000000061908: 00000110
	.long 0                                                    // 00000006190C: 00000000
	.long 0x6c00                                               // 000000061910: 00006C00
	.long 0                                                    // 000000061914: 00000000
	.long 0                                                    // 000000061918: 00000000
	.long 0                                                    // 00000006191C: 00000000
	.long 0                                                    // 000000061920: 00000000
	.long 0                                                    // 000000061924: 00000000
	.long 0                                                    // 000000061928: 00000000
	.long 0                                                    // 00000006192C: 00000000
	.long 0x60af0101                                           // 000000061930: 60AF0101
	.long 0x1384                                               // 000000061934: 00001384
	.long 0x408                                                // 000000061938: 00000408
	.long 0                                                    // 00000006193C: 00000000
	.type	mul_get_work_dim_get_global_offset.kd,@object
mul_get_work_dim_get_global_offset.kd:
	.long 0                                                    // 000000061940: 00000000
	.long 0                                                    // 000000061944: 00000000
	.long 0x110                                                // 000000061948: 00000110
	.long 0                                                    // 00000006194C: 00000000
	.long 0x6dc0                                               // 000000061950: 00006DC0
	.long 0                                                    // 000000061954: 00000000
	.long 0                                                    // 000000061958: 00000000
	.long 0                                                    // 00000006195C: 00000000
	.long 0                                                    // 000000061960: 00000000
	.long 0                                                    // 000000061964: 00000000
	.long 0                                                    // 000000061968: 00000000
	.long 0                                                    // 00000006196C: 00000000
	.long 0x60af0101                                           // 000000061970: 60AF0101
	.long 0x1384                                               // 000000061974: 00001384
	.long 0x408                                                // 000000061978: 00000408
	.long 0                                                    // 00000006197C: 00000000
	.type	mul_x_get_local_id.kd,@object
mul_x_get_local_id.kd:
	.long 0                                                    // 000000061980: 00000000
	.long 0                                                    // 000000061984: 00000000
	.long 0x110                                                // 000000061988: 00000110
	.long 0                                                    // 00000006198C: 00000000
	.long 0x6e80                                               // 000000061990: 00006E80
	.long 0                                                    // 000000061994: 00000000
	.long 0                                                    // 000000061998: 00000000
	.long 0                                                    // 00000006199C: 00000000
	.long 0                                                    // 0000000619A0: 00000000
	.long 0                                                    // 0000000619A4: 00000000
	.long 0                                                    // 0000000619A8: 00000000
	.long 0                                                    // 0000000619AC: 00000000
	.long 0x60af0101                                           // 0000000619B0: 60AF0101
	.long 0x1384                                               // 0000000619B4: 00001384
	.long 0x408                                                // 0000000619B8: 00000408
	.long 0                                                    // 0000000619BC: 00000000
	.type	mul_get_global_offset_get_local_id.kd,@object
mul_get_global_offset_get_local_id.kd:
	.long 0                                                    // 0000000619C0: 00000000
	.long 0                                                    // 0000000619C4: 00000000
	.long 0x110                                                // 0000000619C8: 00000110
	.long 0                                                    // 0000000619CC: 00000000
	.ascii "@o"                                                // 0000000619D0: 6F40
	.short 0                                                   // 0000000619D2: 0000
	.long 0                                                    // 0000000619D4: 00000000
	.long 0                                                    // 0000000619D8: 00000000
	.long 0                                                    // 0000000619DC: 00000000
	.long 0                                                    // 0000000619E0: 00000000
	.long 0                                                    // 0000000619E4: 00000000
	.long 0                                                    // 0000000619E8: 00000000
	.long 0                                                    // 0000000619EC: 00000000
	.long 0x60af0101                                           // 0000000619F0: 60AF0101
	.long 0x1384                                               // 0000000619F4: 00001384
	.long 0x408                                                // 0000000619F8: 00000408
	.long 0                                                    // 0000000619FC: 00000000
	.type	mul_get_local_id_get_local_id.kd,@object
mul_get_local_id_get_local_id.kd:
	.long 0                                                    // 000000061A00: 00000000
	.long 0                                                    // 000000061A04: 00000000
	.long 0x110                                                // 000000061A08: 00000110
	.long 0                                                    // 000000061A0C: 00000000
	.long 0x7000                                               // 000000061A10: 00007000
	.long 0                                                    // 000000061A14: 00000000
	.long 0                                                    // 000000061A18: 00000000
	.long 0                                                    // 000000061A1C: 00000000
	.long 0                                                    // 000000061A20: 00000000
	.long 0                                                    // 000000061A24: 00000000
	.long 0                                                    // 000000061A28: 00000000
	.long 0                                                    // 000000061A2C: 00000000
	.long 0x60af0101                                           // 000000061A30: 60AF0101
	.long 0x1384                                               // 000000061A34: 00001384
	.long 0x408                                                // 000000061A38: 00000408
	.long 0                                                    // 000000061A3C: 00000000
	.type	mul_get_group_id_get_local_id.kd,@object
mul_get_group_id_get_local_id.kd:
	.long 0                                                    // 000000061A40: 00000000
	.long 0                                                    // 000000061A44: 00000000
	.long 0x110                                                // 000000061A48: 00000110
	.long 0                                                    // 000000061A4C: 00000000
	.long 0x70c0                                               // 000000061A50: 000070C0
	.long 0                                                    // 000000061A54: 00000000
	.long 0                                                    // 000000061A58: 00000000
	.long 0                                                    // 000000061A5C: 00000000
	.long 0                                                    // 000000061A60: 00000000
	.long 0                                                    // 000000061A64: 00000000
	.long 0                                                    // 000000061A68: 00000000
	.long 0                                                    // 000000061A6C: 00000000
	.long 0x60af0101                                           // 000000061A70: 60AF0101
	.long 0x1384                                               // 000000061A74: 00001384
	.long 0x408                                                // 000000061A78: 00000408
	.long 0                                                    // 000000061A7C: 00000000
	.type	mul_get_local_size_get_local_id.kd,@object
mul_get_local_size_get_local_id.kd:
	.long 0                                                    // 000000061A80: 00000000
	.long 0                                                    // 000000061A84: 00000000
	.long 0x110                                                // 000000061A88: 00000110
	.long 0                                                    // 000000061A8C: 00000000
	.long 0x7180                                               // 000000061A90: 00007180
	.long 0                                                    // 000000061A94: 00000000
	.long 0                                                    // 000000061A98: 00000000
	.long 0                                                    // 000000061A9C: 00000000
	.long 0                                                    // 000000061AA0: 00000000
	.long 0                                                    // 000000061AA4: 00000000
	.long 0                                                    // 000000061AA8: 00000000
	.long 0                                                    // 000000061AAC: 00000000
	.long 0x60af0101                                           // 000000061AB0: 60AF0101
	.long 0x1384                                               // 000000061AB4: 00001384
	.long 0x408                                                // 000000061AB8: 00000408
	.long 0                                                    // 000000061ABC: 00000000
	.type	mul_get_global_id_get_local_id.kd,@object
mul_get_global_id_get_local_id.kd:
	.long 0                                                    // 000000061AC0: 00000000
	.long 0                                                    // 000000061AC4: 00000000
	.long 0x110                                                // 000000061AC8: 00000110
	.long 0                                                    // 000000061ACC: 00000000
	.ascii "@s"                                                // 000000061AD0: 7340
	.short 0                                                   // 000000061AD2: 0000
	.long 0                                                    // 000000061AD4: 00000000
	.long 0                                                    // 000000061AD8: 00000000
	.long 0                                                    // 000000061ADC: 00000000
	.long 0                                                    // 000000061AE0: 00000000
	.long 0                                                    // 000000061AE4: 00000000
	.long 0                                                    // 000000061AE8: 00000000
	.long 0                                                    // 000000061AEC: 00000000
	.long 0x60af0101                                           // 000000061AF0: 60AF0101
	.long 0x1384                                               // 000000061AF4: 00001384
	.long 0x408                                                // 000000061AF8: 00000408
	.long 0                                                    // 000000061AFC: 00000000
	.type	mul_get_global_size_get_local_id.kd,@object
mul_get_global_size_get_local_id.kd:
	.long 0                                                    // 000000061B00: 00000000
	.long 0                                                    // 000000061B04: 00000000
	.long 0x110                                                // 000000061B08: 00000110
	.long 0                                                    // 000000061B0C: 00000000
	.long 0x7400                                               // 000000061B10: 00007400
	.long 0                                                    // 000000061B14: 00000000
	.long 0                                                    // 000000061B18: 00000000
	.long 0                                                    // 000000061B1C: 00000000
	.long 0                                                    // 000000061B20: 00000000
	.long 0                                                    // 000000061B24: 00000000
	.long 0                                                    // 000000061B28: 00000000
	.long 0                                                    // 000000061B2C: 00000000
	.long 0x60af0101                                           // 000000061B30: 60AF0101
	.long 0x1384                                               // 000000061B34: 00001384
	.long 0x408                                                // 000000061B38: 00000408
	.long 0                                                    // 000000061B3C: 00000000
	.type	mul_get_num_groups_get_local_id.kd,@object
mul_get_num_groups_get_local_id.kd:
	.long 0                                                    // 000000061B40: 00000000
	.long 0                                                    // 000000061B44: 00000000
	.long 0x110                                                // 000000061B48: 00000110
	.long 0                                                    // 000000061B4C: 00000000
	.long 0x75c0                                               // 000000061B50: 000075C0
	.long 0                                                    // 000000061B54: 00000000
	.long 0                                                    // 000000061B58: 00000000
	.long 0                                                    // 000000061B5C: 00000000
	.long 0                                                    // 000000061B60: 00000000
	.long 0                                                    // 000000061B64: 00000000
	.long 0                                                    // 000000061B68: 00000000
	.long 0                                                    // 000000061B6C: 00000000
	.long 0x60af0101                                           // 000000061B70: 60AF0101
	.long 0x1384                                               // 000000061B74: 00001384
	.long 0x408                                                // 000000061B78: 00000408
	.long 0                                                    // 000000061B7C: 00000000
	.type	mul_get_work_dim_get_local_id.kd,@object
mul_get_work_dim_get_local_id.kd:
	.long 0                                                    // 000000061B80: 00000000
	.long 0                                                    // 000000061B84: 00000000
	.long 0x110                                                // 000000061B88: 00000110
	.long 0                                                    // 000000061B8C: 00000000
	.long 0x7780                                               // 000000061B90: 00007780
	.long 0                                                    // 000000061B94: 00000000
	.long 0                                                    // 000000061B98: 00000000
	.long 0                                                    // 000000061B9C: 00000000
	.long 0                                                    // 000000061BA0: 00000000
	.long 0                                                    // 000000061BA4: 00000000
	.long 0                                                    // 000000061BA8: 00000000
	.long 0                                                    // 000000061BAC: 00000000
	.long 0x60af0101                                           // 000000061BB0: 60AF0101
	.long 0x1384                                               // 000000061BB4: 00001384
	.long 0x408                                                // 000000061BB8: 00000408
	.long 0                                                    // 000000061BBC: 00000000
	.type	mul_x_get_group_id.kd,@object
mul_x_get_group_id.kd:
	.long 0                                                    // 000000061BC0: 00000000
	.long 0                                                    // 000000061BC4: 00000000
	.long 0x110                                                // 000000061BC8: 00000110
	.long 0                                                    // 000000061BCC: 00000000
	.ascii "@x"                                                // 000000061BD0: 7840
	.short 0                                                   // 000000061BD2: 0000
	.long 0                                                    // 000000061BD4: 00000000
	.long 0                                                    // 000000061BD8: 00000000
	.long 0                                                    // 000000061BDC: 00000000
	.long 0                                                    // 000000061BE0: 00000000
	.long 0                                                    // 000000061BE4: 00000000
	.long 0                                                    // 000000061BE8: 00000000
	.long 0                                                    // 000000061BEC: 00000000
	.long 0x60af0101                                           // 000000061BF0: 60AF0101
	.long 0x1384                                               // 000000061BF4: 00001384
	.long 0x408                                                // 000000061BF8: 00000408
	.long 0                                                    // 000000061BFC: 00000000
	.type	mul_get_global_offset_get_group_id.kd,@object
mul_get_global_offset_get_group_id.kd:
	.long 0                                                    // 000000061C00: 00000000
	.long 0                                                    // 000000061C04: 00000000
	.long 0x110                                                // 000000061C08: 00000110
	.long 0                                                    // 000000061C0C: 00000000
	.long 0x7900                                               // 000000061C10: 00007900
	.long 0                                                    // 000000061C14: 00000000
	.long 0                                                    // 000000061C18: 00000000
	.long 0                                                    // 000000061C1C: 00000000
	.long 0                                                    // 000000061C20: 00000000
	.long 0                                                    // 000000061C24: 00000000
	.long 0                                                    // 000000061C28: 00000000
	.long 0                                                    // 000000061C2C: 00000000
	.long 0x60af0101                                           // 000000061C30: 60AF0101
	.long 0x1384                                               // 000000061C34: 00001384
	.long 0x408                                                // 000000061C38: 00000408
	.long 0                                                    // 000000061C3C: 00000000
	.type	mul_get_local_id_get_group_id.kd,@object
mul_get_local_id_get_group_id.kd:
	.long 0                                                    // 000000061C40: 00000000
	.long 0                                                    // 000000061C44: 00000000
	.long 0x110                                                // 000000061C48: 00000110
	.long 0                                                    // 000000061C4C: 00000000
	.long 0x79c0                                               // 000000061C50: 000079C0
	.long 0                                                    // 000000061C54: 00000000
	.long 0                                                    // 000000061C58: 00000000
	.long 0                                                    // 000000061C5C: 00000000
	.long 0                                                    // 000000061C60: 00000000
	.long 0                                                    // 000000061C64: 00000000
	.long 0                                                    // 000000061C68: 00000000
	.long 0                                                    // 000000061C6C: 00000000
	.long 0x60af0101                                           // 000000061C70: 60AF0101
	.long 0x1384                                               // 000000061C74: 00001384
	.long 0x408                                                // 000000061C78: 00000408
	.long 0                                                    // 000000061C7C: 00000000
	.type	mul_get_group_id_get_group_id.kd,@object
mul_get_group_id_get_group_id.kd:
	.long 0                                                    // 000000061C80: 00000000
	.long 0                                                    // 000000061C84: 00000000
	.long 0x110                                                // 000000061C88: 00000110
	.long 0                                                    // 000000061C8C: 00000000
	.long 0x7a80                                               // 000000061C90: 00007A80
	.long 0                                                    // 000000061C94: 00000000
	.long 0                                                    // 000000061C98: 00000000
	.long 0                                                    // 000000061C9C: 00000000
	.long 0                                                    // 000000061CA0: 00000000
	.long 0                                                    // 000000061CA4: 00000000
	.long 0                                                    // 000000061CA8: 00000000
	.long 0                                                    // 000000061CAC: 00000000
	.long 0x60af0101                                           // 000000061CB0: 60AF0101
	.long 0x1384                                               // 000000061CB4: 00001384
	.long 0x408                                                // 000000061CB8: 00000408
	.long 0                                                    // 000000061CBC: 00000000
	.type	mul_get_local_size_get_group_id.kd,@object
mul_get_local_size_get_group_id.kd:
	.long 0                                                    // 000000061CC0: 00000000
	.long 0                                                    // 000000061CC4: 00000000
	.long 0x110                                                // 000000061CC8: 00000110
	.long 0                                                    // 000000061CCC: 00000000
	.ascii "@{"                                                // 000000061CD0: 7B40
	.short 0                                                   // 000000061CD2: 0000
	.long 0                                                    // 000000061CD4: 00000000
	.long 0                                                    // 000000061CD8: 00000000
	.long 0                                                    // 000000061CDC: 00000000
	.long 0                                                    // 000000061CE0: 00000000
	.long 0                                                    // 000000061CE4: 00000000
	.long 0                                                    // 000000061CE8: 00000000
	.long 0                                                    // 000000061CEC: 00000000
	.long 0x60af0101                                           // 000000061CF0: 60AF0101
	.long 0x1384                                               // 000000061CF4: 00001384
	.long 0x408                                                // 000000061CF8: 00000408
	.long 0                                                    // 000000061CFC: 00000000
	.type	mul_get_global_id_get_group_id.kd,@object
mul_get_global_id_get_group_id.kd:
	.long 0                                                    // 000000061D00: 00000000
	.long 0                                                    // 000000061D04: 00000000
	.long 0x110                                                // 000000061D08: 00000110
	.long 0                                                    // 000000061D0C: 00000000
	.long 0x7d00                                               // 000000061D10: 00007D00
	.long 0                                                    // 000000061D14: 00000000
	.long 0                                                    // 000000061D18: 00000000
	.long 0                                                    // 000000061D1C: 00000000
	.long 0                                                    // 000000061D20: 00000000
	.long 0                                                    // 000000061D24: 00000000
	.long 0                                                    // 000000061D28: 00000000
	.long 0                                                    // 000000061D2C: 00000000
	.long 0x60af0101                                           // 000000061D30: 60AF0101
	.long 0x1384                                               // 000000061D34: 00001384
	.long 0x408                                                // 000000061D38: 00000408
	.long 0                                                    // 000000061D3C: 00000000
	.type	mul_get_global_size_get_group_id.kd,@object
mul_get_global_size_get_group_id.kd:
	.long 0                                                    // 000000061D40: 00000000
	.long 0                                                    // 000000061D44: 00000000
	.long 0x110                                                // 000000061D48: 00000110
	.long 0                                                    // 000000061D4C: 00000000
	.long 0x7dc0                                               // 000000061D50: 00007DC0
	.long 0                                                    // 000000061D54: 00000000
	.long 0                                                    // 000000061D58: 00000000
	.long 0                                                    // 000000061D5C: 00000000
	.long 0                                                    // 000000061D60: 00000000
	.long 0                                                    // 000000061D64: 00000000
	.long 0                                                    // 000000061D68: 00000000
	.long 0                                                    // 000000061D6C: 00000000
	.long 0x60af0101                                           // 000000061D70: 60AF0101
	.long 0x1384                                               // 000000061D74: 00001384
	.long 0x408                                                // 000000061D78: 00000408
	.long 0                                                    // 000000061D7C: 00000000
	.type	mul_get_num_groups_get_group_id.kd,@object
mul_get_num_groups_get_group_id.kd:
	.long 0                                                    // 000000061D80: 00000000
	.long 0                                                    // 000000061D84: 00000000
	.long 0x110                                                // 000000061D88: 00000110
	.long 0                                                    // 000000061D8C: 00000000
	.long 0x7f80                                               // 000000061D90: 00007F80
	.long 0                                                    // 000000061D94: 00000000
	.long 0                                                    // 000000061D98: 00000000
	.long 0                                                    // 000000061D9C: 00000000
	.long 0                                                    // 000000061DA0: 00000000
	.long 0                                                    // 000000061DA4: 00000000
	.long 0                                                    // 000000061DA8: 00000000
	.long 0                                                    // 000000061DAC: 00000000
	.long 0x60af0101                                           // 000000061DB0: 60AF0101
	.long 0x1384                                               // 000000061DB4: 00001384
	.long 0x408                                                // 000000061DB8: 00000408
	.long 0                                                    // 000000061DBC: 00000000
	.type	mul_get_work_dim_get_group_id.kd,@object
mul_get_work_dim_get_group_id.kd:
	.long 0                                                    // 000000061DC0: 00000000
	.long 0                                                    // 000000061DC4: 00000000
	.long 0x110                                                // 000000061DC8: 00000110
	.long 0                                                    // 000000061DCC: 00000000
	.ascii "@"                                                 // 000000061DD0: 40
	.byte 0x81                                                 // 000000061DD1: 81
	.short 0                                                   // 000000061DD2: 0000
	.long 0                                                    // 000000061DD4: 00000000
	.long 0                                                    // 000000061DD8: 00000000
	.long 0                                                    // 000000061DDC: 00000000
	.long 0                                                    // 000000061DE0: 00000000
	.long 0                                                    // 000000061DE4: 00000000
	.long 0                                                    // 000000061DE8: 00000000
	.long 0                                                    // 000000061DEC: 00000000
	.long 0x60af0101                                           // 000000061DF0: 60AF0101
	.long 0x1384                                               // 000000061DF4: 00001384
	.long 0x408                                                // 000000061DF8: 00000408
	.long 0                                                    // 000000061DFC: 00000000
	.type	mul_x_get_local_size.kd,@object
mul_x_get_local_size.kd:
	.long 0                                                    // 000000061E00: 00000000
	.long 0                                                    // 000000061E04: 00000000
	.long 0x110                                                // 000000061E08: 00000110
	.long 0                                                    // 000000061E0C: 00000000
	.long 0x8200                                               // 000000061E10: 00008200
	.long 0                                                    // 000000061E14: 00000000
	.long 0                                                    // 000000061E18: 00000000
	.long 0                                                    // 000000061E1C: 00000000
	.long 0                                                    // 000000061E20: 00000000
	.long 0                                                    // 000000061E24: 00000000
	.long 0                                                    // 000000061E28: 00000000
	.long 0                                                    // 000000061E2C: 00000000
	.long 0x60af0101                                           // 000000061E30: 60AF0101
	.long 0x1384                                               // 000000061E34: 00001384
	.long 0x408                                                // 000000061E38: 00000408
	.long 0                                                    // 000000061E3C: 00000000
	.type	mul_get_global_offset_get_local_size.kd,@object
mul_get_global_offset_get_local_size.kd:
	.long 0                                                    // 000000061E40: 00000000
	.long 0                                                    // 000000061E44: 00000000
	.long 0x110                                                // 000000061E48: 00000110
	.long 0                                                    // 000000061E4C: 00000000
	.long 0x83c0                                               // 000000061E50: 000083C0
	.long 0                                                    // 000000061E54: 00000000
	.long 0                                                    // 000000061E58: 00000000
	.long 0                                                    // 000000061E5C: 00000000
	.long 0                                                    // 000000061E60: 00000000
	.long 0                                                    // 000000061E64: 00000000
	.long 0                                                    // 000000061E68: 00000000
	.long 0                                                    // 000000061E6C: 00000000
	.long 0x60af0101                                           // 000000061E70: 60AF0101
	.long 0x1384                                               // 000000061E74: 00001384
	.long 0x408                                                // 000000061E78: 00000408
	.long 0                                                    // 000000061E7C: 00000000
	.type	mul_get_local_id_get_local_size.kd,@object
mul_get_local_id_get_local_size.kd:
	.long 0                                                    // 000000061E80: 00000000
	.long 0                                                    // 000000061E84: 00000000
	.long 0x110                                                // 000000061E88: 00000110
	.long 0                                                    // 000000061E8C: 00000000
	.long 0x8580                                               // 000000061E90: 00008580
	.long 0                                                    // 000000061E94: 00000000
	.long 0                                                    // 000000061E98: 00000000
	.long 0                                                    // 000000061E9C: 00000000
	.long 0                                                    // 000000061EA0: 00000000
	.long 0                                                    // 000000061EA4: 00000000
	.long 0                                                    // 000000061EA8: 00000000
	.long 0                                                    // 000000061EAC: 00000000
	.long 0x60af0101                                           // 000000061EB0: 60AF0101
	.long 0x1384                                               // 000000061EB4: 00001384
	.long 0x408                                                // 000000061EB8: 00000408
	.long 0                                                    // 000000061EBC: 00000000
	.type	mul_get_group_id_get_local_size.kd,@object
mul_get_group_id_get_local_size.kd:
	.long 0                                                    // 000000061EC0: 00000000
	.long 0                                                    // 000000061EC4: 00000000
	.long 0x110                                                // 000000061EC8: 00000110
	.long 0                                                    // 000000061ECC: 00000000
	.ascii "@"                                                 // 000000061ED0: 40
	.byte 0x87                                                 // 000000061ED1: 87
	.short 0                                                   // 000000061ED2: 0000
	.long 0                                                    // 000000061ED4: 00000000
	.long 0                                                    // 000000061ED8: 00000000
	.long 0                                                    // 000000061EDC: 00000000
	.long 0                                                    // 000000061EE0: 00000000
	.long 0                                                    // 000000061EE4: 00000000
	.long 0                                                    // 000000061EE8: 00000000
	.long 0                                                    // 000000061EEC: 00000000
	.long 0x60af0101                                           // 000000061EF0: 60AF0101
	.long 0x1384                                               // 000000061EF4: 00001384
	.long 0x408                                                // 000000061EF8: 00000408
	.long 0                                                    // 000000061EFC: 00000000
	.type	mul_get_local_size_get_local_size.kd,@object
mul_get_local_size_get_local_size.kd:
	.long 0                                                    // 000000061F00: 00000000
	.long 0                                                    // 000000061F04: 00000000
	.long 0x110                                                // 000000061F08: 00000110
	.long 0                                                    // 000000061F0C: 00000000
	.long 0x8900                                               // 000000061F10: 00008900
	.long 0                                                    // 000000061F14: 00000000
	.long 0                                                    // 000000061F18: 00000000
	.long 0                                                    // 000000061F1C: 00000000
	.long 0                                                    // 000000061F20: 00000000
	.long 0                                                    // 000000061F24: 00000000
	.long 0                                                    // 000000061F28: 00000000
	.long 0                                                    // 000000061F2C: 00000000
	.long 0x60af0101                                           // 000000061F30: 60AF0101
	.long 0x1384                                               // 000000061F34: 00001384
	.long 0x408                                                // 000000061F38: 00000408
	.long 0                                                    // 000000061F3C: 00000000
	.type	mul_get_global_id_get_local_size.kd,@object
mul_get_global_id_get_local_size.kd:
	.long 0                                                    // 000000061F40: 00000000
	.long 0                                                    // 000000061F44: 00000000
	.long 0x110                                                // 000000061F48: 00000110
	.long 0                                                    // 000000061F4C: 00000000
	.long 0x8ac0                                               // 000000061F50: 00008AC0
	.long 0                                                    // 000000061F54: 00000000
	.long 0                                                    // 000000061F58: 00000000
	.long 0                                                    // 000000061F5C: 00000000
	.long 0                                                    // 000000061F60: 00000000
	.long 0                                                    // 000000061F64: 00000000
	.long 0                                                    // 000000061F68: 00000000
	.long 0                                                    // 000000061F6C: 00000000
	.long 0x60af0101                                           // 000000061F70: 60AF0101
	.long 0x1384                                               // 000000061F74: 00001384
	.long 0x408                                                // 000000061F78: 00000408
	.long 0                                                    // 000000061F7C: 00000000
	.type	mul_get_global_size_get_local_size.kd,@object
mul_get_global_size_get_local_size.kd:
	.long 0                                                    // 000000061F80: 00000000
	.long 0                                                    // 000000061F84: 00000000
	.long 0x110                                                // 000000061F88: 00000110
	.long 0                                                    // 000000061F8C: 00000000
	.long 0x8c80                                               // 000000061F90: 00008C80
	.long 0                                                    // 000000061F94: 00000000
	.long 0                                                    // 000000061F98: 00000000
	.long 0                                                    // 000000061F9C: 00000000
	.long 0                                                    // 000000061FA0: 00000000
	.long 0                                                    // 000000061FA4: 00000000
	.long 0                                                    // 000000061FA8: 00000000
	.long 0                                                    // 000000061FAC: 00000000
	.long 0x60af0101                                           // 000000061FB0: 60AF0101
	.long 0x1384                                               // 000000061FB4: 00001384
	.long 0x408                                                // 000000061FB8: 00000408
	.long 0                                                    // 000000061FBC: 00000000
	.type	mul_get_num_groups_get_local_size.kd,@object
mul_get_num_groups_get_local_size.kd:
	.long 0                                                    // 000000061FC0: 00000000
	.long 0                                                    // 000000061FC4: 00000000
	.long 0x110                                                // 000000061FC8: 00000110
	.long 0                                                    // 000000061FCC: 00000000
	.ascii "@"                                                 // 000000061FD0: 40
	.byte 0x8e                                                 // 000000061FD1: 8E
	.short 0                                                   // 000000061FD2: 0000
	.long 0                                                    // 000000061FD4: 00000000
	.long 0                                                    // 000000061FD8: 00000000
	.long 0                                                    // 000000061FDC: 00000000
	.long 0                                                    // 000000061FE0: 00000000
	.long 0                                                    // 000000061FE4: 00000000
	.long 0                                                    // 000000061FE8: 00000000
	.long 0                                                    // 000000061FEC: 00000000
	.long 0x60af0101                                           // 000000061FF0: 60AF0101
	.long 0x1384                                               // 000000061FF4: 00001384
	.long 0x408                                                // 000000061FF8: 00000408
	.long 0                                                    // 000000061FFC: 00000000
	.type	mul_get_work_dim_get_local_size.kd,@object
mul_get_work_dim_get_local_size.kd:
	.long 0                                                    // 000000062000: 00000000
	.long 0                                                    // 000000062004: 00000000
	.long 0x110                                                // 000000062008: 00000110
	.long 0                                                    // 00000006200C: 00000000
	.long 0x9000                                               // 000000062010: 00009000
	.long 0                                                    // 000000062014: 00000000
	.long 0                                                    // 000000062018: 00000000
	.long 0                                                    // 00000006201C: 00000000
	.long 0                                                    // 000000062020: 00000000
	.long 0                                                    // 000000062024: 00000000
	.long 0                                                    // 000000062028: 00000000
	.long 0                                                    // 00000006202C: 00000000
	.long 0x60af0101                                           // 000000062030: 60AF0101
	.long 0x1384                                               // 000000062034: 00001384
	.long 0x408                                                // 000000062038: 00000408
	.long 0                                                    // 00000006203C: 00000000
	.type	mul_x_get_global_id.kd,@object
mul_x_get_global_id.kd:
	.long 0                                                    // 000000062040: 00000000
	.long 0                                                    // 000000062044: 00000000
	.long 0x110                                                // 000000062048: 00000110
	.long 0                                                    // 00000006204C: 00000000
	.long 0x91c0                                               // 000000062050: 000091C0
	.long 0                                                    // 000000062054: 00000000
	.long 0                                                    // 000000062058: 00000000
	.long 0                                                    // 00000006205C: 00000000
	.long 0                                                    // 000000062060: 00000000
	.long 0                                                    // 000000062064: 00000000
	.long 0                                                    // 000000062068: 00000000
	.long 0                                                    // 00000006206C: 00000000
	.long 0x60af0101                                           // 000000062070: 60AF0101
	.long 0x1384                                               // 000000062074: 00001384
	.long 0x408                                                // 000000062078: 00000408
	.long 0                                                    // 00000006207C: 00000000
	.type	mul_get_global_offset_get_global_id.kd,@object
mul_get_global_offset_get_global_id.kd:
	.long 0                                                    // 000000062080: 00000000
	.long 0                                                    // 000000062084: 00000000
	.long 0x110                                                // 000000062088: 00000110
	.long 0                                                    // 00000006208C: 00000000
	.long 0x9280                                               // 000000062090: 00009280
	.long 0                                                    // 000000062094: 00000000
	.long 0                                                    // 000000062098: 00000000
	.long 0                                                    // 00000006209C: 00000000
	.long 0                                                    // 0000000620A0: 00000000
	.long 0                                                    // 0000000620A4: 00000000
	.long 0                                                    // 0000000620A8: 00000000
	.long 0                                                    // 0000000620AC: 00000000
	.long 0x60af0101                                           // 0000000620B0: 60AF0101
	.long 0x1384                                               // 0000000620B4: 00001384
	.long 0x408                                                // 0000000620B8: 00000408
	.long 0                                                    // 0000000620BC: 00000000
	.type	mul_get_local_id_get_global_id.kd,@object
mul_get_local_id_get_global_id.kd:
	.long 0                                                    // 0000000620C0: 00000000
	.long 0                                                    // 0000000620C4: 00000000
	.long 0x110                                                // 0000000620C8: 00000110
	.long 0                                                    // 0000000620CC: 00000000
	.ascii "@"                                                 // 0000000620D0: 40
	.byte 0x93                                                 // 0000000620D1: 93
	.short 0                                                   // 0000000620D2: 0000
	.long 0                                                    // 0000000620D4: 00000000
	.long 0                                                    // 0000000620D8: 00000000
	.long 0                                                    // 0000000620DC: 00000000
	.long 0                                                    // 0000000620E0: 00000000
	.long 0                                                    // 0000000620E4: 00000000
	.long 0                                                    // 0000000620E8: 00000000
	.long 0                                                    // 0000000620EC: 00000000
	.long 0x60af0101                                           // 0000000620F0: 60AF0101
	.long 0x1384                                               // 0000000620F4: 00001384
	.long 0x408                                                // 0000000620F8: 00000408
	.long 0                                                    // 0000000620FC: 00000000
	.type	mul_get_group_id_get_global_id.kd,@object
mul_get_group_id_get_global_id.kd:
	.long 0                                                    // 000000062100: 00000000
	.long 0                                                    // 000000062104: 00000000
	.long 0x110                                                // 000000062108: 00000110
	.long 0                                                    // 00000006210C: 00000000
	.long 0x9400                                               // 000000062110: 00009400
	.long 0                                                    // 000000062114: 00000000
	.long 0                                                    // 000000062118: 00000000
	.long 0                                                    // 00000006211C: 00000000
	.long 0                                                    // 000000062120: 00000000
	.long 0                                                    // 000000062124: 00000000
	.long 0                                                    // 000000062128: 00000000
	.long 0                                                    // 00000006212C: 00000000
	.long 0x60af0101                                           // 000000062130: 60AF0101
	.long 0x1384                                               // 000000062134: 00001384
	.long 0x408                                                // 000000062138: 00000408
	.long 0                                                    // 00000006213C: 00000000
	.type	mul_get_local_size_get_global_id.kd,@object
mul_get_local_size_get_global_id.kd:
	.long 0                                                    // 000000062140: 00000000
	.long 0                                                    // 000000062144: 00000000
	.long 0x110                                                // 000000062148: 00000110
	.long 0                                                    // 00000006214C: 00000000
	.long 0x94c0                                               // 000000062150: 000094C0
	.long 0                                                    // 000000062154: 00000000
	.long 0                                                    // 000000062158: 00000000
	.long 0                                                    // 00000006215C: 00000000
	.long 0                                                    // 000000062160: 00000000
	.long 0                                                    // 000000062164: 00000000
	.long 0                                                    // 000000062168: 00000000
	.long 0                                                    // 00000006216C: 00000000
	.long 0x60af0101                                           // 000000062170: 60AF0101
	.long 0x1384                                               // 000000062174: 00001384
	.long 0x408                                                // 000000062178: 00000408
	.long 0                                                    // 00000006217C: 00000000
	.type	mul_get_global_id_get_global_id.kd,@object
mul_get_global_id_get_global_id.kd:
	.long 0                                                    // 000000062180: 00000000
	.long 0                                                    // 000000062184: 00000000
	.long 0x110                                                // 000000062188: 00000110
	.long 0                                                    // 00000006218C: 00000000
	.long 0x9680                                               // 000000062190: 00009680
	.long 0                                                    // 000000062194: 00000000
	.long 0                                                    // 000000062198: 00000000
	.long 0                                                    // 00000006219C: 00000000
	.long 0                                                    // 0000000621A0: 00000000
	.long 0                                                    // 0000000621A4: 00000000
	.long 0                                                    // 0000000621A8: 00000000
	.long 0                                                    // 0000000621AC: 00000000
	.long 0x60af0101                                           // 0000000621B0: 60AF0101
	.long 0x1384                                               // 0000000621B4: 00001384
	.long 0x408                                                // 0000000621B8: 00000408
	.long 0                                                    // 0000000621BC: 00000000
	.type	mul_get_global_size_get_global_id.kd,@object
mul_get_global_size_get_global_id.kd:
	.long 0                                                    // 0000000621C0: 00000000
	.long 0                                                    // 0000000621C4: 00000000
	.long 0x110                                                // 0000000621C8: 00000110
	.long 0                                                    // 0000000621CC: 00000000
	.ascii "@"                                                 // 0000000621D0: 40
	.byte 0x97                                                 // 0000000621D1: 97
	.short 0                                                   // 0000000621D2: 0000
	.long 0                                                    // 0000000621D4: 00000000
	.long 0                                                    // 0000000621D8: 00000000
	.long 0                                                    // 0000000621DC: 00000000
	.long 0                                                    // 0000000621E0: 00000000
	.long 0                                                    // 0000000621E4: 00000000
	.long 0                                                    // 0000000621E8: 00000000
	.long 0                                                    // 0000000621EC: 00000000
	.long 0x60af0101                                           // 0000000621F0: 60AF0101
	.long 0x1384                                               // 0000000621F4: 00001384
	.long 0x408                                                // 0000000621F8: 00000408
	.long 0                                                    // 0000000621FC: 00000000
	.type	mul_get_num_groups_get_global_id.kd,@object
mul_get_num_groups_get_global_id.kd:
	.long 0                                                    // 000000062200: 00000000
	.long 0                                                    // 000000062204: 00000000
	.long 0x110                                                // 000000062208: 00000110
	.long 0                                                    // 00000006220C: 00000000
	.long 0x9900                                               // 000000062210: 00009900
	.long 0                                                    // 000000062214: 00000000
	.long 0                                                    // 000000062218: 00000000
	.long 0                                                    // 00000006221C: 00000000
	.long 0                                                    // 000000062220: 00000000
	.long 0                                                    // 000000062224: 00000000
	.long 0                                                    // 000000062228: 00000000
	.long 0                                                    // 00000006222C: 00000000
	.long 0x60af0101                                           // 000000062230: 60AF0101
	.long 0x1384                                               // 000000062234: 00001384
	.long 0x408                                                // 000000062238: 00000408
	.long 0                                                    // 00000006223C: 00000000
	.type	mul_get_work_dim_get_global_id.kd,@object
mul_get_work_dim_get_global_id.kd:
	.long 0                                                    // 000000062240: 00000000
	.long 0                                                    // 000000062244: 00000000
	.long 0x110                                                // 000000062248: 00000110
	.long 0                                                    // 00000006224C: 00000000
	.long 0x9ac0                                               // 000000062250: 00009AC0
	.long 0                                                    // 000000062254: 00000000
	.long 0                                                    // 000000062258: 00000000
	.long 0                                                    // 00000006225C: 00000000
	.long 0                                                    // 000000062260: 00000000
	.long 0                                                    // 000000062264: 00000000
	.long 0                                                    // 000000062268: 00000000
	.long 0                                                    // 00000006226C: 00000000
	.long 0x60af0101                                           // 000000062270: 60AF0101
	.long 0x1384                                               // 000000062274: 00001384
	.long 0x408                                                // 000000062278: 00000408
	.long 0                                                    // 00000006227C: 00000000
	.type	mul_x_get_global_size.kd,@object
mul_x_get_global_size.kd:
	.long 0                                                    // 000000062280: 00000000
	.long 0                                                    // 000000062284: 00000000
	.long 0x110                                                // 000000062288: 00000110
	.long 0                                                    // 00000006228C: 00000000
	.long 0x9c80                                               // 000000062290: 00009C80
	.long 0                                                    // 000000062294: 00000000
	.long 0                                                    // 000000062298: 00000000
	.long 0                                                    // 00000006229C: 00000000
	.long 0                                                    // 0000000622A0: 00000000
	.long 0                                                    // 0000000622A4: 00000000
	.long 0                                                    // 0000000622A8: 00000000
	.long 0                                                    // 0000000622AC: 00000000
	.long 0x60af0101                                           // 0000000622B0: 60AF0101
	.long 0x1384                                               // 0000000622B4: 00001384
	.long 0x408                                                // 0000000622B8: 00000408
	.long 0                                                    // 0000000622BC: 00000000
	.type	mul_get_global_offset_get_global_size.kd,@object
mul_get_global_offset_get_global_size.kd:
	.long 0                                                    // 0000000622C0: 00000000
	.long 0                                                    // 0000000622C4: 00000000
	.long 0x110                                                // 0000000622C8: 00000110
	.long 0                                                    // 0000000622CC: 00000000
	.ascii "@"                                                 // 0000000622D0: 40
	.byte 0x9e                                                 // 0000000622D1: 9E
	.short 0                                                   // 0000000622D2: 0000
	.long 0                                                    // 0000000622D4: 00000000
	.long 0                                                    // 0000000622D8: 00000000
	.long 0                                                    // 0000000622DC: 00000000
	.long 0                                                    // 0000000622E0: 00000000
	.long 0                                                    // 0000000622E4: 00000000
	.long 0                                                    // 0000000622E8: 00000000
	.long 0                                                    // 0000000622EC: 00000000
	.long 0x60af0101                                           // 0000000622F0: 60AF0101
	.long 0x1384                                               // 0000000622F4: 00001384
	.long 0x408                                                // 0000000622F8: 00000408
	.long 0                                                    // 0000000622FC: 00000000
	.type	mul_get_local_id_get_global_size.kd,@object
mul_get_local_id_get_global_size.kd:
	.long 0                                                    // 000000062300: 00000000
	.long 0                                                    // 000000062304: 00000000
	.long 0x110                                                // 000000062308: 00000110
	.long 0                                                    // 00000006230C: 00000000
	.long 0xa000                                               // 000000062310: 0000A000
	.long 0                                                    // 000000062314: 00000000
	.long 0                                                    // 000000062318: 00000000
	.long 0                                                    // 00000006231C: 00000000
	.long 0                                                    // 000000062320: 00000000
	.long 0                                                    // 000000062324: 00000000
	.long 0                                                    // 000000062328: 00000000
	.long 0                                                    // 00000006232C: 00000000
	.long 0x60af0101                                           // 000000062330: 60AF0101
	.long 0x1384                                               // 000000062334: 00001384
	.long 0x408                                                // 000000062338: 00000408
	.long 0                                                    // 00000006233C: 00000000
	.type	mul_get_group_id_get_global_size.kd,@object
mul_get_group_id_get_global_size.kd:
	.long 0                                                    // 000000062340: 00000000
	.long 0                                                    // 000000062344: 00000000
	.long 0x110                                                // 000000062348: 00000110
	.long 0                                                    // 00000006234C: 00000000
	.long 0xa1c0                                               // 000000062350: 0000A1C0
	.long 0                                                    // 000000062354: 00000000
	.long 0                                                    // 000000062358: 00000000
	.long 0                                                    // 00000006235C: 00000000
	.long 0                                                    // 000000062360: 00000000
	.long 0                                                    // 000000062364: 00000000
	.long 0                                                    // 000000062368: 00000000
	.long 0                                                    // 00000006236C: 00000000
	.long 0x60af0101                                           // 000000062370: 60AF0101
	.long 0x1384                                               // 000000062374: 00001384
	.long 0x408                                                // 000000062378: 00000408
	.long 0                                                    // 00000006237C: 00000000
	.type	mul_get_local_size_get_global_size.kd,@object
mul_get_local_size_get_global_size.kd:
	.long 0                                                    // 000000062380: 00000000
	.long 0                                                    // 000000062384: 00000000
	.long 0x110                                                // 000000062388: 00000110
	.long 0                                                    // 00000006238C: 00000000
	.long 0xa380                                               // 000000062390: 0000A380
	.long 0                                                    // 000000062394: 00000000
	.long 0                                                    // 000000062398: 00000000
	.long 0                                                    // 00000006239C: 00000000
	.long 0                                                    // 0000000623A0: 00000000
	.long 0                                                    // 0000000623A4: 00000000
	.long 0                                                    // 0000000623A8: 00000000
	.long 0                                                    // 0000000623AC: 00000000
	.long 0x60af0101                                           // 0000000623B0: 60AF0101
	.long 0x1384                                               // 0000000623B4: 00001384
	.long 0x408                                                // 0000000623B8: 00000408
	.long 0                                                    // 0000000623BC: 00000000
	.type	mul_get_global_id_get_global_size.kd,@object
mul_get_global_id_get_global_size.kd:
	.long 0                                                    // 0000000623C0: 00000000
	.long 0                                                    // 0000000623C4: 00000000
	.long 0x110                                                // 0000000623C8: 00000110
	.long 0                                                    // 0000000623CC: 00000000
	.ascii "@"                                                 // 0000000623D0: 40
	.byte 0xa5                                                 // 0000000623D1: A5
	.short 0                                                   // 0000000623D2: 0000
	.long 0                                                    // 0000000623D4: 00000000
	.long 0                                                    // 0000000623D8: 00000000
	.long 0                                                    // 0000000623DC: 00000000
	.long 0                                                    // 0000000623E0: 00000000
	.long 0                                                    // 0000000623E4: 00000000
	.long 0                                                    // 0000000623E8: 00000000
	.long 0                                                    // 0000000623EC: 00000000
	.long 0x60af0101                                           // 0000000623F0: 60AF0101
	.long 0x1384                                               // 0000000623F4: 00001384
	.long 0x408                                                // 0000000623F8: 00000408
	.long 0                                                    // 0000000623FC: 00000000
	.type	mul_get_global_size_get_global_size.kd,@object
mul_get_global_size_get_global_size.kd:
	.long 0                                                    // 000000062400: 00000000
	.long 0                                                    // 000000062404: 00000000
	.long 0x110                                                // 000000062408: 00000110
	.long 0                                                    // 00000006240C: 00000000
	.long 0xa700                                               // 000000062410: 0000A700
	.long 0                                                    // 000000062414: 00000000
	.long 0                                                    // 000000062418: 00000000
	.long 0                                                    // 00000006241C: 00000000
	.long 0                                                    // 000000062420: 00000000
	.long 0                                                    // 000000062424: 00000000
	.long 0                                                    // 000000062428: 00000000
	.long 0                                                    // 00000006242C: 00000000
	.long 0x60af0101                                           // 000000062430: 60AF0101
	.long 0x1384                                               // 000000062434: 00001384
	.long 0x408                                                // 000000062438: 00000408
	.long 0                                                    // 00000006243C: 00000000
	.type	mul_get_num_groups_get_global_size.kd,@object
mul_get_num_groups_get_global_size.kd:
	.long 0                                                    // 000000062440: 00000000
	.long 0                                                    // 000000062444: 00000000
	.long 0x110                                                // 000000062448: 00000110
	.long 0                                                    // 00000006244C: 00000000
	.long 0xa8c0                                               // 000000062450: 0000A8C0
	.long 0                                                    // 000000062454: 00000000
	.long 0                                                    // 000000062458: 00000000
	.long 0                                                    // 00000006245C: 00000000
	.long 0                                                    // 000000062460: 00000000
	.long 0                                                    // 000000062464: 00000000
	.long 0                                                    // 000000062468: 00000000
	.long 0                                                    // 00000006246C: 00000000
	.long 0x60af0101                                           // 000000062470: 60AF0101
	.long 0x1384                                               // 000000062474: 00001384
	.long 0x408                                                // 000000062478: 00000408
	.long 0                                                    // 00000006247C: 00000000
	.type	mul_get_work_dim_get_global_size.kd,@object
mul_get_work_dim_get_global_size.kd:
	.long 0                                                    // 000000062480: 00000000
	.long 0                                                    // 000000062484: 00000000
	.long 0x110                                                // 000000062488: 00000110
	.long 0                                                    // 00000006248C: 00000000
	.long 0xaa80                                               // 000000062490: 0000AA80
	.long 0                                                    // 000000062494: 00000000
	.long 0                                                    // 000000062498: 00000000
	.long 0                                                    // 00000006249C: 00000000
	.long 0                                                    // 0000000624A0: 00000000
	.long 0                                                    // 0000000624A4: 00000000
	.long 0                                                    // 0000000624A8: 00000000
	.long 0                                                    // 0000000624AC: 00000000
	.long 0x60af0101                                           // 0000000624B0: 60AF0101
	.long 0x1384                                               // 0000000624B4: 00001384
	.long 0x408                                                // 0000000624B8: 00000408
	.long 0                                                    // 0000000624BC: 00000000
	.type	mul_x_get_num_groups.kd,@object
mul_x_get_num_groups.kd:
	.long 0                                                    // 0000000624C0: 00000000
	.long 0                                                    // 0000000624C4: 00000000
	.long 0x110                                                // 0000000624C8: 00000110
	.long 0                                                    // 0000000624CC: 00000000
	.ascii "@"                                                 // 0000000624D0: 40
	.byte 0xac                                                 // 0000000624D1: AC
	.short 0                                                   // 0000000624D2: 0000
	.long 0                                                    // 0000000624D4: 00000000
	.long 0                                                    // 0000000624D8: 00000000
	.long 0                                                    // 0000000624DC: 00000000
	.long 0                                                    // 0000000624E0: 00000000
	.long 0                                                    // 0000000624E4: 00000000
	.long 0                                                    // 0000000624E8: 00000000
	.long 0                                                    // 0000000624EC: 00000000
	.long 0x60af0101                                           // 0000000624F0: 60AF0101
	.long 0x1384                                               // 0000000624F4: 00001384
	.long 0x408                                                // 0000000624F8: 00000408
	.long 0                                                    // 0000000624FC: 00000000
	.type	mul_get_global_offset_get_num_groups.kd,@object
mul_get_global_offset_get_num_groups.kd:
	.long 0                                                    // 000000062500: 00000000
	.long 0                                                    // 000000062504: 00000000
	.long 0x110                                                // 000000062508: 00000110
	.long 0                                                    // 00000006250C: 00000000
	.long 0xae00                                               // 000000062510: 0000AE00
	.long 0                                                    // 000000062514: 00000000
	.long 0                                                    // 000000062518: 00000000
	.long 0                                                    // 00000006251C: 00000000
	.long 0                                                    // 000000062520: 00000000
	.long 0                                                    // 000000062524: 00000000
	.long 0                                                    // 000000062528: 00000000
	.long 0                                                    // 00000006252C: 00000000
	.long 0x60af0101                                           // 000000062530: 60AF0101
	.long 0x1384                                               // 000000062534: 00001384
	.long 0x408                                                // 000000062538: 00000408
	.long 0                                                    // 00000006253C: 00000000
	.type	mul_get_local_id_get_num_groups.kd,@object
mul_get_local_id_get_num_groups.kd:
	.long 0                                                    // 000000062540: 00000000
	.long 0                                                    // 000000062544: 00000000
	.long 0x110                                                // 000000062548: 00000110
	.long 0                                                    // 00000006254C: 00000000
	.long 0xafc0                                               // 000000062550: 0000AFC0
	.long 0                                                    // 000000062554: 00000000
	.long 0                                                    // 000000062558: 00000000
	.long 0                                                    // 00000006255C: 00000000
	.long 0                                                    // 000000062560: 00000000
	.long 0                                                    // 000000062564: 00000000
	.long 0                                                    // 000000062568: 00000000
	.long 0                                                    // 00000006256C: 00000000
	.long 0x60af0101                                           // 000000062570: 60AF0101
	.long 0x1384                                               // 000000062574: 00001384
	.long 0x408                                                // 000000062578: 00000408
	.long 0                                                    // 00000006257C: 00000000
	.type	mul_get_group_id_get_num_groups.kd,@object
mul_get_group_id_get_num_groups.kd:
	.long 0                                                    // 000000062580: 00000000
	.long 0                                                    // 000000062584: 00000000
	.long 0x110                                                // 000000062588: 00000110
	.long 0                                                    // 00000006258C: 00000000
	.long 0xb180                                               // 000000062590: 0000B180
	.long 0                                                    // 000000062594: 00000000
	.long 0                                                    // 000000062598: 00000000
	.long 0                                                    // 00000006259C: 00000000
	.long 0                                                    // 0000000625A0: 00000000
	.long 0                                                    // 0000000625A4: 00000000
	.long 0                                                    // 0000000625A8: 00000000
	.long 0                                                    // 0000000625AC: 00000000
	.long 0x60af0101                                           // 0000000625B0: 60AF0101
	.long 0x1384                                               // 0000000625B4: 00001384
	.long 0x408                                                // 0000000625B8: 00000408
	.long 0                                                    // 0000000625BC: 00000000
	.type	mul_get_local_size_get_num_groups.kd,@object
mul_get_local_size_get_num_groups.kd:
	.long 0                                                    // 0000000625C0: 00000000
	.long 0                                                    // 0000000625C4: 00000000
	.long 0x110                                                // 0000000625C8: 00000110
	.long 0                                                    // 0000000625CC: 00000000
	.ascii "@"                                                 // 0000000625D0: 40
	.byte 0xb3                                                 // 0000000625D1: B3
	.short 0                                                   // 0000000625D2: 0000
	.long 0                                                    // 0000000625D4: 00000000
	.long 0                                                    // 0000000625D8: 00000000
	.long 0                                                    // 0000000625DC: 00000000
	.long 0                                                    // 0000000625E0: 00000000
	.long 0                                                    // 0000000625E4: 00000000
	.long 0                                                    // 0000000625E8: 00000000
	.long 0                                                    // 0000000625EC: 00000000
	.long 0x60af0101                                           // 0000000625F0: 60AF0101
	.long 0x1384                                               // 0000000625F4: 00001384
	.long 0x408                                                // 0000000625F8: 00000408
	.long 0                                                    // 0000000625FC: 00000000
	.type	mul_get_global_id_get_num_groups.kd,@object
mul_get_global_id_get_num_groups.kd:
	.long 0                                                    // 000000062600: 00000000
	.long 0                                                    // 000000062604: 00000000
	.long 0x110                                                // 000000062608: 00000110
	.long 0                                                    // 00000006260C: 00000000
	.long 0xb500                                               // 000000062610: 0000B500
	.long 0                                                    // 000000062614: 00000000
	.long 0                                                    // 000000062618: 00000000
	.long 0                                                    // 00000006261C: 00000000
	.long 0                                                    // 000000062620: 00000000
	.long 0                                                    // 000000062624: 00000000
	.long 0                                                    // 000000062628: 00000000
	.long 0                                                    // 00000006262C: 00000000
	.long 0x60af0101                                           // 000000062630: 60AF0101
	.long 0x1384                                               // 000000062634: 00001384
	.long 0x408                                                // 000000062638: 00000408
	.long 0                                                    // 00000006263C: 00000000
	.type	mul_get_global_size_get_num_groups.kd,@object
mul_get_global_size_get_num_groups.kd:
	.long 0                                                    // 000000062640: 00000000
	.long 0                                                    // 000000062644: 00000000
	.long 0x110                                                // 000000062648: 00000110
	.long 0                                                    // 00000006264C: 00000000
	.long 0xb6c0                                               // 000000062650: 0000B6C0
	.long 0                                                    // 000000062654: 00000000
	.long 0                                                    // 000000062658: 00000000
	.long 0                                                    // 00000006265C: 00000000
	.long 0                                                    // 000000062660: 00000000
	.long 0                                                    // 000000062664: 00000000
	.long 0                                                    // 000000062668: 00000000
	.long 0                                                    // 00000006266C: 00000000
	.long 0x60af0101                                           // 000000062670: 60AF0101
	.long 0x1384                                               // 000000062674: 00001384
	.long 0x408                                                // 000000062678: 00000408
	.long 0                                                    // 00000006267C: 00000000
	.type	mul_get_num_groups_get_num_groups.kd,@object
mul_get_num_groups_get_num_groups.kd:
	.long 0                                                    // 000000062680: 00000000
	.long 0                                                    // 000000062684: 00000000
	.long 0x110                                                // 000000062688: 00000110
	.long 0                                                    // 00000006268C: 00000000
	.long 0xb880                                               // 000000062690: 0000B880
	.long 0                                                    // 000000062694: 00000000
	.long 0                                                    // 000000062698: 00000000
	.long 0                                                    // 00000006269C: 00000000
	.long 0                                                    // 0000000626A0: 00000000
	.long 0                                                    // 0000000626A4: 00000000
	.long 0                                                    // 0000000626A8: 00000000
	.long 0                                                    // 0000000626AC: 00000000
	.long 0x60af0101                                           // 0000000626B0: 60AF0101
	.long 0x1384                                               // 0000000626B4: 00001384
	.long 0x408                                                // 0000000626B8: 00000408
	.long 0                                                    // 0000000626BC: 00000000
	.type	mul_get_work_dim_get_num_groups.kd,@object
mul_get_work_dim_get_num_groups.kd:
	.long 0                                                    // 0000000626C0: 00000000
	.long 0                                                    // 0000000626C4: 00000000
	.long 0x110                                                // 0000000626C8: 00000110
	.long 0                                                    // 0000000626CC: 00000000
	.ascii "@"                                                 // 0000000626D0: 40
	.byte 0xba                                                 // 0000000626D1: BA
	.short 0                                                   // 0000000626D2: 0000
	.long 0                                                    // 0000000626D4: 00000000
	.long 0                                                    // 0000000626D8: 00000000
	.long 0                                                    // 0000000626DC: 00000000
	.long 0                                                    // 0000000626E0: 00000000
	.long 0                                                    // 0000000626E4: 00000000
	.long 0                                                    // 0000000626E8: 00000000
	.long 0                                                    // 0000000626EC: 00000000
	.long 0x60af0101                                           // 0000000626F0: 60AF0101
	.long 0x1384                                               // 0000000626F4: 00001384
	.long 0x408                                                // 0000000626F8: 00000408
	.long 0                                                    // 0000000626FC: 00000000
	.type	mul_x_get_work_dim.kd,@object
mul_x_get_work_dim.kd:
	.long 0                                                    // 000000062700: 00000000
	.long 0                                                    // 000000062704: 00000000
	.long 0x110                                                // 000000062708: 00000110
	.long 0                                                    // 00000006270C: 00000000
	.long 0xbc00                                               // 000000062710: 0000BC00
	.long 0                                                    // 000000062714: 00000000
	.long 0                                                    // 000000062718: 00000000
	.long 0                                                    // 00000006271C: 00000000
	.long 0                                                    // 000000062720: 00000000
	.long 0                                                    // 000000062724: 00000000
	.long 0                                                    // 000000062728: 00000000
	.long 0                                                    // 00000006272C: 00000000
	.long 0x60af0100                                           // 000000062730: 60AF0100
	.long 0x1384                                               // 000000062734: 00001384
	.long 0x408                                                // 000000062738: 00000408
	.long 0                                                    // 00000006273C: 00000000
	.type	mul_get_global_offset_get_work_dim.kd,@object
mul_get_global_offset_get_work_dim.kd:
	.long 0                                                    // 000000062740: 00000000
	.long 0                                                    // 000000062744: 00000000
	.long 0x110                                                // 000000062748: 00000110
	.long 0                                                    // 00000006274C: 00000000
	.long 0xbcc0                                               // 000000062750: 0000BCC0
	.long 0                                                    // 000000062754: 00000000
	.long 0                                                    // 000000062758: 00000000
	.long 0                                                    // 00000006275C: 00000000
	.long 0                                                    // 000000062760: 00000000
	.long 0                                                    // 000000062764: 00000000
	.long 0                                                    // 000000062768: 00000000
	.long 0                                                    // 00000006276C: 00000000
	.long 0x60af0101                                           // 000000062770: 60AF0101
	.long 0x1384                                               // 000000062774: 00001384
	.long 0x408                                                // 000000062778: 00000408
	.long 0                                                    // 00000006277C: 00000000
	.type	mul_get_local_id_get_work_dim.kd,@object
mul_get_local_id_get_work_dim.kd:
	.long 0                                                    // 000000062780: 00000000
	.long 0                                                    // 000000062784: 00000000
	.long 0x110                                                // 000000062788: 00000110
	.long 0                                                    // 00000006278C: 00000000
	.long 0xbd80                                               // 000000062790: 0000BD80
	.long 0                                                    // 000000062794: 00000000
	.long 0                                                    // 000000062798: 00000000
	.long 0                                                    // 00000006279C: 00000000
	.long 0                                                    // 0000000627A0: 00000000
	.long 0                                                    // 0000000627A4: 00000000
	.long 0                                                    // 0000000627A8: 00000000
	.long 0                                                    // 0000000627AC: 00000000
	.long 0x60af0101                                           // 0000000627B0: 60AF0101
	.long 0x1384                                               // 0000000627B4: 00001384
	.long 0x408                                                // 0000000627B8: 00000408
	.long 0                                                    // 0000000627BC: 00000000
	.type	mul_get_group_id_get_work_dim.kd,@object
mul_get_group_id_get_work_dim.kd:
	.long 0                                                    // 0000000627C0: 00000000
	.long 0                                                    // 0000000627C4: 00000000
	.long 0x110                                                // 0000000627C8: 00000110
	.long 0                                                    // 0000000627CC: 00000000
	.ascii "@"                                                 // 0000000627D0: 40
	.byte 0xbe                                                 // 0000000627D1: BE
	.short 0                                                   // 0000000627D2: 0000
	.long 0                                                    // 0000000627D4: 00000000
	.long 0                                                    // 0000000627D8: 00000000
	.long 0                                                    // 0000000627DC: 00000000
	.long 0                                                    // 0000000627E0: 00000000
	.long 0                                                    // 0000000627E4: 00000000
	.long 0                                                    // 0000000627E8: 00000000
	.long 0                                                    // 0000000627EC: 00000000
	.long 0x60af0101                                           // 0000000627F0: 60AF0101
	.long 0x1384                                               // 0000000627F4: 00001384
	.long 0x408                                                // 0000000627F8: 00000408
	.long 0                                                    // 0000000627FC: 00000000
	.type	mul_get_local_size_get_work_dim.kd,@object
mul_get_local_size_get_work_dim.kd:
	.long 0                                                    // 000000062800: 00000000
	.long 0                                                    // 000000062804: 00000000
	.long 0x110                                                // 000000062808: 00000110
	.long 0                                                    // 00000006280C: 00000000
	.long 0xbf00                                               // 000000062810: 0000BF00
	.long 0                                                    // 000000062814: 00000000
	.long 0                                                    // 000000062818: 00000000
	.long 0                                                    // 00000006281C: 00000000
	.long 0                                                    // 000000062820: 00000000
	.long 0                                                    // 000000062824: 00000000
	.long 0                                                    // 000000062828: 00000000
	.long 0                                                    // 00000006282C: 00000000
	.long 0x60af0101                                           // 000000062830: 60AF0101
	.long 0x1384                                               // 000000062834: 00001384
	.long 0x408                                                // 000000062838: 00000408
	.long 0                                                    // 00000006283C: 00000000
	.type	mul_get_global_id_get_work_dim.kd,@object
mul_get_global_id_get_work_dim.kd:
	.long 0                                                    // 000000062840: 00000000
	.long 0                                                    // 000000062844: 00000000
	.long 0x110                                                // 000000062848: 00000110
	.long 0                                                    // 00000006284C: 00000000
	.long 0xc0c0                                               // 000000062850: 0000C0C0
	.long 0                                                    // 000000062854: 00000000
	.long 0                                                    // 000000062858: 00000000
	.long 0                                                    // 00000006285C: 00000000
	.long 0                                                    // 000000062860: 00000000
	.long 0                                                    // 000000062864: 00000000
	.long 0                                                    // 000000062868: 00000000
	.long 0                                                    // 00000006286C: 00000000
	.long 0x60af0101                                           // 000000062870: 60AF0101
	.long 0x1384                                               // 000000062874: 00001384
	.long 0x408                                                // 000000062878: 00000408
	.long 0                                                    // 00000006287C: 00000000
	.type	mul_get_global_size_get_work_dim.kd,@object
mul_get_global_size_get_work_dim.kd:
	.long 0                                                    // 000000062880: 00000000
	.long 0                                                    // 000000062884: 00000000
	.long 0x110                                                // 000000062888: 00000110
	.long 0                                                    // 00000006288C: 00000000
	.long 0xc280                                               // 000000062890: 0000C280
	.long 0                                                    // 000000062894: 00000000
	.long 0                                                    // 000000062898: 00000000
	.long 0                                                    // 00000006289C: 00000000
	.long 0                                                    // 0000000628A0: 00000000
	.long 0                                                    // 0000000628A4: 00000000
	.long 0                                                    // 0000000628A8: 00000000
	.long 0                                                    // 0000000628AC: 00000000
	.long 0x60af0101                                           // 0000000628B0: 60AF0101
	.long 0x1384                                               // 0000000628B4: 00001384
	.long 0x408                                                // 0000000628B8: 00000408
	.long 0                                                    // 0000000628BC: 00000000
	.type	mul_get_num_groups_get_work_dim.kd,@object
mul_get_num_groups_get_work_dim.kd:
	.long 0                                                    // 0000000628C0: 00000000
	.long 0                                                    // 0000000628C4: 00000000
	.long 0x110                                                // 0000000628C8: 00000110
	.long 0                                                    // 0000000628CC: 00000000
	.ascii "@"                                                 // 0000000628D0: 40
	.byte 0xc4                                                 // 0000000628D1: C4
	.short 0                                                   // 0000000628D2: 0000
	.long 0                                                    // 0000000628D4: 00000000
	.long 0                                                    // 0000000628D8: 00000000
	.long 0                                                    // 0000000628DC: 00000000
	.long 0                                                    // 0000000628E0: 00000000
	.long 0                                                    // 0000000628E4: 00000000
	.long 0                                                    // 0000000628E8: 00000000
	.long 0                                                    // 0000000628EC: 00000000
	.long 0x60af0101                                           // 0000000628F0: 60AF0101
	.long 0x1384                                               // 0000000628F4: 00001384
	.long 0x408                                                // 0000000628F8: 00000408
	.long 0                                                    // 0000000628FC: 00000000
	.type	mul_get_work_dim_get_work_dim.kd,@object
mul_get_work_dim_get_work_dim.kd:
	.long 0                                                    // 000000062900: 00000000
	.long 0                                                    // 000000062904: 00000000
	.long 0x110                                                // 000000062908: 00000110
	.long 0                                                    // 00000006290C: 00000000
	.long 0xc600                                               // 000000062910: 0000C600
	.long 0                                                    // 000000062914: 00000000
	.long 0                                                    // 000000062918: 00000000
	.long 0                                                    // 00000006291C: 00000000
	.long 0                                                    // 000000062920: 00000000
	.long 0                                                    // 000000062924: 00000000
	.long 0                                                    // 000000062928: 00000000
	.long 0                                                    // 00000006292C: 00000000
	.long 0x60af0100                                           // 000000062930: 60AF0100
	.long 0x1384                                               // 000000062934: 00001384
	.long 0x408                                                // 000000062938: 00000408
	.long 0                                                    // 00000006293C: 00000000
	.type	mul_x_64.kd,@object
mul_x_64.kd:
	.long 0                                                    // 000000062940: 00000000
	.long 0                                                    // 000000062944: 00000000
	.long 0x110                                                // 000000062948: 00000110
	.long 0                                                    // 00000006294C: 00000000
	.long 0xc6c0                                               // 000000062950: 0000C6C0
	.long 0                                                    // 000000062954: 00000000
	.long 0                                                    // 000000062958: 00000000
	.long 0                                                    // 00000006295C: 00000000
	.long 0                                                    // 000000062960: 00000000
	.long 0                                                    // 000000062964: 00000000
	.long 0                                                    // 000000062968: 00000000
	.long 0                                                    // 00000006296C: 00000000
	.long 0x60af0100                                           // 000000062970: 60AF0100
	.long 0x84                                                 // 000000062974: 00000084
	.long 0x408                                                // 000000062978: 00000408
	.long 0                                                    // 00000006297C: 00000000
	.type	mul_get_global_offset_64.kd,@object
mul_get_global_offset_64.kd:
	.long 0                                                    // 000000062980: 00000000
	.long 0                                                    // 000000062984: 00000000
	.long 0x110                                                // 000000062988: 00000110
	.long 0                                                    // 00000006298C: 00000000
	.long 0xc780                                               // 000000062990: 0000C780
	.long 0                                                    // 000000062994: 00000000
	.long 0                                                    // 000000062998: 00000000
	.long 0                                                    // 00000006299C: 00000000
	.long 0                                                    // 0000000629A0: 00000000
	.long 0                                                    // 0000000629A4: 00000000
	.long 0                                                    // 0000000629A8: 00000000
	.long 0                                                    // 0000000629AC: 00000000
	.long 0x60af0100                                           // 0000000629B0: 60AF0100
	.long 0x84                                                 // 0000000629B4: 00000084
	.long 0x408                                                // 0000000629B8: 00000408
	.long 0                                                    // 0000000629BC: 00000000
	.type	mul_get_local_id_64.kd,@object
mul_get_local_id_64.kd:
	.long 0                                                    // 0000000629C0: 00000000
	.long 0                                                    // 0000000629C4: 00000000
	.long 0x110                                                // 0000000629C8: 00000110
	.long 0                                                    // 0000000629CC: 00000000
	.ascii "@"                                                 // 0000000629D0: 40
	.byte 0xc8                                                 // 0000000629D1: C8
	.short 0                                                   // 0000000629D2: 0000
	.long 0                                                    // 0000000629D4: 00000000
	.long 0                                                    // 0000000629D8: 00000000
	.long 0                                                    // 0000000629DC: 00000000
	.long 0                                                    // 0000000629E0: 00000000
	.long 0                                                    // 0000000629E4: 00000000
	.long 0                                                    // 0000000629E8: 00000000
	.long 0                                                    // 0000000629EC: 00000000
	.long 0x60af0100                                           // 0000000629F0: 60AF0100
	.long 0x84                                                 // 0000000629F4: 00000084
	.long 0x408                                                // 0000000629F8: 00000408
	.long 0                                                    // 0000000629FC: 00000000
	.type	mul_get_group_id_64.kd,@object
mul_get_group_id_64.kd:
	.long 0                                                    // 000000062A00: 00000000
	.long 0                                                    // 000000062A04: 00000000
	.long 0x110                                                // 000000062A08: 00000110
	.long 0                                                    // 000000062A0C: 00000000
	.long 0xc900                                               // 000000062A10: 0000C900
	.long 0                                                    // 000000062A14: 00000000
	.long 0                                                    // 000000062A18: 00000000
	.long 0                                                    // 000000062A1C: 00000000
	.long 0                                                    // 000000062A20: 00000000
	.long 0                                                    // 000000062A24: 00000000
	.long 0                                                    // 000000062A28: 00000000
	.long 0                                                    // 000000062A2C: 00000000
	.long 0x60af0100                                           // 000000062A30: 60AF0100
	.long 0x84                                                 // 000000062A34: 00000084
	.long 0x408                                                // 000000062A38: 00000408
	.long 0                                                    // 000000062A3C: 00000000
	.type	mul_get_local_size_64.kd,@object
mul_get_local_size_64.kd:
	.long 0                                                    // 000000062A40: 00000000
	.long 0                                                    // 000000062A44: 00000000
	.long 0x110                                                // 000000062A48: 00000110
	.long 0                                                    // 000000062A4C: 00000000
	.long 0xc9c0                                               // 000000062A50: 0000C9C0
	.long 0                                                    // 000000062A54: 00000000
	.long 0                                                    // 000000062A58: 00000000
	.long 0                                                    // 000000062A5C: 00000000
	.long 0                                                    // 000000062A60: 00000000
	.long 0                                                    // 000000062A64: 00000000
	.long 0                                                    // 000000062A68: 00000000
	.long 0                                                    // 000000062A6C: 00000000
	.long 0x60af0100                                           // 000000062A70: 60AF0100
	.long 0x84                                                 // 000000062A74: 00000084
	.long 0x408                                                // 000000062A78: 00000408
	.long 0                                                    // 000000062A7C: 00000000
	.type	mul_get_global_id_64.kd,@object
mul_get_global_id_64.kd:
	.long 0                                                    // 000000062A80: 00000000
	.long 0                                                    // 000000062A84: 00000000
	.long 0x110                                                // 000000062A88: 00000110
	.long 0                                                    // 000000062A8C: 00000000
	.long 0xca80                                               // 000000062A90: 0000CA80
	.long 0                                                    // 000000062A94: 00000000
	.long 0                                                    // 000000062A98: 00000000
	.long 0                                                    // 000000062A9C: 00000000
	.long 0                                                    // 000000062AA0: 00000000
	.long 0                                                    // 000000062AA4: 00000000
	.long 0                                                    // 000000062AA8: 00000000
	.long 0                                                    // 000000062AAC: 00000000
	.long 0x60af0100                                           // 000000062AB0: 60AF0100
	.long 0x84                                                 // 000000062AB4: 00000084
	.long 0x408                                                // 000000062AB8: 00000408
	.long 0                                                    // 000000062ABC: 00000000
	.type	mul_get_global_size_64.kd,@object
mul_get_global_size_64.kd:
	.long 0                                                    // 000000062AC0: 00000000
	.long 0                                                    // 000000062AC4: 00000000
	.long 0x110                                                // 000000062AC8: 00000110
	.long 0                                                    // 000000062ACC: 00000000
	.ascii "@"                                                 // 000000062AD0: 40
	.byte 0xcb                                                 // 000000062AD1: CB
	.short 0                                                   // 000000062AD2: 0000
	.long 0                                                    // 000000062AD4: 00000000
	.long 0                                                    // 000000062AD8: 00000000
	.long 0                                                    // 000000062ADC: 00000000
	.long 0                                                    // 000000062AE0: 00000000
	.long 0                                                    // 000000062AE4: 00000000
	.long 0                                                    // 000000062AE8: 00000000
	.long 0                                                    // 000000062AEC: 00000000
	.long 0x60af0100                                           // 000000062AF0: 60AF0100
	.long 0x84                                                 // 000000062AF4: 00000084
	.long 0x408                                                // 000000062AF8: 00000408
	.long 0                                                    // 000000062AFC: 00000000
	.type	mul_get_num_groups_64.kd,@object
mul_get_num_groups_64.kd:
	.long 0                                                    // 000000062B00: 00000000
	.long 0                                                    // 000000062B04: 00000000
	.long 0x110                                                // 000000062B08: 00000110
	.long 0                                                    // 000000062B0C: 00000000
	.long 0xcc00                                               // 000000062B10: 0000CC00
	.long 0                                                    // 000000062B14: 00000000
	.long 0                                                    // 000000062B18: 00000000
	.long 0                                                    // 000000062B1C: 00000000
	.long 0                                                    // 000000062B20: 00000000
	.long 0                                                    // 000000062B24: 00000000
	.long 0                                                    // 000000062B28: 00000000
	.long 0                                                    // 000000062B2C: 00000000
	.long 0x60af0100                                           // 000000062B30: 60AF0100
	.long 0x84                                                 // 000000062B34: 00000084
	.long 0x408                                                // 000000062B38: 00000408
	.long 0                                                    // 000000062B3C: 00000000
	.type	mul_get_work_dim.kd,@object
mul_get_work_dim.kd:
	.long 0                                                    // 000000062B40: 00000000
	.long 0                                                    // 000000062B44: 00000000
	.long 0x110                                                // 000000062B48: 00000110
	.long 0                                                    // 000000062B4C: 00000000
	.long 0xccc0                                               // 000000062B50: 0000CCC0
	.long 0                                                    // 000000062B54: 00000000
	.long 0                                                    // 000000062B58: 00000000
	.long 0                                                    // 000000062B5C: 00000000
	.long 0                                                    // 000000062B60: 00000000
	.long 0                                                    // 000000062B64: 00000000
	.long 0                                                    // 000000062B68: 00000000
	.long 0                                                    // 000000062B6C: 00000000
	.long 0x60af0100                                           // 000000062B70: 60AF0100
	.long 0x84                                                 // 000000062B74: 00000084
	.long 0x408                                                // 000000062B78: 00000408
	.long 0                                                    // 000000062B7C: 00000000
	.type	mul_x_8_8.kd,@object
mul_x_8_8.kd:
	.long 0                                                    // 000000062B80: 00000000
	.long 0                                                    // 000000062B84: 00000000
	.long 0x110                                                // 000000062B88: 00000110
	.long 0                                                    // 000000062B8C: 00000000
	.long 0xcd80                                               // 000000062B90: 0000CD80
	.long 0                                                    // 000000062B94: 00000000
	.long 0                                                    // 000000062B98: 00000000
	.long 0                                                    // 000000062B9C: 00000000
	.long 0                                                    // 000000062BA0: 00000000
	.long 0                                                    // 000000062BA4: 00000000
	.long 0                                                    // 000000062BA8: 00000000
	.long 0                                                    // 000000062BAC: 00000000
	.long 0x60af0100                                           // 000000062BB0: 60AF0100
	.long 0x984                                                // 000000062BB4: 00000984
	.long 0x408                                                // 000000062BB8: 00000408
	.long 0                                                    // 000000062BBC: 00000000
	.type	mul_get_global_offset_8_8.kd,@object
mul_get_global_offset_8_8.kd:
	.long 0                                                    // 000000062BC0: 00000000
	.long 0                                                    // 000000062BC4: 00000000
	.long 0x110                                                // 000000062BC8: 00000110
	.long 0                                                    // 000000062BCC: 00000000
	.ascii "@"                                                 // 000000062BD0: 40
	.byte 0xce                                                 // 000000062BD1: CE
	.short 0                                                   // 000000062BD2: 0000
	.long 0                                                    // 000000062BD4: 00000000
	.long 0                                                    // 000000062BD8: 00000000
	.long 0                                                    // 000000062BDC: 00000000
	.long 0                                                    // 000000062BE0: 00000000
	.long 0                                                    // 000000062BE4: 00000000
	.long 0                                                    // 000000062BE8: 00000000
	.long 0                                                    // 000000062BEC: 00000000
	.long 0x60af0100                                           // 000000062BF0: 60AF0100
	.long 0x84                                                 // 000000062BF4: 00000084
	.long 0x408                                                // 000000062BF8: 00000408
	.long 0                                                    // 000000062BFC: 00000000
	.type	mul_get_local_id_8_8.kd,@object
mul_get_local_id_8_8.kd:
	.long 0                                                    // 000000062C00: 00000000
	.long 0                                                    // 000000062C04: 00000000
	.long 0x110                                                // 000000062C08: 00000110
	.long 0                                                    // 000000062C0C: 00000000
	.long 0xcf00                                               // 000000062C10: 0000CF00
	.long 0                                                    // 000000062C14: 00000000
	.long 0                                                    // 000000062C18: 00000000
	.long 0                                                    // 000000062C1C: 00000000
	.long 0                                                    // 000000062C20: 00000000
	.long 0                                                    // 000000062C24: 00000000
	.long 0                                                    // 000000062C28: 00000000
	.long 0                                                    // 000000062C2C: 00000000
	.long 0x60af0100                                           // 000000062C30: 60AF0100
	.long 0x884                                                // 000000062C34: 00000884
	.long 0x408                                                // 000000062C38: 00000408
	.long 0                                                    // 000000062C3C: 00000000
	.type	mul_get_group_id_8_8.kd,@object
mul_get_group_id_8_8.kd:
	.long 0                                                    // 000000062C40: 00000000
	.long 0                                                    // 000000062C44: 00000000
	.long 0x110                                                // 000000062C48: 00000110
	.long 0                                                    // 000000062C4C: 00000000
	.long 0xcfc0                                               // 000000062C50: 0000CFC0
	.long 0                                                    // 000000062C54: 00000000
	.long 0                                                    // 000000062C58: 00000000
	.long 0                                                    // 000000062C5C: 00000000
	.long 0                                                    // 000000062C60: 00000000
	.long 0                                                    // 000000062C64: 00000000
	.long 0                                                    // 000000062C68: 00000000
	.long 0                                                    // 000000062C6C: 00000000
	.long 0x60af0100                                           // 000000062C70: 60AF0100
	.long 0x184                                                // 000000062C74: 00000184
	.long 0x408                                                // 000000062C78: 00000408
	.long 0                                                    // 000000062C7C: 00000000
	.type	mul_get_local_size_8_8.kd,@object
mul_get_local_size_8_8.kd:
	.long 0                                                    // 000000062C80: 00000000
	.long 0                                                    // 000000062C84: 00000000
	.long 0x110                                                // 000000062C88: 00000110
	.long 0                                                    // 000000062C8C: 00000000
	.long 0xd080                                               // 000000062C90: 0000D080
	.long 0                                                    // 000000062C94: 00000000
	.long 0                                                    // 000000062C98: 00000000
	.long 0                                                    // 000000062C9C: 00000000
	.long 0                                                    // 000000062CA0: 00000000
	.long 0                                                    // 000000062CA4: 00000000
	.long 0                                                    // 000000062CA8: 00000000
	.long 0                                                    // 000000062CAC: 00000000
	.long 0x60af0100                                           // 000000062CB0: 60AF0100
	.long 0x184                                                // 000000062CB4: 00000184
	.long 0x408                                                // 000000062CB8: 00000408
	.long 0                                                    // 000000062CBC: 00000000
	.type	mul_get_global_id_8_8.kd,@object
mul_get_global_id_8_8.kd:
	.long 0                                                    // 000000062CC0: 00000000
	.long 0                                                    // 000000062CC4: 00000000
	.long 0x110                                                // 000000062CC8: 00000110
	.long 0                                                    // 000000062CCC: 00000000
	.ascii "@"                                                 // 000000062CD0: 40
	.byte 0xd1                                                 // 000000062CD1: D1
	.short 0                                                   // 000000062CD2: 0000
	.long 0                                                    // 000000062CD4: 00000000
	.long 0                                                    // 000000062CD8: 00000000
	.long 0                                                    // 000000062CDC: 00000000
	.long 0                                                    // 000000062CE0: 00000000
	.long 0                                                    // 000000062CE4: 00000000
	.long 0                                                    // 000000062CE8: 00000000
	.long 0                                                    // 000000062CEC: 00000000
	.long 0x60af0100                                           // 000000062CF0: 60AF0100
	.long 0x984                                                // 000000062CF4: 00000984
	.long 0x408                                                // 000000062CF8: 00000408
	.long 0                                                    // 000000062CFC: 00000000
	.type	mul_get_global_size_8_8.kd,@object
mul_get_global_size_8_8.kd:
	.long 0                                                    // 000000062D00: 00000000
	.long 0                                                    // 000000062D04: 00000000
	.long 0x110                                                // 000000062D08: 00000110
	.long 0                                                    // 000000062D0C: 00000000
	.long 0xd200                                               // 000000062D10: 0000D200
	.long 0                                                    // 000000062D14: 00000000
	.long 0                                                    // 000000062D18: 00000000
	.long 0                                                    // 000000062D1C: 00000000
	.long 0                                                    // 000000062D20: 00000000
	.long 0                                                    // 000000062D24: 00000000
	.long 0                                                    // 000000062D28: 00000000
	.long 0                                                    // 000000062D2C: 00000000
	.long 0x60af0100                                           // 000000062D30: 60AF0100
	.long 0x84                                                 // 000000062D34: 00000084
	.long 0x408                                                // 000000062D38: 00000408
	.long 0                                                    // 000000062D3C: 00000000
	.type	mul_get_num_groups_8_8.kd,@object
mul_get_num_groups_8_8.kd:
	.long 0                                                    // 000000062D40: 00000000
	.long 0                                                    // 000000062D44: 00000000
	.long 0x110                                                // 000000062D48: 00000110
	.long 0                                                    // 000000062D4C: 00000000
	.long 0xd2c0                                               // 000000062D50: 0000D2C0
	.long 0                                                    // 000000062D54: 00000000
	.long 0                                                    // 000000062D58: 00000000
	.long 0                                                    // 000000062D5C: 00000000
	.long 0                                                    // 000000062D60: 00000000
	.long 0                                                    // 000000062D64: 00000000
	.long 0                                                    // 000000062D68: 00000000
	.long 0                                                    // 000000062D6C: 00000000
	.long 0x60af0100                                           // 000000062D70: 60AF0100
	.long 0x84                                                 // 000000062D74: 00000084
	.long 0x408                                                // 000000062D78: 00000408
	.long 0                                                    // 000000062D7C: 00000000
	.type	mul_get_work_dim_8_8.kd,@object
mul_get_work_dim_8_8.kd:
	.long 0                                                    // 000000062D80: 00000000
	.long 0                                                    // 000000062D84: 00000000
	.long 0x110                                                // 000000062D88: 00000110
	.long 0                                                    // 000000062D8C: 00000000
	.long 0xd380                                               // 000000062D90: 0000D380
	.long 0                                                    // 000000062D94: 00000000
	.long 0                                                    // 000000062D98: 00000000
	.long 0                                                    // 000000062D9C: 00000000
	.long 0                                                    // 000000062DA0: 00000000
	.long 0                                                    // 000000062DA4: 00000000
	.long 0                                                    // 000000062DA8: 00000000
	.long 0                                                    // 000000062DAC: 00000000
	.long 0x60af0100                                           // 000000062DB0: 60AF0100
	.long 0x984                                                // 000000062DB4: 00000984
	.long 0x408                                                // 000000062DB8: 00000408
	.long 0                                                    // 000000062DBC: 00000000
	.type	mul_long_x_x.kd,@object
mul_long_x_x.kd:
	.long 0                                                    // 000000062DC0: 00000000
	.long 0                                                    // 000000062DC4: 00000000
	.long 0x110                                                // 000000062DC8: 00000110
	.long 0                                                    // 000000062DCC: 00000000
	.ascii "@"                                                 // 000000062DD0: 40
	.byte 0xd4                                                 // 000000062DD1: D4
	.short 0                                                   // 000000062DD2: 0000
	.long 0                                                    // 000000062DD4: 00000000
	.long 0                                                    // 000000062DD8: 00000000
	.long 0                                                    // 000000062DDC: 00000000
	.long 0                                                    // 000000062DE0: 00000000
	.long 0                                                    // 000000062DE4: 00000000
	.long 0                                                    // 000000062DE8: 00000000
	.long 0                                                    // 000000062DEC: 00000000
	.long 0x60af0100                                           // 000000062DF0: 60AF0100
	.long 0x84                                                 // 000000062DF4: 00000084
	.long 0x408                                                // 000000062DF8: 00000408
	.long 0                                                    // 000000062DFC: 00000000
	.type	mul_long_get_global_offset_x.kd,@object
mul_long_get_global_offset_x.kd:
	.long 0                                                    // 000000062E00: 00000000
	.long 0                                                    // 000000062E04: 00000000
	.long 0x110                                                // 000000062E08: 00000110
	.long 0                                                    // 000000062E0C: 00000000
	.long 0xd500                                               // 000000062E10: 0000D500
	.long 0                                                    // 000000062E14: 00000000
	.long 0                                                    // 000000062E18: 00000000
	.long 0                                                    // 000000062E1C: 00000000
	.long 0                                                    // 000000062E20: 00000000
	.long 0                                                    // 000000062E24: 00000000
	.long 0                                                    // 000000062E28: 00000000
	.long 0                                                    // 000000062E2C: 00000000
	.long 0x60af0100                                           // 000000062E30: 60AF0100
	.long 0x1384                                               // 000000062E34: 00001384
	.long 0x408                                                // 000000062E38: 00000408
	.long 0                                                    // 000000062E3C: 00000000
	.type	mul_long_get_local_id_x.kd,@object
mul_long_get_local_id_x.kd:
	.long 0                                                    // 000000062E40: 00000000
	.long 0                                                    // 000000062E44: 00000000
	.long 0x110                                                // 000000062E48: 00000110
	.long 0                                                    // 000000062E4C: 00000000
	.long 0xd5c0                                               // 000000062E50: 0000D5C0
	.long 0                                                    // 000000062E54: 00000000
	.long 0                                                    // 000000062E58: 00000000
	.long 0                                                    // 000000062E5C: 00000000
	.long 0                                                    // 000000062E60: 00000000
	.long 0                                                    // 000000062E64: 00000000
	.long 0                                                    // 000000062E68: 00000000
	.long 0                                                    // 000000062E6C: 00000000
	.long 0x60af0101                                           // 000000062E70: 60AF0101
	.long 0x1384                                               // 000000062E74: 00001384
	.long 0x408                                                // 000000062E78: 00000408
	.long 0                                                    // 000000062E7C: 00000000
	.type	mul_long_get_group_id_x.kd,@object
mul_long_get_group_id_x.kd:
	.long 0                                                    // 000000062E80: 00000000
	.long 0                                                    // 000000062E84: 00000000
	.long 0x110                                                // 000000062E88: 00000110
	.long 0                                                    // 000000062E8C: 00000000
	.long 0xd680                                               // 000000062E90: 0000D680
	.long 0                                                    // 000000062E94: 00000000
	.long 0                                                    // 000000062E98: 00000000
	.long 0                                                    // 000000062E9C: 00000000
	.long 0                                                    // 000000062EA0: 00000000
	.long 0                                                    // 000000062EA4: 00000000
	.long 0                                                    // 000000062EA8: 00000000
	.long 0                                                    // 000000062EAC: 00000000
	.long 0x60af0100                                           // 000000062EB0: 60AF0100
	.long 0x1384                                               // 000000062EB4: 00001384
	.long 0x408                                                // 000000062EB8: 00000408
	.long 0                                                    // 000000062EBC: 00000000
	.type	mul_long_get_local_size_x.kd,@object
mul_long_get_local_size_x.kd:
	.long 0                                                    // 000000062EC0: 00000000
	.long 0                                                    // 000000062EC4: 00000000
	.long 0x110                                                // 000000062EC8: 00000110
	.long 0                                                    // 000000062ECC: 00000000
	.ascii "@"                                                 // 000000062ED0: 40
	.byte 0xd7                                                 // 000000062ED1: D7
	.short 0                                                   // 000000062ED2: 0000
	.long 0                                                    // 000000062ED4: 00000000
	.long 0                                                    // 000000062ED8: 00000000
	.long 0                                                    // 000000062EDC: 00000000
	.long 0                                                    // 000000062EE0: 00000000
	.long 0                                                    // 000000062EE4: 00000000
	.long 0                                                    // 000000062EE8: 00000000
	.long 0                                                    // 000000062EEC: 00000000
	.long 0x60af0101                                           // 000000062EF0: 60AF0101
	.long 0x1384                                               // 000000062EF4: 00001384
	.long 0x408                                                // 000000062EF8: 00000408
	.long 0                                                    // 000000062EFC: 00000000
	.type	mul_long_get_global_id_x.kd,@object
mul_long_get_global_id_x.kd:
	.long 0                                                    // 000000062F00: 00000000
	.long 0                                                    // 000000062F04: 00000000
	.long 0x110                                                // 000000062F08: 00000110
	.long 0                                                    // 000000062F0C: 00000000
	.long 0xd900                                               // 000000062F10: 0000D900
	.long 0                                                    // 000000062F14: 00000000
	.long 0                                                    // 000000062F18: 00000000
	.long 0                                                    // 000000062F1C: 00000000
	.long 0                                                    // 000000062F20: 00000000
	.long 0                                                    // 000000062F24: 00000000
	.long 0                                                    // 000000062F28: 00000000
	.long 0                                                    // 000000062F2C: 00000000
	.long 0x60af0101                                           // 000000062F30: 60AF0101
	.long 0x1384                                               // 000000062F34: 00001384
	.long 0x408                                                // 000000062F38: 00000408
	.long 0                                                    // 000000062F3C: 00000000
	.type	mul_long_get_global_size_x.kd,@object
mul_long_get_global_size_x.kd:
	.long 0                                                    // 000000062F40: 00000000
	.long 0                                                    // 000000062F44: 00000000
	.long 0x110                                                // 000000062F48: 00000110
	.long 0                                                    // 000000062F4C: 00000000
	.long 0xd9c0                                               // 000000062F50: 0000D9C0
	.long 0                                                    // 000000062F54: 00000000
	.long 0                                                    // 000000062F58: 00000000
	.long 0                                                    // 000000062F5C: 00000000
	.long 0                                                    // 000000062F60: 00000000
	.long 0                                                    // 000000062F64: 00000000
	.long 0                                                    // 000000062F68: 00000000
	.long 0                                                    // 000000062F6C: 00000000
	.long 0x60af0101                                           // 000000062F70: 60AF0101
	.long 0x1384                                               // 000000062F74: 00001384
	.long 0x408                                                // 000000062F78: 00000408
	.long 0                                                    // 000000062F7C: 00000000
	.type	mul_long_get_num_groups_x.kd,@object
mul_long_get_num_groups_x.kd:
	.long 0                                                    // 000000062F80: 00000000
	.long 0                                                    // 000000062F84: 00000000
	.long 0x110                                                // 000000062F88: 00000110
	.long 0                                                    // 000000062F8C: 00000000
	.long 0xdb80                                               // 000000062F90: 0000DB80
	.long 0                                                    // 000000062F94: 00000000
	.long 0                                                    // 000000062F98: 00000000
	.long 0                                                    // 000000062F9C: 00000000
	.long 0                                                    // 000000062FA0: 00000000
	.long 0                                                    // 000000062FA4: 00000000
	.long 0                                                    // 000000062FA8: 00000000
	.long 0                                                    // 000000062FAC: 00000000
	.long 0x60af0101                                           // 000000062FB0: 60AF0101
	.long 0x1384                                               // 000000062FB4: 00001384
	.long 0x408                                                // 000000062FB8: 00000408
	.long 0                                                    // 000000062FBC: 00000000
	.type	mul_long_get_work_dim_x.kd,@object
mul_long_get_work_dim_x.kd:
	.long 0                                                    // 000000062FC0: 00000000
	.long 0                                                    // 000000062FC4: 00000000
	.long 0x110                                                // 000000062FC8: 00000110
	.long 0                                                    // 000000062FCC: 00000000
	.ascii "@"                                                 // 000000062FD0: 40
	.byte 0xdd                                                 // 000000062FD1: DD
	.short 0                                                   // 000000062FD2: 0000
	.long 0                                                    // 000000062FD4: 00000000
	.long 0                                                    // 000000062FD8: 00000000
	.long 0                                                    // 000000062FDC: 00000000
	.long 0                                                    // 000000062FE0: 00000000
	.long 0                                                    // 000000062FE4: 00000000
	.long 0                                                    // 000000062FE8: 00000000
	.long 0                                                    // 000000062FEC: 00000000
	.long 0x60af0100                                           // 000000062FF0: 60AF0100
	.long 0x84                                                 // 000000062FF4: 00000084
	.long 0x408                                                // 000000062FF8: 00000408
	.long 0                                                    // 000000062FFC: 00000000
	.type	mul_long_x_get_global_offset.kd,@object
mul_long_x_get_global_offset.kd:
	.long 0                                                    // 000000063000: 00000000
	.long 0                                                    // 000000063004: 00000000
	.long 0x110                                                // 000000063008: 00000110
	.long 0                                                    // 00000006300C: 00000000
	.long 0xde00                                               // 000000063010: 0000DE00
	.long 0                                                    // 000000063014: 00000000
	.long 0                                                    // 000000063018: 00000000
	.long 0                                                    // 00000006301C: 00000000
	.long 0                                                    // 000000063020: 00000000
	.long 0                                                    // 000000063024: 00000000
	.long 0                                                    // 000000063028: 00000000
	.long 0                                                    // 00000006302C: 00000000
	.long 0x60af0101                                           // 000000063030: 60AF0101
	.long 0x1384                                               // 000000063034: 00001384
	.long 0x408                                                // 000000063038: 00000408
	.long 0                                                    // 00000006303C: 00000000
	.type	mul_long_get_global_offset_get_global_offset.kd,@object
mul_long_get_global_offset_get_global_offset.kd:
	.long 0                                                    // 000000063040: 00000000
	.long 0                                                    // 000000063044: 00000000
	.long 0x110                                                // 000000063048: 00000110
	.long 0                                                    // 00000006304C: 00000000
	.long 0xdfc0                                               // 000000063050: 0000DFC0
	.long 0                                                    // 000000063054: 00000000
	.long 0                                                    // 000000063058: 00000000
	.long 0                                                    // 00000006305C: 00000000
	.long 0                                                    // 000000063060: 00000000
	.long 0                                                    // 000000063064: 00000000
	.long 0                                                    // 000000063068: 00000000
	.long 0                                                    // 00000006306C: 00000000
	.long 0x60af0101                                           // 000000063070: 60AF0101
	.long 0x1384                                               // 000000063074: 00001384
	.long 0x408                                                // 000000063078: 00000408
	.long 0                                                    // 00000006307C: 00000000
	.type	mul_long_get_local_id_get_global_offset.kd,@object
mul_long_get_local_id_get_global_offset.kd:
	.long 0                                                    // 000000063080: 00000000
	.long 0                                                    // 000000063084: 00000000
	.long 0x110                                                // 000000063088: 00000110
	.long 0                                                    // 00000006308C: 00000000
	.long 0xe180                                               // 000000063090: 0000E180
	.long 0                                                    // 000000063094: 00000000
	.long 0                                                    // 000000063098: 00000000
	.long 0                                                    // 00000006309C: 00000000
	.long 0                                                    // 0000000630A0: 00000000
	.long 0                                                    // 0000000630A4: 00000000
	.long 0                                                    // 0000000630A8: 00000000
	.long 0                                                    // 0000000630AC: 00000000
	.long 0x60af0102                                           // 0000000630B0: 60AF0102
	.long 0x1384                                               // 0000000630B4: 00001384
	.long 0x408                                                // 0000000630B8: 00000408
	.long 0                                                    // 0000000630BC: 00000000
	.type	mul_long_get_group_id_get_global_offset.kd,@object
mul_long_get_group_id_get_global_offset.kd:
	.long 0                                                    // 0000000630C0: 00000000
	.long 0                                                    // 0000000630C4: 00000000
	.long 0x110                                                // 0000000630C8: 00000110
	.long 0                                                    // 0000000630CC: 00000000
	.ascii "@"                                                 // 0000000630D0: 40
	.byte 0xe3                                                 // 0000000630D1: E3
	.short 0                                                   // 0000000630D2: 0000
	.long 0                                                    // 0000000630D4: 00000000
	.long 0                                                    // 0000000630D8: 00000000
	.long 0                                                    // 0000000630DC: 00000000
	.long 0                                                    // 0000000630E0: 00000000
	.long 0                                                    // 0000000630E4: 00000000
	.long 0                                                    // 0000000630E8: 00000000
	.long 0                                                    // 0000000630EC: 00000000
	.long 0x60af0101                                           // 0000000630F0: 60AF0101
	.long 0x1384                                               // 0000000630F4: 00001384
	.long 0x408                                                // 0000000630F8: 00000408
	.long 0                                                    // 0000000630FC: 00000000
	.type	mul_long_get_local_size_get_global_offset.kd,@object
mul_long_get_local_size_get_global_offset.kd:
	.long 0                                                    // 000000063100: 00000000
	.long 0                                                    // 000000063104: 00000000
	.long 0x110                                                // 000000063108: 00000110
	.long 0                                                    // 00000006310C: 00000000
	.long 0xe500                                               // 000000063110: 0000E500
	.long 0                                                    // 000000063114: 00000000
	.long 0                                                    // 000000063118: 00000000
	.long 0                                                    // 00000006311C: 00000000
	.long 0                                                    // 000000063120: 00000000
	.long 0                                                    // 000000063124: 00000000
	.long 0                                                    // 000000063128: 00000000
	.long 0                                                    // 00000006312C: 00000000
	.long 0x60af0101                                           // 000000063130: 60AF0101
	.long 0x1384                                               // 000000063134: 00001384
	.long 0x408                                                // 000000063138: 00000408
	.long 0                                                    // 00000006313C: 00000000
	.type	mul_long_get_global_id_get_global_offset.kd,@object
mul_long_get_global_id_get_global_offset.kd:
	.long 0                                                    // 000000063140: 00000000
	.long 0                                                    // 000000063144: 00000000
	.long 0x110                                                // 000000063148: 00000110
	.long 0                                                    // 00000006314C: 00000000
	.long 0xe6c0                                               // 000000063150: 0000E6C0
	.long 0                                                    // 000000063154: 00000000
	.long 0                                                    // 000000063158: 00000000
	.long 0                                                    // 00000006315C: 00000000
	.long 0                                                    // 000000063160: 00000000
	.long 0                                                    // 000000063164: 00000000
	.long 0                                                    // 000000063168: 00000000
	.long 0                                                    // 00000006316C: 00000000
	.long 0x60af0101                                           // 000000063170: 60AF0101
	.long 0x1384                                               // 000000063174: 00001384
	.long 0x408                                                // 000000063178: 00000408
	.long 0                                                    // 00000006317C: 00000000
	.type	mul_long_get_global_size_get_global_offset.kd,@object
mul_long_get_global_size_get_global_offset.kd:
	.long 0                                                    // 000000063180: 00000000
	.long 0                                                    // 000000063184: 00000000
	.long 0x110                                                // 000000063188: 00000110
	.long 0                                                    // 00000006318C: 00000000
	.long 0xe880                                               // 000000063190: 0000E880
	.long 0                                                    // 000000063194: 00000000
	.long 0                                                    // 000000063198: 00000000
	.long 0                                                    // 00000006319C: 00000000
	.long 0                                                    // 0000000631A0: 00000000
	.long 0                                                    // 0000000631A4: 00000000
	.long 0                                                    // 0000000631A8: 00000000
	.long 0                                                    // 0000000631AC: 00000000
	.long 0x60af0101                                           // 0000000631B0: 60AF0101
	.long 0x1384                                               // 0000000631B4: 00001384
	.long 0x408                                                // 0000000631B8: 00000408
	.long 0                                                    // 0000000631BC: 00000000
	.type	mul_long_get_num_groups_get_global_offset.kd,@object
mul_long_get_num_groups_get_global_offset.kd:
	.long 0                                                    // 0000000631C0: 00000000
	.long 0                                                    // 0000000631C4: 00000000
	.long 0x110                                                // 0000000631C8: 00000110
	.long 0                                                    // 0000000631CC: 00000000
	.ascii "@"                                                 // 0000000631D0: 40
	.byte 0xea                                                 // 0000000631D1: EA
	.short 0                                                   // 0000000631D2: 0000
	.long 0                                                    // 0000000631D4: 00000000
	.long 0                                                    // 0000000631D8: 00000000
	.long 0                                                    // 0000000631DC: 00000000
	.long 0                                                    // 0000000631E0: 00000000
	.long 0                                                    // 0000000631E4: 00000000
	.long 0                                                    // 0000000631E8: 00000000
	.long 0                                                    // 0000000631EC: 00000000
	.long 0x60af0101                                           // 0000000631F0: 60AF0101
	.long 0x1384                                               // 0000000631F4: 00001384
	.long 0x408                                                // 0000000631F8: 00000408
	.long 0                                                    // 0000000631FC: 00000000
	.type	mul_long_get_work_dim_get_global_offset.kd,@object
mul_long_get_work_dim_get_global_offset.kd:
	.long 0                                                    // 000000063200: 00000000
	.long 0                                                    // 000000063204: 00000000
	.long 0x110                                                // 000000063208: 00000110
	.long 0                                                    // 00000006320C: 00000000
	.long 0xec00                                               // 000000063210: 0000EC00
	.long 0                                                    // 000000063214: 00000000
	.long 0                                                    // 000000063218: 00000000
	.long 0                                                    // 00000006321C: 00000000
	.long 0                                                    // 000000063220: 00000000
	.long 0                                                    // 000000063224: 00000000
	.long 0                                                    // 000000063228: 00000000
	.long 0                                                    // 00000006322C: 00000000
	.long 0x60af0101                                           // 000000063230: 60AF0101
	.long 0x1384                                               // 000000063234: 00001384
	.long 0x408                                                // 000000063238: 00000408
	.long 0                                                    // 00000006323C: 00000000
	.type	mul_long_x_get_local_id.kd,@object
mul_long_x_get_local_id.kd:
	.long 0                                                    // 000000063240: 00000000
	.long 0                                                    // 000000063244: 00000000
	.long 0x110                                                // 000000063248: 00000110
	.long 0                                                    // 00000006324C: 00000000
	.long 0xedc0                                               // 000000063250: 0000EDC0
	.long 0                                                    // 000000063254: 00000000
	.long 0                                                    // 000000063258: 00000000
	.long 0                                                    // 00000006325C: 00000000
	.long 0                                                    // 000000063260: 00000000
	.long 0                                                    // 000000063264: 00000000
	.long 0                                                    // 000000063268: 00000000
	.long 0                                                    // 00000006326C: 00000000
	.long 0x60af0101                                           // 000000063270: 60AF0101
	.long 0x1384                                               // 000000063274: 00001384
	.long 0x408                                                // 000000063278: 00000408
	.long 0                                                    // 00000006327C: 00000000
	.type	mul_long_get_global_offset_get_local_id.kd,@object
mul_long_get_global_offset_get_local_id.kd:
	.long 0                                                    // 000000063280: 00000000
	.long 0                                                    // 000000063284: 00000000
	.long 0x110                                                // 000000063288: 00000110
	.long 0                                                    // 00000006328C: 00000000
	.long 0xee80                                               // 000000063290: 0000EE80
	.long 0                                                    // 000000063294: 00000000
	.long 0                                                    // 000000063298: 00000000
	.long 0                                                    // 00000006329C: 00000000
	.long 0                                                    // 0000000632A0: 00000000
	.long 0                                                    // 0000000632A4: 00000000
	.long 0                                                    // 0000000632A8: 00000000
	.long 0                                                    // 0000000632AC: 00000000
	.long 0x60af0101                                           // 0000000632B0: 60AF0101
	.long 0x1384                                               // 0000000632B4: 00001384
	.long 0x408                                                // 0000000632B8: 00000408
	.long 0                                                    // 0000000632BC: 00000000
	.type	mul_long_get_local_id_get_local_id.kd,@object
mul_long_get_local_id_get_local_id.kd:
	.long 0                                                    // 0000000632C0: 00000000
	.long 0                                                    // 0000000632C4: 00000000
	.long 0x110                                                // 0000000632C8: 00000110
	.long 0                                                    // 0000000632CC: 00000000
	.ascii "@"                                                 // 0000000632D0: 40
	.byte 0xef                                                 // 0000000632D1: EF
	.short 0                                                   // 0000000632D2: 0000
	.long 0                                                    // 0000000632D4: 00000000
	.long 0                                                    // 0000000632D8: 00000000
	.long 0                                                    // 0000000632DC: 00000000
	.long 0                                                    // 0000000632E0: 00000000
	.long 0                                                    // 0000000632E4: 00000000
	.long 0                                                    // 0000000632E8: 00000000
	.long 0                                                    // 0000000632EC: 00000000
	.long 0x60af0101                                           // 0000000632F0: 60AF0101
	.long 0x1384                                               // 0000000632F4: 00001384
	.long 0x408                                                // 0000000632F8: 00000408
	.long 0                                                    // 0000000632FC: 00000000
	.type	mul_long_get_group_id_get_local_id.kd,@object
mul_long_get_group_id_get_local_id.kd:
	.long 0                                                    // 000000063300: 00000000
	.long 0                                                    // 000000063304: 00000000
	.long 0x110                                                // 000000063308: 00000110
	.long 0                                                    // 00000006330C: 00000000
	.long 0xf000                                               // 000000063310: 0000F000
	.long 0                                                    // 000000063314: 00000000
	.long 0                                                    // 000000063318: 00000000
	.long 0                                                    // 00000006331C: 00000000
	.long 0                                                    // 000000063320: 00000000
	.long 0                                                    // 000000063324: 00000000
	.long 0                                                    // 000000063328: 00000000
	.long 0                                                    // 00000006332C: 00000000
	.long 0x60af0101                                           // 000000063330: 60AF0101
	.long 0x1384                                               // 000000063334: 00001384
	.long 0x408                                                // 000000063338: 00000408
	.long 0                                                    // 00000006333C: 00000000
	.type	mul_long_get_local_size_get_local_id.kd,@object
mul_long_get_local_size_get_local_id.kd:
	.long 0                                                    // 000000063340: 00000000
	.long 0                                                    // 000000063344: 00000000
	.long 0x110                                                // 000000063348: 00000110
	.long 0                                                    // 00000006334C: 00000000
	.long 0xf0c0                                               // 000000063350: 0000F0C0
	.long 0                                                    // 000000063354: 00000000
	.long 0                                                    // 000000063358: 00000000
	.long 0                                                    // 00000006335C: 00000000
	.long 0                                                    // 000000063360: 00000000
	.long 0                                                    // 000000063364: 00000000
	.long 0                                                    // 000000063368: 00000000
	.long 0                                                    // 00000006336C: 00000000
	.long 0x60af0101                                           // 000000063370: 60AF0101
	.long 0x1384                                               // 000000063374: 00001384
	.long 0x408                                                // 000000063378: 00000408
	.long 0                                                    // 00000006337C: 00000000
	.type	mul_long_get_global_id_get_local_id.kd,@object
mul_long_get_global_id_get_local_id.kd:
	.long 0                                                    // 000000063380: 00000000
	.long 0                                                    // 000000063384: 00000000
	.long 0x110                                                // 000000063388: 00000110
	.long 0                                                    // 00000006338C: 00000000
	.long 0xf280                                               // 000000063390: 0000F280
	.long 0                                                    // 000000063394: 00000000
	.long 0                                                    // 000000063398: 00000000
	.long 0                                                    // 00000006339C: 00000000
	.long 0                                                    // 0000000633A0: 00000000
	.long 0                                                    // 0000000633A4: 00000000
	.long 0                                                    // 0000000633A8: 00000000
	.long 0                                                    // 0000000633AC: 00000000
	.long 0x60af0101                                           // 0000000633B0: 60AF0101
	.long 0x1384                                               // 0000000633B4: 00001384
	.long 0x408                                                // 0000000633B8: 00000408
	.long 0                                                    // 0000000633BC: 00000000
	.type	mul_long_get_global_size_get_local_id.kd,@object
mul_long_get_global_size_get_local_id.kd:
	.long 0                                                    // 0000000633C0: 00000000
	.long 0                                                    // 0000000633C4: 00000000
	.long 0x110                                                // 0000000633C8: 00000110
	.long 0                                                    // 0000000633CC: 00000000
	.ascii "@"                                                 // 0000000633D0: 40
	.byte 0xf3                                                 // 0000000633D1: F3
	.short 0                                                   // 0000000633D2: 0000
	.long 0                                                    // 0000000633D4: 00000000
	.long 0                                                    // 0000000633D8: 00000000
	.long 0                                                    // 0000000633DC: 00000000
	.long 0                                                    // 0000000633E0: 00000000
	.long 0                                                    // 0000000633E4: 00000000
	.long 0                                                    // 0000000633E8: 00000000
	.long 0                                                    // 0000000633EC: 00000000
	.long 0x60af0101                                           // 0000000633F0: 60AF0101
	.long 0x1384                                               // 0000000633F4: 00001384
	.long 0x408                                                // 0000000633F8: 00000408
	.long 0                                                    // 0000000633FC: 00000000
	.type	mul_long_get_num_groups_get_local_id.kd,@object
mul_long_get_num_groups_get_local_id.kd:
	.long 0                                                    // 000000063400: 00000000
	.long 0                                                    // 000000063404: 00000000
	.long 0x110                                                // 000000063408: 00000110
	.long 0                                                    // 00000006340C: 00000000
	.long 0xf500                                               // 000000063410: 0000F500
	.long 0                                                    // 000000063414: 00000000
	.long 0                                                    // 000000063418: 00000000
	.long 0                                                    // 00000006341C: 00000000
	.long 0                                                    // 000000063420: 00000000
	.long 0                                                    // 000000063424: 00000000
	.long 0                                                    // 000000063428: 00000000
	.long 0                                                    // 00000006342C: 00000000
	.long 0x60af0101                                           // 000000063430: 60AF0101
	.long 0x1384                                               // 000000063434: 00001384
	.long 0x408                                                // 000000063438: 00000408
	.long 0                                                    // 00000006343C: 00000000
	.type	mul_long_get_work_dim_get_local_id.kd,@object
mul_long_get_work_dim_get_local_id.kd:
	.long 0                                                    // 000000063440: 00000000
	.long 0                                                    // 000000063444: 00000000
	.long 0x110                                                // 000000063448: 00000110
	.long 0                                                    // 00000006344C: 00000000
	.long 0xf6c0                                               // 000000063450: 0000F6C0
	.long 0                                                    // 000000063454: 00000000
	.long 0                                                    // 000000063458: 00000000
	.long 0                                                    // 00000006345C: 00000000
	.long 0                                                    // 000000063460: 00000000
	.long 0                                                    // 000000063464: 00000000
	.long 0                                                    // 000000063468: 00000000
	.long 0                                                    // 00000006346C: 00000000
	.long 0x60af0101                                           // 000000063470: 60AF0101
	.long 0x1384                                               // 000000063474: 00001384
	.long 0x408                                                // 000000063478: 00000408
	.long 0                                                    // 00000006347C: 00000000
	.type	mul_long_x_get_group_id.kd,@object
mul_long_x_get_group_id.kd:
	.long 0                                                    // 000000063480: 00000000
	.long 0                                                    // 000000063484: 00000000
	.long 0x110                                                // 000000063488: 00000110
	.long 0                                                    // 00000006348C: 00000000
	.long 0xf780                                               // 000000063490: 0000F780
	.long 0                                                    // 000000063494: 00000000
	.long 0                                                    // 000000063498: 00000000
	.long 0                                                    // 00000006349C: 00000000
	.long 0                                                    // 0000000634A0: 00000000
	.long 0                                                    // 0000000634A4: 00000000
	.long 0                                                    // 0000000634A8: 00000000
	.long 0                                                    // 0000000634AC: 00000000
	.long 0x60af0101                                           // 0000000634B0: 60AF0101
	.long 0x1384                                               // 0000000634B4: 00001384
	.long 0x408                                                // 0000000634B8: 00000408
	.long 0                                                    // 0000000634BC: 00000000
	.type	mul_long_get_global_offset_get_group_id.kd,@object
mul_long_get_global_offset_get_group_id.kd:
	.long 0                                                    // 0000000634C0: 00000000
	.long 0                                                    // 0000000634C4: 00000000
	.long 0x110                                                // 0000000634C8: 00000110
	.long 0                                                    // 0000000634CC: 00000000
	.ascii "@"                                                 // 0000000634D0: 40
	.byte 0xf9                                                 // 0000000634D1: F9
	.short 0                                                   // 0000000634D2: 0000
	.long 0                                                    // 0000000634D4: 00000000
	.long 0                                                    // 0000000634D8: 00000000
	.long 0                                                    // 0000000634DC: 00000000
	.long 0                                                    // 0000000634E0: 00000000
	.long 0                                                    // 0000000634E4: 00000000
	.long 0                                                    // 0000000634E8: 00000000
	.long 0                                                    // 0000000634EC: 00000000
	.long 0x60af0101                                           // 0000000634F0: 60AF0101
	.long 0x1384                                               // 0000000634F4: 00001384
	.long 0x408                                                // 0000000634F8: 00000408
	.long 0                                                    // 0000000634FC: 00000000
	.type	mul_long_get_local_id_get_group_id.kd,@object
mul_long_get_local_id_get_group_id.kd:
	.long 0                                                    // 000000063500: 00000000
	.long 0                                                    // 000000063504: 00000000
	.long 0x110                                                // 000000063508: 00000110
	.long 0                                                    // 00000006350C: 00000000
	.long 0xfa00                                               // 000000063510: 0000FA00
	.long 0                                                    // 000000063514: 00000000
	.long 0                                                    // 000000063518: 00000000
	.long 0                                                    // 00000006351C: 00000000
	.long 0                                                    // 000000063520: 00000000
	.long 0                                                    // 000000063524: 00000000
	.long 0                                                    // 000000063528: 00000000
	.long 0                                                    // 00000006352C: 00000000
	.long 0x60af0101                                           // 000000063530: 60AF0101
	.long 0x1384                                               // 000000063534: 00001384
	.long 0x408                                                // 000000063538: 00000408
	.long 0                                                    // 00000006353C: 00000000
	.type	mul_long_get_group_id_get_group_id.kd,@object
mul_long_get_group_id_get_group_id.kd:
	.long 0                                                    // 000000063540: 00000000
	.long 0                                                    // 000000063544: 00000000
	.long 0x110                                                // 000000063548: 00000110
	.long 0                                                    // 00000006354C: 00000000
	.long 0xfac0                                               // 000000063550: 0000FAC0
	.long 0                                                    // 000000063554: 00000000
	.long 0                                                    // 000000063558: 00000000
	.long 0                                                    // 00000006355C: 00000000
	.long 0                                                    // 000000063560: 00000000
	.long 0                                                    // 000000063564: 00000000
	.long 0                                                    // 000000063568: 00000000
	.long 0                                                    // 00000006356C: 00000000
	.long 0x60af0101                                           // 000000063570: 60AF0101
	.long 0x1384                                               // 000000063574: 00001384
	.long 0x408                                                // 000000063578: 00000408
	.long 0                                                    // 00000006357C: 00000000
	.type	mul_long_get_local_size_get_group_id.kd,@object
mul_long_get_local_size_get_group_id.kd:
	.long 0                                                    // 000000063580: 00000000
	.long 0                                                    // 000000063584: 00000000
	.long 0x110                                                // 000000063588: 00000110
	.long 0                                                    // 00000006358C: 00000000
	.long 0xfc80                                               // 000000063590: 0000FC80
	.long 0                                                    // 000000063594: 00000000
	.long 0                                                    // 000000063598: 00000000
	.long 0                                                    // 00000006359C: 00000000
	.long 0                                                    // 0000000635A0: 00000000
	.long 0                                                    // 0000000635A4: 00000000
	.long 0                                                    // 0000000635A8: 00000000
	.long 0                                                    // 0000000635AC: 00000000
	.long 0x60af0101                                           // 0000000635B0: 60AF0101
	.long 0x1384                                               // 0000000635B4: 00001384
	.long 0x408                                                // 0000000635B8: 00000408
	.long 0                                                    // 0000000635BC: 00000000
	.type	mul_long_get_global_id_get_group_id.kd,@object
mul_long_get_global_id_get_group_id.kd:
	.long 0                                                    // 0000000635C0: 00000000
	.long 0                                                    // 0000000635C4: 00000000
	.long 0x110                                                // 0000000635C8: 00000110
	.long 0                                                    // 0000000635CC: 00000000
	.ascii "@"                                                 // 0000000635D0: 40
	.byte 0xfe                                                 // 0000000635D1: FE
	.short 0                                                   // 0000000635D2: 0000
	.long 0                                                    // 0000000635D4: 00000000
	.long 0                                                    // 0000000635D8: 00000000
	.long 0                                                    // 0000000635DC: 00000000
	.long 0                                                    // 0000000635E0: 00000000
	.long 0                                                    // 0000000635E4: 00000000
	.long 0                                                    // 0000000635E8: 00000000
	.long 0                                                    // 0000000635EC: 00000000
	.long 0x60af0101                                           // 0000000635F0: 60AF0101
	.long 0x1384                                               // 0000000635F4: 00001384
	.long 0x408                                                // 0000000635F8: 00000408
	.long 0                                                    // 0000000635FC: 00000000
	.type	mul_long_get_global_size_get_group_id.kd,@object
mul_long_get_global_size_get_group_id.kd:
	.long 0                                                    // 000000063600: 00000000
	.long 0                                                    // 000000063604: 00000000
	.long 0x110                                                // 000000063608: 00000110
	.long 0                                                    // 00000006360C: 00000000
	.long 0xff00                                               // 000000063610: 0000FF00
	.long 0                                                    // 000000063614: 00000000
	.long 0                                                    // 000000063618: 00000000
	.long 0                                                    // 00000006361C: 00000000
	.long 0                                                    // 000000063620: 00000000
	.long 0                                                    // 000000063624: 00000000
	.long 0                                                    // 000000063628: 00000000
	.long 0                                                    // 00000006362C: 00000000
	.long 0x60af0101                                           // 000000063630: 60AF0101
	.long 0x1384                                               // 000000063634: 00001384
	.long 0x408                                                // 000000063638: 00000408
	.long 0                                                    // 00000006363C: 00000000
	.type	mul_long_get_num_groups_get_group_id.kd,@object
mul_long_get_num_groups_get_group_id.kd:
	.long 0                                                    // 000000063640: 00000000
	.long 0                                                    // 000000063644: 00000000
	.long 0x110                                                // 000000063648: 00000110
	.long 0                                                    // 00000006364C: 00000000
	.long 0x100c0                                              // 000000063650: 000100C0
	.long 0                                                    // 000000063654: 00000000
	.long 0                                                    // 000000063658: 00000000
	.long 0                                                    // 00000006365C: 00000000
	.long 0                                                    // 000000063660: 00000000
	.long 0                                                    // 000000063664: 00000000
	.long 0                                                    // 000000063668: 00000000
	.long 0                                                    // 00000006366C: 00000000
	.long 0x60af0101                                           // 000000063670: 60AF0101
	.long 0x1384                                               // 000000063674: 00001384
	.long 0x408                                                // 000000063678: 00000408
	.long 0                                                    // 00000006367C: 00000000
	.type	mul_long_get_work_dim_get_group_id.kd,@object
mul_long_get_work_dim_get_group_id.kd:
	.long 0                                                    // 000000063680: 00000000
	.long 0                                                    // 000000063684: 00000000
	.long 0x110                                                // 000000063688: 00000110
	.long 0                                                    // 00000006368C: 00000000
	.long 0x10280                                              // 000000063690: 00010280
	.long 0                                                    // 000000063694: 00000000
	.long 0                                                    // 000000063698: 00000000
	.long 0                                                    // 00000006369C: 00000000
	.long 0                                                    // 0000000636A0: 00000000
	.long 0                                                    // 0000000636A4: 00000000
	.long 0                                                    // 0000000636A8: 00000000
	.long 0                                                    // 0000000636AC: 00000000
	.long 0x60af0101                                           // 0000000636B0: 60AF0101
	.long 0x1384                                               // 0000000636B4: 00001384
	.long 0x408                                                // 0000000636B8: 00000408
	.long 0                                                    // 0000000636BC: 00000000
	.type	mul_long_x_get_local_size.kd,@object
mul_long_x_get_local_size.kd:
	.long 0                                                    // 0000000636C0: 00000000
	.long 0                                                    // 0000000636C4: 00000000
	.long 0x110                                                // 0000000636C8: 00000110
	.long 0                                                    // 0000000636CC: 00000000
	.ascii "@"                                                 // 0000000636D0: 40
	.byte 0x4                                                  // 0000000636D1: 04
	.short 0x1                                                 // 0000000636D2: 0001
	.long 0                                                    // 0000000636D4: 00000000
	.long 0                                                    // 0000000636D8: 00000000
	.long 0                                                    // 0000000636DC: 00000000
	.long 0                                                    // 0000000636E0: 00000000
	.long 0                                                    // 0000000636E4: 00000000
	.long 0                                                    // 0000000636E8: 00000000
	.long 0                                                    // 0000000636EC: 00000000
	.long 0x60af0101                                           // 0000000636F0: 60AF0101
	.long 0x1384                                               // 0000000636F4: 00001384
	.long 0x408                                                // 0000000636F8: 00000408
	.long 0                                                    // 0000000636FC: 00000000
	.type	mul_long_get_global_offset_get_local_size.kd,@object
mul_long_get_global_offset_get_local_size.kd:
	.long 0                                                    // 000000063700: 00000000
	.long 0                                                    // 000000063704: 00000000
	.long 0x110                                                // 000000063708: 00000110
	.long 0                                                    // 00000006370C: 00000000
	.long 0x10600                                              // 000000063710: 00010600
	.long 0                                                    // 000000063714: 00000000
	.long 0                                                    // 000000063718: 00000000
	.long 0                                                    // 00000006371C: 00000000
	.long 0                                                    // 000000063720: 00000000
	.long 0                                                    // 000000063724: 00000000
	.long 0                                                    // 000000063728: 00000000
	.long 0                                                    // 00000006372C: 00000000
	.long 0x60af0101                                           // 000000063730: 60AF0101
	.long 0x1384                                               // 000000063734: 00001384
	.long 0x408                                                // 000000063738: 00000408
	.long 0                                                    // 00000006373C: 00000000
	.type	mul_long_get_local_id_get_local_size.kd,@object
mul_long_get_local_id_get_local_size.kd:
	.long 0                                                    // 000000063740: 00000000
	.long 0                                                    // 000000063744: 00000000
	.long 0x110                                                // 000000063748: 00000110
	.long 0                                                    // 00000006374C: 00000000
	.long 0x107c0                                              // 000000063750: 000107C0
	.long 0                                                    // 000000063754: 00000000
	.long 0                                                    // 000000063758: 00000000
	.long 0                                                    // 00000006375C: 00000000
	.long 0                                                    // 000000063760: 00000000
	.long 0                                                    // 000000063764: 00000000
	.long 0                                                    // 000000063768: 00000000
	.long 0                                                    // 00000006376C: 00000000
	.long 0x60af0101                                           // 000000063770: 60AF0101
	.long 0x1384                                               // 000000063774: 00001384
	.long 0x408                                                // 000000063778: 00000408
	.long 0                                                    // 00000006377C: 00000000
	.type	mul_long_get_group_id_get_local_size.kd,@object
mul_long_get_group_id_get_local_size.kd:
	.long 0                                                    // 000000063780: 00000000
	.long 0                                                    // 000000063784: 00000000
	.long 0x110                                                // 000000063788: 00000110
	.long 0                                                    // 00000006378C: 00000000
	.long 0x10980                                              // 000000063790: 00010980
	.long 0                                                    // 000000063794: 00000000
	.long 0                                                    // 000000063798: 00000000
	.long 0                                                    // 00000006379C: 00000000
	.long 0                                                    // 0000000637A0: 00000000
	.long 0                                                    // 0000000637A4: 00000000
	.long 0                                                    // 0000000637A8: 00000000
	.long 0                                                    // 0000000637AC: 00000000
	.long 0x60af0101                                           // 0000000637B0: 60AF0101
	.long 0x1384                                               // 0000000637B4: 00001384
	.long 0x408                                                // 0000000637B8: 00000408
	.long 0                                                    // 0000000637BC: 00000000
	.type	mul_long_get_local_size_get_local_size.kd,@object
mul_long_get_local_size_get_local_size.kd:
	.long 0                                                    // 0000000637C0: 00000000
	.long 0                                                    // 0000000637C4: 00000000
	.long 0x110                                                // 0000000637C8: 00000110
	.long 0                                                    // 0000000637CC: 00000000
	.ascii "@"                                                 // 0000000637D0: 40
	.byte 0xb                                                  // 0000000637D1: 0B
	.short 0x1                                                 // 0000000637D2: 0001
	.long 0                                                    // 0000000637D4: 00000000
	.long 0                                                    // 0000000637D8: 00000000
	.long 0                                                    // 0000000637DC: 00000000
	.long 0                                                    // 0000000637E0: 00000000
	.long 0                                                    // 0000000637E4: 00000000
	.long 0                                                    // 0000000637E8: 00000000
	.long 0                                                    // 0000000637EC: 00000000
	.long 0x60af0101                                           // 0000000637F0: 60AF0101
	.long 0x1384                                               // 0000000637F4: 00001384
	.long 0x408                                                // 0000000637F8: 00000408
	.long 0                                                    // 0000000637FC: 00000000
	.type	mul_long_get_global_id_get_local_size.kd,@object
mul_long_get_global_id_get_local_size.kd:
	.long 0                                                    // 000000063800: 00000000
	.long 0                                                    // 000000063804: 00000000
	.long 0x110                                                // 000000063808: 00000110
	.long 0                                                    // 00000006380C: 00000000
	.long 0x10d00                                              // 000000063810: 00010D00
	.long 0                                                    // 000000063814: 00000000
	.long 0                                                    // 000000063818: 00000000
	.long 0                                                    // 00000006381C: 00000000
	.long 0                                                    // 000000063820: 00000000
	.long 0                                                    // 000000063824: 00000000
	.long 0                                                    // 000000063828: 00000000
	.long 0                                                    // 00000006382C: 00000000
	.long 0x60af0101                                           // 000000063830: 60AF0101
	.long 0x1384                                               // 000000063834: 00001384
	.long 0x408                                                // 000000063838: 00000408
	.long 0                                                    // 00000006383C: 00000000
	.type	mul_long_get_global_size_get_local_size.kd,@object
mul_long_get_global_size_get_local_size.kd:
	.long 0                                                    // 000000063840: 00000000
	.long 0                                                    // 000000063844: 00000000
	.long 0x110                                                // 000000063848: 00000110
	.long 0                                                    // 00000006384C: 00000000
	.long 0x10ec0                                              // 000000063850: 00010EC0
	.long 0                                                    // 000000063854: 00000000
	.long 0                                                    // 000000063858: 00000000
	.long 0                                                    // 00000006385C: 00000000
	.long 0                                                    // 000000063860: 00000000
	.long 0                                                    // 000000063864: 00000000
	.long 0                                                    // 000000063868: 00000000
	.long 0                                                    // 00000006386C: 00000000
	.long 0x60af0101                                           // 000000063870: 60AF0101
	.long 0x1384                                               // 000000063874: 00001384
	.long 0x408                                                // 000000063878: 00000408
	.long 0                                                    // 00000006387C: 00000000
	.type	mul_long_get_num_groups_get_local_size.kd,@object
mul_long_get_num_groups_get_local_size.kd:
	.long 0                                                    // 000000063880: 00000000
	.long 0                                                    // 000000063884: 00000000
	.long 0x110                                                // 000000063888: 00000110
	.long 0                                                    // 00000006388C: 00000000
	.long 0x11080                                              // 000000063890: 00011080
	.long 0                                                    // 000000063894: 00000000
	.long 0                                                    // 000000063898: 00000000
	.long 0                                                    // 00000006389C: 00000000
	.long 0                                                    // 0000000638A0: 00000000
	.long 0                                                    // 0000000638A4: 00000000
	.long 0                                                    // 0000000638A8: 00000000
	.long 0                                                    // 0000000638AC: 00000000
	.long 0x60af0101                                           // 0000000638B0: 60AF0101
	.long 0x1384                                               // 0000000638B4: 00001384
	.long 0x408                                                // 0000000638B8: 00000408
	.long 0                                                    // 0000000638BC: 00000000
	.type	mul_long_get_work_dim_get_local_size.kd,@object
mul_long_get_work_dim_get_local_size.kd:
	.long 0                                                    // 0000000638C0: 00000000
	.long 0                                                    // 0000000638C4: 00000000
	.long 0x110                                                // 0000000638C8: 00000110
	.long 0                                                    // 0000000638CC: 00000000
	.ascii "@"                                                 // 0000000638D0: 40
	.byte 0x12                                                 // 0000000638D1: 12
	.short 0x1                                                 // 0000000638D2: 0001
	.long 0                                                    // 0000000638D4: 00000000
	.long 0                                                    // 0000000638D8: 00000000
	.long 0                                                    // 0000000638DC: 00000000
	.long 0                                                    // 0000000638E0: 00000000
	.long 0                                                    // 0000000638E4: 00000000
	.long 0                                                    // 0000000638E8: 00000000
	.long 0                                                    // 0000000638EC: 00000000
	.long 0x60af0101                                           // 0000000638F0: 60AF0101
	.long 0x1384                                               // 0000000638F4: 00001384
	.long 0x408                                                // 0000000638F8: 00000408
	.long 0                                                    // 0000000638FC: 00000000
	.type	mul_long_x_get_global_id.kd,@object
mul_long_x_get_global_id.kd:
	.long 0                                                    // 000000063900: 00000000
	.long 0                                                    // 000000063904: 00000000
	.long 0x110                                                // 000000063908: 00000110
	.long 0                                                    // 00000006390C: 00000000
	.long 0x11400                                              // 000000063910: 00011400
	.long 0                                                    // 000000063914: 00000000
	.long 0                                                    // 000000063918: 00000000
	.long 0                                                    // 00000006391C: 00000000
	.long 0                                                    // 000000063920: 00000000
	.long 0                                                    // 000000063924: 00000000
	.long 0                                                    // 000000063928: 00000000
	.long 0                                                    // 00000006392C: 00000000
	.long 0x60af0102                                           // 000000063930: 60AF0102
	.long 0x1384                                               // 000000063934: 00001384
	.long 0x408                                                // 000000063938: 00000408
	.long 0                                                    // 00000006393C: 00000000
	.type	mul_long_get_global_offset_get_global_id.kd,@object
mul_long_get_global_offset_get_global_id.kd:
	.long 0                                                    // 000000063940: 00000000
	.long 0                                                    // 000000063944: 00000000
	.long 0x110                                                // 000000063948: 00000110
	.long 0                                                    // 00000006394C: 00000000
	.long 0x115c0                                              // 000000063950: 000115C0
	.long 0                                                    // 000000063954: 00000000
	.long 0                                                    // 000000063958: 00000000
	.long 0                                                    // 00000006395C: 00000000
	.long 0                                                    // 000000063960: 00000000
	.long 0                                                    // 000000063964: 00000000
	.long 0                                                    // 000000063968: 00000000
	.long 0                                                    // 00000006396C: 00000000
	.long 0x60af0102                                           // 000000063970: 60AF0102
	.long 0x1384                                               // 000000063974: 00001384
	.long 0x408                                                // 000000063978: 00000408
	.long 0                                                    // 00000006397C: 00000000
	.type	mul_long_get_local_id_get_global_id.kd,@object
mul_long_get_local_id_get_global_id.kd:
	.long 0                                                    // 000000063980: 00000000
	.long 0                                                    // 000000063984: 00000000
	.long 0x110                                                // 000000063988: 00000110
	.long 0                                                    // 00000006398C: 00000000
	.long 0x11780                                              // 000000063990: 00011780
	.long 0                                                    // 000000063994: 00000000
	.long 0                                                    // 000000063998: 00000000
	.long 0                                                    // 00000006399C: 00000000
	.long 0                                                    // 0000000639A0: 00000000
	.long 0                                                    // 0000000639A4: 00000000
	.long 0                                                    // 0000000639A8: 00000000
	.long 0                                                    // 0000000639AC: 00000000
	.long 0x60af0102                                           // 0000000639B0: 60AF0102
	.long 0x1384                                               // 0000000639B4: 00001384
	.long 0x408                                                // 0000000639B8: 00000408
	.long 0                                                    // 0000000639BC: 00000000
	.type	mul_long_get_group_id_get_global_id.kd,@object
mul_long_get_group_id_get_global_id.kd:
	.long 0                                                    // 0000000639C0: 00000000
	.long 0                                                    // 0000000639C4: 00000000
	.long 0x110                                                // 0000000639C8: 00000110
	.long 0                                                    // 0000000639CC: 00000000
	.ascii "@"                                                 // 0000000639D0: 40
	.byte 0x19                                                 // 0000000639D1: 19
	.short 0x1                                                 // 0000000639D2: 0001
	.long 0                                                    // 0000000639D4: 00000000
	.long 0                                                    // 0000000639D8: 00000000
	.long 0                                                    // 0000000639DC: 00000000
	.long 0                                                    // 0000000639E0: 00000000
	.long 0                                                    // 0000000639E4: 00000000
	.long 0                                                    // 0000000639E8: 00000000
	.long 0                                                    // 0000000639EC: 00000000
	.long 0x60af0102                                           // 0000000639F0: 60AF0102
	.long 0x1384                                               // 0000000639F4: 00001384
	.long 0x408                                                // 0000000639F8: 00000408
	.long 0                                                    // 0000000639FC: 00000000
	.type	mul_long_get_local_size_get_global_id.kd,@object
mul_long_get_local_size_get_global_id.kd:
	.long 0                                                    // 000000063A00: 00000000
	.long 0                                                    // 000000063A04: 00000000
	.long 0x110                                                // 000000063A08: 00000110
	.long 0                                                    // 000000063A0C: 00000000
	.long 0x11b00                                              // 000000063A10: 00011B00
	.long 0                                                    // 000000063A14: 00000000
	.long 0                                                    // 000000063A18: 00000000
	.long 0                                                    // 000000063A1C: 00000000
	.long 0                                                    // 000000063A20: 00000000
	.long 0                                                    // 000000063A24: 00000000
	.long 0                                                    // 000000063A28: 00000000
	.long 0                                                    // 000000063A2C: 00000000
	.long 0x60af0102                                           // 000000063A30: 60AF0102
	.long 0x1384                                               // 000000063A34: 00001384
	.long 0x408                                                // 000000063A38: 00000408
	.long 0                                                    // 000000063A3C: 00000000
	.type	mul_long_get_global_id_get_global_id.kd,@object
mul_long_get_global_id_get_global_id.kd:
	.long 0                                                    // 000000063A40: 00000000
	.long 0                                                    // 000000063A44: 00000000
	.long 0x110                                                // 000000063A48: 00000110
	.long 0                                                    // 000000063A4C: 00000000
	.long 0x11cc0                                              // 000000063A50: 00011CC0
	.long 0                                                    // 000000063A54: 00000000
	.long 0                                                    // 000000063A58: 00000000
	.long 0                                                    // 000000063A5C: 00000000
	.long 0                                                    // 000000063A60: 00000000
	.long 0                                                    // 000000063A64: 00000000
	.long 0                                                    // 000000063A68: 00000000
	.long 0                                                    // 000000063A6C: 00000000
	.long 0x60af0102                                           // 000000063A70: 60AF0102
	.long 0x1384                                               // 000000063A74: 00001384
	.long 0x408                                                // 000000063A78: 00000408
	.long 0                                                    // 000000063A7C: 00000000
	.type	mul_long_get_global_size_get_global_id.kd,@object
mul_long_get_global_size_get_global_id.kd:
	.long 0                                                    // 000000063A80: 00000000
	.long 0                                                    // 000000063A84: 00000000
	.long 0x110                                                // 000000063A88: 00000110
	.long 0                                                    // 000000063A8C: 00000000
	.long 0x11e80                                              // 000000063A90: 00011E80
	.long 0                                                    // 000000063A94: 00000000
	.long 0                                                    // 000000063A98: 00000000
	.long 0                                                    // 000000063A9C: 00000000
	.long 0                                                    // 000000063AA0: 00000000
	.long 0                                                    // 000000063AA4: 00000000
	.long 0                                                    // 000000063AA8: 00000000
	.long 0                                                    // 000000063AAC: 00000000
	.long 0x60af0102                                           // 000000063AB0: 60AF0102
	.long 0x1384                                               // 000000063AB4: 00001384
	.long 0x408                                                // 000000063AB8: 00000408
	.long 0                                                    // 000000063ABC: 00000000
	.type	mul_long_get_num_groups_get_global_id.kd,@object
mul_long_get_num_groups_get_global_id.kd:
	.long 0                                                    // 000000063AC0: 00000000
	.long 0                                                    // 000000063AC4: 00000000
	.long 0x110                                                // 000000063AC8: 00000110
	.long 0                                                    // 000000063ACC: 00000000
	.ascii "@ "                                                // 000000063AD0: 2040
	.short 0x1                                                 // 000000063AD2: 0001
	.long 0                                                    // 000000063AD4: 00000000
	.long 0                                                    // 000000063AD8: 00000000
	.long 0                                                    // 000000063ADC: 00000000
	.long 0                                                    // 000000063AE0: 00000000
	.long 0                                                    // 000000063AE4: 00000000
	.long 0                                                    // 000000063AE8: 00000000
	.long 0                                                    // 000000063AEC: 00000000
	.long 0x60af0102                                           // 000000063AF0: 60AF0102
	.long 0x1384                                               // 000000063AF4: 00001384
	.long 0x408                                                // 000000063AF8: 00000408
	.long 0                                                    // 000000063AFC: 00000000
	.type	mul_long_get_work_dim_get_global_id.kd,@object
mul_long_get_work_dim_get_global_id.kd:
	.long 0                                                    // 000000063B00: 00000000
	.long 0                                                    // 000000063B04: 00000000
	.long 0x110                                                // 000000063B08: 00000110
	.long 0                                                    // 000000063B0C: 00000000
	.long 0x12200                                              // 000000063B10: 00012200
	.long 0                                                    // 000000063B14: 00000000
	.long 0                                                    // 000000063B18: 00000000
	.long 0                                                    // 000000063B1C: 00000000
	.long 0                                                    // 000000063B20: 00000000
	.long 0                                                    // 000000063B24: 00000000
	.long 0                                                    // 000000063B28: 00000000
	.long 0                                                    // 000000063B2C: 00000000
	.long 0x60af0102                                           // 000000063B30: 60AF0102
	.long 0x1384                                               // 000000063B34: 00001384
	.long 0x408                                                // 000000063B38: 00000408
	.long 0                                                    // 000000063B3C: 00000000
	.type	mul_long_x_get_global_size.kd,@object
mul_long_x_get_global_size.kd:
	.long 0                                                    // 000000063B40: 00000000
	.long 0                                                    // 000000063B44: 00000000
	.long 0x110                                                // 000000063B48: 00000110
	.long 0                                                    // 000000063B4C: 00000000
	.long 0x123c0                                              // 000000063B50: 000123C0
	.long 0                                                    // 000000063B54: 00000000
	.long 0                                                    // 000000063B58: 00000000
	.long 0                                                    // 000000063B5C: 00000000
	.long 0                                                    // 000000063B60: 00000000
	.long 0                                                    // 000000063B64: 00000000
	.long 0                                                    // 000000063B68: 00000000
	.long 0                                                    // 000000063B6C: 00000000
	.long 0x60af0101                                           // 000000063B70: 60AF0101
	.long 0x1384                                               // 000000063B74: 00001384
	.long 0x408                                                // 000000063B78: 00000408
	.long 0                                                    // 000000063B7C: 00000000
	.type	mul_long_get_global_offset_get_global_size.kd,@object
mul_long_get_global_offset_get_global_size.kd:
	.long 0                                                    // 000000063B80: 00000000
	.long 0                                                    // 000000063B84: 00000000
	.long 0x110                                                // 000000063B88: 00000110
	.long 0                                                    // 000000063B8C: 00000000
	.long 0x12580                                              // 000000063B90: 00012580
	.long 0                                                    // 000000063B94: 00000000
	.long 0                                                    // 000000063B98: 00000000
	.long 0                                                    // 000000063B9C: 00000000
	.long 0                                                    // 000000063BA0: 00000000
	.long 0                                                    // 000000063BA4: 00000000
	.long 0                                                    // 000000063BA8: 00000000
	.long 0                                                    // 000000063BAC: 00000000
	.long 0x60af0101                                           // 000000063BB0: 60AF0101
	.long 0x1384                                               // 000000063BB4: 00001384
	.long 0x408                                                // 000000063BB8: 00000408
	.long 0                                                    // 000000063BBC: 00000000
	.type	mul_long_get_local_id_get_global_size.kd,@object
mul_long_get_local_id_get_global_size.kd:
	.long 0                                                    // 000000063BC0: 00000000
	.long 0                                                    // 000000063BC4: 00000000
	.long 0x110                                                // 000000063BC8: 00000110
	.long 0                                                    // 000000063BCC: 00000000
	.ascii "@'"                                                // 000000063BD0: 2740
	.short 0x1                                                 // 000000063BD2: 0001
	.long 0                                                    // 000000063BD4: 00000000
	.long 0                                                    // 000000063BD8: 00000000
	.long 0                                                    // 000000063BDC: 00000000
	.long 0                                                    // 000000063BE0: 00000000
	.long 0                                                    // 000000063BE4: 00000000
	.long 0                                                    // 000000063BE8: 00000000
	.long 0                                                    // 000000063BEC: 00000000
	.long 0x60af0101                                           // 000000063BF0: 60AF0101
	.long 0x1384                                               // 000000063BF4: 00001384
	.long 0x408                                                // 000000063BF8: 00000408
	.long 0                                                    // 000000063BFC: 00000000
	.type	mul_long_get_group_id_get_global_size.kd,@object
mul_long_get_group_id_get_global_size.kd:
	.long 0                                                    // 000000063C00: 00000000
	.long 0                                                    // 000000063C04: 00000000
	.long 0x110                                                // 000000063C08: 00000110
	.long 0                                                    // 000000063C0C: 00000000
	.long 0x12900                                              // 000000063C10: 00012900
	.long 0                                                    // 000000063C14: 00000000
	.long 0                                                    // 000000063C18: 00000000
	.long 0                                                    // 000000063C1C: 00000000
	.long 0                                                    // 000000063C20: 00000000
	.long 0                                                    // 000000063C24: 00000000
	.long 0                                                    // 000000063C28: 00000000
	.long 0                                                    // 000000063C2C: 00000000
	.long 0x60af0101                                           // 000000063C30: 60AF0101
	.long 0x1384                                               // 000000063C34: 00001384
	.long 0x408                                                // 000000063C38: 00000408
	.long 0                                                    // 000000063C3C: 00000000
	.type	mul_long_get_local_size_get_global_size.kd,@object
mul_long_get_local_size_get_global_size.kd:
	.long 0                                                    // 000000063C40: 00000000
	.long 0                                                    // 000000063C44: 00000000
	.long 0x110                                                // 000000063C48: 00000110
	.long 0                                                    // 000000063C4C: 00000000
	.long 0x12ac0                                              // 000000063C50: 00012AC0
	.long 0                                                    // 000000063C54: 00000000
	.long 0                                                    // 000000063C58: 00000000
	.long 0                                                    // 000000063C5C: 00000000
	.long 0                                                    // 000000063C60: 00000000
	.long 0                                                    // 000000063C64: 00000000
	.long 0                                                    // 000000063C68: 00000000
	.long 0                                                    // 000000063C6C: 00000000
	.long 0x60af0101                                           // 000000063C70: 60AF0101
	.long 0x1384                                               // 000000063C74: 00001384
	.long 0x408                                                // 000000063C78: 00000408
	.long 0                                                    // 000000063C7C: 00000000
	.type	mul_long_get_global_id_get_global_size.kd,@object
mul_long_get_global_id_get_global_size.kd:
	.long 0                                                    // 000000063C80: 00000000
	.long 0                                                    // 000000063C84: 00000000
	.long 0x110                                                // 000000063C88: 00000110
	.long 0                                                    // 000000063C8C: 00000000
	.long 0x12c80                                              // 000000063C90: 00012C80
	.long 0                                                    // 000000063C94: 00000000
	.long 0                                                    // 000000063C98: 00000000
	.long 0                                                    // 000000063C9C: 00000000
	.long 0                                                    // 000000063CA0: 00000000
	.long 0                                                    // 000000063CA4: 00000000
	.long 0                                                    // 000000063CA8: 00000000
	.long 0                                                    // 000000063CAC: 00000000
	.long 0x60af0101                                           // 000000063CB0: 60AF0101
	.long 0x1384                                               // 000000063CB4: 00001384
	.long 0x408                                                // 000000063CB8: 00000408
	.long 0                                                    // 000000063CBC: 00000000
	.type	mul_long_get_global_size_get_global_size.kd,@object
mul_long_get_global_size_get_global_size.kd:
	.long 0                                                    // 000000063CC0: 00000000
	.long 0                                                    // 000000063CC4: 00000000
	.long 0x110                                                // 000000063CC8: 00000110
	.long 0                                                    // 000000063CCC: 00000000
	.ascii "@."                                                // 000000063CD0: 2E40
	.short 0x1                                                 // 000000063CD2: 0001
	.long 0                                                    // 000000063CD4: 00000000
	.long 0                                                    // 000000063CD8: 00000000
	.long 0                                                    // 000000063CDC: 00000000
	.long 0                                                    // 000000063CE0: 00000000
	.long 0                                                    // 000000063CE4: 00000000
	.long 0                                                    // 000000063CE8: 00000000
	.long 0                                                    // 000000063CEC: 00000000
	.long 0x60af0101                                           // 000000063CF0: 60AF0101
	.long 0x1384                                               // 000000063CF4: 00001384
	.long 0x408                                                // 000000063CF8: 00000408
	.long 0                                                    // 000000063CFC: 00000000
	.type	mul_long_get_num_groups_get_global_size.kd,@object
mul_long_get_num_groups_get_global_size.kd:
	.long 0                                                    // 000000063D00: 00000000
	.long 0                                                    // 000000063D04: 00000000
	.long 0x110                                                // 000000063D08: 00000110
	.long 0                                                    // 000000063D0C: 00000000
	.long 0x13000                                              // 000000063D10: 00013000
	.long 0                                                    // 000000063D14: 00000000
	.long 0                                                    // 000000063D18: 00000000
	.long 0                                                    // 000000063D1C: 00000000
	.long 0                                                    // 000000063D20: 00000000
	.long 0                                                    // 000000063D24: 00000000
	.long 0                                                    // 000000063D28: 00000000
	.long 0                                                    // 000000063D2C: 00000000
	.long 0x60af0101                                           // 000000063D30: 60AF0101
	.long 0x1384                                               // 000000063D34: 00001384
	.long 0x408                                                // 000000063D38: 00000408
	.long 0                                                    // 000000063D3C: 00000000
	.type	mul_long_get_work_dim_get_global_size.kd,@object
mul_long_get_work_dim_get_global_size.kd:
	.long 0                                                    // 000000063D40: 00000000
	.long 0                                                    // 000000063D44: 00000000
	.long 0x110                                                // 000000063D48: 00000110
	.long 0                                                    // 000000063D4C: 00000000
	.long 0x131c0                                              // 000000063D50: 000131C0
	.long 0                                                    // 000000063D54: 00000000
	.long 0                                                    // 000000063D58: 00000000
	.long 0                                                    // 000000063D5C: 00000000
	.long 0                                                    // 000000063D60: 00000000
	.long 0                                                    // 000000063D64: 00000000
	.long 0                                                    // 000000063D68: 00000000
	.long 0                                                    // 000000063D6C: 00000000
	.long 0x60af0101                                           // 000000063D70: 60AF0101
	.long 0x1384                                               // 000000063D74: 00001384
	.long 0x408                                                // 000000063D78: 00000408
	.long 0                                                    // 000000063D7C: 00000000
	.type	mul_long_x_get_num_groups.kd,@object
mul_long_x_get_num_groups.kd:
	.long 0                                                    // 000000063D80: 00000000
	.long 0                                                    // 000000063D84: 00000000
	.long 0x110                                                // 000000063D88: 00000110
	.long 0                                                    // 000000063D8C: 00000000
	.long 0x13380                                              // 000000063D90: 00013380
	.long 0                                                    // 000000063D94: 00000000
	.long 0                                                    // 000000063D98: 00000000
	.long 0                                                    // 000000063D9C: 00000000
	.long 0                                                    // 000000063DA0: 00000000
	.long 0                                                    // 000000063DA4: 00000000
	.long 0                                                    // 000000063DA8: 00000000
	.long 0                                                    // 000000063DAC: 00000000
	.long 0x60af0101                                           // 000000063DB0: 60AF0101
	.long 0x1384                                               // 000000063DB4: 00001384
	.long 0x408                                                // 000000063DB8: 00000408
	.long 0                                                    // 000000063DBC: 00000000
	.type	mul_long_get_global_offset_get_num_groups.kd,@object
mul_long_get_global_offset_get_num_groups.kd:
	.long 0                                                    // 000000063DC0: 00000000
	.long 0                                                    // 000000063DC4: 00000000
	.long 0x110                                                // 000000063DC8: 00000110
	.long 0                                                    // 000000063DCC: 00000000
	.ascii "@5"                                                // 000000063DD0: 3540
	.short 0x1                                                 // 000000063DD2: 0001
	.long 0                                                    // 000000063DD4: 00000000
	.long 0                                                    // 000000063DD8: 00000000
	.long 0                                                    // 000000063DDC: 00000000
	.long 0                                                    // 000000063DE0: 00000000
	.long 0                                                    // 000000063DE4: 00000000
	.long 0                                                    // 000000063DE8: 00000000
	.long 0                                                    // 000000063DEC: 00000000
	.long 0x60af0101                                           // 000000063DF0: 60AF0101
	.long 0x1384                                               // 000000063DF4: 00001384
	.long 0x408                                                // 000000063DF8: 00000408
	.long 0                                                    // 000000063DFC: 00000000
	.type	mul_long_get_local_id_get_num_groups.kd,@object
mul_long_get_local_id_get_num_groups.kd:
	.long 0                                                    // 000000063E00: 00000000
	.long 0                                                    // 000000063E04: 00000000
	.long 0x110                                                // 000000063E08: 00000110
	.long 0                                                    // 000000063E0C: 00000000
	.long 0x13700                                              // 000000063E10: 00013700
	.long 0                                                    // 000000063E14: 00000000
	.long 0                                                    // 000000063E18: 00000000
	.long 0                                                    // 000000063E1C: 00000000
	.long 0                                                    // 000000063E20: 00000000
	.long 0                                                    // 000000063E24: 00000000
	.long 0                                                    // 000000063E28: 00000000
	.long 0                                                    // 000000063E2C: 00000000
	.long 0x60af0101                                           // 000000063E30: 60AF0101
	.long 0x1384                                               // 000000063E34: 00001384
	.long 0x408                                                // 000000063E38: 00000408
	.long 0                                                    // 000000063E3C: 00000000
	.type	mul_long_get_group_id_get_num_groups.kd,@object
mul_long_get_group_id_get_num_groups.kd:
	.long 0                                                    // 000000063E40: 00000000
	.long 0                                                    // 000000063E44: 00000000
	.long 0x110                                                // 000000063E48: 00000110
	.long 0                                                    // 000000063E4C: 00000000
	.long 0x138c0                                              // 000000063E50: 000138C0
	.long 0                                                    // 000000063E54: 00000000
	.long 0                                                    // 000000063E58: 00000000
	.long 0                                                    // 000000063E5C: 00000000
	.long 0                                                    // 000000063E60: 00000000
	.long 0                                                    // 000000063E64: 00000000
	.long 0                                                    // 000000063E68: 00000000
	.long 0                                                    // 000000063E6C: 00000000
	.long 0x60af0101                                           // 000000063E70: 60AF0101
	.long 0x1384                                               // 000000063E74: 00001384
	.long 0x408                                                // 000000063E78: 00000408
	.long 0                                                    // 000000063E7C: 00000000
	.type	mul_long_get_local_size_get_num_groups.kd,@object
mul_long_get_local_size_get_num_groups.kd:
	.long 0                                                    // 000000063E80: 00000000
	.long 0                                                    // 000000063E84: 00000000
	.long 0x110                                                // 000000063E88: 00000110
	.long 0                                                    // 000000063E8C: 00000000
	.long 0x13a80                                              // 000000063E90: 00013A80
	.long 0                                                    // 000000063E94: 00000000
	.long 0                                                    // 000000063E98: 00000000
	.long 0                                                    // 000000063E9C: 00000000
	.long 0                                                    // 000000063EA0: 00000000
	.long 0                                                    // 000000063EA4: 00000000
	.long 0                                                    // 000000063EA8: 00000000
	.long 0                                                    // 000000063EAC: 00000000
	.long 0x60af0101                                           // 000000063EB0: 60AF0101
	.long 0x1384                                               // 000000063EB4: 00001384
	.long 0x408                                                // 000000063EB8: 00000408
	.long 0                                                    // 000000063EBC: 00000000
	.type	mul_long_get_global_id_get_num_groups.kd,@object
mul_long_get_global_id_get_num_groups.kd:
	.long 0                                                    // 000000063EC0: 00000000
	.long 0                                                    // 000000063EC4: 00000000
	.long 0x110                                                // 000000063EC8: 00000110
	.long 0                                                    // 000000063ECC: 00000000
	.ascii "@<"                                                // 000000063ED0: 3C40
	.short 0x1                                                 // 000000063ED2: 0001
	.long 0                                                    // 000000063ED4: 00000000
	.long 0                                                    // 000000063ED8: 00000000
	.long 0                                                    // 000000063EDC: 00000000
	.long 0                                                    // 000000063EE0: 00000000
	.long 0                                                    // 000000063EE4: 00000000
	.long 0                                                    // 000000063EE8: 00000000
	.long 0                                                    // 000000063EEC: 00000000
	.long 0x60af0101                                           // 000000063EF0: 60AF0101
	.long 0x1384                                               // 000000063EF4: 00001384
	.long 0x408                                                // 000000063EF8: 00000408
	.long 0                                                    // 000000063EFC: 00000000
	.type	mul_long_get_global_size_get_num_groups.kd,@object
mul_long_get_global_size_get_num_groups.kd:
	.long 0                                                    // 000000063F00: 00000000
	.long 0                                                    // 000000063F04: 00000000
	.long 0x110                                                // 000000063F08: 00000110
	.long 0                                                    // 000000063F0C: 00000000
	.long 0x13e00                                              // 000000063F10: 00013E00
	.long 0                                                    // 000000063F14: 00000000
	.long 0                                                    // 000000063F18: 00000000
	.long 0                                                    // 000000063F1C: 00000000
	.long 0                                                    // 000000063F20: 00000000
	.long 0                                                    // 000000063F24: 00000000
	.long 0                                                    // 000000063F28: 00000000
	.long 0                                                    // 000000063F2C: 00000000
	.long 0x60af0101                                           // 000000063F30: 60AF0101
	.long 0x1384                                               // 000000063F34: 00001384
	.long 0x408                                                // 000000063F38: 00000408
	.long 0                                                    // 000000063F3C: 00000000
	.type	mul_long_get_num_groups_get_num_groups.kd,@object
mul_long_get_num_groups_get_num_groups.kd:
	.long 0                                                    // 000000063F40: 00000000
	.long 0                                                    // 000000063F44: 00000000
	.long 0x110                                                // 000000063F48: 00000110
	.long 0                                                    // 000000063F4C: 00000000
	.long 0x13fc0                                              // 000000063F50: 00013FC0
	.long 0                                                    // 000000063F54: 00000000
	.long 0                                                    // 000000063F58: 00000000
	.long 0                                                    // 000000063F5C: 00000000
	.long 0                                                    // 000000063F60: 00000000
	.long 0                                                    // 000000063F64: 00000000
	.long 0                                                    // 000000063F68: 00000000
	.long 0                                                    // 000000063F6C: 00000000
	.long 0x60af0101                                           // 000000063F70: 60AF0101
	.long 0x1384                                               // 000000063F74: 00001384
	.long 0x408                                                // 000000063F78: 00000408
	.long 0                                                    // 000000063F7C: 00000000
	.type	mul_long_get_work_dim_get_num_groups.kd,@object
mul_long_get_work_dim_get_num_groups.kd:
	.long 0                                                    // 000000063F80: 00000000
	.long 0                                                    // 000000063F84: 00000000
	.long 0x110                                                // 000000063F88: 00000110
	.long 0                                                    // 000000063F8C: 00000000
	.long 0x14180                                              // 000000063F90: 00014180
	.long 0                                                    // 000000063F94: 00000000
	.long 0                                                    // 000000063F98: 00000000
	.long 0                                                    // 000000063F9C: 00000000
	.long 0                                                    // 000000063FA0: 00000000
	.long 0                                                    // 000000063FA4: 00000000
	.long 0                                                    // 000000063FA8: 00000000
	.long 0                                                    // 000000063FAC: 00000000
	.long 0x60af0101                                           // 000000063FB0: 60AF0101
	.long 0x1384                                               // 000000063FB4: 00001384
	.long 0x408                                                // 000000063FB8: 00000408
	.long 0                                                    // 000000063FBC: 00000000
	.type	mul_long_x_get_work_dim.kd,@object
mul_long_x_get_work_dim.kd:
	.long 0                                                    // 000000063FC0: 00000000
	.long 0                                                    // 000000063FC4: 00000000
	.long 0x110                                                // 000000063FC8: 00000110
	.long 0                                                    // 000000063FCC: 00000000
	.ascii "@C"                                                // 000000063FD0: 4340
	.short 0x1                                                 // 000000063FD2: 0001
	.long 0                                                    // 000000063FD4: 00000000
	.long 0                                                    // 000000063FD8: 00000000
	.long 0                                                    // 000000063FDC: 00000000
	.long 0                                                    // 000000063FE0: 00000000
	.long 0                                                    // 000000063FE4: 00000000
	.long 0                                                    // 000000063FE8: 00000000
	.long 0                                                    // 000000063FEC: 00000000
	.long 0x60af0101                                           // 000000063FF0: 60AF0101
	.long 0x1384                                               // 000000063FF4: 00001384
	.long 0x408                                                // 000000063FF8: 00000408
	.long 0                                                    // 000000063FFC: 00000000
	.type	mul_long_get_global_offset_get_work_dim.kd,@object
mul_long_get_global_offset_get_work_dim.kd:
	.long 0                                                    // 000000064000: 00000000
	.long 0                                                    // 000000064004: 00000000
	.long 0x110                                                // 000000064008: 00000110
	.long 0                                                    // 00000006400C: 00000000
	.long 0x14500                                              // 000000064010: 00014500
	.long 0                                                    // 000000064014: 00000000
	.long 0                                                    // 000000064018: 00000000
	.long 0                                                    // 00000006401C: 00000000
	.long 0                                                    // 000000064020: 00000000
	.long 0                                                    // 000000064024: 00000000
	.long 0                                                    // 000000064028: 00000000
	.long 0                                                    // 00000006402C: 00000000
	.long 0x60af0100                                           // 000000064030: 60AF0100
	.long 0x1384                                               // 000000064034: 00001384
	.long 0x408                                                // 000000064038: 00000408
	.long 0                                                    // 00000006403C: 00000000
	.type	mul_long_get_local_id_get_work_dim.kd,@object
mul_long_get_local_id_get_work_dim.kd:
	.long 0                                                    // 000000064040: 00000000
	.long 0                                                    // 000000064044: 00000000
	.long 0x110                                                // 000000064048: 00000110
	.long 0                                                    // 00000006404C: 00000000
	.long 0x146c0                                              // 000000064050: 000146C0
	.long 0                                                    // 000000064054: 00000000
	.long 0                                                    // 000000064058: 00000000
	.long 0                                                    // 00000006405C: 00000000
	.long 0                                                    // 000000064060: 00000000
	.long 0                                                    // 000000064064: 00000000
	.long 0                                                    // 000000064068: 00000000
	.long 0                                                    // 00000006406C: 00000000
	.long 0x60af0101                                           // 000000064070: 60AF0101
	.long 0x1384                                               // 000000064074: 00001384
	.long 0x408                                                // 000000064078: 00000408
	.long 0                                                    // 00000006407C: 00000000
	.type	mul_long_get_group_id_get_work_dim.kd,@object
mul_long_get_group_id_get_work_dim.kd:
	.long 0                                                    // 000000064080: 00000000
	.long 0                                                    // 000000064084: 00000000
	.long 0x110                                                // 000000064088: 00000110
	.long 0                                                    // 00000006408C: 00000000
	.long 0x14780                                              // 000000064090: 00014780
	.long 0                                                    // 000000064094: 00000000
	.long 0                                                    // 000000064098: 00000000
	.long 0                                                    // 00000006409C: 00000000
	.long 0                                                    // 0000000640A0: 00000000
	.long 0                                                    // 0000000640A4: 00000000
	.long 0                                                    // 0000000640A8: 00000000
	.long 0                                                    // 0000000640AC: 00000000
	.long 0x60af0100                                           // 0000000640B0: 60AF0100
	.long 0x1384                                               // 0000000640B4: 00001384
	.long 0x408                                                // 0000000640B8: 00000408
	.long 0                                                    // 0000000640BC: 00000000
	.type	mul_long_get_local_size_get_work_dim.kd,@object
mul_long_get_local_size_get_work_dim.kd:
	.long 0                                                    // 0000000640C0: 00000000
	.long 0                                                    // 0000000640C4: 00000000
	.long 0x110                                                // 0000000640C8: 00000110
	.long 0                                                    // 0000000640CC: 00000000
	.ascii "@I"                                                // 0000000640D0: 4940
	.short 0x1                                                 // 0000000640D2: 0001
	.long 0                                                    // 0000000640D4: 00000000
	.long 0                                                    // 0000000640D8: 00000000
	.long 0                                                    // 0000000640DC: 00000000
	.long 0                                                    // 0000000640E0: 00000000
	.long 0                                                    // 0000000640E4: 00000000
	.long 0                                                    // 0000000640E8: 00000000
	.long 0                                                    // 0000000640EC: 00000000
	.long 0x60af0101                                           // 0000000640F0: 60AF0101
	.long 0x1384                                               // 0000000640F4: 00001384
	.long 0x408                                                // 0000000640F8: 00000408
	.long 0                                                    // 0000000640FC: 00000000
	.type	mul_long_get_global_id_get_work_dim.kd,@object
mul_long_get_global_id_get_work_dim.kd:
	.long 0                                                    // 000000064100: 00000000
	.long 0                                                    // 000000064104: 00000000
	.long 0x110                                                // 000000064108: 00000110
	.long 0                                                    // 00000006410C: 00000000
	.long 0x14b00                                              // 000000064110: 00014B00
	.long 0                                                    // 000000064114: 00000000
	.long 0                                                    // 000000064118: 00000000
	.long 0                                                    // 00000006411C: 00000000
	.long 0                                                    // 000000064120: 00000000
	.long 0                                                    // 000000064124: 00000000
	.long 0                                                    // 000000064128: 00000000
	.long 0                                                    // 00000006412C: 00000000
	.long 0x60af0101                                           // 000000064130: 60AF0101
	.long 0x1384                                               // 000000064134: 00001384
	.long 0x408                                                // 000000064138: 00000408
	.long 0                                                    // 00000006413C: 00000000
	.type	mul_long_get_global_size_get_work_dim.kd,@object
mul_long_get_global_size_get_work_dim.kd:
	.long 0                                                    // 000000064140: 00000000
	.long 0                                                    // 000000064144: 00000000
	.long 0x110                                                // 000000064148: 00000110
	.long 0                                                    // 00000006414C: 00000000
	.long 0x14cc0                                              // 000000064150: 00014CC0
	.long 0                                                    // 000000064154: 00000000
	.long 0                                                    // 000000064158: 00000000
	.long 0                                                    // 00000006415C: 00000000
	.long 0                                                    // 000000064160: 00000000
	.long 0                                                    // 000000064164: 00000000
	.long 0                                                    // 000000064168: 00000000
	.long 0                                                    // 00000006416C: 00000000
	.long 0x60af0101                                           // 000000064170: 60AF0101
	.long 0x1384                                               // 000000064174: 00001384
	.long 0x408                                                // 000000064178: 00000408
	.long 0                                                    // 00000006417C: 00000000
	.type	mul_long_get_num_groups_get_work_dim.kd,@object
mul_long_get_num_groups_get_work_dim.kd:
	.long 0                                                    // 000000064180: 00000000
	.long 0                                                    // 000000064184: 00000000
	.long 0x110                                                // 000000064188: 00000110
	.long 0                                                    // 00000006418C: 00000000
	.long 0x14e80                                              // 000000064190: 00014E80
	.long 0                                                    // 000000064194: 00000000
	.long 0                                                    // 000000064198: 00000000
	.long 0                                                    // 00000006419C: 00000000
	.long 0                                                    // 0000000641A0: 00000000
	.long 0                                                    // 0000000641A4: 00000000
	.long 0                                                    // 0000000641A8: 00000000
	.long 0                                                    // 0000000641AC: 00000000
	.long 0x60af0101                                           // 0000000641B0: 60AF0101
	.long 0x1384                                               // 0000000641B4: 00001384
	.long 0x408                                                // 0000000641B8: 00000408
	.long 0                                                    // 0000000641BC: 00000000
	.type	mul_long_get_work_dim_get_work_dim.kd,@object
mul_long_get_work_dim_get_work_dim.kd:
	.long 0                                                    // 0000000641C0: 00000000
	.long 0                                                    // 0000000641C4: 00000000
	.long 0x110                                                // 0000000641C8: 00000110
	.long 0                                                    // 0000000641CC: 00000000
	.ascii "@P"                                                // 0000000641D0: 5040
	.short 0x1                                                 // 0000000641D2: 0001
	.long 0                                                    // 0000000641D4: 00000000
	.long 0                                                    // 0000000641D8: 00000000
	.long 0                                                    // 0000000641DC: 00000000
	.long 0                                                    // 0000000641E0: 00000000
	.long 0                                                    // 0000000641E4: 00000000
	.long 0                                                    // 0000000641E8: 00000000
	.long 0                                                    // 0000000641EC: 00000000
	.long 0x60af0101                                           // 0000000641F0: 60AF0101
	.long 0x1384                                               // 0000000641F4: 00001384
	.long 0x408                                                // 0000000641F8: 00000408
	.long 0                                                    // 0000000641FC: 00000000
	.type	mul_long_x_64.kd,@object
mul_long_x_64.kd:
	.long 0                                                    // 000000064200: 00000000
	.long 0                                                    // 000000064204: 00000000
	.long 0x110                                                // 000000064208: 00000110
	.long 0                                                    // 00000006420C: 00000000
	.long 0x15100                                              // 000000064210: 00015100
	.long 0                                                    // 000000064214: 00000000
	.long 0                                                    // 000000064218: 00000000
	.long 0                                                    // 00000006421C: 00000000
	.long 0                                                    // 000000064220: 00000000
	.long 0                                                    // 000000064224: 00000000
	.long 0                                                    // 000000064228: 00000000
	.long 0                                                    // 00000006422C: 00000000
	.long 0x60af0100                                           // 000000064230: 60AF0100
	.long 0x84                                                 // 000000064234: 00000084
	.long 0x408                                                // 000000064238: 00000408
	.long 0                                                    // 00000006423C: 00000000
	.type	mul_long_get_global_offset_64.kd,@object
mul_long_get_global_offset_64.kd:
	.long 0                                                    // 000000064240: 00000000
	.long 0                                                    // 000000064244: 00000000
	.long 0x110                                                // 000000064248: 00000110
	.long 0                                                    // 00000006424C: 00000000
	.long 0x151c0                                              // 000000064250: 000151C0
	.long 0                                                    // 000000064254: 00000000
	.long 0                                                    // 000000064258: 00000000
	.long 0                                                    // 00000006425C: 00000000
	.long 0                                                    // 000000064260: 00000000
	.long 0                                                    // 000000064264: 00000000
	.long 0                                                    // 000000064268: 00000000
	.long 0                                                    // 00000006426C: 00000000
	.long 0x60af0100                                           // 000000064270: 60AF0100
	.long 0x84                                                 // 000000064274: 00000084
	.long 0x408                                                // 000000064278: 00000408
	.long 0                                                    // 00000006427C: 00000000
	.type	mul_long_get_local_id_64.kd,@object
mul_long_get_local_id_64.kd:
	.long 0                                                    // 000000064280: 00000000
	.long 0                                                    // 000000064284: 00000000
	.long 0x110                                                // 000000064288: 00000110
	.long 0                                                    // 00000006428C: 00000000
	.long 0x15280                                              // 000000064290: 00015280
	.long 0                                                    // 000000064294: 00000000
	.long 0                                                    // 000000064298: 00000000
	.long 0                                                    // 00000006429C: 00000000
	.long 0                                                    // 0000000642A0: 00000000
	.long 0                                                    // 0000000642A4: 00000000
	.long 0                                                    // 0000000642A8: 00000000
	.long 0                                                    // 0000000642AC: 00000000
	.long 0x60af0100                                           // 0000000642B0: 60AF0100
	.long 0x84                                                 // 0000000642B4: 00000084
	.long 0x408                                                // 0000000642B8: 00000408
	.long 0                                                    // 0000000642BC: 00000000
	.type	mul_long_get_group_id_64.kd,@object
mul_long_get_group_id_64.kd:
	.long 0                                                    // 0000000642C0: 00000000
	.long 0                                                    // 0000000642C4: 00000000
	.long 0x110                                                // 0000000642C8: 00000110
	.long 0                                                    // 0000000642CC: 00000000
	.ascii "@S"                                                // 0000000642D0: 5340
	.short 0x1                                                 // 0000000642D2: 0001
	.long 0                                                    // 0000000642D4: 00000000
	.long 0                                                    // 0000000642D8: 00000000
	.long 0                                                    // 0000000642DC: 00000000
	.long 0                                                    // 0000000642E0: 00000000
	.long 0                                                    // 0000000642E4: 00000000
	.long 0                                                    // 0000000642E8: 00000000
	.long 0                                                    // 0000000642EC: 00000000
	.long 0x60af0100                                           // 0000000642F0: 60AF0100
	.long 0x84                                                 // 0000000642F4: 00000084
	.long 0x408                                                // 0000000642F8: 00000408
	.long 0                                                    // 0000000642FC: 00000000
	.type	mul_long_get_local_size_64.kd,@object
mul_long_get_local_size_64.kd:
	.long 0                                                    // 000000064300: 00000000
	.long 0                                                    // 000000064304: 00000000
	.long 0x110                                                // 000000064308: 00000110
	.long 0                                                    // 00000006430C: 00000000
	.long 0x15400                                              // 000000064310: 00015400
	.long 0                                                    // 000000064314: 00000000
	.long 0                                                    // 000000064318: 00000000
	.long 0                                                    // 00000006431C: 00000000
	.long 0                                                    // 000000064320: 00000000
	.long 0                                                    // 000000064324: 00000000
	.long 0                                                    // 000000064328: 00000000
	.long 0                                                    // 00000006432C: 00000000
	.long 0x60af0100                                           // 000000064330: 60AF0100
	.long 0x84                                                 // 000000064334: 00000084
	.long 0x408                                                // 000000064338: 00000408
	.long 0                                                    // 00000006433C: 00000000
	.type	mul_long_get_global_id_64.kd,@object
mul_long_get_global_id_64.kd:
	.long 0                                                    // 000000064340: 00000000
	.long 0                                                    // 000000064344: 00000000
	.long 0x110                                                // 000000064348: 00000110
	.long 0                                                    // 00000006434C: 00000000
	.long 0x154c0                                              // 000000064350: 000154C0
	.long 0                                                    // 000000064354: 00000000
	.long 0                                                    // 000000064358: 00000000
	.long 0                                                    // 00000006435C: 00000000
	.long 0                                                    // 000000064360: 00000000
	.long 0                                                    // 000000064364: 00000000
	.long 0                                                    // 000000064368: 00000000
	.long 0                                                    // 00000006436C: 00000000
	.long 0x60af0100                                           // 000000064370: 60AF0100
	.long 0x84                                                 // 000000064374: 00000084
	.long 0x408                                                // 000000064378: 00000408
	.long 0                                                    // 00000006437C: 00000000
	.type	mul_long_get_global_size_64.kd,@object
mul_long_get_global_size_64.kd:
	.long 0                                                    // 000000064380: 00000000
	.long 0                                                    // 000000064384: 00000000
	.long 0x110                                                // 000000064388: 00000110
	.long 0                                                    // 00000006438C: 00000000
	.long 0x15580                                              // 000000064390: 00015580
	.long 0                                                    // 000000064394: 00000000
	.long 0                                                    // 000000064398: 00000000
	.long 0                                                    // 00000006439C: 00000000
	.long 0                                                    // 0000000643A0: 00000000
	.long 0                                                    // 0000000643A4: 00000000
	.long 0                                                    // 0000000643A8: 00000000
	.long 0                                                    // 0000000643AC: 00000000
	.long 0x60af0100                                           // 0000000643B0: 60AF0100
	.long 0x84                                                 // 0000000643B4: 00000084
	.long 0x408                                                // 0000000643B8: 00000408
	.long 0                                                    // 0000000643BC: 00000000
	.type	mul_long_get_num_groups_64.kd,@object
mul_long_get_num_groups_64.kd:
	.long 0                                                    // 0000000643C0: 00000000
	.long 0                                                    // 0000000643C4: 00000000
	.long 0x110                                                // 0000000643C8: 00000110
	.long 0                                                    // 0000000643CC: 00000000
	.ascii "@V"                                                // 0000000643D0: 5640
	.short 0x1                                                 // 0000000643D2: 0001
	.long 0                                                    // 0000000643D4: 00000000
	.long 0                                                    // 0000000643D8: 00000000
	.long 0                                                    // 0000000643DC: 00000000
	.long 0                                                    // 0000000643E0: 00000000
	.long 0                                                    // 0000000643E4: 00000000
	.long 0                                                    // 0000000643E8: 00000000
	.long 0                                                    // 0000000643EC: 00000000
	.long 0x60af0100                                           // 0000000643F0: 60AF0100
	.long 0x84                                                 // 0000000643F4: 00000084
	.long 0x408                                                // 0000000643F8: 00000408
	.long 0                                                    // 0000000643FC: 00000000
	.type	mul_long_get_work_dim.kd,@object
mul_long_get_work_dim.kd:
	.long 0                                                    // 000000064400: 00000000
	.long 0                                                    // 000000064404: 00000000
	.long 0x110                                                // 000000064408: 00000110
	.long 0                                                    // 00000006440C: 00000000
	.long 0x15700                                              // 000000064410: 00015700
	.long 0                                                    // 000000064414: 00000000
	.long 0                                                    // 000000064418: 00000000
	.long 0                                                    // 00000006441C: 00000000
	.long 0                                                    // 000000064420: 00000000
	.long 0                                                    // 000000064424: 00000000
	.long 0                                                    // 000000064428: 00000000
	.long 0                                                    // 00000006442C: 00000000
	.long 0x60af0100                                           // 000000064430: 60AF0100
	.long 0x84                                                 // 000000064434: 00000084
	.long 0x408                                                // 000000064438: 00000408
	.long 0                                                    // 00000006443C: 00000000
	.type	mul_long_x_8_8.kd,@object
mul_long_x_8_8.kd:
	.long 0                                                    // 000000064440: 00000000
	.long 0                                                    // 000000064444: 00000000
	.long 0x110                                                // 000000064448: 00000110
	.long 0                                                    // 00000006444C: 00000000
	.long 0x157c0                                              // 000000064450: 000157C0
	.long 0                                                    // 000000064454: 00000000
	.long 0                                                    // 000000064458: 00000000
	.long 0                                                    // 00000006445C: 00000000
	.long 0                                                    // 000000064460: 00000000
	.long 0                                                    // 000000064464: 00000000
	.long 0                                                    // 000000064468: 00000000
	.long 0                                                    // 00000006446C: 00000000
	.long 0x60af0100                                           // 000000064470: 60AF0100
	.long 0x984                                                // 000000064474: 00000984
	.long 0x408                                                // 000000064478: 00000408
	.long 0                                                    // 00000006447C: 00000000
	.type	mul_long_get_global_offset_8_8.kd,@object
mul_long_get_global_offset_8_8.kd:
	.long 0                                                    // 000000064480: 00000000
	.long 0                                                    // 000000064484: 00000000
	.long 0x110                                                // 000000064488: 00000110
	.long 0                                                    // 00000006448C: 00000000
	.long 0x15880                                              // 000000064490: 00015880
	.long 0                                                    // 000000064494: 00000000
	.long 0                                                    // 000000064498: 00000000
	.long 0                                                    // 00000006449C: 00000000
	.long 0                                                    // 0000000644A0: 00000000
	.long 0                                                    // 0000000644A4: 00000000
	.long 0                                                    // 0000000644A8: 00000000
	.long 0                                                    // 0000000644AC: 00000000
	.long 0x60af0100                                           // 0000000644B0: 60AF0100
	.long 0x84                                                 // 0000000644B4: 00000084
	.long 0x408                                                // 0000000644B8: 00000408
	.long 0                                                    // 0000000644BC: 00000000
	.type	mul_long_get_local_id_8_8.kd,@object
mul_long_get_local_id_8_8.kd:
	.long 0                                                    // 0000000644C0: 00000000
	.long 0                                                    // 0000000644C4: 00000000
	.long 0x110                                                // 0000000644C8: 00000110
	.long 0                                                    // 0000000644CC: 00000000
	.ascii "@Y"                                                // 0000000644D0: 5940
	.short 0x1                                                 // 0000000644D2: 0001
	.long 0                                                    // 0000000644D4: 00000000
	.long 0                                                    // 0000000644D8: 00000000
	.long 0                                                    // 0000000644DC: 00000000
	.long 0                                                    // 0000000644E0: 00000000
	.long 0                                                    // 0000000644E4: 00000000
	.long 0                                                    // 0000000644E8: 00000000
	.long 0                                                    // 0000000644EC: 00000000
	.long 0x60af0100                                           // 0000000644F0: 60AF0100
	.long 0x884                                                // 0000000644F4: 00000884
	.long 0x408                                                // 0000000644F8: 00000408
	.long 0                                                    // 0000000644FC: 00000000
	.type	mul_long_get_group_id_8_8.kd,@object
mul_long_get_group_id_8_8.kd:
	.long 0                                                    // 000000064500: 00000000
	.long 0                                                    // 000000064504: 00000000
	.long 0x110                                                // 000000064508: 00000110
	.long 0                                                    // 00000006450C: 00000000
	.long 0x15a00                                              // 000000064510: 00015A00
	.long 0                                                    // 000000064514: 00000000
	.long 0                                                    // 000000064518: 00000000
	.long 0                                                    // 00000006451C: 00000000
	.long 0                                                    // 000000064520: 00000000
	.long 0                                                    // 000000064524: 00000000
	.long 0                                                    // 000000064528: 00000000
	.long 0                                                    // 00000006452C: 00000000
	.long 0x60af0100                                           // 000000064530: 60AF0100
	.long 0x184                                                // 000000064534: 00000184
	.long 0x408                                                // 000000064538: 00000408
	.long 0                                                    // 00000006453C: 00000000
	.type	mul_long_get_local_size_8_8.kd,@object
mul_long_get_local_size_8_8.kd:
	.long 0                                                    // 000000064540: 00000000
	.long 0                                                    // 000000064544: 00000000
	.long 0x110                                                // 000000064548: 00000110
	.long 0                                                    // 00000006454C: 00000000
	.long 0x15ac0                                              // 000000064550: 00015AC0
	.long 0                                                    // 000000064554: 00000000
	.long 0                                                    // 000000064558: 00000000
	.long 0                                                    // 00000006455C: 00000000
	.long 0                                                    // 000000064560: 00000000
	.long 0                                                    // 000000064564: 00000000
	.long 0                                                    // 000000064568: 00000000
	.long 0                                                    // 00000006456C: 00000000
	.long 0x60af0100                                           // 000000064570: 60AF0100
	.long 0x184                                                // 000000064574: 00000184
	.long 0x408                                                // 000000064578: 00000408
	.long 0                                                    // 00000006457C: 00000000
	.type	mul_long_get_global_id_8_8.kd,@object
mul_long_get_global_id_8_8.kd:
	.long 0                                                    // 000000064580: 00000000
	.long 0                                                    // 000000064584: 00000000
	.long 0x110                                                // 000000064588: 00000110
	.long 0                                                    // 00000006458C: 00000000
	.long 0x15b80                                              // 000000064590: 00015B80
	.long 0                                                    // 000000064594: 00000000
	.long 0                                                    // 000000064598: 00000000
	.long 0                                                    // 00000006459C: 00000000
	.long 0                                                    // 0000000645A0: 00000000
	.long 0                                                    // 0000000645A4: 00000000
	.long 0                                                    // 0000000645A8: 00000000
	.long 0                                                    // 0000000645AC: 00000000
	.long 0x60af0100                                           // 0000000645B0: 60AF0100
	.long 0x984                                                // 0000000645B4: 00000984
	.long 0x408                                                // 0000000645B8: 00000408
	.long 0                                                    // 0000000645BC: 00000000
	.type	mul_long_get_global_size_8_8.kd,@object
mul_long_get_global_size_8_8.kd:
	.long 0                                                    // 0000000645C0: 00000000
	.long 0                                                    // 0000000645C4: 00000000
	.long 0x110                                                // 0000000645C8: 00000110
	.long 0                                                    // 0000000645CC: 00000000
	.ascii "@\\"                                               // 0000000645D0: 5C40
	.short 0x1                                                 // 0000000645D2: 0001
	.long 0                                                    // 0000000645D4: 00000000
	.long 0                                                    // 0000000645D8: 00000000
	.long 0                                                    // 0000000645DC: 00000000
	.long 0                                                    // 0000000645E0: 00000000
	.long 0                                                    // 0000000645E4: 00000000
	.long 0                                                    // 0000000645E8: 00000000
	.long 0                                                    // 0000000645EC: 00000000
	.long 0x60af0100                                           // 0000000645F0: 60AF0100
	.long 0x84                                                 // 0000000645F4: 00000084
	.long 0x408                                                // 0000000645F8: 00000408
	.long 0                                                    // 0000000645FC: 00000000
	.type	mul_long_get_num_groups_8_8.kd,@object
mul_long_get_num_groups_8_8.kd:
	.long 0                                                    // 000000064600: 00000000
	.long 0                                                    // 000000064604: 00000000
	.long 0x110                                                // 000000064608: 00000110
	.long 0                                                    // 00000006460C: 00000000
	.long 0x15d00                                              // 000000064610: 00015D00
	.long 0                                                    // 000000064614: 00000000
	.long 0                                                    // 000000064618: 00000000
	.long 0                                                    // 00000006461C: 00000000
	.long 0                                                    // 000000064620: 00000000
	.long 0                                                    // 000000064624: 00000000
	.long 0                                                    // 000000064628: 00000000
	.long 0                                                    // 00000006462C: 00000000
	.long 0x60af0100                                           // 000000064630: 60AF0100
	.long 0x84                                                 // 000000064634: 00000084
	.long 0x408                                                // 000000064638: 00000408
	.long 0                                                    // 00000006463C: 00000000
	.type	mul_long_get_work_dim_8_8.kd,@object
mul_long_get_work_dim_8_8.kd:
	.long 0                                                    // 000000064640: 00000000
	.long 0                                                    // 000000064644: 00000000
	.long 0x110                                                // 000000064648: 00000110
	.long 0                                                    // 00000006464C: 00000000
	.long 0x15dc0                                              // 000000064650: 00015DC0
	.long 0                                                    // 000000064654: 00000000
	.long 0                                                    // 000000064658: 00000000
	.long 0                                                    // 00000006465C: 00000000
	.long 0                                                    // 000000064660: 00000000
	.long 0                                                    // 000000064664: 00000000
	.long 0                                                    // 000000064668: 00000000
	.long 0                                                    // 00000006466C: 00000000
	.long 0x60af0100                                           // 000000064670: 60AF0100
	.long 0x984                                                // 000000064674: 00000984
	.long 0x408                                                // 000000064678: 00000408
	.long 0                                                    // 00000006467C: 00000000
	.type	mul_char_x_x.kd,@object
mul_char_x_x.kd:
	.long 0                                                    // 000000064680: 00000000
	.long 0                                                    // 000000064684: 00000000
	.long 0x110                                                // 000000064688: 00000110
	.long 0                                                    // 00000006468C: 00000000
	.long 0x15e80                                              // 000000064690: 00015E80
	.long 0                                                    // 000000064694: 00000000
	.long 0                                                    // 000000064698: 00000000
	.long 0                                                    // 00000006469C: 00000000
	.long 0                                                    // 0000000646A0: 00000000
	.long 0                                                    // 0000000646A4: 00000000
	.long 0                                                    // 0000000646A8: 00000000
	.long 0                                                    // 0000000646AC: 00000000
	.long 0x60af0100                                           // 0000000646B0: 60AF0100
	.long 0x84                                                 // 0000000646B4: 00000084
	.long 0x408                                                // 0000000646B8: 00000408
	.long 0                                                    // 0000000646BC: 00000000
	.type	mul_char_get_global_offset_x.kd,@object
mul_char_get_global_offset_x.kd:
	.long 0                                                    // 0000000646C0: 00000000
	.long 0                                                    // 0000000646C4: 00000000
	.long 0x110                                                // 0000000646C8: 00000110
	.long 0                                                    // 0000000646CC: 00000000
	.ascii "@_"                                                // 0000000646D0: 5F40
	.short 0x1                                                 // 0000000646D2: 0001
	.long 0                                                    // 0000000646D4: 00000000
	.long 0                                                    // 0000000646D8: 00000000
	.long 0                                                    // 0000000646DC: 00000000
	.long 0                                                    // 0000000646E0: 00000000
	.long 0                                                    // 0000000646E4: 00000000
	.long 0                                                    // 0000000646E8: 00000000
	.long 0                                                    // 0000000646EC: 00000000
	.long 0x60af0100                                           // 0000000646F0: 60AF0100
	.long 0x1384                                               // 0000000646F4: 00001384
	.long 0x408                                                // 0000000646F8: 00000408
	.long 0                                                    // 0000000646FC: 00000000
	.type	mul_char_get_local_id_x.kd,@object
mul_char_get_local_id_x.kd:
	.long 0                                                    // 000000064700: 00000000
	.long 0                                                    // 000000064704: 00000000
	.long 0x110                                                // 000000064708: 00000110
	.long 0                                                    // 00000006470C: 00000000
	.long 0x16000                                              // 000000064710: 00016000
	.long 0                                                    // 000000064714: 00000000
	.long 0                                                    // 000000064718: 00000000
	.long 0                                                    // 00000006471C: 00000000
	.long 0                                                    // 000000064720: 00000000
	.long 0                                                    // 000000064724: 00000000
	.long 0                                                    // 000000064728: 00000000
	.long 0                                                    // 00000006472C: 00000000
	.long 0x60af0100                                           // 000000064730: 60AF0100
	.long 0x1384                                               // 000000064734: 00001384
	.long 0x408                                                // 000000064738: 00000408
	.long 0                                                    // 00000006473C: 00000000
	.type	mul_char_get_group_id_x.kd,@object
mul_char_get_group_id_x.kd:
	.long 0                                                    // 000000064740: 00000000
	.long 0                                                    // 000000064744: 00000000
	.long 0x110                                                // 000000064748: 00000110
	.long 0                                                    // 00000006474C: 00000000
	.long 0x160c0                                              // 000000064750: 000160C0
	.long 0                                                    // 000000064754: 00000000
	.long 0                                                    // 000000064758: 00000000
	.long 0                                                    // 00000006475C: 00000000
	.long 0                                                    // 000000064760: 00000000
	.long 0                                                    // 000000064764: 00000000
	.long 0                                                    // 000000064768: 00000000
	.long 0                                                    // 00000006476C: 00000000
	.long 0x60af0100                                           // 000000064770: 60AF0100
	.long 0x1384                                               // 000000064774: 00001384
	.long 0x408                                                // 000000064778: 00000408
	.long 0                                                    // 00000006477C: 00000000
	.type	mul_char_get_local_size_x.kd,@object
mul_char_get_local_size_x.kd:
	.long 0                                                    // 000000064780: 00000000
	.long 0                                                    // 000000064784: 00000000
	.long 0x110                                                // 000000064788: 00000110
	.long 0                                                    // 00000006478C: 00000000
	.long 0x16180                                              // 000000064790: 00016180
	.long 0                                                    // 000000064794: 00000000
	.long 0                                                    // 000000064798: 00000000
	.long 0                                                    // 00000006479C: 00000000
	.long 0                                                    // 0000000647A0: 00000000
	.long 0                                                    // 0000000647A4: 00000000
	.long 0                                                    // 0000000647A8: 00000000
	.long 0                                                    // 0000000647AC: 00000000
	.long 0x60af0100                                           // 0000000647B0: 60AF0100
	.long 0x1384                                               // 0000000647B4: 00001384
	.long 0x408                                                // 0000000647B8: 00000408
	.long 0                                                    // 0000000647BC: 00000000
	.type	mul_char_get_global_id_x.kd,@object
mul_char_get_global_id_x.kd:
	.long 0                                                    // 0000000647C0: 00000000
	.long 0                                                    // 0000000647C4: 00000000
	.long 0x110                                                // 0000000647C8: 00000110
	.long 0                                                    // 0000000647CC: 00000000
	.ascii "@c"                                                // 0000000647D0: 6340
	.short 0x1                                                 // 0000000647D2: 0001
	.long 0                                                    // 0000000647D4: 00000000
	.long 0                                                    // 0000000647D8: 00000000
	.long 0                                                    // 0000000647DC: 00000000
	.long 0                                                    // 0000000647E0: 00000000
	.long 0                                                    // 0000000647E4: 00000000
	.long 0                                                    // 0000000647E8: 00000000
	.long 0                                                    // 0000000647EC: 00000000
	.long 0x60af0100                                           // 0000000647F0: 60AF0100
	.long 0x1384                                               // 0000000647F4: 00001384
	.long 0x408                                                // 0000000647F8: 00000408
	.long 0                                                    // 0000000647FC: 00000000
	.type	mul_char_get_global_size_x.kd,@object
mul_char_get_global_size_x.kd:
	.long 0                                                    // 000000064800: 00000000
	.long 0                                                    // 000000064804: 00000000
	.long 0x110                                                // 000000064808: 00000110
	.long 0                                                    // 00000006480C: 00000000
	.long 0x16400                                              // 000000064810: 00016400
	.long 0                                                    // 000000064814: 00000000
	.long 0                                                    // 000000064818: 00000000
	.long 0                                                    // 00000006481C: 00000000
	.long 0                                                    // 000000064820: 00000000
	.long 0                                                    // 000000064824: 00000000
	.long 0                                                    // 000000064828: 00000000
	.long 0                                                    // 00000006482C: 00000000
	.long 0x60af0100                                           // 000000064830: 60AF0100
	.long 0x1384                                               // 000000064834: 00001384
	.long 0x408                                                // 000000064838: 00000408
	.long 0                                                    // 00000006483C: 00000000
	.type	mul_char_get_num_groups_x.kd,@object
mul_char_get_num_groups_x.kd:
	.long 0                                                    // 000000064840: 00000000
	.long 0                                                    // 000000064844: 00000000
	.long 0x110                                                // 000000064848: 00000110
	.long 0                                                    // 00000006484C: 00000000
	.long 0x164c0                                              // 000000064850: 000164C0
	.long 0                                                    // 000000064854: 00000000
	.long 0                                                    // 000000064858: 00000000
	.long 0                                                    // 00000006485C: 00000000
	.long 0                                                    // 000000064860: 00000000
	.long 0                                                    // 000000064864: 00000000
	.long 0                                                    // 000000064868: 00000000
	.long 0                                                    // 00000006486C: 00000000
	.long 0x60af0100                                           // 000000064870: 60AF0100
	.long 0x1384                                               // 000000064874: 00001384
	.long 0x408                                                // 000000064878: 00000408
	.long 0                                                    // 00000006487C: 00000000
	.type	mul_char_get_work_dim_x.kd,@object
mul_char_get_work_dim_x.kd:
	.long 0                                                    // 000000064880: 00000000
	.long 0                                                    // 000000064884: 00000000
	.long 0x110                                                // 000000064888: 00000110
	.long 0                                                    // 00000006488C: 00000000
	.long 0x16680                                              // 000000064890: 00016680
	.long 0                                                    // 000000064894: 00000000
	.long 0                                                    // 000000064898: 00000000
	.long 0                                                    // 00000006489C: 00000000
	.long 0                                                    // 0000000648A0: 00000000
	.long 0                                                    // 0000000648A4: 00000000
	.long 0                                                    // 0000000648A8: 00000000
	.long 0                                                    // 0000000648AC: 00000000
	.long 0x60af0100                                           // 0000000648B0: 60AF0100
	.long 0x84                                                 // 0000000648B4: 00000084
	.long 0x408                                                // 0000000648B8: 00000408
	.long 0                                                    // 0000000648BC: 00000000
	.type	mul_char_x_get_global_offset.kd,@object
mul_char_x_get_global_offset.kd:
	.long 0                                                    // 0000000648C0: 00000000
	.long 0                                                    // 0000000648C4: 00000000
	.long 0x110                                                // 0000000648C8: 00000110
	.long 0                                                    // 0000000648CC: 00000000
	.ascii "@g"                                                // 0000000648D0: 6740
	.short 0x1                                                 // 0000000648D2: 0001
	.long 0                                                    // 0000000648D4: 00000000
	.long 0                                                    // 0000000648D8: 00000000
	.long 0                                                    // 0000000648DC: 00000000
	.long 0                                                    // 0000000648E0: 00000000
	.long 0                                                    // 0000000648E4: 00000000
	.long 0                                                    // 0000000648E8: 00000000
	.long 0                                                    // 0000000648EC: 00000000
	.long 0x60af0100                                           // 0000000648F0: 60AF0100
	.long 0x1384                                               // 0000000648F4: 00001384
	.long 0x408                                                // 0000000648F8: 00000408
	.long 0                                                    // 0000000648FC: 00000000
	.type	mul_char_get_global_offset_get_global_offset.kd,@object
mul_char_get_global_offset_get_global_offset.kd:
	.long 0                                                    // 000000064900: 00000000
	.long 0                                                    // 000000064904: 00000000
	.long 0x110                                                // 000000064908: 00000110
	.long 0                                                    // 00000006490C: 00000000
	.long 0x16800                                              // 000000064910: 00016800
	.long 0                                                    // 000000064914: 00000000
	.long 0                                                    // 000000064918: 00000000
	.long 0                                                    // 00000006491C: 00000000
	.long 0                                                    // 000000064920: 00000000
	.long 0                                                    // 000000064924: 00000000
	.long 0                                                    // 000000064928: 00000000
	.long 0                                                    // 00000006492C: 00000000
	.long 0x60af0100                                           // 000000064930: 60AF0100
	.long 0x1384                                               // 000000064934: 00001384
	.long 0x408                                                // 000000064938: 00000408
	.long 0                                                    // 00000006493C: 00000000
	.type	mul_char_get_local_id_get_global_offset.kd,@object
mul_char_get_local_id_get_global_offset.kd:
	.long 0                                                    // 000000064940: 00000000
	.long 0                                                    // 000000064944: 00000000
	.long 0x110                                                // 000000064948: 00000110
	.long 0                                                    // 00000006494C: 00000000
	.long 0x168c0                                              // 000000064950: 000168C0
	.long 0                                                    // 000000064954: 00000000
	.long 0                                                    // 000000064958: 00000000
	.long 0                                                    // 00000006495C: 00000000
	.long 0                                                    // 000000064960: 00000000
	.long 0                                                    // 000000064964: 00000000
	.long 0                                                    // 000000064968: 00000000
	.long 0                                                    // 00000006496C: 00000000
	.long 0x60af0100                                           // 000000064970: 60AF0100
	.long 0x1384                                               // 000000064974: 00001384
	.long 0x408                                                // 000000064978: 00000408
	.long 0                                                    // 00000006497C: 00000000
	.type	mul_char_get_group_id_get_global_offset.kd,@object
mul_char_get_group_id_get_global_offset.kd:
	.long 0                                                    // 000000064980: 00000000
	.long 0                                                    // 000000064984: 00000000
	.long 0x110                                                // 000000064988: 00000110
	.long 0                                                    // 00000006498C: 00000000
	.long 0x16980                                              // 000000064990: 00016980
	.long 0                                                    // 000000064994: 00000000
	.long 0                                                    // 000000064998: 00000000
	.long 0                                                    // 00000006499C: 00000000
	.long 0                                                    // 0000000649A0: 00000000
	.long 0                                                    // 0000000649A4: 00000000
	.long 0                                                    // 0000000649A8: 00000000
	.long 0                                                    // 0000000649AC: 00000000
	.long 0x60af0100                                           // 0000000649B0: 60AF0100
	.long 0x1384                                               // 0000000649B4: 00001384
	.long 0x408                                                // 0000000649B8: 00000408
	.long 0                                                    // 0000000649BC: 00000000
	.type	mul_char_get_local_size_get_global_offset.kd,@object
mul_char_get_local_size_get_global_offset.kd:
	.long 0                                                    // 0000000649C0: 00000000
	.long 0                                                    // 0000000649C4: 00000000
	.long 0x110                                                // 0000000649C8: 00000110
	.long 0                                                    // 0000000649CC: 00000000
	.ascii "@j"                                                // 0000000649D0: 6A40
	.short 0x1                                                 // 0000000649D2: 0001
	.long 0                                                    // 0000000649D4: 00000000
	.long 0                                                    // 0000000649D8: 00000000
	.long 0                                                    // 0000000649DC: 00000000
	.long 0                                                    // 0000000649E0: 00000000
	.long 0                                                    // 0000000649E4: 00000000
	.long 0                                                    // 0000000649E8: 00000000
	.long 0                                                    // 0000000649EC: 00000000
	.long 0x60af0100                                           // 0000000649F0: 60AF0100
	.long 0x1384                                               // 0000000649F4: 00001384
	.long 0x408                                                // 0000000649F8: 00000408
	.long 0                                                    // 0000000649FC: 00000000
	.type	mul_char_get_global_id_get_global_offset.kd,@object
mul_char_get_global_id_get_global_offset.kd:
	.long 0                                                    // 000000064A00: 00000000
	.long 0                                                    // 000000064A04: 00000000
	.long 0x110                                                // 000000064A08: 00000110
	.long 0                                                    // 000000064A0C: 00000000
	.long 0x16c00                                              // 000000064A10: 00016C00
	.long 0                                                    // 000000064A14: 00000000
	.long 0                                                    // 000000064A18: 00000000
	.long 0                                                    // 000000064A1C: 00000000
	.long 0                                                    // 000000064A20: 00000000
	.long 0                                                    // 000000064A24: 00000000
	.long 0                                                    // 000000064A28: 00000000
	.long 0                                                    // 000000064A2C: 00000000
	.long 0x60af0100                                           // 000000064A30: 60AF0100
	.long 0x1384                                               // 000000064A34: 00001384
	.long 0x408                                                // 000000064A38: 00000408
	.long 0                                                    // 000000064A3C: 00000000
	.type	mul_char_get_global_size_get_global_offset.kd,@object
mul_char_get_global_size_get_global_offset.kd:
	.long 0                                                    // 000000064A40: 00000000
	.long 0                                                    // 000000064A44: 00000000
	.long 0x110                                                // 000000064A48: 00000110
	.long 0                                                    // 000000064A4C: 00000000
	.long 0x16cc0                                              // 000000064A50: 00016CC0
	.long 0                                                    // 000000064A54: 00000000
	.long 0                                                    // 000000064A58: 00000000
	.long 0                                                    // 000000064A5C: 00000000
	.long 0                                                    // 000000064A60: 00000000
	.long 0                                                    // 000000064A64: 00000000
	.long 0                                                    // 000000064A68: 00000000
	.long 0                                                    // 000000064A6C: 00000000
	.long 0x60af0100                                           // 000000064A70: 60AF0100
	.long 0x1384                                               // 000000064A74: 00001384
	.long 0x408                                                // 000000064A78: 00000408
	.long 0                                                    // 000000064A7C: 00000000
	.type	mul_char_get_num_groups_get_global_offset.kd,@object
mul_char_get_num_groups_get_global_offset.kd:
	.long 0                                                    // 000000064A80: 00000000
	.long 0                                                    // 000000064A84: 00000000
	.long 0x110                                                // 000000064A88: 00000110
	.long 0                                                    // 000000064A8C: 00000000
	.long 0x16d80                                              // 000000064A90: 00016D80
	.long 0                                                    // 000000064A94: 00000000
	.long 0                                                    // 000000064A98: 00000000
	.long 0                                                    // 000000064A9C: 00000000
	.long 0                                                    // 000000064AA0: 00000000
	.long 0                                                    // 000000064AA4: 00000000
	.long 0                                                    // 000000064AA8: 00000000
	.long 0                                                    // 000000064AAC: 00000000
	.long 0x60af0100                                           // 000000064AB0: 60AF0100
	.long 0x1384                                               // 000000064AB4: 00001384
	.long 0x408                                                // 000000064AB8: 00000408
	.long 0                                                    // 000000064ABC: 00000000
	.type	mul_char_get_work_dim_get_global_offset.kd,@object
mul_char_get_work_dim_get_global_offset.kd:
	.long 0                                                    // 000000064AC0: 00000000
	.long 0                                                    // 000000064AC4: 00000000
	.long 0x110                                                // 000000064AC8: 00000110
	.long 0                                                    // 000000064ACC: 00000000
	.ascii "@n"                                                // 000000064AD0: 6E40
	.short 0x1                                                 // 000000064AD2: 0001
	.long 0                                                    // 000000064AD4: 00000000
	.long 0                                                    // 000000064AD8: 00000000
	.long 0                                                    // 000000064ADC: 00000000
	.long 0                                                    // 000000064AE0: 00000000
	.long 0                                                    // 000000064AE4: 00000000
	.long 0                                                    // 000000064AE8: 00000000
	.long 0                                                    // 000000064AEC: 00000000
	.long 0x60af0100                                           // 000000064AF0: 60AF0100
	.long 0x1384                                               // 000000064AF4: 00001384
	.long 0x408                                                // 000000064AF8: 00000408
	.long 0                                                    // 000000064AFC: 00000000
	.type	mul_char_x_get_local_id.kd,@object
mul_char_x_get_local_id.kd:
	.long 0                                                    // 000000064B00: 00000000
	.long 0                                                    // 000000064B04: 00000000
	.long 0x110                                                // 000000064B08: 00000110
	.long 0                                                    // 000000064B0C: 00000000
	.long 0x16f00                                              // 000000064B10: 00016F00
	.long 0                                                    // 000000064B14: 00000000
	.long 0                                                    // 000000064B18: 00000000
	.long 0                                                    // 000000064B1C: 00000000
	.long 0                                                    // 000000064B20: 00000000
	.long 0                                                    // 000000064B24: 00000000
	.long 0                                                    // 000000064B28: 00000000
	.long 0                                                    // 000000064B2C: 00000000
	.long 0x60af0100                                           // 000000064B30: 60AF0100
	.long 0x1384                                               // 000000064B34: 00001384
	.long 0x408                                                // 000000064B38: 00000408
	.long 0                                                    // 000000064B3C: 00000000
	.type	mul_char_get_global_offset_get_local_id.kd,@object
mul_char_get_global_offset_get_local_id.kd:
	.long 0                                                    // 000000064B40: 00000000
	.long 0                                                    // 000000064B44: 00000000
	.long 0x110                                                // 000000064B48: 00000110
	.long 0                                                    // 000000064B4C: 00000000
	.long 0x16fc0                                              // 000000064B50: 00016FC0
	.long 0                                                    // 000000064B54: 00000000
	.long 0                                                    // 000000064B58: 00000000
	.long 0                                                    // 000000064B5C: 00000000
	.long 0                                                    // 000000064B60: 00000000
	.long 0                                                    // 000000064B64: 00000000
	.long 0                                                    // 000000064B68: 00000000
	.long 0                                                    // 000000064B6C: 00000000
	.long 0x60af0100                                           // 000000064B70: 60AF0100
	.long 0x1384                                               // 000000064B74: 00001384
	.long 0x408                                                // 000000064B78: 00000408
	.long 0                                                    // 000000064B7C: 00000000
	.type	mul_char_get_local_id_get_local_id.kd,@object
mul_char_get_local_id_get_local_id.kd:
	.long 0                                                    // 000000064B80: 00000000
	.long 0                                                    // 000000064B84: 00000000
	.long 0x110                                                // 000000064B88: 00000110
	.long 0                                                    // 000000064B8C: 00000000
	.long 0x17080                                              // 000000064B90: 00017080
	.long 0                                                    // 000000064B94: 00000000
	.long 0                                                    // 000000064B98: 00000000
	.long 0                                                    // 000000064B9C: 00000000
	.long 0                                                    // 000000064BA0: 00000000
	.long 0                                                    // 000000064BA4: 00000000
	.long 0                                                    // 000000064BA8: 00000000
	.long 0                                                    // 000000064BAC: 00000000
	.long 0x60af0100                                           // 000000064BB0: 60AF0100
	.long 0x1384                                               // 000000064BB4: 00001384
	.long 0x408                                                // 000000064BB8: 00000408
	.long 0                                                    // 000000064BBC: 00000000
	.type	mul_char_get_group_id_get_local_id.kd,@object
mul_char_get_group_id_get_local_id.kd:
	.long 0                                                    // 000000064BC0: 00000000
	.long 0                                                    // 000000064BC4: 00000000
	.long 0x110                                                // 000000064BC8: 00000110
	.long 0                                                    // 000000064BCC: 00000000
	.ascii "@q"                                                // 000000064BD0: 7140
	.short 0x1                                                 // 000000064BD2: 0001
	.long 0                                                    // 000000064BD4: 00000000
	.long 0                                                    // 000000064BD8: 00000000
	.long 0                                                    // 000000064BDC: 00000000
	.long 0                                                    // 000000064BE0: 00000000
	.long 0                                                    // 000000064BE4: 00000000
	.long 0                                                    // 000000064BE8: 00000000
	.long 0                                                    // 000000064BEC: 00000000
	.long 0x60af0100                                           // 000000064BF0: 60AF0100
	.long 0x1384                                               // 000000064BF4: 00001384
	.long 0x408                                                // 000000064BF8: 00000408
	.long 0                                                    // 000000064BFC: 00000000
	.type	mul_char_get_local_size_get_local_id.kd,@object
mul_char_get_local_size_get_local_id.kd:
	.long 0                                                    // 000000064C00: 00000000
	.long 0                                                    // 000000064C04: 00000000
	.long 0x110                                                // 000000064C08: 00000110
	.long 0                                                    // 000000064C0C: 00000000
	.long 0x17200                                              // 000000064C10: 00017200
	.long 0                                                    // 000000064C14: 00000000
	.long 0                                                    // 000000064C18: 00000000
	.long 0                                                    // 000000064C1C: 00000000
	.long 0                                                    // 000000064C20: 00000000
	.long 0                                                    // 000000064C24: 00000000
	.long 0                                                    // 000000064C28: 00000000
	.long 0                                                    // 000000064C2C: 00000000
	.long 0x60af0100                                           // 000000064C30: 60AF0100
	.long 0x1384                                               // 000000064C34: 00001384
	.long 0x408                                                // 000000064C38: 00000408
	.long 0                                                    // 000000064C3C: 00000000
	.type	mul_char_get_global_id_get_local_id.kd,@object
mul_char_get_global_id_get_local_id.kd:
	.long 0                                                    // 000000064C40: 00000000
	.long 0                                                    // 000000064C44: 00000000
	.long 0x110                                                // 000000064C48: 00000110
	.long 0                                                    // 000000064C4C: 00000000
	.long 0x173c0                                              // 000000064C50: 000173C0
	.long 0                                                    // 000000064C54: 00000000
	.long 0                                                    // 000000064C58: 00000000
	.long 0                                                    // 000000064C5C: 00000000
	.long 0                                                    // 000000064C60: 00000000
	.long 0                                                    // 000000064C64: 00000000
	.long 0                                                    // 000000064C68: 00000000
	.long 0                                                    // 000000064C6C: 00000000
	.long 0x60af0101                                           // 000000064C70: 60AF0101
	.long 0x1384                                               // 000000064C74: 00001384
	.long 0x408                                                // 000000064C78: 00000408
	.long 0                                                    // 000000064C7C: 00000000
	.type	mul_char_get_global_size_get_local_id.kd,@object
mul_char_get_global_size_get_local_id.kd:
	.long 0                                                    // 000000064C80: 00000000
	.long 0                                                    // 000000064C84: 00000000
	.long 0x110                                                // 000000064C88: 00000110
	.long 0                                                    // 000000064C8C: 00000000
	.long 0x17480                                              // 000000064C90: 00017480
	.long 0                                                    // 000000064C94: 00000000
	.long 0                                                    // 000000064C98: 00000000
	.long 0                                                    // 000000064C9C: 00000000
	.long 0                                                    // 000000064CA0: 00000000
	.long 0                                                    // 000000064CA4: 00000000
	.long 0                                                    // 000000064CA8: 00000000
	.long 0                                                    // 000000064CAC: 00000000
	.long 0x60af0101                                           // 000000064CB0: 60AF0101
	.long 0x1384                                               // 000000064CB4: 00001384
	.long 0x408                                                // 000000064CB8: 00000408
	.long 0                                                    // 000000064CBC: 00000000
	.type	mul_char_get_num_groups_get_local_id.kd,@object
mul_char_get_num_groups_get_local_id.kd:
	.long 0                                                    // 000000064CC0: 00000000
	.long 0                                                    // 000000064CC4: 00000000
	.long 0x110                                                // 000000064CC8: 00000110
	.long 0                                                    // 000000064CCC: 00000000
	.ascii "@u"                                                // 000000064CD0: 7540
	.short 0x1                                                 // 000000064CD2: 0001
	.long 0                                                    // 000000064CD4: 00000000
	.long 0                                                    // 000000064CD8: 00000000
	.long 0                                                    // 000000064CDC: 00000000
	.long 0                                                    // 000000064CE0: 00000000
	.long 0                                                    // 000000064CE4: 00000000
	.long 0                                                    // 000000064CE8: 00000000
	.long 0                                                    // 000000064CEC: 00000000
	.long 0x60af0100                                           // 000000064CF0: 60AF0100
	.long 0x1384                                               // 000000064CF4: 00001384
	.long 0x408                                                // 000000064CF8: 00000408
	.long 0                                                    // 000000064CFC: 00000000
	.type	mul_char_get_work_dim_get_local_id.kd,@object
mul_char_get_work_dim_get_local_id.kd:
	.long 0                                                    // 000000064D00: 00000000
	.long 0                                                    // 000000064D04: 00000000
	.long 0x110                                                // 000000064D08: 00000110
	.long 0                                                    // 000000064D0C: 00000000
	.long 0x17600                                              // 000000064D10: 00017600
	.long 0                                                    // 000000064D14: 00000000
	.long 0                                                    // 000000064D18: 00000000
	.long 0                                                    // 000000064D1C: 00000000
	.long 0                                                    // 000000064D20: 00000000
	.long 0                                                    // 000000064D24: 00000000
	.long 0                                                    // 000000064D28: 00000000
	.long 0                                                    // 000000064D2C: 00000000
	.long 0x60af0100                                           // 000000064D30: 60AF0100
	.long 0x1384                                               // 000000064D34: 00001384
	.long 0x408                                                // 000000064D38: 00000408
	.long 0                                                    // 000000064D3C: 00000000
	.type	mul_char_x_get_group_id.kd,@object
mul_char_x_get_group_id.kd:
	.long 0                                                    // 000000064D40: 00000000
	.long 0                                                    // 000000064D44: 00000000
	.long 0x110                                                // 000000064D48: 00000110
	.long 0                                                    // 000000064D4C: 00000000
	.long 0x176c0                                              // 000000064D50: 000176C0
	.long 0                                                    // 000000064D54: 00000000
	.long 0                                                    // 000000064D58: 00000000
	.long 0                                                    // 000000064D5C: 00000000
	.long 0                                                    // 000000064D60: 00000000
	.long 0                                                    // 000000064D64: 00000000
	.long 0                                                    // 000000064D68: 00000000
	.long 0                                                    // 000000064D6C: 00000000
	.long 0x60af0100                                           // 000000064D70: 60AF0100
	.long 0x1384                                               // 000000064D74: 00001384
	.long 0x408                                                // 000000064D78: 00000408
	.long 0                                                    // 000000064D7C: 00000000
	.type	mul_char_get_global_offset_get_group_id.kd,@object
mul_char_get_global_offset_get_group_id.kd:
	.long 0                                                    // 000000064D80: 00000000
	.long 0                                                    // 000000064D84: 00000000
	.long 0x110                                                // 000000064D88: 00000110
	.long 0                                                    // 000000064D8C: 00000000
	.long 0x17780                                              // 000000064D90: 00017780
	.long 0                                                    // 000000064D94: 00000000
	.long 0                                                    // 000000064D98: 00000000
	.long 0                                                    // 000000064D9C: 00000000
	.long 0                                                    // 000000064DA0: 00000000
	.long 0                                                    // 000000064DA4: 00000000
	.long 0                                                    // 000000064DA8: 00000000
	.long 0                                                    // 000000064DAC: 00000000
	.long 0x60af0100                                           // 000000064DB0: 60AF0100
	.long 0x1384                                               // 000000064DB4: 00001384
	.long 0x408                                                // 000000064DB8: 00000408
	.long 0                                                    // 000000064DBC: 00000000
	.type	mul_char_get_local_id_get_group_id.kd,@object
mul_char_get_local_id_get_group_id.kd:
	.long 0                                                    // 000000064DC0: 00000000
	.long 0                                                    // 000000064DC4: 00000000
	.long 0x110                                                // 000000064DC8: 00000110
	.long 0                                                    // 000000064DCC: 00000000
	.ascii "@x"                                                // 000000064DD0: 7840
	.short 0x1                                                 // 000000064DD2: 0001
	.long 0                                                    // 000000064DD4: 00000000
	.long 0                                                    // 000000064DD8: 00000000
	.long 0                                                    // 000000064DDC: 00000000
	.long 0                                                    // 000000064DE0: 00000000
	.long 0                                                    // 000000064DE4: 00000000
	.long 0                                                    // 000000064DE8: 00000000
	.long 0                                                    // 000000064DEC: 00000000
	.long 0x60af0100                                           // 000000064DF0: 60AF0100
	.long 0x1384                                               // 000000064DF4: 00001384
	.long 0x408                                                // 000000064DF8: 00000408
	.long 0                                                    // 000000064DFC: 00000000
	.type	mul_char_get_group_id_get_group_id.kd,@object
mul_char_get_group_id_get_group_id.kd:
	.long 0                                                    // 000000064E00: 00000000
	.long 0                                                    // 000000064E04: 00000000
	.long 0x110                                                // 000000064E08: 00000110
	.long 0                                                    // 000000064E0C: 00000000
	.long 0x17900                                              // 000000064E10: 00017900
	.long 0                                                    // 000000064E14: 00000000
	.long 0                                                    // 000000064E18: 00000000
	.long 0                                                    // 000000064E1C: 00000000
	.long 0                                                    // 000000064E20: 00000000
	.long 0                                                    // 000000064E24: 00000000
	.long 0                                                    // 000000064E28: 00000000
	.long 0                                                    // 000000064E2C: 00000000
	.long 0x60af0100                                           // 000000064E30: 60AF0100
	.long 0x1384                                               // 000000064E34: 00001384
	.long 0x408                                                // 000000064E38: 00000408
	.long 0                                                    // 000000064E3C: 00000000
	.type	mul_char_get_local_size_get_group_id.kd,@object
mul_char_get_local_size_get_group_id.kd:
	.long 0                                                    // 000000064E40: 00000000
	.long 0                                                    // 000000064E44: 00000000
	.long 0x110                                                // 000000064E48: 00000110
	.long 0                                                    // 000000064E4C: 00000000
	.long 0x179c0                                              // 000000064E50: 000179C0
	.long 0                                                    // 000000064E54: 00000000
	.long 0                                                    // 000000064E58: 00000000
	.long 0                                                    // 000000064E5C: 00000000
	.long 0                                                    // 000000064E60: 00000000
	.long 0                                                    // 000000064E64: 00000000
	.long 0                                                    // 000000064E68: 00000000
	.long 0                                                    // 000000064E6C: 00000000
	.long 0x60af0100                                           // 000000064E70: 60AF0100
	.long 0x1384                                               // 000000064E74: 00001384
	.long 0x408                                                // 000000064E78: 00000408
	.long 0                                                    // 000000064E7C: 00000000
	.type	mul_char_get_global_id_get_group_id.kd,@object
mul_char_get_global_id_get_group_id.kd:
	.long 0                                                    // 000000064E80: 00000000
	.long 0                                                    // 000000064E84: 00000000
	.long 0x110                                                // 000000064E88: 00000110
	.long 0                                                    // 000000064E8C: 00000000
	.long 0x17b80                                              // 000000064E90: 00017B80
	.long 0                                                    // 000000064E94: 00000000
	.long 0                                                    // 000000064E98: 00000000
	.long 0                                                    // 000000064E9C: 00000000
	.long 0                                                    // 000000064EA0: 00000000
	.long 0                                                    // 000000064EA4: 00000000
	.long 0                                                    // 000000064EA8: 00000000
	.long 0                                                    // 000000064EAC: 00000000
	.long 0x60af0100                                           // 000000064EB0: 60AF0100
	.long 0x1384                                               // 000000064EB4: 00001384
	.long 0x408                                                // 000000064EB8: 00000408
	.long 0                                                    // 000000064EBC: 00000000
	.type	mul_char_get_global_size_get_group_id.kd,@object
mul_char_get_global_size_get_group_id.kd:
	.long 0                                                    // 000000064EC0: 00000000
	.long 0                                                    // 000000064EC4: 00000000
	.long 0x110                                                // 000000064EC8: 00000110
	.long 0                                                    // 000000064ECC: 00000000
	.ascii "@|"                                                // 000000064ED0: 7C40
	.short 0x1                                                 // 000000064ED2: 0001
	.long 0                                                    // 000000064ED4: 00000000
	.long 0                                                    // 000000064ED8: 00000000
	.long 0                                                    // 000000064EDC: 00000000
	.long 0                                                    // 000000064EE0: 00000000
	.long 0                                                    // 000000064EE4: 00000000
	.long 0                                                    // 000000064EE8: 00000000
	.long 0                                                    // 000000064EEC: 00000000
	.long 0x60af0100                                           // 000000064EF0: 60AF0100
	.long 0x1384                                               // 000000064EF4: 00001384
	.long 0x408                                                // 000000064EF8: 00000408
	.long 0                                                    // 000000064EFC: 00000000
	.type	mul_char_get_num_groups_get_group_id.kd,@object
mul_char_get_num_groups_get_group_id.kd:
	.long 0                                                    // 000000064F00: 00000000
	.long 0                                                    // 000000064F04: 00000000
	.long 0x110                                                // 000000064F08: 00000110
	.long 0                                                    // 000000064F0C: 00000000
	.long 0x17d00                                              // 000000064F10: 00017D00
	.long 0                                                    // 000000064F14: 00000000
	.long 0                                                    // 000000064F18: 00000000
	.long 0                                                    // 000000064F1C: 00000000
	.long 0                                                    // 000000064F20: 00000000
	.long 0                                                    // 000000064F24: 00000000
	.long 0                                                    // 000000064F28: 00000000
	.long 0                                                    // 000000064F2C: 00000000
	.long 0x60af0100                                           // 000000064F30: 60AF0100
	.long 0x1384                                               // 000000064F34: 00001384
	.long 0x408                                                // 000000064F38: 00000408
	.long 0                                                    // 000000064F3C: 00000000
	.type	mul_char_get_work_dim_get_group_id.kd,@object
mul_char_get_work_dim_get_group_id.kd:
	.long 0                                                    // 000000064F40: 00000000
	.long 0                                                    // 000000064F44: 00000000
	.long 0x110                                                // 000000064F48: 00000110
	.long 0                                                    // 000000064F4C: 00000000
	.long 0x17dc0                                              // 000000064F50: 00017DC0
	.long 0                                                    // 000000064F54: 00000000
	.long 0                                                    // 000000064F58: 00000000
	.long 0                                                    // 000000064F5C: 00000000
	.long 0                                                    // 000000064F60: 00000000
	.long 0                                                    // 000000064F64: 00000000
	.long 0                                                    // 000000064F68: 00000000
	.long 0                                                    // 000000064F6C: 00000000
	.long 0x60af0100                                           // 000000064F70: 60AF0100
	.long 0x1384                                               // 000000064F74: 00001384
	.long 0x408                                                // 000000064F78: 00000408
	.long 0                                                    // 000000064F7C: 00000000
	.type	mul_char_x_get_local_size.kd,@object
mul_char_x_get_local_size.kd:
	.long 0                                                    // 000000064F80: 00000000
	.long 0                                                    // 000000064F84: 00000000
	.long 0x110                                                // 000000064F88: 00000110
	.long 0                                                    // 000000064F8C: 00000000
	.long 0x17e80                                              // 000000064F90: 00017E80
	.long 0                                                    // 000000064F94: 00000000
	.long 0                                                    // 000000064F98: 00000000
	.long 0                                                    // 000000064F9C: 00000000
	.long 0                                                    // 000000064FA0: 00000000
	.long 0                                                    // 000000064FA4: 00000000
	.long 0                                                    // 000000064FA8: 00000000
	.long 0                                                    // 000000064FAC: 00000000
	.long 0x60af0100                                           // 000000064FB0: 60AF0100
	.long 0x1384                                               // 000000064FB4: 00001384
	.long 0x408                                                // 000000064FB8: 00000408
	.long 0                                                    // 000000064FBC: 00000000
	.type	mul_char_get_global_offset_get_local_size.kd,@object
mul_char_get_global_offset_get_local_size.kd:
	.long 0                                                    // 000000064FC0: 00000000
	.long 0                                                    // 000000064FC4: 00000000
	.long 0x110                                                // 000000064FC8: 00000110
	.long 0                                                    // 000000064FCC: 00000000
	.ascii "@"                                                 // 000000064FD0: 40
	.byte 0x80                                                 // 000000064FD1: 80
	.short 0x1                                                 // 000000064FD2: 0001
	.long 0                                                    // 000000064FD4: 00000000
	.long 0                                                    // 000000064FD8: 00000000
	.long 0                                                    // 000000064FDC: 00000000
	.long 0                                                    // 000000064FE0: 00000000
	.long 0                                                    // 000000064FE4: 00000000
	.long 0                                                    // 000000064FE8: 00000000
	.long 0                                                    // 000000064FEC: 00000000
	.long 0x60af0100                                           // 000000064FF0: 60AF0100
	.long 0x1384                                               // 000000064FF4: 00001384
	.long 0x408                                                // 000000064FF8: 00000408
	.long 0                                                    // 000000064FFC: 00000000
	.type	mul_char_get_local_id_get_local_size.kd,@object
mul_char_get_local_id_get_local_size.kd:
	.long 0                                                    // 000000065000: 00000000
	.long 0                                                    // 000000065004: 00000000
	.long 0x110                                                // 000000065008: 00000110
	.long 0                                                    // 00000006500C: 00000000
	.long 0x18200                                              // 000000065010: 00018200
	.long 0                                                    // 000000065014: 00000000
	.long 0                                                    // 000000065018: 00000000
	.long 0                                                    // 00000006501C: 00000000
	.long 0                                                    // 000000065020: 00000000
	.long 0                                                    // 000000065024: 00000000
	.long 0                                                    // 000000065028: 00000000
	.long 0                                                    // 00000006502C: 00000000
	.long 0x60af0100                                           // 000000065030: 60AF0100
	.long 0x1384                                               // 000000065034: 00001384
	.long 0x408                                                // 000000065038: 00000408
	.long 0                                                    // 00000006503C: 00000000
	.type	mul_char_get_group_id_get_local_size.kd,@object
mul_char_get_group_id_get_local_size.kd:
	.long 0                                                    // 000000065040: 00000000
	.long 0                                                    // 000000065044: 00000000
	.long 0x110                                                // 000000065048: 00000110
	.long 0                                                    // 00000006504C: 00000000
	.long 0x183c0                                              // 000000065050: 000183C0
	.long 0                                                    // 000000065054: 00000000
	.long 0                                                    // 000000065058: 00000000
	.long 0                                                    // 00000006505C: 00000000
	.long 0                                                    // 000000065060: 00000000
	.long 0                                                    // 000000065064: 00000000
	.long 0                                                    // 000000065068: 00000000
	.long 0                                                    // 00000006506C: 00000000
	.long 0x60af0100                                           // 000000065070: 60AF0100
	.long 0x1384                                               // 000000065074: 00001384
	.long 0x408                                                // 000000065078: 00000408
	.long 0                                                    // 00000006507C: 00000000
	.type	mul_char_get_local_size_get_local_size.kd,@object
mul_char_get_local_size_get_local_size.kd:
	.long 0                                                    // 000000065080: 00000000
	.long 0                                                    // 000000065084: 00000000
	.long 0x110                                                // 000000065088: 00000110
	.long 0                                                    // 00000006508C: 00000000
	.long 0x18580                                              // 000000065090: 00018580
	.long 0                                                    // 000000065094: 00000000
	.long 0                                                    // 000000065098: 00000000
	.long 0                                                    // 00000006509C: 00000000
	.long 0                                                    // 0000000650A0: 00000000
	.long 0                                                    // 0000000650A4: 00000000
	.long 0                                                    // 0000000650A8: 00000000
	.long 0                                                    // 0000000650AC: 00000000
	.long 0x60af0100                                           // 0000000650B0: 60AF0100
	.long 0x1384                                               // 0000000650B4: 00001384
	.long 0x408                                                // 0000000650B8: 00000408
	.long 0                                                    // 0000000650BC: 00000000
	.type	mul_char_get_global_id_get_local_size.kd,@object
mul_char_get_global_id_get_local_size.kd:
	.long 0                                                    // 0000000650C0: 00000000
	.long 0                                                    // 0000000650C4: 00000000
	.long 0x110                                                // 0000000650C8: 00000110
	.long 0                                                    // 0000000650CC: 00000000
	.ascii "@"                                                 // 0000000650D0: 40
	.byte 0x87                                                 // 0000000650D1: 87
	.short 0x1                                                 // 0000000650D2: 0001
	.long 0                                                    // 0000000650D4: 00000000
	.long 0                                                    // 0000000650D8: 00000000
	.long 0                                                    // 0000000650DC: 00000000
	.long 0                                                    // 0000000650E0: 00000000
	.long 0                                                    // 0000000650E4: 00000000
	.long 0                                                    // 0000000650E8: 00000000
	.long 0                                                    // 0000000650EC: 00000000
	.long 0x60af0100                                           // 0000000650F0: 60AF0100
	.long 0x1384                                               // 0000000650F4: 00001384
	.long 0x408                                                // 0000000650F8: 00000408
	.long 0                                                    // 0000000650FC: 00000000
	.type	mul_char_get_global_size_get_local_size.kd,@object
mul_char_get_global_size_get_local_size.kd:
	.long 0                                                    // 000000065100: 00000000
	.long 0                                                    // 000000065104: 00000000
	.long 0x110                                                // 000000065108: 00000110
	.long 0                                                    // 00000006510C: 00000000
	.long 0x18900                                              // 000000065110: 00018900
	.long 0                                                    // 000000065114: 00000000
	.long 0                                                    // 000000065118: 00000000
	.long 0                                                    // 00000006511C: 00000000
	.long 0                                                    // 000000065120: 00000000
	.long 0                                                    // 000000065124: 00000000
	.long 0                                                    // 000000065128: 00000000
	.long 0                                                    // 00000006512C: 00000000
	.long 0x60af0100                                           // 000000065130: 60AF0100
	.long 0x1384                                               // 000000065134: 00001384
	.long 0x408                                                // 000000065138: 00000408
	.long 0                                                    // 00000006513C: 00000000
	.type	mul_char_get_num_groups_get_local_size.kd,@object
mul_char_get_num_groups_get_local_size.kd:
	.long 0                                                    // 000000065140: 00000000
	.long 0                                                    // 000000065144: 00000000
	.long 0x110                                                // 000000065148: 00000110
	.long 0                                                    // 00000006514C: 00000000
	.long 0x18ac0                                              // 000000065150: 00018AC0
	.long 0                                                    // 000000065154: 00000000
	.long 0                                                    // 000000065158: 00000000
	.long 0                                                    // 00000006515C: 00000000
	.long 0                                                    // 000000065160: 00000000
	.long 0                                                    // 000000065164: 00000000
	.long 0                                                    // 000000065168: 00000000
	.long 0                                                    // 00000006516C: 00000000
	.long 0x60af0100                                           // 000000065170: 60AF0100
	.long 0x1384                                               // 000000065174: 00001384
	.long 0x408                                                // 000000065178: 00000408
	.long 0                                                    // 00000006517C: 00000000
	.type	mul_char_get_work_dim_get_local_size.kd,@object
mul_char_get_work_dim_get_local_size.kd:
	.long 0                                                    // 000000065180: 00000000
	.long 0                                                    // 000000065184: 00000000
	.long 0x110                                                // 000000065188: 00000110
	.long 0                                                    // 00000006518C: 00000000
	.long 0x18c80                                              // 000000065190: 00018C80
	.long 0                                                    // 000000065194: 00000000
	.long 0                                                    // 000000065198: 00000000
	.long 0                                                    // 00000006519C: 00000000
	.long 0                                                    // 0000000651A0: 00000000
	.long 0                                                    // 0000000651A4: 00000000
	.long 0                                                    // 0000000651A8: 00000000
	.long 0                                                    // 0000000651AC: 00000000
	.long 0x60af0100                                           // 0000000651B0: 60AF0100
	.long 0x1384                                               // 0000000651B4: 00001384
	.long 0x408                                                // 0000000651B8: 00000408
	.long 0                                                    // 0000000651BC: 00000000
	.type	mul_char_x_get_global_id.kd,@object
mul_char_x_get_global_id.kd:
	.long 0                                                    // 0000000651C0: 00000000
	.long 0                                                    // 0000000651C4: 00000000
	.long 0x110                                                // 0000000651C8: 00000110
	.long 0                                                    // 0000000651CC: 00000000
	.ascii "@"                                                 // 0000000651D0: 40
	.byte 0x8e                                                 // 0000000651D1: 8E
	.short 0x1                                                 // 0000000651D2: 0001
	.long 0                                                    // 0000000651D4: 00000000
	.long 0                                                    // 0000000651D8: 00000000
	.long 0                                                    // 0000000651DC: 00000000
	.long 0                                                    // 0000000651E0: 00000000
	.long 0                                                    // 0000000651E4: 00000000
	.long 0                                                    // 0000000651E8: 00000000
	.long 0                                                    // 0000000651EC: 00000000
	.long 0x60af0101                                           // 0000000651F0: 60AF0101
	.long 0x1384                                               // 0000000651F4: 00001384
	.long 0x408                                                // 0000000651F8: 00000408
	.long 0                                                    // 0000000651FC: 00000000
	.type	mul_char_get_global_offset_get_global_id.kd,@object
mul_char_get_global_offset_get_global_id.kd:
	.long 0                                                    // 000000065200: 00000000
	.long 0                                                    // 000000065204: 00000000
	.long 0x110                                                // 000000065208: 00000110
	.long 0                                                    // 00000006520C: 00000000
	.long 0x18f00                                              // 000000065210: 00018F00
	.long 0                                                    // 000000065214: 00000000
	.long 0                                                    // 000000065218: 00000000
	.long 0                                                    // 00000006521C: 00000000
	.long 0                                                    // 000000065220: 00000000
	.long 0                                                    // 000000065224: 00000000
	.long 0                                                    // 000000065228: 00000000
	.long 0                                                    // 00000006522C: 00000000
	.long 0x60af0101                                           // 000000065230: 60AF0101
	.long 0x1384                                               // 000000065234: 00001384
	.long 0x408                                                // 000000065238: 00000408
	.long 0                                                    // 00000006523C: 00000000
	.type	mul_char_get_local_id_get_global_id.kd,@object
mul_char_get_local_id_get_global_id.kd:
	.long 0                                                    // 000000065240: 00000000
	.long 0                                                    // 000000065244: 00000000
	.long 0x110                                                // 000000065248: 00000110
	.long 0                                                    // 00000006524C: 00000000
	.long 0x18fc0                                              // 000000065250: 00018FC0
	.long 0                                                    // 000000065254: 00000000
	.long 0                                                    // 000000065258: 00000000
	.long 0                                                    // 00000006525C: 00000000
	.long 0                                                    // 000000065260: 00000000
	.long 0                                                    // 000000065264: 00000000
	.long 0                                                    // 000000065268: 00000000
	.long 0                                                    // 00000006526C: 00000000
	.long 0x60af0101                                           // 000000065270: 60AF0101
	.long 0x1384                                               // 000000065274: 00001384
	.long 0x408                                                // 000000065278: 00000408
	.long 0                                                    // 00000006527C: 00000000
	.type	mul_char_get_group_id_get_global_id.kd,@object
mul_char_get_group_id_get_global_id.kd:
	.long 0                                                    // 000000065280: 00000000
	.long 0                                                    // 000000065284: 00000000
	.long 0x110                                                // 000000065288: 00000110
	.long 0                                                    // 00000006528C: 00000000
	.long 0x19080                                              // 000000065290: 00019080
	.long 0                                                    // 000000065294: 00000000
	.long 0                                                    // 000000065298: 00000000
	.long 0                                                    // 00000006529C: 00000000
	.long 0                                                    // 0000000652A0: 00000000
	.long 0                                                    // 0000000652A4: 00000000
	.long 0                                                    // 0000000652A8: 00000000
	.long 0                                                    // 0000000652AC: 00000000
	.long 0x60af0101                                           // 0000000652B0: 60AF0101
	.long 0x1384                                               // 0000000652B4: 00001384
	.long 0x408                                                // 0000000652B8: 00000408
	.long 0                                                    // 0000000652BC: 00000000
	.type	mul_char_get_local_size_get_global_id.kd,@object
mul_char_get_local_size_get_global_id.kd:
	.long 0                                                    // 0000000652C0: 00000000
	.long 0                                                    // 0000000652C4: 00000000
	.long 0x110                                                // 0000000652C8: 00000110
	.long 0                                                    // 0000000652CC: 00000000
	.ascii "@"                                                 // 0000000652D0: 40
	.byte 0x91                                                 // 0000000652D1: 91
	.short 0x1                                                 // 0000000652D2: 0001
	.long 0                                                    // 0000000652D4: 00000000
	.long 0                                                    // 0000000652D8: 00000000
	.long 0                                                    // 0000000652DC: 00000000
	.long 0                                                    // 0000000652E0: 00000000
	.long 0                                                    // 0000000652E4: 00000000
	.long 0                                                    // 0000000652E8: 00000000
	.long 0                                                    // 0000000652EC: 00000000
	.long 0x60af0100                                           // 0000000652F0: 60AF0100
	.long 0x1384                                               // 0000000652F4: 00001384
	.long 0x408                                                // 0000000652F8: 00000408
	.long 0                                                    // 0000000652FC: 00000000
	.type	mul_char_get_global_id_get_global_id.kd,@object
mul_char_get_global_id_get_global_id.kd:
	.long 0                                                    // 000000065300: 00000000
	.long 0                                                    // 000000065304: 00000000
	.long 0x110                                                // 000000065308: 00000110
	.long 0                                                    // 00000006530C: 00000000
	.long 0x19300                                              // 000000065310: 00019300
	.long 0                                                    // 000000065314: 00000000
	.long 0                                                    // 000000065318: 00000000
	.long 0                                                    // 00000006531C: 00000000
	.long 0                                                    // 000000065320: 00000000
	.long 0                                                    // 000000065324: 00000000
	.long 0                                                    // 000000065328: 00000000
	.long 0                                                    // 00000006532C: 00000000
	.long 0x60af0100                                           // 000000065330: 60AF0100
	.long 0x1384                                               // 000000065334: 00001384
	.long 0x408                                                // 000000065338: 00000408
	.long 0                                                    // 00000006533C: 00000000
	.type	mul_char_get_global_size_get_global_id.kd,@object
mul_char_get_global_size_get_global_id.kd:
	.long 0                                                    // 000000065340: 00000000
	.long 0                                                    // 000000065344: 00000000
	.long 0x110                                                // 000000065348: 00000110
	.long 0                                                    // 00000006534C: 00000000
	.long 0x193c0                                              // 000000065350: 000193C0
	.long 0                                                    // 000000065354: 00000000
	.long 0                                                    // 000000065358: 00000000
	.long 0                                                    // 00000006535C: 00000000
	.long 0                                                    // 000000065360: 00000000
	.long 0                                                    // 000000065364: 00000000
	.long 0                                                    // 000000065368: 00000000
	.long 0                                                    // 00000006536C: 00000000
	.long 0x60af0101                                           // 000000065370: 60AF0101
	.long 0x1384                                               // 000000065374: 00001384
	.long 0x408                                                // 000000065378: 00000408
	.long 0                                                    // 00000006537C: 00000000
	.type	mul_char_get_num_groups_get_global_id.kd,@object
mul_char_get_num_groups_get_global_id.kd:
	.long 0                                                    // 000000065380: 00000000
	.long 0                                                    // 000000065384: 00000000
	.long 0x110                                                // 000000065388: 00000110
	.long 0                                                    // 00000006538C: 00000000
	.long 0x19580                                              // 000000065390: 00019580
	.long 0                                                    // 000000065394: 00000000
	.long 0                                                    // 000000065398: 00000000
	.long 0                                                    // 00000006539C: 00000000
	.long 0                                                    // 0000000653A0: 00000000
	.long 0                                                    // 0000000653A4: 00000000
	.long 0                                                    // 0000000653A8: 00000000
	.long 0                                                    // 0000000653AC: 00000000
	.long 0x60af0101                                           // 0000000653B0: 60AF0101
	.long 0x1384                                               // 0000000653B4: 00001384
	.long 0x408                                                // 0000000653B8: 00000408
	.long 0                                                    // 0000000653BC: 00000000
	.type	mul_char_get_work_dim_get_global_id.kd,@object
mul_char_get_work_dim_get_global_id.kd:
	.long 0                                                    // 0000000653C0: 00000000
	.long 0                                                    // 0000000653C4: 00000000
	.long 0x110                                                // 0000000653C8: 00000110
	.long 0                                                    // 0000000653CC: 00000000
	.ascii "@"                                                 // 0000000653D0: 40
	.byte 0x97                                                 // 0000000653D1: 97
	.short 0x1                                                 // 0000000653D2: 0001
	.long 0                                                    // 0000000653D4: 00000000
	.long 0                                                    // 0000000653D8: 00000000
	.long 0                                                    // 0000000653DC: 00000000
	.long 0                                                    // 0000000653E0: 00000000
	.long 0                                                    // 0000000653E4: 00000000
	.long 0                                                    // 0000000653E8: 00000000
	.long 0                                                    // 0000000653EC: 00000000
	.long 0x60af0101                                           // 0000000653F0: 60AF0101
	.long 0x1384                                               // 0000000653F4: 00001384
	.long 0x408                                                // 0000000653F8: 00000408
	.long 0                                                    // 0000000653FC: 00000000
	.type	mul_char_x_get_global_size.kd,@object
mul_char_x_get_global_size.kd:
	.long 0                                                    // 000000065400: 00000000
	.long 0                                                    // 000000065404: 00000000
	.long 0x110                                                // 000000065408: 00000110
	.long 0                                                    // 00000006540C: 00000000
	.long 0x19800                                              // 000000065410: 00019800
	.long 0                                                    // 000000065414: 00000000
	.long 0                                                    // 000000065418: 00000000
	.long 0                                                    // 00000006541C: 00000000
	.long 0                                                    // 000000065420: 00000000
	.long 0                                                    // 000000065424: 00000000
	.long 0                                                    // 000000065428: 00000000
	.long 0                                                    // 00000006542C: 00000000
	.long 0x60af0100                                           // 000000065430: 60AF0100
	.long 0x1384                                               // 000000065434: 00001384
	.long 0x408                                                // 000000065438: 00000408
	.long 0                                                    // 00000006543C: 00000000
	.type	mul_char_get_global_offset_get_global_size.kd,@object
mul_char_get_global_offset_get_global_size.kd:
	.long 0                                                    // 000000065440: 00000000
	.long 0                                                    // 000000065444: 00000000
	.long 0x110                                                // 000000065448: 00000110
	.long 0                                                    // 00000006544C: 00000000
	.long 0x198c0                                              // 000000065450: 000198C0
	.long 0                                                    // 000000065454: 00000000
	.long 0                                                    // 000000065458: 00000000
	.long 0                                                    // 00000006545C: 00000000
	.long 0                                                    // 000000065460: 00000000
	.long 0                                                    // 000000065464: 00000000
	.long 0                                                    // 000000065468: 00000000
	.long 0                                                    // 00000006546C: 00000000
	.long 0x60af0100                                           // 000000065470: 60AF0100
	.long 0x1384                                               // 000000065474: 00001384
	.long 0x408                                                // 000000065478: 00000408
	.long 0                                                    // 00000006547C: 00000000
	.type	mul_char_get_local_id_get_global_size.kd,@object
mul_char_get_local_id_get_global_size.kd:
	.long 0                                                    // 000000065480: 00000000
	.long 0                                                    // 000000065484: 00000000
	.long 0x110                                                // 000000065488: 00000110
	.long 0                                                    // 00000006548C: 00000000
	.long 0x19980                                              // 000000065490: 00019980
	.long 0                                                    // 000000065494: 00000000
	.long 0                                                    // 000000065498: 00000000
	.long 0                                                    // 00000006549C: 00000000
	.long 0                                                    // 0000000654A0: 00000000
	.long 0                                                    // 0000000654A4: 00000000
	.long 0                                                    // 0000000654A8: 00000000
	.long 0                                                    // 0000000654AC: 00000000
	.long 0x60af0100                                           // 0000000654B0: 60AF0100
	.long 0x1384                                               // 0000000654B4: 00001384
	.long 0x408                                                // 0000000654B8: 00000408
	.long 0                                                    // 0000000654BC: 00000000
	.type	mul_char_get_group_id_get_global_size.kd,@object
mul_char_get_group_id_get_global_size.kd:
	.long 0                                                    // 0000000654C0: 00000000
	.long 0                                                    // 0000000654C4: 00000000
	.long 0x110                                                // 0000000654C8: 00000110
	.long 0                                                    // 0000000654CC: 00000000
	.ascii "@"                                                 // 0000000654D0: 40
	.byte 0x9a                                                 // 0000000654D1: 9A
	.short 0x1                                                 // 0000000654D2: 0001
	.long 0                                                    // 0000000654D4: 00000000
	.long 0                                                    // 0000000654D8: 00000000
	.long 0                                                    // 0000000654DC: 00000000
	.long 0                                                    // 0000000654E0: 00000000
	.long 0                                                    // 0000000654E4: 00000000
	.long 0                                                    // 0000000654E8: 00000000
	.long 0                                                    // 0000000654EC: 00000000
	.long 0x60af0100                                           // 0000000654F0: 60AF0100
	.long 0x1384                                               // 0000000654F4: 00001384
	.long 0x408                                                // 0000000654F8: 00000408
	.long 0                                                    // 0000000654FC: 00000000
	.type	mul_char_get_local_size_get_global_size.kd,@object
mul_char_get_local_size_get_global_size.kd:
	.long 0                                                    // 000000065500: 00000000
	.long 0                                                    // 000000065504: 00000000
	.long 0x110                                                // 000000065508: 00000110
	.long 0                                                    // 00000006550C: 00000000
	.long 0x19b00                                              // 000000065510: 00019B00
	.long 0                                                    // 000000065514: 00000000
	.long 0                                                    // 000000065518: 00000000
	.long 0                                                    // 00000006551C: 00000000
	.long 0                                                    // 000000065520: 00000000
	.long 0                                                    // 000000065524: 00000000
	.long 0                                                    // 000000065528: 00000000
	.long 0                                                    // 00000006552C: 00000000
	.long 0x60af0100                                           // 000000065530: 60AF0100
	.long 0x1384                                               // 000000065534: 00001384
	.long 0x408                                                // 000000065538: 00000408
	.long 0                                                    // 00000006553C: 00000000
	.type	mul_char_get_global_id_get_global_size.kd,@object
mul_char_get_global_id_get_global_size.kd:
	.long 0                                                    // 000000065540: 00000000
	.long 0                                                    // 000000065544: 00000000
	.long 0x110                                                // 000000065548: 00000110
	.long 0                                                    // 00000006554C: 00000000
	.long 0x19cc0                                              // 000000065550: 00019CC0
	.long 0                                                    // 000000065554: 00000000
	.long 0                                                    // 000000065558: 00000000
	.long 0                                                    // 00000006555C: 00000000
	.long 0                                                    // 000000065560: 00000000
	.long 0                                                    // 000000065564: 00000000
	.long 0                                                    // 000000065568: 00000000
	.long 0                                                    // 00000006556C: 00000000
	.long 0x60af0100                                           // 000000065570: 60AF0100
	.long 0x1384                                               // 000000065574: 00001384
	.long 0x408                                                // 000000065578: 00000408
	.long 0                                                    // 00000006557C: 00000000
	.type	mul_char_get_global_size_get_global_size.kd,@object
mul_char_get_global_size_get_global_size.kd:
	.long 0                                                    // 000000065580: 00000000
	.long 0                                                    // 000000065584: 00000000
	.long 0x110                                                // 000000065588: 00000110
	.long 0                                                    // 00000006558C: 00000000
	.long 0x19e80                                              // 000000065590: 00019E80
	.long 0                                                    // 000000065594: 00000000
	.long 0                                                    // 000000065598: 00000000
	.long 0                                                    // 00000006559C: 00000000
	.long 0                                                    // 0000000655A0: 00000000
	.long 0                                                    // 0000000655A4: 00000000
	.long 0                                                    // 0000000655A8: 00000000
	.long 0                                                    // 0000000655AC: 00000000
	.long 0x60af0100                                           // 0000000655B0: 60AF0100
	.long 0x1384                                               // 0000000655B4: 00001384
	.long 0x408                                                // 0000000655B8: 00000408
	.long 0                                                    // 0000000655BC: 00000000
	.type	mul_char_get_num_groups_get_global_size.kd,@object
mul_char_get_num_groups_get_global_size.kd:
	.long 0                                                    // 0000000655C0: 00000000
	.long 0                                                    // 0000000655C4: 00000000
	.long 0x110                                                // 0000000655C8: 00000110
	.long 0                                                    // 0000000655CC: 00000000
	.ascii "@"                                                 // 0000000655D0: 40
	.byte 0x9f                                                 // 0000000655D1: 9F
	.short 0x1                                                 // 0000000655D2: 0001
	.long 0                                                    // 0000000655D4: 00000000
	.long 0                                                    // 0000000655D8: 00000000
	.long 0                                                    // 0000000655DC: 00000000
	.long 0                                                    // 0000000655E0: 00000000
	.long 0                                                    // 0000000655E4: 00000000
	.long 0                                                    // 0000000655E8: 00000000
	.long 0                                                    // 0000000655EC: 00000000
	.long 0x60af0100                                           // 0000000655F0: 60AF0100
	.long 0x1384                                               // 0000000655F4: 00001384
	.long 0x408                                                // 0000000655F8: 00000408
	.long 0                                                    // 0000000655FC: 00000000
	.type	mul_char_get_work_dim_get_global_size.kd,@object
mul_char_get_work_dim_get_global_size.kd:
	.long 0                                                    // 000000065600: 00000000
	.long 0                                                    // 000000065604: 00000000
	.long 0x110                                                // 000000065608: 00000110
	.long 0                                                    // 00000006560C: 00000000
	.long 0x1a100                                              // 000000065610: 0001A100
	.long 0                                                    // 000000065614: 00000000
	.long 0                                                    // 000000065618: 00000000
	.long 0                                                    // 00000006561C: 00000000
	.long 0                                                    // 000000065620: 00000000
	.long 0                                                    // 000000065624: 00000000
	.long 0                                                    // 000000065628: 00000000
	.long 0                                                    // 00000006562C: 00000000
	.long 0x60af0100                                           // 000000065630: 60AF0100
	.long 0x1384                                               // 000000065634: 00001384
	.long 0x408                                                // 000000065638: 00000408
	.long 0                                                    // 00000006563C: 00000000
	.type	mul_char_x_get_num_groups.kd,@object
mul_char_x_get_num_groups.kd:
	.long 0                                                    // 000000065640: 00000000
	.long 0                                                    // 000000065644: 00000000
	.long 0x110                                                // 000000065648: 00000110
	.long 0                                                    // 00000006564C: 00000000
	.long 0x1a1c0                                              // 000000065650: 0001A1C0
	.long 0                                                    // 000000065654: 00000000
	.long 0                                                    // 000000065658: 00000000
	.long 0                                                    // 00000006565C: 00000000
	.long 0                                                    // 000000065660: 00000000
	.long 0                                                    // 000000065664: 00000000
	.long 0                                                    // 000000065668: 00000000
	.long 0                                                    // 00000006566C: 00000000
	.long 0x60af0100                                           // 000000065670: 60AF0100
	.long 0x1384                                               // 000000065674: 00001384
	.long 0x408                                                // 000000065678: 00000408
	.long 0                                                    // 00000006567C: 00000000
	.type	mul_char_get_global_offset_get_num_groups.kd,@object
mul_char_get_global_offset_get_num_groups.kd:
	.long 0                                                    // 000000065680: 00000000
	.long 0                                                    // 000000065684: 00000000
	.long 0x110                                                // 000000065688: 00000110
	.long 0                                                    // 00000006568C: 00000000
	.long 0x1a380                                              // 000000065690: 0001A380
	.long 0                                                    // 000000065694: 00000000
	.long 0                                                    // 000000065698: 00000000
	.long 0                                                    // 00000006569C: 00000000
	.long 0                                                    // 0000000656A0: 00000000
	.long 0                                                    // 0000000656A4: 00000000
	.long 0                                                    // 0000000656A8: 00000000
	.long 0                                                    // 0000000656AC: 00000000
	.long 0x60af0100                                           // 0000000656B0: 60AF0100
	.long 0x1384                                               // 0000000656B4: 00001384
	.long 0x408                                                // 0000000656B8: 00000408
	.long 0                                                    // 0000000656BC: 00000000
	.type	mul_char_get_local_id_get_num_groups.kd,@object
mul_char_get_local_id_get_num_groups.kd:
	.long 0                                                    // 0000000656C0: 00000000
	.long 0                                                    // 0000000656C4: 00000000
	.long 0x110                                                // 0000000656C8: 00000110
	.long 0                                                    // 0000000656CC: 00000000
	.ascii "@"                                                 // 0000000656D0: 40
	.byte 0xa4                                                 // 0000000656D1: A4
	.short 0x1                                                 // 0000000656D2: 0001
	.long 0                                                    // 0000000656D4: 00000000
	.long 0                                                    // 0000000656D8: 00000000
	.long 0                                                    // 0000000656DC: 00000000
	.long 0                                                    // 0000000656E0: 00000000
	.long 0                                                    // 0000000656E4: 00000000
	.long 0                                                    // 0000000656E8: 00000000
	.long 0                                                    // 0000000656EC: 00000000
	.long 0x60af0100                                           // 0000000656F0: 60AF0100
	.long 0x1384                                               // 0000000656F4: 00001384
	.long 0x408                                                // 0000000656F8: 00000408
	.long 0                                                    // 0000000656FC: 00000000
	.type	mul_char_get_group_id_get_num_groups.kd,@object
mul_char_get_group_id_get_num_groups.kd:
	.long 0                                                    // 000000065700: 00000000
	.long 0                                                    // 000000065704: 00000000
	.long 0x110                                                // 000000065708: 00000110
	.long 0                                                    // 00000006570C: 00000000
	.long 0x1a500                                              // 000000065710: 0001A500
	.long 0                                                    // 000000065714: 00000000
	.long 0                                                    // 000000065718: 00000000
	.long 0                                                    // 00000006571C: 00000000
	.long 0                                                    // 000000065720: 00000000
	.long 0                                                    // 000000065724: 00000000
	.long 0                                                    // 000000065728: 00000000
	.long 0                                                    // 00000006572C: 00000000
	.long 0x60af0100                                           // 000000065730: 60AF0100
	.long 0x1384                                               // 000000065734: 00001384
	.long 0x408                                                // 000000065738: 00000408
	.long 0                                                    // 00000006573C: 00000000
	.type	mul_char_get_local_size_get_num_groups.kd,@object
mul_char_get_local_size_get_num_groups.kd:
	.long 0                                                    // 000000065740: 00000000
	.long 0                                                    // 000000065744: 00000000
	.long 0x110                                                // 000000065748: 00000110
	.long 0                                                    // 00000006574C: 00000000
	.long 0x1a5c0                                              // 000000065750: 0001A5C0
	.long 0                                                    // 000000065754: 00000000
	.long 0                                                    // 000000065758: 00000000
	.long 0                                                    // 00000006575C: 00000000
	.long 0                                                    // 000000065760: 00000000
	.long 0                                                    // 000000065764: 00000000
	.long 0                                                    // 000000065768: 00000000
	.long 0                                                    // 00000006576C: 00000000
	.long 0x60af0100                                           // 000000065770: 60AF0100
	.long 0x1384                                               // 000000065774: 00001384
	.long 0x408                                                // 000000065778: 00000408
	.long 0                                                    // 00000006577C: 00000000
	.type	mul_char_get_global_id_get_num_groups.kd,@object
mul_char_get_global_id_get_num_groups.kd:
	.long 0                                                    // 000000065780: 00000000
	.long 0                                                    // 000000065784: 00000000
	.long 0x110                                                // 000000065788: 00000110
	.long 0                                                    // 00000006578C: 00000000
	.long 0x1a780                                              // 000000065790: 0001A780
	.long 0                                                    // 000000065794: 00000000
	.long 0                                                    // 000000065798: 00000000
	.long 0                                                    // 00000006579C: 00000000
	.long 0                                                    // 0000000657A0: 00000000
	.long 0                                                    // 0000000657A4: 00000000
	.long 0                                                    // 0000000657A8: 00000000
	.long 0                                                    // 0000000657AC: 00000000
	.long 0x60af0100                                           // 0000000657B0: 60AF0100
	.long 0x1384                                               // 0000000657B4: 00001384
	.long 0x408                                                // 0000000657B8: 00000408
	.long 0                                                    // 0000000657BC: 00000000
	.type	mul_char_get_global_size_get_num_groups.kd,@object
mul_char_get_global_size_get_num_groups.kd:
	.long 0                                                    // 0000000657C0: 00000000
	.long 0                                                    // 0000000657C4: 00000000
	.long 0x110                                                // 0000000657C8: 00000110
	.long 0                                                    // 0000000657CC: 00000000
	.ascii "@"                                                 // 0000000657D0: 40
	.byte 0xa9                                                 // 0000000657D1: A9
	.short 0x1                                                 // 0000000657D2: 0001
	.long 0                                                    // 0000000657D4: 00000000
	.long 0                                                    // 0000000657D8: 00000000
	.long 0                                                    // 0000000657DC: 00000000
	.long 0                                                    // 0000000657E0: 00000000
	.long 0                                                    // 0000000657E4: 00000000
	.long 0                                                    // 0000000657E8: 00000000
	.long 0                                                    // 0000000657EC: 00000000
	.long 0x60af0100                                           // 0000000657F0: 60AF0100
	.long 0x1384                                               // 0000000657F4: 00001384
	.long 0x408                                                // 0000000657F8: 00000408
	.long 0                                                    // 0000000657FC: 00000000
	.type	mul_char_get_num_groups_get_num_groups.kd,@object
mul_char_get_num_groups_get_num_groups.kd:
	.long 0                                                    // 000000065800: 00000000
	.long 0                                                    // 000000065804: 00000000
	.long 0x110                                                // 000000065808: 00000110
	.long 0                                                    // 00000006580C: 00000000
	.long 0x1ab00                                              // 000000065810: 0001AB00
	.long 0                                                    // 000000065814: 00000000
	.long 0                                                    // 000000065818: 00000000
	.long 0                                                    // 00000006581C: 00000000
	.long 0                                                    // 000000065820: 00000000
	.long 0                                                    // 000000065824: 00000000
	.long 0                                                    // 000000065828: 00000000
	.long 0                                                    // 00000006582C: 00000000
	.long 0x60af0100                                           // 000000065830: 60AF0100
	.long 0x1384                                               // 000000065834: 00001384
	.long 0x408                                                // 000000065838: 00000408
	.long 0                                                    // 00000006583C: 00000000
	.type	mul_char_get_work_dim_get_num_groups.kd,@object
mul_char_get_work_dim_get_num_groups.kd:
	.long 0                                                    // 000000065840: 00000000
	.long 0                                                    // 000000065844: 00000000
	.long 0x110                                                // 000000065848: 00000110
	.long 0                                                    // 00000006584C: 00000000
	.long 0x1abc0                                              // 000000065850: 0001ABC0
	.long 0                                                    // 000000065854: 00000000
	.long 0                                                    // 000000065858: 00000000
	.long 0                                                    // 00000006585C: 00000000
	.long 0                                                    // 000000065860: 00000000
	.long 0                                                    // 000000065864: 00000000
	.long 0                                                    // 000000065868: 00000000
	.long 0                                                    // 00000006586C: 00000000
	.long 0x60af0100                                           // 000000065870: 60AF0100
	.long 0x1384                                               // 000000065874: 00001384
	.long 0x408                                                // 000000065878: 00000408
	.long 0                                                    // 00000006587C: 00000000
	.type	mul_char_x_get_work_dim.kd,@object
mul_char_x_get_work_dim.kd:
	.long 0                                                    // 000000065880: 00000000
	.long 0                                                    // 000000065884: 00000000
	.long 0x110                                                // 000000065888: 00000110
	.long 0                                                    // 00000006588C: 00000000
	.long 0x1ad80                                              // 000000065890: 0001AD80
	.long 0                                                    // 000000065894: 00000000
	.long 0                                                    // 000000065898: 00000000
	.long 0                                                    // 00000006589C: 00000000
	.long 0                                                    // 0000000658A0: 00000000
	.long 0                                                    // 0000000658A4: 00000000
	.long 0                                                    // 0000000658A8: 00000000
	.long 0                                                    // 0000000658AC: 00000000
	.long 0x60af0100                                           // 0000000658B0: 60AF0100
	.long 0x1384                                               // 0000000658B4: 00001384
	.long 0x408                                                // 0000000658B8: 00000408
	.long 0                                                    // 0000000658BC: 00000000
	.type	mul_char_get_global_offset_get_work_dim.kd,@object
mul_char_get_global_offset_get_work_dim.kd:
	.long 0                                                    // 0000000658C0: 00000000
	.long 0                                                    // 0000000658C4: 00000000
	.long 0x110                                                // 0000000658C8: 00000110
	.long 0                                                    // 0000000658CC: 00000000
	.ascii "@"                                                 // 0000000658D0: 40
	.byte 0xae                                                 // 0000000658D1: AE
	.short 0x1                                                 // 0000000658D2: 0001
	.long 0                                                    // 0000000658D4: 00000000
	.long 0                                                    // 0000000658D8: 00000000
	.long 0                                                    // 0000000658DC: 00000000
	.long 0                                                    // 0000000658E0: 00000000
	.long 0                                                    // 0000000658E4: 00000000
	.long 0                                                    // 0000000658E8: 00000000
	.long 0                                                    // 0000000658EC: 00000000
	.long 0x60af0100                                           // 0000000658F0: 60AF0100
	.long 0x1384                                               // 0000000658F4: 00001384
	.long 0x408                                                // 0000000658F8: 00000408
	.long 0                                                    // 0000000658FC: 00000000
	.type	mul_char_get_local_id_get_work_dim.kd,@object
mul_char_get_local_id_get_work_dim.kd:
	.long 0                                                    // 000000065900: 00000000
	.long 0                                                    // 000000065904: 00000000
	.long 0x110                                                // 000000065908: 00000110
	.long 0                                                    // 00000006590C: 00000000
	.long 0x1af00                                              // 000000065910: 0001AF00
	.long 0                                                    // 000000065914: 00000000
	.long 0                                                    // 000000065918: 00000000
	.long 0                                                    // 00000006591C: 00000000
	.long 0                                                    // 000000065920: 00000000
	.long 0                                                    // 000000065924: 00000000
	.long 0                                                    // 000000065928: 00000000
	.long 0                                                    // 00000006592C: 00000000
	.long 0x60af0100                                           // 000000065930: 60AF0100
	.long 0x1384                                               // 000000065934: 00001384
	.long 0x408                                                // 000000065938: 00000408
	.long 0                                                    // 00000006593C: 00000000
	.type	mul_char_get_group_id_get_work_dim.kd,@object
mul_char_get_group_id_get_work_dim.kd:
	.long 0                                                    // 000000065940: 00000000
	.long 0                                                    // 000000065944: 00000000
	.long 0x110                                                // 000000065948: 00000110
	.long 0                                                    // 00000006594C: 00000000
	.long 0x1afc0                                              // 000000065950: 0001AFC0
	.long 0                                                    // 000000065954: 00000000
	.long 0                                                    // 000000065958: 00000000
	.long 0                                                    // 00000006595C: 00000000
	.long 0                                                    // 000000065960: 00000000
	.long 0                                                    // 000000065964: 00000000
	.long 0                                                    // 000000065968: 00000000
	.long 0                                                    // 00000006596C: 00000000
	.long 0x60af0100                                           // 000000065970: 60AF0100
	.long 0x1384                                               // 000000065974: 00001384
	.long 0x408                                                // 000000065978: 00000408
	.long 0                                                    // 00000006597C: 00000000
	.type	mul_char_get_local_size_get_work_dim.kd,@object
mul_char_get_local_size_get_work_dim.kd:
	.long 0                                                    // 000000065980: 00000000
	.long 0                                                    // 000000065984: 00000000
	.long 0x110                                                // 000000065988: 00000110
	.long 0                                                    // 00000006598C: 00000000
	.long 0x1b080                                              // 000000065990: 0001B080
	.long 0                                                    // 000000065994: 00000000
	.long 0                                                    // 000000065998: 00000000
	.long 0                                                    // 00000006599C: 00000000
	.long 0                                                    // 0000000659A0: 00000000
	.long 0                                                    // 0000000659A4: 00000000
	.long 0                                                    // 0000000659A8: 00000000
	.long 0                                                    // 0000000659AC: 00000000
	.long 0x60af0100                                           // 0000000659B0: 60AF0100
	.long 0x1384                                               // 0000000659B4: 00001384
	.long 0x408                                                // 0000000659B8: 00000408
	.long 0                                                    // 0000000659BC: 00000000
	.type	mul_char_get_global_id_get_work_dim.kd,@object
mul_char_get_global_id_get_work_dim.kd:
	.long 0                                                    // 0000000659C0: 00000000
	.long 0                                                    // 0000000659C4: 00000000
	.long 0x110                                                // 0000000659C8: 00000110
	.long 0                                                    // 0000000659CC: 00000000
	.ascii "@"                                                 // 0000000659D0: 40
	.byte 0xb2                                                 // 0000000659D1: B2
	.short 0x1                                                 // 0000000659D2: 0001
	.long 0                                                    // 0000000659D4: 00000000
	.long 0                                                    // 0000000659D8: 00000000
	.long 0                                                    // 0000000659DC: 00000000
	.long 0                                                    // 0000000659E0: 00000000
	.long 0                                                    // 0000000659E4: 00000000
	.long 0                                                    // 0000000659E8: 00000000
	.long 0                                                    // 0000000659EC: 00000000
	.long 0x60af0100                                           // 0000000659F0: 60AF0100
	.long 0x1384                                               // 0000000659F4: 00001384
	.long 0x408                                                // 0000000659F8: 00000408
	.long 0                                                    // 0000000659FC: 00000000
	.type	mul_char_get_global_size_get_work_dim.kd,@object
mul_char_get_global_size_get_work_dim.kd:
	.long 0                                                    // 000000065A00: 00000000
	.long 0                                                    // 000000065A04: 00000000
	.long 0x110                                                // 000000065A08: 00000110
	.long 0                                                    // 000000065A0C: 00000000
	.long 0x1b300                                              // 000000065A10: 0001B300
	.long 0                                                    // 000000065A14: 00000000
	.long 0                                                    // 000000065A18: 00000000
	.long 0                                                    // 000000065A1C: 00000000
	.long 0                                                    // 000000065A20: 00000000
	.long 0                                                    // 000000065A24: 00000000
	.long 0                                                    // 000000065A28: 00000000
	.long 0                                                    // 000000065A2C: 00000000
	.long 0x60af0100                                           // 000000065A30: 60AF0100
	.long 0x1384                                               // 000000065A34: 00001384
	.long 0x408                                                // 000000065A38: 00000408
	.long 0                                                    // 000000065A3C: 00000000
	.type	mul_char_get_num_groups_get_work_dim.kd,@object
mul_char_get_num_groups_get_work_dim.kd:
	.long 0                                                    // 000000065A40: 00000000
	.long 0                                                    // 000000065A44: 00000000
	.long 0x110                                                // 000000065A48: 00000110
	.long 0                                                    // 000000065A4C: 00000000
	.long 0x1b3c0                                              // 000000065A50: 0001B3C0
	.long 0                                                    // 000000065A54: 00000000
	.long 0                                                    // 000000065A58: 00000000
	.long 0                                                    // 000000065A5C: 00000000
	.long 0                                                    // 000000065A60: 00000000
	.long 0                                                    // 000000065A64: 00000000
	.long 0                                                    // 000000065A68: 00000000
	.long 0                                                    // 000000065A6C: 00000000
	.long 0x60af0100                                           // 000000065A70: 60AF0100
	.long 0x1384                                               // 000000065A74: 00001384
	.long 0x408                                                // 000000065A78: 00000408
	.long 0                                                    // 000000065A7C: 00000000
	.type	mul_char_get_work_dim_get_work_dim.kd,@object
mul_char_get_work_dim_get_work_dim.kd:
	.long 0                                                    // 000000065A80: 00000000
	.long 0                                                    // 000000065A84: 00000000
	.long 0x110                                                // 000000065A88: 00000110
	.long 0                                                    // 000000065A8C: 00000000
	.long 0x1b580                                              // 000000065A90: 0001B580
	.long 0                                                    // 000000065A94: 00000000
	.long 0                                                    // 000000065A98: 00000000
	.long 0                                                    // 000000065A9C: 00000000
	.long 0                                                    // 000000065AA0: 00000000
	.long 0                                                    // 000000065AA4: 00000000
	.long 0                                                    // 000000065AA8: 00000000
	.long 0                                                    // 000000065AAC: 00000000
	.long 0x60af0100                                           // 000000065AB0: 60AF0100
	.long 0x1384                                               // 000000065AB4: 00001384
	.long 0x408                                                // 000000065AB8: 00000408
	.long 0                                                    // 000000065ABC: 00000000
	.type	mul_char_x_64.kd,@object
mul_char_x_64.kd:
	.long 0                                                    // 000000065AC0: 00000000
	.long 0                                                    // 000000065AC4: 00000000
	.long 0x110                                                // 000000065AC8: 00000110
	.long 0                                                    // 000000065ACC: 00000000
	.ascii "@"                                                 // 000000065AD0: 40
	.byte 0xb6                                                 // 000000065AD1: B6
	.short 0x1                                                 // 000000065AD2: 0001
	.long 0                                                    // 000000065AD4: 00000000
	.long 0                                                    // 000000065AD8: 00000000
	.long 0                                                    // 000000065ADC: 00000000
	.long 0                                                    // 000000065AE0: 00000000
	.long 0                                                    // 000000065AE4: 00000000
	.long 0                                                    // 000000065AE8: 00000000
	.long 0                                                    // 000000065AEC: 00000000
	.long 0x60af0100                                           // 000000065AF0: 60AF0100
	.long 0x84                                                 // 000000065AF4: 00000084
	.long 0x408                                                // 000000065AF8: 00000408
	.long 0                                                    // 000000065AFC: 00000000
	.type	mul_char_get_global_offset_64.kd,@object
mul_char_get_global_offset_64.kd:
	.long 0                                                    // 000000065B00: 00000000
	.long 0                                                    // 000000065B04: 00000000
	.long 0x110                                                // 000000065B08: 00000110
	.long 0                                                    // 000000065B0C: 00000000
	.long 0x1b700                                              // 000000065B10: 0001B700
	.long 0                                                    // 000000065B14: 00000000
	.long 0                                                    // 000000065B18: 00000000
	.long 0                                                    // 000000065B1C: 00000000
	.long 0                                                    // 000000065B20: 00000000
	.long 0                                                    // 000000065B24: 00000000
	.long 0                                                    // 000000065B28: 00000000
	.long 0                                                    // 000000065B2C: 00000000
	.long 0x60af0100                                           // 000000065B30: 60AF0100
	.long 0x84                                                 // 000000065B34: 00000084
	.long 0x408                                                // 000000065B38: 00000408
	.long 0                                                    // 000000065B3C: 00000000
	.type	mul_char_get_local_id_64.kd,@object
mul_char_get_local_id_64.kd:
	.long 0                                                    // 000000065B40: 00000000
	.long 0                                                    // 000000065B44: 00000000
	.long 0x110                                                // 000000065B48: 00000110
	.long 0                                                    // 000000065B4C: 00000000
	.long 0x1b7c0                                              // 000000065B50: 0001B7C0
	.long 0                                                    // 000000065B54: 00000000
	.long 0                                                    // 000000065B58: 00000000
	.long 0                                                    // 000000065B5C: 00000000
	.long 0                                                    // 000000065B60: 00000000
	.long 0                                                    // 000000065B64: 00000000
	.long 0                                                    // 000000065B68: 00000000
	.long 0                                                    // 000000065B6C: 00000000
	.long 0x60af0100                                           // 000000065B70: 60AF0100
	.long 0x84                                                 // 000000065B74: 00000084
	.long 0x408                                                // 000000065B78: 00000408
	.long 0                                                    // 000000065B7C: 00000000
	.type	mul_char_get_group_id_64.kd,@object
mul_char_get_group_id_64.kd:
	.long 0                                                    // 000000065B80: 00000000
	.long 0                                                    // 000000065B84: 00000000
	.long 0x110                                                // 000000065B88: 00000110
	.long 0                                                    // 000000065B8C: 00000000
	.long 0x1b880                                              // 000000065B90: 0001B880
	.long 0                                                    // 000000065B94: 00000000
	.long 0                                                    // 000000065B98: 00000000
	.long 0                                                    // 000000065B9C: 00000000
	.long 0                                                    // 000000065BA0: 00000000
	.long 0                                                    // 000000065BA4: 00000000
	.long 0                                                    // 000000065BA8: 00000000
	.long 0                                                    // 000000065BAC: 00000000
	.long 0x60af0100                                           // 000000065BB0: 60AF0100
	.long 0x84                                                 // 000000065BB4: 00000084
	.long 0x408                                                // 000000065BB8: 00000408
	.long 0                                                    // 000000065BBC: 00000000
	.type	mul_char_get_local_size_64.kd,@object
mul_char_get_local_size_64.kd:
	.long 0                                                    // 000000065BC0: 00000000
	.long 0                                                    // 000000065BC4: 00000000
	.long 0x110                                                // 000000065BC8: 00000110
	.long 0                                                    // 000000065BCC: 00000000
	.ascii "@"                                                 // 000000065BD0: 40
	.byte 0xb9                                                 // 000000065BD1: B9
	.short 0x1                                                 // 000000065BD2: 0001
	.long 0                                                    // 000000065BD4: 00000000
	.long 0                                                    // 000000065BD8: 00000000
	.long 0                                                    // 000000065BDC: 00000000
	.long 0                                                    // 000000065BE0: 00000000
	.long 0                                                    // 000000065BE4: 00000000
	.long 0                                                    // 000000065BE8: 00000000
	.long 0                                                    // 000000065BEC: 00000000
	.long 0x60af0100                                           // 000000065BF0: 60AF0100
	.long 0x84                                                 // 000000065BF4: 00000084
	.long 0x408                                                // 000000065BF8: 00000408
	.long 0                                                    // 000000065BFC: 00000000
	.type	mul_char_get_global_id_64.kd,@object
mul_char_get_global_id_64.kd:
	.long 0                                                    // 000000065C00: 00000000
	.long 0                                                    // 000000065C04: 00000000
	.long 0x110                                                // 000000065C08: 00000110
	.long 0                                                    // 000000065C0C: 00000000
	.long 0x1ba00                                              // 000000065C10: 0001BA00
	.long 0                                                    // 000000065C14: 00000000
	.long 0                                                    // 000000065C18: 00000000
	.long 0                                                    // 000000065C1C: 00000000
	.long 0                                                    // 000000065C20: 00000000
	.long 0                                                    // 000000065C24: 00000000
	.long 0                                                    // 000000065C28: 00000000
	.long 0                                                    // 000000065C2C: 00000000
	.long 0x60af0100                                           // 000000065C30: 60AF0100
	.long 0x84                                                 // 000000065C34: 00000084
	.long 0x408                                                // 000000065C38: 00000408
	.long 0                                                    // 000000065C3C: 00000000
	.type	mul_char_get_global_size_64.kd,@object
mul_char_get_global_size_64.kd:
	.long 0                                                    // 000000065C40: 00000000
	.long 0                                                    // 000000065C44: 00000000
	.long 0x110                                                // 000000065C48: 00000110
	.long 0                                                    // 000000065C4C: 00000000
	.long 0x1bac0                                              // 000000065C50: 0001BAC0
	.long 0                                                    // 000000065C54: 00000000
	.long 0                                                    // 000000065C58: 00000000
	.long 0                                                    // 000000065C5C: 00000000
	.long 0                                                    // 000000065C60: 00000000
	.long 0                                                    // 000000065C64: 00000000
	.long 0                                                    // 000000065C68: 00000000
	.long 0                                                    // 000000065C6C: 00000000
	.long 0x60af0100                                           // 000000065C70: 60AF0100
	.long 0x84                                                 // 000000065C74: 00000084
	.long 0x408                                                // 000000065C78: 00000408
	.long 0                                                    // 000000065C7C: 00000000
	.type	mul_char_get_num_groups_64.kd,@object
mul_char_get_num_groups_64.kd:
	.long 0                                                    // 000000065C80: 00000000
	.long 0                                                    // 000000065C84: 00000000
	.long 0x110                                                // 000000065C88: 00000110
	.long 0                                                    // 000000065C8C: 00000000
	.long 0x1bb80                                              // 000000065C90: 0001BB80
	.long 0                                                    // 000000065C94: 00000000
	.long 0                                                    // 000000065C98: 00000000
	.long 0                                                    // 000000065C9C: 00000000
	.long 0                                                    // 000000065CA0: 00000000
	.long 0                                                    // 000000065CA4: 00000000
	.long 0                                                    // 000000065CA8: 00000000
	.long 0                                                    // 000000065CAC: 00000000
	.long 0x60af0100                                           // 000000065CB0: 60AF0100
	.long 0x84                                                 // 000000065CB4: 00000084
	.long 0x408                                                // 000000065CB8: 00000408
	.long 0                                                    // 000000065CBC: 00000000
	.type	mul_char_get_work_dim.kd,@object
mul_char_get_work_dim.kd:
	.long 0                                                    // 000000065CC0: 00000000
	.long 0                                                    // 000000065CC4: 00000000
	.long 0x110                                                // 000000065CC8: 00000110
	.long 0                                                    // 000000065CCC: 00000000
	.ascii "@"                                                 // 000000065CD0: 40
	.byte 0xbc                                                 // 000000065CD1: BC
	.short 0x1                                                 // 000000065CD2: 0001
	.long 0                                                    // 000000065CD4: 00000000
	.long 0                                                    // 000000065CD8: 00000000
	.long 0                                                    // 000000065CDC: 00000000
	.long 0                                                    // 000000065CE0: 00000000
	.long 0                                                    // 000000065CE4: 00000000
	.long 0                                                    // 000000065CE8: 00000000
	.long 0                                                    // 000000065CEC: 00000000
	.long 0x60af0100                                           // 000000065CF0: 60AF0100
	.long 0x84                                                 // 000000065CF4: 00000084
	.long 0x408                                                // 000000065CF8: 00000408
	.long 0                                                    // 000000065CFC: 00000000
	.type	mul_char_x_8_8.kd,@object
mul_char_x_8_8.kd:
	.long 0                                                    // 000000065D00: 00000000
	.long 0                                                    // 000000065D04: 00000000
	.long 0x110                                                // 000000065D08: 00000110
	.long 0                                                    // 000000065D0C: 00000000
	.long 0x1bd00                                              // 000000065D10: 0001BD00
	.long 0                                                    // 000000065D14: 00000000
	.long 0                                                    // 000000065D18: 00000000
	.long 0                                                    // 000000065D1C: 00000000
	.long 0                                                    // 000000065D20: 00000000
	.long 0                                                    // 000000065D24: 00000000
	.long 0                                                    // 000000065D28: 00000000
	.long 0                                                    // 000000065D2C: 00000000
	.long 0x60af0100                                           // 000000065D30: 60AF0100
	.long 0x984                                                // 000000065D34: 00000984
	.long 0x408                                                // 000000065D38: 00000408
	.long 0                                                    // 000000065D3C: 00000000
	.type	mul_char_get_global_offset_8_8.kd,@object
mul_char_get_global_offset_8_8.kd:
	.long 0                                                    // 000000065D40: 00000000
	.long 0                                                    // 000000065D44: 00000000
	.long 0x110                                                // 000000065D48: 00000110
	.long 0                                                    // 000000065D4C: 00000000
	.long 0x1bdc0                                              // 000000065D50: 0001BDC0
	.long 0                                                    // 000000065D54: 00000000
	.long 0                                                    // 000000065D58: 00000000
	.long 0                                                    // 000000065D5C: 00000000
	.long 0                                                    // 000000065D60: 00000000
	.long 0                                                    // 000000065D64: 00000000
	.long 0                                                    // 000000065D68: 00000000
	.long 0                                                    // 000000065D6C: 00000000
	.long 0x60af0100                                           // 000000065D70: 60AF0100
	.long 0x84                                                 // 000000065D74: 00000084
	.long 0x408                                                // 000000065D78: 00000408
	.long 0                                                    // 000000065D7C: 00000000
	.type	mul_char_get_local_id_8_8.kd,@object
mul_char_get_local_id_8_8.kd:
	.long 0                                                    // 000000065D80: 00000000
	.long 0                                                    // 000000065D84: 00000000
	.long 0x110                                                // 000000065D88: 00000110
	.long 0                                                    // 000000065D8C: 00000000
	.long 0x1be80                                              // 000000065D90: 0001BE80
	.long 0                                                    // 000000065D94: 00000000
	.long 0                                                    // 000000065D98: 00000000
	.long 0                                                    // 000000065D9C: 00000000
	.long 0                                                    // 000000065DA0: 00000000
	.long 0                                                    // 000000065DA4: 00000000
	.long 0                                                    // 000000065DA8: 00000000
	.long 0                                                    // 000000065DAC: 00000000
	.long 0x60af0100                                           // 000000065DB0: 60AF0100
	.long 0x884                                                // 000000065DB4: 00000884
	.long 0x408                                                // 000000065DB8: 00000408
	.long 0                                                    // 000000065DBC: 00000000
	.type	mul_char_get_group_id_8_8.kd,@object
mul_char_get_group_id_8_8.kd:
	.long 0                                                    // 000000065DC0: 00000000
	.long 0                                                    // 000000065DC4: 00000000
	.long 0x110                                                // 000000065DC8: 00000110
	.long 0                                                    // 000000065DCC: 00000000
	.ascii "@"                                                 // 000000065DD0: 40
	.byte 0xbf                                                 // 000000065DD1: BF
	.short 0x1                                                 // 000000065DD2: 0001
	.long 0                                                    // 000000065DD4: 00000000
	.long 0                                                    // 000000065DD8: 00000000
	.long 0                                                    // 000000065DDC: 00000000
	.long 0                                                    // 000000065DE0: 00000000
	.long 0                                                    // 000000065DE4: 00000000
	.long 0                                                    // 000000065DE8: 00000000
	.long 0                                                    // 000000065DEC: 00000000
	.long 0x60af0100                                           // 000000065DF0: 60AF0100
	.long 0x184                                                // 000000065DF4: 00000184
	.long 0x408                                                // 000000065DF8: 00000408
	.long 0                                                    // 000000065DFC: 00000000
	.type	mul_char_get_local_size_8_8.kd,@object
mul_char_get_local_size_8_8.kd:
	.long 0                                                    // 000000065E00: 00000000
	.long 0                                                    // 000000065E04: 00000000
	.long 0x110                                                // 000000065E08: 00000110
	.long 0                                                    // 000000065E0C: 00000000
	.long 0x1c000                                              // 000000065E10: 0001C000
	.long 0                                                    // 000000065E14: 00000000
	.long 0                                                    // 000000065E18: 00000000
	.long 0                                                    // 000000065E1C: 00000000
	.long 0                                                    // 000000065E20: 00000000
	.long 0                                                    // 000000065E24: 00000000
	.long 0                                                    // 000000065E28: 00000000
	.long 0                                                    // 000000065E2C: 00000000
	.long 0x60af0100                                           // 000000065E30: 60AF0100
	.long 0x184                                                // 000000065E34: 00000184
	.long 0x408                                                // 000000065E38: 00000408
	.long 0                                                    // 000000065E3C: 00000000
	.type	mul_char_get_global_id_8_8.kd,@object
mul_char_get_global_id_8_8.kd:
	.long 0                                                    // 000000065E40: 00000000
	.long 0                                                    // 000000065E44: 00000000
	.long 0x110                                                // 000000065E48: 00000110
	.long 0                                                    // 000000065E4C: 00000000
	.long 0x1c0c0                                              // 000000065E50: 0001C0C0
	.long 0                                                    // 000000065E54: 00000000
	.long 0                                                    // 000000065E58: 00000000
	.long 0                                                    // 000000065E5C: 00000000
	.long 0                                                    // 000000065E60: 00000000
	.long 0                                                    // 000000065E64: 00000000
	.long 0                                                    // 000000065E68: 00000000
	.long 0                                                    // 000000065E6C: 00000000
	.long 0x60af0100                                           // 000000065E70: 60AF0100
	.long 0x984                                                // 000000065E74: 00000984
	.long 0x408                                                // 000000065E78: 00000408
	.long 0                                                    // 000000065E7C: 00000000
	.type	mul_char_get_global_size_8_8.kd,@object
mul_char_get_global_size_8_8.kd:
	.long 0                                                    // 000000065E80: 00000000
	.long 0                                                    // 000000065E84: 00000000
	.long 0x110                                                // 000000065E88: 00000110
	.long 0                                                    // 000000065E8C: 00000000
	.long 0x1c180                                              // 000000065E90: 0001C180
	.long 0                                                    // 000000065E94: 00000000
	.long 0                                                    // 000000065E98: 00000000
	.long 0                                                    // 000000065E9C: 00000000
	.long 0                                                    // 000000065EA0: 00000000
	.long 0                                                    // 000000065EA4: 00000000
	.long 0                                                    // 000000065EA8: 00000000
	.long 0                                                    // 000000065EAC: 00000000
	.long 0x60af0100                                           // 000000065EB0: 60AF0100
	.long 0x84                                                 // 000000065EB4: 00000084
	.long 0x408                                                // 000000065EB8: 00000408
	.long 0                                                    // 000000065EBC: 00000000
	.type	mul_char_get_num_groups_8_8.kd,@object
mul_char_get_num_groups_8_8.kd:
	.long 0                                                    // 000000065EC0: 00000000
	.long 0                                                    // 000000065EC4: 00000000
	.long 0x110                                                // 000000065EC8: 00000110
	.long 0                                                    // 000000065ECC: 00000000
	.ascii "@"                                                 // 000000065ED0: 40
	.byte 0xc2                                                 // 000000065ED1: C2
	.short 0x1                                                 // 000000065ED2: 0001
	.long 0                                                    // 000000065ED4: 00000000
	.long 0                                                    // 000000065ED8: 00000000
	.long 0                                                    // 000000065EDC: 00000000
	.long 0                                                    // 000000065EE0: 00000000
	.long 0                                                    // 000000065EE4: 00000000
	.long 0                                                    // 000000065EE8: 00000000
	.long 0                                                    // 000000065EEC: 00000000
	.long 0x60af0100                                           // 000000065EF0: 60AF0100
	.long 0x84                                                 // 000000065EF4: 00000084
	.long 0x408                                                // 000000065EF8: 00000408
	.long 0                                                    // 000000065EFC: 00000000
	.type	mul_char_get_work_dim_8_8.kd,@object
mul_char_get_work_dim_8_8.kd:
	.long 0                                                    // 000000065F00: 00000000
	.long 0                                                    // 000000065F04: 00000000
	.long 0x110                                                // 000000065F08: 00000110
	.long 0                                                    // 000000065F0C: 00000000
	.long 0x1c300                                              // 000000065F10: 0001C300
	.long 0                                                    // 000000065F14: 00000000
	.long 0                                                    // 000000065F18: 00000000
	.long 0                                                    // 000000065F1C: 00000000
	.long 0                                                    // 000000065F20: 00000000
	.long 0                                                    // 000000065F24: 00000000
	.long 0                                                    // 000000065F28: 00000000
	.long 0                                                    // 000000065F2C: 00000000
	.long 0x60af0100                                           // 000000065F30: 60AF0100
	.long 0x984                                                // 000000065F34: 00000984
	.long 0x408                                                // 000000065F38: 00000408
	.long 0                                                    // 000000065F3C: 00000000

	.text

	.p2align	8
	.type	mul_x_x,@function
	.size	mul_x_x, mul_x_x_symend-mul_x_x
mul_x_x:
	s_clause 0x2                                               // 000000067000: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 000000067004: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x8                                 // 00000006700C: F4000100 F8000008
	s_load_b64 s[0:1], s[0:1], null                            // 000000067014: F4040000 F8000000
	s_lshl_b32 s2, s2, 6                                       // 00000006701C: 84028602
	s_mov_b32 s33, 0                                           // 000000067020: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000067024: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 000000067028: D6550000 04000403
	s_mul_i32 s2, s4, s4                                       // 000000067030: 96020404
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000067034: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 000000067038: CA100080 01020002
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000067040: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000067048: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006704C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000067054: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000067058: DC6A0000 007C0200
	s_nop 0                                                    // 000000067060: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067064: BFB60003
	s_endpgm                                                   // 000000067068: BFB00000
mul_x_x_symend:
	.long 0xbf800000                                           // 00000006706C: BF800000
	.long 0xbf800000                                           // 000000067070: BF800000
	.long 0xbf800000                                           // 000000067074: BF800000
	.long 0xbf800000                                           // 000000067078: BF800000
	.long 0xbf800000                                           // 00000006707C: BF800000
	.long 0xbf800000                                           // 000000067080: BF800000
	.long 0xbf800000                                           // 000000067084: BF800000
	.long 0xbf800000                                           // 000000067088: BF800000
	.long 0xbf800000                                           // 00000006708C: BF800000
	.long 0xbf800000                                           // 000000067090: BF800000
	.long 0xbf800000                                           // 000000067094: BF800000
	.long 0xbf800000                                           // 000000067098: BF800000
	.long 0xbf800000                                           // 00000006709C: BF800000
	.long 0xbf800000                                           // 0000000670A0: BF800000
	.long 0xbf800000                                           // 0000000670A4: BF800000
	.long 0xbf800000                                           // 0000000670A8: BF800000
	.long 0xbf800000                                           // 0000000670AC: BF800000
	.long 0xbf800000                                           // 0000000670B0: BF800000
	.long 0xbf800000                                           // 0000000670B4: BF800000
	.long 0xbf800000                                           // 0000000670B8: BF800000
	.long 0xbf800000                                           // 0000000670BC: BF800000
	.long 0xbf800000                                           // 0000000670C0: BF800000
	.long 0xbf800000                                           // 0000000670C4: BF800000
	.long 0xbf800000                                           // 0000000670C8: BF800000
	.long 0xbf800000                                           // 0000000670CC: BF800000
	.long 0xbf800000                                           // 0000000670D0: BF800000
	.long 0xbf800000                                           // 0000000670D4: BF800000
	.long 0xbf800000                                           // 0000000670D8: BF800000
	.long 0xbf800000                                           // 0000000670DC: BF800000
	.long 0xbf800000                                           // 0000000670E0: BF800000
	.long 0xbf800000                                           // 0000000670E4: BF800000
	.long 0xbf800000                                           // 0000000670E8: BF800000
	.long 0xbf800000                                           // 0000000670EC: BF800000
	.long 0xbf800000                                           // 0000000670F0: BF800000
	.long 0xbf800000                                           // 0000000670F4: BF800000
	.long 0xbf800000                                           // 0000000670F8: BF800000
	.long 0xbf800000                                           // 0000000670FC: BF800000

	.p2align	8
	.type	mul_get_global_offset_x,@function
	.size	mul_get_global_offset_x, mul_get_global_offset_x_symend-mul_get_global_offset_x
mul_get_global_offset_x:
	s_clause 0x3                                               // 000000067100: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067104: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000006710C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 000000067114: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006711C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000067124: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000067130: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000067134: D6100005 02291500
	s_lshl_b32 s3, s3, 4                                       // 00000006713C: 84038403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067140: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000067148: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006714C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000067150: D6550001 04040408
	s_lshl_b32 s2, s4, 1                                       // 000000067158: 84028104
	s_mul_i32 s4, s8, s5                                       // 00000006715C: 96040508
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000067160: BF870151
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000067164: D73C0003 00020282
	v_add3_u32 v1, s10, s3, v5                                 // 00000006716C: D6550001 0414060A
	s_mul_i32 s3, s10, s5                                      // 000000067174: 9603050A
	s_mul_i32 s5, s6, s5                                       // 000000067178: 96050506
	v_dual_mov_b32 v7, s4 :: v_dual_mov_b32 v8, s3             // 00000006717C: CA100004 07080003
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000067184: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 00000006718C: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000067194: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006719C: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 0000000671A0: BF870243
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000671A4: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000671AC: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000671B4: 400C0C01
	v_mov_b32_e32 v2, s5                                       // 0000000671B8: 7E040205
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000671BC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000671C4: 40020201
	s_clause 0x2                                               // 0000000671C8: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000671CC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000671D4: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 0000000671DC: DC6A0000 007C0200
	s_nop 0                                                    // 0000000671E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000671E8: BFB60003
	s_endpgm                                                   // 0000000671EC: BFB00000
mul_get_global_offset_x_symend:
	.long 0xbf800000                                           // 0000000671F0: BF800000
	.long 0xbf800000                                           // 0000000671F4: BF800000
	.long 0xbf800000                                           // 0000000671F8: BF800000
	.long 0xbf800000                                           // 0000000671FC: BF800000

	.p2align	8
	.type	mul_get_local_id_x,@function
	.size	mul_get_local_id_x, mul_get_local_id_x_symend-mul_get_local_id_x
mul_get_local_id_x:
	s_clause 0x3                                               // 000000067200: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067204: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000006720C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 000000067214: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006721C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 000000067224: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000067230: 84028302
	v_bfe_u32 v6, v0, 10, 10                                   // 000000067234: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006723C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000067244: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000067248: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000006724C: D6550001 04140408
	s_lshl_b32 s2, s3, 2                                       // 000000067254: 84028203
	v_mul_lo_u32 v7, v5, s5                                    // 000000067258: D72C0007 00000B05
	v_mul_lo_u32 v8, v6, s5                                    // 000000067260: D72C0008 00000B06
	v_mul_lo_u32 v9, v0, s5                                    // 000000067268: D72C0009 00000B00
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000067270: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 000000067278: D6550001 0418040A
	s_lshl_b32 s2, s4, 1                                       // 000000067280: 84028104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000067284: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000067288: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 000000067290: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000067298: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000672A0: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000672A4: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000672A8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000672B0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000672B8: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000672BC: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000672C4: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000672C8: 40020201
	s_clause 0x2                                               // 0000000672CC: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000672D0: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000672D8: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 0000000672E0: DC6A0000 007C0900
	s_nop 0                                                    // 0000000672E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000672EC: BFB60003
	s_endpgm                                                   // 0000000672F0: BFB00000
mul_get_local_id_x_symend:
	.long 0xbf800000                                           // 0000000672F4: BF800000
	.long 0xbf800000                                           // 0000000672F8: BF800000
	.long 0xbf800000                                           // 0000000672FC: BF800000

	.p2align	8
	.type	mul_get_group_id_x,@function
	.size	mul_get_group_id_x, mul_get_group_id_x_symend-mul_get_group_id_x
mul_get_group_id_x:
	s_clause 0x3                                               // 000000067300: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067304: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000006730C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 000000067314: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006731C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000067324: CA240080 020000FF 000003FF
	s_lshl_b32 s7, s2, 1                                       // 000000067330: 84078102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000067334: D6100005 02291500
	s_waitcnt lgkmcnt(0)                                       // 00000006733C: BF89FC07
	s_lshl_b32 s9, s3, 4                                       // 000000067340: 84098403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067344: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006734C: BEA10080
	v_add3_u32 v1, s8, s7, v1                                  // 000000067350: D6550001 04040E08
	s_lshl_b32 s7, s4, 1                                       // 000000067358: 84078104
	s_mul_i32 s2, s2, s5                                       // 00000006735C: 96020502
	s_mul_i32 s3, s3, s5                                       // 000000067360: 96030503
	s_mul_i32 s4, s4, s5                                       // 000000067364: 96040504
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000067368: D73C0003 00020282
	v_add3_u32 v1, s10, s9, v5                                 // 000000067370: D6550001 0414120A
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 000000067378: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000067380: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000067384: D73C0005 00020282
	v_add3_u32 v1, s6, s7, v0                                  // 00000006738C: D6550001 04000E06
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000067394: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006739C: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000673A0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000673A8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000673B0: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 0000000673B4: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000673B8: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000673BC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000673C4: 40020201
	s_clause 0x2                                               // 0000000673C8: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000673CC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000673D4: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 0000000673DC: DC6A0000 007C0200
	s_nop 0                                                    // 0000000673E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000673E8: BFB60003
	s_endpgm                                                   // 0000000673EC: BFB00000
mul_get_group_id_x_symend:
	.long 0xbf800000                                           // 0000000673F0: BF800000
	.long 0xbf800000                                           // 0000000673F4: BF800000
	.long 0xbf800000                                           // 0000000673F8: BF800000
	.long 0xbf800000                                           // 0000000673FC: BF800000

	.p2align	8
	.type	mul_get_local_size_x,@function
	.size	mul_get_local_size_x, mul_get_local_size_x_symend-mul_get_local_size_x
mul_get_local_size_x:
	s_clause 0x1                                               // 000000067400: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000067404: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006740C: F4080300 F8000038
	s_add_u32 s5, s0, 16                                       // 000000067414: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000067418: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006741C: 820B8001
	s_lshl_b32 s13, s2, 1                                      // 000000067420: 840D8102
	s_lshl_b32 s15, s3, 1                                      // 000000067424: 840F8103
	s_lshl_b32 s16, s4, 2                                      // 000000067428: 84108204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006742C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000067438: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067440: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000067448: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006744C: BF0A0802
	v_add3_u32 v1, s12, s13, v1                                // 000000067450: D6550001 04041A0C
	s_cselect_b32 s2, 12, 18                                   // 000000067458: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006745C: BF870009
	s_add_u32 s6, s5, s2                                       // 000000067460: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000067464: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000067468: BF0A0903
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006746C: D73C0003 00020282
	s_cselect_b32 s2, 14, 20                                   // 000000067474: 9802948E
	v_add3_u32 v1, s14, s15, v5                                // 000000067478: D6550001 04141E0E
	s_add_u32 s2, s5, s2                                       // 000000067480: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000067484: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000067488: BF0A0A04
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000006748C: BF8704A1
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000067490: D73C0005 00020282
	s_cselect_b32 s4, 16, 22                                   // 000000067498: 98049690
	s_add_u32 s4, s5, s4                                       // 00000006749C: 80040405
	s_addc_u32 s5, s11, 0                                      // 0000000674A0: 8205800B
	s_clause 0x2                                               // 0000000674A4: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 0000000674A8: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 0000000674B0: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 0000000674B8: DC4A0000 09040002
	s_clause 0x2                                               // 0000000674C0: BF850002
	s_load_b32 s4, s[0:1], 0x48                                // 0000000674C4: F4000100 F8000048
	s_load_b64 s[2:3], s[0:1], 0x8                             // 0000000674CC: F4040080 F8000008
	s_load_b32 s0, s[0:1], null                                // 0000000674D4: F4000000 F8000000
	s_waitcnt lgkmcnt(0)                                       // 0000000674DC: BF89FC07
	v_add3_u32 v1, s4, s16, v0                                 // 0000000674E0: D6550001 04002004
	v_add_co_u32 v3, vcc_lo, s2, v3                            // 0000000674E8: D7006A03 00020602
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo             // 0000000674F0: 40080803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000674F4: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000674F8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s2, v5                            // 000000067500: D7006A05 00020A02
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo             // 000000067508: 400C0C03
	v_add_co_u32 v0, vcc_lo, s2, v0                            // 00000006750C: D7006A00 00020002
	s_delay_alu instid0(VALU_DEP_4)                            // 000000067514: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo             // 000000067518: 40020203
	s_waitcnt vmcnt(2)                                         // 00000006751C: BF890BF7
	v_mul_lo_u32 v2, v7, s0                                    // 000000067520: D72C0002 00000107
	s_waitcnt vmcnt(1)                                         // 000000067528: BF8907F7
	v_mul_lo_u32 v7, v8, s0                                    // 00000006752C: D72C0007 00000108
	s_waitcnt vmcnt(0)                                         // 000000067534: BF8903F7
	v_mul_lo_u32 v8, v9, s0                                    // 000000067538: D72C0008 00000109
	s_clause 0x2                                               // 000000067540: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000067544: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006754C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 000000067554: DC6A0000 007C0800
	s_nop 0                                                    // 00000006755C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067560: BFB60003
	s_endpgm                                                   // 000000067564: BFB00000
mul_get_local_size_x_symend:
	.long 0xbf800000                                           // 000000067568: BF800000
	.long 0xbf800000                                           // 00000006756C: BF800000
	.long 0xbf800000                                           // 000000067570: BF800000
	.long 0xbf800000                                           // 000000067574: BF800000
	.long 0xbf800000                                           // 000000067578: BF800000
	.long 0xbf800000                                           // 00000006757C: BF800000
	.long 0xbf800000                                           // 000000067580: BF800000
	.long 0xbf800000                                           // 000000067584: BF800000
	.long 0xbf800000                                           // 000000067588: BF800000
	.long 0xbf800000                                           // 00000006758C: BF800000
	.long 0xbf800000                                           // 000000067590: BF800000
	.long 0xbf800000                                           // 000000067594: BF800000
	.long 0xbf800000                                           // 000000067598: BF800000
	.long 0xbf800000                                           // 00000006759C: BF800000
	.long 0xbf800000                                           // 0000000675A0: BF800000
	.long 0xbf800000                                           // 0000000675A4: BF800000
	.long 0xbf800000                                           // 0000000675A8: BF800000
	.long 0xbf800000                                           // 0000000675AC: BF800000
	.long 0xbf800000                                           // 0000000675B0: BF800000
	.long 0xbf800000                                           // 0000000675B4: BF800000
	.long 0xbf800000                                           // 0000000675B8: BF800000
	.long 0xbf800000                                           // 0000000675BC: BF800000
	.long 0xbf800000                                           // 0000000675C0: BF800000
	.long 0xbf800000                                           // 0000000675C4: BF800000
	.long 0xbf800000                                           // 0000000675C8: BF800000
	.long 0xbf800000                                           // 0000000675CC: BF800000
	.long 0xbf800000                                           // 0000000675D0: BF800000
	.long 0xbf800000                                           // 0000000675D4: BF800000
	.long 0xbf800000                                           // 0000000675D8: BF800000
	.long 0xbf800000                                           // 0000000675DC: BF800000
	.long 0xbf800000                                           // 0000000675E0: BF800000
	.long 0xbf800000                                           // 0000000675E4: BF800000
	.long 0xbf800000                                           // 0000000675E8: BF800000
	.long 0xbf800000                                           // 0000000675EC: BF800000
	.long 0xbf800000                                           // 0000000675F0: BF800000
	.long 0xbf800000                                           // 0000000675F4: BF800000
	.long 0xbf800000                                           // 0000000675F8: BF800000
	.long 0xbf800000                                           // 0000000675FC: BF800000

	.p2align	8
	.type	mul_get_global_id_x,@function
	.size	mul_get_global_id_x, mul_get_global_id_x_symend-mul_get_global_id_x
mul_get_global_id_x:
	s_clause 0x3                                               // 000000067600: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006760C: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000067614: F4040180 F8000008
	s_load_b32 s0, s[0:1], null                                // 00000006761C: F4000000 F8000000
	v_bfe_u32 v2, v0, 10, 10                                   // 000000067624: D6100002 02291500
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000006762C: 360600FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 000000067634: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006763C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000067640: BF8701D3
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000067644: D6560002 04090203
	v_mov_b32_e32 v1, 0                                        // 00000006764C: 7E020280
	v_lshl_or_b32 v0, s2, 1, v3                                // 000000067650: D6560000 040D0202
	v_lshl_or_b32 v6, s4, 2, v4                                // 000000067658: D6560006 04110404
	s_waitcnt lgkmcnt(0)                                       // 000000067660: BF89FC07
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s10, v2     // 000000067664: CA200101 0302040A
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 00000006766C: BF870233
	v_add_nc_u32_e32 v8, s8, v0                                // 000000067670: 4A100008
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 000000067674: D73C0004 00020082
	v_add_nc_u32_e32 v0, s5, v6                                // 00000006767C: 4A000C05
	v_mul_lo_u32 v9, v2, s0                                    // 000000067680: D72C0009 00000102
	v_lshlrev_b64 v[6:7], 2, v[2:3]                            // 000000067688: D73C0006 00020482
	v_mul_lo_u32 v8, v8, s0                                    // 000000067690: D72C0008 00000108
	v_add_co_u32 v3, vcc_lo, s6, v4                            // 000000067698: D7006A03 00020806
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 0000000676A0: D73C0001 00020082
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v5, vcc_lo             // 0000000676A8: 40080A07
	v_add_co_u32 v5, vcc_lo, s6, v6                            // 0000000676AC: D7006A05 00020C06
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v7, vcc_lo             // 0000000676B4: 400C0E07
	v_mul_lo_u32 v7, v0, s0                                    // 0000000676B8: D72C0007 00000100
	v_add_co_u32 v0, vcc_lo, s6, v1                            // 0000000676C0: D7006A00 00020206
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v2, vcc_lo             // 0000000676C8: 40020407
	s_clause 0x2                                               // 0000000676CC: BF850002
	global_store_b32 v[3:4], v8, off                           // 0000000676D0: DC6A0000 007C0803
	global_store_b32 v[5:6], v9, off                           // 0000000676D8: DC6A0000 007C0905
	global_store_b32 v[0:1], v7, off                           // 0000000676E0: DC6A0000 007C0700
	s_nop 0                                                    // 0000000676E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000676EC: BFB60003
	s_endpgm                                                   // 0000000676F0: BFB00000
mul_get_global_id_x_symend:
	.long 0xbf800000                                           // 0000000676F4: BF800000
	.long 0xbf800000                                           // 0000000676F8: BF800000
	.long 0xbf800000                                           // 0000000676FC: BF800000

	.p2align	8
	.type	mul_get_global_size_x,@function
	.size	mul_get_global_size_x, mul_get_global_size_x_symend-mul_get_global_size_x
mul_get_global_size_x:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000067700: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], null                            // 00000006770C: F4040180 F8000000
	s_lshl_b32 s2, s2, 4                                       // 000000067714: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000067718: D6100005 02291500
	s_clause 0x1                                               // 000000067720: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000067724: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006772C: DC4A0026 08000002
	s_clause 0x3                                               // 000000067734: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067738: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000067740: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000067748: F4000140 F8000048
	s_load_b32 s0, s[0:1], 0x8                                 // 000000067750: F4000000 F8000008
	s_lshl_b32 s1, s3, 1                                       // 000000067758: 84018103
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006775C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000067764: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000067768: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006776C: D6550001 04040408
	s_lshl_b32 s2, s4, 1                                       // 000000067774: 84028104
	s_lshl_b32 s3, s13, 1                                      // 000000067778: 8403810D
	s_lshl_b32 s4, s14, 1                                      // 00000006777C: 8404810E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000067780: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000067784: D73C0003 00020282
	v_add3_u32 v1, s10, s1, v5                                 // 00000006778C: D6550001 0414020A
	s_lshl_b32 s1, s12, 4                                      // 000000067794: 8401840C
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000067798: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 0000000677A0: D6550001 04000405
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000677A8: BF8701A4
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 0000000677AC: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 0000000677B4: 40080807
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000677B8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 0000000677C0: D7006A05 00020A06
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 0000000677C8: 400C0C07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000677CC: BF870213
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000677D0: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000677D8: 40020207
	s_waitcnt vmcnt(1)                                         // 0000000677DC: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 0000000677E0: 32120E90
	v_and_b32_e32 v7, 0xffff, v7                               // 0000000677E4: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 0000000677EC: BF8903F7
	v_add_nc_u32_e32 v2, s4, v8                                // 0000000677F0: 4A041004
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000677F4: BF870193
	v_add_nc_u32_e32 v8, s3, v9                                // 0000000677F8: 4A101203
	v_add_nc_u32_e32 v7, s1, v7                                // 0000000677FC: 4A0E0E01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000067800: BF870193
	v_mul_lo_u32 v2, v2, s0                                    // 000000067804: D72C0002 00000102
	v_mul_lo_u32 v8, v8, s0                                    // 00000006780C: D72C0008 00000108
	s_delay_alu instid0(VALU_DEP_3)                            // 000000067814: BF870003
	v_mul_lo_u32 v7, v7, s0                                    // 000000067818: D72C0007 00000107
	s_clause 0x2                                               // 000000067820: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000067824: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006782C: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 000000067834: DC6A0000 007C0200
	s_nop 0                                                    // 00000006783C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067840: BFB60003
	s_endpgm                                                   // 000000067844: BFB00000
mul_get_global_size_x_symend:
	.long 0xbf800000                                           // 000000067848: BF800000
	.long 0xbf800000                                           // 00000006784C: BF800000
	.long 0xbf800000                                           // 000000067850: BF800000
	.long 0xbf800000                                           // 000000067854: BF800000
	.long 0xbf800000                                           // 000000067858: BF800000
	.long 0xbf800000                                           // 00000006785C: BF800000
	.long 0xbf800000                                           // 000000067860: BF800000
	.long 0xbf800000                                           // 000000067864: BF800000
	.long 0xbf800000                                           // 000000067868: BF800000
	.long 0xbf800000                                           // 00000006786C: BF800000
	.long 0xbf800000                                           // 000000067870: BF800000
	.long 0xbf800000                                           // 000000067874: BF800000
	.long 0xbf800000                                           // 000000067878: BF800000
	.long 0xbf800000                                           // 00000006787C: BF800000
	.long 0xbf800000                                           // 000000067880: BF800000
	.long 0xbf800000                                           // 000000067884: BF800000
	.long 0xbf800000                                           // 000000067888: BF800000
	.long 0xbf800000                                           // 00000006788C: BF800000
	.long 0xbf800000                                           // 000000067890: BF800000
	.long 0xbf800000                                           // 000000067894: BF800000
	.long 0xbf800000                                           // 000000067898: BF800000
	.long 0xbf800000                                           // 00000006789C: BF800000
	.long 0xbf800000                                           // 0000000678A0: BF800000
	.long 0xbf800000                                           // 0000000678A4: BF800000
	.long 0xbf800000                                           // 0000000678A8: BF800000
	.long 0xbf800000                                           // 0000000678AC: BF800000
	.long 0xbf800000                                           // 0000000678B0: BF800000
	.long 0xbf800000                                           // 0000000678B4: BF800000
	.long 0xbf800000                                           // 0000000678B8: BF800000
	.long 0xbf800000                                           // 0000000678BC: BF800000
	.long 0xbf800000                                           // 0000000678C0: BF800000
	.long 0xbf800000                                           // 0000000678C4: BF800000
	.long 0xbf800000                                           // 0000000678C8: BF800000
	.long 0xbf800000                                           // 0000000678CC: BF800000
	.long 0xbf800000                                           // 0000000678D0: BF800000
	.long 0xbf800000                                           // 0000000678D4: BF800000
	.long 0xbf800000                                           // 0000000678D8: BF800000
	.long 0xbf800000                                           // 0000000678DC: BF800000
	.long 0xbf800000                                           // 0000000678E0: BF800000
	.long 0xbf800000                                           // 0000000678E4: BF800000
	.long 0xbf800000                                           // 0000000678E8: BF800000
	.long 0xbf800000                                           // 0000000678EC: BF800000
	.long 0xbf800000                                           // 0000000678F0: BF800000
	.long 0xbf800000                                           // 0000000678F4: BF800000
	.long 0xbf800000                                           // 0000000678F8: BF800000
	.long 0xbf800000                                           // 0000000678FC: BF800000

	.p2align	8
	.type	mul_get_num_groups_x,@function
	.size	mul_get_num_groups_x, mul_get_num_groups_x_symend-mul_get_num_groups_x
mul_get_num_groups_x:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000067900: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006790C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000067914: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000067918: D6100005 02291500
	s_clause 0x1                                               // 000000067920: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000067924: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006792C: DC4A0026 08000002
	s_clause 0x3                                               // 000000067934: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067938: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000067940: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000067948: F4080300 F8000010
	s_load_b32 s1, s[0:1], null                                // 000000067950: F4000040 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067958: D6100000 02292900
	s_lshl_b32 s0, s4, 2                                       // 000000067960: 84008204
	s_mov_b32 s33, 0                                           // 000000067964: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000067968: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006796C: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 000000067974: 84028103
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000067978: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006797C: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 000000067984: D6550001 0414040A
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006798C: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v0                                  // 000000067994: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006799C: BF870094
	v_add_co_u32 v3, s0, s6, v3                                // 0000000679A0: D7000003 00020606
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 0000000679A8: D5200004 00020807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000679B0: BF870094
	v_add_co_u32 v5, s0, s6, v5                                // 0000000679B4: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000679BC: D5200006 00020C07
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000679C4: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 0000000679CC: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 0000000679D0: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000679D4: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 0000000679D8: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 0000000679DC: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000679E4: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 0000000679E8: 7C7A1280
	s_addc_u32 s2, s12, 0                                      // 0000000679EC: 8202800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000679F0: BF870009
	s_mul_i32 s2, s2, s1                                       // 0000000679F4: 96020102
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000679F8: BF07806A
	v_mov_b32_e32 v2, s2                                       // 0000000679FC: 7E040202
	s_addc_u32 s2, s13, 0                                      // 000000067A00: 8202800D
	s_cmp_lg_u32 s0, 0                                         // 000000067A04: BF078000
	s_mul_i32 s0, s2, s1                                       // 000000067A08: 96000102
	s_addc_u32 s2, s14, 0                                      // 000000067A0C: 8202800E
	v_mov_b32_e32 v7, s0                                       // 000000067A10: 7E0E0200
	s_mul_i32 s0, s2, s1                                       // 000000067A14: 96000102
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000067A18: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000067A20: 40020207
	v_mov_b32_e32 v8, s0                                       // 000000067A24: 7E100200
	s_clause 0x2                                               // 000000067A28: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000067A2C: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 000000067A34: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 000000067A3C: DC6A0000 007C0800
	s_nop 0                                                    // 000000067A44: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067A48: BFB60003
	s_endpgm                                                   // 000000067A4C: BFB00000
mul_get_num_groups_x_symend:
	.long 0xbf800000                                           // 000000067A50: BF800000
	.long 0xbf800000                                           // 000000067A54: BF800000
	.long 0xbf800000                                           // 000000067A58: BF800000
	.long 0xbf800000                                           // 000000067A5C: BF800000
	.long 0xbf800000                                           // 000000067A60: BF800000
	.long 0xbf800000                                           // 000000067A64: BF800000
	.long 0xbf800000                                           // 000000067A68: BF800000
	.long 0xbf800000                                           // 000000067A6C: BF800000
	.long 0xbf800000                                           // 000000067A70: BF800000
	.long 0xbf800000                                           // 000000067A74: BF800000
	.long 0xbf800000                                           // 000000067A78: BF800000
	.long 0xbf800000                                           // 000000067A7C: BF800000
	.long 0xbf800000                                           // 000000067A80: BF800000
	.long 0xbf800000                                           // 000000067A84: BF800000
	.long 0xbf800000                                           // 000000067A88: BF800000
	.long 0xbf800000                                           // 000000067A8C: BF800000
	.long 0xbf800000                                           // 000000067A90: BF800000
	.long 0xbf800000                                           // 000000067A94: BF800000
	.long 0xbf800000                                           // 000000067A98: BF800000
	.long 0xbf800000                                           // 000000067A9C: BF800000
	.long 0xbf800000                                           // 000000067AA0: BF800000
	.long 0xbf800000                                           // 000000067AA4: BF800000
	.long 0xbf800000                                           // 000000067AA8: BF800000
	.long 0xbf800000                                           // 000000067AAC: BF800000
	.long 0xbf800000                                           // 000000067AB0: BF800000
	.long 0xbf800000                                           // 000000067AB4: BF800000
	.long 0xbf800000                                           // 000000067AB8: BF800000
	.long 0xbf800000                                           // 000000067ABC: BF800000
	.long 0xbf800000                                           // 000000067AC0: BF800000
	.long 0xbf800000                                           // 000000067AC4: BF800000
	.long 0xbf800000                                           // 000000067AC8: BF800000
	.long 0xbf800000                                           // 000000067ACC: BF800000
	.long 0xbf800000                                           // 000000067AD0: BF800000
	.long 0xbf800000                                           // 000000067AD4: BF800000
	.long 0xbf800000                                           // 000000067AD8: BF800000
	.long 0xbf800000                                           // 000000067ADC: BF800000
	.long 0xbf800000                                           // 000000067AE0: BF800000
	.long 0xbf800000                                           // 000000067AE4: BF800000
	.long 0xbf800000                                           // 000000067AE8: BF800000
	.long 0xbf800000                                           // 000000067AEC: BF800000
	.long 0xbf800000                                           // 000000067AF0: BF800000
	.long 0xbf800000                                           // 000000067AF4: BF800000
	.long 0xbf800000                                           // 000000067AF8: BF800000
	.long 0xbf800000                                           // 000000067AFC: BF800000

	.p2align	8
	.type	mul_get_work_dim_x,@function
	.size	mul_get_work_dim_x, mul_get_work_dim_x_symend-mul_get_work_dim_x
mul_get_work_dim_x:
	s_clause 0x3                                               // 000000067B00: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 000000067B04: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x50                                // 000000067B0C: F4000100 F8000050
	s_load_b32 s5, s[0:1], null                                // 000000067B14: F4000140 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000067B1C: F4040000 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000067B24: 84028102
	s_mov_b32 s33, 0                                           // 000000067B28: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000067B2C: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 000000067B30: D6550000 04000403
	s_and_b32 s2, s4, 0xffff                                   // 000000067B38: 8B02FF04 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 000000067B40: BF870499
	s_mul_i32 s2, s2, s5                                       // 000000067B44: 96020502
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 000000067B48: CA100080 01020002
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000067B50: BF870091
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000067B54: D73C0000 00020082
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000067B5C: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 000000067B64: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000067B68: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000067B6C: DC6A0000 007C0200
	s_nop 0                                                    // 000000067B74: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067B78: BFB60003
	s_endpgm                                                   // 000000067B7C: BFB00000
mul_get_work_dim_x_symend:
	.long 0xbf800000                                           // 000000067B80: BF800000
	.long 0xbf800000                                           // 000000067B84: BF800000
	.long 0xbf800000                                           // 000000067B88: BF800000
	.long 0xbf800000                                           // 000000067B8C: BF800000
	.long 0xbf800000                                           // 000000067B90: BF800000
	.long 0xbf800000                                           // 000000067B94: BF800000
	.long 0xbf800000                                           // 000000067B98: BF800000
	.long 0xbf800000                                           // 000000067B9C: BF800000
	.long 0xbf800000                                           // 000000067BA0: BF800000
	.long 0xbf800000                                           // 000000067BA4: BF800000
	.long 0xbf800000                                           // 000000067BA8: BF800000
	.long 0xbf800000                                           // 000000067BAC: BF800000
	.long 0xbf800000                                           // 000000067BB0: BF800000
	.long 0xbf800000                                           // 000000067BB4: BF800000
	.long 0xbf800000                                           // 000000067BB8: BF800000
	.long 0xbf800000                                           // 000000067BBC: BF800000
	.long 0xbf800000                                           // 000000067BC0: BF800000
	.long 0xbf800000                                           // 000000067BC4: BF800000
	.long 0xbf800000                                           // 000000067BC8: BF800000
	.long 0xbf800000                                           // 000000067BCC: BF800000
	.long 0xbf800000                                           // 000000067BD0: BF800000
	.long 0xbf800000                                           // 000000067BD4: BF800000
	.long 0xbf800000                                           // 000000067BD8: BF800000
	.long 0xbf800000                                           // 000000067BDC: BF800000
	.long 0xbf800000                                           // 000000067BE0: BF800000
	.long 0xbf800000                                           // 000000067BE4: BF800000
	.long 0xbf800000                                           // 000000067BE8: BF800000
	.long 0xbf800000                                           // 000000067BEC: BF800000
	.long 0xbf800000                                           // 000000067BF0: BF800000
	.long 0xbf800000                                           // 000000067BF4: BF800000
	.long 0xbf800000                                           // 000000067BF8: BF800000
	.long 0xbf800000                                           // 000000067BFC: BF800000

	.p2align	8
	.type	mul_x_get_global_offset,@function
	.size	mul_x_get_global_offset, mul_x_get_global_offset_symend-mul_x_get_global_offset
mul_x_get_global_offset:
	s_clause 0x3                                               // 000000067C00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067C04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 000000067C0C: F4000140 F8000008
	s_load_b32 s6, s[0:1], 0x48                                // 000000067C14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000067C1C: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000067C24: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000067C30: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000067C34: D6100005 02291500
	s_lshl_b32 s3, s3, 1                                       // 000000067C3C: 84038103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067C40: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000067C48: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000067C4C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000067C50: D6550001 04040408
	s_lshl_b32 s2, s4, 1                                       // 000000067C58: 84028104
	s_mul_i32 s4, s8, s5                                       // 000000067C5C: 96040508
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000067C60: BF870151
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000067C64: D73C0003 00020282
	v_add3_u32 v1, s10, s3, v5                                 // 000000067C6C: D6550001 0414060A
	s_mul_i32 s3, s10, s5                                      // 000000067C74: 9603050A
	s_mul_i32 s5, s6, s5                                       // 000000067C78: 96050506
	v_dual_mov_b32 v7, s4 :: v_dual_mov_b32 v8, s3             // 000000067C7C: CA100004 07080003
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000067C84: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 000000067C8C: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000067C94: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000067C9C: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 000000067CA0: BF870243
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000067CA4: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000067CAC: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000067CB4: 400C0C01
	v_mov_b32_e32 v2, s5                                       // 000000067CB8: 7E040205
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000067CBC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000067CC4: 40020201
	s_clause 0x2                                               // 000000067CC8: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000067CCC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000067CD4: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 000000067CDC: DC6A0000 007C0200
	s_nop 0                                                    // 000000067CE4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067CE8: BFB60003
	s_endpgm                                                   // 000000067CEC: BFB00000
mul_x_get_global_offset_symend:
	.long 0xbf800000                                           // 000000067CF0: BF800000
	.long 0xbf800000                                           // 000000067CF4: BF800000
	.long 0xbf800000                                           // 000000067CF8: BF800000
	.long 0xbf800000                                           // 000000067CFC: BF800000

	.p2align	8
	.type	mul_get_global_offset_get_global_offset,@function
	.size	mul_get_global_offset_get_global_offset, mul_get_global_offset_get_global_offset_symend-mul_get_global_offset_get_global_offset
mul_get_global_offset_get_global_offset:
	s_clause 0x2                                               // 000000067D00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067D04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000067D0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000067D14: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000067D1C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000067D28: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000067D2C: D6100005 02291500
	s_lshl_b32 s3, s3, 4                                       // 000000067D34: 84038403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067D38: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000067D40: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000067D44: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000067D48: D6550001 04040408
	s_lshl_b32 s2, s4, 1                                       // 000000067D50: 84028104
	s_mul_i32 s4, s8, s8                                       // 000000067D54: 96040808
	s_mul_i32 s6, s5, s5                                       // 000000067D58: 96060505
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 000000067D5C: BF8704B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000067D60: D73C0003 00020282
	v_add3_u32 v1, s10, s3, v5                                 // 000000067D68: D6550001 0414060A
	s_mul_i32 s3, s10, s10                                     // 000000067D70: 96030A0A
	v_dual_mov_b32 v7, s4 :: v_dual_mov_b32 v8, s3             // 000000067D74: CA100004 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000067D7C: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000067D80: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 000000067D88: D6550001 04000405
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000067D90: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000067D98: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000067D9C: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000067DA4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000067DAC: 400C0C01
	v_mov_b32_e32 v2, s6                                       // 000000067DB0: 7E040206
	s_delay_alu instid0(VALU_DEP_4)                            // 000000067DB4: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000067DB8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000067DC0: 40020201
	s_clause 0x2                                               // 000000067DC4: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000067DC8: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000067DD0: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 000000067DD8: DC6A0000 007C0200
	s_nop 0                                                    // 000000067DE0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067DE4: BFB60003
	s_endpgm                                                   // 000000067DE8: BFB00000
mul_get_global_offset_get_global_offset_symend:
	.long 0xbf800000                                           // 000000067DEC: BF800000
	.long 0xbf800000                                           // 000000067DF0: BF800000
	.long 0xbf800000                                           // 000000067DF4: BF800000
	.long 0xbf800000                                           // 000000067DF8: BF800000
	.long 0xbf800000                                           // 000000067DFC: BF800000

	.p2align	8
	.type	mul_get_local_id_get_global_offset,@function
	.size	mul_get_local_id_get_global_offset, mul_get_local_id_get_global_offset_symend-mul_get_local_id_get_global_offset
mul_get_local_id_get_global_offset:
	s_clause 0x2                                               // 000000067E00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067E04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000067E0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000067E14: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 000000067E1C: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000067E28: 84028302
	v_bfe_u32 v6, v0, 10, 10                                   // 000000067E2C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067E34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000067E3C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000067E40: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 000000067E44: D6550001 04140408
	s_lshl_b32 s2, s3, 2                                       // 000000067E4C: 84028203
	v_mul_lo_u32 v7, v5, s8                                    // 000000067E50: D72C0007 00001105
	v_mul_lo_u32 v8, v6, s10                                   // 000000067E58: D72C0008 00001506
	v_mul_lo_u32 v9, v0, s5                                    // 000000067E60: D72C0009 00000B00
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000067E68: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 000000067E70: D6550001 0418040A
	s_lshl_b32 s2, s4, 1                                       // 000000067E78: 84028104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000067E7C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000067E80: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 000000067E88: D6550001 04000405
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000067E90: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000067E98: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000067E9C: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000067EA0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000067EA8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000067EB0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000067EB4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000067EBC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000067EC0: 40020201
	s_clause 0x2                                               // 000000067EC4: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000067EC8: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000067ED0: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 000000067ED8: DC6A0000 007C0900
	s_nop 0                                                    // 000000067EE0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067EE4: BFB60003
	s_endpgm                                                   // 000000067EE8: BFB00000
mul_get_local_id_get_global_offset_symend:
	.long 0xbf800000                                           // 000000067EEC: BF800000
	.long 0xbf800000                                           // 000000067EF0: BF800000
	.long 0xbf800000                                           // 000000067EF4: BF800000
	.long 0xbf800000                                           // 000000067EF8: BF800000
	.long 0xbf800000                                           // 000000067EFC: BF800000

	.p2align	8
	.type	mul_get_group_id_get_global_offset,@function
	.size	mul_get_group_id_get_global_offset, mul_get_group_id_get_global_offset_symend-mul_get_group_id_get_global_offset
mul_get_group_id_get_global_offset:
	s_clause 0x2                                               // 000000067F00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000067F04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000067F0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000067F14: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000067F1C: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 000000067F28: 84068102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000067F2C: D6100005 02291500
	s_lshl_b32 s7, s3, 4                                       // 000000067F34: 84078403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000067F38: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000067F40: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000067F44: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 000000067F48: D6550001 04040C08
	s_lshl_b32 s6, s4, 1                                       // 000000067F50: 84068104
	s_mul_i32 s2, s2, s8                                       // 000000067F54: 96020802
	s_mul_i32 s3, s3, s10                                      // 000000067F58: 96030A03
	s_mul_i32 s4, s4, s5                                       // 000000067F5C: 96040504
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000067F60: D73C0003 00020282
	v_add3_u32 v1, s10, s7, v5                                 // 000000067F68: D6550001 04140E0A
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 000000067F70: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000067F78: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000067F7C: D73C0005 00020282
	v_add3_u32 v1, s5, s6, v0                                  // 000000067F84: D6550001 04000C05
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000067F8C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000067F94: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000067F98: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000067FA0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000067FA8: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 000000067FAC: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 000000067FB0: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000067FB4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000067FBC: 40020201
	s_clause 0x2                                               // 000000067FC0: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000067FC4: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000067FCC: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 000000067FD4: DC6A0000 007C0200
	s_nop 0                                                    // 000000067FDC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000067FE0: BFB60003
	s_endpgm                                                   // 000000067FE4: BFB00000
mul_get_group_id_get_global_offset_symend:
	.long 0xbf800000                                           // 000000067FE8: BF800000
	.long 0xbf800000                                           // 000000067FEC: BF800000
	.long 0xbf800000                                           // 000000067FF0: BF800000
	.long 0xbf800000                                           // 000000067FF4: BF800000
	.long 0xbf800000                                           // 000000067FF8: BF800000
	.long 0xbf800000                                           // 000000067FFC: BF800000

	.p2align	8
	.type	mul_get_local_size_get_global_offset,@function
	.size	mul_get_local_size_get_global_offset, mul_get_local_size_get_global_offset_symend-mul_get_local_size_get_global_offset
mul_get_local_size_get_global_offset:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000068000: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000068008: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006800C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000068010: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000068014: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000068018: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006801C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000068020: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006802C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068034: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006803C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000068040: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000068044: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000068048: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006804C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000068050: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000068054: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 000000068058: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006805C: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000068060: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000068064: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 000000068068: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006806C: BF870009
	s_add_u32 s4, s5, s4                                       // 000000068070: 80040405
	s_addc_u32 s5, s11, 0                                      // 000000068074: 8205800B
	s_clause 0x2                                               // 000000068078: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006807C: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 000000068084: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006808C: DC4A0000 09040002
	s_clause 0x2                                               // 000000068094: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000068098: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 0000000680A0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000680A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000680B0: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 0000000680B4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000680BC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 0000000680C0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 0000000680C8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 0000000680D0: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v0                                 // 0000000680D8: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000680E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000680E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000680EC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000680F0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000680F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000068100: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000068104: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000068108: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000068110: 40020201
	s_waitcnt vmcnt(2)                                         // 000000068114: BF890BF7
	v_mul_lo_u32 v2, s4, v7                                    // 000000068118: D72C0002 00020E04
	s_waitcnt vmcnt(1)                                         // 000000068120: BF8907F7
	v_mul_lo_u32 v7, s6, v8                                    // 000000068124: D72C0007 00021006
	s_waitcnt vmcnt(0)                                         // 00000006812C: BF8903F7
	v_mul_lo_u32 v8, s2, v9                                    // 000000068130: D72C0008 00021202
	s_clause 0x2                                               // 000000068138: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006813C: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 000000068144: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006814C: DC6A0000 007C0800
	s_nop 0                                                    // 000000068154: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068158: BFB60003
	s_endpgm                                                   // 00000006815C: BFB00000
mul_get_local_size_get_global_offset_symend:
	.long 0xbf800000                                           // 000000068160: BF800000
	.long 0xbf800000                                           // 000000068164: BF800000
	.long 0xbf800000                                           // 000000068168: BF800000
	.long 0xbf800000                                           // 00000006816C: BF800000
	.long 0xbf800000                                           // 000000068170: BF800000
	.long 0xbf800000                                           // 000000068174: BF800000
	.long 0xbf800000                                           // 000000068178: BF800000
	.long 0xbf800000                                           // 00000006817C: BF800000
	.long 0xbf800000                                           // 000000068180: BF800000
	.long 0xbf800000                                           // 000000068184: BF800000
	.long 0xbf800000                                           // 000000068188: BF800000
	.long 0xbf800000                                           // 00000006818C: BF800000
	.long 0xbf800000                                           // 000000068190: BF800000
	.long 0xbf800000                                           // 000000068194: BF800000
	.long 0xbf800000                                           // 000000068198: BF800000
	.long 0xbf800000                                           // 00000006819C: BF800000
	.long 0xbf800000                                           // 0000000681A0: BF800000
	.long 0xbf800000                                           // 0000000681A4: BF800000
	.long 0xbf800000                                           // 0000000681A8: BF800000
	.long 0xbf800000                                           // 0000000681AC: BF800000
	.long 0xbf800000                                           // 0000000681B0: BF800000
	.long 0xbf800000                                           // 0000000681B4: BF800000
	.long 0xbf800000                                           // 0000000681B8: BF800000
	.long 0xbf800000                                           // 0000000681BC: BF800000
	.long 0xbf800000                                           // 0000000681C0: BF800000
	.long 0xbf800000                                           // 0000000681C4: BF800000
	.long 0xbf800000                                           // 0000000681C8: BF800000
	.long 0xbf800000                                           // 0000000681CC: BF800000
	.long 0xbf800000                                           // 0000000681D0: BF800000
	.long 0xbf800000                                           // 0000000681D4: BF800000
	.long 0xbf800000                                           // 0000000681D8: BF800000
	.long 0xbf800000                                           // 0000000681DC: BF800000
	.long 0xbf800000                                           // 0000000681E0: BF800000
	.long 0xbf800000                                           // 0000000681E4: BF800000
	.long 0xbf800000                                           // 0000000681E8: BF800000
	.long 0xbf800000                                           // 0000000681EC: BF800000
	.long 0xbf800000                                           // 0000000681F0: BF800000
	.long 0xbf800000                                           // 0000000681F4: BF800000
	.long 0xbf800000                                           // 0000000681F8: BF800000
	.long 0xbf800000                                           // 0000000681FC: BF800000

	.p2align	8
	.type	mul_get_global_id_get_global_offset,@function
	.size	mul_get_global_id_get_global_offset, mul_get_global_id_get_global_offset_symend-mul_get_global_id_get_global_offset
mul_get_global_id_get_global_offset:
	s_clause 0x2                                               // 000000068200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006820C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068214: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006821C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 000000068228: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 000000068230: D6100004 02292900
	s_mov_b32 s33, 0                                           // 000000068238: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006823C: BF870193
	v_lshl_or_b32 v0, s2, 1, v2                                // 000000068240: D6560000 04090202
	v_lshl_or_b32 v5, s3, 1, v3                                // 000000068248: D6560005 040D0203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068250: BF870223
	v_lshl_or_b32 v7, s4, 2, v4                                // 000000068254: D6560007 04110404
	v_mov_b32_e32 v2, v1                                       // 00000006825C: 7E040301
	v_lshlrev_b64 v[3:4], 2, v[0:1]                            // 000000068260: D73C0003 00020082
	s_waitcnt lgkmcnt(0)                                       // 000000068268: BF89FC07
	v_dual_mov_b32 v6, v1 :: v_dual_add_nc_u32 v1, s10, v5     // 00000006826C: CA200101 06000A0A
	v_add_nc_u32_e32 v5, s5, v7                                // 000000068274: 4A0A0E05
	v_add_nc_u32_e32 v0, s8, v0                                // 000000068278: 4A000008
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006827C: BF870214
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000068280: D7006A03 00020600
	v_lshlrev_b64 v[7:8], 2, v[1:2]                            // 000000068288: D73C0007 00020282
	v_mul_lo_u32 v9, s10, v1                                   // 000000068290: D72C0009 0002020A
	s_delay_alu instid0(VALU_DEP_4)                            // 000000068298: BF870004
	v_mul_lo_u32 v2, v0, s8                                    // 00000006829C: D72C0002 00001100
	v_lshlrev_b64 v[0:1], 2, v[5:6]                            // 0000000682A4: D73C0000 00020A82
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000682AC: 40080801
	v_mul_lo_u32 v10, s5, v5                                   // 0000000682B0: D72C000A 00020A05
	v_add_co_u32 v5, vcc_lo, s0, v7                            // 0000000682B8: D7006A05 00020E00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v8, vcc_lo             // 0000000682C0: 400C1001
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000682C4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000682CC: 40020201
	s_clause 0x2                                               // 0000000682D0: BF850002
	global_store_b32 v[3:4], v2, off                           // 0000000682D4: DC6A0000 007C0203
	global_store_b32 v[5:6], v9, off                           // 0000000682DC: DC6A0000 007C0905
	global_store_b32 v[0:1], v10, off                          // 0000000682E4: DC6A0000 007C0A00
	s_nop 0                                                    // 0000000682EC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000682F0: BFB60003
	s_endpgm                                                   // 0000000682F4: BFB00000
mul_get_global_id_get_global_offset_symend:
	.long 0xbf800000                                           // 0000000682F8: BF800000
	.long 0xbf800000                                           // 0000000682FC: BF800000

	.p2align	8
	.type	mul_get_global_size_get_global_offset,@function
	.size	mul_get_global_size_get_global_offset, mul_get_global_size_get_global_offset_symend-mul_get_global_size_get_global_offset
mul_get_global_size_get_global_offset:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000068300: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000006830C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000068310: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068318: D6100000 02292900
	s_clause 0x1                                               // 000000068320: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000068324: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006832C: DC4A0026 08000002
	s_clause 0x3                                               // 000000068334: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068338: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000068340: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000068348: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000068350: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 000000068358: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006835C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000068360: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 000000068368: 84028103
	s_lshl_b32 s3, s4, 1                                       // 00000006836C: 84038104
	s_lshl_b32 s4, s13, 1                                      // 000000068370: 8404810D
	s_lshl_b32 s6, s14, 1                                      // 000000068374: 8406810E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068378: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 000000068380: D6550001 0414040A
	s_lshl_b32 s2, s12, 4                                      // 000000068388: 8402840C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006838C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068390: D73C0005 00020282
	v_add3_u32 v1, s5, s3, v0                                  // 000000068398: D6550001 04000605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000683A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000683A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000683AC: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000683B0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000683B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000683C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000683C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000683CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000683D0: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000683D4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 0000000683D8: 32120E90
	v_and_b32_e32 v7, 0xffff, v7                               // 0000000683DC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 0000000683E4: BF8903F7
	v_add_nc_u32_e32 v2, s6, v8                                // 0000000683E8: 4A041006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000683EC: BF870193
	v_add_nc_u32_e32 v8, s4, v9                                // 0000000683F0: 4A101204
	v_add_nc_u32_e32 v7, s2, v7                                // 0000000683F4: 4A0E0E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000683F8: BF870193
	v_mul_lo_u32 v2, v2, s5                                    // 0000000683FC: D72C0002 00000B02
	v_mul_lo_u32 v8, v8, s10                                   // 000000068404: D72C0008 00001508
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006840C: BF870003
	v_mul_lo_u32 v7, v7, s8                                    // 000000068410: D72C0007 00001107
	s_clause 0x2                                               // 000000068418: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006841C: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000068424: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006842C: DC6A0000 007C0200
	s_nop 0                                                    // 000000068434: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068438: BFB60003
	s_endpgm                                                   // 00000006843C: BFB00000
mul_get_global_size_get_global_offset_symend:
	.long 0xbf800000                                           // 000000068440: BF800000
	.long 0xbf800000                                           // 000000068444: BF800000
	.long 0xbf800000                                           // 000000068448: BF800000
	.long 0xbf800000                                           // 00000006844C: BF800000
	.long 0xbf800000                                           // 000000068450: BF800000
	.long 0xbf800000                                           // 000000068454: BF800000
	.long 0xbf800000                                           // 000000068458: BF800000
	.long 0xbf800000                                           // 00000006845C: BF800000
	.long 0xbf800000                                           // 000000068460: BF800000
	.long 0xbf800000                                           // 000000068464: BF800000
	.long 0xbf800000                                           // 000000068468: BF800000
	.long 0xbf800000                                           // 00000006846C: BF800000
	.long 0xbf800000                                           // 000000068470: BF800000
	.long 0xbf800000                                           // 000000068474: BF800000
	.long 0xbf800000                                           // 000000068478: BF800000
	.long 0xbf800000                                           // 00000006847C: BF800000
	.long 0xbf800000                                           // 000000068480: BF800000
	.long 0xbf800000                                           // 000000068484: BF800000
	.long 0xbf800000                                           // 000000068488: BF800000
	.long 0xbf800000                                           // 00000006848C: BF800000
	.long 0xbf800000                                           // 000000068490: BF800000
	.long 0xbf800000                                           // 000000068494: BF800000
	.long 0xbf800000                                           // 000000068498: BF800000
	.long 0xbf800000                                           // 00000006849C: BF800000
	.long 0xbf800000                                           // 0000000684A0: BF800000
	.long 0xbf800000                                           // 0000000684A4: BF800000
	.long 0xbf800000                                           // 0000000684A8: BF800000
	.long 0xbf800000                                           // 0000000684AC: BF800000
	.long 0xbf800000                                           // 0000000684B0: BF800000
	.long 0xbf800000                                           // 0000000684B4: BF800000
	.long 0xbf800000                                           // 0000000684B8: BF800000
	.long 0xbf800000                                           // 0000000684BC: BF800000
	.long 0xbf800000                                           // 0000000684C0: BF800000
	.long 0xbf800000                                           // 0000000684C4: BF800000
	.long 0xbf800000                                           // 0000000684C8: BF800000
	.long 0xbf800000                                           // 0000000684CC: BF800000
	.long 0xbf800000                                           // 0000000684D0: BF800000
	.long 0xbf800000                                           // 0000000684D4: BF800000
	.long 0xbf800000                                           // 0000000684D8: BF800000
	.long 0xbf800000                                           // 0000000684DC: BF800000
	.long 0xbf800000                                           // 0000000684E0: BF800000
	.long 0xbf800000                                           // 0000000684E4: BF800000
	.long 0xbf800000                                           // 0000000684E8: BF800000
	.long 0xbf800000                                           // 0000000684EC: BF800000
	.long 0xbf800000                                           // 0000000684F0: BF800000
	.long 0xbf800000                                           // 0000000684F4: BF800000
	.long 0xbf800000                                           // 0000000684F8: BF800000
	.long 0xbf800000                                           // 0000000684FC: BF800000

	.p2align	8
	.type	mul_get_num_groups_get_global_offset,@function
	.size	mul_get_num_groups_get_global_offset, mul_get_num_groups_get_global_offset_symend-mul_get_num_groups_get_global_offset
mul_get_num_groups_get_global_offset:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000068500: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006850C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000068514: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000068518: D6100005 02291500
	s_clause 0x1                                               // 000000068520: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000068524: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006852C: DC4A0026 08000002
	s_clause 0x2                                               // 000000068534: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068538: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000068540: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000068548: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000068550: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068554: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006855C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000068560: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000068564: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006856C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068570: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 000000068578: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000068580: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068584: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v0                                  // 00000006858C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000068594: BF870094
	v_add_co_u32 v3, s0, s6, v3                                // 000000068598: D7000003 00020606
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 0000000685A0: D5200004 00020807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000685A8: BF870094
	v_add_co_u32 v5, s0, s6, v5                                // 0000000685AC: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000685B4: D5200006 00020C07
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000685BC: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 0000000685C4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 0000000685C8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000685CC: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 0000000685D0: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 0000000685D4: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000685DC: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 0000000685E0: 7C7A1280
	s_addc_u32 s1, s12, 0                                      // 0000000685E4: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000685E8: BF870009
	s_mul_i32 s1, s1, s8                                       // 0000000685EC: 96010801
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000685F0: BF07806A
	v_mov_b32_e32 v2, s1                                       // 0000000685F4: 7E040201
	s_addc_u32 s1, s13, 0                                      // 0000000685F8: 8201800D
	s_cmp_lg_u32 s0, 0                                         // 0000000685FC: BF078000
	s_mul_i32 s0, s1, s10                                      // 000000068600: 96000A01
	s_addc_u32 s1, s14, 0                                      // 000000068604: 8201800E
	v_mov_b32_e32 v7, s0                                       // 000000068608: 7E0E0200
	s_mul_i32 s0, s1, s5                                       // 00000006860C: 96000501
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000068610: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000068618: 40020207
	v_mov_b32_e32 v8, s0                                       // 00000006861C: 7E100200
	s_clause 0x2                                               // 000000068620: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000068624: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006862C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 000000068634: DC6A0000 007C0800
	s_nop 0                                                    // 00000006863C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068640: BFB60003
	s_endpgm                                                   // 000000068644: BFB00000
mul_get_num_groups_get_global_offset_symend:
	.long 0xbf800000                                           // 000000068648: BF800000
	.long 0xbf800000                                           // 00000006864C: BF800000
	.long 0xbf800000                                           // 000000068650: BF800000
	.long 0xbf800000                                           // 000000068654: BF800000
	.long 0xbf800000                                           // 000000068658: BF800000
	.long 0xbf800000                                           // 00000006865C: BF800000
	.long 0xbf800000                                           // 000000068660: BF800000
	.long 0xbf800000                                           // 000000068664: BF800000
	.long 0xbf800000                                           // 000000068668: BF800000
	.long 0xbf800000                                           // 00000006866C: BF800000
	.long 0xbf800000                                           // 000000068670: BF800000
	.long 0xbf800000                                           // 000000068674: BF800000
	.long 0xbf800000                                           // 000000068678: BF800000
	.long 0xbf800000                                           // 00000006867C: BF800000
	.long 0xbf800000                                           // 000000068680: BF800000
	.long 0xbf800000                                           // 000000068684: BF800000
	.long 0xbf800000                                           // 000000068688: BF800000
	.long 0xbf800000                                           // 00000006868C: BF800000
	.long 0xbf800000                                           // 000000068690: BF800000
	.long 0xbf800000                                           // 000000068694: BF800000
	.long 0xbf800000                                           // 000000068698: BF800000
	.long 0xbf800000                                           // 00000006869C: BF800000
	.long 0xbf800000                                           // 0000000686A0: BF800000
	.long 0xbf800000                                           // 0000000686A4: BF800000
	.long 0xbf800000                                           // 0000000686A8: BF800000
	.long 0xbf800000                                           // 0000000686AC: BF800000
	.long 0xbf800000                                           // 0000000686B0: BF800000
	.long 0xbf800000                                           // 0000000686B4: BF800000
	.long 0xbf800000                                           // 0000000686B8: BF800000
	.long 0xbf800000                                           // 0000000686BC: BF800000
	.long 0xbf800000                                           // 0000000686C0: BF800000
	.long 0xbf800000                                           // 0000000686C4: BF800000
	.long 0xbf800000                                           // 0000000686C8: BF800000
	.long 0xbf800000                                           // 0000000686CC: BF800000
	.long 0xbf800000                                           // 0000000686D0: BF800000
	.long 0xbf800000                                           // 0000000686D4: BF800000
	.long 0xbf800000                                           // 0000000686D8: BF800000
	.long 0xbf800000                                           // 0000000686DC: BF800000
	.long 0xbf800000                                           // 0000000686E0: BF800000
	.long 0xbf800000                                           // 0000000686E4: BF800000
	.long 0xbf800000                                           // 0000000686E8: BF800000
	.long 0xbf800000                                           // 0000000686EC: BF800000
	.long 0xbf800000                                           // 0000000686F0: BF800000
	.long 0xbf800000                                           // 0000000686F4: BF800000
	.long 0xbf800000                                           // 0000000686F8: BF800000
	.long 0xbf800000                                           // 0000000686FC: BF800000

	.p2align	8
	.type	mul_get_work_dim_get_global_offset,@function
	.size	mul_get_work_dim_get_global_offset, mul_get_work_dim_get_global_offset_symend-mul_get_work_dim_get_global_offset
mul_get_work_dim_get_global_offset:
	s_clause 0x3                                               // 000000068700: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068704: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000006870C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 000000068714: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006871C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000068724: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000068730: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000068734: D6100005 02291500
	s_lshl_b32 s3, s3, 1                                       // 00000006873C: 84038103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068740: D6100000 02292900
	s_lshl_b32 s4, s4, 2                                       // 000000068748: 84048204
	s_mov_b32 s33, 0                                           // 00000006874C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000068750: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000068754: D6550001 04040408
	s_and_b32 s2, s5, 0xffff                                   // 00000006875C: 8B02FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000068764: BF870099
	s_mul_i32 s5, s8, s2                                       // 000000068768: 96050208
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006876C: D73C0003 00020282
	v_add3_u32 v1, s10, s3, v5                                 // 000000068774: D6550001 0414060A
	s_mul_i32 s3, s10, s2                                      // 00000006877C: 9603020A
	s_mul_i32 s2, s6, s2                                       // 000000068780: 96020206
	v_dual_mov_b32 v7, s5 :: v_dual_mov_b32 v8, s3             // 000000068784: CA100005 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006878C: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068790: D73C0005 00020282
	v_add3_u32 v1, s6, s4, v0                                  // 000000068798: D6550001 04000806
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000687A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000687A8: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000687AC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000687B4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000687BC: 400C0C01
	v_mov_b32_e32 v2, s2                                       // 0000000687C0: 7E040202
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000687C4: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000687C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000687D0: 40020201
	s_clause 0x2                                               // 0000000687D4: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000687D8: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000687E0: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 0000000687E8: DC6A0000 007C0200
	s_nop 0                                                    // 0000000687F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000687F4: BFB60003
	s_endpgm                                                   // 0000000687F8: BFB00000
mul_get_work_dim_get_global_offset_symend:
	.long 0xbf800000                                           // 0000000687FC: BF800000

	.p2align	8
	.type	mul_x_get_local_id,@function
	.size	mul_x_get_local_id, mul_x_get_local_id_symend-mul_x_get_local_id
mul_x_get_local_id:
	s_clause 0x3                                               // 000000068800: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068804: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 00000006880C: F4000140 F8000008
	s_load_b32 s6, s[0:1], 0x48                                // 000000068814: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006881C: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 000000068824: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000068830: 84028402
	v_bfe_u32 v6, v0, 10, 10                                   // 000000068834: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006883C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000068844: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000068848: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000006884C: D6550001 04140408
	s_lshl_b32 s2, s3, 1                                       // 000000068854: 84028103
	v_mul_lo_u32 v7, v5, s5                                    // 000000068858: D72C0007 00000B05
	v_mul_lo_u32 v8, v6, s5                                    // 000000068860: D72C0008 00000B06
	v_mul_lo_u32 v9, v0, s5                                    // 000000068868: D72C0009 00000B00
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068870: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 000000068878: D6550001 0418040A
	s_lshl_b32 s2, s4, 1                                       // 000000068880: 84028104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068884: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068888: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 000000068890: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000068898: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000688A0: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000688A4: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000688A8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000688B0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000688B8: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000688BC: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000688C4: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000688C8: 40020201
	s_clause 0x2                                               // 0000000688CC: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000688D0: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000688D8: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 0000000688E0: DC6A0000 007C0900
	s_nop 0                                                    // 0000000688E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000688EC: BFB60003
	s_endpgm                                                   // 0000000688F0: BFB00000
mul_x_get_local_id_symend:
	.long 0xbf800000                                           // 0000000688F4: BF800000
	.long 0xbf800000                                           // 0000000688F8: BF800000
	.long 0xbf800000                                           // 0000000688FC: BF800000

	.p2align	8
	.type	mul_get_global_offset_get_local_id,@function
	.size	mul_get_global_offset_get_local_id, mul_get_global_offset_get_local_id_symend-mul_get_global_offset_get_local_id
mul_get_global_offset_get_local_id:
	s_clause 0x2                                               // 000000068900: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068904: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006890C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068914: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000006891C: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000068928: 84028102
	v_bfe_u32 v6, v0, 10, 10                                   // 00000006892C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068934: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006893C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000068940: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 000000068944: D6550001 04140408
	s_lshl_b32 s2, s3, 4                                       // 00000006894C: 84028403
	v_mul_lo_u32 v7, v5, s8                                    // 000000068950: D72C0007 00001105
	v_mul_lo_u32 v8, v6, s10                                   // 000000068958: D72C0008 00001506
	v_mul_lo_u32 v9, v0, s5                                    // 000000068960: D72C0009 00000B00
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068968: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 000000068970: D6550001 0418040A
	s_lshl_b32 s2, s4, 1                                       // 000000068978: 84028104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006897C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068980: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 000000068988: D6550001 04000405
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000068990: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000068998: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006899C: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000689A0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000689A8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000689B0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000689B4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000689BC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000689C0: 40020201
	s_clause 0x2                                               // 0000000689C4: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000689C8: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000689D0: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 0000000689D8: DC6A0000 007C0900
	s_nop 0                                                    // 0000000689E0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000689E4: BFB60003
	s_endpgm                                                   // 0000000689E8: BFB00000
mul_get_global_offset_get_local_id_symend:
	.long 0xbf800000                                           // 0000000689EC: BF800000
	.long 0xbf800000                                           // 0000000689F0: BF800000
	.long 0xbf800000                                           // 0000000689F4: BF800000
	.long 0xbf800000                                           // 0000000689F8: BF800000
	.long 0xbf800000                                           // 0000000689FC: BF800000

	.p2align	8
	.type	mul_get_local_id_get_local_id,@function
	.size	mul_get_local_id_get_local_id, mul_get_local_id_get_local_id_symend-mul_get_local_id_get_local_id
mul_get_local_id_get_local_id:
	s_clause 0x2                                               // 000000068A00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068A04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000068A0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068A14: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 000000068A1C: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000068A28: 84028302
	v_bfe_u32 v6, v0, 10, 10                                   // 000000068A2C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068A34: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000068A3C: BF8701A3
	v_mul_u32_u24_e32 v7, v5, v5                               // 000000068A40: 160E0B05
	s_mov_b32 s33, 0                                           // 000000068A44: BEA10080
	v_mul_u32_u24_e32 v8, v6, v6                               // 000000068A48: 16100D06
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000068A4C: BF8700C3
	v_mul_u32_u24_e32 v9, v0, v0                               // 000000068A50: 16120100
	s_waitcnt lgkmcnt(0)                                       // 000000068A54: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 000000068A58: D6550001 04140408
	s_lshl_b32 s2, s3, 2                                       // 000000068A60: 84028203
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068A64: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 000000068A6C: D6550001 0418040A
	s_lshl_b32 s2, s4, 1                                       // 000000068A74: 84028104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068A78: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068A7C: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 000000068A84: D6550001 04000405
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000068A8C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000068A94: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000068A98: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000068A9C: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000068AA4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000068AAC: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000068AB0: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000068AB8: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000068ABC: 40020201
	s_clause 0x2                                               // 000000068AC0: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000068AC4: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000068ACC: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 000000068AD4: DC6A0000 007C0900
	s_nop 0                                                    // 000000068ADC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068AE0: BFB60003
	s_endpgm                                                   // 000000068AE4: BFB00000
mul_get_local_id_get_local_id_symend:
	.long 0xbf800000                                           // 000000068AE8: BF800000
	.long 0xbf800000                                           // 000000068AEC: BF800000
	.long 0xbf800000                                           // 000000068AF0: BF800000
	.long 0xbf800000                                           // 000000068AF4: BF800000
	.long 0xbf800000                                           // 000000068AF8: BF800000
	.long 0xbf800000                                           // 000000068AFC: BF800000

	.p2align	8
	.type	mul_get_group_id_get_local_id,@function
	.size	mul_get_group_id_get_local_id, mul_get_group_id_get_local_id_symend-mul_get_group_id_get_local_id
mul_get_group_id_get_local_id:
	s_clause 0x2                                               // 000000068B00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068B04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000068B0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068B14: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 000000068B1C: CA240080 020400FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 000000068B28: 84068102
	v_bfe_u32 v6, v0, 10, 10                                   // 000000068B2C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068B34: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000068B3C: BF8701A3
	v_mul_lo_u32 v7, s2, v5                                    // 000000068B40: D72C0007 00020A02
	s_mov_b32 s33, 0                                           // 000000068B48: BEA10080
	v_mul_lo_u32 v8, s3, v6                                    // 000000068B4C: D72C0008 00020C03
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000068B54: BF8700C3
	v_mul_lo_u32 v9, s4, v0                                    // 000000068B58: D72C0009 00020004
	s_waitcnt lgkmcnt(0)                                       // 000000068B60: BF89FC07
	v_add3_u32 v1, s8, s6, v5                                  // 000000068B64: D6550001 04140C08
	s_lshl_b32 s6, s3, 4                                       // 000000068B6C: 84068403
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068B70: D73C0003 00020282
	v_add3_u32 v1, s10, s6, v6                                 // 000000068B78: D6550001 04180C0A
	s_lshl_b32 s6, s4, 1                                       // 000000068B80: 84068104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068B84: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068B88: D73C0005 00020282
	v_add3_u32 v1, s5, s6, v0                                  // 000000068B90: D6550001 04000C05
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000068B98: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000068BA0: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000068BA4: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000068BA8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000068BB0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000068BB8: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000068BBC: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000068BC4: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000068BC8: 40020201
	s_clause 0x2                                               // 000000068BCC: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000068BD0: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000068BD8: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 000000068BE0: DC6A0000 007C0900
	s_nop 0                                                    // 000000068BE8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068BEC: BFB60003
	s_endpgm                                                   // 000000068BF0: BFB00000
mul_get_group_id_get_local_id_symend:
	.long 0xbf800000                                           // 000000068BF4: BF800000
	.long 0xbf800000                                           // 000000068BF8: BF800000
	.long 0xbf800000                                           // 000000068BFC: BF800000

	.p2align	8
	.type	mul_get_local_size_get_local_id,@function
	.size	mul_get_local_size_get_local_id, mul_get_local_size_get_local_id_symend-mul_get_local_size_get_local_id
mul_get_local_size_get_local_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000068C00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000068C08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000068C0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000068C10: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000068C14: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000068C18: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 000000068C1C: 840E8204
	v_mov_b32_e32 v2, 0                                        // 000000068C20: 7E040280
	v_and_b32_e32 v10, 0x3ff, v0                               // 000000068C24: 361400FF 000003FF
	v_bfe_u32 v11, v0, 10, 10                                  // 000000068C2C: D610000B 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 000000068C34: D610000C 02292900
	s_mov_b32 s33, 0                                           // 000000068C3C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000068C40: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000068C44: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000068C48: BF8704C9
	s_add_u32 s6, s5, s2                                       // 000000068C4C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000068C50: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000068C54: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 000000068C58: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000068C5C: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000068C60: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000068C64: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 000000068C68: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000068C6C: BF870009
	s_add_u32 s4, s5, s4                                       // 000000068C70: 80040405
	s_addc_u32 s5, s11, 0                                      // 000000068C74: 8205800B
	s_clause 0x2                                               // 000000068C78: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 000000068C7C: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 000000068C84: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 000000068C8C: DC4A0000 09040002
	s_clause 0x2                                               // 000000068C94: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000068C98: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 000000068CA0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068CA8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000068CB0: BF89FC07
	v_add3_u32 v1, s4, s12, v10                                // 000000068CB4: D6550001 04281804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000068CBC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068CC0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v11                                // 000000068CC8: D6550001 042C1A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068CD0: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v12                                // 000000068CD8: D6550001 04301C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000068CE0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000068CE4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000068CEC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000068CF0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000068CF8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000068D00: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000068D04: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000068D08: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000068D10: 40020201
	s_waitcnt vmcnt(2)                                         // 000000068D14: BF890BF7
	v_mul_u32_u24_e32 v2, v10, v7                              // 000000068D18: 16040F0A
	s_waitcnt vmcnt(1)                                         // 000000068D1C: BF8907F7
	v_mul_u32_u24_e32 v7, v11, v8                              // 000000068D20: 160E110B
	s_waitcnt vmcnt(0)                                         // 000000068D24: BF8903F7
	v_mul_u32_u24_e32 v8, v12, v9                              // 000000068D28: 1610130C
	s_clause 0x2                                               // 000000068D2C: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000068D30: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 000000068D38: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 000000068D40: DC6A0000 007C0800
	s_nop 0                                                    // 000000068D48: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068D4C: BFB60003
	s_endpgm                                                   // 000000068D50: BFB00000
mul_get_local_size_get_local_id_symend:
	.long 0xbf800000                                           // 000000068D54: BF800000
	.long 0xbf800000                                           // 000000068D58: BF800000
	.long 0xbf800000                                           // 000000068D5C: BF800000
	.long 0xbf800000                                           // 000000068D60: BF800000
	.long 0xbf800000                                           // 000000068D64: BF800000
	.long 0xbf800000                                           // 000000068D68: BF800000
	.long 0xbf800000                                           // 000000068D6C: BF800000
	.long 0xbf800000                                           // 000000068D70: BF800000
	.long 0xbf800000                                           // 000000068D74: BF800000
	.long 0xbf800000                                           // 000000068D78: BF800000
	.long 0xbf800000                                           // 000000068D7C: BF800000
	.long 0xbf800000                                           // 000000068D80: BF800000
	.long 0xbf800000                                           // 000000068D84: BF800000
	.long 0xbf800000                                           // 000000068D88: BF800000
	.long 0xbf800000                                           // 000000068D8C: BF800000
	.long 0xbf800000                                           // 000000068D90: BF800000
	.long 0xbf800000                                           // 000000068D94: BF800000
	.long 0xbf800000                                           // 000000068D98: BF800000
	.long 0xbf800000                                           // 000000068D9C: BF800000
	.long 0xbf800000                                           // 000000068DA0: BF800000
	.long 0xbf800000                                           // 000000068DA4: BF800000
	.long 0xbf800000                                           // 000000068DA8: BF800000
	.long 0xbf800000                                           // 000000068DAC: BF800000
	.long 0xbf800000                                           // 000000068DB0: BF800000
	.long 0xbf800000                                           // 000000068DB4: BF800000
	.long 0xbf800000                                           // 000000068DB8: BF800000
	.long 0xbf800000                                           // 000000068DBC: BF800000
	.long 0xbf800000                                           // 000000068DC0: BF800000
	.long 0xbf800000                                           // 000000068DC4: BF800000
	.long 0xbf800000                                           // 000000068DC8: BF800000
	.long 0xbf800000                                           // 000000068DCC: BF800000
	.long 0xbf800000                                           // 000000068DD0: BF800000
	.long 0xbf800000                                           // 000000068DD4: BF800000
	.long 0xbf800000                                           // 000000068DD8: BF800000
	.long 0xbf800000                                           // 000000068DDC: BF800000
	.long 0xbf800000                                           // 000000068DE0: BF800000
	.long 0xbf800000                                           // 000000068DE4: BF800000
	.long 0xbf800000                                           // 000000068DE8: BF800000
	.long 0xbf800000                                           // 000000068DEC: BF800000
	.long 0xbf800000                                           // 000000068DF0: BF800000
	.long 0xbf800000                                           // 000000068DF4: BF800000
	.long 0xbf800000                                           // 000000068DF8: BF800000
	.long 0xbf800000                                           // 000000068DFC: BF800000

	.p2align	8
	.type	mul_get_global_id_get_local_id,@function
	.size	mul_get_global_id_get_local_id, mul_get_global_id_get_local_id_symend-mul_get_global_id_get_local_id
mul_get_global_id_get_local_id:
	s_clause 0x2                                               // 000000068E00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068E04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000068E0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068E14: F4040000 F8000008
	v_bfe_u32 v10, v0, 10, 10                                  // 000000068E1C: D610000A 02291500
	v_mov_b32_e32 v1, 0                                        // 000000068E24: 7E020280
	v_and_b32_e32 v9, 0x3ff, v0                                // 000000068E28: 361200FF 000003FF
	v_bfe_u32 v11, v0, 20, 10                                  // 000000068E30: D610000B 02292900
	s_mov_b32 s33, 0                                           // 000000068E38: BEA10080
	v_lshl_or_b32 v5, s3, 1, v10                               // 000000068E3C: D6560005 04290203
	v_mov_b32_e32 v2, v1                                       // 000000068E44: 7E040301
	v_lshl_or_b32 v0, s2, 1, v9                                // 000000068E48: D6560000 04250202
	v_lshl_or_b32 v7, s4, 2, v11                               // 000000068E50: D6560007 042D0404
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(VALU_DEP_4)// 000000068E58: BF870252
	v_lshlrev_b64 v[3:4], 2, v[0:1]                            // 000000068E5C: D73C0003 00020082
	s_waitcnt lgkmcnt(0)                                       // 000000068E64: BF89FC07
	v_add_nc_u32_e32 v0, s8, v0                                // 000000068E68: 4A000008
	v_dual_mov_b32 v6, v1 :: v_dual_add_nc_u32 v1, s10, v5     // 000000068E6C: CA200101 06000A0A
	v_add_nc_u32_e32 v5, s5, v7                                // 000000068E74: 4A0A0E05
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000068E78: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000068E80: 40080801
	s_delay_alu instid0(VALU_DEP_4)                            // 000000068E84: BF870004
	v_lshlrev_b64 v[7:8], 2, v[1:2]                            // 000000068E88: D73C0007 00020282
	v_mul_lo_u32 v2, v9, v0                                    // 000000068E90: D72C0002 00020109
	v_mul_lo_u32 v9, v10, v1                                   // 000000068E98: D72C0009 0002030A
	v_lshlrev_b64 v[0:1], 2, v[5:6]                            // 000000068EA0: D73C0000 00020A82
	v_mul_lo_u32 v10, v11, v5                                  // 000000068EA8: D72C000A 00020B0B
	v_add_co_u32 v5, vcc_lo, s0, v7                            // 000000068EB0: D7006A05 00020E00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v8, vcc_lo             // 000000068EB8: 400C1001
	s_delay_alu instid0(VALU_DEP_4)                            // 000000068EBC: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000068EC0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000068EC8: 40020201
	s_clause 0x2                                               // 000000068ECC: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000068ED0: DC6A0000 007C0203
	global_store_b32 v[5:6], v9, off                           // 000000068ED8: DC6A0000 007C0905
	global_store_b32 v[0:1], v10, off                          // 000000068EE0: DC6A0000 007C0A00
	s_nop 0                                                    // 000000068EE8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068EEC: BFB60003
	s_endpgm                                                   // 000000068EF0: BFB00000
mul_get_global_id_get_local_id_symend:
	.long 0xbf800000                                           // 000000068EF4: BF800000
	.long 0xbf800000                                           // 000000068EF8: BF800000
	.long 0xbf800000                                           // 000000068EFC: BF800000

	.p2align	8
	.type	mul_get_global_size_get_local_id,@function
	.size	mul_get_global_size_get_local_id, mul_get_global_size_get_local_id_symend-mul_get_global_size_get_local_id
mul_get_global_size_get_local_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 000000068F00: CA240080 020800FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000068F0C: 84028402
	v_bfe_u32 v10, v0, 10, 10                                  // 000000068F10: D610000A 02291500
	v_bfe_u32 v11, v0, 20, 10                                  // 000000068F18: D610000B 02292900
	s_clause 0x1                                               // 000000068F20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000068F24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000068F2C: DC4A0026 08000002
	s_clause 0x3                                               // 000000068F34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068F38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000068F40: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000068F48: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000068F50: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 000000068F58: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000068F5C: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 000000068F60: D6550001 04240408
	s_lshl_b32 s2, s3, 1                                       // 000000068F68: 84028103
	s_lshl_b32 s3, s4, 1                                       // 000000068F6C: 84038104
	s_lshl_b32 s4, s13, 1                                      // 000000068F70: 8404810D
	s_lshl_b32 s6, s14, 1                                      // 000000068F74: 8406810E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068F78: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v10                                // 000000068F80: D6550001 0428040A
	s_lshl_b32 s2, s12, 4                                      // 000000068F88: 8402840C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068F8C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068F90: D73C0005 00020282
	v_add3_u32 v1, s5, s3, v11                                 // 000000068F98: D6550001 042C0605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000068FA0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000068FA8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000068FAC: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000068FB0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000068FB8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000068FC0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000068FC4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000068FCC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000068FD0: 40020201
	s_waitcnt vmcnt(1)                                         // 000000068FD4: BF8907F7
	v_lshrrev_b32_e32 v12, 16, v7                              // 000000068FD8: 32180E90
	v_and_b32_e32 v7, 0xffff, v7                               // 000000068FDC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 000000068FE4: BF8903F7
	v_add_nc_u32_e32 v2, s6, v8                                // 000000068FE8: 4A041006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000068FEC: BF870193
	v_add_nc_u32_e32 v8, s4, v12                               // 000000068FF0: 4A101804
	v_add_nc_u32_e32 v7, s2, v7                                // 000000068FF4: 4A0E0E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000068FF8: BF870193
	v_mul_lo_u32 v2, v2, v11                                   // 000000068FFC: D72C0002 00021702
	v_mul_lo_u32 v8, v8, v10                                   // 000000069004: D72C0008 00021508
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006900C: BF870003
	v_mul_lo_u32 v7, v7, v9                                    // 000000069010: D72C0007 00021307
	s_clause 0x2                                               // 000000069018: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006901C: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000069024: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006902C: DC6A0000 007C0200
	s_nop 0                                                    // 000000069034: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069038: BFB60003
	s_endpgm                                                   // 00000006903C: BFB00000
mul_get_global_size_get_local_id_symend:
	.long 0xbf800000                                           // 000000069040: BF800000
	.long 0xbf800000                                           // 000000069044: BF800000
	.long 0xbf800000                                           // 000000069048: BF800000
	.long 0xbf800000                                           // 00000006904C: BF800000
	.long 0xbf800000                                           // 000000069050: BF800000
	.long 0xbf800000                                           // 000000069054: BF800000
	.long 0xbf800000                                           // 000000069058: BF800000
	.long 0xbf800000                                           // 00000006905C: BF800000
	.long 0xbf800000                                           // 000000069060: BF800000
	.long 0xbf800000                                           // 000000069064: BF800000
	.long 0xbf800000                                           // 000000069068: BF800000
	.long 0xbf800000                                           // 00000006906C: BF800000
	.long 0xbf800000                                           // 000000069070: BF800000
	.long 0xbf800000                                           // 000000069074: BF800000
	.long 0xbf800000                                           // 000000069078: BF800000
	.long 0xbf800000                                           // 00000006907C: BF800000
	.long 0xbf800000                                           // 000000069080: BF800000
	.long 0xbf800000                                           // 000000069084: BF800000
	.long 0xbf800000                                           // 000000069088: BF800000
	.long 0xbf800000                                           // 00000006908C: BF800000
	.long 0xbf800000                                           // 000000069090: BF800000
	.long 0xbf800000                                           // 000000069094: BF800000
	.long 0xbf800000                                           // 000000069098: BF800000
	.long 0xbf800000                                           // 00000006909C: BF800000
	.long 0xbf800000                                           // 0000000690A0: BF800000
	.long 0xbf800000                                           // 0000000690A4: BF800000
	.long 0xbf800000                                           // 0000000690A8: BF800000
	.long 0xbf800000                                           // 0000000690AC: BF800000
	.long 0xbf800000                                           // 0000000690B0: BF800000
	.long 0xbf800000                                           // 0000000690B4: BF800000
	.long 0xbf800000                                           // 0000000690B8: BF800000
	.long 0xbf800000                                           // 0000000690BC: BF800000
	.long 0xbf800000                                           // 0000000690C0: BF800000
	.long 0xbf800000                                           // 0000000690C4: BF800000
	.long 0xbf800000                                           // 0000000690C8: BF800000
	.long 0xbf800000                                           // 0000000690CC: BF800000
	.long 0xbf800000                                           // 0000000690D0: BF800000
	.long 0xbf800000                                           // 0000000690D4: BF800000
	.long 0xbf800000                                           // 0000000690D8: BF800000
	.long 0xbf800000                                           // 0000000690DC: BF800000
	.long 0xbf800000                                           // 0000000690E0: BF800000
	.long 0xbf800000                                           // 0000000690E4: BF800000
	.long 0xbf800000                                           // 0000000690E8: BF800000
	.long 0xbf800000                                           // 0000000690EC: BF800000
	.long 0xbf800000                                           // 0000000690F0: BF800000
	.long 0xbf800000                                           // 0000000690F4: BF800000
	.long 0xbf800000                                           // 0000000690F8: BF800000
	.long 0xbf800000                                           // 0000000690FC: BF800000

	.p2align	8
	.type	mul_get_num_groups_get_local_id,@function
	.size	mul_get_num_groups_get_local_id, mul_get_num_groups_get_local_id_symend-mul_get_num_groups_get_local_id
mul_get_num_groups_get_local_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 000000069100: CA240080 020800FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006910C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000069114: 84028102
	v_bfe_u32 v10, v0, 10, 10                                  // 000000069118: D610000A 02291500
	s_clause 0x1                                               // 000000069120: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000069124: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006912C: DC4A0026 08000002
	s_clause 0x2                                               // 000000069134: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069138: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000069140: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000069148: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000069150: 84008103
	v_bfe_u32 v11, v0, 20, 10                                  // 000000069154: D610000B 02292900
	s_mov_b32 s33, 0                                           // 00000006915C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069160: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 000000069164: D6550001 04240408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006916C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069170: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v10                                // 000000069178: D6550001 0428000A
	s_lshl_b32 s0, s4, 2                                       // 000000069180: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069184: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v11                                 // 00000006918C: D6550001 042C0005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000069194: BF870094
	v_add_co_u32 v3, s0, s6, v3                                // 000000069198: D7000003 00020606
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 0000000691A0: D5200004 00020807
	s_waitcnt vmcnt(1)                                         // 0000000691A8: BF8907F7
	v_lshrrev_b32_e32 v0, 16, v7                               // 0000000691AC: 32000E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000691B0: 7C7A0E80
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000691B4: BF870002
	v_cmp_ne_u16_e64 s0, 0, v0.l                               // 0000000691B8: D43D0000 00020080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000691C0: BF07806A
	s_waitcnt vmcnt(0)                                         // 0000000691C4: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 0000000691C8: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 0000000691CC: 8201800C
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000691D0: D73C0000 00020282
	s_cmp_lg_u32 s0, 0                                         // 0000000691D8: BF078000
	v_add_co_u32 v5, s0, s6, v5                                // 0000000691DC: D7000005 00020A06
	s_delay_alu instid0(VALU_DEP_1)                            // 0000000691E4: BF870001
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000691E8: D5200006 00020C07
	s_addc_u32 s0, s13, 0                                      // 0000000691F0: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000691F4: BF07806A
	v_mul_lo_u32 v2, s1, v9                                    // 0000000691F8: D72C0002 00021201
	s_addc_u32 s1, s14, 0                                      // 000000069200: 8201800E
	v_mul_lo_u32 v7, s0, v10                                   // 000000069204: D72C0007 00021400
	v_mul_lo_u32 v8, s1, v11                                   // 00000006920C: D72C0008 00021601
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000069214: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006921C: 40020207
	s_clause 0x2                                               // 000000069220: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000069224: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006922C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 000000069234: DC6A0000 007C0800
	s_nop 0                                                    // 00000006923C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069240: BFB60003
	s_endpgm                                                   // 000000069244: BFB00000
mul_get_num_groups_get_local_id_symend:
	.long 0xbf800000                                           // 000000069248: BF800000
	.long 0xbf800000                                           // 00000006924C: BF800000
	.long 0xbf800000                                           // 000000069250: BF800000
	.long 0xbf800000                                           // 000000069254: BF800000
	.long 0xbf800000                                           // 000000069258: BF800000
	.long 0xbf800000                                           // 00000006925C: BF800000
	.long 0xbf800000                                           // 000000069260: BF800000
	.long 0xbf800000                                           // 000000069264: BF800000
	.long 0xbf800000                                           // 000000069268: BF800000
	.long 0xbf800000                                           // 00000006926C: BF800000
	.long 0xbf800000                                           // 000000069270: BF800000
	.long 0xbf800000                                           // 000000069274: BF800000
	.long 0xbf800000                                           // 000000069278: BF800000
	.long 0xbf800000                                           // 00000006927C: BF800000
	.long 0xbf800000                                           // 000000069280: BF800000
	.long 0xbf800000                                           // 000000069284: BF800000
	.long 0xbf800000                                           // 000000069288: BF800000
	.long 0xbf800000                                           // 00000006928C: BF800000
	.long 0xbf800000                                           // 000000069290: BF800000
	.long 0xbf800000                                           // 000000069294: BF800000
	.long 0xbf800000                                           // 000000069298: BF800000
	.long 0xbf800000                                           // 00000006929C: BF800000
	.long 0xbf800000                                           // 0000000692A0: BF800000
	.long 0xbf800000                                           // 0000000692A4: BF800000
	.long 0xbf800000                                           // 0000000692A8: BF800000
	.long 0xbf800000                                           // 0000000692AC: BF800000
	.long 0xbf800000                                           // 0000000692B0: BF800000
	.long 0xbf800000                                           // 0000000692B4: BF800000
	.long 0xbf800000                                           // 0000000692B8: BF800000
	.long 0xbf800000                                           // 0000000692BC: BF800000
	.long 0xbf800000                                           // 0000000692C0: BF800000
	.long 0xbf800000                                           // 0000000692C4: BF800000
	.long 0xbf800000                                           // 0000000692C8: BF800000
	.long 0xbf800000                                           // 0000000692CC: BF800000
	.long 0xbf800000                                           // 0000000692D0: BF800000
	.long 0xbf800000                                           // 0000000692D4: BF800000
	.long 0xbf800000                                           // 0000000692D8: BF800000
	.long 0xbf800000                                           // 0000000692DC: BF800000
	.long 0xbf800000                                           // 0000000692E0: BF800000
	.long 0xbf800000                                           // 0000000692E4: BF800000
	.long 0xbf800000                                           // 0000000692E8: BF800000
	.long 0xbf800000                                           // 0000000692EC: BF800000
	.long 0xbf800000                                           // 0000000692F0: BF800000
	.long 0xbf800000                                           // 0000000692F4: BF800000
	.long 0xbf800000                                           // 0000000692F8: BF800000
	.long 0xbf800000                                           // 0000000692FC: BF800000

	.p2align	8
	.type	mul_get_work_dim_get_local_id,@function
	.size	mul_get_work_dim_get_local_id, mul_get_work_dim_get_local_id_symend-mul_get_work_dim_get_local_id
mul_get_work_dim_get_local_id:
	s_clause 0x3                                               // 000000069300: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000006930C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 000000069314: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006931C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 000000069324: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000069330: 84028102
	v_bfe_u32 v6, v0, 10, 10                                   // 000000069334: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006933C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000069344: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069348: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000006934C: D6550001 04140408
	s_lshl_b32 s2, s3, 1                                       // 000000069354: 84028103
	s_and_b32 s3, s5, 0xffff                                   // 000000069358: 8B03FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000069360: BF870119
	v_mul_u32_u24_e32 v7, s3, v5                               // 000000069364: 160E0A03
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069368: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 000000069370: D6550001 0418040A
	s_lshl_b32 s2, s4, 2                                       // 000000069378: 84028204
	v_mul_u32_u24_e32 v8, s3, v6                               // 00000006937C: 16100C03
	v_mul_u32_u24_e32 v9, s3, v0                               // 000000069380: 16120003
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000069384: BF8701C3
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069388: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 000000069390: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069398: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000693A0: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000693A4: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000693AC: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000693B4: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000693B8: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000693BC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000693C4: 40020201
	s_clause 0x2                                               // 0000000693C8: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000693CC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000693D4: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 0000000693DC: DC6A0000 007C0900
	s_nop 0                                                    // 0000000693E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000693E8: BFB60003
	s_endpgm                                                   // 0000000693EC: BFB00000
mul_get_work_dim_get_local_id_symend:
	.long 0xbf800000                                           // 0000000693F0: BF800000
	.long 0xbf800000                                           // 0000000693F4: BF800000
	.long 0xbf800000                                           // 0000000693F8: BF800000
	.long 0xbf800000                                           // 0000000693FC: BF800000

	.p2align	8
	.type	mul_x_get_group_id,@function
	.size	mul_x_get_group_id, mul_x_get_group_id_symend-mul_x_get_group_id
mul_x_get_group_id:
	s_clause 0x3                                               // 000000069400: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069404: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 00000006940C: F4000140 F8000008
	s_load_b32 s6, s[0:1], 0x48                                // 000000069414: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006941C: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069424: CA240080 020000FF 000003FF
	s_lshl_b32 s7, s2, 4                                       // 000000069430: 84078402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000069434: D6100005 02291500
	s_waitcnt lgkmcnt(0)                                       // 00000006943C: BF89FC07
	s_lshl_b32 s9, s3, 1                                       // 000000069440: 84098103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069444: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006944C: BEA10080
	v_add3_u32 v1, s8, s7, v1                                  // 000000069450: D6550001 04040E08
	s_lshl_b32 s7, s4, 1                                       // 000000069458: 84078104
	s_mul_i32 s2, s2, s5                                       // 00000006945C: 96020502
	s_mul_i32 s3, s3, s5                                       // 000000069460: 96030503
	s_mul_i32 s4, s4, s5                                       // 000000069464: 96040504
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069468: D73C0003 00020282
	v_add3_u32 v1, s10, s9, v5                                 // 000000069470: D6550001 0414120A
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 000000069478: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000069480: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069484: D73C0005 00020282
	v_add3_u32 v1, s6, s7, v0                                  // 00000006948C: D6550001 04000E06
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069494: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006949C: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000694A0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000694A8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000694B0: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 0000000694B4: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000694B8: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000694BC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000694C4: 40020201
	s_clause 0x2                                               // 0000000694C8: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000694CC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000694D4: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 0000000694DC: DC6A0000 007C0200
	s_nop 0                                                    // 0000000694E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000694E8: BFB60003
	s_endpgm                                                   // 0000000694EC: BFB00000
mul_x_get_group_id_symend:
	.long 0xbf800000                                           // 0000000694F0: BF800000
	.long 0xbf800000                                           // 0000000694F4: BF800000
	.long 0xbf800000                                           // 0000000694F8: BF800000
	.long 0xbf800000                                           // 0000000694FC: BF800000

	.p2align	8
	.type	mul_get_global_offset_get_group_id,@function
	.size	mul_get_global_offset_get_group_id, mul_get_global_offset_get_group_id_symend-mul_get_global_offset_get_group_id
mul_get_global_offset_get_group_id:
	s_clause 0x2                                               // 000000069500: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069504: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006950C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069514: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006951C: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 000000069528: 84068102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006952C: D6100005 02291500
	s_lshl_b32 s7, s3, 4                                       // 000000069534: 84078403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069538: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000069540: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069544: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 000000069548: D6550001 04040C08
	s_lshl_b32 s6, s4, 1                                       // 000000069550: 84068104
	s_mul_i32 s2, s2, s8                                       // 000000069554: 96020802
	s_mul_i32 s3, s3, s10                                      // 000000069558: 96030A03
	s_mul_i32 s4, s4, s5                                       // 00000006955C: 96040504
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069560: D73C0003 00020282
	v_add3_u32 v1, s10, s7, v5                                 // 000000069568: D6550001 04140E0A
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 000000069570: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000069578: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006957C: D73C0005 00020282
	v_add3_u32 v1, s5, s6, v0                                  // 000000069584: D6550001 04000C05
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006958C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000069594: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000069598: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000695A0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000695A8: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 0000000695AC: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000695B0: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000695B4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000695BC: 40020201
	s_clause 0x2                                               // 0000000695C0: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000695C4: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000695CC: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 0000000695D4: DC6A0000 007C0200
	s_nop 0                                                    // 0000000695DC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000695E0: BFB60003
	s_endpgm                                                   // 0000000695E4: BFB00000
mul_get_global_offset_get_group_id_symend:
	.long 0xbf800000                                           // 0000000695E8: BF800000
	.long 0xbf800000                                           // 0000000695EC: BF800000
	.long 0xbf800000                                           // 0000000695F0: BF800000
	.long 0xbf800000                                           // 0000000695F4: BF800000
	.long 0xbf800000                                           // 0000000695F8: BF800000
	.long 0xbf800000                                           // 0000000695FC: BF800000

	.p2align	8
	.type	mul_get_local_id_get_group_id,@function
	.size	mul_get_local_id_get_group_id, mul_get_local_id_get_group_id_symend-mul_get_local_id_get_group_id
mul_get_local_id_get_group_id:
	s_clause 0x2                                               // 000000069600: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006960C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069614: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000006961C: CA240080 020400FF 000003FF
	s_lshl_b32 s6, s2, 3                                       // 000000069628: 84068302
	v_bfe_u32 v6, v0, 10, 10                                   // 00000006962C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069634: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006963C: BF8701A3
	v_mul_lo_u32 v7, v5, s2                                    // 000000069640: D72C0007 00000505
	s_mov_b32 s33, 0                                           // 000000069648: BEA10080
	v_mul_lo_u32 v8, v6, s3                                    // 00000006964C: D72C0008 00000706
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000069654: BF8700C3
	v_mul_lo_u32 v9, v0, s4                                    // 000000069658: D72C0009 00000900
	s_waitcnt lgkmcnt(0)                                       // 000000069660: BF89FC07
	v_add3_u32 v1, s8, s6, v5                                  // 000000069664: D6550001 04140C08
	s_lshl_b32 s6, s3, 2                                       // 00000006966C: 84068203
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069670: D73C0003 00020282
	v_add3_u32 v1, s10, s6, v6                                 // 000000069678: D6550001 04180C0A
	s_lshl_b32 s6, s4, 1                                       // 000000069680: 84068104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000069684: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069688: D73C0005 00020282
	v_add3_u32 v1, s5, s6, v0                                  // 000000069690: D6550001 04000C05
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069698: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000696A0: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000696A4: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000696A8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000696B0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000696B8: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000696BC: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000696C4: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000696C8: 40020201
	s_clause 0x2                                               // 0000000696CC: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000696D0: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000696D8: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 0000000696E0: DC6A0000 007C0900
	s_nop 0                                                    // 0000000696E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000696EC: BFB60003
	s_endpgm                                                   // 0000000696F0: BFB00000
mul_get_local_id_get_group_id_symend:
	.long 0xbf800000                                           // 0000000696F4: BF800000
	.long 0xbf800000                                           // 0000000696F8: BF800000
	.long 0xbf800000                                           // 0000000696FC: BF800000

	.p2align	8
	.type	mul_get_group_id_get_group_id,@function
	.size	mul_get_group_id_get_group_id, mul_get_group_id_get_group_id_symend-mul_get_group_id_get_group_id
mul_get_group_id_get_group_id:
	s_clause 0x2                                               // 000000069700: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069704: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006970C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069714: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006971C: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 000000069728: 84068102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006972C: D6100005 02291500
	s_lshl_b32 s7, s3, 4                                       // 000000069734: 84078403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069738: D6100000 02292900
	s_mul_i32 s2, s2, s2                                       // 000000069740: 96020202
	s_mul_i32 s3, s3, s3                                       // 000000069744: 96030303
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000069748: BF870009
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 00000006974C: CA100002 07080003
	s_mov_b32 s33, 0                                           // 000000069754: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069758: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 00000006975C: D6550001 04040C08
	s_lshl_b32 s6, s4, 1                                       // 000000069764: 84068104
	s_mul_i32 s4, s4, s4                                       // 000000069768: 96040404
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006976C: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069770: D73C0003 00020282
	v_add3_u32 v1, s10, s7, v5                                 // 000000069778: D6550001 04140E0A
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069780: D73C0005 00020282
	v_add3_u32 v1, s5, s6, v0                                  // 000000069788: D6550001 04000C05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000069790: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069794: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006979C: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000697A0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000697A8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000697B0: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 0000000697B4: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000697B8: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000697BC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000697C4: 40020201
	s_clause 0x2                                               // 0000000697C8: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000697CC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000697D4: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 0000000697DC: DC6A0000 007C0200
	s_nop 0                                                    // 0000000697E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000697E8: BFB60003
	s_endpgm                                                   // 0000000697EC: BFB00000
mul_get_group_id_get_group_id_symend:
	.long 0xbf800000                                           // 0000000697F0: BF800000
	.long 0xbf800000                                           // 0000000697F4: BF800000
	.long 0xbf800000                                           // 0000000697F8: BF800000
	.long 0xbf800000                                           // 0000000697FC: BF800000

	.p2align	8
	.type	mul_get_local_size_get_group_id,@function
	.size	mul_get_local_size_get_group_id, mul_get_local_size_get_group_id_symend-mul_get_local_size_get_group_id
mul_get_local_size_get_group_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000069800: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000069808: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006980C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000069810: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000069814: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000069818: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006981C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069820: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006982C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069834: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006983C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000069840: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 000000069844: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000069848: BF8704C9
	s_add_u32 s6, s5, s6                                       // 00000006984C: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000069850: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000069854: BF0A0903
	s_cselect_b32 s8, 14, 20                                   // 000000069858: 9808948E
	s_add_u32 s8, s5, s8                                       // 00000006985C: 80080805
	s_addc_u32 s9, s11, 0                                      // 000000069860: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 000000069864: BF0A0A04
	s_cselect_b32 s10, 16, 22                                  // 000000069868: 980A9690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006986C: BF870009
	s_add_u32 s10, s5, s10                                     // 000000069870: 800A0A05
	s_addc_u32 s11, s11, 0                                     // 000000069874: 820B800B
	s_clause 0x2                                               // 000000069878: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006987C: DC4A0000 07060002
	global_load_u16 v8, v2, s[8:9]                             // 000000069884: DC4A0000 08080002
	global_load_u16 v9, v2, s[10:11]                           // 00000006988C: DC4A0000 090A0002
	s_clause 0x2                                               // 000000069894: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069898: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 0000000698A0: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000698A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000698B0: BF89FC07
	v_add3_u32 v1, s8, s12, v1                                 // 0000000698B4: D6550001 04041808
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000698BC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 0000000698C0: D73C0003 00020282
	v_add3_u32 v1, s10, s13, v5                                // 0000000698C8: D6550001 04141A0A
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 0000000698D0: D73C0005 00020282
	v_add3_u32 v1, s5, s14, v0                                 // 0000000698D8: D6550001 04001C05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000698E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000698E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000698EC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000698F0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000698F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000069900: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000069904: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000069908: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000069910: 40020201
	s_waitcnt vmcnt(2)                                         // 000000069914: BF890BF7
	v_mul_lo_u32 v2, s2, v7                                    // 000000069918: D72C0002 00020E02
	s_waitcnt vmcnt(1)                                         // 000000069920: BF8907F7
	v_mul_lo_u32 v7, s3, v8                                    // 000000069924: D72C0007 00021003
	s_waitcnt vmcnt(0)                                         // 00000006992C: BF8903F7
	v_mul_lo_u32 v8, s4, v9                                    // 000000069930: D72C0008 00021204
	s_clause 0x2                                               // 000000069938: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006993C: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 000000069944: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006994C: DC6A0000 007C0800
	s_nop 0                                                    // 000000069954: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069958: BFB60003
	s_endpgm                                                   // 00000006995C: BFB00000
mul_get_local_size_get_group_id_symend:
	.long 0xbf800000                                           // 000000069960: BF800000
	.long 0xbf800000                                           // 000000069964: BF800000
	.long 0xbf800000                                           // 000000069968: BF800000
	.long 0xbf800000                                           // 00000006996C: BF800000
	.long 0xbf800000                                           // 000000069970: BF800000
	.long 0xbf800000                                           // 000000069974: BF800000
	.long 0xbf800000                                           // 000000069978: BF800000
	.long 0xbf800000                                           // 00000006997C: BF800000
	.long 0xbf800000                                           // 000000069980: BF800000
	.long 0xbf800000                                           // 000000069984: BF800000
	.long 0xbf800000                                           // 000000069988: BF800000
	.long 0xbf800000                                           // 00000006998C: BF800000
	.long 0xbf800000                                           // 000000069990: BF800000
	.long 0xbf800000                                           // 000000069994: BF800000
	.long 0xbf800000                                           // 000000069998: BF800000
	.long 0xbf800000                                           // 00000006999C: BF800000
	.long 0xbf800000                                           // 0000000699A0: BF800000
	.long 0xbf800000                                           // 0000000699A4: BF800000
	.long 0xbf800000                                           // 0000000699A8: BF800000
	.long 0xbf800000                                           // 0000000699AC: BF800000
	.long 0xbf800000                                           // 0000000699B0: BF800000
	.long 0xbf800000                                           // 0000000699B4: BF800000
	.long 0xbf800000                                           // 0000000699B8: BF800000
	.long 0xbf800000                                           // 0000000699BC: BF800000
	.long 0xbf800000                                           // 0000000699C0: BF800000
	.long 0xbf800000                                           // 0000000699C4: BF800000
	.long 0xbf800000                                           // 0000000699C8: BF800000
	.long 0xbf800000                                           // 0000000699CC: BF800000
	.long 0xbf800000                                           // 0000000699D0: BF800000
	.long 0xbf800000                                           // 0000000699D4: BF800000
	.long 0xbf800000                                           // 0000000699D8: BF800000
	.long 0xbf800000                                           // 0000000699DC: BF800000
	.long 0xbf800000                                           // 0000000699E0: BF800000
	.long 0xbf800000                                           // 0000000699E4: BF800000
	.long 0xbf800000                                           // 0000000699E8: BF800000
	.long 0xbf800000                                           // 0000000699EC: BF800000
	.long 0xbf800000                                           // 0000000699F0: BF800000
	.long 0xbf800000                                           // 0000000699F4: BF800000
	.long 0xbf800000                                           // 0000000699F8: BF800000
	.long 0xbf800000                                           // 0000000699FC: BF800000

	.p2align	8
	.type	mul_get_global_id_get_group_id,@function
	.size	mul_get_global_id_get_group_id, mul_get_global_id_get_group_id_symend-mul_get_global_id_get_group_id
mul_get_global_id_get_group_id:
	s_clause 0x2                                               // 000000069A00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069A04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000069A0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069A14: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000069A1C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 000000069A28: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 000000069A30: D6100004 02292900
	s_mov_b32 s33, 0                                           // 000000069A38: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000069A3C: BF870193
	v_lshl_or_b32 v0, s2, 1, v2                                // 000000069A40: D6560000 04090202
	v_lshl_or_b32 v5, s3, 1, v3                                // 000000069A48: D6560005 040D0203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000069A50: BF870223
	v_lshl_or_b32 v7, s4, 2, v4                                // 000000069A54: D6560007 04110404
	v_mov_b32_e32 v2, v1                                       // 000000069A5C: 7E040301
	v_lshlrev_b64 v[3:4], 2, v[0:1]                            // 000000069A60: D73C0003 00020082
	s_waitcnt lgkmcnt(0)                                       // 000000069A68: BF89FC07
	v_dual_mov_b32 v6, v1 :: v_dual_add_nc_u32 v1, s10, v5     // 000000069A6C: CA200101 06000A0A
	v_add_nc_u32_e32 v5, s5, v7                                // 000000069A74: 4A0A0E05
	v_add_nc_u32_e32 v0, s8, v0                                // 000000069A78: 4A000008
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000069A7C: BF870214
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069A80: D7006A03 00020600
	v_lshlrev_b64 v[7:8], 2, v[1:2]                            // 000000069A88: D73C0007 00020282
	v_mul_lo_u32 v9, s3, v1                                    // 000000069A90: D72C0009 00020203
	s_delay_alu instid0(VALU_DEP_4)                            // 000000069A98: BF870004
	v_mul_lo_u32 v2, s2, v0                                    // 000000069A9C: D72C0002 00020002
	v_lshlrev_b64 v[0:1], 2, v[5:6]                            // 000000069AA4: D73C0000 00020A82
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000069AAC: 40080801
	v_mul_lo_u32 v10, s4, v5                                   // 000000069AB0: D72C000A 00020A04
	v_add_co_u32 v5, vcc_lo, s0, v7                            // 000000069AB8: D7006A05 00020E00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v8, vcc_lo             // 000000069AC0: 400C1001
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000069AC4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000069ACC: 40020201
	s_clause 0x2                                               // 000000069AD0: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000069AD4: DC6A0000 007C0203
	global_store_b32 v[5:6], v9, off                           // 000000069ADC: DC6A0000 007C0905
	global_store_b32 v[0:1], v10, off                          // 000000069AE4: DC6A0000 007C0A00
	s_nop 0                                                    // 000000069AEC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069AF0: BFB60003
	s_endpgm                                                   // 000000069AF4: BFB00000
mul_get_global_id_get_group_id_symend:
	.long 0xbf800000                                           // 000000069AF8: BF800000
	.long 0xbf800000                                           // 000000069AFC: BF800000

	.p2align	8
	.type	mul_get_global_size_get_group_id,@function
	.size	mul_get_global_size_get_group_id, mul_get_global_size_get_group_id_symend-mul_get_global_size_get_group_id
mul_get_global_size_get_group_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069B00: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 4                                       // 000000069B0C: 84068402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000069B10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069B18: D6100000 02292900
	s_clause 0x1                                               // 000000069B20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000069B24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000069B2C: DC4A0026 08000002
	s_clause 0x3                                               // 000000069B34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069B38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000069B40: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000069B48: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000069B50: F4040000 F8000000
	s_lshl_b32 s7, s4, 1                                       // 000000069B58: 84078104
	s_mov_b32 s33, 0                                           // 000000069B5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069B60: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 000000069B64: D6550001 04040C08
	s_lshl_b32 s6, s3, 1                                       // 000000069B6C: 84068103
	s_lshl_b32 s8, s13, 1                                      // 000000069B70: 8408810D
	s_lshl_b32 s9, s14, 1                                      // 000000069B74: 8409810E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000069B78: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069B7C: D73C0003 00020282
	v_add3_u32 v1, s10, s6, v5                                 // 000000069B84: D6550001 04140C0A
	s_lshl_b32 s6, s12, 4                                      // 000000069B8C: 8406840C
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069B90: D73C0005 00020282
	v_add3_u32 v1, s5, s7, v0                                  // 000000069B98: D6550001 04000E05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000069BA0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069BA4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000069BAC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000069BB0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000069BB8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000069BC0: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000069BC4: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000069BC8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000069BD0: 40020201
	s_waitcnt vmcnt(1)                                         // 000000069BD4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 000000069BD8: 32120E90
	v_and_b32_e32 v7, 0xffff, v7                               // 000000069BDC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 000000069BE4: BF8903F7
	v_add_nc_u32_e32 v2, s9, v8                                // 000000069BE8: 4A041009
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000069BEC: BF870193
	v_add_nc_u32_e32 v8, s8, v9                                // 000000069BF0: 4A101208
	v_add_nc_u32_e32 v7, s6, v7                                // 000000069BF4: 4A0E0E06
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000069BF8: BF870193
	v_mul_lo_u32 v2, v2, s4                                    // 000000069BFC: D72C0002 00000902
	v_mul_lo_u32 v8, v8, s3                                    // 000000069C04: D72C0008 00000708
	s_delay_alu instid0(VALU_DEP_3)                            // 000000069C0C: BF870003
	v_mul_lo_u32 v7, v7, s2                                    // 000000069C10: D72C0007 00000507
	s_clause 0x2                                               // 000000069C18: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000069C1C: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000069C24: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 000000069C2C: DC6A0000 007C0200
	s_nop 0                                                    // 000000069C34: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069C38: BFB60003
	s_endpgm                                                   // 000000069C3C: BFB00000
mul_get_global_size_get_group_id_symend:
	.long 0xbf800000                                           // 000000069C40: BF800000
	.long 0xbf800000                                           // 000000069C44: BF800000
	.long 0xbf800000                                           // 000000069C48: BF800000
	.long 0xbf800000                                           // 000000069C4C: BF800000
	.long 0xbf800000                                           // 000000069C50: BF800000
	.long 0xbf800000                                           // 000000069C54: BF800000
	.long 0xbf800000                                           // 000000069C58: BF800000
	.long 0xbf800000                                           // 000000069C5C: BF800000
	.long 0xbf800000                                           // 000000069C60: BF800000
	.long 0xbf800000                                           // 000000069C64: BF800000
	.long 0xbf800000                                           // 000000069C68: BF800000
	.long 0xbf800000                                           // 000000069C6C: BF800000
	.long 0xbf800000                                           // 000000069C70: BF800000
	.long 0xbf800000                                           // 000000069C74: BF800000
	.long 0xbf800000                                           // 000000069C78: BF800000
	.long 0xbf800000                                           // 000000069C7C: BF800000
	.long 0xbf800000                                           // 000000069C80: BF800000
	.long 0xbf800000                                           // 000000069C84: BF800000
	.long 0xbf800000                                           // 000000069C88: BF800000
	.long 0xbf800000                                           // 000000069C8C: BF800000
	.long 0xbf800000                                           // 000000069C90: BF800000
	.long 0xbf800000                                           // 000000069C94: BF800000
	.long 0xbf800000                                           // 000000069C98: BF800000
	.long 0xbf800000                                           // 000000069C9C: BF800000
	.long 0xbf800000                                           // 000000069CA0: BF800000
	.long 0xbf800000                                           // 000000069CA4: BF800000
	.long 0xbf800000                                           // 000000069CA8: BF800000
	.long 0xbf800000                                           // 000000069CAC: BF800000
	.long 0xbf800000                                           // 000000069CB0: BF800000
	.long 0xbf800000                                           // 000000069CB4: BF800000
	.long 0xbf800000                                           // 000000069CB8: BF800000
	.long 0xbf800000                                           // 000000069CBC: BF800000
	.long 0xbf800000                                           // 000000069CC0: BF800000
	.long 0xbf800000                                           // 000000069CC4: BF800000
	.long 0xbf800000                                           // 000000069CC8: BF800000
	.long 0xbf800000                                           // 000000069CCC: BF800000
	.long 0xbf800000                                           // 000000069CD0: BF800000
	.long 0xbf800000                                           // 000000069CD4: BF800000
	.long 0xbf800000                                           // 000000069CD8: BF800000
	.long 0xbf800000                                           // 000000069CDC: BF800000
	.long 0xbf800000                                           // 000000069CE0: BF800000
	.long 0xbf800000                                           // 000000069CE4: BF800000
	.long 0xbf800000                                           // 000000069CE8: BF800000
	.long 0xbf800000                                           // 000000069CEC: BF800000
	.long 0xbf800000                                           // 000000069CF0: BF800000
	.long 0xbf800000                                           // 000000069CF4: BF800000
	.long 0xbf800000                                           // 000000069CF8: BF800000
	.long 0xbf800000                                           // 000000069CFC: BF800000

	.p2align	8
	.type	mul_get_num_groups_get_group_id,@function
	.size	mul_get_num_groups_get_group_id, mul_get_num_groups_get_group_id_symend-mul_get_num_groups_get_group_id
mul_get_num_groups_get_group_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069D00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000069D0C: F4040180 F8000008
	v_bfe_u32 v5, v0, 10, 10                                   // 000000069D14: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069D1C: D6100000 02292900
	s_clause 0x1                                               // 000000069D24: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000069D28: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000069D30: DC4A0026 08000002
	s_clause 0x2                                               // 000000069D38: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069D3C: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000069D44: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000069D4C: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 000000069D54: BF89FC07
	s_lshl_b32 s9, s2, 1                                       // 000000069D58: 84098102
	s_lshl_b32 s0, s3, 1                                       // 000000069D5C: 84008103
	s_mov_b32 s33, 0                                           // 000000069D60: BEA10080
	v_add3_u32 v1, s8, s9, v1                                  // 000000069D64: D6550001 04041208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000069D6C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069D70: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 000000069D78: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000069D80: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069D84: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v0                                  // 000000069D8C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000069D94: BF870094
	v_add_co_u32 v3, s0, s6, v3                                // 000000069D98: D7000003 00020606
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 000000069DA0: D5200004 00020807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000069DA8: BF870094
	v_add_co_u32 v5, s0, s6, v5                                // 000000069DAC: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 000000069DB4: D5200006 00020C07
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000069DBC: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 000000069DC4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 000000069DC8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000069DCC: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 000000069DD0: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 000000069DD4: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000069DDC: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 000000069DE0: 7C7A1280
	s_addc_u32 s1, s12, 0                                      // 000000069DE4: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000069DE8: BF870009
	s_mul_i32 s1, s1, s2                                       // 000000069DEC: 96010201
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000069DF0: BF07806A
	v_mov_b32_e32 v2, s1                                       // 000000069DF4: 7E040201
	s_addc_u32 s1, s13, 0                                      // 000000069DF8: 8201800D
	s_cmp_lg_u32 s0, 0                                         // 000000069DFC: BF078000
	s_mul_i32 s0, s1, s3                                       // 000000069E00: 96000301
	s_addc_u32 s1, s14, 0                                      // 000000069E04: 8201800E
	v_mov_b32_e32 v7, s0                                       // 000000069E08: 7E0E0200
	s_mul_i32 s0, s1, s4                                       // 000000069E0C: 96000401
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000069E10: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000069E18: 40020207
	v_mov_b32_e32 v8, s0                                       // 000000069E1C: 7E100200
	s_clause 0x2                                               // 000000069E20: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000069E24: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 000000069E2C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 000000069E34: DC6A0000 007C0800
	s_nop 0                                                    // 000000069E3C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069E40: BFB60003
	s_endpgm                                                   // 000000069E44: BFB00000
mul_get_num_groups_get_group_id_symend:
	.long 0xbf800000                                           // 000000069E48: BF800000
	.long 0xbf800000                                           // 000000069E4C: BF800000
	.long 0xbf800000                                           // 000000069E50: BF800000
	.long 0xbf800000                                           // 000000069E54: BF800000
	.long 0xbf800000                                           // 000000069E58: BF800000
	.long 0xbf800000                                           // 000000069E5C: BF800000
	.long 0xbf800000                                           // 000000069E60: BF800000
	.long 0xbf800000                                           // 000000069E64: BF800000
	.long 0xbf800000                                           // 000000069E68: BF800000
	.long 0xbf800000                                           // 000000069E6C: BF800000
	.long 0xbf800000                                           // 000000069E70: BF800000
	.long 0xbf800000                                           // 000000069E74: BF800000
	.long 0xbf800000                                           // 000000069E78: BF800000
	.long 0xbf800000                                           // 000000069E7C: BF800000
	.long 0xbf800000                                           // 000000069E80: BF800000
	.long 0xbf800000                                           // 000000069E84: BF800000
	.long 0xbf800000                                           // 000000069E88: BF800000
	.long 0xbf800000                                           // 000000069E8C: BF800000
	.long 0xbf800000                                           // 000000069E90: BF800000
	.long 0xbf800000                                           // 000000069E94: BF800000
	.long 0xbf800000                                           // 000000069E98: BF800000
	.long 0xbf800000                                           // 000000069E9C: BF800000
	.long 0xbf800000                                           // 000000069EA0: BF800000
	.long 0xbf800000                                           // 000000069EA4: BF800000
	.long 0xbf800000                                           // 000000069EA8: BF800000
	.long 0xbf800000                                           // 000000069EAC: BF800000
	.long 0xbf800000                                           // 000000069EB0: BF800000
	.long 0xbf800000                                           // 000000069EB4: BF800000
	.long 0xbf800000                                           // 000000069EB8: BF800000
	.long 0xbf800000                                           // 000000069EBC: BF800000
	.long 0xbf800000                                           // 000000069EC0: BF800000
	.long 0xbf800000                                           // 000000069EC4: BF800000
	.long 0xbf800000                                           // 000000069EC8: BF800000
	.long 0xbf800000                                           // 000000069ECC: BF800000
	.long 0xbf800000                                           // 000000069ED0: BF800000
	.long 0xbf800000                                           // 000000069ED4: BF800000
	.long 0xbf800000                                           // 000000069ED8: BF800000
	.long 0xbf800000                                           // 000000069EDC: BF800000
	.long 0xbf800000                                           // 000000069EE0: BF800000
	.long 0xbf800000                                           // 000000069EE4: BF800000
	.long 0xbf800000                                           // 000000069EE8: BF800000
	.long 0xbf800000                                           // 000000069EEC: BF800000
	.long 0xbf800000                                           // 000000069EF0: BF800000
	.long 0xbf800000                                           // 000000069EF4: BF800000
	.long 0xbf800000                                           // 000000069EF8: BF800000
	.long 0xbf800000                                           // 000000069EFC: BF800000

	.p2align	8
	.type	mul_get_work_dim_get_group_id,@function
	.size	mul_get_work_dim_get_group_id, mul_get_work_dim_get_group_id_symend-mul_get_work_dim_get_group_id
mul_get_work_dim_get_group_id:
	s_clause 0x3                                               // 000000069F00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069F04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 000000069F0C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 000000069F14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069F1C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069F24: CA240080 020000FF 000003FF
	s_lshl_b32 s7, s2, 1                                       // 000000069F30: 84078102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000069F34: D6100005 02291500
	s_waitcnt lgkmcnt(0)                                       // 000000069F3C: BF89FC07
	s_lshl_b32 s9, s3, 1                                       // 000000069F40: 84098103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069F44: D6100000 02292900
	s_lshl_b32 s11, s4, 2                                      // 000000069F4C: 840B8204
	s_mov_b32 s33, 0                                           // 000000069F50: BEA10080
	v_add3_u32 v1, s8, s7, v1                                  // 000000069F54: D6550001 04040E08
	s_and_b32 s5, s5, 0xffff                                   // 000000069F5C: 8B05FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000069F64: BF8700A9
	s_mul_i32 s2, s2, s5                                       // 000000069F68: 96020502
	s_mul_i32 s3, s3, s5                                       // 000000069F6C: 96030503
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069F70: D73C0003 00020282
	v_add3_u32 v1, s10, s9, v5                                 // 000000069F78: D6550001 0414120A
	s_mul_i32 s4, s4, s5                                       // 000000069F80: 96040504
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 000000069F84: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000069F8C: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069F90: D73C0005 00020282
	v_add3_u32 v1, s6, s11, v0                                 // 000000069F98: D6550001 04001606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069FA0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000069FA8: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000069FAC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000069FB4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000069FBC: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 000000069FC0: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 000000069FC4: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000069FC8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000069FD0: 40020201
	s_clause 0x2                                               // 000000069FD4: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000069FD8: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000069FE0: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 000000069FE8: DC6A0000 007C0200
	s_nop 0                                                    // 000000069FF0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069FF4: BFB60003
	s_endpgm                                                   // 000000069FF8: BFB00000
mul_get_work_dim_get_group_id_symend:
	.long 0xbf800000                                           // 000000069FFC: BF800000

	.p2align	8
	.type	mul_x_get_local_size,@function
	.size	mul_x_get_local_size, mul_x_get_local_size_symend-mul_x_get_local_size
mul_x_get_local_size:
	s_clause 0x1                                               // 00000006A000: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006A004: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006A00C: F4080300 F8000038
	s_add_u32 s5, s0, 16                                       // 00000006A014: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006A018: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006A01C: 820B8001
	s_lshl_b32 s13, s2, 4                                      // 00000006A020: 840D8402
	s_lshl_b32 s15, s3, 1                                      // 00000006A024: 840F8103
	s_lshl_b32 s16, s4, 1                                      // 00000006A028: 84108104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006A02C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006A038: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A040: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006A048: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006A04C: BF0A0802
	v_add3_u32 v1, s12, s13, v1                                // 00000006A050: D6550001 04041A0C
	s_cselect_b32 s2, 12, 18                                   // 00000006A058: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006A05C: BF870009
	s_add_u32 s6, s5, s2                                       // 00000006A060: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006A064: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006A068: BF0A0903
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006A06C: D73C0003 00020282
	s_cselect_b32 s2, 14, 20                                   // 00000006A074: 9802948E
	v_add3_u32 v1, s14, s15, v5                                // 00000006A078: D6550001 04141E0E
	s_add_u32 s2, s5, s2                                       // 00000006A080: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006A084: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006A088: BF0A0A04
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000006A08C: BF8704A1
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006A090: D73C0005 00020282
	s_cselect_b32 s4, 16, 22                                   // 00000006A098: 98049690
	s_add_u32 s4, s5, s4                                       // 00000006A09C: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006A0A0: 8205800B
	s_clause 0x2                                               // 00000006A0A4: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006A0A8: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006A0B0: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006A0B8: DC4A0000 09040002
	s_clause 0x2                                               // 00000006A0C0: BF850002
	s_load_b32 s4, s[0:1], 0x48                                // 00000006A0C4: F4000100 F8000048
	s_load_b64 s[2:3], s[0:1], null                            // 00000006A0CC: F4040080 F8000000
	s_load_b32 s0, s[0:1], 0x8                                 // 00000006A0D4: F4000000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006A0DC: BF89FC07
	v_add3_u32 v1, s4, s16, v0                                 // 00000006A0E0: D6550001 04002004
	v_add_co_u32 v3, vcc_lo, s2, v3                            // 00000006A0E8: D7006A03 00020602
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo             // 00000006A0F0: 40080803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006A0F4: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006A0F8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s2, v5                            // 00000006A100: D7006A05 00020A02
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo             // 00000006A108: 400C0C03
	v_add_co_u32 v0, vcc_lo, s2, v0                            // 00000006A10C: D7006A00 00020002
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006A114: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo             // 00000006A118: 40020203
	s_waitcnt vmcnt(2)                                         // 00000006A11C: BF890BF7
	v_mul_lo_u32 v2, v7, s0                                    // 00000006A120: D72C0002 00000107
	s_waitcnt vmcnt(1)                                         // 00000006A128: BF8907F7
	v_mul_lo_u32 v7, v8, s0                                    // 00000006A12C: D72C0007 00000108
	s_waitcnt vmcnt(0)                                         // 00000006A134: BF8903F7
	v_mul_lo_u32 v8, v9, s0                                    // 00000006A138: D72C0008 00000109
	s_clause 0x2                                               // 00000006A140: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006A144: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006A14C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006A154: DC6A0000 007C0800
	s_nop 0                                                    // 00000006A15C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A160: BFB60003
	s_endpgm                                                   // 00000006A164: BFB00000
mul_x_get_local_size_symend:
	.long 0xbf800000                                           // 00000006A168: BF800000
	.long 0xbf800000                                           // 00000006A16C: BF800000
	.long 0xbf800000                                           // 00000006A170: BF800000
	.long 0xbf800000                                           // 00000006A174: BF800000
	.long 0xbf800000                                           // 00000006A178: BF800000
	.long 0xbf800000                                           // 00000006A17C: BF800000
	.long 0xbf800000                                           // 00000006A180: BF800000
	.long 0xbf800000                                           // 00000006A184: BF800000
	.long 0xbf800000                                           // 00000006A188: BF800000
	.long 0xbf800000                                           // 00000006A18C: BF800000
	.long 0xbf800000                                           // 00000006A190: BF800000
	.long 0xbf800000                                           // 00000006A194: BF800000
	.long 0xbf800000                                           // 00000006A198: BF800000
	.long 0xbf800000                                           // 00000006A19C: BF800000
	.long 0xbf800000                                           // 00000006A1A0: BF800000
	.long 0xbf800000                                           // 00000006A1A4: BF800000
	.long 0xbf800000                                           // 00000006A1A8: BF800000
	.long 0xbf800000                                           // 00000006A1AC: BF800000
	.long 0xbf800000                                           // 00000006A1B0: BF800000
	.long 0xbf800000                                           // 00000006A1B4: BF800000
	.long 0xbf800000                                           // 00000006A1B8: BF800000
	.long 0xbf800000                                           // 00000006A1BC: BF800000
	.long 0xbf800000                                           // 00000006A1C0: BF800000
	.long 0xbf800000                                           // 00000006A1C4: BF800000
	.long 0xbf800000                                           // 00000006A1C8: BF800000
	.long 0xbf800000                                           // 00000006A1CC: BF800000
	.long 0xbf800000                                           // 00000006A1D0: BF800000
	.long 0xbf800000                                           // 00000006A1D4: BF800000
	.long 0xbf800000                                           // 00000006A1D8: BF800000
	.long 0xbf800000                                           // 00000006A1DC: BF800000
	.long 0xbf800000                                           // 00000006A1E0: BF800000
	.long 0xbf800000                                           // 00000006A1E4: BF800000
	.long 0xbf800000                                           // 00000006A1E8: BF800000
	.long 0xbf800000                                           // 00000006A1EC: BF800000
	.long 0xbf800000                                           // 00000006A1F0: BF800000
	.long 0xbf800000                                           // 00000006A1F4: BF800000
	.long 0xbf800000                                           // 00000006A1F8: BF800000
	.long 0xbf800000                                           // 00000006A1FC: BF800000

	.p2align	8
	.type	mul_get_global_offset_get_local_size,@function
	.size	mul_get_global_offset_get_local_size, mul_get_global_offset_get_local_size_symend-mul_get_global_offset_get_local_size
mul_get_global_offset_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006A200: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006A208: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006A20C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006A210: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006A214: 840C8102
	s_lshl_b32 s13, s3, 4                                      // 00000006A218: 840D8403
	s_lshl_b32 s14, s4, 1                                      // 00000006A21C: 840E8104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006A220: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006A22C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A234: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006A23C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006A240: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006A244: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006A248: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006A24C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006A250: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006A254: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006A258: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006A25C: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006A260: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006A264: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006A268: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006A26C: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006A270: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006A274: 8205800B
	s_clause 0x2                                               // 00000006A278: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006A27C: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006A284: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006A28C: DC4A0000 09040002
	s_clause 0x2                                               // 00000006A294: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006A298: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006A2A0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A2A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006A2B0: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 00000006A2B4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006A2BC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006A2C0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 00000006A2C8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006A2D0: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v0                                 // 00000006A2D8: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006A2E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006A2E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006A2EC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006A2F0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006A2F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006A300: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006A304: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A308: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A310: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006A314: BF890BF7
	v_mul_lo_u32 v2, s4, v7                                    // 00000006A318: D72C0002 00020E04
	s_waitcnt vmcnt(1)                                         // 00000006A320: BF8907F7
	v_mul_lo_u32 v7, s6, v8                                    // 00000006A324: D72C0007 00021006
	s_waitcnt vmcnt(0)                                         // 00000006A32C: BF8903F7
	v_mul_lo_u32 v8, s2, v9                                    // 00000006A330: D72C0008 00021202
	s_clause 0x2                                               // 00000006A338: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006A33C: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006A344: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006A34C: DC6A0000 007C0800
	s_nop 0                                                    // 00000006A354: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A358: BFB60003
	s_endpgm                                                   // 00000006A35C: BFB00000
mul_get_global_offset_get_local_size_symend:
	.long 0xbf800000                                           // 00000006A360: BF800000
	.long 0xbf800000                                           // 00000006A364: BF800000
	.long 0xbf800000                                           // 00000006A368: BF800000
	.long 0xbf800000                                           // 00000006A36C: BF800000
	.long 0xbf800000                                           // 00000006A370: BF800000
	.long 0xbf800000                                           // 00000006A374: BF800000
	.long 0xbf800000                                           // 00000006A378: BF800000
	.long 0xbf800000                                           // 00000006A37C: BF800000
	.long 0xbf800000                                           // 00000006A380: BF800000
	.long 0xbf800000                                           // 00000006A384: BF800000
	.long 0xbf800000                                           // 00000006A388: BF800000
	.long 0xbf800000                                           // 00000006A38C: BF800000
	.long 0xbf800000                                           // 00000006A390: BF800000
	.long 0xbf800000                                           // 00000006A394: BF800000
	.long 0xbf800000                                           // 00000006A398: BF800000
	.long 0xbf800000                                           // 00000006A39C: BF800000
	.long 0xbf800000                                           // 00000006A3A0: BF800000
	.long 0xbf800000                                           // 00000006A3A4: BF800000
	.long 0xbf800000                                           // 00000006A3A8: BF800000
	.long 0xbf800000                                           // 00000006A3AC: BF800000
	.long 0xbf800000                                           // 00000006A3B0: BF800000
	.long 0xbf800000                                           // 00000006A3B4: BF800000
	.long 0xbf800000                                           // 00000006A3B8: BF800000
	.long 0xbf800000                                           // 00000006A3BC: BF800000
	.long 0xbf800000                                           // 00000006A3C0: BF800000
	.long 0xbf800000                                           // 00000006A3C4: BF800000
	.long 0xbf800000                                           // 00000006A3C8: BF800000
	.long 0xbf800000                                           // 00000006A3CC: BF800000
	.long 0xbf800000                                           // 00000006A3D0: BF800000
	.long 0xbf800000                                           // 00000006A3D4: BF800000
	.long 0xbf800000                                           // 00000006A3D8: BF800000
	.long 0xbf800000                                           // 00000006A3DC: BF800000
	.long 0xbf800000                                           // 00000006A3E0: BF800000
	.long 0xbf800000                                           // 00000006A3E4: BF800000
	.long 0xbf800000                                           // 00000006A3E8: BF800000
	.long 0xbf800000                                           // 00000006A3EC: BF800000
	.long 0xbf800000                                           // 00000006A3F0: BF800000
	.long 0xbf800000                                           // 00000006A3F4: BF800000
	.long 0xbf800000                                           // 00000006A3F8: BF800000
	.long 0xbf800000                                           // 00000006A3FC: BF800000

	.p2align	8
	.type	mul_get_local_id_get_local_size,@function
	.size	mul_get_local_id_get_local_size, mul_get_local_id_get_local_size_symend-mul_get_local_id_get_local_size
mul_get_local_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006A400: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006A408: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006A40C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006A410: 820B8001
	s_lshl_b32 s12, s2, 3                                      // 00000006A414: 840C8302
	s_lshl_b32 s13, s3, 2                                      // 00000006A418: 840D8203
	s_lshl_b32 s14, s4, 1                                      // 00000006A41C: 840E8104
	v_mov_b32_e32 v2, 0                                        // 00000006A420: 7E040280
	v_and_b32_e32 v10, 0x3ff, v0                               // 00000006A424: 361400FF 000003FF
	v_bfe_u32 v11, v0, 10, 10                                  // 00000006A42C: D610000B 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 00000006A434: D610000C 02292900
	s_mov_b32 s33, 0                                           // 00000006A43C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006A440: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006A444: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006A448: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006A44C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006A450: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006A454: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006A458: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006A45C: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006A460: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006A464: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006A468: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006A46C: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006A470: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006A474: 8205800B
	s_clause 0x2                                               // 00000006A478: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006A47C: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006A484: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006A48C: DC4A0000 09040002
	s_clause 0x2                                               // 00000006A494: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006A498: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006A4A0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A4A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006A4B0: BF89FC07
	v_add3_u32 v1, s4, s12, v10                                // 00000006A4B4: D6550001 04281804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006A4BC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006A4C0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v11                                // 00000006A4C8: D6550001 042C1A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006A4D0: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v12                                // 00000006A4D8: D6550001 04301C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006A4E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006A4E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006A4EC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006A4F0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006A4F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006A500: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006A504: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A508: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A510: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006A514: BF890BF7
	v_mul_u32_u24_e32 v2, v10, v7                              // 00000006A518: 16040F0A
	s_waitcnt vmcnt(1)                                         // 00000006A51C: BF8907F7
	v_mul_u32_u24_e32 v7, v11, v8                              // 00000006A520: 160E110B
	s_waitcnt vmcnt(0)                                         // 00000006A524: BF8903F7
	v_mul_u32_u24_e32 v8, v12, v9                              // 00000006A528: 1610130C
	s_clause 0x2                                               // 00000006A52C: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006A530: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006A538: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006A540: DC6A0000 007C0800
	s_nop 0                                                    // 00000006A548: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A54C: BFB60003
	s_endpgm                                                   // 00000006A550: BFB00000
mul_get_local_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000006A554: BF800000
	.long 0xbf800000                                           // 00000006A558: BF800000
	.long 0xbf800000                                           // 00000006A55C: BF800000
	.long 0xbf800000                                           // 00000006A560: BF800000
	.long 0xbf800000                                           // 00000006A564: BF800000
	.long 0xbf800000                                           // 00000006A568: BF800000
	.long 0xbf800000                                           // 00000006A56C: BF800000
	.long 0xbf800000                                           // 00000006A570: BF800000
	.long 0xbf800000                                           // 00000006A574: BF800000
	.long 0xbf800000                                           // 00000006A578: BF800000
	.long 0xbf800000                                           // 00000006A57C: BF800000
	.long 0xbf800000                                           // 00000006A580: BF800000
	.long 0xbf800000                                           // 00000006A584: BF800000
	.long 0xbf800000                                           // 00000006A588: BF800000
	.long 0xbf800000                                           // 00000006A58C: BF800000
	.long 0xbf800000                                           // 00000006A590: BF800000
	.long 0xbf800000                                           // 00000006A594: BF800000
	.long 0xbf800000                                           // 00000006A598: BF800000
	.long 0xbf800000                                           // 00000006A59C: BF800000
	.long 0xbf800000                                           // 00000006A5A0: BF800000
	.long 0xbf800000                                           // 00000006A5A4: BF800000
	.long 0xbf800000                                           // 00000006A5A8: BF800000
	.long 0xbf800000                                           // 00000006A5AC: BF800000
	.long 0xbf800000                                           // 00000006A5B0: BF800000
	.long 0xbf800000                                           // 00000006A5B4: BF800000
	.long 0xbf800000                                           // 00000006A5B8: BF800000
	.long 0xbf800000                                           // 00000006A5BC: BF800000
	.long 0xbf800000                                           // 00000006A5C0: BF800000
	.long 0xbf800000                                           // 00000006A5C4: BF800000
	.long 0xbf800000                                           // 00000006A5C8: BF800000
	.long 0xbf800000                                           // 00000006A5CC: BF800000
	.long 0xbf800000                                           // 00000006A5D0: BF800000
	.long 0xbf800000                                           // 00000006A5D4: BF800000
	.long 0xbf800000                                           // 00000006A5D8: BF800000
	.long 0xbf800000                                           // 00000006A5DC: BF800000
	.long 0xbf800000                                           // 00000006A5E0: BF800000
	.long 0xbf800000                                           // 00000006A5E4: BF800000
	.long 0xbf800000                                           // 00000006A5E8: BF800000
	.long 0xbf800000                                           // 00000006A5EC: BF800000
	.long 0xbf800000                                           // 00000006A5F0: BF800000
	.long 0xbf800000                                           // 00000006A5F4: BF800000
	.long 0xbf800000                                           // 00000006A5F8: BF800000
	.long 0xbf800000                                           // 00000006A5FC: BF800000

	.p2align	8
	.type	mul_get_group_id_get_local_size,@function
	.size	mul_get_group_id_get_local_size, mul_get_group_id_get_local_size_symend-mul_get_group_id_get_local_size
mul_get_group_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006A600: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006A608: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006A60C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006A610: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006A614: 840C8102
	s_lshl_b32 s13, s3, 4                                      // 00000006A618: 840D8403
	s_lshl_b32 s14, s4, 1                                      // 00000006A61C: 840E8104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006A620: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006A62C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A634: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006A63C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006A640: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000006A644: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006A648: BF8704C9
	s_add_u32 s6, s5, s6                                       // 00000006A64C: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000006A650: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006A654: BF0A0903
	s_cselect_b32 s8, 14, 20                                   // 00000006A658: 9808948E
	s_add_u32 s8, s5, s8                                       // 00000006A65C: 80080805
	s_addc_u32 s9, s11, 0                                      // 00000006A660: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 00000006A664: BF0A0A04
	s_cselect_b32 s10, 16, 22                                  // 00000006A668: 980A9690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006A66C: BF870009
	s_add_u32 s10, s5, s10                                     // 00000006A670: 800A0A05
	s_addc_u32 s11, s11, 0                                     // 00000006A674: 820B800B
	s_clause 0x2                                               // 00000006A678: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006A67C: DC4A0000 07060002
	global_load_u16 v8, v2, s[8:9]                             // 00000006A684: DC4A0000 08080002
	global_load_u16 v9, v2, s[10:11]                           // 00000006A68C: DC4A0000 090A0002
	s_clause 0x2                                               // 00000006A694: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A698: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006A6A0: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A6A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006A6B0: BF89FC07
	v_add3_u32 v1, s8, s12, v1                                 // 00000006A6B4: D6550001 04041808
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006A6BC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006A6C0: D73C0003 00020282
	v_add3_u32 v1, s10, s13, v5                                // 00000006A6C8: D6550001 04141A0A
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006A6D0: D73C0005 00020282
	v_add3_u32 v1, s5, s14, v0                                 // 00000006A6D8: D6550001 04001C05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006A6E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006A6E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006A6EC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006A6F0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006A6F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006A700: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006A704: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A708: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A710: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006A714: BF890BF7
	v_mul_lo_u32 v2, s2, v7                                    // 00000006A718: D72C0002 00020E02
	s_waitcnt vmcnt(1)                                         // 00000006A720: BF8907F7
	v_mul_lo_u32 v7, s3, v8                                    // 00000006A724: D72C0007 00021003
	s_waitcnt vmcnt(0)                                         // 00000006A72C: BF8903F7
	v_mul_lo_u32 v8, s4, v9                                    // 00000006A730: D72C0008 00021204
	s_clause 0x2                                               // 00000006A738: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006A73C: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006A744: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006A74C: DC6A0000 007C0800
	s_nop 0                                                    // 00000006A754: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A758: BFB60003
	s_endpgm                                                   // 00000006A75C: BFB00000
mul_get_group_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000006A760: BF800000
	.long 0xbf800000                                           // 00000006A764: BF800000
	.long 0xbf800000                                           // 00000006A768: BF800000
	.long 0xbf800000                                           // 00000006A76C: BF800000
	.long 0xbf800000                                           // 00000006A770: BF800000
	.long 0xbf800000                                           // 00000006A774: BF800000
	.long 0xbf800000                                           // 00000006A778: BF800000
	.long 0xbf800000                                           // 00000006A77C: BF800000
	.long 0xbf800000                                           // 00000006A780: BF800000
	.long 0xbf800000                                           // 00000006A784: BF800000
	.long 0xbf800000                                           // 00000006A788: BF800000
	.long 0xbf800000                                           // 00000006A78C: BF800000
	.long 0xbf800000                                           // 00000006A790: BF800000
	.long 0xbf800000                                           // 00000006A794: BF800000
	.long 0xbf800000                                           // 00000006A798: BF800000
	.long 0xbf800000                                           // 00000006A79C: BF800000
	.long 0xbf800000                                           // 00000006A7A0: BF800000
	.long 0xbf800000                                           // 00000006A7A4: BF800000
	.long 0xbf800000                                           // 00000006A7A8: BF800000
	.long 0xbf800000                                           // 00000006A7AC: BF800000
	.long 0xbf800000                                           // 00000006A7B0: BF800000
	.long 0xbf800000                                           // 00000006A7B4: BF800000
	.long 0xbf800000                                           // 00000006A7B8: BF800000
	.long 0xbf800000                                           // 00000006A7BC: BF800000
	.long 0xbf800000                                           // 00000006A7C0: BF800000
	.long 0xbf800000                                           // 00000006A7C4: BF800000
	.long 0xbf800000                                           // 00000006A7C8: BF800000
	.long 0xbf800000                                           // 00000006A7CC: BF800000
	.long 0xbf800000                                           // 00000006A7D0: BF800000
	.long 0xbf800000                                           // 00000006A7D4: BF800000
	.long 0xbf800000                                           // 00000006A7D8: BF800000
	.long 0xbf800000                                           // 00000006A7DC: BF800000
	.long 0xbf800000                                           // 00000006A7E0: BF800000
	.long 0xbf800000                                           // 00000006A7E4: BF800000
	.long 0xbf800000                                           // 00000006A7E8: BF800000
	.long 0xbf800000                                           // 00000006A7EC: BF800000
	.long 0xbf800000                                           // 00000006A7F0: BF800000
	.long 0xbf800000                                           // 00000006A7F4: BF800000
	.long 0xbf800000                                           // 00000006A7F8: BF800000
	.long 0xbf800000                                           // 00000006A7FC: BF800000

	.p2align	8
	.type	mul_get_local_size_get_local_size,@function
	.size	mul_get_local_size_get_local_size, mul_get_local_size_get_local_size_symend-mul_get_local_size_get_local_size
mul_get_local_size_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006A800: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006A808: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006A80C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006A810: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006A814: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000006A818: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006A81C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006A820: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006A82C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A834: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006A83C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006A840: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006A844: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006A848: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006A84C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006A850: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006A854: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006A858: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006A85C: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006A860: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006A864: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006A868: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006A86C: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006A870: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006A874: 8205800B
	s_clause 0x2                                               // 00000006A878: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006A87C: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006A884: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006A88C: DC4A0000 09040002
	s_clause 0x2                                               // 00000006A894: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006A898: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006A8A0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A8A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006A8B0: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 00000006A8B4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006A8BC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006A8C0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 00000006A8C8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006A8D0: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v0                                 // 00000006A8D8: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006A8E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006A8E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006A8EC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006A8F0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006A8F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006A900: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006A904: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A908: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A910: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006A914: BF890BF7
	v_mul_lo_u32 v2, v7, v7                                    // 00000006A918: D72C0002 00020F07
	s_waitcnt vmcnt(1)                                         // 00000006A920: BF8907F7
	v_mul_lo_u32 v7, v8, v8                                    // 00000006A924: D72C0007 00021108
	s_waitcnt vmcnt(0)                                         // 00000006A92C: BF8903F7
	v_mul_lo_u32 v8, v9, v9                                    // 00000006A930: D72C0008 00021309
	s_clause 0x2                                               // 00000006A938: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006A93C: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006A944: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006A94C: DC6A0000 007C0800
	s_nop 0                                                    // 00000006A954: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A958: BFB60003
	s_endpgm                                                   // 00000006A95C: BFB00000
mul_get_local_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000006A960: BF800000
	.long 0xbf800000                                           // 00000006A964: BF800000
	.long 0xbf800000                                           // 00000006A968: BF800000
	.long 0xbf800000                                           // 00000006A96C: BF800000
	.long 0xbf800000                                           // 00000006A970: BF800000
	.long 0xbf800000                                           // 00000006A974: BF800000
	.long 0xbf800000                                           // 00000006A978: BF800000
	.long 0xbf800000                                           // 00000006A97C: BF800000
	.long 0xbf800000                                           // 00000006A980: BF800000
	.long 0xbf800000                                           // 00000006A984: BF800000
	.long 0xbf800000                                           // 00000006A988: BF800000
	.long 0xbf800000                                           // 00000006A98C: BF800000
	.long 0xbf800000                                           // 00000006A990: BF800000
	.long 0xbf800000                                           // 00000006A994: BF800000
	.long 0xbf800000                                           // 00000006A998: BF800000
	.long 0xbf800000                                           // 00000006A99C: BF800000
	.long 0xbf800000                                           // 00000006A9A0: BF800000
	.long 0xbf800000                                           // 00000006A9A4: BF800000
	.long 0xbf800000                                           // 00000006A9A8: BF800000
	.long 0xbf800000                                           // 00000006A9AC: BF800000
	.long 0xbf800000                                           // 00000006A9B0: BF800000
	.long 0xbf800000                                           // 00000006A9B4: BF800000
	.long 0xbf800000                                           // 00000006A9B8: BF800000
	.long 0xbf800000                                           // 00000006A9BC: BF800000
	.long 0xbf800000                                           // 00000006A9C0: BF800000
	.long 0xbf800000                                           // 00000006A9C4: BF800000
	.long 0xbf800000                                           // 00000006A9C8: BF800000
	.long 0xbf800000                                           // 00000006A9CC: BF800000
	.long 0xbf800000                                           // 00000006A9D0: BF800000
	.long 0xbf800000                                           // 00000006A9D4: BF800000
	.long 0xbf800000                                           // 00000006A9D8: BF800000
	.long 0xbf800000                                           // 00000006A9DC: BF800000
	.long 0xbf800000                                           // 00000006A9E0: BF800000
	.long 0xbf800000                                           // 00000006A9E4: BF800000
	.long 0xbf800000                                           // 00000006A9E8: BF800000
	.long 0xbf800000                                           // 00000006A9EC: BF800000
	.long 0xbf800000                                           // 00000006A9F0: BF800000
	.long 0xbf800000                                           // 00000006A9F4: BF800000
	.long 0xbf800000                                           // 00000006A9F8: BF800000
	.long 0xbf800000                                           // 00000006A9FC: BF800000

	.p2align	8
	.type	mul_get_global_id_get_local_size,@function
	.size	mul_get_global_id_get_local_size, mul_get_global_id_get_local_size_symend-mul_get_global_id_get_local_size
mul_get_global_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006AA00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006AA08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006AA0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006AA10: 820B8001
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006AA14: D6100002 02291500
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000006AA1C: 360600FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006AA24: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006AA2C: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006AA30: BF870003
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006AA34: D6560002 04090203
	v_mov_b32_e32 v1, 0                                        // 00000006AA3C: 7E020280
	v_lshl_or_b32 v0, s2, 1, v3                                // 00000006AA40: D6560000 040D0202
	v_lshl_or_b32 v6, s4, 2, v4                                // 00000006AA48: D6560006 04110404
	s_cmp_lt_u32 s2, s8                                        // 00000006AA50: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000006AA54: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006AA58: BF8704C9
	s_add_u32 s6, s5, s6                                       // 00000006AA5C: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000006AA60: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006AA64: BF0A0903
	s_cselect_b32 s8, 14, 20                                   // 00000006AA68: 9808948E
	s_add_u32 s8, s5, s8                                       // 00000006AA6C: 80080805
	s_addc_u32 s9, s11, 0                                      // 00000006AA70: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 00000006AA74: BF0A0A04
	s_cselect_b32 s10, 16, 22                                  // 00000006AA78: 980A9690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006AA7C: BF870009
	s_add_u32 s10, s5, s10                                     // 00000006AA80: 800A0A05
	s_addc_u32 s11, s11, 0                                     // 00000006AA84: 820B800B
	s_clause 0x2                                               // 00000006AA88: BF850002
	global_load_u16 v12, v1, s[6:7]                            // 00000006AA8C: DC4A0000 0C060001
	global_load_u16 v13, v1, s[8:9]                            // 00000006AA94: DC4A0000 0D080001
	global_load_u16 v14, v1, s[10:11]                          // 00000006AA9C: DC4A0000 0E0A0001
	s_clause 0x2                                               // 00000006AAA4: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006AAA8: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006AAB0: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006AAB8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006AAC0: BF89FC07
	v_add_nc_u32_e32 v2, s10, v2                               // 00000006AAC4: 4A04040A
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 00000006AAC8: D73C0004 00020082
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v6, s5, v6      // 00000006AAD0: CA200101 03060C05
	v_mov_b32_e32 v7, v1                                       // 00000006AAD8: 7E0E0301
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006AADC: BF870212
	v_lshlrev_b64 v[8:9], 2, v[2:3]                            // 00000006AAE0: D73C0008 00020482
	v_add_co_u32 v3, vcc_lo, s0, v4                            // 00000006AAE8: D7006A03 00020800
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v5, vcc_lo             // 00000006AAF0: 40080A01
	v_add_nc_u32_e32 v5, s8, v0                                // 00000006AAF4: 4A0A0008
	v_lshlrev_b64 v[10:11], 2, v[6:7]                          // 00000006AAF8: D73C000A 00020C82
	v_add_co_u32 v0, vcc_lo, s0, v8                            // 00000006AB00: D7006A00 00021000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v9, vcc_lo             // 00000006AB08: 40021201
	s_waitcnt vmcnt(2)                                         // 00000006AB0C: BF890BF7
	v_mul_lo_u32 v7, v5, v12                                   // 00000006AB10: D72C0007 00021905
	s_waitcnt vmcnt(1)                                         // 00000006AB18: BF8907F7
	v_mul_lo_u32 v2, v2, v13                                   // 00000006AB1C: D72C0002 00021B02
	s_waitcnt vmcnt(0)                                         // 00000006AB24: BF8903F7
	v_mul_lo_u32 v8, v6, v14                                   // 00000006AB28: D72C0008 00021D06
	v_add_co_u32 v5, vcc_lo, s0, v10                           // 00000006AB30: D7006A05 00021400
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v11, vcc_lo            // 00000006AB38: 400C1601
	s_clause 0x2                                               // 00000006AB3C: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006AB40: DC6A0000 007C0703
	global_store_b32 v[0:1], v2, off                           // 00000006AB48: DC6A0000 007C0200
	global_store_b32 v[5:6], v8, off                           // 00000006AB50: DC6A0000 007C0805
	s_nop 0                                                    // 00000006AB58: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006AB5C: BFB60003
	s_endpgm                                                   // 00000006AB60: BFB00000
mul_get_global_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000006AB64: BF800000
	.long 0xbf800000                                           // 00000006AB68: BF800000
	.long 0xbf800000                                           // 00000006AB6C: BF800000
	.long 0xbf800000                                           // 00000006AB70: BF800000
	.long 0xbf800000                                           // 00000006AB74: BF800000
	.long 0xbf800000                                           // 00000006AB78: BF800000
	.long 0xbf800000                                           // 00000006AB7C: BF800000
	.long 0xbf800000                                           // 00000006AB80: BF800000
	.long 0xbf800000                                           // 00000006AB84: BF800000
	.long 0xbf800000                                           // 00000006AB88: BF800000
	.long 0xbf800000                                           // 00000006AB8C: BF800000
	.long 0xbf800000                                           // 00000006AB90: BF800000
	.long 0xbf800000                                           // 00000006AB94: BF800000
	.long 0xbf800000                                           // 00000006AB98: BF800000
	.long 0xbf800000                                           // 00000006AB9C: BF800000
	.long 0xbf800000                                           // 00000006ABA0: BF800000
	.long 0xbf800000                                           // 00000006ABA4: BF800000
	.long 0xbf800000                                           // 00000006ABA8: BF800000
	.long 0xbf800000                                           // 00000006ABAC: BF800000
	.long 0xbf800000                                           // 00000006ABB0: BF800000
	.long 0xbf800000                                           // 00000006ABB4: BF800000
	.long 0xbf800000                                           // 00000006ABB8: BF800000
	.long 0xbf800000                                           // 00000006ABBC: BF800000
	.long 0xbf800000                                           // 00000006ABC0: BF800000
	.long 0xbf800000                                           // 00000006ABC4: BF800000
	.long 0xbf800000                                           // 00000006ABC8: BF800000
	.long 0xbf800000                                           // 00000006ABCC: BF800000
	.long 0xbf800000                                           // 00000006ABD0: BF800000
	.long 0xbf800000                                           // 00000006ABD4: BF800000
	.long 0xbf800000                                           // 00000006ABD8: BF800000
	.long 0xbf800000                                           // 00000006ABDC: BF800000
	.long 0xbf800000                                           // 00000006ABE0: BF800000
	.long 0xbf800000                                           // 00000006ABE4: BF800000
	.long 0xbf800000                                           // 00000006ABE8: BF800000
	.long 0xbf800000                                           // 00000006ABEC: BF800000
	.long 0xbf800000                                           // 00000006ABF0: BF800000
	.long 0xbf800000                                           // 00000006ABF4: BF800000
	.long 0xbf800000                                           // 00000006ABF8: BF800000
	.long 0xbf800000                                           // 00000006ABFC: BF800000

	.p2align	8
	.type	mul_get_global_size_get_local_size,@function
	.size	mul_get_global_size_get_local_size, mul_get_global_size_get_local_size_symend-mul_get_global_size_get_local_size
mul_get_global_size_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006AC00: F4080200 F8000010
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006AC08: CA240080 020000FF 000003FF
	s_add_u32 s5, s0, 16                                       // 00000006AC14: 80059000
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006AC18: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006AC20: D6100000 02292900
	s_clause 0x1                                               // 00000006AC28: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006AC2C: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006AC34: DC4A0026 08000002
	s_waitcnt lgkmcnt(0)                                       // 00000006AC3C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006AC40: 820B8001
	s_lshl_b32 s12, s2, 4                                      // 00000006AC44: 840C8402
	s_lshl_b32 s13, s3, 1                                      // 00000006AC48: 840D8103
	s_lshl_b32 s14, s4, 1                                      // 00000006AC4C: 840E8104
	s_mov_b32 s33, 0                                           // 00000006AC50: BEA10080
	s_lshl_b32 s15, s8, 4                                      // 00000006AC54: 840F8408
	s_lshl_b32 s16, s9, 1                                      // 00000006AC58: 84108109
	s_lshl_b32 s17, s10, 1                                     // 00000006AC5C: 8411810A
	s_cmp_lt_u32 s2, s8                                        // 00000006AC60: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006AC64: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006AC68: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006AC6C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006AC70: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006AC74: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006AC78: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006AC7C: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006AC80: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006AC84: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006AC88: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006AC8C: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006AC90: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006AC94: 8205800B
	s_clause 0x2                                               // 00000006AC98: BF850002
	global_load_u16 v9, v2, s[6:7]                             // 00000006AC9C: DC4A0000 09060002
	global_load_u16 v10, v2, s[2:3]                            // 00000006ACA4: DC4A0000 0A020002
	global_load_u16 v11, v2, s[4:5]                            // 00000006ACAC: DC4A0000 0B040002
	s_clause 0x2                                               // 00000006ACB4: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006ACB8: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006ACC0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006ACC8: F4040000 F8000000
	s_waitcnt lgkmcnt(0)                                       // 00000006ACD0: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 00000006ACD4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006ACDC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006ACE0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 00000006ACE8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006ACF0: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v0                                 // 00000006ACF8: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006AD00: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006AD04: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006AD0C: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006AD10: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006AD18: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006AD20: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006AD24: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006AD28: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006AD30: 40020201
	s_waitcnt vmcnt(4)                                         // 00000006AD34: BF8913F7
	v_lshrrev_b32_e32 v12, 16, v7                              // 00000006AD38: 32180E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006AD3C: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(3)                                         // 00000006AD44: BF890FF7
	v_add_nc_u32_e32 v2, s17, v8                               // 00000006AD48: 4A041011
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006AD4C: BF870193
	v_add_nc_u32_e32 v8, s16, v12                              // 00000006AD50: 4A101810
	v_add_nc_u32_e32 v7, s15, v7                               // 00000006AD54: 4A0E0E0F
	s_waitcnt vmcnt(2)                                         // 00000006AD58: BF890BF7
	s_delay_alu instid0(VALU_DEP_1)                            // 00000006AD5C: BF870001
	v_mul_lo_u32 v7, v7, v9                                    // 00000006AD60: D72C0007 00021307
	s_waitcnt vmcnt(1)                                         // 00000006AD68: BF8907F7
	v_mul_lo_u32 v8, v8, v10                                   // 00000006AD6C: D72C0008 00021508
	s_waitcnt vmcnt(0)                                         // 00000006AD74: BF8903F7
	v_mul_lo_u32 v2, v2, v11                                   // 00000006AD78: D72C0002 00021702
	s_clause 0x2                                               // 00000006AD80: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006AD84: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006AD8C: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006AD94: DC6A0000 007C0200
	s_nop 0                                                    // 00000006AD9C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006ADA0: BFB60003
	s_endpgm                                                   // 00000006ADA4: BFB00000
mul_get_global_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000006ADA8: BF800000
	.long 0xbf800000                                           // 00000006ADAC: BF800000
	.long 0xbf800000                                           // 00000006ADB0: BF800000
	.long 0xbf800000                                           // 00000006ADB4: BF800000
	.long 0xbf800000                                           // 00000006ADB8: BF800000
	.long 0xbf800000                                           // 00000006ADBC: BF800000
	.long 0xbf800000                                           // 00000006ADC0: BF800000
	.long 0xbf800000                                           // 00000006ADC4: BF800000
	.long 0xbf800000                                           // 00000006ADC8: BF800000
	.long 0xbf800000                                           // 00000006ADCC: BF800000
	.long 0xbf800000                                           // 00000006ADD0: BF800000
	.long 0xbf800000                                           // 00000006ADD4: BF800000
	.long 0xbf800000                                           // 00000006ADD8: BF800000
	.long 0xbf800000                                           // 00000006ADDC: BF800000
	.long 0xbf800000                                           // 00000006ADE0: BF800000
	.long 0xbf800000                                           // 00000006ADE4: BF800000
	.long 0xbf800000                                           // 00000006ADE8: BF800000
	.long 0xbf800000                                           // 00000006ADEC: BF800000
	.long 0xbf800000                                           // 00000006ADF0: BF800000
	.long 0xbf800000                                           // 00000006ADF4: BF800000
	.long 0xbf800000                                           // 00000006ADF8: BF800000
	.long 0xbf800000                                           // 00000006ADFC: BF800000

	.p2align	8
	.type	mul_get_num_groups_get_local_size,@function
	.size	mul_get_num_groups_get_local_size, mul_get_num_groups_get_local_size_symend-mul_get_num_groups_get_local_size
mul_get_num_groups_get_local_size:
	v_mov_b32_e32 v2, 0                                        // 00000006AE00: 7E040280
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006AE04: D6100005 02291500
	s_mov_b32 s33, 0                                           // 00000006AE0C: BEA10080
	s_clause 0x1                                               // 00000006AE10: BF850001
	global_load_b32 v1, v2, s[0:1] offset:34                   // 00000006AE14: DC520022 01000002
	global_load_u16 v3, v2, s[0:1] offset:38                   // 00000006AE1C: DC4A0026 03000002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006AE24: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006AE2C: BF89FC07
	s_add_u32 s11, s0, 16                                      // 00000006AE30: 800B9000
	s_addc_u32 s12, s1, 0                                      // 00000006AE34: 820C8001
	s_lshl_b32 s13, s2, 1                                      // 00000006AE38: 840D8102
	s_lshl_b32 s14, s3, 1                                      // 00000006AE3C: 840E8103
	s_lshl_b32 s15, s4, 2                                      // 00000006AE40: 840F8204
	s_waitcnt vmcnt(1)                                         // 00000006AE44: BF8907F7
	v_lshrrev_b32_e32 v4, 16, v1                               // 00000006AE48: 32080290
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000006AE4C: 7C7A0280
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006AE50: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006AE58: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006AE60: BF870004
	v_cmp_ne_u16_e64 s5, 0, v4.l                               // 00000006AE64: D43D0005 00020880
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006AE6C: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006AE70: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v3.l                           // 00000006AE74: 7C7A0680
	s_addc_u32 s16, s8, 0                                      // 00000006AE78: 82108008
	s_cmp_lg_u32 s5, 0                                         // 00000006AE7C: BF078005
	s_addc_u32 s17, s9, 0                                      // 00000006AE80: 82118009
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006AE84: BF07806A
	s_addc_u32 s18, s10, 0                                     // 00000006AE88: 8212800A
	s_cmp_lt_u32 s2, s8                                        // 00000006AE8C: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006AE90: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006AE94: BF8704C9
	s_add_u32 s6, s11, s2                                      // 00000006AE98: 8006020B
	s_addc_u32 s7, s12, 0                                      // 00000006AE9C: 8207800C
	s_cmp_lt_u32 s3, s9                                        // 00000006AEA0: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006AEA4: 9802948E
	s_add_u32 s2, s11, s2                                      // 00000006AEA8: 8002020B
	s_addc_u32 s3, s12, 0                                      // 00000006AEAC: 8203800C
	s_cmp_lt_u32 s4, s10                                       // 00000006AEB0: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006AEB4: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006AEB8: BF870009
	s_add_u32 s4, s11, s4                                      // 00000006AEBC: 8004040B
	s_addc_u32 s5, s12, 0                                      // 00000006AEC0: 8205800C
	s_clause 0x2                                               // 00000006AEC4: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006AEC8: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006AED0: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006AED8: DC4A0000 09040002
	s_clause 0x2                                               // 00000006AEE0: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006AEE4: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006AEEC: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006AEF4: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006AEFC: BF89FC07
	v_add3_u32 v1, s4, s13, v1                                 // 00000006AF00: D6550001 04041A04
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006AF08: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006AF0C: D73C0003 00020282
	v_add3_u32 v1, s6, s14, v5                                 // 00000006AF14: D6550001 04141C06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006AF1C: D73C0005 00020282
	v_add3_u32 v1, s2, s15, v0                                 // 00000006AF24: D6550001 04001E02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006AF2C: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006AF30: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006AF38: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006AF3C: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006AF44: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006AF4C: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006AF50: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006AF54: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006AF5C: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006AF60: BF890BF7
	v_mul_lo_u32 v2, s16, v7                                   // 00000006AF64: D72C0002 00020E10
	s_waitcnt vmcnt(1)                                         // 00000006AF6C: BF8907F7
	v_mul_lo_u32 v7, s17, v8                                   // 00000006AF70: D72C0007 00021011
	s_waitcnt vmcnt(0)                                         // 00000006AF78: BF8903F7
	v_mul_lo_u32 v8, s18, v9                                   // 00000006AF7C: D72C0008 00021212
	s_clause 0x2                                               // 00000006AF84: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006AF88: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006AF90: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006AF98: DC6A0000 007C0800
	s_nop 0                                                    // 00000006AFA0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006AFA4: BFB60003
	s_endpgm                                                   // 00000006AFA8: BFB00000
mul_get_num_groups_get_local_size_symend:
	.long 0xbf800000                                           // 00000006AFAC: BF800000
	.long 0xbf800000                                           // 00000006AFB0: BF800000
	.long 0xbf800000                                           // 00000006AFB4: BF800000
	.long 0xbf800000                                           // 00000006AFB8: BF800000
	.long 0xbf800000                                           // 00000006AFBC: BF800000
	.long 0xbf800000                                           // 00000006AFC0: BF800000
	.long 0xbf800000                                           // 00000006AFC4: BF800000
	.long 0xbf800000                                           // 00000006AFC8: BF800000
	.long 0xbf800000                                           // 00000006AFCC: BF800000
	.long 0xbf800000                                           // 00000006AFD0: BF800000
	.long 0xbf800000                                           // 00000006AFD4: BF800000
	.long 0xbf800000                                           // 00000006AFD8: BF800000
	.long 0xbf800000                                           // 00000006AFDC: BF800000
	.long 0xbf800000                                           // 00000006AFE0: BF800000
	.long 0xbf800000                                           // 00000006AFE4: BF800000
	.long 0xbf800000                                           // 00000006AFE8: BF800000
	.long 0xbf800000                                           // 00000006AFEC: BF800000
	.long 0xbf800000                                           // 00000006AFF0: BF800000
	.long 0xbf800000                                           // 00000006AFF4: BF800000
	.long 0xbf800000                                           // 00000006AFF8: BF800000
	.long 0xbf800000                                           // 00000006AFFC: BF800000

	.p2align	8
	.type	mul_get_work_dim_get_local_size,@function
	.size	mul_get_work_dim_get_local_size, mul_get_work_dim_get_local_size_symend-mul_get_work_dim_get_local_size
mul_get_work_dim_get_local_size:
	s_clause 0x1                                               // 00000006B000: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 00000006B004: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006B00C: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006B014: BF89FC07
	s_add_u32 s11, s0, 16                                      // 00000006B018: 800B9000
	s_addc_u32 s12, s1, 0                                      // 00000006B01C: 820C8001
	s_lshl_b32 s13, s2, 1                                      // 00000006B020: 840D8102
	s_lshl_b32 s14, s3, 1                                      // 00000006B024: 840E8103
	s_lshl_b32 s15, s4, 2                                      // 00000006B028: 840F8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006B02C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006B038: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B040: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006B048: BEA10080
	s_and_b32 s16, s5, 0xffff                                  // 00000006B04C: 8B10FF05 0000FFFF
	s_cmp_lt_u32 s2, s8                                        // 00000006B054: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006B058: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006B05C: BF8704C9
	s_add_u32 s6, s11, s2                                      // 00000006B060: 8006020B
	s_addc_u32 s7, s12, 0                                      // 00000006B064: 8207800C
	s_cmp_lt_u32 s3, s9                                        // 00000006B068: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006B06C: 9802948E
	s_add_u32 s2, s11, s2                                      // 00000006B070: 8002020B
	s_addc_u32 s3, s12, 0                                      // 00000006B074: 8203800C
	s_cmp_lt_u32 s4, s10                                       // 00000006B078: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006B07C: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006B080: BF870009
	s_add_u32 s4, s11, s4                                      // 00000006B084: 8004040B
	s_addc_u32 s5, s12, 0                                      // 00000006B088: 8205800C
	s_clause 0x2                                               // 00000006B08C: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006B090: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006B098: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006B0A0: DC4A0000 09040002
	s_clause 0x2                                               // 00000006B0A8: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006B0AC: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006B0B4: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B0BC: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006B0C4: BF89FC07
	v_add3_u32 v1, s4, s13, v1                                 // 00000006B0C8: D6550001 04041A04
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006B0D0: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006B0D4: D73C0003 00020282
	v_add3_u32 v1, s6, s14, v5                                 // 00000006B0DC: D6550001 04141C06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006B0E4: D73C0005 00020282
	v_add3_u32 v1, s2, s15, v0                                 // 00000006B0EC: D6550001 04001E02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006B0F4: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006B0F8: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006B100: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006B104: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006B10C: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006B114: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006B118: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B11C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B124: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006B128: BF890BF7
	v_mul_lo_u32 v2, v7, s16                                   // 00000006B12C: D72C0002 00002107
	s_waitcnt vmcnt(1)                                         // 00000006B134: BF8907F7
	v_mul_lo_u32 v7, v8, s16                                   // 00000006B138: D72C0007 00002108
	s_waitcnt vmcnt(0)                                         // 00000006B140: BF8903F7
	v_mul_lo_u32 v8, v9, s16                                   // 00000006B144: D72C0008 00002109
	s_clause 0x2                                               // 00000006B14C: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006B150: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006B158: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006B160: DC6A0000 007C0800
	s_nop 0                                                    // 00000006B168: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B16C: BFB60003
	s_endpgm                                                   // 00000006B170: BFB00000
mul_get_work_dim_get_local_size_symend:
	.long 0xbf800000                                           // 00000006B174: BF800000
	.long 0xbf800000                                           // 00000006B178: BF800000
	.long 0xbf800000                                           // 00000006B17C: BF800000
	.long 0xbf800000                                           // 00000006B180: BF800000
	.long 0xbf800000                                           // 00000006B184: BF800000
	.long 0xbf800000                                           // 00000006B188: BF800000
	.long 0xbf800000                                           // 00000006B18C: BF800000
	.long 0xbf800000                                           // 00000006B190: BF800000
	.long 0xbf800000                                           // 00000006B194: BF800000
	.long 0xbf800000                                           // 00000006B198: BF800000
	.long 0xbf800000                                           // 00000006B19C: BF800000
	.long 0xbf800000                                           // 00000006B1A0: BF800000
	.long 0xbf800000                                           // 00000006B1A4: BF800000
	.long 0xbf800000                                           // 00000006B1A8: BF800000
	.long 0xbf800000                                           // 00000006B1AC: BF800000
	.long 0xbf800000                                           // 00000006B1B0: BF800000
	.long 0xbf800000                                           // 00000006B1B4: BF800000
	.long 0xbf800000                                           // 00000006B1B8: BF800000
	.long 0xbf800000                                           // 00000006B1BC: BF800000
	.long 0xbf800000                                           // 00000006B1C0: BF800000
	.long 0xbf800000                                           // 00000006B1C4: BF800000
	.long 0xbf800000                                           // 00000006B1C8: BF800000
	.long 0xbf800000                                           // 00000006B1CC: BF800000
	.long 0xbf800000                                           // 00000006B1D0: BF800000
	.long 0xbf800000                                           // 00000006B1D4: BF800000
	.long 0xbf800000                                           // 00000006B1D8: BF800000
	.long 0xbf800000                                           // 00000006B1DC: BF800000
	.long 0xbf800000                                           // 00000006B1E0: BF800000
	.long 0xbf800000                                           // 00000006B1E4: BF800000
	.long 0xbf800000                                           // 00000006B1E8: BF800000
	.long 0xbf800000                                           // 00000006B1EC: BF800000
	.long 0xbf800000                                           // 00000006B1F0: BF800000
	.long 0xbf800000                                           // 00000006B1F4: BF800000
	.long 0xbf800000                                           // 00000006B1F8: BF800000
	.long 0xbf800000                                           // 00000006B1FC: BF800000

	.p2align	8
	.type	mul_x_get_global_id,@function
	.size	mul_x_get_global_id, mul_x_get_global_id_symend-mul_x_get_global_id
mul_x_get_global_id:
	s_clause 0x2                                               // 00000006B200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006B20C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x8                                 // 00000006B214: F4000180 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006B21C: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], null                            // 00000006B224: F4040000 F8000000
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006B22C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B234: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006B23C: BEA10080
	v_lshl_or_b32 v3, s2, 4, v1                                // 00000006B240: D6560003 04050802
	v_mov_b32_e32 v1, 0                                        // 00000006B248: 7E020280
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006B24C: D6560002 04090203
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006B254: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006B25C: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B260: BF870193
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v0, s8, v3      // 00000006B264: CA200101 03000608
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v2, s10, v2     // 00000006B26C: CA200101 0502040A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B274: BF870193
	v_add_nc_u32_e32 v4, s5, v4                                // 00000006B278: 4A080805
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006B27C: D73C0006 00020082
	v_mul_lo_u32 v8, v0, s6                                    // 00000006B284: D72C0008 00000D00
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006B28C: BF870004
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006B290: D73C0000 00020482
	v_mul_lo_u32 v9, v2, s6                                    // 00000006B298: D72C0009 00000D02
	v_lshlrev_b64 v[2:3], 2, v[4:5]                            // 00000006B2A0: D73C0002 00020882
	v_mul_lo_u32 v4, v4, s6                                    // 00000006B2A8: D72C0004 00000D04
	v_add_co_u32 v5, vcc_lo, s0, v6                            // 00000006B2B0: D7006A05 00020C00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v7, vcc_lo             // 00000006B2B8: 400C0E01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B2BC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B2C4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006B2C8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006B2D0: 40060601
	s_clause 0x2                                               // 00000006B2D4: BF850002
	global_store_b32 v[5:6], v8, off                           // 00000006B2D8: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 00000006B2E0: DC6A0000 007C0900
	global_store_b32 v[2:3], v4, off                           // 00000006B2E8: DC6A0000 007C0402
	s_nop 0                                                    // 00000006B2F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B2F4: BFB60003
	s_endpgm                                                   // 00000006B2F8: BFB00000
mul_x_get_global_id_symend:
	.long 0xbf800000                                           // 00000006B2FC: BF800000

	.p2align	8
	.type	mul_get_global_offset_get_global_id,@function
	.size	mul_get_global_offset_get_global_id, mul_get_global_offset_get_global_id_symend-mul_get_global_offset_get_global_id
mul_get_global_offset_get_global_id:
	s_clause 0x1                                               // 00000006B300: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006B30C: F4000140 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006B314: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B31C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006B324: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B32C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006B334: BEA10080
	v_lshl_or_b32 v3, s2, 1, v1                                // 00000006B338: D6560003 04050202
	v_mov_b32_e32 v1, 0                                        // 00000006B340: 7E020280
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006B344: D6560002 04090803
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006B34C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006B354: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B358: BF870193
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v0, s8, v3      // 00000006B35C: CA200101 03000608
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v2, s10, v2     // 00000006B364: CA200101 0502040A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B36C: BF870193
	v_add_nc_u32_e32 v4, s5, v4                                // 00000006B370: 4A080805
	v_mul_lo_u32 v6, s8, v0                                    // 00000006B374: D72C0006 00020008
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006B37C: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006B384: BF870004
	v_mul_lo_u32 v7, s10, v2                                   // 00000006B388: D72C0007 0002040A
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006B390: D73C0002 00020482
	v_mul_lo_u32 v8, s5, v4                                    // 00000006B398: D72C0008 00020805
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006B3A0: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B3A8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B3B0: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006B3B4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006B3BC: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006B3C0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006B3C8: 400A0A01
	s_clause 0x2                                               // 00000006B3CC: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006B3D0: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006B3D8: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006B3E0: DC6A0000 007C0804
	s_nop 0                                                    // 00000006B3E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B3EC: BFB60003
	s_endpgm                                                   // 00000006B3F0: BFB00000
mul_get_global_offset_get_global_id_symend:
	.long 0xbf800000                                           // 00000006B3F4: BF800000
	.long 0xbf800000                                           // 00000006B3F8: BF800000
	.long 0xbf800000                                           // 00000006B3FC: BF800000

	.p2align	8
	.type	mul_get_local_id_get_global_id,@function
	.size	mul_get_local_id_get_global_id, mul_get_local_id_get_global_id_symend-mul_get_local_id_get_global_id
mul_get_local_id_get_global_id:
	s_clause 0x1                                               // 00000006B400: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B404: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006B40C: F4000140 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v6, 0x3ff, v0       // 00000006B414: CA240080 010600FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B420: F4040000 F8000008
	v_bfe_u32 v7, v0, 10, 10                                   // 00000006B428: D6100007 02291500
	v_bfe_u32 v8, v0, 20, 10                                   // 00000006B430: D6100008 02292900
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006B438: BF870003
	v_lshl_or_b32 v0, s2, 3, v6                                // 00000006B43C: D6560000 04190602
	s_mov_b32 s33, 0                                           // 00000006B444: BEA10080
	v_mov_b32_e32 v3, v1                                       // 00000006B448: 7E060301
	v_lshl_or_b32 v2, s3, 2, v7                                // 00000006B44C: D6560002 041D0403
	v_lshl_or_b32 v4, s4, 1, v8                                // 00000006B454: D6560004 04210204
	s_waitcnt lgkmcnt(0)                                       // 00000006B45C: BF89FC07
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v0, s8, v0      // 00000006B460: CA200101 05000008
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B468: BF870193
	v_add_nc_u32_e32 v2, s10, v2                               // 00000006B46C: 4A04040A
	v_add_nc_u32_e32 v4, s5, v4                                // 00000006B470: 4A080805
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006B474: BF870223
	v_mul_lo_u32 v6, v6, v0                                    // 00000006B478: D72C0006 00020106
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006B480: D73C0000 00020082
	v_mul_lo_u32 v7, v7, v2                                    // 00000006B488: D72C0007 00020507
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006B490: D73C0002 00020482
	v_mul_lo_u32 v8, v8, v4                                    // 00000006B498: D72C0008 00020908
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006B4A0: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B4A8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B4B0: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006B4B4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006B4BC: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006B4C0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006B4C8: 400A0A01
	s_clause 0x2                                               // 00000006B4CC: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006B4D0: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006B4D8: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006B4E0: DC6A0000 007C0804
	s_nop 0                                                    // 00000006B4E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B4EC: BFB60003
	s_endpgm                                                   // 00000006B4F0: BFB00000
mul_get_local_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000006B4F4: BF800000
	.long 0xbf800000                                           // 00000006B4F8: BF800000
	.long 0xbf800000                                           // 00000006B4FC: BF800000

	.p2align	8
	.type	mul_get_group_id_get_global_id,@function
	.size	mul_get_group_id_get_global_id, mul_get_group_id_get_global_id_symend-mul_get_group_id_get_global_id
mul_get_group_id_get_global_id:
	s_clause 0x1                                               // 00000006B500: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B504: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006B50C: F4000140 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006B514: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B51C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006B524: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B52C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006B534: BEA10080
	v_lshl_or_b32 v3, s2, 1, v1                                // 00000006B538: D6560003 04050202
	v_mov_b32_e32 v1, 0                                        // 00000006B540: 7E020280
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006B544: D6560002 04090803
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006B54C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006B554: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B558: BF870193
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v0, s8, v3      // 00000006B55C: CA200101 03000608
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v2, s10, v2     // 00000006B564: CA200101 0502040A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B56C: BF870193
	v_add_nc_u32_e32 v4, s5, v4                                // 00000006B570: 4A080805
	v_mul_lo_u32 v6, s2, v0                                    // 00000006B574: D72C0006 00020002
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006B57C: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006B584: BF870004
	v_mul_lo_u32 v7, s3, v2                                    // 00000006B588: D72C0007 00020403
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006B590: D73C0002 00020482
	v_mul_lo_u32 v8, s4, v4                                    // 00000006B598: D72C0008 00020804
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006B5A0: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B5A8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B5B0: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006B5B4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006B5BC: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006B5C0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006B5C8: 400A0A01
	s_clause 0x2                                               // 00000006B5CC: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006B5D0: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006B5D8: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006B5E0: DC6A0000 007C0804
	s_nop 0                                                    // 00000006B5E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B5EC: BFB60003
	s_endpgm                                                   // 00000006B5F0: BFB00000
mul_get_group_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000006B5F4: BF800000
	.long 0xbf800000                                           // 00000006B5F8: BF800000
	.long 0xbf800000                                           // 00000006B5FC: BF800000

	.p2align	8
	.type	mul_get_local_size_get_global_id,@function
	.size	mul_get_local_size_get_global_id, mul_get_local_size_get_global_id_symend-mul_get_local_size_get_global_id
mul_get_local_size_get_global_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006B600: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006B608: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006B60C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006B610: 820B8001
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006B614: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 20, 10                                   // 00000006B620: D6100003 02292900
	v_bfe_u32 v0, v0, 10, 10                                   // 00000006B628: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000006B630: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B634: BF870193
	v_lshl_or_b32 v2, s2, 1, v2                                // 00000006B638: D6560002 04090202
	v_lshl_or_b32 v4, s4, 2, v3                                // 00000006B640: D6560004 040D0404
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006B648: BF8704C3
	v_lshl_or_b32 v6, s3, 1, v0                                // 00000006B64C: D6560006 04010203
	v_mov_b32_e32 v3, v1                                       // 00000006B654: 7E060301
	s_cmp_lt_u32 s2, s8                                        // 00000006B658: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000006B65C: 9806928C
	s_add_u32 s6, s5, s6                                       // 00000006B660: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000006B664: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006B668: BF0A0903
	s_cselect_b32 s8, 14, 20                                   // 00000006B66C: 9808948E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006B670: BF8704C9
	s_add_u32 s8, s5, s8                                       // 00000006B674: 80080805
	s_addc_u32 s9, s11, 0                                      // 00000006B678: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 00000006B67C: BF0A0A04
	s_cselect_b32 s10, 16, 22                                  // 00000006B680: 980A9690
	s_add_u32 s10, s5, s10                                     // 00000006B684: 800A0A05
	s_addc_u32 s11, s11, 0                                     // 00000006B688: 820B800B
	s_clause 0x2                                               // 00000006B68C: BF850002
	global_load_u16 v12, v1, s[6:7]                            // 00000006B690: DC4A0000 0C060001
	global_load_u16 v13, v1, s[8:9]                            // 00000006B698: DC4A0000 0D080001
	global_load_u16 v14, v1, s[10:11]                          // 00000006B6A0: DC4A0000 0E0A0001
	s_clause 0x2                                               // 00000006B6A8: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B6AC: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006B6B4: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B6BC: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006B6C4: BF89FC07
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v0, s8, v2      // 00000006B6C8: CA200101 05000408
	v_add_nc_u32_e32 v2, s10, v6                               // 00000006B6D0: 4A040C0A
	v_add_nc_u32_e32 v4, s5, v4                                // 00000006B6D4: 4A080805
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B6D8: BF870193
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006B6DC: D73C0006 00020082
	v_lshlrev_b64 v[10:11], 2, v[2:3]                          // 00000006B6E4: D73C000A 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B6EC: BF870193
	v_lshlrev_b64 v[8:9], 2, v[4:5]                            // 00000006B6F0: D73C0008 00020882
	v_add_co_u32 v5, vcc_lo, s0, v6                            // 00000006B6F8: D7006A05 00020C00
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006B700: BF870214
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v7, vcc_lo             // 00000006B704: 400C0E01
	v_add_co_u32 v10, vcc_lo, s0, v10                          // 00000006B708: D7006A0A 00021400
	v_add_co_ci_u32_e32 v11, vcc_lo, s1, v11, vcc_lo           // 00000006B710: 40161601
	s_waitcnt vmcnt(2)                                         // 00000006B714: BF890BF7
	v_mul_lo_u32 v3, v0, v12                                   // 00000006B718: D72C0003 00021900
	s_waitcnt vmcnt(1)                                         // 00000006B720: BF8907F7
	v_mul_lo_u32 v2, v2, v13                                   // 00000006B724: D72C0002 00021B02
	s_waitcnt vmcnt(0)                                         // 00000006B72C: BF8903F7
	v_mul_lo_u32 v4, v4, v14                                   // 00000006B730: D72C0004 00021D04
	v_add_co_u32 v0, vcc_lo, s0, v8                            // 00000006B738: D7006A00 00021000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v9, vcc_lo             // 00000006B740: 40021201
	s_clause 0x2                                               // 00000006B744: BF850002
	global_store_b32 v[5:6], v3, off                           // 00000006B748: DC6A0000 007C0305
	global_store_b32 v[10:11], v2, off                         // 00000006B750: DC6A0000 007C020A
	global_store_b32 v[0:1], v4, off                           // 00000006B758: DC6A0000 007C0400
	s_nop 0                                                    // 00000006B760: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B764: BFB60003
	s_endpgm                                                   // 00000006B768: BFB00000
mul_get_local_size_get_global_id_symend:
	.long 0xbf800000                                           // 00000006B76C: BF800000
	.long 0xbf800000                                           // 00000006B770: BF800000
	.long 0xbf800000                                           // 00000006B774: BF800000
	.long 0xbf800000                                           // 00000006B778: BF800000
	.long 0xbf800000                                           // 00000006B77C: BF800000
	.long 0xbf800000                                           // 00000006B780: BF800000
	.long 0xbf800000                                           // 00000006B784: BF800000
	.long 0xbf800000                                           // 00000006B788: BF800000
	.long 0xbf800000                                           // 00000006B78C: BF800000
	.long 0xbf800000                                           // 00000006B790: BF800000
	.long 0xbf800000                                           // 00000006B794: BF800000
	.long 0xbf800000                                           // 00000006B798: BF800000
	.long 0xbf800000                                           // 00000006B79C: BF800000
	.long 0xbf800000                                           // 00000006B7A0: BF800000
	.long 0xbf800000                                           // 00000006B7A4: BF800000
	.long 0xbf800000                                           // 00000006B7A8: BF800000
	.long 0xbf800000                                           // 00000006B7AC: BF800000
	.long 0xbf800000                                           // 00000006B7B0: BF800000
	.long 0xbf800000                                           // 00000006B7B4: BF800000
	.long 0xbf800000                                           // 00000006B7B8: BF800000
	.long 0xbf800000                                           // 00000006B7BC: BF800000
	.long 0xbf800000                                           // 00000006B7C0: BF800000
	.long 0xbf800000                                           // 00000006B7C4: BF800000
	.long 0xbf800000                                           // 00000006B7C8: BF800000
	.long 0xbf800000                                           // 00000006B7CC: BF800000
	.long 0xbf800000                                           // 00000006B7D0: BF800000
	.long 0xbf800000                                           // 00000006B7D4: BF800000
	.long 0xbf800000                                           // 00000006B7D8: BF800000
	.long 0xbf800000                                           // 00000006B7DC: BF800000
	.long 0xbf800000                                           // 00000006B7E0: BF800000
	.long 0xbf800000                                           // 00000006B7E4: BF800000
	.long 0xbf800000                                           // 00000006B7E8: BF800000
	.long 0xbf800000                                           // 00000006B7EC: BF800000
	.long 0xbf800000                                           // 00000006B7F0: BF800000
	.long 0xbf800000                                           // 00000006B7F4: BF800000
	.long 0xbf800000                                           // 00000006B7F8: BF800000
	.long 0xbf800000                                           // 00000006B7FC: BF800000

	.p2align	8
	.type	mul_get_global_id_get_global_id,@function
	.size	mul_get_global_id_get_global_id, mul_get_global_id_get_global_id_symend-mul_get_global_id_get_global_id
mul_get_global_id_get_global_id:
	s_clause 0x2                                               // 00000006B800: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B804: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006B80C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B814: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006B81C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006B828: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006B830: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006B838: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B83C: BF870193
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000006B840: D6560000 04090202
	v_lshl_or_b32 v5, s3, 1, v3                                // 00000006B848: D6560005 040D0203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006B850: BF870223
	v_lshl_or_b32 v7, s4, 2, v4                                // 00000006B854: D6560007 04110404
	v_mov_b32_e32 v2, v1                                       // 00000006B85C: 7E040301
	v_lshlrev_b64 v[3:4], 2, v[0:1]                            // 00000006B860: D73C0003 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006B868: BF89FC07
	v_dual_mov_b32 v6, v1 :: v_dual_add_nc_u32 v1, s10, v5     // 00000006B86C: CA200101 06000A0A
	v_add_nc_u32_e32 v5, s5, v7                                // 00000006B874: 4A0A0E05
	v_add_nc_u32_e32 v0, s8, v0                                // 00000006B878: 4A000008
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006B87C: BF870214
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006B880: D7006A03 00020600
	v_lshlrev_b64 v[7:8], 2, v[1:2]                            // 00000006B888: D73C0007 00020282
	v_mul_lo_u32 v9, v1, v1                                    // 00000006B890: D72C0009 00020301
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006B898: BF870004
	v_mul_lo_u32 v2, v0, v0                                    // 00000006B89C: D72C0002 00020100
	v_lshlrev_b64 v[0:1], 2, v[5:6]                            // 00000006B8A4: D73C0000 00020A82
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006B8AC: 40080801
	v_mul_lo_u32 v10, v5, v5                                   // 00000006B8B0: D72C000A 00020B05
	v_add_co_u32 v5, vcc_lo, s0, v7                            // 00000006B8B8: D7006A05 00020E00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v8, vcc_lo             // 00000006B8C0: 400C1001
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B8C4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B8CC: 40020201
	s_clause 0x2                                               // 00000006B8D0: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006B8D4: DC6A0000 007C0203
	global_store_b32 v[5:6], v9, off                           // 00000006B8DC: DC6A0000 007C0905
	global_store_b32 v[0:1], v10, off                          // 00000006B8E4: DC6A0000 007C0A00
	s_nop 0                                                    // 00000006B8EC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B8F0: BFB60003
	s_endpgm                                                   // 00000006B8F4: BFB00000
mul_get_global_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000006B8F8: BF800000
	.long 0xbf800000                                           // 00000006B8FC: BF800000

	.p2align	8
	.type	mul_get_global_size_get_global_id,@function
	.size	mul_get_global_size_get_global_id, mul_get_global_size_get_global_id_symend-mul_get_global_size_get_global_id
mul_get_global_size_get_global_id:
	v_bfe_u32 v2, v0, 20, 10                                   // 00000006B900: D6100002 02292900
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000006B908: 360600FF 000003FF
	v_bfe_u32 v0, v0, 10, 10                                   // 00000006B910: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000006B918: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006B91C: BF870003
	v_lshl_or_b32 v2, s4, 1, v2                                // 00000006B920: D6560002 04090204
	v_mov_b32_e32 v1, 0                                        // 00000006B928: 7E020280
	v_lshl_or_b32 v6, s2, 4, v3                                // 00000006B92C: D6560006 040D0802
	v_lshl_or_b32 v7, s3, 1, v0                                // 00000006B934: D6560007 04010203
	s_clause 0x1                                               // 00000006B93C: BF850001
	global_load_b32 v12, v1, s[0:1] offset:34                  // 00000006B940: DC520022 0C000001
	global_load_u16 v13, v1, s[0:1] offset:38                  // 00000006B948: DC4A0026 0D000001
	s_clause 0x3                                               // 00000006B950: BF850003
	s_load_b32 s5, s[0:1], 0x48                                // 00000006B954: F4000140 F8000048
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B95C: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006B964: F4080300 F8000010
	s_load_b64 s[0:1], s[0:1], null                            // 00000006B96C: F4040000 F8000000
	s_waitcnt lgkmcnt(0)                                       // 00000006B974: BF89FC07
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v4, s5, v2      // 00000006B978: CA200101 03040405
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v0, s8, v6      // 00000006B980: CA200101 05000C08
	v_add_nc_u32_e32 v2, s10, v7                               // 00000006B988: 4A040E0A
	s_lshl_b32 s2, s12, 4                                      // 00000006B98C: 8402840C
	s_lshl_b32 s3, s13, 1                                      // 00000006B990: 8403810D
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006B994: BF8701C2
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006B998: D73C0006 00020082
	s_lshl_b32 s4, s14, 1                                      // 00000006B9A0: 8404810E
	v_lshlrev_b64 v[10:11], 2, v[2:3]                          // 00000006B9A4: D73C000A 00020482
	v_lshlrev_b64 v[8:9], 2, v[4:5]                            // 00000006B9AC: D73C0008 00020882
	v_add_co_u32 v5, vcc_lo, s0, v6                            // 00000006B9B4: D7006A05 00020C00
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006B9BC: BF870214
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v7, vcc_lo             // 00000006B9C0: 400C0E01
	v_add_co_u32 v10, vcc_lo, s0, v10                          // 00000006B9C4: D7006A0A 00021400
	v_add_co_ci_u32_e32 v11, vcc_lo, s1, v11, vcc_lo           // 00000006B9CC: 40161601
	s_waitcnt vmcnt(1)                                         // 00000006B9D0: BF8907F7
	v_and_b32_e32 v3, 0xffff, v12                              // 00000006B9D4: 360618FF 0000FFFF
	v_lshrrev_b32_e32 v1, 16, v12                              // 00000006B9DC: 32021890
	s_waitcnt vmcnt(0)                                         // 00000006B9E0: BF8903F7
	v_add_nc_u32_e32 v7, s4, v13                               // 00000006B9E4: 4A0E1A04
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B9E8: BF870193
	v_add_nc_u32_e32 v3, s2, v3                                // 00000006B9EC: 4A060602
	v_add_nc_u32_e32 v1, s3, v1                                // 00000006B9F0: 4A020203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B9F4: BF870193
	v_mul_lo_u32 v4, v7, v4                                    // 00000006B9F8: D72C0004 00020907
	v_mul_lo_u32 v3, v3, v0                                    // 00000006BA00: D72C0003 00020103
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006BA08: BF870003
	v_mul_lo_u32 v2, v1, v2                                    // 00000006BA0C: D72C0002 00020501
	v_add_co_u32 v0, vcc_lo, s0, v8                            // 00000006BA14: D7006A00 00021000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v9, vcc_lo             // 00000006BA1C: 40021201
	s_clause 0x2                                               // 00000006BA20: BF850002
	global_store_b32 v[5:6], v3, off                           // 00000006BA24: DC6A0000 007C0305
	global_store_b32 v[10:11], v2, off                         // 00000006BA2C: DC6A0000 007C020A
	global_store_b32 v[0:1], v4, off                           // 00000006BA34: DC6A0000 007C0400
	s_nop 0                                                    // 00000006BA3C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006BA40: BFB60003
	s_endpgm                                                   // 00000006BA44: BFB00000
mul_get_global_size_get_global_id_symend:
	.long 0xbf800000                                           // 00000006BA48: BF800000
	.long 0xbf800000                                           // 00000006BA4C: BF800000
	.long 0xbf800000                                           // 00000006BA50: BF800000
	.long 0xbf800000                                           // 00000006BA54: BF800000
	.long 0xbf800000                                           // 00000006BA58: BF800000
	.long 0xbf800000                                           // 00000006BA5C: BF800000
	.long 0xbf800000                                           // 00000006BA60: BF800000
	.long 0xbf800000                                           // 00000006BA64: BF800000
	.long 0xbf800000                                           // 00000006BA68: BF800000
	.long 0xbf800000                                           // 00000006BA6C: BF800000
	.long 0xbf800000                                           // 00000006BA70: BF800000
	.long 0xbf800000                                           // 00000006BA74: BF800000
	.long 0xbf800000                                           // 00000006BA78: BF800000
	.long 0xbf800000                                           // 00000006BA7C: BF800000
	.long 0xbf800000                                           // 00000006BA80: BF800000
	.long 0xbf800000                                           // 00000006BA84: BF800000
	.long 0xbf800000                                           // 00000006BA88: BF800000
	.long 0xbf800000                                           // 00000006BA8C: BF800000
	.long 0xbf800000                                           // 00000006BA90: BF800000
	.long 0xbf800000                                           // 00000006BA94: BF800000
	.long 0xbf800000                                           // 00000006BA98: BF800000
	.long 0xbf800000                                           // 00000006BA9C: BF800000
	.long 0xbf800000                                           // 00000006BAA0: BF800000
	.long 0xbf800000                                           // 00000006BAA4: BF800000
	.long 0xbf800000                                           // 00000006BAA8: BF800000
	.long 0xbf800000                                           // 00000006BAAC: BF800000
	.long 0xbf800000                                           // 00000006BAB0: BF800000
	.long 0xbf800000                                           // 00000006BAB4: BF800000
	.long 0xbf800000                                           // 00000006BAB8: BF800000
	.long 0xbf800000                                           // 00000006BABC: BF800000
	.long 0xbf800000                                           // 00000006BAC0: BF800000
	.long 0xbf800000                                           // 00000006BAC4: BF800000
	.long 0xbf800000                                           // 00000006BAC8: BF800000
	.long 0xbf800000                                           // 00000006BACC: BF800000
	.long 0xbf800000                                           // 00000006BAD0: BF800000
	.long 0xbf800000                                           // 00000006BAD4: BF800000
	.long 0xbf800000                                           // 00000006BAD8: BF800000
	.long 0xbf800000                                           // 00000006BADC: BF800000
	.long 0xbf800000                                           // 00000006BAE0: BF800000
	.long 0xbf800000                                           // 00000006BAE4: BF800000
	.long 0xbf800000                                           // 00000006BAE8: BF800000
	.long 0xbf800000                                           // 00000006BAEC: BF800000
	.long 0xbf800000                                           // 00000006BAF0: BF800000
	.long 0xbf800000                                           // 00000006BAF4: BF800000
	.long 0xbf800000                                           // 00000006BAF8: BF800000
	.long 0xbf800000                                           // 00000006BAFC: BF800000

	.p2align	8
	.type	mul_get_num_groups_get_global_id,@function
	.size	mul_get_num_groups_get_global_id, mul_get_num_groups_get_global_id_symend-mul_get_num_groups_get_global_id
mul_get_num_groups_get_global_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006BB00: CA240080 010200FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006BB0C: F4040180 F8000008
	v_bfe_u32 v3, v0, 20, 10                                   // 00000006BB14: D6100003 02292900
	v_bfe_u32 v0, v0, 10, 10                                   // 00000006BB1C: D6100000 02291500
	s_clause 0x1                                               // 00000006BB24: BF850001
	global_load_b32 v12, v1, s[0:1] offset:34                  // 00000006BB28: DC520022 0C000001
	global_load_u16 v13, v1, s[0:1] offset:38                  // 00000006BB30: DC4A0026 0D000001
	s_clause 0x2                                               // 00000006BB38: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006BB3C: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006BB44: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006BB4C: F4080300 F8000010
	v_lshl_or_b32 v2, s2, 1, v2                                // 00000006BB54: D6560002 04090202
	v_lshl_or_b32 v6, s3, 1, v0                                // 00000006BB5C: D6560006 04010203
	v_lshl_or_b32 v4, s4, 2, v3                                // 00000006BB64: D6560004 040D0404
	v_mov_b32_e32 v3, v1                                       // 00000006BB6C: 7E060301
	v_mov_b32_e32 v5, v1                                       // 00000006BB70: 7E0A0301
	s_mov_b32 s33, 0                                           // 00000006BB74: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006BB78: BF89FC07
	v_add_nc_u32_e32 v0, s8, v2                                // 00000006BB7C: 4A000408
	v_add_nc_u32_e32 v4, s5, v4                                // 00000006BB80: 4A080805
	v_add_nc_u32_e32 v2, s10, v6                               // 00000006BB84: 4A040C0A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006BB88: BF870193
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006BB8C: D73C0006 00020082
	v_lshlrev_b64 v[8:9], 2, v[4:5]                            // 00000006BB94: D73C0008 00020882
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006BB9C: BF870193
	v_lshlrev_b64 v[10:11], 2, v[2:3]                          // 00000006BBA0: D73C000A 00020482
	v_add_co_u32 v5, s1, s6, v6                                // 00000006BBA8: D7000105 00020C06
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000006BBB0: BF870141
	v_add_co_ci_u32_e64 v6, s1, s7, v7, s1                     // 00000006BBB4: D5200106 00060E07
	s_waitcnt vmcnt(1)                                         // 00000006BBBC: BF8907F7
	v_lshrrev_b32_e32 v14, 16, v12                             // 00000006BBC0: 321C1890
	v_cmp_ne_u16_e32 vcc_lo, 0, v12.l                          // 00000006BBC4: 7C7A1880
	v_cmp_ne_u16_e64 s0, 0, v14.l                              // 00000006BBC8: D43D0000 00021C80
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006BBD0: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006BBD4: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v13.l                          // 00000006BBD8: 7C7A1A80
	s_addc_u32 s1, s12, 0                                      // 00000006BBDC: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006BBE0: BF8700B9
	v_mul_lo_u32 v3, s1, v0                                    // 00000006BBE4: D72C0003 00020001
	s_cmp_lg_u32 s0, 0                                         // 00000006BBEC: BF078000
	v_add_co_u32 v10, s0, s6, v10                              // 00000006BBF0: D700000A 00021406
	v_add_co_ci_u32_e64 v11, s0, s7, v11, s0                   // 00000006BBF8: D520000B 00021607
	s_addc_u32 s0, s13, 0                                      // 00000006BC00: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006BC04: BF07806A
	v_mul_lo_u32 v2, s0, v2                                    // 00000006BC08: D72C0002 00020400
	s_addc_u32 s1, s14, 0                                      // 00000006BC10: 8201800E
	v_add_co_u32 v0, vcc_lo, s6, v8                            // 00000006BC14: D7006A00 00021006
	v_mul_lo_u32 v4, s1, v4                                    // 00000006BC1C: D72C0004 00020801
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v9, vcc_lo             // 00000006BC24: 40021207
	s_clause 0x2                                               // 00000006BC28: BF850002
	global_store_b32 v[5:6], v3, off                           // 00000006BC2C: DC6A0000 007C0305
	global_store_b32 v[10:11], v2, off                         // 00000006BC34: DC6A0000 007C020A
	global_store_b32 v[0:1], v4, off                           // 00000006BC3C: DC6A0000 007C0400
	s_nop 0                                                    // 00000006BC44: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006BC48: BFB60003
	s_endpgm                                                   // 00000006BC4C: BFB00000
mul_get_num_groups_get_global_id_symend:
	.long 0xbf800000                                           // 00000006BC50: BF800000
	.long 0xbf800000                                           // 00000006BC54: BF800000
	.long 0xbf800000                                           // 00000006BC58: BF800000
	.long 0xbf800000                                           // 00000006BC5C: BF800000
	.long 0xbf800000                                           // 00000006BC60: BF800000
	.long 0xbf800000                                           // 00000006BC64: BF800000
	.long 0xbf800000                                           // 00000006BC68: BF800000
	.long 0xbf800000                                           // 00000006BC6C: BF800000
	.long 0xbf800000                                           // 00000006BC70: BF800000
	.long 0xbf800000                                           // 00000006BC74: BF800000
	.long 0xbf800000                                           // 00000006BC78: BF800000
	.long 0xbf800000                                           // 00000006BC7C: BF800000
	.long 0xbf800000                                           // 00000006BC80: BF800000
	.long 0xbf800000                                           // 00000006BC84: BF800000
	.long 0xbf800000                                           // 00000006BC88: BF800000
	.long 0xbf800000                                           // 00000006BC8C: BF800000
	.long 0xbf800000                                           // 00000006BC90: BF800000
	.long 0xbf800000                                           // 00000006BC94: BF800000
	.long 0xbf800000                                           // 00000006BC98: BF800000
	.long 0xbf800000                                           // 00000006BC9C: BF800000
	.long 0xbf800000                                           // 00000006BCA0: BF800000
	.long 0xbf800000                                           // 00000006BCA4: BF800000
	.long 0xbf800000                                           // 00000006BCA8: BF800000
	.long 0xbf800000                                           // 00000006BCAC: BF800000
	.long 0xbf800000                                           // 00000006BCB0: BF800000
	.long 0xbf800000                                           // 00000006BCB4: BF800000
	.long 0xbf800000                                           // 00000006BCB8: BF800000
	.long 0xbf800000                                           // 00000006BCBC: BF800000
	.long 0xbf800000                                           // 00000006BCC0: BF800000
	.long 0xbf800000                                           // 00000006BCC4: BF800000
	.long 0xbf800000                                           // 00000006BCC8: BF800000
	.long 0xbf800000                                           // 00000006BCCC: BF800000
	.long 0xbf800000                                           // 00000006BCD0: BF800000
	.long 0xbf800000                                           // 00000006BCD4: BF800000
	.long 0xbf800000                                           // 00000006BCD8: BF800000
	.long 0xbf800000                                           // 00000006BCDC: BF800000
	.long 0xbf800000                                           // 00000006BCE0: BF800000
	.long 0xbf800000                                           // 00000006BCE4: BF800000
	.long 0xbf800000                                           // 00000006BCE8: BF800000
	.long 0xbf800000                                           // 00000006BCEC: BF800000
	.long 0xbf800000                                           // 00000006BCF0: BF800000
	.long 0xbf800000                                           // 00000006BCF4: BF800000
	.long 0xbf800000                                           // 00000006BCF8: BF800000
	.long 0xbf800000                                           // 00000006BCFC: BF800000

	.p2align	8
	.type	mul_get_work_dim_get_global_id,@function
	.size	mul_get_work_dim_get_global_id, mul_get_work_dim_get_global_id_symend-mul_get_work_dim_get_global_id
mul_get_work_dim_get_global_id:
	s_clause 0x2                                               // 00000006BD00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006BD04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006BD0C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x50                                // 00000006BD14: F4000180 F8000050
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006BD1C: CA240080 010200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006BD28: F4040000 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006BD30: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006BD38: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006BD40: BF8701A3
	v_lshl_or_b32 v2, s2, 1, v2                                // 00000006BD44: D6560002 04090202
	s_mov_b32 s33, 0                                           // 00000006BD4C: BEA10080
	v_lshl_or_b32 v4, s3, 1, v3                                // 00000006BD50: D6560004 040D0203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006BD58: BF870003
	v_lshl_or_b32 v6, s4, 2, v0                                // 00000006BD5C: D6560006 04010404
	v_mov_b32_e32 v3, v1                                       // 00000006BD64: 7E060301
	s_waitcnt lgkmcnt(0)                                       // 00000006BD68: BF89FC07
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v0, s8, v2      // 00000006BD6C: CA200101 05000408
	v_add_nc_u32_e32 v2, s10, v4                               // 00000006BD74: 4A04080A
	v_add_nc_u32_e32 v4, s5, v6                                // 00000006BD78: 4A080C05
	s_and_b32 s2, s6, 0xffff                                   // 00000006BD7C: 8B02FF06 0000FFFF
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006BD84: BF870003
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006BD88: D73C0006 00020082
	v_mul_lo_u32 v8, s2, v0                                    // 00000006BD90: D72C0008 00020002
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006BD98: D73C0000 00020482
	v_mul_lo_u32 v9, s2, v2                                    // 00000006BDA0: D72C0009 00020402
	v_lshlrev_b64 v[2:3], 2, v[4:5]                            // 00000006BDA8: D73C0002 00020882
	v_mul_lo_u32 v4, s2, v4                                    // 00000006BDB0: D72C0004 00020802
	v_add_co_u32 v5, vcc_lo, s0, v6                            // 00000006BDB8: D7006A05 00020C00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v7, vcc_lo             // 00000006BDC0: 400C0E01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006BDC4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006BDCC: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006BDD0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006BDD8: 40060601
	s_clause 0x2                                               // 00000006BDDC: BF850002
	global_store_b32 v[5:6], v8, off                           // 00000006BDE0: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 00000006BDE8: DC6A0000 007C0900
	global_store_b32 v[2:3], v4, off                           // 00000006BDF0: DC6A0000 007C0402
	s_nop 0                                                    // 00000006BDF8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006BDFC: BFB60003
	s_endpgm                                                   // 00000006BE00: BFB00000
mul_get_work_dim_get_global_id_symend:
	.long 0xbf800000                                           // 00000006BE04: BF800000
	.long 0xbf800000                                           // 00000006BE08: BF800000
	.long 0xbf800000                                           // 00000006BE0C: BF800000
	.long 0xbf800000                                           // 00000006BE10: BF800000
	.long 0xbf800000                                           // 00000006BE14: BF800000
	.long 0xbf800000                                           // 00000006BE18: BF800000
	.long 0xbf800000                                           // 00000006BE1C: BF800000
	.long 0xbf800000                                           // 00000006BE20: BF800000
	.long 0xbf800000                                           // 00000006BE24: BF800000
	.long 0xbf800000                                           // 00000006BE28: BF800000
	.long 0xbf800000                                           // 00000006BE2C: BF800000
	.long 0xbf800000                                           // 00000006BE30: BF800000
	.long 0xbf800000                                           // 00000006BE34: BF800000
	.long 0xbf800000                                           // 00000006BE38: BF800000
	.long 0xbf800000                                           // 00000006BE3C: BF800000
	.long 0xbf800000                                           // 00000006BE40: BF800000
	.long 0xbf800000                                           // 00000006BE44: BF800000
	.long 0xbf800000                                           // 00000006BE48: BF800000
	.long 0xbf800000                                           // 00000006BE4C: BF800000
	.long 0xbf800000                                           // 00000006BE50: BF800000
	.long 0xbf800000                                           // 00000006BE54: BF800000
	.long 0xbf800000                                           // 00000006BE58: BF800000
	.long 0xbf800000                                           // 00000006BE5C: BF800000
	.long 0xbf800000                                           // 00000006BE60: BF800000
	.long 0xbf800000                                           // 00000006BE64: BF800000
	.long 0xbf800000                                           // 00000006BE68: BF800000
	.long 0xbf800000                                           // 00000006BE6C: BF800000
	.long 0xbf800000                                           // 00000006BE70: BF800000
	.long 0xbf800000                                           // 00000006BE74: BF800000
	.long 0xbf800000                                           // 00000006BE78: BF800000
	.long 0xbf800000                                           // 00000006BE7C: BF800000
	.long 0xbf800000                                           // 00000006BE80: BF800000
	.long 0xbf800000                                           // 00000006BE84: BF800000
	.long 0xbf800000                                           // 00000006BE88: BF800000
	.long 0xbf800000                                           // 00000006BE8C: BF800000
	.long 0xbf800000                                           // 00000006BE90: BF800000
	.long 0xbf800000                                           // 00000006BE94: BF800000
	.long 0xbf800000                                           // 00000006BE98: BF800000
	.long 0xbf800000                                           // 00000006BE9C: BF800000
	.long 0xbf800000                                           // 00000006BEA0: BF800000
	.long 0xbf800000                                           // 00000006BEA4: BF800000
	.long 0xbf800000                                           // 00000006BEA8: BF800000
	.long 0xbf800000                                           // 00000006BEAC: BF800000
	.long 0xbf800000                                           // 00000006BEB0: BF800000
	.long 0xbf800000                                           // 00000006BEB4: BF800000
	.long 0xbf800000                                           // 00000006BEB8: BF800000
	.long 0xbf800000                                           // 00000006BEBC: BF800000
	.long 0xbf800000                                           // 00000006BEC0: BF800000
	.long 0xbf800000                                           // 00000006BEC4: BF800000
	.long 0xbf800000                                           // 00000006BEC8: BF800000
	.long 0xbf800000                                           // 00000006BECC: BF800000
	.long 0xbf800000                                           // 00000006BED0: BF800000
	.long 0xbf800000                                           // 00000006BED4: BF800000
	.long 0xbf800000                                           // 00000006BED8: BF800000
	.long 0xbf800000                                           // 00000006BEDC: BF800000
	.long 0xbf800000                                           // 00000006BEE0: BF800000
	.long 0xbf800000                                           // 00000006BEE4: BF800000
	.long 0xbf800000                                           // 00000006BEE8: BF800000
	.long 0xbf800000                                           // 00000006BEEC: BF800000
	.long 0xbf800000                                           // 00000006BEF0: BF800000
	.long 0xbf800000                                           // 00000006BEF4: BF800000
	.long 0xbf800000                                           // 00000006BEF8: BF800000
	.long 0xbf800000                                           // 00000006BEFC: BF800000

	.p2align	8
	.type	mul_x_get_global_size,@function
	.size	mul_x_get_global_size, mul_x_get_global_size_symend-mul_x_get_global_size
mul_x_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006BF00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], null                            // 00000006BF0C: F4040180 F8000000
	s_lshl_b32 s2, s2, 4                                       // 00000006BF14: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006BF18: D6100005 02291500
	s_clause 0x1                                               // 00000006BF20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006BF24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006BF2C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006BF34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006BF38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006BF40: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006BF48: F4000140 F8000048
	s_load_b32 s0, s[0:1], 0x8                                 // 00000006BF50: F4000000 F8000008
	s_lshl_b32 s1, s3, 1                                       // 00000006BF58: 84018103
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006BF5C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006BF64: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006BF68: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006BF6C: D6550001 04040408
	s_lshl_b32 s2, s4, 1                                       // 00000006BF74: 84028104
	s_lshl_b32 s3, s13, 1                                      // 00000006BF78: 8403810D
	s_lshl_b32 s4, s14, 1                                      // 00000006BF7C: 8404810E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006BF80: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006BF84: D73C0003 00020282
	v_add3_u32 v1, s10, s1, v5                                 // 00000006BF8C: D6550001 0414020A
	s_lshl_b32 s1, s12, 4                                      // 00000006BF94: 8401840C
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006BF98: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 00000006BFA0: D6550001 04000405
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006BFA8: BF8701A4
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000006BFAC: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000006BFB4: 40080807
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006BFB8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 00000006BFC0: D7006A05 00020A06
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 00000006BFC8: 400C0C07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006BFCC: BF870213
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006BFD0: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006BFD8: 40020207
	s_waitcnt vmcnt(1)                                         // 00000006BFDC: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006BFE0: 32120E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006BFE4: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006BFEC: BF8903F7
	v_add_nc_u32_e32 v2, s4, v8                                // 00000006BFF0: 4A041004
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006BFF4: BF870193
	v_add_nc_u32_e32 v8, s3, v9                                // 00000006BFF8: 4A101203
	v_add_nc_u32_e32 v7, s1, v7                                // 00000006BFFC: 4A0E0E01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C000: BF870193
	v_mul_lo_u32 v2, v2, s0                                    // 00000006C004: D72C0002 00000102
	v_mul_lo_u32 v8, v8, s0                                    // 00000006C00C: D72C0008 00000108
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006C014: BF870003
	v_mul_lo_u32 v7, v7, s0                                    // 00000006C018: D72C0007 00000107
	s_clause 0x2                                               // 00000006C020: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006C024: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006C02C: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006C034: DC6A0000 007C0200
	s_nop 0                                                    // 00000006C03C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C040: BFB60003
	s_endpgm                                                   // 00000006C044: BFB00000
mul_x_get_global_size_symend:
	.long 0xbf800000                                           // 00000006C048: BF800000
	.long 0xbf800000                                           // 00000006C04C: BF800000
	.long 0xbf800000                                           // 00000006C050: BF800000
	.long 0xbf800000                                           // 00000006C054: BF800000
	.long 0xbf800000                                           // 00000006C058: BF800000
	.long 0xbf800000                                           // 00000006C05C: BF800000
	.long 0xbf800000                                           // 00000006C060: BF800000
	.long 0xbf800000                                           // 00000006C064: BF800000
	.long 0xbf800000                                           // 00000006C068: BF800000
	.long 0xbf800000                                           // 00000006C06C: BF800000
	.long 0xbf800000                                           // 00000006C070: BF800000
	.long 0xbf800000                                           // 00000006C074: BF800000
	.long 0xbf800000                                           // 00000006C078: BF800000
	.long 0xbf800000                                           // 00000006C07C: BF800000
	.long 0xbf800000                                           // 00000006C080: BF800000
	.long 0xbf800000                                           // 00000006C084: BF800000
	.long 0xbf800000                                           // 00000006C088: BF800000
	.long 0xbf800000                                           // 00000006C08C: BF800000
	.long 0xbf800000                                           // 00000006C090: BF800000
	.long 0xbf800000                                           // 00000006C094: BF800000
	.long 0xbf800000                                           // 00000006C098: BF800000
	.long 0xbf800000                                           // 00000006C09C: BF800000
	.long 0xbf800000                                           // 00000006C0A0: BF800000
	.long 0xbf800000                                           // 00000006C0A4: BF800000
	.long 0xbf800000                                           // 00000006C0A8: BF800000
	.long 0xbf800000                                           // 00000006C0AC: BF800000
	.long 0xbf800000                                           // 00000006C0B0: BF800000
	.long 0xbf800000                                           // 00000006C0B4: BF800000
	.long 0xbf800000                                           // 00000006C0B8: BF800000
	.long 0xbf800000                                           // 00000006C0BC: BF800000
	.long 0xbf800000                                           // 00000006C0C0: BF800000
	.long 0xbf800000                                           // 00000006C0C4: BF800000
	.long 0xbf800000                                           // 00000006C0C8: BF800000
	.long 0xbf800000                                           // 00000006C0CC: BF800000
	.long 0xbf800000                                           // 00000006C0D0: BF800000
	.long 0xbf800000                                           // 00000006C0D4: BF800000
	.long 0xbf800000                                           // 00000006C0D8: BF800000
	.long 0xbf800000                                           // 00000006C0DC: BF800000
	.long 0xbf800000                                           // 00000006C0E0: BF800000
	.long 0xbf800000                                           // 00000006C0E4: BF800000
	.long 0xbf800000                                           // 00000006C0E8: BF800000
	.long 0xbf800000                                           // 00000006C0EC: BF800000
	.long 0xbf800000                                           // 00000006C0F0: BF800000
	.long 0xbf800000                                           // 00000006C0F4: BF800000
	.long 0xbf800000                                           // 00000006C0F8: BF800000
	.long 0xbf800000                                           // 00000006C0FC: BF800000

	.p2align	8
	.type	mul_get_global_offset_get_global_size,@function
	.size	mul_get_global_offset_get_global_size, mul_get_global_offset_get_global_size_symend-mul_get_global_offset_get_global_size
mul_get_global_offset_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006C100: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006C10C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006C110: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006C118: D6100000 02292900
	s_clause 0x1                                               // 00000006C120: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006C124: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006C12C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006C134: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C138: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006C140: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006C148: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C150: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000006C158: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006C15C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006C160: D6550001 04040408
	s_lshl_b32 s2, s3, 4                                       // 00000006C168: 84028403
	s_lshl_b32 s3, s4, 1                                       // 00000006C16C: 84038104
	s_lshl_b32 s4, s13, 4                                      // 00000006C170: 8404840D
	s_lshl_b32 s6, s14, 1                                      // 00000006C174: 8406810E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006C178: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006C180: D6550001 0414040A
	s_lshl_b32 s2, s12, 1                                      // 00000006C188: 8402810C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006C18C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006C190: D73C0005 00020282
	v_add3_u32 v1, s5, s3, v0                                  // 00000006C198: D6550001 04000605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006C1A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006C1A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006C1AC: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006C1B0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006C1B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006C1C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C1C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006C1CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C1D0: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006C1D4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006C1D8: 32120E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006C1DC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006C1E4: BF8903F7
	v_add_nc_u32_e32 v2, s6, v8                                // 00000006C1E8: 4A041006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C1EC: BF870193
	v_add_nc_u32_e32 v8, s4, v9                                // 00000006C1F0: 4A101204
	v_add_nc_u32_e32 v7, s2, v7                                // 00000006C1F4: 4A0E0E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C1F8: BF870193
	v_mul_lo_u32 v2, v2, s5                                    // 00000006C1FC: D72C0002 00000B02
	v_mul_lo_u32 v8, v8, s10                                   // 00000006C204: D72C0008 00001508
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006C20C: BF870003
	v_mul_lo_u32 v7, v7, s8                                    // 00000006C210: D72C0007 00001107
	s_clause 0x2                                               // 00000006C218: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006C21C: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006C224: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006C22C: DC6A0000 007C0200
	s_nop 0                                                    // 00000006C234: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C238: BFB60003
	s_endpgm                                                   // 00000006C23C: BFB00000
mul_get_global_offset_get_global_size_symend:
	.long 0xbf800000                                           // 00000006C240: BF800000
	.long 0xbf800000                                           // 00000006C244: BF800000
	.long 0xbf800000                                           // 00000006C248: BF800000
	.long 0xbf800000                                           // 00000006C24C: BF800000
	.long 0xbf800000                                           // 00000006C250: BF800000
	.long 0xbf800000                                           // 00000006C254: BF800000
	.long 0xbf800000                                           // 00000006C258: BF800000
	.long 0xbf800000                                           // 00000006C25C: BF800000
	.long 0xbf800000                                           // 00000006C260: BF800000
	.long 0xbf800000                                           // 00000006C264: BF800000
	.long 0xbf800000                                           // 00000006C268: BF800000
	.long 0xbf800000                                           // 00000006C26C: BF800000
	.long 0xbf800000                                           // 00000006C270: BF800000
	.long 0xbf800000                                           // 00000006C274: BF800000
	.long 0xbf800000                                           // 00000006C278: BF800000
	.long 0xbf800000                                           // 00000006C27C: BF800000
	.long 0xbf800000                                           // 00000006C280: BF800000
	.long 0xbf800000                                           // 00000006C284: BF800000
	.long 0xbf800000                                           // 00000006C288: BF800000
	.long 0xbf800000                                           // 00000006C28C: BF800000
	.long 0xbf800000                                           // 00000006C290: BF800000
	.long 0xbf800000                                           // 00000006C294: BF800000
	.long 0xbf800000                                           // 00000006C298: BF800000
	.long 0xbf800000                                           // 00000006C29C: BF800000
	.long 0xbf800000                                           // 00000006C2A0: BF800000
	.long 0xbf800000                                           // 00000006C2A4: BF800000
	.long 0xbf800000                                           // 00000006C2A8: BF800000
	.long 0xbf800000                                           // 00000006C2AC: BF800000
	.long 0xbf800000                                           // 00000006C2B0: BF800000
	.long 0xbf800000                                           // 00000006C2B4: BF800000
	.long 0xbf800000                                           // 00000006C2B8: BF800000
	.long 0xbf800000                                           // 00000006C2BC: BF800000
	.long 0xbf800000                                           // 00000006C2C0: BF800000
	.long 0xbf800000                                           // 00000006C2C4: BF800000
	.long 0xbf800000                                           // 00000006C2C8: BF800000
	.long 0xbf800000                                           // 00000006C2CC: BF800000
	.long 0xbf800000                                           // 00000006C2D0: BF800000
	.long 0xbf800000                                           // 00000006C2D4: BF800000
	.long 0xbf800000                                           // 00000006C2D8: BF800000
	.long 0xbf800000                                           // 00000006C2DC: BF800000
	.long 0xbf800000                                           // 00000006C2E0: BF800000
	.long 0xbf800000                                           // 00000006C2E4: BF800000
	.long 0xbf800000                                           // 00000006C2E8: BF800000
	.long 0xbf800000                                           // 00000006C2EC: BF800000
	.long 0xbf800000                                           // 00000006C2F0: BF800000
	.long 0xbf800000                                           // 00000006C2F4: BF800000
	.long 0xbf800000                                           // 00000006C2F8: BF800000
	.long 0xbf800000                                           // 00000006C2FC: BF800000

	.p2align	8
	.type	mul_get_local_id_get_global_size,@function
	.size	mul_get_local_id_get_global_size, mul_get_local_id_get_global_size_symend-mul_get_local_id_get_global_size
mul_get_local_id_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 00000006C300: CA240080 020800FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000006C30C: 84028302
	v_bfe_u32 v10, v0, 10, 10                                  // 00000006C310: D610000A 02291500
	v_bfe_u32 v11, v0, 20, 10                                  // 00000006C318: D610000B 02292900
	s_clause 0x1                                               // 00000006C320: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006C324: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006C32C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006C334: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C338: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006C340: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006C348: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C350: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000006C358: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006C35C: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 00000006C360: D6550001 04240408
	s_lshl_b32 s2, s3, 2                                       // 00000006C368: 84028203
	s_lshl_b32 s3, s4, 1                                       // 00000006C36C: 84038104
	s_lshl_b32 s4, s13, 2                                      // 00000006C370: 8404820D
	s_lshl_b32 s6, s14, 1                                      // 00000006C374: 8406810E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006C378: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v10                                // 00000006C380: D6550001 0428040A
	s_lshl_b32 s2, s12, 3                                      // 00000006C388: 8402830C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006C38C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006C390: D73C0005 00020282
	v_add3_u32 v1, s5, s3, v11                                 // 00000006C398: D6550001 042C0605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006C3A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006C3A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006C3AC: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006C3B0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006C3B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006C3C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C3C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006C3CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C3D0: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006C3D4: BF8907F7
	v_lshrrev_b32_e32 v12, 16, v7                              // 00000006C3D8: 32180E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006C3DC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006C3E4: BF8903F7
	v_add_nc_u32_e32 v2, s6, v8                                // 00000006C3E8: 4A041006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C3EC: BF870193
	v_add_nc_u32_e32 v8, s4, v12                               // 00000006C3F0: 4A101804
	v_add_nc_u32_e32 v7, s2, v7                                // 00000006C3F4: 4A0E0E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C3F8: BF870193
	v_mul_lo_u32 v2, v2, v11                                   // 00000006C3FC: D72C0002 00021702
	v_mul_lo_u32 v8, v8, v10                                   // 00000006C404: D72C0008 00021508
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006C40C: BF870003
	v_mul_lo_u32 v7, v7, v9                                    // 00000006C410: D72C0007 00021307
	s_clause 0x2                                               // 00000006C418: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006C41C: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006C424: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006C42C: DC6A0000 007C0200
	s_nop 0                                                    // 00000006C434: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C438: BFB60003
	s_endpgm                                                   // 00000006C43C: BFB00000
mul_get_local_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000006C440: BF800000
	.long 0xbf800000                                           // 00000006C444: BF800000
	.long 0xbf800000                                           // 00000006C448: BF800000
	.long 0xbf800000                                           // 00000006C44C: BF800000
	.long 0xbf800000                                           // 00000006C450: BF800000
	.long 0xbf800000                                           // 00000006C454: BF800000
	.long 0xbf800000                                           // 00000006C458: BF800000
	.long 0xbf800000                                           // 00000006C45C: BF800000
	.long 0xbf800000                                           // 00000006C460: BF800000
	.long 0xbf800000                                           // 00000006C464: BF800000
	.long 0xbf800000                                           // 00000006C468: BF800000
	.long 0xbf800000                                           // 00000006C46C: BF800000
	.long 0xbf800000                                           // 00000006C470: BF800000
	.long 0xbf800000                                           // 00000006C474: BF800000
	.long 0xbf800000                                           // 00000006C478: BF800000
	.long 0xbf800000                                           // 00000006C47C: BF800000
	.long 0xbf800000                                           // 00000006C480: BF800000
	.long 0xbf800000                                           // 00000006C484: BF800000
	.long 0xbf800000                                           // 00000006C488: BF800000
	.long 0xbf800000                                           // 00000006C48C: BF800000
	.long 0xbf800000                                           // 00000006C490: BF800000
	.long 0xbf800000                                           // 00000006C494: BF800000
	.long 0xbf800000                                           // 00000006C498: BF800000
	.long 0xbf800000                                           // 00000006C49C: BF800000
	.long 0xbf800000                                           // 00000006C4A0: BF800000
	.long 0xbf800000                                           // 00000006C4A4: BF800000
	.long 0xbf800000                                           // 00000006C4A8: BF800000
	.long 0xbf800000                                           // 00000006C4AC: BF800000
	.long 0xbf800000                                           // 00000006C4B0: BF800000
	.long 0xbf800000                                           // 00000006C4B4: BF800000
	.long 0xbf800000                                           // 00000006C4B8: BF800000
	.long 0xbf800000                                           // 00000006C4BC: BF800000
	.long 0xbf800000                                           // 00000006C4C0: BF800000
	.long 0xbf800000                                           // 00000006C4C4: BF800000
	.long 0xbf800000                                           // 00000006C4C8: BF800000
	.long 0xbf800000                                           // 00000006C4CC: BF800000
	.long 0xbf800000                                           // 00000006C4D0: BF800000
	.long 0xbf800000                                           // 00000006C4D4: BF800000
	.long 0xbf800000                                           // 00000006C4D8: BF800000
	.long 0xbf800000                                           // 00000006C4DC: BF800000
	.long 0xbf800000                                           // 00000006C4E0: BF800000
	.long 0xbf800000                                           // 00000006C4E4: BF800000
	.long 0xbf800000                                           // 00000006C4E8: BF800000
	.long 0xbf800000                                           // 00000006C4EC: BF800000
	.long 0xbf800000                                           // 00000006C4F0: BF800000
	.long 0xbf800000                                           // 00000006C4F4: BF800000
	.long 0xbf800000                                           // 00000006C4F8: BF800000
	.long 0xbf800000                                           // 00000006C4FC: BF800000

	.p2align	8
	.type	mul_get_group_id_get_global_size,@function
	.size	mul_get_group_id_get_global_size, mul_get_group_id_get_global_size_symend-mul_get_group_id_get_global_size
mul_get_group_id_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006C500: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 00000006C50C: 84068102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006C510: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006C518: D6100000 02292900
	s_clause 0x1                                               // 00000006C520: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006C524: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006C52C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006C534: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C538: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006C540: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006C548: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C550: F4040000 F8000008
	s_lshl_b32 s7, s4, 1                                       // 00000006C558: 84078104
	s_mov_b32 s33, 0                                           // 00000006C55C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006C560: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 00000006C564: D6550001 04040C08
	s_lshl_b32 s6, s3, 4                                       // 00000006C56C: 84068403
	s_lshl_b32 s8, s13, 4                                      // 00000006C570: 8408840D
	s_lshl_b32 s9, s14, 1                                      // 00000006C574: 8409810E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006C578: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006C57C: D73C0003 00020282
	v_add3_u32 v1, s10, s6, v5                                 // 00000006C584: D6550001 04140C0A
	s_lshl_b32 s6, s12, 1                                      // 00000006C58C: 8406810C
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006C590: D73C0005 00020282
	v_add3_u32 v1, s5, s7, v0                                  // 00000006C598: D6550001 04000E05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006C5A0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006C5A4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006C5AC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006C5B0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006C5B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006C5C0: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006C5C4: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C5C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C5D0: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006C5D4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006C5D8: 32120E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006C5DC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006C5E4: BF8903F7
	v_add_nc_u32_e32 v2, s9, v8                                // 00000006C5E8: 4A041009
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C5EC: BF870193
	v_add_nc_u32_e32 v8, s8, v9                                // 00000006C5F0: 4A101208
	v_add_nc_u32_e32 v7, s6, v7                                // 00000006C5F4: 4A0E0E06
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C5F8: BF870193
	v_mul_lo_u32 v2, v2, s4                                    // 00000006C5FC: D72C0002 00000902
	v_mul_lo_u32 v8, v8, s3                                    // 00000006C604: D72C0008 00000708
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006C60C: BF870003
	v_mul_lo_u32 v7, v7, s2                                    // 00000006C610: D72C0007 00000507
	s_clause 0x2                                               // 00000006C618: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006C61C: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006C624: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006C62C: DC6A0000 007C0200
	s_nop 0                                                    // 00000006C634: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C638: BFB60003
	s_endpgm                                                   // 00000006C63C: BFB00000
mul_get_group_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000006C640: BF800000
	.long 0xbf800000                                           // 00000006C644: BF800000
	.long 0xbf800000                                           // 00000006C648: BF800000
	.long 0xbf800000                                           // 00000006C64C: BF800000
	.long 0xbf800000                                           // 00000006C650: BF800000
	.long 0xbf800000                                           // 00000006C654: BF800000
	.long 0xbf800000                                           // 00000006C658: BF800000
	.long 0xbf800000                                           // 00000006C65C: BF800000
	.long 0xbf800000                                           // 00000006C660: BF800000
	.long 0xbf800000                                           // 00000006C664: BF800000
	.long 0xbf800000                                           // 00000006C668: BF800000
	.long 0xbf800000                                           // 00000006C66C: BF800000
	.long 0xbf800000                                           // 00000006C670: BF800000
	.long 0xbf800000                                           // 00000006C674: BF800000
	.long 0xbf800000                                           // 00000006C678: BF800000
	.long 0xbf800000                                           // 00000006C67C: BF800000
	.long 0xbf800000                                           // 00000006C680: BF800000
	.long 0xbf800000                                           // 00000006C684: BF800000
	.long 0xbf800000                                           // 00000006C688: BF800000
	.long 0xbf800000                                           // 00000006C68C: BF800000
	.long 0xbf800000                                           // 00000006C690: BF800000
	.long 0xbf800000                                           // 00000006C694: BF800000
	.long 0xbf800000                                           // 00000006C698: BF800000
	.long 0xbf800000                                           // 00000006C69C: BF800000
	.long 0xbf800000                                           // 00000006C6A0: BF800000
	.long 0xbf800000                                           // 00000006C6A4: BF800000
	.long 0xbf800000                                           // 00000006C6A8: BF800000
	.long 0xbf800000                                           // 00000006C6AC: BF800000
	.long 0xbf800000                                           // 00000006C6B0: BF800000
	.long 0xbf800000                                           // 00000006C6B4: BF800000
	.long 0xbf800000                                           // 00000006C6B8: BF800000
	.long 0xbf800000                                           // 00000006C6BC: BF800000
	.long 0xbf800000                                           // 00000006C6C0: BF800000
	.long 0xbf800000                                           // 00000006C6C4: BF800000
	.long 0xbf800000                                           // 00000006C6C8: BF800000
	.long 0xbf800000                                           // 00000006C6CC: BF800000
	.long 0xbf800000                                           // 00000006C6D0: BF800000
	.long 0xbf800000                                           // 00000006C6D4: BF800000
	.long 0xbf800000                                           // 00000006C6D8: BF800000
	.long 0xbf800000                                           // 00000006C6DC: BF800000
	.long 0xbf800000                                           // 00000006C6E0: BF800000
	.long 0xbf800000                                           // 00000006C6E4: BF800000
	.long 0xbf800000                                           // 00000006C6E8: BF800000
	.long 0xbf800000                                           // 00000006C6EC: BF800000
	.long 0xbf800000                                           // 00000006C6F0: BF800000
	.long 0xbf800000                                           // 00000006C6F4: BF800000
	.long 0xbf800000                                           // 00000006C6F8: BF800000
	.long 0xbf800000                                           // 00000006C6FC: BF800000

	.p2align	8
	.type	mul_get_local_size_get_global_size,@function
	.size	mul_get_local_size_get_global_size, mul_get_local_size_get_global_size_symend-mul_get_local_size_get_global_size
mul_get_local_size_get_global_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006C700: F4080200 F8000010
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006C708: CA240080 020000FF 000003FF
	s_add_u32 s5, s0, 16                                       // 00000006C714: 80059000
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006C718: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006C720: D6100000 02292900
	s_clause 0x1                                               // 00000006C728: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006C72C: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006C734: DC4A0026 08000002
	s_waitcnt lgkmcnt(0)                                       // 00000006C73C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006C740: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006C744: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000006C748: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006C74C: 840E8204
	s_mov_b32 s33, 0                                           // 00000006C750: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006C754: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006C758: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006C75C: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006C760: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006C764: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006C768: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006C76C: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006C770: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006C774: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006C778: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006C77C: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006C780: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006C784: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006C788: 8205800B
	s_clause 0x2                                               // 00000006C78C: BF850002
	global_load_u16 v9, v2, s[6:7]                             // 00000006C790: DC4A0000 09060002
	global_load_u16 v10, v2, s[2:3]                            // 00000006C798: DC4A0000 0A020002
	global_load_u16 v11, v2, s[4:5]                            // 00000006C7A0: DC4A0000 0B040002
	s_clause 0x2                                               // 00000006C7A8: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006C7AC: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006C7B4: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C7BC: F4040000 F8000008
	s_lshl_b32 s3, s9, 1                                       // 00000006C7C4: 84038109
	s_waitcnt lgkmcnt(0)                                       // 00000006C7C8: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 00000006C7CC: D6550001 04041804
	s_lshl_b32 s4, s10, 2                                      // 00000006C7D4: 8404820A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006C7D8: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006C7DC: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 00000006C7E4: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006C7EC: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v0                                 // 00000006C7F4: D6550001 04001C02
	s_lshl_b32 s2, s8, 1                                       // 00000006C7FC: 84028108
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006C800: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006C804: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006C80C: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006C810: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006C818: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006C820: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006C824: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C828: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C830: 40020201
	s_waitcnt vmcnt(4)                                         // 00000006C834: BF8913F7
	v_and_b32_e32 v12, 0xffff, v7                              // 00000006C838: 36180EFF 0000FFFF
	v_lshrrev_b32_e32 v7, 16, v7                               // 00000006C840: 320E0E90
	s_waitcnt vmcnt(3)                                         // 00000006C844: BF890FF7
	v_add_nc_u32_e32 v2, s4, v8                                // 00000006C848: 4A041004
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C84C: BF870193
	v_add_nc_u32_e32 v8, s2, v12                               // 00000006C850: 4A101802
	v_add_nc_u32_e32 v7, s3, v7                                // 00000006C854: 4A0E0E03
	s_waitcnt vmcnt(2)                                         // 00000006C858: BF890BF7
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000006C85C: BF870122
	v_mul_lo_u32 v8, v8, v9                                    // 00000006C860: D72C0008 00021308
	s_waitcnt vmcnt(1)                                         // 00000006C868: BF8907F7
	v_mul_lo_u32 v7, v7, v10                                   // 00000006C86C: D72C0007 00021507
	s_waitcnt vmcnt(0)                                         // 00000006C874: BF8903F7
	v_mul_lo_u32 v2, v2, v11                                   // 00000006C878: D72C0002 00021702
	s_clause 0x2                                               // 00000006C880: BF850002
	global_store_b32 v[3:4], v8, off                           // 00000006C884: DC6A0000 007C0803
	global_store_b32 v[5:6], v7, off                           // 00000006C88C: DC6A0000 007C0705
	global_store_b32 v[0:1], v2, off                           // 00000006C894: DC6A0000 007C0200
	s_nop 0                                                    // 00000006C89C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C8A0: BFB60003
	s_endpgm                                                   // 00000006C8A4: BFB00000
mul_get_local_size_get_global_size_symend:
	.long 0xbf800000                                           // 00000006C8A8: BF800000
	.long 0xbf800000                                           // 00000006C8AC: BF800000
	.long 0xbf800000                                           // 00000006C8B0: BF800000
	.long 0xbf800000                                           // 00000006C8B4: BF800000
	.long 0xbf800000                                           // 00000006C8B8: BF800000
	.long 0xbf800000                                           // 00000006C8BC: BF800000
	.long 0xbf800000                                           // 00000006C8C0: BF800000
	.long 0xbf800000                                           // 00000006C8C4: BF800000
	.long 0xbf800000                                           // 00000006C8C8: BF800000
	.long 0xbf800000                                           // 00000006C8CC: BF800000
	.long 0xbf800000                                           // 00000006C8D0: BF800000
	.long 0xbf800000                                           // 00000006C8D4: BF800000
	.long 0xbf800000                                           // 00000006C8D8: BF800000
	.long 0xbf800000                                           // 00000006C8DC: BF800000
	.long 0xbf800000                                           // 00000006C8E0: BF800000
	.long 0xbf800000                                           // 00000006C8E4: BF800000
	.long 0xbf800000                                           // 00000006C8E8: BF800000
	.long 0xbf800000                                           // 00000006C8EC: BF800000
	.long 0xbf800000                                           // 00000006C8F0: BF800000
	.long 0xbf800000                                           // 00000006C8F4: BF800000
	.long 0xbf800000                                           // 00000006C8F8: BF800000
	.long 0xbf800000                                           // 00000006C8FC: BF800000

	.p2align	8
	.type	mul_get_global_id_get_global_size,@function
	.size	mul_get_global_id_get_global_size, mul_get_global_id_get_global_size_symend-mul_get_global_id_get_global_size
mul_get_global_id_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006C900: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006C90C: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006C914: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006C91C: BEA10080
	s_clause 0x1                                               // 00000006C920: BF850001
	global_load_b32 v7, v1, s[0:1] offset:34                   // 00000006C924: DC520022 07000001
	global_load_u16 v11, v1, s[0:1] offset:38                  // 00000006C92C: DC4A0026 0B000001
	s_clause 0x3                                               // 00000006C934: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C938: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006C940: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006C948: F4080300 F8000010
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C950: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000006C958: D6560000 04090202
	v_lshl_or_b32 v3, s3, 1, v3                                // 00000006C960: D6560003 040D0203
	v_lshl_or_b32 v8, s4, 2, v4                                // 00000006C968: D6560008 04110404
	v_mov_b32_e32 v2, v1                                       // 00000006C970: 7E040301
	v_mov_b32_e32 v4, v1                                       // 00000006C974: 7E080301
	v_lshlrev_b64 v[5:6], 2, v[0:1]                            // 00000006C978: D73C0005 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006C980: BF89FC07
	v_add_nc_u32_e32 v1, s10, v3                               // 00000006C984: 4A02060A
	v_add_nc_u32_e32 v3, s5, v8                                // 00000006C988: 4A061005
	s_lshl_b32 s2, s12, 1                                      // 00000006C98C: 8402810C
	s_lshl_b32 s4, s14, 2                                      // 00000006C990: 8404820E
	s_lshl_b32 s3, s13, 1                                      // 00000006C994: 8403810D
	v_add_nc_u32_e32 v0, s8, v0                                // 00000006C998: 4A000008
	v_lshlrev_b64 v[9:10], 2, v[3:4]                           // 00000006C99C: D73C0009 00020682
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006C9A4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006C9AC: 400C0C01
	s_waitcnt vmcnt(1)                                         // 00000006C9B0: BF8907F7
	v_and_b32_e32 v12, 0xffff, v7                              // 00000006C9B4: 36180EFF 0000FFFF
	v_lshrrev_b32_e32 v13, 16, v7                              // 00000006C9BC: 321A0E90
	v_lshlrev_b64 v[7:8], 2, v[1:2]                            // 00000006C9C0: D73C0007 00020282
	s_waitcnt vmcnt(0)                                         // 00000006C9C8: BF8903F7
	v_add_nc_u32_e32 v2, s4, v11                               // 00000006C9CC: 4A041604
	v_add_nc_u32_e32 v4, s2, v12                               // 00000006C9D0: 4A081802
	v_add_nc_u32_e32 v11, s3, v13                              // 00000006C9D4: 4A161A03
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006C9D8: BF870214
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 00000006C9DC: D7006A07 00020E00
	v_mul_lo_u32 v2, v2, v3                                    // 00000006C9E4: D72C0002 00020702
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006C9EC: BF870214
	v_mul_lo_u32 v3, v4, v0                                    // 00000006C9F0: D72C0003 00020104
	v_mul_lo_u32 v4, v11, v1                                   // 00000006C9F8: D72C0004 0002030B
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 00000006CA00: 40101001
	v_add_co_u32 v0, vcc_lo, s0, v9                            // 00000006CA04: D7006A00 00021200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v10, vcc_lo            // 00000006CA0C: 40021401
	s_clause 0x2                                               // 00000006CA10: BF850002
	global_store_b32 v[5:6], v3, off                           // 00000006CA14: DC6A0000 007C0305
	global_store_b32 v[7:8], v4, off                           // 00000006CA1C: DC6A0000 007C0407
	global_store_b32 v[0:1], v2, off                           // 00000006CA24: DC6A0000 007C0200
	s_nop 0                                                    // 00000006CA2C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006CA30: BFB60003
	s_endpgm                                                   // 00000006CA34: BFB00000
mul_get_global_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000006CA38: BF800000
	.long 0xbf800000                                           // 00000006CA3C: BF800000
	.long 0xbf800000                                           // 00000006CA40: BF800000
	.long 0xbf800000                                           // 00000006CA44: BF800000
	.long 0xbf800000                                           // 00000006CA48: BF800000
	.long 0xbf800000                                           // 00000006CA4C: BF800000
	.long 0xbf800000                                           // 00000006CA50: BF800000
	.long 0xbf800000                                           // 00000006CA54: BF800000
	.long 0xbf800000                                           // 00000006CA58: BF800000
	.long 0xbf800000                                           // 00000006CA5C: BF800000
	.long 0xbf800000                                           // 00000006CA60: BF800000
	.long 0xbf800000                                           // 00000006CA64: BF800000
	.long 0xbf800000                                           // 00000006CA68: BF800000
	.long 0xbf800000                                           // 00000006CA6C: BF800000
	.long 0xbf800000                                           // 00000006CA70: BF800000
	.long 0xbf800000                                           // 00000006CA74: BF800000
	.long 0xbf800000                                           // 00000006CA78: BF800000
	.long 0xbf800000                                           // 00000006CA7C: BF800000
	.long 0xbf800000                                           // 00000006CA80: BF800000
	.long 0xbf800000                                           // 00000006CA84: BF800000
	.long 0xbf800000                                           // 00000006CA88: BF800000
	.long 0xbf800000                                           // 00000006CA8C: BF800000
	.long 0xbf800000                                           // 00000006CA90: BF800000
	.long 0xbf800000                                           // 00000006CA94: BF800000
	.long 0xbf800000                                           // 00000006CA98: BF800000
	.long 0xbf800000                                           // 00000006CA9C: BF800000
	.long 0xbf800000                                           // 00000006CAA0: BF800000
	.long 0xbf800000                                           // 00000006CAA4: BF800000
	.long 0xbf800000                                           // 00000006CAA8: BF800000
	.long 0xbf800000                                           // 00000006CAAC: BF800000
	.long 0xbf800000                                           // 00000006CAB0: BF800000
	.long 0xbf800000                                           // 00000006CAB4: BF800000
	.long 0xbf800000                                           // 00000006CAB8: BF800000
	.long 0xbf800000                                           // 00000006CABC: BF800000
	.long 0xbf800000                                           // 00000006CAC0: BF800000
	.long 0xbf800000                                           // 00000006CAC4: BF800000
	.long 0xbf800000                                           // 00000006CAC8: BF800000
	.long 0xbf800000                                           // 00000006CACC: BF800000
	.long 0xbf800000                                           // 00000006CAD0: BF800000
	.long 0xbf800000                                           // 00000006CAD4: BF800000
	.long 0xbf800000                                           // 00000006CAD8: BF800000
	.long 0xbf800000                                           // 00000006CADC: BF800000
	.long 0xbf800000                                           // 00000006CAE0: BF800000
	.long 0xbf800000                                           // 00000006CAE4: BF800000
	.long 0xbf800000                                           // 00000006CAE8: BF800000
	.long 0xbf800000                                           // 00000006CAEC: BF800000
	.long 0xbf800000                                           // 00000006CAF0: BF800000
	.long 0xbf800000                                           // 00000006CAF4: BF800000
	.long 0xbf800000                                           // 00000006CAF8: BF800000
	.long 0xbf800000                                           // 00000006CAFC: BF800000

	.p2align	8
	.type	mul_get_global_size_get_global_size,@function
	.size	mul_get_global_size_get_global_size, mul_get_global_size_get_global_size_symend-mul_get_global_size_get_global_size
mul_get_global_size_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006CB00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000006CB0C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006CB10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006CB18: D6100000 02292900
	s_clause 0x1                                               // 00000006CB20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006CB24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006CB2C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006CB34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006CB38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006CB40: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006CB48: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006CB50: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 00000006CB58: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006CB5C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006CB60: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006CB68: 84028103
	s_lshl_b32 s3, s4, 1                                       // 00000006CB6C: 84038104
	s_lshl_b32 s4, s13, 1                                      // 00000006CB70: 8404810D
	s_lshl_b32 s6, s14, 1                                      // 00000006CB74: 8406810E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006CB78: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006CB80: D6550001 0414040A
	s_lshl_b32 s2, s12, 4                                      // 00000006CB88: 8402840C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006CB8C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006CB90: D73C0005 00020282
	v_add3_u32 v1, s5, s3, v0                                  // 00000006CB98: D6550001 04000605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006CBA0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006CBA8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006CBAC: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006CBB0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006CBB8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006CBC0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006CBC4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006CBCC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006CBD0: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006CBD4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006CBD8: 32120E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006CBDC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006CBE4: BF8903F7
	v_add_nc_u32_e32 v2, s6, v8                                // 00000006CBE8: 4A041006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CBEC: BF870193
	v_add_nc_u32_e32 v8, s4, v9                                // 00000006CBF0: 4A101204
	v_add_nc_u32_e32 v7, s2, v7                                // 00000006CBF4: 4A0E0E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CBF8: BF870193
	v_mul_lo_u32 v2, v2, v2                                    // 00000006CBFC: D72C0002 00020502
	v_mul_lo_u32 v8, v8, v8                                    // 00000006CC04: D72C0008 00021108
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006CC0C: BF870003
	v_mul_lo_u32 v7, v7, v7                                    // 00000006CC10: D72C0007 00020F07
	s_clause 0x2                                               // 00000006CC18: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006CC1C: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006CC24: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006CC2C: DC6A0000 007C0200
	s_nop 0                                                    // 00000006CC34: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006CC38: BFB60003
	s_endpgm                                                   // 00000006CC3C: BFB00000
mul_get_global_size_get_global_size_symend:
	.long 0xbf800000                                           // 00000006CC40: BF800000
	.long 0xbf800000                                           // 00000006CC44: BF800000
	.long 0xbf800000                                           // 00000006CC48: BF800000
	.long 0xbf800000                                           // 00000006CC4C: BF800000
	.long 0xbf800000                                           // 00000006CC50: BF800000
	.long 0xbf800000                                           // 00000006CC54: BF800000
	.long 0xbf800000                                           // 00000006CC58: BF800000
	.long 0xbf800000                                           // 00000006CC5C: BF800000
	.long 0xbf800000                                           // 00000006CC60: BF800000
	.long 0xbf800000                                           // 00000006CC64: BF800000
	.long 0xbf800000                                           // 00000006CC68: BF800000
	.long 0xbf800000                                           // 00000006CC6C: BF800000
	.long 0xbf800000                                           // 00000006CC70: BF800000
	.long 0xbf800000                                           // 00000006CC74: BF800000
	.long 0xbf800000                                           // 00000006CC78: BF800000
	.long 0xbf800000                                           // 00000006CC7C: BF800000
	.long 0xbf800000                                           // 00000006CC80: BF800000
	.long 0xbf800000                                           // 00000006CC84: BF800000
	.long 0xbf800000                                           // 00000006CC88: BF800000
	.long 0xbf800000                                           // 00000006CC8C: BF800000
	.long 0xbf800000                                           // 00000006CC90: BF800000
	.long 0xbf800000                                           // 00000006CC94: BF800000
	.long 0xbf800000                                           // 00000006CC98: BF800000
	.long 0xbf800000                                           // 00000006CC9C: BF800000
	.long 0xbf800000                                           // 00000006CCA0: BF800000
	.long 0xbf800000                                           // 00000006CCA4: BF800000
	.long 0xbf800000                                           // 00000006CCA8: BF800000
	.long 0xbf800000                                           // 00000006CCAC: BF800000
	.long 0xbf800000                                           // 00000006CCB0: BF800000
	.long 0xbf800000                                           // 00000006CCB4: BF800000
	.long 0xbf800000                                           // 00000006CCB8: BF800000
	.long 0xbf800000                                           // 00000006CCBC: BF800000
	.long 0xbf800000                                           // 00000006CCC0: BF800000
	.long 0xbf800000                                           // 00000006CCC4: BF800000
	.long 0xbf800000                                           // 00000006CCC8: BF800000
	.long 0xbf800000                                           // 00000006CCCC: BF800000
	.long 0xbf800000                                           // 00000006CCD0: BF800000
	.long 0xbf800000                                           // 00000006CCD4: BF800000
	.long 0xbf800000                                           // 00000006CCD8: BF800000
	.long 0xbf800000                                           // 00000006CCDC: BF800000
	.long 0xbf800000                                           // 00000006CCE0: BF800000
	.long 0xbf800000                                           // 00000006CCE4: BF800000
	.long 0xbf800000                                           // 00000006CCE8: BF800000
	.long 0xbf800000                                           // 00000006CCEC: BF800000
	.long 0xbf800000                                           // 00000006CCF0: BF800000
	.long 0xbf800000                                           // 00000006CCF4: BF800000
	.long 0xbf800000                                           // 00000006CCF8: BF800000
	.long 0xbf800000                                           // 00000006CCFC: BF800000

	.p2align	8
	.type	mul_get_num_groups_get_global_size,@function
	.size	mul_get_num_groups_get_global_size, mul_get_num_groups_get_global_size_symend-mul_get_num_groups_get_global_size
mul_get_num_groups_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006CD00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006CD0C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 00000006CD14: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006CD18: D6100005 02291500
	s_clause 0x1                                               // 00000006CD20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006CD24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006CD2C: DC4A0026 08000002
	s_clause 0x2                                               // 00000006CD34: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006CD38: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006CD40: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006CD48: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 00000006CD50: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006CD54: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006CD5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006CD60: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006CD64: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006CD6C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006CD70: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006CD78: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 00000006CD80: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006CD84: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v0                                  // 00000006CD8C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006CD94: BF870094
	v_add_co_u32 v3, s1, s6, v3                                // 00000006CD98: D7000103 00020606
	v_add_co_ci_u32_e64 v4, s1, s7, v4, s1                     // 00000006CDA0: D5200104 00060807
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 00000006CDA8: BF8701D3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006CDAC: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006CDB4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006CDB8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006CDBC: 7C7A0E80
	v_and_b32_e32 v2, 0xffff, v7                               // 00000006CDC0: 36040EFF 0000FFFF
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 00000006CDC8: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006CDD0: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006CDD4: BF8903F7
	v_cmp_ne_u32_e32 vcc_lo, 0, v8                             // 00000006CDD8: 7C9A1080
	s_addc_u32 s1, s12, 0                                      // 00000006CDDC: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 00000006CDE0: BF078000
	s_addc_u32 s0, s13, 0                                      // 00000006CDE4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006CDE8: BF07806A
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 00000006CDEC: D7006A05 00020A06
	s_addc_u32 s2, s14, 0                                      // 00000006CDF4: 8202800E
	s_lshl_b32 s3, s12, 1                                      // 00000006CDF8: 8403810C
	s_lshl_b32 s4, s13, 1                                      // 00000006CDFC: 8404810D
	s_lshl_b32 s5, s14, 2                                      // 00000006CE00: 8405820E
	v_add_nc_u32_e32 v2, s3, v2                                // 00000006CE04: 4A040403
	v_add_nc_u32_e32 v7, s4, v9                                // 00000006CE08: 4A0E1204
	v_add_nc_u32_e32 v8, s5, v8                                // 00000006CE0C: 4A101005
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 00000006CE10: 400C0C07
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006CE14: BF870214
	v_mul_lo_u32 v2, s1, v2                                    // 00000006CE18: D72C0002 00020401
	v_mul_lo_u32 v7, s0, v7                                    // 00000006CE20: D72C0007 00020E00
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006CE28: BF870004
	v_mul_lo_u32 v8, s2, v8                                    // 00000006CE2C: D72C0008 00021002
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006CE34: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006CE3C: 40020207
	s_clause 0x2                                               // 00000006CE40: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006CE44: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006CE4C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006CE54: DC6A0000 007C0800
	s_nop 0                                                    // 00000006CE5C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006CE60: BFB60003
	s_endpgm                                                   // 00000006CE64: BFB00000
mul_get_num_groups_get_global_size_symend:
	.long 0xbf800000                                           // 00000006CE68: BF800000
	.long 0xbf800000                                           // 00000006CE6C: BF800000
	.long 0xbf800000                                           // 00000006CE70: BF800000
	.long 0xbf800000                                           // 00000006CE74: BF800000
	.long 0xbf800000                                           // 00000006CE78: BF800000
	.long 0xbf800000                                           // 00000006CE7C: BF800000
	.long 0xbf800000                                           // 00000006CE80: BF800000
	.long 0xbf800000                                           // 00000006CE84: BF800000
	.long 0xbf800000                                           // 00000006CE88: BF800000
	.long 0xbf800000                                           // 00000006CE8C: BF800000
	.long 0xbf800000                                           // 00000006CE90: BF800000
	.long 0xbf800000                                           // 00000006CE94: BF800000
	.long 0xbf800000                                           // 00000006CE98: BF800000
	.long 0xbf800000                                           // 00000006CE9C: BF800000
	.long 0xbf800000                                           // 00000006CEA0: BF800000
	.long 0xbf800000                                           // 00000006CEA4: BF800000
	.long 0xbf800000                                           // 00000006CEA8: BF800000
	.long 0xbf800000                                           // 00000006CEAC: BF800000
	.long 0xbf800000                                           // 00000006CEB0: BF800000
	.long 0xbf800000                                           // 00000006CEB4: BF800000
	.long 0xbf800000                                           // 00000006CEB8: BF800000
	.long 0xbf800000                                           // 00000006CEBC: BF800000
	.long 0xbf800000                                           // 00000006CEC0: BF800000
	.long 0xbf800000                                           // 00000006CEC4: BF800000
	.long 0xbf800000                                           // 00000006CEC8: BF800000
	.long 0xbf800000                                           // 00000006CECC: BF800000
	.long 0xbf800000                                           // 00000006CED0: BF800000
	.long 0xbf800000                                           // 00000006CED4: BF800000
	.long 0xbf800000                                           // 00000006CED8: BF800000
	.long 0xbf800000                                           // 00000006CEDC: BF800000
	.long 0xbf800000                                           // 00000006CEE0: BF800000
	.long 0xbf800000                                           // 00000006CEE4: BF800000
	.long 0xbf800000                                           // 00000006CEE8: BF800000
	.long 0xbf800000                                           // 00000006CEEC: BF800000
	.long 0xbf800000                                           // 00000006CEF0: BF800000
	.long 0xbf800000                                           // 00000006CEF4: BF800000
	.long 0xbf800000                                           // 00000006CEF8: BF800000
	.long 0xbf800000                                           // 00000006CEFC: BF800000

	.p2align	8
	.type	mul_get_work_dim_get_global_size,@function
	.size	mul_get_work_dim_get_global_size, mul_get_work_dim_get_global_size_symend-mul_get_work_dim_get_global_size
mul_get_work_dim_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006CF00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006CF0C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006CF10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006CF18: D6100000 02292900
	s_clause 0x1                                               // 00000006CF20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006CF24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006CF2C: DC4A0026 08000002
	s_clause 0x4                                               // 00000006CF34: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 00000006CF38: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006CF40: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006CF48: F4080300 F8000010
	s_load_b32 s6, s[0:1], 0x48                                // 00000006CF50: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006CF58: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000006CF60: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006CF64: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006CF68: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006CF70: 84028103
	s_lshl_b32 s3, s4, 2                                       // 00000006CF74: 84038204
	s_lshl_b32 s4, s12, 1                                      // 00000006CF78: 8404810C
	s_lshl_b32 s7, s14, 2                                      // 00000006CF7C: 8407820E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006CF80: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006CF88: D6550001 0414040A
	s_and_b32 s2, s5, 0xffff                                   // 00000006CF90: 8B02FF05 0000FFFF
	s_lshl_b32 s5, s13, 1                                      // 00000006CF98: 8405810D
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006CF9C: BF8701C1
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006CFA0: D73C0005 00020282
	v_add3_u32 v1, s6, s3, v0                                  // 00000006CFA8: D6550001 04000606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006CFB0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006CFB8: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006CFBC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006CFC4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006CFCC: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006CFD0: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006CFD4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006CFDC: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006CFE0: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006CFE4: 32120E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006CFE8: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006CFF0: BF8903F7
	v_add_nc_u32_e32 v2, s7, v8                                // 00000006CFF4: 4A041007
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CFF8: BF870193
	v_add_nc_u32_e32 v8, s5, v9                                // 00000006CFFC: 4A101205
	v_add_nc_u32_e32 v7, s4, v7                                // 00000006D000: 4A0E0E04
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D004: BF870193
	v_mul_lo_u32 v2, v2, s2                                    // 00000006D008: D72C0002 00000502
	v_mul_lo_u32 v8, v8, s2                                    // 00000006D010: D72C0008 00000508
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006D018: BF870003
	v_mul_lo_u32 v7, v7, s2                                    // 00000006D01C: D72C0007 00000507
	s_clause 0x2                                               // 00000006D024: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006D028: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006D030: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006D038: DC6A0000 007C0200
	s_nop 0                                                    // 00000006D040: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D044: BFB60003
	s_endpgm                                                   // 00000006D048: BFB00000
mul_get_work_dim_get_global_size_symend:
	.long 0xbf800000                                           // 00000006D04C: BF800000
	.long 0xbf800000                                           // 00000006D050: BF800000
	.long 0xbf800000                                           // 00000006D054: BF800000
	.long 0xbf800000                                           // 00000006D058: BF800000
	.long 0xbf800000                                           // 00000006D05C: BF800000
	.long 0xbf800000                                           // 00000006D060: BF800000
	.long 0xbf800000                                           // 00000006D064: BF800000
	.long 0xbf800000                                           // 00000006D068: BF800000
	.long 0xbf800000                                           // 00000006D06C: BF800000
	.long 0xbf800000                                           // 00000006D070: BF800000
	.long 0xbf800000                                           // 00000006D074: BF800000
	.long 0xbf800000                                           // 00000006D078: BF800000
	.long 0xbf800000                                           // 00000006D07C: BF800000
	.long 0xbf800000                                           // 00000006D080: BF800000
	.long 0xbf800000                                           // 00000006D084: BF800000
	.long 0xbf800000                                           // 00000006D088: BF800000
	.long 0xbf800000                                           // 00000006D08C: BF800000
	.long 0xbf800000                                           // 00000006D090: BF800000
	.long 0xbf800000                                           // 00000006D094: BF800000
	.long 0xbf800000                                           // 00000006D098: BF800000
	.long 0xbf800000                                           // 00000006D09C: BF800000
	.long 0xbf800000                                           // 00000006D0A0: BF800000
	.long 0xbf800000                                           // 00000006D0A4: BF800000
	.long 0xbf800000                                           // 00000006D0A8: BF800000
	.long 0xbf800000                                           // 00000006D0AC: BF800000
	.long 0xbf800000                                           // 00000006D0B0: BF800000
	.long 0xbf800000                                           // 00000006D0B4: BF800000
	.long 0xbf800000                                           // 00000006D0B8: BF800000
	.long 0xbf800000                                           // 00000006D0BC: BF800000
	.long 0xbf800000                                           // 00000006D0C0: BF800000
	.long 0xbf800000                                           // 00000006D0C4: BF800000
	.long 0xbf800000                                           // 00000006D0C8: BF800000
	.long 0xbf800000                                           // 00000006D0CC: BF800000
	.long 0xbf800000                                           // 00000006D0D0: BF800000
	.long 0xbf800000                                           // 00000006D0D4: BF800000
	.long 0xbf800000                                           // 00000006D0D8: BF800000
	.long 0xbf800000                                           // 00000006D0DC: BF800000
	.long 0xbf800000                                           // 00000006D0E0: BF800000
	.long 0xbf800000                                           // 00000006D0E4: BF800000
	.long 0xbf800000                                           // 00000006D0E8: BF800000
	.long 0xbf800000                                           // 00000006D0EC: BF800000
	.long 0xbf800000                                           // 00000006D0F0: BF800000
	.long 0xbf800000                                           // 00000006D0F4: BF800000
	.long 0xbf800000                                           // 00000006D0F8: BF800000
	.long 0xbf800000                                           // 00000006D0FC: BF800000

	.p2align	8
	.type	mul_x_get_num_groups,@function
	.size	mul_x_get_num_groups, mul_x_get_num_groups_symend-mul_x_get_num_groups
mul_x_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006D100: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], null                            // 00000006D10C: F4040180 F8000000
	s_lshl_b32 s2, s2, 4                                       // 00000006D114: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006D118: D6100005 02291500
	s_clause 0x1                                               // 00000006D120: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006D124: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006D12C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006D134: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D138: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006D140: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006D148: F4080300 F8000010
	s_load_b32 s1, s[0:1], 0x8                                 // 00000006D150: F4000040 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006D158: D6100000 02292900
	s_lshl_b32 s0, s4, 1                                       // 00000006D160: 84008104
	s_mov_b32 s33, 0                                           // 00000006D164: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006D168: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006D16C: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006D174: 84028103
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006D178: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006D17C: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006D184: D6550001 0414040A
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006D18C: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v0                                  // 00000006D194: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006D19C: BF870094
	v_add_co_u32 v3, s0, s6, v3                                // 00000006D1A0: D7000003 00020606
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 00000006D1A8: D5200004 00020807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006D1B0: BF870094
	v_add_co_u32 v5, s0, s6, v5                                // 00000006D1B4: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 00000006D1BC: D5200006 00020C07
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006D1C4: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006D1CC: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006D1D0: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006D1D4: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 00000006D1D8: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006D1DC: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006D1E4: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 00000006D1E8: 7C7A1280
	s_addc_u32 s2, s12, 0                                      // 00000006D1EC: 8202800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006D1F0: BF870009
	s_mul_i32 s2, s2, s1                                       // 00000006D1F4: 96020102
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006D1F8: BF07806A
	v_mov_b32_e32 v2, s2                                       // 00000006D1FC: 7E040202
	s_addc_u32 s2, s13, 0                                      // 00000006D200: 8202800D
	s_cmp_lg_u32 s0, 0                                         // 00000006D204: BF078000
	s_mul_i32 s0, s2, s1                                       // 00000006D208: 96000102
	s_addc_u32 s2, s14, 0                                      // 00000006D20C: 8202800E
	v_mov_b32_e32 v7, s0                                       // 00000006D210: 7E0E0200
	s_mul_i32 s0, s2, s1                                       // 00000006D214: 96000102
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006D218: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006D220: 40020207
	v_mov_b32_e32 v8, s0                                       // 00000006D224: 7E100200
	s_clause 0x2                                               // 00000006D228: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006D22C: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006D234: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006D23C: DC6A0000 007C0800
	s_nop 0                                                    // 00000006D244: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D248: BFB60003
	s_endpgm                                                   // 00000006D24C: BFB00000
mul_x_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006D250: BF800000
	.long 0xbf800000                                           // 00000006D254: BF800000
	.long 0xbf800000                                           // 00000006D258: BF800000
	.long 0xbf800000                                           // 00000006D25C: BF800000
	.long 0xbf800000                                           // 00000006D260: BF800000
	.long 0xbf800000                                           // 00000006D264: BF800000
	.long 0xbf800000                                           // 00000006D268: BF800000
	.long 0xbf800000                                           // 00000006D26C: BF800000
	.long 0xbf800000                                           // 00000006D270: BF800000
	.long 0xbf800000                                           // 00000006D274: BF800000
	.long 0xbf800000                                           // 00000006D278: BF800000
	.long 0xbf800000                                           // 00000006D27C: BF800000
	.long 0xbf800000                                           // 00000006D280: BF800000
	.long 0xbf800000                                           // 00000006D284: BF800000
	.long 0xbf800000                                           // 00000006D288: BF800000
	.long 0xbf800000                                           // 00000006D28C: BF800000
	.long 0xbf800000                                           // 00000006D290: BF800000
	.long 0xbf800000                                           // 00000006D294: BF800000
	.long 0xbf800000                                           // 00000006D298: BF800000
	.long 0xbf800000                                           // 00000006D29C: BF800000
	.long 0xbf800000                                           // 00000006D2A0: BF800000
	.long 0xbf800000                                           // 00000006D2A4: BF800000
	.long 0xbf800000                                           // 00000006D2A8: BF800000
	.long 0xbf800000                                           // 00000006D2AC: BF800000
	.long 0xbf800000                                           // 00000006D2B0: BF800000
	.long 0xbf800000                                           // 00000006D2B4: BF800000
	.long 0xbf800000                                           // 00000006D2B8: BF800000
	.long 0xbf800000                                           // 00000006D2BC: BF800000
	.long 0xbf800000                                           // 00000006D2C0: BF800000
	.long 0xbf800000                                           // 00000006D2C4: BF800000
	.long 0xbf800000                                           // 00000006D2C8: BF800000
	.long 0xbf800000                                           // 00000006D2CC: BF800000
	.long 0xbf800000                                           // 00000006D2D0: BF800000
	.long 0xbf800000                                           // 00000006D2D4: BF800000
	.long 0xbf800000                                           // 00000006D2D8: BF800000
	.long 0xbf800000                                           // 00000006D2DC: BF800000
	.long 0xbf800000                                           // 00000006D2E0: BF800000
	.long 0xbf800000                                           // 00000006D2E4: BF800000
	.long 0xbf800000                                           // 00000006D2E8: BF800000
	.long 0xbf800000                                           // 00000006D2EC: BF800000
	.long 0xbf800000                                           // 00000006D2F0: BF800000
	.long 0xbf800000                                           // 00000006D2F4: BF800000
	.long 0xbf800000                                           // 00000006D2F8: BF800000
	.long 0xbf800000                                           // 00000006D2FC: BF800000

	.p2align	8
	.type	mul_get_global_offset_get_num_groups,@function
	.size	mul_get_global_offset_get_num_groups, mul_get_global_offset_get_num_groups_symend-mul_get_global_offset_get_num_groups
mul_get_global_offset_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006D300: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006D30C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 00000006D314: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006D318: D6100005 02291500
	s_clause 0x1                                               // 00000006D320: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006D324: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006D32C: DC4A0026 08000002
	s_clause 0x2                                               // 00000006D334: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D338: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006D340: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006D348: F4080300 F8000010
	s_lshl_b32 s0, s3, 4                                       // 00000006D350: 84008403
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006D354: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006D35C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006D360: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006D364: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006D36C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006D370: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006D378: D6550001 0414000A
	s_lshl_b32 s0, s4, 1                                       // 00000006D380: 84008104
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006D384: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v0                                  // 00000006D38C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006D394: BF870094
	v_add_co_u32 v3, s0, s6, v3                                // 00000006D398: D7000003 00020606
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 00000006D3A0: D5200004 00020807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006D3A8: BF870094
	v_add_co_u32 v5, s0, s6, v5                                // 00000006D3AC: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 00000006D3B4: D5200006 00020C07
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006D3BC: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006D3C4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006D3C8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006D3CC: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 00000006D3D0: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006D3D4: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006D3DC: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 00000006D3E0: 7C7A1280
	s_addc_u32 s1, s12, 0                                      // 00000006D3E4: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006D3E8: BF870009
	s_mul_i32 s1, s1, s8                                       // 00000006D3EC: 96010801
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006D3F0: BF07806A
	v_mov_b32_e32 v2, s1                                       // 00000006D3F4: 7E040201
	s_addc_u32 s1, s13, 0                                      // 00000006D3F8: 8201800D
	s_cmp_lg_u32 s0, 0                                         // 00000006D3FC: BF078000
	s_mul_i32 s0, s1, s10                                      // 00000006D400: 96000A01
	s_addc_u32 s1, s14, 0                                      // 00000006D404: 8201800E
	v_mov_b32_e32 v7, s0                                       // 00000006D408: 7E0E0200
	s_mul_i32 s0, s1, s5                                       // 00000006D40C: 96000501
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006D410: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006D418: 40020207
	v_mov_b32_e32 v8, s0                                       // 00000006D41C: 7E100200
	s_clause 0x2                                               // 00000006D420: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006D424: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006D42C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006D434: DC6A0000 007C0800
	s_nop 0                                                    // 00000006D43C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D440: BFB60003
	s_endpgm                                                   // 00000006D444: BFB00000
mul_get_global_offset_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006D448: BF800000
	.long 0xbf800000                                           // 00000006D44C: BF800000
	.long 0xbf800000                                           // 00000006D450: BF800000
	.long 0xbf800000                                           // 00000006D454: BF800000
	.long 0xbf800000                                           // 00000006D458: BF800000
	.long 0xbf800000                                           // 00000006D45C: BF800000
	.long 0xbf800000                                           // 00000006D460: BF800000
	.long 0xbf800000                                           // 00000006D464: BF800000
	.long 0xbf800000                                           // 00000006D468: BF800000
	.long 0xbf800000                                           // 00000006D46C: BF800000
	.long 0xbf800000                                           // 00000006D470: BF800000
	.long 0xbf800000                                           // 00000006D474: BF800000
	.long 0xbf800000                                           // 00000006D478: BF800000
	.long 0xbf800000                                           // 00000006D47C: BF800000
	.long 0xbf800000                                           // 00000006D480: BF800000
	.long 0xbf800000                                           // 00000006D484: BF800000
	.long 0xbf800000                                           // 00000006D488: BF800000
	.long 0xbf800000                                           // 00000006D48C: BF800000
	.long 0xbf800000                                           // 00000006D490: BF800000
	.long 0xbf800000                                           // 00000006D494: BF800000
	.long 0xbf800000                                           // 00000006D498: BF800000
	.long 0xbf800000                                           // 00000006D49C: BF800000
	.long 0xbf800000                                           // 00000006D4A0: BF800000
	.long 0xbf800000                                           // 00000006D4A4: BF800000
	.long 0xbf800000                                           // 00000006D4A8: BF800000
	.long 0xbf800000                                           // 00000006D4AC: BF800000
	.long 0xbf800000                                           // 00000006D4B0: BF800000
	.long 0xbf800000                                           // 00000006D4B4: BF800000
	.long 0xbf800000                                           // 00000006D4B8: BF800000
	.long 0xbf800000                                           // 00000006D4BC: BF800000
	.long 0xbf800000                                           // 00000006D4C0: BF800000
	.long 0xbf800000                                           // 00000006D4C4: BF800000
	.long 0xbf800000                                           // 00000006D4C8: BF800000
	.long 0xbf800000                                           // 00000006D4CC: BF800000
	.long 0xbf800000                                           // 00000006D4D0: BF800000
	.long 0xbf800000                                           // 00000006D4D4: BF800000
	.long 0xbf800000                                           // 00000006D4D8: BF800000
	.long 0xbf800000                                           // 00000006D4DC: BF800000
	.long 0xbf800000                                           // 00000006D4E0: BF800000
	.long 0xbf800000                                           // 00000006D4E4: BF800000
	.long 0xbf800000                                           // 00000006D4E8: BF800000
	.long 0xbf800000                                           // 00000006D4EC: BF800000
	.long 0xbf800000                                           // 00000006D4F0: BF800000
	.long 0xbf800000                                           // 00000006D4F4: BF800000
	.long 0xbf800000                                           // 00000006D4F8: BF800000
	.long 0xbf800000                                           // 00000006D4FC: BF800000

	.p2align	8
	.type	mul_get_local_id_get_num_groups,@function
	.size	mul_get_local_id_get_num_groups, mul_get_local_id_get_num_groups_symend-mul_get_local_id_get_num_groups
mul_get_local_id_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 00000006D500: CA240080 020800FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006D50C: F4040180 F8000008
	s_lshl_b32 s2, s2, 3                                       // 00000006D514: 84028302
	v_bfe_u32 v10, v0, 10, 10                                  // 00000006D518: D610000A 02291500
	s_clause 0x1                                               // 00000006D520: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006D524: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006D52C: DC4A0026 08000002
	s_clause 0x2                                               // 00000006D534: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D538: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006D540: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006D548: F4080300 F8000010
	s_lshl_b32 s0, s3, 2                                       // 00000006D550: 84008203
	v_bfe_u32 v11, v0, 20, 10                                  // 00000006D554: D610000B 02292900
	s_mov_b32 s33, 0                                           // 00000006D55C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006D560: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 00000006D564: D6550001 04240408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006D56C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006D570: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v10                                // 00000006D578: D6550001 0428000A
	s_lshl_b32 s0, s4, 1                                       // 00000006D580: 84008104
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006D584: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v11                                 // 00000006D58C: D6550001 042C0005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006D594: BF870094
	v_add_co_u32 v3, s0, s6, v3                                // 00000006D598: D7000003 00020606
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 00000006D5A0: D5200004 00020807
	s_waitcnt vmcnt(1)                                         // 00000006D5A8: BF8907F7
	v_lshrrev_b32_e32 v0, 16, v7                               // 00000006D5AC: 32000E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006D5B0: 7C7A0E80
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006D5B4: BF870002
	v_cmp_ne_u16_e64 s0, 0, v0.l                               // 00000006D5B8: D43D0000 00020080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006D5C0: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006D5C4: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006D5C8: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 00000006D5CC: 8201800C
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006D5D0: D73C0000 00020282
	s_cmp_lg_u32 s0, 0                                         // 00000006D5D8: BF078000
	v_add_co_u32 v5, s0, s6, v5                                // 00000006D5DC: D7000005 00020A06
	s_delay_alu instid0(VALU_DEP_1)                            // 00000006D5E4: BF870001
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 00000006D5E8: D5200006 00020C07
	s_addc_u32 s0, s13, 0                                      // 00000006D5F0: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006D5F4: BF07806A
	v_mul_lo_u32 v2, s1, v9                                    // 00000006D5F8: D72C0002 00021201
	s_addc_u32 s1, s14, 0                                      // 00000006D600: 8201800E
	v_mul_lo_u32 v7, s0, v10                                   // 00000006D604: D72C0007 00021400
	v_mul_lo_u32 v8, s1, v11                                   // 00000006D60C: D72C0008 00021601
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006D614: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006D61C: 40020207
	s_clause 0x2                                               // 00000006D620: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006D624: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006D62C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006D634: DC6A0000 007C0800
	s_nop 0                                                    // 00000006D63C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D640: BFB60003
	s_endpgm                                                   // 00000006D644: BFB00000
mul_get_local_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006D648: BF800000
	.long 0xbf800000                                           // 00000006D64C: BF800000
	.long 0xbf800000                                           // 00000006D650: BF800000
	.long 0xbf800000                                           // 00000006D654: BF800000
	.long 0xbf800000                                           // 00000006D658: BF800000
	.long 0xbf800000                                           // 00000006D65C: BF800000
	.long 0xbf800000                                           // 00000006D660: BF800000
	.long 0xbf800000                                           // 00000006D664: BF800000
	.long 0xbf800000                                           // 00000006D668: BF800000
	.long 0xbf800000                                           // 00000006D66C: BF800000
	.long 0xbf800000                                           // 00000006D670: BF800000
	.long 0xbf800000                                           // 00000006D674: BF800000
	.long 0xbf800000                                           // 00000006D678: BF800000
	.long 0xbf800000                                           // 00000006D67C: BF800000
	.long 0xbf800000                                           // 00000006D680: BF800000
	.long 0xbf800000                                           // 00000006D684: BF800000
	.long 0xbf800000                                           // 00000006D688: BF800000
	.long 0xbf800000                                           // 00000006D68C: BF800000
	.long 0xbf800000                                           // 00000006D690: BF800000
	.long 0xbf800000                                           // 00000006D694: BF800000
	.long 0xbf800000                                           // 00000006D698: BF800000
	.long 0xbf800000                                           // 00000006D69C: BF800000
	.long 0xbf800000                                           // 00000006D6A0: BF800000
	.long 0xbf800000                                           // 00000006D6A4: BF800000
	.long 0xbf800000                                           // 00000006D6A8: BF800000
	.long 0xbf800000                                           // 00000006D6AC: BF800000
	.long 0xbf800000                                           // 00000006D6B0: BF800000
	.long 0xbf800000                                           // 00000006D6B4: BF800000
	.long 0xbf800000                                           // 00000006D6B8: BF800000
	.long 0xbf800000                                           // 00000006D6BC: BF800000
	.long 0xbf800000                                           // 00000006D6C0: BF800000
	.long 0xbf800000                                           // 00000006D6C4: BF800000
	.long 0xbf800000                                           // 00000006D6C8: BF800000
	.long 0xbf800000                                           // 00000006D6CC: BF800000
	.long 0xbf800000                                           // 00000006D6D0: BF800000
	.long 0xbf800000                                           // 00000006D6D4: BF800000
	.long 0xbf800000                                           // 00000006D6D8: BF800000
	.long 0xbf800000                                           // 00000006D6DC: BF800000
	.long 0xbf800000                                           // 00000006D6E0: BF800000
	.long 0xbf800000                                           // 00000006D6E4: BF800000
	.long 0xbf800000                                           // 00000006D6E8: BF800000
	.long 0xbf800000                                           // 00000006D6EC: BF800000
	.long 0xbf800000                                           // 00000006D6F0: BF800000
	.long 0xbf800000                                           // 00000006D6F4: BF800000
	.long 0xbf800000                                           // 00000006D6F8: BF800000
	.long 0xbf800000                                           // 00000006D6FC: BF800000

	.p2align	8
	.type	mul_get_group_id_get_num_groups,@function
	.size	mul_get_group_id_get_num_groups, mul_get_group_id_get_num_groups_symend-mul_get_group_id_get_num_groups
mul_get_group_id_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006D700: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006D70C: F4040180 F8000008
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006D714: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006D71C: D6100000 02292900
	s_clause 0x1                                               // 00000006D724: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006D728: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006D730: DC4A0026 08000002
	s_clause 0x2                                               // 00000006D738: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D73C: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006D744: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006D74C: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006D754: BF89FC07
	s_lshl_b32 s9, s2, 1                                       // 00000006D758: 84098102
	s_lshl_b32 s0, s3, 4                                       // 00000006D75C: 84008403
	s_mov_b32 s33, 0                                           // 00000006D760: BEA10080
	v_add3_u32 v1, s8, s9, v1                                  // 00000006D764: D6550001 04041208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006D76C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006D770: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006D778: D6550001 0414000A
	s_lshl_b32 s0, s4, 1                                       // 00000006D780: 84008104
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006D784: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v0                                  // 00000006D78C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006D794: BF870094
	v_add_co_u32 v3, s0, s6, v3                                // 00000006D798: D7000003 00020606
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 00000006D7A0: D5200004 00020807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006D7A8: BF870094
	v_add_co_u32 v5, s0, s6, v5                                // 00000006D7AC: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 00000006D7B4: D5200006 00020C07
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006D7BC: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006D7C4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006D7C8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006D7CC: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 00000006D7D0: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006D7D4: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006D7DC: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 00000006D7E0: 7C7A1280
	s_addc_u32 s1, s12, 0                                      // 00000006D7E4: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006D7E8: BF870009
	s_mul_i32 s1, s1, s2                                       // 00000006D7EC: 96010201
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006D7F0: BF07806A
	v_mov_b32_e32 v2, s1                                       // 00000006D7F4: 7E040201
	s_addc_u32 s1, s13, 0                                      // 00000006D7F8: 8201800D
	s_cmp_lg_u32 s0, 0                                         // 00000006D7FC: BF078000
	s_mul_i32 s0, s1, s3                                       // 00000006D800: 96000301
	s_addc_u32 s1, s14, 0                                      // 00000006D804: 8201800E
	v_mov_b32_e32 v7, s0                                       // 00000006D808: 7E0E0200
	s_mul_i32 s0, s1, s4                                       // 00000006D80C: 96000401
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006D810: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006D818: 40020207
	v_mov_b32_e32 v8, s0                                       // 00000006D81C: 7E100200
	s_clause 0x2                                               // 00000006D820: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006D824: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006D82C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006D834: DC6A0000 007C0800
	s_nop 0                                                    // 00000006D83C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D840: BFB60003
	s_endpgm                                                   // 00000006D844: BFB00000
mul_get_group_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006D848: BF800000
	.long 0xbf800000                                           // 00000006D84C: BF800000
	.long 0xbf800000                                           // 00000006D850: BF800000
	.long 0xbf800000                                           // 00000006D854: BF800000
	.long 0xbf800000                                           // 00000006D858: BF800000
	.long 0xbf800000                                           // 00000006D85C: BF800000
	.long 0xbf800000                                           // 00000006D860: BF800000
	.long 0xbf800000                                           // 00000006D864: BF800000
	.long 0xbf800000                                           // 00000006D868: BF800000
	.long 0xbf800000                                           // 00000006D86C: BF800000
	.long 0xbf800000                                           // 00000006D870: BF800000
	.long 0xbf800000                                           // 00000006D874: BF800000
	.long 0xbf800000                                           // 00000006D878: BF800000
	.long 0xbf800000                                           // 00000006D87C: BF800000
	.long 0xbf800000                                           // 00000006D880: BF800000
	.long 0xbf800000                                           // 00000006D884: BF800000
	.long 0xbf800000                                           // 00000006D888: BF800000
	.long 0xbf800000                                           // 00000006D88C: BF800000
	.long 0xbf800000                                           // 00000006D890: BF800000
	.long 0xbf800000                                           // 00000006D894: BF800000
	.long 0xbf800000                                           // 00000006D898: BF800000
	.long 0xbf800000                                           // 00000006D89C: BF800000
	.long 0xbf800000                                           // 00000006D8A0: BF800000
	.long 0xbf800000                                           // 00000006D8A4: BF800000
	.long 0xbf800000                                           // 00000006D8A8: BF800000
	.long 0xbf800000                                           // 00000006D8AC: BF800000
	.long 0xbf800000                                           // 00000006D8B0: BF800000
	.long 0xbf800000                                           // 00000006D8B4: BF800000
	.long 0xbf800000                                           // 00000006D8B8: BF800000
	.long 0xbf800000                                           // 00000006D8BC: BF800000
	.long 0xbf800000                                           // 00000006D8C0: BF800000
	.long 0xbf800000                                           // 00000006D8C4: BF800000
	.long 0xbf800000                                           // 00000006D8C8: BF800000
	.long 0xbf800000                                           // 00000006D8CC: BF800000
	.long 0xbf800000                                           // 00000006D8D0: BF800000
	.long 0xbf800000                                           // 00000006D8D4: BF800000
	.long 0xbf800000                                           // 00000006D8D8: BF800000
	.long 0xbf800000                                           // 00000006D8DC: BF800000
	.long 0xbf800000                                           // 00000006D8E0: BF800000
	.long 0xbf800000                                           // 00000006D8E4: BF800000
	.long 0xbf800000                                           // 00000006D8E8: BF800000
	.long 0xbf800000                                           // 00000006D8EC: BF800000
	.long 0xbf800000                                           // 00000006D8F0: BF800000
	.long 0xbf800000                                           // 00000006D8F4: BF800000
	.long 0xbf800000                                           // 00000006D8F8: BF800000
	.long 0xbf800000                                           // 00000006D8FC: BF800000

	.p2align	8
	.type	mul_get_local_size_get_num_groups,@function
	.size	mul_get_local_size_get_num_groups, mul_get_local_size_get_num_groups_symend-mul_get_local_size_get_num_groups
mul_get_local_size_get_num_groups:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006D900: F4080200 F8000010
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006D908: CA240080 020000FF 000003FF
	s_add_u32 s5, s0, 16                                       // 00000006D914: 80059000
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006D918: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006D920: D6100000 02292900
	s_clause 0x1                                               // 00000006D928: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006D92C: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006D934: DC4A0026 08000002
	s_waitcnt lgkmcnt(0)                                       // 00000006D93C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006D940: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006D944: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000006D948: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006D94C: 840E8204
	s_mov_b32 s33, 0                                           // 00000006D950: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006D954: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006D958: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006D95C: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006D960: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006D964: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006D968: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006D96C: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006D970: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006D974: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006D978: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006D97C: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006D980: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006D984: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006D988: 8205800B
	s_clause 0x2                                               // 00000006D98C: BF850002
	global_load_u16 v9, v2, s[6:7]                             // 00000006D990: DC4A0000 09060002
	global_load_u16 v10, v2, s[2:3]                            // 00000006D998: DC4A0000 0A020002
	global_load_u16 v11, v2, s[4:5]                            // 00000006D9A0: DC4A0000 0B040002
	s_clause 0x1                                               // 00000006D9A8: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006D9AC: F4080100 F8000038
	s_load_b64 s[2:3], s[0:1], 0x8                             // 00000006D9B4: F4040080 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006D9BC: BF89FC07
	s_load_b32 s5, s[0:1], 0x48                                // 00000006D9C0: F4000140 F8000048
	v_add3_u32 v1, s4, s12, v1                                 // 00000006D9C8: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006D9D0: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006D9D4: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 00000006D9DC: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006D9E4: D73C0005 00020282
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000006D9EC: BF870143
	v_add_co_u32 v3, s1, s2, v3                                // 00000006D9F0: D7000103 00020602
	s_waitcnt lgkmcnt(0)                                       // 00000006D9F8: BF89FC07
	v_add3_u32 v1, s5, s14, v0                                 // 00000006D9FC: D6550001 04001C05
	v_add_co_ci_u32_e64 v4, s1, s3, v4, s1                     // 00000006DA04: D5200104 00060803
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006DA0C: D73C0000 00020282
	s_waitcnt vmcnt(4)                                         // 00000006DA14: BF8913F7
	v_lshrrev_b32_e32 v12, 16, v7                              // 00000006DA18: 32180E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006DA1C: 7C7A0E80
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006DA20: BF870002
	v_cmp_ne_u16_e64 s0, 0, v12.l                              // 00000006DA24: D43D0000 00021880
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006DA2C: BF07806A
	s_waitcnt vmcnt(3)                                         // 00000006DA30: BF890FF7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006DA34: 7C7A1080
	s_addc_u32 s1, s8, 0                                       // 00000006DA38: 82018008
	s_cmp_lg_u32 s0, 0                                         // 00000006DA3C: BF078000
	s_addc_u32 s0, s9, 0                                       // 00000006DA40: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006DA44: BF07806A
	v_add_co_u32 v5, vcc_lo, s2, v5                            // 00000006DA48: D7006A05 00020A02
	s_addc_u32 s4, s10, 0                                      // 00000006DA50: 8204800A
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo             // 00000006DA54: 400C0C03
	v_add_co_u32 v0, vcc_lo, s2, v0                            // 00000006DA58: D7006A00 00020002
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo             // 00000006DA60: 40020203
	s_waitcnt vmcnt(2)                                         // 00000006DA64: BF890BF7
	v_mul_lo_u32 v2, s1, v9                                    // 00000006DA68: D72C0002 00021201
	s_waitcnt vmcnt(1)                                         // 00000006DA70: BF8907F7
	v_mul_lo_u32 v7, s0, v10                                   // 00000006DA74: D72C0007 00021400
	s_waitcnt vmcnt(0)                                         // 00000006DA7C: BF8903F7
	v_mul_lo_u32 v8, s4, v11                                   // 00000006DA80: D72C0008 00021604
	s_clause 0x2                                               // 00000006DA88: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006DA8C: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006DA94: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006DA9C: DC6A0000 007C0800
	s_nop 0                                                    // 00000006DAA4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006DAA8: BFB60003
	s_endpgm                                                   // 00000006DAAC: BFB00000
mul_get_local_size_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006DAB0: BF800000
	.long 0xbf800000                                           // 00000006DAB4: BF800000
	.long 0xbf800000                                           // 00000006DAB8: BF800000
	.long 0xbf800000                                           // 00000006DABC: BF800000
	.long 0xbf800000                                           // 00000006DAC0: BF800000
	.long 0xbf800000                                           // 00000006DAC4: BF800000
	.long 0xbf800000                                           // 00000006DAC8: BF800000
	.long 0xbf800000                                           // 00000006DACC: BF800000
	.long 0xbf800000                                           // 00000006DAD0: BF800000
	.long 0xbf800000                                           // 00000006DAD4: BF800000
	.long 0xbf800000                                           // 00000006DAD8: BF800000
	.long 0xbf800000                                           // 00000006DADC: BF800000
	.long 0xbf800000                                           // 00000006DAE0: BF800000
	.long 0xbf800000                                           // 00000006DAE4: BF800000
	.long 0xbf800000                                           // 00000006DAE8: BF800000
	.long 0xbf800000                                           // 00000006DAEC: BF800000
	.long 0xbf800000                                           // 00000006DAF0: BF800000
	.long 0xbf800000                                           // 00000006DAF4: BF800000
	.long 0xbf800000                                           // 00000006DAF8: BF800000
	.long 0xbf800000                                           // 00000006DAFC: BF800000

	.p2align	8
	.type	mul_get_global_id_get_num_groups,@function
	.size	mul_get_global_id_get_num_groups, mul_get_global_id_get_num_groups_symend-mul_get_global_id_get_num_groups
mul_get_global_id_get_num_groups:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006DB00: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006DB0C: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006DB14: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006DB1C: BEA10080
	s_clause 0x1                                               // 00000006DB20: BF850001
	global_load_b32 v7, v1, s[0:1] offset:34                   // 00000006DB24: DC520022 07000001
	global_load_u16 v11, v1, s[0:1] offset:38                  // 00000006DB2C: DC4A0026 0B000001
	s_clause 0x3                                               // 00000006DB34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006DB38: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006DB40: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006DB48: F4040180 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006DB50: F4080300 F8000010
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000006DB58: D6560000 04090202
	v_lshl_or_b32 v3, s3, 1, v3                                // 00000006DB60: D6560003 040D0203
	v_lshl_or_b32 v8, s4, 2, v4                                // 00000006DB68: D6560008 04110404
	v_mov_b32_e32 v2, v1                                       // 00000006DB70: 7E040301
	v_mov_b32_e32 v4, v1                                       // 00000006DB74: 7E080301
	v_lshlrev_b64 v[5:6], 2, v[0:1]                            // 00000006DB78: D73C0005 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006DB80: BF89FC07
	v_add_nc_u32_e32 v1, s10, v3                               // 00000006DB84: 4A02060A
	v_add_nc_u32_e32 v3, s5, v8                                // 00000006DB88: 4A061005
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006DB8C: BF870093
	v_add_co_u32 v5, s0, s6, v5                                // 00000006DB90: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 00000006DB98: D5200006 00020C07
	v_add_nc_u32_e32 v0, s8, v0                                // 00000006DBA0: 4A000008
	s_waitcnt vmcnt(1)                                         // 00000006DBA4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006DBA8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006DBAC: 7C7A0E80
	v_lshlrev_b64 v[7:8], 2, v[1:2]                            // 00000006DBB0: D73C0007 00020282
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006DBB8: BF870003
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 00000006DBBC: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006DBC4: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006DBC8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v11.l                          // 00000006DBCC: 7C7A1680
	s_addc_u32 s1, s12, 0                                      // 00000006DBD0: 8201800C
	v_lshlrev_b64 v[9:10], 2, v[3:4]                           // 00000006DBD4: D73C0009 00020682
	s_cmp_lg_u32 s0, 0                                         // 00000006DBDC: BF078000
	v_add_co_u32 v7, s0, s6, v7                                // 00000006DBE0: D7000007 00020E06
	s_delay_alu instid0(VALU_DEP_1)                            // 00000006DBE8: BF870001
	v_add_co_ci_u32_e64 v8, s0, s7, v8, s0                     // 00000006DBEC: D5200008 00021007
	s_addc_u32 s0, s13, 0                                      // 00000006DBF4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006DBF8: BF07806A
	v_mul_lo_u32 v2, s1, v0                                    // 00000006DBFC: D72C0002 00020001
	s_addc_u32 s1, s14, 0                                      // 00000006DC04: 8201800E
	v_mul_lo_u32 v4, s0, v1                                    // 00000006DC08: D72C0004 00020200
	v_mul_lo_u32 v3, s1, v3                                    // 00000006DC10: D72C0003 00020601
	v_add_co_u32 v0, vcc_lo, s6, v9                            // 00000006DC18: D7006A00 00021206
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v10, vcc_lo            // 00000006DC20: 40021407
	s_clause 0x2                                               // 00000006DC24: BF850002
	global_store_b32 v[5:6], v2, off                           // 00000006DC28: DC6A0000 007C0205
	global_store_b32 v[7:8], v4, off                           // 00000006DC30: DC6A0000 007C0407
	global_store_b32 v[0:1], v3, off                           // 00000006DC38: DC6A0000 007C0300
	s_nop 0                                                    // 00000006DC40: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006DC44: BFB60003
	s_endpgm                                                   // 00000006DC48: BFB00000
mul_get_global_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006DC4C: BF800000
	.long 0xbf800000                                           // 00000006DC50: BF800000
	.long 0xbf800000                                           // 00000006DC54: BF800000
	.long 0xbf800000                                           // 00000006DC58: BF800000
	.long 0xbf800000                                           // 00000006DC5C: BF800000
	.long 0xbf800000                                           // 00000006DC60: BF800000
	.long 0xbf800000                                           // 00000006DC64: BF800000
	.long 0xbf800000                                           // 00000006DC68: BF800000
	.long 0xbf800000                                           // 00000006DC6C: BF800000
	.long 0xbf800000                                           // 00000006DC70: BF800000
	.long 0xbf800000                                           // 00000006DC74: BF800000
	.long 0xbf800000                                           // 00000006DC78: BF800000
	.long 0xbf800000                                           // 00000006DC7C: BF800000
	.long 0xbf800000                                           // 00000006DC80: BF800000
	.long 0xbf800000                                           // 00000006DC84: BF800000
	.long 0xbf800000                                           // 00000006DC88: BF800000
	.long 0xbf800000                                           // 00000006DC8C: BF800000
	.long 0xbf800000                                           // 00000006DC90: BF800000
	.long 0xbf800000                                           // 00000006DC94: BF800000
	.long 0xbf800000                                           // 00000006DC98: BF800000
	.long 0xbf800000                                           // 00000006DC9C: BF800000
	.long 0xbf800000                                           // 00000006DCA0: BF800000
	.long 0xbf800000                                           // 00000006DCA4: BF800000
	.long 0xbf800000                                           // 00000006DCA8: BF800000
	.long 0xbf800000                                           // 00000006DCAC: BF800000
	.long 0xbf800000                                           // 00000006DCB0: BF800000
	.long 0xbf800000                                           // 00000006DCB4: BF800000
	.long 0xbf800000                                           // 00000006DCB8: BF800000
	.long 0xbf800000                                           // 00000006DCBC: BF800000
	.long 0xbf800000                                           // 00000006DCC0: BF800000
	.long 0xbf800000                                           // 00000006DCC4: BF800000
	.long 0xbf800000                                           // 00000006DCC8: BF800000
	.long 0xbf800000                                           // 00000006DCCC: BF800000
	.long 0xbf800000                                           // 00000006DCD0: BF800000
	.long 0xbf800000                                           // 00000006DCD4: BF800000
	.long 0xbf800000                                           // 00000006DCD8: BF800000
	.long 0xbf800000                                           // 00000006DCDC: BF800000
	.long 0xbf800000                                           // 00000006DCE0: BF800000
	.long 0xbf800000                                           // 00000006DCE4: BF800000
	.long 0xbf800000                                           // 00000006DCE8: BF800000
	.long 0xbf800000                                           // 00000006DCEC: BF800000
	.long 0xbf800000                                           // 00000006DCF0: BF800000
	.long 0xbf800000                                           // 00000006DCF4: BF800000
	.long 0xbf800000                                           // 00000006DCF8: BF800000
	.long 0xbf800000                                           // 00000006DCFC: BF800000

	.p2align	8
	.type	mul_get_global_size_get_num_groups,@function
	.size	mul_get_global_size_get_num_groups, mul_get_global_size_get_num_groups_symend-mul_get_global_size_get_num_groups
mul_get_global_size_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006DD00: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006DD0C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006DD14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006DD1C: BEA10080
	s_clause 0x1                                               // 00000006DD20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006DD24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006DD2C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006DD34: BF850003
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006DD38: F4080300 F8000038
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006DD40: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006DD48: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], null                            // 00000006DD50: F4040180 F8000000
	s_lshl_b32 s0, s2, 4                                       // 00000006DD58: 84008402
	s_lshl_b32 s1, s4, 1                                       // 00000006DD5C: 84018104
	s_waitcnt lgkmcnt(0)                                       // 00000006DD60: BF89FC07
	v_add3_u32 v1, s12, s0, v1                                 // 00000006DD64: D6550001 0404000C
	s_lshl_b32 s0, s3, 1                                       // 00000006DD6C: 84008103
	s_lshl_b32 s2, s8, 4                                       // 00000006DD70: 84028408
	s_lshl_b32 s3, s9, 1                                       // 00000006DD74: 84038109
	s_lshl_b32 s4, s10, 1                                      // 00000006DD78: 8404810A
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006DD7C: D73C0003 00020282
	v_add3_u32 v1, s14, s0, v5                                 // 00000006DD84: D6550001 0414000E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006DD8C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006DD90: D73C0005 00020282
	v_add3_u32 v1, s5, s1, v0                                  // 00000006DD98: D6550001 04000205
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000006DDA0: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000006DDA8: 40080807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006DDAC: BF870214
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 00000006DDB0: D7006A05 00020A06
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006DDB8: D73C0000 00020282
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 00000006DDC0: 400C0C07
	s_waitcnt vmcnt(1)                                         // 00000006DDC4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006DDC8: 32040E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006DDCC: 7C7A0E80
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006DDD0: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006DDD8: BF8903F7
	v_cmp_ne_u32_e64 s0, 0, v8                                 // 00000006DDDC: D44D0000 00021080
	v_add_nc_u32_e32 v8, s4, v8                                // 00000006DDE4: 4A101004
	v_cmp_ne_u16_e64 s1, 0, v2.l                               // 00000006DDE8: D43D0001 00020480
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006DDF0: BF07806A
	v_add_nc_u32_e32 v7, s2, v7                                // 00000006DDF4: 4A0E0E02
	s_addc_u32 s2, s8, 0                                       // 00000006DDF8: 82028008
	v_add_nc_u32_e32 v2, s3, v2                                // 00000006DDFC: 4A040403
	s_cmp_lg_u32 s1, 0                                         // 00000006DE00: BF078001
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006DE04: D7006A00 00020006
	s_addc_u32 s1, s9, 0                                       // 00000006DE0C: 82018009
	s_cmp_lg_u32 s0, 0                                         // 00000006DE10: BF078000
	v_mul_lo_u32 v7, s2, v7                                    // 00000006DE14: D72C0007 00020E02
	s_addc_u32 s0, s10, 0                                      // 00000006DE1C: 8200800A
	v_mul_lo_u32 v2, s1, v2                                    // 00000006DE20: D72C0002 00020401
	v_mul_lo_u32 v8, s0, v8                                    // 00000006DE28: D72C0008 00021000
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006DE30: 40020207
	s_clause 0x2                                               // 00000006DE34: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006DE38: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006DE40: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006DE48: DC6A0000 007C0800
	s_nop 0                                                    // 00000006DE50: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006DE54: BFB60003
	s_endpgm                                                   // 00000006DE58: BFB00000
mul_get_global_size_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006DE5C: BF800000
	.long 0xbf800000                                           // 00000006DE60: BF800000
	.long 0xbf800000                                           // 00000006DE64: BF800000
	.long 0xbf800000                                           // 00000006DE68: BF800000
	.long 0xbf800000                                           // 00000006DE6C: BF800000
	.long 0xbf800000                                           // 00000006DE70: BF800000
	.long 0xbf800000                                           // 00000006DE74: BF800000
	.long 0xbf800000                                           // 00000006DE78: BF800000
	.long 0xbf800000                                           // 00000006DE7C: BF800000
	.long 0xbf800000                                           // 00000006DE80: BF800000
	.long 0xbf800000                                           // 00000006DE84: BF800000
	.long 0xbf800000                                           // 00000006DE88: BF800000
	.long 0xbf800000                                           // 00000006DE8C: BF800000
	.long 0xbf800000                                           // 00000006DE90: BF800000
	.long 0xbf800000                                           // 00000006DE94: BF800000
	.long 0xbf800000                                           // 00000006DE98: BF800000
	.long 0xbf800000                                           // 00000006DE9C: BF800000
	.long 0xbf800000                                           // 00000006DEA0: BF800000
	.long 0xbf800000                                           // 00000006DEA4: BF800000
	.long 0xbf800000                                           // 00000006DEA8: BF800000
	.long 0xbf800000                                           // 00000006DEAC: BF800000
	.long 0xbf800000                                           // 00000006DEB0: BF800000
	.long 0xbf800000                                           // 00000006DEB4: BF800000
	.long 0xbf800000                                           // 00000006DEB8: BF800000
	.long 0xbf800000                                           // 00000006DEBC: BF800000
	.long 0xbf800000                                           // 00000006DEC0: BF800000
	.long 0xbf800000                                           // 00000006DEC4: BF800000
	.long 0xbf800000                                           // 00000006DEC8: BF800000
	.long 0xbf800000                                           // 00000006DECC: BF800000
	.long 0xbf800000                                           // 00000006DED0: BF800000
	.long 0xbf800000                                           // 00000006DED4: BF800000
	.long 0xbf800000                                           // 00000006DED8: BF800000
	.long 0xbf800000                                           // 00000006DEDC: BF800000
	.long 0xbf800000                                           // 00000006DEE0: BF800000
	.long 0xbf800000                                           // 00000006DEE4: BF800000
	.long 0xbf800000                                           // 00000006DEE8: BF800000
	.long 0xbf800000                                           // 00000006DEEC: BF800000
	.long 0xbf800000                                           // 00000006DEF0: BF800000
	.long 0xbf800000                                           // 00000006DEF4: BF800000
	.long 0xbf800000                                           // 00000006DEF8: BF800000
	.long 0xbf800000                                           // 00000006DEFC: BF800000

	.p2align	8
	.type	mul_get_num_groups_get_num_groups,@function
	.size	mul_get_num_groups_get_num_groups, mul_get_num_groups_get_num_groups_symend-mul_get_num_groups_get_num_groups
mul_get_num_groups_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006DF00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006DF0C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 00000006DF14: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006DF18: D6100005 02291500
	s_clause 0x1                                               // 00000006DF20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006DF24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006DF2C: DC4A0026 08000002
	s_clause 0x2                                               // 00000006DF34: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006DF38: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006DF40: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006DF48: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 00000006DF50: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006DF54: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006DF5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006DF60: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006DF64: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006DF6C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006DF70: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006DF78: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 00000006DF80: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006DF84: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v0                                  // 00000006DF8C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006DF94: BF870094
	v_add_co_u32 v3, s0, s6, v3                                // 00000006DF98: D7000003 00020606
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 00000006DFA0: D5200004 00020807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006DFA8: BF870094
	v_add_co_u32 v5, s0, s6, v5                                // 00000006DFAC: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 00000006DFB4: D5200006 00020C07
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006DFBC: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006DFC4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006DFC8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006DFCC: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 00000006DFD0: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006DFD4: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006DFDC: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 00000006DFE0: 7C7A1280
	s_addc_u32 s1, s12, 0                                      // 00000006DFE4: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006DFE8: BF870009
	s_mul_i32 s1, s1, s1                                       // 00000006DFEC: 96010101
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006DFF0: BF07806A
	v_mov_b32_e32 v2, s1                                       // 00000006DFF4: 7E040201
	s_addc_u32 s1, s13, 0                                      // 00000006DFF8: 8201800D
	s_cmp_lg_u32 s0, 0                                         // 00000006DFFC: BF078000
	s_mul_i32 s0, s1, s1                                       // 00000006E000: 96000101
	s_addc_u32 s1, s14, 0                                      // 00000006E004: 8201800E
	v_mov_b32_e32 v7, s0                                       // 00000006E008: 7E0E0200
	s_mul_i32 s0, s1, s1                                       // 00000006E00C: 96000101
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006E010: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006E018: 40020207
	v_mov_b32_e32 v8, s0                                       // 00000006E01C: 7E100200
	s_clause 0x2                                               // 00000006E020: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006E024: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006E02C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006E034: DC6A0000 007C0800
	s_nop 0                                                    // 00000006E03C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E040: BFB60003
	s_endpgm                                                   // 00000006E044: BFB00000
mul_get_num_groups_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006E048: BF800000
	.long 0xbf800000                                           // 00000006E04C: BF800000
	.long 0xbf800000                                           // 00000006E050: BF800000
	.long 0xbf800000                                           // 00000006E054: BF800000
	.long 0xbf800000                                           // 00000006E058: BF800000
	.long 0xbf800000                                           // 00000006E05C: BF800000
	.long 0xbf800000                                           // 00000006E060: BF800000
	.long 0xbf800000                                           // 00000006E064: BF800000
	.long 0xbf800000                                           // 00000006E068: BF800000
	.long 0xbf800000                                           // 00000006E06C: BF800000
	.long 0xbf800000                                           // 00000006E070: BF800000
	.long 0xbf800000                                           // 00000006E074: BF800000
	.long 0xbf800000                                           // 00000006E078: BF800000
	.long 0xbf800000                                           // 00000006E07C: BF800000
	.long 0xbf800000                                           // 00000006E080: BF800000
	.long 0xbf800000                                           // 00000006E084: BF800000
	.long 0xbf800000                                           // 00000006E088: BF800000
	.long 0xbf800000                                           // 00000006E08C: BF800000
	.long 0xbf800000                                           // 00000006E090: BF800000
	.long 0xbf800000                                           // 00000006E094: BF800000
	.long 0xbf800000                                           // 00000006E098: BF800000
	.long 0xbf800000                                           // 00000006E09C: BF800000
	.long 0xbf800000                                           // 00000006E0A0: BF800000
	.long 0xbf800000                                           // 00000006E0A4: BF800000
	.long 0xbf800000                                           // 00000006E0A8: BF800000
	.long 0xbf800000                                           // 00000006E0AC: BF800000
	.long 0xbf800000                                           // 00000006E0B0: BF800000
	.long 0xbf800000                                           // 00000006E0B4: BF800000
	.long 0xbf800000                                           // 00000006E0B8: BF800000
	.long 0xbf800000                                           // 00000006E0BC: BF800000
	.long 0xbf800000                                           // 00000006E0C0: BF800000
	.long 0xbf800000                                           // 00000006E0C4: BF800000
	.long 0xbf800000                                           // 00000006E0C8: BF800000
	.long 0xbf800000                                           // 00000006E0CC: BF800000
	.long 0xbf800000                                           // 00000006E0D0: BF800000
	.long 0xbf800000                                           // 00000006E0D4: BF800000
	.long 0xbf800000                                           // 00000006E0D8: BF800000
	.long 0xbf800000                                           // 00000006E0DC: BF800000
	.long 0xbf800000                                           // 00000006E0E0: BF800000
	.long 0xbf800000                                           // 00000006E0E4: BF800000
	.long 0xbf800000                                           // 00000006E0E8: BF800000
	.long 0xbf800000                                           // 00000006E0EC: BF800000
	.long 0xbf800000                                           // 00000006E0F0: BF800000
	.long 0xbf800000                                           // 00000006E0F4: BF800000
	.long 0xbf800000                                           // 00000006E0F8: BF800000
	.long 0xbf800000                                           // 00000006E0FC: BF800000

	.p2align	8
	.type	mul_get_work_dim_get_num_groups,@function
	.size	mul_get_work_dim_get_num_groups, mul_get_work_dim_get_num_groups_symend-mul_get_work_dim_get_num_groups
mul_get_work_dim_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006E100: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006E10C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 00000006E114: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006E118: D6100005 02291500
	s_clause 0x1                                               // 00000006E120: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006E124: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006E12C: DC4A0026 08000002
	s_clause 0x2                                               // 00000006E134: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000006E138: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E140: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006E148: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006E150: BF89FC07
	s_load_b32 s9, s[0:1], 0x48                                // 00000006E154: F4000240 F8000048
	s_lshl_b32 s0, s3, 1                                       // 00000006E15C: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E160: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006E168: BEA10080
	s_and_b32 s1, s5, 0xffff                                   // 00000006E16C: 8B01FF05 0000FFFF
	v_add3_u32 v1, s8, s2, v1                                  // 00000006E174: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006E17C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E180: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006E188: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 00000006E190: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E194: D73C0005 00020282
	s_waitcnt lgkmcnt(0)                                       // 00000006E19C: BF89FC07
	v_add3_u32 v1, s9, s0, v0                                  // 00000006E1A0: D6550001 04000009
	v_add_co_u32 v3, s0, s6, v3                                // 00000006E1A8: D7000003 00020606
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006E1B0: BF870211
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 00000006E1B4: D5200004 00020807
	v_add_co_u32 v5, s0, s6, v5                                // 00000006E1BC: D7000005 00020A06
	s_delay_alu instid0(VALU_DEP_1)                            // 00000006E1C4: BF870001
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 00000006E1C8: D5200006 00020C07
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E1D0: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006E1D8: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006E1DC: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006E1E0: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 00000006E1E4: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 00000006E1E8: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006E1F0: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 00000006E1F4: 7C7A1280
	s_addc_u32 s2, s12, 0                                      // 00000006E1F8: 8202800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006E1FC: BF870009
	s_mul_i32 s2, s2, s1                                       // 00000006E200: 96020102
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006E204: BF07806A
	v_mov_b32_e32 v2, s2                                       // 00000006E208: 7E040202
	s_addc_u32 s2, s13, 0                                      // 00000006E20C: 8202800D
	s_cmp_lg_u32 s0, 0                                         // 00000006E210: BF078000
	s_mul_i32 s0, s2, s1                                       // 00000006E214: 96000102
	s_addc_u32 s2, s14, 0                                      // 00000006E218: 8202800E
	v_mov_b32_e32 v7, s0                                       // 00000006E21C: 7E0E0200
	s_mul_i32 s0, s2, s1                                       // 00000006E220: 96000102
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006E224: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006E22C: 40020207
	v_mov_b32_e32 v8, s0                                       // 00000006E230: 7E100200
	s_clause 0x2                                               // 00000006E234: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006E238: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006E240: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006E248: DC6A0000 007C0800
	s_nop 0                                                    // 00000006E250: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E254: BFB60003
	s_endpgm                                                   // 00000006E258: BFB00000
mul_get_work_dim_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006E25C: BF800000
	.long 0xbf800000                                           // 00000006E260: BF800000
	.long 0xbf800000                                           // 00000006E264: BF800000
	.long 0xbf800000                                           // 00000006E268: BF800000
	.long 0xbf800000                                           // 00000006E26C: BF800000
	.long 0xbf800000                                           // 00000006E270: BF800000
	.long 0xbf800000                                           // 00000006E274: BF800000
	.long 0xbf800000                                           // 00000006E278: BF800000
	.long 0xbf800000                                           // 00000006E27C: BF800000
	.long 0xbf800000                                           // 00000006E280: BF800000
	.long 0xbf800000                                           // 00000006E284: BF800000
	.long 0xbf800000                                           // 00000006E288: BF800000
	.long 0xbf800000                                           // 00000006E28C: BF800000
	.long 0xbf800000                                           // 00000006E290: BF800000
	.long 0xbf800000                                           // 00000006E294: BF800000
	.long 0xbf800000                                           // 00000006E298: BF800000
	.long 0xbf800000                                           // 00000006E29C: BF800000
	.long 0xbf800000                                           // 00000006E2A0: BF800000
	.long 0xbf800000                                           // 00000006E2A4: BF800000
	.long 0xbf800000                                           // 00000006E2A8: BF800000
	.long 0xbf800000                                           // 00000006E2AC: BF800000
	.long 0xbf800000                                           // 00000006E2B0: BF800000
	.long 0xbf800000                                           // 00000006E2B4: BF800000
	.long 0xbf800000                                           // 00000006E2B8: BF800000
	.long 0xbf800000                                           // 00000006E2BC: BF800000
	.long 0xbf800000                                           // 00000006E2C0: BF800000
	.long 0xbf800000                                           // 00000006E2C4: BF800000
	.long 0xbf800000                                           // 00000006E2C8: BF800000
	.long 0xbf800000                                           // 00000006E2CC: BF800000
	.long 0xbf800000                                           // 00000006E2D0: BF800000
	.long 0xbf800000                                           // 00000006E2D4: BF800000
	.long 0xbf800000                                           // 00000006E2D8: BF800000
	.long 0xbf800000                                           // 00000006E2DC: BF800000
	.long 0xbf800000                                           // 00000006E2E0: BF800000
	.long 0xbf800000                                           // 00000006E2E4: BF800000
	.long 0xbf800000                                           // 00000006E2E8: BF800000
	.long 0xbf800000                                           // 00000006E2EC: BF800000
	.long 0xbf800000                                           // 00000006E2F0: BF800000
	.long 0xbf800000                                           // 00000006E2F4: BF800000
	.long 0xbf800000                                           // 00000006E2F8: BF800000
	.long 0xbf800000                                           // 00000006E2FC: BF800000

	.p2align	8
	.type	mul_x_get_work_dim,@function
	.size	mul_x_get_work_dim, mul_x_get_work_dim_symend-mul_x_get_work_dim
mul_x_get_work_dim:
	s_clause 0x4                                               // 00000006E300: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 00000006E304: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E30C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x8                                 // 00000006E314: F4000180 F8000008
	s_load_b32 s7, s[0:1], 0x48                                // 00000006E31C: F40001C0 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006E324: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006E32C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000006E338: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006E33C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E344: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006E34C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006E350: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006E354: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006E35C: 84028103
	s_and_b32 s3, s5, 0xffff                                   // 00000006E360: 8B03FF05 0000FFFF
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 00000006E368: BF870151
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E36C: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006E374: D6550001 0414040A
	s_mul_i32 s2, s3, s6                                       // 00000006E37C: 96020603
	s_lshl_b32 s3, s4, 1                                       // 00000006E380: 84038104
	v_mov_b32_e32 v7, s2                                       // 00000006E384: 7E0E0202
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E388: D73C0005 00020282
	v_add3_u32 v1, s7, s3, v0                                  // 00000006E390: D6550001 04000607
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006E398: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006E3A0: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006E3A4: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E3A8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006E3B0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006E3B8: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006E3BC: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006E3C4: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006E3C8: 40020201
	s_clause 0x2                                               // 00000006E3CC: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006E3D0: DC6A0000 007C0703
	global_store_b32 v[5:6], v7, off                           // 00000006E3D8: DC6A0000 007C0705
	global_store_b32 v[0:1], v7, off                           // 00000006E3E0: DC6A0000 007C0700
	s_nop 0                                                    // 00000006E3E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E3EC: BFB60003
	s_endpgm                                                   // 00000006E3F0: BFB00000
mul_x_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006E3F4: BF800000
	.long 0xbf800000                                           // 00000006E3F8: BF800000
	.long 0xbf800000                                           // 00000006E3FC: BF800000

	.p2align	8
	.type	mul_get_global_offset_get_work_dim,@function
	.size	mul_get_global_offset_get_work_dim, mul_get_global_offset_get_work_dim_symend-mul_get_global_offset_get_work_dim
mul_get_global_offset_get_work_dim:
	s_clause 0x3                                               // 00000006E400: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E404: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000006E40C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 00000006E414: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006E41C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006E424: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006E430: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006E434: D6100005 02291500
	s_lshl_b32 s3, s3, 4                                       // 00000006E43C: 84038403
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E440: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 00000006E448: 84048104
	s_mov_b32 s33, 0                                           // 00000006E44C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006E450: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006E454: D6550001 04040408
	s_and_b32 s2, s5, 0xffff                                   // 00000006E45C: 8B02FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006E464: BF870099
	s_mul_i32 s5, s2, s8                                       // 00000006E468: 96050802
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E46C: D73C0003 00020282
	v_add3_u32 v1, s10, s3, v5                                 // 00000006E474: D6550001 0414060A
	s_mul_i32 s3, s2, s10                                      // 00000006E47C: 96030A02
	s_mul_i32 s2, s2, s6                                       // 00000006E480: 96020602
	v_dual_mov_b32 v7, s5 :: v_dual_mov_b32 v8, s3             // 00000006E484: CA100005 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006E48C: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E490: D73C0005 00020282
	v_add3_u32 v1, s6, s4, v0                                  // 00000006E498: D6550001 04000806
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006E4A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006E4A8: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E4AC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006E4B4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006E4BC: 400C0C01
	v_mov_b32_e32 v2, s2                                       // 00000006E4C0: 7E040202
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006E4C4: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006E4C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006E4D0: 40020201
	s_clause 0x2                                               // 00000006E4D4: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006E4D8: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006E4E0: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006E4E8: DC6A0000 007C0200
	s_nop 0                                                    // 00000006E4F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E4F4: BFB60003
	s_endpgm                                                   // 00000006E4F8: BFB00000
mul_get_global_offset_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006E4FC: BF800000

	.p2align	8
	.type	mul_get_local_id_get_work_dim,@function
	.size	mul_get_local_id_get_work_dim, mul_get_local_id_get_work_dim_symend-mul_get_local_id_get_work_dim
mul_get_local_id_get_work_dim:
	s_clause 0x3                                               // 00000006E500: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E504: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000006E50C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 00000006E514: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006E51C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000006E524: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000006E530: 84028302
	v_bfe_u32 v6, v0, 10, 10                                   // 00000006E534: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E53C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006E544: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006E548: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000006E54C: D6550001 04140408
	s_lshl_b32 s2, s3, 2                                       // 00000006E554: 84028203
	s_and_b32 s3, s5, 0xffff                                   // 00000006E558: 8B03FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006E560: BF870119
	v_mul_u32_u24_e32 v7, s3, v5                               // 00000006E564: 160E0A03
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E568: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 00000006E570: D6550001 0418040A
	s_lshl_b32 s2, s4, 1                                       // 00000006E578: 84028104
	v_mul_u32_u24_e32 v8, s3, v6                               // 00000006E57C: 16100C03
	v_mul_u32_u24_e32 v9, s3, v0                               // 00000006E580: 16120003
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006E584: BF8701C3
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E588: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 00000006E590: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006E598: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006E5A0: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E5A4: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006E5AC: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006E5B4: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006E5B8: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006E5BC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006E5C4: 40020201
	s_clause 0x2                                               // 00000006E5C8: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006E5CC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006E5D4: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 00000006E5DC: DC6A0000 007C0900
	s_nop 0                                                    // 00000006E5E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E5E8: BFB60003
	s_endpgm                                                   // 00000006E5EC: BFB00000
mul_get_local_id_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006E5F0: BF800000
	.long 0xbf800000                                           // 00000006E5F4: BF800000
	.long 0xbf800000                                           // 00000006E5F8: BF800000
	.long 0xbf800000                                           // 00000006E5FC: BF800000

	.p2align	8
	.type	mul_get_group_id_get_work_dim,@function
	.size	mul_get_group_id_get_work_dim, mul_get_group_id_get_work_dim_symend-mul_get_group_id_get_work_dim
mul_get_group_id_get_work_dim:
	s_clause 0x3                                               // 00000006E600: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000006E60C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 00000006E614: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006E61C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006E624: CA240080 020000FF 000003FF
	s_lshl_b32 s7, s2, 1                                       // 00000006E630: 84078102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006E634: D6100005 02291500
	s_waitcnt lgkmcnt(0)                                       // 00000006E63C: BF89FC07
	s_lshl_b32 s9, s3, 4                                       // 00000006E640: 84098403
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E644: D6100000 02292900
	s_lshl_b32 s11, s4, 1                                      // 00000006E64C: 840B8104
	s_mov_b32 s33, 0                                           // 00000006E650: BEA10080
	v_add3_u32 v1, s8, s7, v1                                  // 00000006E654: D6550001 04040E08
	s_and_b32 s5, s5, 0xffff                                   // 00000006E65C: 8B05FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006E664: BF8700A9
	s_mul_i32 s2, s2, s5                                       // 00000006E668: 96020502
	s_mul_i32 s3, s3, s5                                       // 00000006E66C: 96030503
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E670: D73C0003 00020282
	v_add3_u32 v1, s10, s9, v5                                 // 00000006E678: D6550001 0414120A
	s_mul_i32 s4, s4, s5                                       // 00000006E680: 96040504
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 00000006E684: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006E68C: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E690: D73C0005 00020282
	v_add3_u32 v1, s6, s11, v0                                 // 00000006E698: D6550001 04001606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006E6A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006E6A8: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E6AC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006E6B4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006E6BC: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 00000006E6C0: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006E6C4: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006E6C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006E6D0: 40020201
	s_clause 0x2                                               // 00000006E6D4: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006E6D8: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006E6E0: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006E6E8: DC6A0000 007C0200
	s_nop 0                                                    // 00000006E6F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E6F4: BFB60003
	s_endpgm                                                   // 00000006E6F8: BFB00000
mul_get_group_id_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006E6FC: BF800000

	.p2align	8
	.type	mul_get_local_size_get_work_dim,@function
	.size	mul_get_local_size_get_work_dim, mul_get_local_size_get_work_dim_symend-mul_get_local_size_get_work_dim
mul_get_local_size_get_work_dim:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006E700: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006E708: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006E70C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006E710: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006E714: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000006E718: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006E71C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006E720: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006E72C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E734: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006E73C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006E740: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006E744: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000006E748: BF8704D9
	s_add_u32 s6, s5, s2                                       // 00000006E74C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006E750: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006E754: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 00000006E758: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 00000006E760: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006E764: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006E768: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006E76C: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006E770: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006E774: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006E778: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006E77C: 8205800B
	s_clause 0x1                                               // 00000006E780: BF850001
	global_load_u16 v8, v2, s[2:3]                             // 00000006E784: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006E78C: DC4A0000 09040002
	s_clause 0x3                                               // 00000006E794: BF850003
	s_load_b32 s2, s[0:1], 0x50                                // 00000006E798: F4000080 F8000050
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006E7A0: F4080100 F8000038
	s_load_b32 s3, s[0:1], 0x48                                // 00000006E7A8: F40000C0 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006E7B0: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006E7B8: BF89FC07
	s_and_b32 s2, s2, 0xffff                                   // 00000006E7BC: 8B02FF02 0000FFFF
	v_add3_u32 v1, s4, s12, v1                                 // 00000006E7C4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006E7CC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E7D0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 00000006E7D8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E7E0: D73C0005 00020282
	v_add3_u32 v1, s3, s14, v0                                 // 00000006E7E8: D6550001 04001C03
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006E7F0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006E7F4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006E7FC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E800: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006E808: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006E810: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006E814: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006E818: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006E820: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006E824: BF890BF7
	v_mul_lo_u32 v2, s2, v7                                    // 00000006E828: D72C0002 00020E02
	s_waitcnt vmcnt(1)                                         // 00000006E830: BF8907F7
	v_mul_lo_u32 v7, s2, v8                                    // 00000006E834: D72C0007 00021002
	s_waitcnt vmcnt(0)                                         // 00000006E83C: BF8903F7
	v_mul_lo_u32 v8, s2, v9                                    // 00000006E840: D72C0008 00021202
	s_clause 0x2                                               // 00000006E848: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006E84C: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006E854: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006E85C: DC6A0000 007C0800
	s_nop 0                                                    // 00000006E864: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E868: BFB60003
	s_endpgm                                                   // 00000006E86C: BFB00000
mul_get_local_size_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006E870: BF800000
	.long 0xbf800000                                           // 00000006E874: BF800000
	.long 0xbf800000                                           // 00000006E878: BF800000
	.long 0xbf800000                                           // 00000006E87C: BF800000
	.long 0xbf800000                                           // 00000006E880: BF800000
	.long 0xbf800000                                           // 00000006E884: BF800000
	.long 0xbf800000                                           // 00000006E888: BF800000
	.long 0xbf800000                                           // 00000006E88C: BF800000
	.long 0xbf800000                                           // 00000006E890: BF800000
	.long 0xbf800000                                           // 00000006E894: BF800000
	.long 0xbf800000                                           // 00000006E898: BF800000
	.long 0xbf800000                                           // 00000006E89C: BF800000
	.long 0xbf800000                                           // 00000006E8A0: BF800000
	.long 0xbf800000                                           // 00000006E8A4: BF800000
	.long 0xbf800000                                           // 00000006E8A8: BF800000
	.long 0xbf800000                                           // 00000006E8AC: BF800000
	.long 0xbf800000                                           // 00000006E8B0: BF800000
	.long 0xbf800000                                           // 00000006E8B4: BF800000
	.long 0xbf800000                                           // 00000006E8B8: BF800000
	.long 0xbf800000                                           // 00000006E8BC: BF800000
	.long 0xbf800000                                           // 00000006E8C0: BF800000
	.long 0xbf800000                                           // 00000006E8C4: BF800000
	.long 0xbf800000                                           // 00000006E8C8: BF800000
	.long 0xbf800000                                           // 00000006E8CC: BF800000
	.long 0xbf800000                                           // 00000006E8D0: BF800000
	.long 0xbf800000                                           // 00000006E8D4: BF800000
	.long 0xbf800000                                           // 00000006E8D8: BF800000
	.long 0xbf800000                                           // 00000006E8DC: BF800000
	.long 0xbf800000                                           // 00000006E8E0: BF800000
	.long 0xbf800000                                           // 00000006E8E4: BF800000
	.long 0xbf800000                                           // 00000006E8E8: BF800000
	.long 0xbf800000                                           // 00000006E8EC: BF800000
	.long 0xbf800000                                           // 00000006E8F0: BF800000
	.long 0xbf800000                                           // 00000006E8F4: BF800000
	.long 0xbf800000                                           // 00000006E8F8: BF800000
	.long 0xbf800000                                           // 00000006E8FC: BF800000

	.p2align	8
	.type	mul_get_global_id_get_work_dim,@function
	.size	mul_get_global_id_get_work_dim, mul_get_global_id_get_work_dim_symend-mul_get_global_id_get_work_dim
mul_get_global_id_get_work_dim:
	s_clause 0x3                                               // 00000006E900: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E904: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006E90C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x50                                // 00000006E914: F4000180 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006E91C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006E924: D6100002 02291500
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000006E92C: 360600FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006E934: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006E93C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 00000006E940: BF8701D3
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006E944: D6560002 04090203
	v_mov_b32_e32 v1, 0                                        // 00000006E94C: 7E020280
	v_lshl_or_b32 v0, s2, 1, v3                                // 00000006E950: D6560000 040D0202
	v_lshl_or_b32 v4, s4, 2, v4                                // 00000006E958: D6560004 04110404
	s_waitcnt lgkmcnt(0)                                       // 00000006E960: BF89FC07
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s10, v2     // 00000006E964: CA200101 0302040A
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 00000006E96C: BF870233
	v_add_nc_u32_e32 v8, s8, v0                                // 00000006E970: 4A100008
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006E974: D73C0006 00020082
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v4, s5, v4      // 00000006E97C: CA200101 05040805
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006E984: D73C0000 00020482
	s_and_b32 s2, s6, 0xffff                                   // 00000006E98C: 8B02FF06 0000FFFF
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006E994: BF870003
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 00000006E998: D7006A06 00020C00
	v_mul_lo_u32 v9, s2, v2                                    // 00000006E9A0: D72C0009 00020402
	v_lshlrev_b64 v[2:3], 2, v[4:5]                            // 00000006E9A8: D73C0002 00020882
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 00000006E9B0: 400E0E01
	v_mul_lo_u32 v8, v8, s2                                    // 00000006E9B4: D72C0008 00000508
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006E9BC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006E9C4: 40020201
	v_mul_lo_u32 v4, s2, v4                                    // 00000006E9C8: D72C0004 00020802
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006E9D0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006E9D8: 40060601
	s_clause 0x2                                               // 00000006E9DC: BF850002
	global_store_b32 v[6:7], v8, off                           // 00000006E9E0: DC6A0000 007C0806
	global_store_b32 v[0:1], v9, off                           // 00000006E9E8: DC6A0000 007C0900
	global_store_b32 v[2:3], v4, off                           // 00000006E9F0: DC6A0000 007C0402
	s_nop 0                                                    // 00000006E9F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E9FC: BFB60003
	s_endpgm                                                   // 00000006EA00: BFB00000
mul_get_global_id_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006EA04: BF800000
	.long 0xbf800000                                           // 00000006EA08: BF800000
	.long 0xbf800000                                           // 00000006EA0C: BF800000
	.long 0xbf800000                                           // 00000006EA10: BF800000
	.long 0xbf800000                                           // 00000006EA14: BF800000
	.long 0xbf800000                                           // 00000006EA18: BF800000
	.long 0xbf800000                                           // 00000006EA1C: BF800000
	.long 0xbf800000                                           // 00000006EA20: BF800000
	.long 0xbf800000                                           // 00000006EA24: BF800000
	.long 0xbf800000                                           // 00000006EA28: BF800000
	.long 0xbf800000                                           // 00000006EA2C: BF800000
	.long 0xbf800000                                           // 00000006EA30: BF800000
	.long 0xbf800000                                           // 00000006EA34: BF800000
	.long 0xbf800000                                           // 00000006EA38: BF800000
	.long 0xbf800000                                           // 00000006EA3C: BF800000
	.long 0xbf800000                                           // 00000006EA40: BF800000
	.long 0xbf800000                                           // 00000006EA44: BF800000
	.long 0xbf800000                                           // 00000006EA48: BF800000
	.long 0xbf800000                                           // 00000006EA4C: BF800000
	.long 0xbf800000                                           // 00000006EA50: BF800000
	.long 0xbf800000                                           // 00000006EA54: BF800000
	.long 0xbf800000                                           // 00000006EA58: BF800000
	.long 0xbf800000                                           // 00000006EA5C: BF800000
	.long 0xbf800000                                           // 00000006EA60: BF800000
	.long 0xbf800000                                           // 00000006EA64: BF800000
	.long 0xbf800000                                           // 00000006EA68: BF800000
	.long 0xbf800000                                           // 00000006EA6C: BF800000
	.long 0xbf800000                                           // 00000006EA70: BF800000
	.long 0xbf800000                                           // 00000006EA74: BF800000
	.long 0xbf800000                                           // 00000006EA78: BF800000
	.long 0xbf800000                                           // 00000006EA7C: BF800000
	.long 0xbf800000                                           // 00000006EA80: BF800000
	.long 0xbf800000                                           // 00000006EA84: BF800000
	.long 0xbf800000                                           // 00000006EA88: BF800000
	.long 0xbf800000                                           // 00000006EA8C: BF800000
	.long 0xbf800000                                           // 00000006EA90: BF800000
	.long 0xbf800000                                           // 00000006EA94: BF800000
	.long 0xbf800000                                           // 00000006EA98: BF800000
	.long 0xbf800000                                           // 00000006EA9C: BF800000
	.long 0xbf800000                                           // 00000006EAA0: BF800000
	.long 0xbf800000                                           // 00000006EAA4: BF800000
	.long 0xbf800000                                           // 00000006EAA8: BF800000
	.long 0xbf800000                                           // 00000006EAAC: BF800000
	.long 0xbf800000                                           // 00000006EAB0: BF800000
	.long 0xbf800000                                           // 00000006EAB4: BF800000
	.long 0xbf800000                                           // 00000006EAB8: BF800000
	.long 0xbf800000                                           // 00000006EABC: BF800000
	.long 0xbf800000                                           // 00000006EAC0: BF800000
	.long 0xbf800000                                           // 00000006EAC4: BF800000
	.long 0xbf800000                                           // 00000006EAC8: BF800000
	.long 0xbf800000                                           // 00000006EACC: BF800000
	.long 0xbf800000                                           // 00000006EAD0: BF800000
	.long 0xbf800000                                           // 00000006EAD4: BF800000
	.long 0xbf800000                                           // 00000006EAD8: BF800000
	.long 0xbf800000                                           // 00000006EADC: BF800000
	.long 0xbf800000                                           // 00000006EAE0: BF800000
	.long 0xbf800000                                           // 00000006EAE4: BF800000
	.long 0xbf800000                                           // 00000006EAE8: BF800000
	.long 0xbf800000                                           // 00000006EAEC: BF800000
	.long 0xbf800000                                           // 00000006EAF0: BF800000
	.long 0xbf800000                                           // 00000006EAF4: BF800000
	.long 0xbf800000                                           // 00000006EAF8: BF800000
	.long 0xbf800000                                           // 00000006EAFC: BF800000

	.p2align	8
	.type	mul_get_global_size_get_work_dim,@function
	.size	mul_get_global_size_get_work_dim, mul_get_global_size_get_work_dim_symend-mul_get_global_size_get_work_dim
mul_get_global_size_get_work_dim:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006EB00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000006EB0C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006EB10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006EB18: D6100000 02292900
	s_clause 0x1                                               // 00000006EB20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006EB24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006EB2C: DC4A0026 08000002
	s_clause 0x4                                               // 00000006EB34: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 00000006EB38: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006EB40: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006EB48: F4080300 F8000010
	s_load_b32 s6, s[0:1], 0x48                                // 00000006EB50: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006EB58: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 00000006EB60: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006EB64: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 00000006EB68: 8B05FF05 0000FFFF
	v_add3_u32 v1, s8, s2, v1                                  // 00000006EB70: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006EB78: 84028103
	s_lshl_b32 s3, s4, 1                                       // 00000006EB7C: 84038104
	s_lshl_b32 s4, s13, 1                                      // 00000006EB80: 8404810D
	s_lshl_b32 s7, s14, 1                                      // 00000006EB84: 8407810E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006EB88: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006EB90: D6550001 0414040A
	s_lshl_b32 s2, s12, 4                                      // 00000006EB98: 8402840C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006EB9C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006EBA0: D73C0005 00020282
	v_add3_u32 v1, s6, s3, v0                                  // 00000006EBA8: D6550001 04000606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006EBB0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006EBB8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006EBBC: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006EBC0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006EBC8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006EBD0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006EBD4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006EBDC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006EBE0: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006EBE4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006EBE8: 32120E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006EBEC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006EBF4: BF8903F7
	v_add_nc_u32_e32 v2, s7, v8                                // 00000006EBF8: 4A041007
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006EBFC: BF870193
	v_add_nc_u32_e32 v8, s4, v9                                // 00000006EC00: 4A101204
	v_add_nc_u32_e32 v7, s2, v7                                // 00000006EC04: 4A0E0E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006EC08: BF870193
	v_mul_lo_u32 v2, v2, s5                                    // 00000006EC0C: D72C0002 00000B02
	v_mul_lo_u32 v8, v8, s5                                    // 00000006EC14: D72C0008 00000B08
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006EC1C: BF870003
	v_mul_lo_u32 v7, v7, s5                                    // 00000006EC20: D72C0007 00000B07
	s_clause 0x2                                               // 00000006EC28: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006EC2C: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006EC34: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006EC3C: DC6A0000 007C0200
	s_nop 0                                                    // 00000006EC44: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006EC48: BFB60003
	s_endpgm                                                   // 00000006EC4C: BFB00000
mul_get_global_size_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006EC50: BF800000
	.long 0xbf800000                                           // 00000006EC54: BF800000
	.long 0xbf800000                                           // 00000006EC58: BF800000
	.long 0xbf800000                                           // 00000006EC5C: BF800000
	.long 0xbf800000                                           // 00000006EC60: BF800000
	.long 0xbf800000                                           // 00000006EC64: BF800000
	.long 0xbf800000                                           // 00000006EC68: BF800000
	.long 0xbf800000                                           // 00000006EC6C: BF800000
	.long 0xbf800000                                           // 00000006EC70: BF800000
	.long 0xbf800000                                           // 00000006EC74: BF800000
	.long 0xbf800000                                           // 00000006EC78: BF800000
	.long 0xbf800000                                           // 00000006EC7C: BF800000
	.long 0xbf800000                                           // 00000006EC80: BF800000
	.long 0xbf800000                                           // 00000006EC84: BF800000
	.long 0xbf800000                                           // 00000006EC88: BF800000
	.long 0xbf800000                                           // 00000006EC8C: BF800000
	.long 0xbf800000                                           // 00000006EC90: BF800000
	.long 0xbf800000                                           // 00000006EC94: BF800000
	.long 0xbf800000                                           // 00000006EC98: BF800000
	.long 0xbf800000                                           // 00000006EC9C: BF800000
	.long 0xbf800000                                           // 00000006ECA0: BF800000
	.long 0xbf800000                                           // 00000006ECA4: BF800000
	.long 0xbf800000                                           // 00000006ECA8: BF800000
	.long 0xbf800000                                           // 00000006ECAC: BF800000
	.long 0xbf800000                                           // 00000006ECB0: BF800000
	.long 0xbf800000                                           // 00000006ECB4: BF800000
	.long 0xbf800000                                           // 00000006ECB8: BF800000
	.long 0xbf800000                                           // 00000006ECBC: BF800000
	.long 0xbf800000                                           // 00000006ECC0: BF800000
	.long 0xbf800000                                           // 00000006ECC4: BF800000
	.long 0xbf800000                                           // 00000006ECC8: BF800000
	.long 0xbf800000                                           // 00000006ECCC: BF800000
	.long 0xbf800000                                           // 00000006ECD0: BF800000
	.long 0xbf800000                                           // 00000006ECD4: BF800000
	.long 0xbf800000                                           // 00000006ECD8: BF800000
	.long 0xbf800000                                           // 00000006ECDC: BF800000
	.long 0xbf800000                                           // 00000006ECE0: BF800000
	.long 0xbf800000                                           // 00000006ECE4: BF800000
	.long 0xbf800000                                           // 00000006ECE8: BF800000
	.long 0xbf800000                                           // 00000006ECEC: BF800000
	.long 0xbf800000                                           // 00000006ECF0: BF800000
	.long 0xbf800000                                           // 00000006ECF4: BF800000
	.long 0xbf800000                                           // 00000006ECF8: BF800000
	.long 0xbf800000                                           // 00000006ECFC: BF800000

	.p2align	8
	.type	mul_get_num_groups_get_work_dim,@function
	.size	mul_get_num_groups_get_work_dim, mul_get_num_groups_get_work_dim_symend-mul_get_num_groups_get_work_dim
mul_get_num_groups_get_work_dim:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006ED00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006ED0C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 00000006ED14: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006ED18: D6100005 02291500
	s_clause 0x1                                               // 00000006ED20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006ED24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006ED2C: DC4A0026 08000002
	s_clause 0x2                                               // 00000006ED34: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000006ED38: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006ED40: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006ED48: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006ED50: BF89FC07
	s_load_b32 s9, s[0:1], 0x48                                // 00000006ED54: F4000240 F8000048
	s_lshl_b32 s0, s3, 1                                       // 00000006ED5C: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006ED60: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006ED68: BEA10080
	v_add3_u32 v1, s8, s2, v1                                  // 00000006ED6C: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006ED74: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006ED78: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006ED80: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 00000006ED88: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006ED8C: D73C0005 00020282
	s_waitcnt lgkmcnt(0)                                       // 00000006ED94: BF89FC07
	v_add3_u32 v1, s9, s0, v0                                  // 00000006ED98: D6550001 04000009
	v_add_co_u32 v3, s1, s6, v3                                // 00000006EDA0: D7000103 00020606
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006EDA8: BF870191
	v_add_co_ci_u32_e64 v4, s1, s7, v4, s1                     // 00000006EDAC: D5200104 00060807
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006EDB4: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006EDBC: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006EDC0: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006EDC4: 7C7A0E80
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006EDC8: BF870002
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 00000006EDCC: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006EDD4: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006EDD8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006EDDC: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 00000006EDE0: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 00000006EDE4: BF078000
	s_addc_u32 s0, s13, 0                                      // 00000006EDE8: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006EDEC: BF07806A
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 00000006EDF0: D7006A05 00020A06
	s_addc_u32 s2, s14, 0                                      // 00000006EDF8: 8202800E
	s_and_b32 s3, s5, 0xffff                                   // 00000006EDFC: 8B03FF05 0000FFFF
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 00000006EE04: 400C0C07
	s_mul_i32 s1, s1, s3                                       // 00000006EE08: 96010301
	s_mul_i32 s0, s0, s3                                       // 00000006EE0C: 96000300
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006EE10: D7006A00 00020006
	s_mul_i32 s2, s2, s3                                       // 00000006EE18: 96020302
	v_dual_mov_b32 v2, s1 :: v_dual_mov_b32 v7, s0             // 00000006EE1C: CA100001 02060000
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006EE24: 40020207
	v_mov_b32_e32 v8, s2                                       // 00000006EE28: 7E100202
	s_clause 0x2                                               // 00000006EE2C: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006EE30: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006EE38: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006EE40: DC6A0000 007C0800
	s_nop 0                                                    // 00000006EE48: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006EE4C: BFB60003
	s_endpgm                                                   // 00000006EE50: BFB00000
mul_get_num_groups_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006EE54: BF800000
	.long 0xbf800000                                           // 00000006EE58: BF800000
	.long 0xbf800000                                           // 00000006EE5C: BF800000
	.long 0xbf800000                                           // 00000006EE60: BF800000
	.long 0xbf800000                                           // 00000006EE64: BF800000
	.long 0xbf800000                                           // 00000006EE68: BF800000
	.long 0xbf800000                                           // 00000006EE6C: BF800000
	.long 0xbf800000                                           // 00000006EE70: BF800000
	.long 0xbf800000                                           // 00000006EE74: BF800000
	.long 0xbf800000                                           // 00000006EE78: BF800000
	.long 0xbf800000                                           // 00000006EE7C: BF800000
	.long 0xbf800000                                           // 00000006EE80: BF800000
	.long 0xbf800000                                           // 00000006EE84: BF800000
	.long 0xbf800000                                           // 00000006EE88: BF800000
	.long 0xbf800000                                           // 00000006EE8C: BF800000
	.long 0xbf800000                                           // 00000006EE90: BF800000
	.long 0xbf800000                                           // 00000006EE94: BF800000
	.long 0xbf800000                                           // 00000006EE98: BF800000
	.long 0xbf800000                                           // 00000006EE9C: BF800000
	.long 0xbf800000                                           // 00000006EEA0: BF800000
	.long 0xbf800000                                           // 00000006EEA4: BF800000
	.long 0xbf800000                                           // 00000006EEA8: BF800000
	.long 0xbf800000                                           // 00000006EEAC: BF800000
	.long 0xbf800000                                           // 00000006EEB0: BF800000
	.long 0xbf800000                                           // 00000006EEB4: BF800000
	.long 0xbf800000                                           // 00000006EEB8: BF800000
	.long 0xbf800000                                           // 00000006EEBC: BF800000
	.long 0xbf800000                                           // 00000006EEC0: BF800000
	.long 0xbf800000                                           // 00000006EEC4: BF800000
	.long 0xbf800000                                           // 00000006EEC8: BF800000
	.long 0xbf800000                                           // 00000006EECC: BF800000
	.long 0xbf800000                                           // 00000006EED0: BF800000
	.long 0xbf800000                                           // 00000006EED4: BF800000
	.long 0xbf800000                                           // 00000006EED8: BF800000
	.long 0xbf800000                                           // 00000006EEDC: BF800000
	.long 0xbf800000                                           // 00000006EEE0: BF800000
	.long 0xbf800000                                           // 00000006EEE4: BF800000
	.long 0xbf800000                                           // 00000006EEE8: BF800000
	.long 0xbf800000                                           // 00000006EEEC: BF800000
	.long 0xbf800000                                           // 00000006EEF0: BF800000
	.long 0xbf800000                                           // 00000006EEF4: BF800000
	.long 0xbf800000                                           // 00000006EEF8: BF800000
	.long 0xbf800000                                           // 00000006EEFC: BF800000

	.p2align	8
	.type	mul_get_work_dim_get_work_dim,@function
	.size	mul_get_work_dim_get_work_dim, mul_get_work_dim_get_work_dim_symend-mul_get_work_dim_get_work_dim
mul_get_work_dim_get_work_dim:
	s_clause 0x3                                               // 00000006EF00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006EF04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000006EF0C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 00000006EF14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006EF1C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006EF24: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006EF30: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006EF34: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006EF3C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006EF44: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006EF48: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006EF4C: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006EF54: 84028103
	s_and_b32 s3, s5, 0xffff                                   // 00000006EF58: 8B03FF05 0000FFFF
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 00000006EF60: BF870151
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006EF64: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006EF6C: D6550001 0414040A
	s_mul_i32 s2, s3, s3                                       // 00000006EF74: 96020303
	s_lshl_b32 s3, s4, 2                                       // 00000006EF78: 84038204
	v_mov_b32_e32 v7, s2                                       // 00000006EF7C: 7E0E0202
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006EF80: D73C0005 00020282
	v_add3_u32 v1, s6, s3, v0                                  // 00000006EF88: D6550001 04000606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006EF90: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006EF98: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006EF9C: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006EFA0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006EFA8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006EFB0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006EFB4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006EFBC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006EFC0: 40020201
	s_clause 0x2                                               // 00000006EFC4: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006EFC8: DC6A0000 007C0703
	global_store_b32 v[5:6], v7, off                           // 00000006EFD0: DC6A0000 007C0705
	global_store_b32 v[0:1], v7, off                           // 00000006EFD8: DC6A0000 007C0700
	s_nop 0                                                    // 00000006EFE0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006EFE4: BFB60003
	s_endpgm                                                   // 00000006EFE8: BFB00000
mul_get_work_dim_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006EFEC: BF800000
	.long 0xbf800000                                           // 00000006EFF0: BF800000
	.long 0xbf800000                                           // 00000006EFF4: BF800000
	.long 0xbf800000                                           // 00000006EFF8: BF800000
	.long 0xbf800000                                           // 00000006EFFC: BF800000

	.p2align	8
	.type	mul_x_64,@function
	.size	mul_x_64, mul_x_64_symend-mul_x_64
mul_x_64:
	s_clause 0x2                                               // 00000006F000: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 00000006F004: F40000C0 F8000038
	s_load_b32 s4, s[0:1], null                                // 00000006F00C: F4000100 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F014: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 00000006F01C: 84028602
	s_mov_b32 s33, 0                                           // 00000006F020: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F024: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 00000006F028: D6550000 04000403
	s_mul_i32 s2, s4, s4                                       // 00000006F030: 96020404
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F034: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 00000006F038: CA100080 01020002
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F040: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006F048: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F04C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F054: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000006F058: DC6A0000 007C0200
	s_nop 0                                                    // 00000006F060: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F064: BFB60003
	s_endpgm                                                   // 00000006F068: BFB00000
mul_x_64_symend:
	.long 0xbf800000                                           // 00000006F06C: BF800000
	.long 0xbf800000                                           // 00000006F070: BF800000
	.long 0xbf800000                                           // 00000006F074: BF800000
	.long 0xbf800000                                           // 00000006F078: BF800000
	.long 0xbf800000                                           // 00000006F07C: BF800000
	.long 0xbf800000                                           // 00000006F080: BF800000
	.long 0xbf800000                                           // 00000006F084: BF800000
	.long 0xbf800000                                           // 00000006F088: BF800000
	.long 0xbf800000                                           // 00000006F08C: BF800000
	.long 0xbf800000                                           // 00000006F090: BF800000
	.long 0xbf800000                                           // 00000006F094: BF800000
	.long 0xbf800000                                           // 00000006F098: BF800000
	.long 0xbf800000                                           // 00000006F09C: BF800000
	.long 0xbf800000                                           // 00000006F0A0: BF800000
	.long 0xbf800000                                           // 00000006F0A4: BF800000
	.long 0xbf800000                                           // 00000006F0A8: BF800000
	.long 0xbf800000                                           // 00000006F0AC: BF800000
	.long 0xbf800000                                           // 00000006F0B0: BF800000
	.long 0xbf800000                                           // 00000006F0B4: BF800000
	.long 0xbf800000                                           // 00000006F0B8: BF800000
	.long 0xbf800000                                           // 00000006F0BC: BF800000
	.long 0xbf800000                                           // 00000006F0C0: BF800000
	.long 0xbf800000                                           // 00000006F0C4: BF800000
	.long 0xbf800000                                           // 00000006F0C8: BF800000
	.long 0xbf800000                                           // 00000006F0CC: BF800000
	.long 0xbf800000                                           // 00000006F0D0: BF800000
	.long 0xbf800000                                           // 00000006F0D4: BF800000
	.long 0xbf800000                                           // 00000006F0D8: BF800000
	.long 0xbf800000                                           // 00000006F0DC: BF800000
	.long 0xbf800000                                           // 00000006F0E0: BF800000
	.long 0xbf800000                                           // 00000006F0E4: BF800000
	.long 0xbf800000                                           // 00000006F0E8: BF800000
	.long 0xbf800000                                           // 00000006F0EC: BF800000
	.long 0xbf800000                                           // 00000006F0F0: BF800000
	.long 0xbf800000                                           // 00000006F0F4: BF800000
	.long 0xbf800000                                           // 00000006F0F8: BF800000
	.long 0xbf800000                                           // 00000006F0FC: BF800000

	.p2align	8
	.type	mul_get_global_offset_64,@function
	.size	mul_get_global_offset_64, mul_get_global_offset_64_symend-mul_get_global_offset_64
mul_get_global_offset_64:
	s_clause 0x1                                               // 00000006F100: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000006F104: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F10C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 00000006F114: 84028602
	s_mov_b32 s33, 0                                           // 00000006F118: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F11C: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 00000006F120: D6550000 04000403
	s_mul_i32 s2, s3, s3                                       // 00000006F128: 96020303
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F12C: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 00000006F130: CA100080 01020002
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F138: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006F140: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F144: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F14C: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000006F150: DC6A0000 007C0200
	s_nop 0                                                    // 00000006F158: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F15C: BFB60003
	s_endpgm                                                   // 00000006F160: BFB00000
mul_get_global_offset_64_symend:
	.long 0xbf800000                                           // 00000006F164: BF800000
	.long 0xbf800000                                           // 00000006F168: BF800000
	.long 0xbf800000                                           // 00000006F16C: BF800000
	.long 0xbf800000                                           // 00000006F170: BF800000
	.long 0xbf800000                                           // 00000006F174: BF800000
	.long 0xbf800000                                           // 00000006F178: BF800000
	.long 0xbf800000                                           // 00000006F17C: BF800000
	.long 0xbf800000                                           // 00000006F180: BF800000
	.long 0xbf800000                                           // 00000006F184: BF800000
	.long 0xbf800000                                           // 00000006F188: BF800000
	.long 0xbf800000                                           // 00000006F18C: BF800000
	.long 0xbf800000                                           // 00000006F190: BF800000
	.long 0xbf800000                                           // 00000006F194: BF800000
	.long 0xbf800000                                           // 00000006F198: BF800000
	.long 0xbf800000                                           // 00000006F19C: BF800000
	.long 0xbf800000                                           // 00000006F1A0: BF800000
	.long 0xbf800000                                           // 00000006F1A4: BF800000
	.long 0xbf800000                                           // 00000006F1A8: BF800000
	.long 0xbf800000                                           // 00000006F1AC: BF800000
	.long 0xbf800000                                           // 00000006F1B0: BF800000
	.long 0xbf800000                                           // 00000006F1B4: BF800000
	.long 0xbf800000                                           // 00000006F1B8: BF800000
	.long 0xbf800000                                           // 00000006F1BC: BF800000
	.long 0xbf800000                                           // 00000006F1C0: BF800000
	.long 0xbf800000                                           // 00000006F1C4: BF800000
	.long 0xbf800000                                           // 00000006F1C8: BF800000
	.long 0xbf800000                                           // 00000006F1CC: BF800000
	.long 0xbf800000                                           // 00000006F1D0: BF800000
	.long 0xbf800000                                           // 00000006F1D4: BF800000
	.long 0xbf800000                                           // 00000006F1D8: BF800000
	.long 0xbf800000                                           // 00000006F1DC: BF800000
	.long 0xbf800000                                           // 00000006F1E0: BF800000
	.long 0xbf800000                                           // 00000006F1E4: BF800000
	.long 0xbf800000                                           // 00000006F1E8: BF800000
	.long 0xbf800000                                           // 00000006F1EC: BF800000
	.long 0xbf800000                                           // 00000006F1F0: BF800000
	.long 0xbf800000                                           // 00000006F1F4: BF800000
	.long 0xbf800000                                           // 00000006F1F8: BF800000
	.long 0xbf800000                                           // 00000006F1FC: BF800000

	.p2align	8
	.type	mul_get_local_id_64,@function
	.size	mul_get_local_id_64, mul_get_local_id_64_symend-mul_get_local_id_64
mul_get_local_id_64:
	s_clause 0x1                                               // 00000006F200: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000006F204: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F20C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 00000006F214: 84028602
	v_mov_b32_e32 v2, 0                                        // 00000006F218: 7E040280
	v_mul_u32_u24_e32 v3, v0, v0                               // 00000006F21C: 16060100
	s_mov_b32 s33, 0                                           // 00000006F220: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F224: BF89FC07
	v_add3_u32 v1, s3, s2, v0                                  // 00000006F228: D6550001 04000403
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F230: BF870091
	v_lshlrev_b64 v[1:2], 2, v[1:2]                            // 00000006F234: D73C0001 00020282
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000006F23C: D7006A00 00020200
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006F244: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 00000006F248: 40020401
	global_store_b32 v[0:1], v3, off                           // 00000006F24C: DC6A0000 007C0300
	s_nop 0                                                    // 00000006F254: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F258: BFB60003
	s_endpgm                                                   // 00000006F25C: BFB00000
mul_get_local_id_64_symend:
	.long 0xbf800000                                           // 00000006F260: BF800000
	.long 0xbf800000                                           // 00000006F264: BF800000
	.long 0xbf800000                                           // 00000006F268: BF800000
	.long 0xbf800000                                           // 00000006F26C: BF800000
	.long 0xbf800000                                           // 00000006F270: BF800000
	.long 0xbf800000                                           // 00000006F274: BF800000
	.long 0xbf800000                                           // 00000006F278: BF800000
	.long 0xbf800000                                           // 00000006F27C: BF800000
	.long 0xbf800000                                           // 00000006F280: BF800000
	.long 0xbf800000                                           // 00000006F284: BF800000
	.long 0xbf800000                                           // 00000006F288: BF800000
	.long 0xbf800000                                           // 00000006F28C: BF800000
	.long 0xbf800000                                           // 00000006F290: BF800000
	.long 0xbf800000                                           // 00000006F294: BF800000
	.long 0xbf800000                                           // 00000006F298: BF800000
	.long 0xbf800000                                           // 00000006F29C: BF800000
	.long 0xbf800000                                           // 00000006F2A0: BF800000
	.long 0xbf800000                                           // 00000006F2A4: BF800000
	.long 0xbf800000                                           // 00000006F2A8: BF800000
	.long 0xbf800000                                           // 00000006F2AC: BF800000
	.long 0xbf800000                                           // 00000006F2B0: BF800000
	.long 0xbf800000                                           // 00000006F2B4: BF800000
	.long 0xbf800000                                           // 00000006F2B8: BF800000
	.long 0xbf800000                                           // 00000006F2BC: BF800000
	.long 0xbf800000                                           // 00000006F2C0: BF800000
	.long 0xbf800000                                           // 00000006F2C4: BF800000
	.long 0xbf800000                                           // 00000006F2C8: BF800000
	.long 0xbf800000                                           // 00000006F2CC: BF800000
	.long 0xbf800000                                           // 00000006F2D0: BF800000
	.long 0xbf800000                                           // 00000006F2D4: BF800000
	.long 0xbf800000                                           // 00000006F2D8: BF800000
	.long 0xbf800000                                           // 00000006F2DC: BF800000
	.long 0xbf800000                                           // 00000006F2E0: BF800000
	.long 0xbf800000                                           // 00000006F2E4: BF800000
	.long 0xbf800000                                           // 00000006F2E8: BF800000
	.long 0xbf800000                                           // 00000006F2EC: BF800000
	.long 0xbf800000                                           // 00000006F2F0: BF800000
	.long 0xbf800000                                           // 00000006F2F4: BF800000
	.long 0xbf800000                                           // 00000006F2F8: BF800000
	.long 0xbf800000                                           // 00000006F2FC: BF800000

	.p2align	8
	.type	mul_get_group_id_64,@function
	.size	mul_get_group_id_64, mul_get_group_id_64_symend-mul_get_group_id_64
mul_get_group_id_64:
	s_clause 0x1                                               // 00000006F300: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000006F304: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F30C: F4040000 F8000008
	s_lshl_b32 s4, s2, 6                                       // 00000006F314: 84048602
	s_mul_i32 s2, s2, s2                                       // 00000006F318: 96020202
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006F31C: BF8700C9
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 00000006F320: CA100080 01020002
	s_mov_b32 s33, 0                                           // 00000006F328: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F32C: BF89FC07
	v_add3_u32 v0, s3, s4, v0                                  // 00000006F330: D6550000 04000803
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F338: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006F340: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F344: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F34C: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000006F350: DC6A0000 007C0200
	s_nop 0                                                    // 00000006F358: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F35C: BFB60003
	s_endpgm                                                   // 00000006F360: BFB00000
mul_get_group_id_64_symend:
	.long 0xbf800000                                           // 00000006F364: BF800000
	.long 0xbf800000                                           // 00000006F368: BF800000
	.long 0xbf800000                                           // 00000006F36C: BF800000
	.long 0xbf800000                                           // 00000006F370: BF800000
	.long 0xbf800000                                           // 00000006F374: BF800000
	.long 0xbf800000                                           // 00000006F378: BF800000
	.long 0xbf800000                                           // 00000006F37C: BF800000
	.long 0xbf800000                                           // 00000006F380: BF800000
	.long 0xbf800000                                           // 00000006F384: BF800000
	.long 0xbf800000                                           // 00000006F388: BF800000
	.long 0xbf800000                                           // 00000006F38C: BF800000
	.long 0xbf800000                                           // 00000006F390: BF800000
	.long 0xbf800000                                           // 00000006F394: BF800000
	.long 0xbf800000                                           // 00000006F398: BF800000
	.long 0xbf800000                                           // 00000006F39C: BF800000
	.long 0xbf800000                                           // 00000006F3A0: BF800000
	.long 0xbf800000                                           // 00000006F3A4: BF800000
	.long 0xbf800000                                           // 00000006F3A8: BF800000
	.long 0xbf800000                                           // 00000006F3AC: BF800000
	.long 0xbf800000                                           // 00000006F3B0: BF800000
	.long 0xbf800000                                           // 00000006F3B4: BF800000
	.long 0xbf800000                                           // 00000006F3B8: BF800000
	.long 0xbf800000                                           // 00000006F3BC: BF800000
	.long 0xbf800000                                           // 00000006F3C0: BF800000
	.long 0xbf800000                                           // 00000006F3C4: BF800000
	.long 0xbf800000                                           // 00000006F3C8: BF800000
	.long 0xbf800000                                           // 00000006F3CC: BF800000
	.long 0xbf800000                                           // 00000006F3D0: BF800000
	.long 0xbf800000                                           // 00000006F3D4: BF800000
	.long 0xbf800000                                           // 00000006F3D8: BF800000
	.long 0xbf800000                                           // 00000006F3DC: BF800000
	.long 0xbf800000                                           // 00000006F3E0: BF800000
	.long 0xbf800000                                           // 00000006F3E4: BF800000
	.long 0xbf800000                                           // 00000006F3E8: BF800000
	.long 0xbf800000                                           // 00000006F3EC: BF800000
	.long 0xbf800000                                           // 00000006F3F0: BF800000
	.long 0xbf800000                                           // 00000006F3F4: BF800000
	.long 0xbf800000                                           // 00000006F3F8: BF800000
	.long 0xbf800000                                           // 00000006F3FC: BF800000

	.p2align	8
	.type	mul_get_local_size_64,@function
	.size	mul_get_local_size_64, mul_get_local_size_64_symend-mul_get_local_size_64
mul_get_local_size_64:
	s_clause 0x1                                               // 00000006F400: BF850001
	s_load_b32 s3, s[0:1], 0x10                                // 00000006F404: F40000C0 F8000010
	s_load_b32 s5, s[0:1], 0x38                                // 00000006F40C: F4000140 F8000038
	s_add_u32 s4, s0, 16                                       // 00000006F414: 80049000
	s_addc_u32 s6, s1, 0                                       // 00000006F418: 82068001
	s_lshl_b32 s7, s2, 6                                       // 00000006F41C: 84078602
	v_mov_b32_e32 v1, 0                                        // 00000006F420: 7E020280
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F424: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000006F42C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F430: BF89FC07
	s_cmp_lt_u32 s2, s3                                        // 00000006F434: BF0A0302
	v_add3_u32 v0, s5, s7, v0                                  // 00000006F438: D6550000 04000E05
	s_cselect_b32 s2, 12, 18                                   // 00000006F440: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006F444: BF8700C9
	s_add_u32 s2, s4, s2                                       // 00000006F448: 80020204
	s_addc_u32 s3, s6, 0                                       // 00000006F44C: 82038006
	global_load_u16 v2, v1, s[2:3]                             // 00000006F450: DC4A0000 02020001
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F458: D73C0000 00020082
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F460: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006F468: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F46C: 40020201
	s_waitcnt vmcnt(0)                                         // 00000006F470: BF8903F7
	v_mul_lo_u32 v2, v2, v2                                    // 00000006F474: D72C0002 00020502
	global_store_b32 v[0:1], v2, off                           // 00000006F47C: DC6A0000 007C0200
	s_nop 0                                                    // 00000006F484: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F488: BFB60003
	s_endpgm                                                   // 00000006F48C: BFB00000
mul_get_local_size_64_symend:
	.long 0xbf800000                                           // 00000006F490: BF800000
	.long 0xbf800000                                           // 00000006F494: BF800000
	.long 0xbf800000                                           // 00000006F498: BF800000
	.long 0xbf800000                                           // 00000006F49C: BF800000
	.long 0xbf800000                                           // 00000006F4A0: BF800000
	.long 0xbf800000                                           // 00000006F4A4: BF800000
	.long 0xbf800000                                           // 00000006F4A8: BF800000
	.long 0xbf800000                                           // 00000006F4AC: BF800000
	.long 0xbf800000                                           // 00000006F4B0: BF800000
	.long 0xbf800000                                           // 00000006F4B4: BF800000
	.long 0xbf800000                                           // 00000006F4B8: BF800000
	.long 0xbf800000                                           // 00000006F4BC: BF800000
	.long 0xbf800000                                           // 00000006F4C0: BF800000
	.long 0xbf800000                                           // 00000006F4C4: BF800000
	.long 0xbf800000                                           // 00000006F4C8: BF800000
	.long 0xbf800000                                           // 00000006F4CC: BF800000
	.long 0xbf800000                                           // 00000006F4D0: BF800000
	.long 0xbf800000                                           // 00000006F4D4: BF800000
	.long 0xbf800000                                           // 00000006F4D8: BF800000
	.long 0xbf800000                                           // 00000006F4DC: BF800000
	.long 0xbf800000                                           // 00000006F4E0: BF800000
	.long 0xbf800000                                           // 00000006F4E4: BF800000
	.long 0xbf800000                                           // 00000006F4E8: BF800000
	.long 0xbf800000                                           // 00000006F4EC: BF800000
	.long 0xbf800000                                           // 00000006F4F0: BF800000
	.long 0xbf800000                                           // 00000006F4F4: BF800000
	.long 0xbf800000                                           // 00000006F4F8: BF800000
	.long 0xbf800000                                           // 00000006F4FC: BF800000

	.p2align	8
	.type	mul_get_global_id_64,@function
	.size	mul_get_global_id_64, mul_get_global_id_64_symend-mul_get_global_id_64
mul_get_global_id_64:
	s_clause 0x1                                               // 00000006F500: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000006F504: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F50C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000006F514: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000006F51C: 7E020280
	s_mov_b32 s33, 0                                           // 00000006F520: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F524: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F528: BF870092
	v_add_nc_u32_e32 v0, s3, v0                                // 00000006F52C: 4A000003
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 00000006F530: D73C0001 00020082
	v_mul_lo_u32 v3, v0, v0                                    // 00000006F538: D72C0003 00020100
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006F540: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000006F544: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 00000006F54C: 40020401
	global_store_b32 v[0:1], v3, off                           // 00000006F550: DC6A0000 007C0300
	s_nop 0                                                    // 00000006F558: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F55C: BFB60003
	s_endpgm                                                   // 00000006F560: BFB00000
mul_get_global_id_64_symend:
	.long 0xbf800000                                           // 00000006F564: BF800000
	.long 0xbf800000                                           // 00000006F568: BF800000
	.long 0xbf800000                                           // 00000006F56C: BF800000
	.long 0xbf800000                                           // 00000006F570: BF800000
	.long 0xbf800000                                           // 00000006F574: BF800000
	.long 0xbf800000                                           // 00000006F578: BF800000
	.long 0xbf800000                                           // 00000006F57C: BF800000
	.long 0xbf800000                                           // 00000006F580: BF800000
	.long 0xbf800000                                           // 00000006F584: BF800000
	.long 0xbf800000                                           // 00000006F588: BF800000
	.long 0xbf800000                                           // 00000006F58C: BF800000
	.long 0xbf800000                                           // 00000006F590: BF800000
	.long 0xbf800000                                           // 00000006F594: BF800000
	.long 0xbf800000                                           // 00000006F598: BF800000
	.long 0xbf800000                                           // 00000006F59C: BF800000
	.long 0xbf800000                                           // 00000006F5A0: BF800000
	.long 0xbf800000                                           // 00000006F5A4: BF800000
	.long 0xbf800000                                           // 00000006F5A8: BF800000
	.long 0xbf800000                                           // 00000006F5AC: BF800000
	.long 0xbf800000                                           // 00000006F5B0: BF800000
	.long 0xbf800000                                           // 00000006F5B4: BF800000
	.long 0xbf800000                                           // 00000006F5B8: BF800000
	.long 0xbf800000                                           // 00000006F5BC: BF800000
	.long 0xbf800000                                           // 00000006F5C0: BF800000
	.long 0xbf800000                                           // 00000006F5C4: BF800000
	.long 0xbf800000                                           // 00000006F5C8: BF800000
	.long 0xbf800000                                           // 00000006F5CC: BF800000
	.long 0xbf800000                                           // 00000006F5D0: BF800000
	.long 0xbf800000                                           // 00000006F5D4: BF800000
	.long 0xbf800000                                           // 00000006F5D8: BF800000
	.long 0xbf800000                                           // 00000006F5DC: BF800000
	.long 0xbf800000                                           // 00000006F5E0: BF800000
	.long 0xbf800000                                           // 00000006F5E4: BF800000
	.long 0xbf800000                                           // 00000006F5E8: BF800000
	.long 0xbf800000                                           // 00000006F5EC: BF800000
	.long 0xbf800000                                           // 00000006F5F0: BF800000
	.long 0xbf800000                                           // 00000006F5F4: BF800000
	.long 0xbf800000                                           // 00000006F5F8: BF800000
	.long 0xbf800000                                           // 00000006F5FC: BF800000

	.p2align	8
	.type	mul_get_global_size_64,@function
	.size	mul_get_global_size_64, mul_get_global_size_64_symend-mul_get_global_size_64
mul_get_global_size_64:
	s_clause 0x3                                               // 00000006F600: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 00000006F604: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x10                                // 00000006F60C: F4000100 F8000010
	s_load_b32 s5, s[0:1], 0x20                                // 00000006F614: F4000140 F8000020
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F61C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 00000006F624: 84028602
	s_mov_b32 s33, 0                                           // 00000006F628: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F62C: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 00000006F630: D6550000 04000403
	s_lshl_b32 s2, s4, 6                                       // 00000006F638: 84028604
	s_lshr_b32 s3, s5, 16                                      // 00000006F63C: 85039005
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 00000006F640: BF870499
	s_add_i32 s2, s2, s3                                       // 00000006F644: 81020302
	s_mul_i32 s2, s2, s2                                       // 00000006F648: 96020202
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F64C: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 00000006F650: CA100080 01020002
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F658: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006F660: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F664: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F66C: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000006F670: DC6A0000 007C0200
	s_nop 0                                                    // 00000006F678: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F67C: BFB60003
	s_endpgm                                                   // 00000006F680: BFB00000
mul_get_global_size_64_symend:
	.long 0xbf800000                                           // 00000006F684: BF800000
	.long 0xbf800000                                           // 00000006F688: BF800000
	.long 0xbf800000                                           // 00000006F68C: BF800000
	.long 0xbf800000                                           // 00000006F690: BF800000
	.long 0xbf800000                                           // 00000006F694: BF800000
	.long 0xbf800000                                           // 00000006F698: BF800000
	.long 0xbf800000                                           // 00000006F69C: BF800000
	.long 0xbf800000                                           // 00000006F6A0: BF800000
	.long 0xbf800000                                           // 00000006F6A4: BF800000
	.long 0xbf800000                                           // 00000006F6A8: BF800000
	.long 0xbf800000                                           // 00000006F6AC: BF800000
	.long 0xbf800000                                           // 00000006F6B0: BF800000
	.long 0xbf800000                                           // 00000006F6B4: BF800000
	.long 0xbf800000                                           // 00000006F6B8: BF800000
	.long 0xbf800000                                           // 00000006F6BC: BF800000
	.long 0xbf800000                                           // 00000006F6C0: BF800000
	.long 0xbf800000                                           // 00000006F6C4: BF800000
	.long 0xbf800000                                           // 00000006F6C8: BF800000
	.long 0xbf800000                                           // 00000006F6CC: BF800000
	.long 0xbf800000                                           // 00000006F6D0: BF800000
	.long 0xbf800000                                           // 00000006F6D4: BF800000
	.long 0xbf800000                                           // 00000006F6D8: BF800000
	.long 0xbf800000                                           // 00000006F6DC: BF800000
	.long 0xbf800000                                           // 00000006F6E0: BF800000
	.long 0xbf800000                                           // 00000006F6E4: BF800000
	.long 0xbf800000                                           // 00000006F6E8: BF800000
	.long 0xbf800000                                           // 00000006F6EC: BF800000
	.long 0xbf800000                                           // 00000006F6F0: BF800000
	.long 0xbf800000                                           // 00000006F6F4: BF800000
	.long 0xbf800000                                           // 00000006F6F8: BF800000
	.long 0xbf800000                                           // 00000006F6FC: BF800000

	.p2align	8
	.type	mul_get_num_groups_64,@function
	.size	mul_get_num_groups_64, mul_get_num_groups_64_symend-mul_get_num_groups_64
mul_get_num_groups_64:
	s_clause 0x3                                               // 00000006F700: BF850003
	s_load_b32 s3, s[0:1], 0x20                                // 00000006F704: F40000C0 F8000020
	s_load_b32 s4, s[0:1], 0x38                                // 00000006F70C: F4000100 F8000038
	s_load_b32 s5, s[0:1], 0x10                                // 00000006F714: F4000140 F8000010
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F71C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 00000006F724: 84028602
	s_mov_b32 s33, 0                                           // 00000006F728: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F72C: BF89FC07
	s_lshr_b32 s3, s3, 16                                      // 00000006F730: 85039003
	v_add3_u32 v0, s4, s2, v0                                  // 00000006F734: D6550000 04000404
	v_cmp_ne_u16_e64 s2, s3, 0                                 // 00000006F73C: D43D0002 00010003
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000006F744: BF8704A1
	s_cmp_lg_u32 s2, 0                                         // 00000006F748: BF078002
	s_addc_u32 s2, s5, 0                                       // 00000006F74C: 82028005
	s_mul_i32 s2, s2, s2                                       // 00000006F750: 96020202
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F754: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 00000006F758: CA100080 01020002
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F760: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006F768: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F76C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F774: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000006F778: DC6A0000 007C0200
	s_nop 0                                                    // 00000006F780: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F784: BFB60003
	s_endpgm                                                   // 00000006F788: BFB00000
mul_get_num_groups_64_symend:
	.long 0xbf800000                                           // 00000006F78C: BF800000
	.long 0xbf800000                                           // 00000006F790: BF800000
	.long 0xbf800000                                           // 00000006F794: BF800000
	.long 0xbf800000                                           // 00000006F798: BF800000
	.long 0xbf800000                                           // 00000006F79C: BF800000
	.long 0xbf800000                                           // 00000006F7A0: BF800000
	.long 0xbf800000                                           // 00000006F7A4: BF800000
	.long 0xbf800000                                           // 00000006F7A8: BF800000
	.long 0xbf800000                                           // 00000006F7AC: BF800000
	.long 0xbf800000                                           // 00000006F7B0: BF800000
	.long 0xbf800000                                           // 00000006F7B4: BF800000
	.long 0xbf800000                                           // 00000006F7B8: BF800000
	.long 0xbf800000                                           // 00000006F7BC: BF800000
	.long 0xbf800000                                           // 00000006F7C0: BF800000
	.long 0xbf800000                                           // 00000006F7C4: BF800000
	.long 0xbf800000                                           // 00000006F7C8: BF800000
	.long 0xbf800000                                           // 00000006F7CC: BF800000
	.long 0xbf800000                                           // 00000006F7D0: BF800000
	.long 0xbf800000                                           // 00000006F7D4: BF800000
	.long 0xbf800000                                           // 00000006F7D8: BF800000
	.long 0xbf800000                                           // 00000006F7DC: BF800000
	.long 0xbf800000                                           // 00000006F7E0: BF800000
	.long 0xbf800000                                           // 00000006F7E4: BF800000
	.long 0xbf800000                                           // 00000006F7E8: BF800000
	.long 0xbf800000                                           // 00000006F7EC: BF800000
	.long 0xbf800000                                           // 00000006F7F0: BF800000
	.long 0xbf800000                                           // 00000006F7F4: BF800000
	.long 0xbf800000                                           // 00000006F7F8: BF800000
	.long 0xbf800000                                           // 00000006F7FC: BF800000

	.p2align	8
	.type	mul_get_work_dim,@function
	.size	mul_get_work_dim, mul_get_work_dim_symend-mul_get_work_dim
mul_get_work_dim:
	s_clause 0x2                                               // 00000006F800: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 00000006F804: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x50                                // 00000006F80C: F4000100 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F814: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 00000006F81C: 84028602
	s_mov_b32 s33, 0                                           // 00000006F820: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F824: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 00000006F828: D6550000 04000403
	s_and_b32 s2, s4, 0xffff                                   // 00000006F830: 8B02FF04 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 00000006F838: BF870499
	s_mul_i32 s2, s2, s2                                       // 00000006F83C: 96020202
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 00000006F840: CA100080 01020002
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F848: BF870091
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F84C: D73C0000 00020082
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F854: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006F85C: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F860: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000006F864: DC6A0000 007C0200
	s_nop 0                                                    // 00000006F86C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F870: BFB60003
	s_endpgm                                                   // 00000006F874: BFB00000
mul_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006F878: BF800000
	.long 0xbf800000                                           // 00000006F87C: BF800000
	.long 0xbf800000                                           // 00000006F880: BF800000
	.long 0xbf800000                                           // 00000006F884: BF800000
	.long 0xbf800000                                           // 00000006F888: BF800000
	.long 0xbf800000                                           // 00000006F88C: BF800000
	.long 0xbf800000                                           // 00000006F890: BF800000
	.long 0xbf800000                                           // 00000006F894: BF800000
	.long 0xbf800000                                           // 00000006F898: BF800000
	.long 0xbf800000                                           // 00000006F89C: BF800000
	.long 0xbf800000                                           // 00000006F8A0: BF800000
	.long 0xbf800000                                           // 00000006F8A4: BF800000
	.long 0xbf800000                                           // 00000006F8A8: BF800000
	.long 0xbf800000                                           // 00000006F8AC: BF800000
	.long 0xbf800000                                           // 00000006F8B0: BF800000
	.long 0xbf800000                                           // 00000006F8B4: BF800000
	.long 0xbf800000                                           // 00000006F8B8: BF800000
	.long 0xbf800000                                           // 00000006F8BC: BF800000
	.long 0xbf800000                                           // 00000006F8C0: BF800000
	.long 0xbf800000                                           // 00000006F8C4: BF800000
	.long 0xbf800000                                           // 00000006F8C8: BF800000
	.long 0xbf800000                                           // 00000006F8CC: BF800000
	.long 0xbf800000                                           // 00000006F8D0: BF800000
	.long 0xbf800000                                           // 00000006F8D4: BF800000
	.long 0xbf800000                                           // 00000006F8D8: BF800000
	.long 0xbf800000                                           // 00000006F8DC: BF800000
	.long 0xbf800000                                           // 00000006F8E0: BF800000
	.long 0xbf800000                                           // 00000006F8E4: BF800000
	.long 0xbf800000                                           // 00000006F8E8: BF800000
	.long 0xbf800000                                           // 00000006F8EC: BF800000
	.long 0xbf800000                                           // 00000006F8F0: BF800000
	.long 0xbf800000                                           // 00000006F8F4: BF800000
	.long 0xbf800000                                           // 00000006F8F8: BF800000
	.long 0xbf800000                                           // 00000006F8FC: BF800000

	.p2align	8
	.type	mul_x_8_8,@function
	.size	mul_x_8_8, mul_x_8_8_symend-mul_x_8_8
mul_x_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006F900: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 00000006F908: BF89FC07
	s_clause 0x1                                               // 00000006F90C: BF850001
	s_load_b32 s5, s[0:1], null                                // 00000006F910: F4000140 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F918: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006F920: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000006F92C: 84028302
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006F930: D6100003 02291500
	s_mov_b32 s33, 0                                           // 00000006F938: BEA10080
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006F93C: BF870002
	v_add3_u32 v0, s4, s2, v2                                  // 00000006F940: D6550000 04080404
	s_lshl_b32 s2, s3, 3                                       // 00000006F948: 84028303
	s_delay_alu instid0(VALU_DEP_2) | instid1(SALU_CYCLE_1)    // 00000006F94C: BF870482
	v_add3_u32 v2, s6, s2, v3                                  // 00000006F950: D6550002 040C0406
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000006F958: BF870122
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006F95C: D73C0000 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006F964: BF89FC07
	v_mul_lo_u32 v2, v2, s5                                    // 00000006F968: D72C0002 00000B02
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006F970: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F974: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F97C: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000006F980: DC6A0000 007C0200
	s_nop 0                                                    // 00000006F988: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F98C: BFB60003
	s_endpgm                                                   // 00000006F990: BFB00000
mul_x_8_8_symend:
	.long 0xbf800000                                           // 00000006F994: BF800000
	.long 0xbf800000                                           // 00000006F998: BF800000
	.long 0xbf800000                                           // 00000006F99C: BF800000
	.long 0xbf800000                                           // 00000006F9A0: BF800000
	.long 0xbf800000                                           // 00000006F9A4: BF800000
	.long 0xbf800000                                           // 00000006F9A8: BF800000
	.long 0xbf800000                                           // 00000006F9AC: BF800000
	.long 0xbf800000                                           // 00000006F9B0: BF800000
	.long 0xbf800000                                           // 00000006F9B4: BF800000
	.long 0xbf800000                                           // 00000006F9B8: BF800000
	.long 0xbf800000                                           // 00000006F9BC: BF800000
	.long 0xbf800000                                           // 00000006F9C0: BF800000
	.long 0xbf800000                                           // 00000006F9C4: BF800000
	.long 0xbf800000                                           // 00000006F9C8: BF800000
	.long 0xbf800000                                           // 00000006F9CC: BF800000
	.long 0xbf800000                                           // 00000006F9D0: BF800000
	.long 0xbf800000                                           // 00000006F9D4: BF800000
	.long 0xbf800000                                           // 00000006F9D8: BF800000
	.long 0xbf800000                                           // 00000006F9DC: BF800000
	.long 0xbf800000                                           // 00000006F9E0: BF800000
	.long 0xbf800000                                           // 00000006F9E4: BF800000
	.long 0xbf800000                                           // 00000006F9E8: BF800000
	.long 0xbf800000                                           // 00000006F9EC: BF800000
	.long 0xbf800000                                           // 00000006F9F0: BF800000
	.long 0xbf800000                                           // 00000006F9F4: BF800000
	.long 0xbf800000                                           // 00000006F9F8: BF800000
	.long 0xbf800000                                           // 00000006F9FC: BF800000

	.p2align	8
	.type	mul_get_global_offset_8_8,@function
	.size	mul_get_global_offset_8_8, mul_get_global_offset_8_8_symend-mul_get_global_offset_8_8
mul_get_global_offset_8_8:
	s_clause 0x1                                               // 00000006FA00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006FA04: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006FA0C: F4040000 F8000008
	s_lshl_b32 s2, s2, 3                                       // 00000006FA14: 84028302
	s_mov_b32 s33, 0                                           // 00000006FA18: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006FA1C: BF89FC07
	v_add3_u32 v0, s4, s2, v0                                  // 00000006FA20: D6550000 04000404
	s_mul_i32 s2, s6, s4                                       // 00000006FA28: 96020406
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006FA2C: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 00000006FA30: CA100080 01020002
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006FA38: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006FA40: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006FA44: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006FA4C: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000006FA50: DC6A0000 007C0200
	s_nop 0                                                    // 00000006FA58: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FA5C: BFB60003
	s_endpgm                                                   // 00000006FA60: BFB00000
mul_get_global_offset_8_8_symend:
	.long 0xbf800000                                           // 00000006FA64: BF800000
	.long 0xbf800000                                           // 00000006FA68: BF800000
	.long 0xbf800000                                           // 00000006FA6C: BF800000
	.long 0xbf800000                                           // 00000006FA70: BF800000
	.long 0xbf800000                                           // 00000006FA74: BF800000
	.long 0xbf800000                                           // 00000006FA78: BF800000
	.long 0xbf800000                                           // 00000006FA7C: BF800000
	.long 0xbf800000                                           // 00000006FA80: BF800000
	.long 0xbf800000                                           // 00000006FA84: BF800000
	.long 0xbf800000                                           // 00000006FA88: BF800000
	.long 0xbf800000                                           // 00000006FA8C: BF800000
	.long 0xbf800000                                           // 00000006FA90: BF800000
	.long 0xbf800000                                           // 00000006FA94: BF800000
	.long 0xbf800000                                           // 00000006FA98: BF800000
	.long 0xbf800000                                           // 00000006FA9C: BF800000
	.long 0xbf800000                                           // 00000006FAA0: BF800000
	.long 0xbf800000                                           // 00000006FAA4: BF800000
	.long 0xbf800000                                           // 00000006FAA8: BF800000
	.long 0xbf800000                                           // 00000006FAAC: BF800000
	.long 0xbf800000                                           // 00000006FAB0: BF800000
	.long 0xbf800000                                           // 00000006FAB4: BF800000
	.long 0xbf800000                                           // 00000006FAB8: BF800000
	.long 0xbf800000                                           // 00000006FABC: BF800000
	.long 0xbf800000                                           // 00000006FAC0: BF800000
	.long 0xbf800000                                           // 00000006FAC4: BF800000
	.long 0xbf800000                                           // 00000006FAC8: BF800000
	.long 0xbf800000                                           // 00000006FACC: BF800000
	.long 0xbf800000                                           // 00000006FAD0: BF800000
	.long 0xbf800000                                           // 00000006FAD4: BF800000
	.long 0xbf800000                                           // 00000006FAD8: BF800000
	.long 0xbf800000                                           // 00000006FADC: BF800000
	.long 0xbf800000                                           // 00000006FAE0: BF800000
	.long 0xbf800000                                           // 00000006FAE4: BF800000
	.long 0xbf800000                                           // 00000006FAE8: BF800000
	.long 0xbf800000                                           // 00000006FAEC: BF800000
	.long 0xbf800000                                           // 00000006FAF0: BF800000
	.long 0xbf800000                                           // 00000006FAF4: BF800000
	.long 0xbf800000                                           // 00000006FAF8: BF800000
	.long 0xbf800000                                           // 00000006FAFC: BF800000

	.p2align	8
	.type	mul_get_local_id_8_8,@function
	.size	mul_get_local_id_8_8, mul_get_local_id_8_8_symend-mul_get_local_id_8_8
mul_get_local_id_8_8:
	s_clause 0x1                                               // 00000006FB00: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000006FB04: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006FB0C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v3, 0x3ff, v0       // 00000006FB14: CA240080 020200FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000006FB20: 84028302
	v_bfe_u32 v4, v0, 10, 10                                   // 00000006FB24: D6100004 02291500
	s_mov_b32 s33, 0                                           // 00000006FB2C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006FB30: BF89FC07
	v_add3_u32 v1, s3, s2, v3                                  // 00000006FB34: D6550001 040C0403
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000006FB3C: BF870121
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006FB40: D73C0000 00020282
	v_mul_u32_u24_e32 v2, v3, v4                               // 00000006FB48: 16040903
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006FB4C: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006FB54: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006FB58: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000006FB5C: DC6A0000 007C0200
	s_nop 0                                                    // 00000006FB64: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FB68: BFB60003
	s_endpgm                                                   // 00000006FB6C: BFB00000
mul_get_local_id_8_8_symend:
	.long 0xbf800000                                           // 00000006FB70: BF800000
	.long 0xbf800000                                           // 00000006FB74: BF800000
	.long 0xbf800000                                           // 00000006FB78: BF800000
	.long 0xbf800000                                           // 00000006FB7C: BF800000
	.long 0xbf800000                                           // 00000006FB80: BF800000
	.long 0xbf800000                                           // 00000006FB84: BF800000
	.long 0xbf800000                                           // 00000006FB88: BF800000
	.long 0xbf800000                                           // 00000006FB8C: BF800000
	.long 0xbf800000                                           // 00000006FB90: BF800000
	.long 0xbf800000                                           // 00000006FB94: BF800000
	.long 0xbf800000                                           // 00000006FB98: BF800000
	.long 0xbf800000                                           // 00000006FB9C: BF800000
	.long 0xbf800000                                           // 00000006FBA0: BF800000
	.long 0xbf800000                                           // 00000006FBA4: BF800000
	.long 0xbf800000                                           // 00000006FBA8: BF800000
	.long 0xbf800000                                           // 00000006FBAC: BF800000
	.long 0xbf800000                                           // 00000006FBB0: BF800000
	.long 0xbf800000                                           // 00000006FBB4: BF800000
	.long 0xbf800000                                           // 00000006FBB8: BF800000
	.long 0xbf800000                                           // 00000006FBBC: BF800000
	.long 0xbf800000                                           // 00000006FBC0: BF800000
	.long 0xbf800000                                           // 00000006FBC4: BF800000
	.long 0xbf800000                                           // 00000006FBC8: BF800000
	.long 0xbf800000                                           // 00000006FBCC: BF800000
	.long 0xbf800000                                           // 00000006FBD0: BF800000
	.long 0xbf800000                                           // 00000006FBD4: BF800000
	.long 0xbf800000                                           // 00000006FBD8: BF800000
	.long 0xbf800000                                           // 00000006FBDC: BF800000
	.long 0xbf800000                                           // 00000006FBE0: BF800000
	.long 0xbf800000                                           // 00000006FBE4: BF800000
	.long 0xbf800000                                           // 00000006FBE8: BF800000
	.long 0xbf800000                                           // 00000006FBEC: BF800000
	.long 0xbf800000                                           // 00000006FBF0: BF800000
	.long 0xbf800000                                           // 00000006FBF4: BF800000
	.long 0xbf800000                                           // 00000006FBF8: BF800000
	.long 0xbf800000                                           // 00000006FBFC: BF800000

	.p2align	8
	.type	mul_get_group_id_8_8,@function
	.size	mul_get_group_id_8_8, mul_get_group_id_8_8_symend-mul_get_group_id_8_8
mul_get_group_id_8_8:
	s_clause 0x1                                               // 00000006FC00: BF850001
	s_load_b32 s4, s[0:1], 0x38                                // 00000006FC04: F4000100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006FC0C: F4040000 F8000008
	s_lshl_b32 s5, s2, 3                                       // 00000006FC14: 84058302
	s_mul_i32 s2, s2, s3                                       // 00000006FC18: 96020302
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006FC1C: BF8700C9
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 00000006FC20: CA100080 01020002
	s_mov_b32 s33, 0                                           // 00000006FC28: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006FC2C: BF89FC07
	v_add3_u32 v0, s4, s5, v0                                  // 00000006FC30: D6550000 04000A04
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006FC38: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006FC40: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006FC44: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006FC4C: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000006FC50: DC6A0000 007C0200
	s_nop 0                                                    // 00000006FC58: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FC5C: BFB60003
	s_endpgm                                                   // 00000006FC60: BFB00000
mul_get_group_id_8_8_symend:
	.long 0xbf800000                                           // 00000006FC64: BF800000
	.long 0xbf800000                                           // 00000006FC68: BF800000
	.long 0xbf800000                                           // 00000006FC6C: BF800000
	.long 0xbf800000                                           // 00000006FC70: BF800000
	.long 0xbf800000                                           // 00000006FC74: BF800000
	.long 0xbf800000                                           // 00000006FC78: BF800000
	.long 0xbf800000                                           // 00000006FC7C: BF800000
	.long 0xbf800000                                           // 00000006FC80: BF800000
	.long 0xbf800000                                           // 00000006FC84: BF800000
	.long 0xbf800000                                           // 00000006FC88: BF800000
	.long 0xbf800000                                           // 00000006FC8C: BF800000
	.long 0xbf800000                                           // 00000006FC90: BF800000
	.long 0xbf800000                                           // 00000006FC94: BF800000
	.long 0xbf800000                                           // 00000006FC98: BF800000
	.long 0xbf800000                                           // 00000006FC9C: BF800000
	.long 0xbf800000                                           // 00000006FCA0: BF800000
	.long 0xbf800000                                           // 00000006FCA4: BF800000
	.long 0xbf800000                                           // 00000006FCA8: BF800000
	.long 0xbf800000                                           // 00000006FCAC: BF800000
	.long 0xbf800000                                           // 00000006FCB0: BF800000
	.long 0xbf800000                                           // 00000006FCB4: BF800000
	.long 0xbf800000                                           // 00000006FCB8: BF800000
	.long 0xbf800000                                           // 00000006FCBC: BF800000
	.long 0xbf800000                                           // 00000006FCC0: BF800000
	.long 0xbf800000                                           // 00000006FCC4: BF800000
	.long 0xbf800000                                           // 00000006FCC8: BF800000
	.long 0xbf800000                                           // 00000006FCCC: BF800000
	.long 0xbf800000                                           // 00000006FCD0: BF800000
	.long 0xbf800000                                           // 00000006FCD4: BF800000
	.long 0xbf800000                                           // 00000006FCD8: BF800000
	.long 0xbf800000                                           // 00000006FCDC: BF800000
	.long 0xbf800000                                           // 00000006FCE0: BF800000
	.long 0xbf800000                                           // 00000006FCE4: BF800000
	.long 0xbf800000                                           // 00000006FCE8: BF800000
	.long 0xbf800000                                           // 00000006FCEC: BF800000
	.long 0xbf800000                                           // 00000006FCF0: BF800000
	.long 0xbf800000                                           // 00000006FCF4: BF800000
	.long 0xbf800000                                           // 00000006FCF8: BF800000
	.long 0xbf800000                                           // 00000006FCFC: BF800000

	.p2align	8
	.type	mul_get_local_size_8_8,@function
	.size	mul_get_local_size_8_8, mul_get_local_size_8_8_symend-mul_get_local_size_8_8
mul_get_local_size_8_8:
	s_clause 0x1                                               // 00000006FD00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000006FD04: F4080100 F8000008
	s_load_b32 s9, s[0:1], 0x38                                // 00000006FD0C: F4000240 F8000038
	s_add_u32 s8, s0, 16                                       // 00000006FD14: 80089000
	s_addc_u32 s10, s1, 0                                      // 00000006FD18: 820A8001
	s_lshl_b32 s11, s2, 3                                      // 00000006FD1C: 840B8302
	v_mov_b32_e32 v1, 0                                        // 00000006FD20: 7E020280
	s_mov_b32 s33, 0                                           // 00000006FD24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006FD28: BF89FC07
	s_cmp_lt_u32 s2, s6                                        // 00000006FD2C: BF0A0602
	v_add3_u32 v0, s9, s11, v0                                 // 00000006FD30: D6550000 04001609
	s_cselect_b32 s0, 12, 18                                   // 00000006FD38: 9800928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006FD3C: BF8704C9
	s_add_u32 s0, s8, s0                                       // 00000006FD40: 80000008
	s_addc_u32 s1, s10, 0                                      // 00000006FD44: 8201800A
	s_cmp_lt_u32 s3, s7                                        // 00000006FD48: BF0A0703
	s_cselect_b32 s2, 14, 20                                   // 00000006FD4C: 9802948E
	s_add_u32 s2, s8, s2                                       // 00000006FD50: 80020208
	s_addc_u32 s3, s10, 0                                      // 00000006FD54: 8203800A
	s_clause 0x1                                               // 00000006FD58: BF850001
	global_load_u16 v2, v1, s[0:1]                             // 00000006FD5C: DC4A0000 02000001
	global_load_u16 v3, v1, s[2:3]                             // 00000006FD64: DC4A0000 03020001
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006FD6C: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006FD74: BF870111
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 00000006FD78: D7006A00 00020004
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 00000006FD80: 40020205
	s_waitcnt vmcnt(0)                                         // 00000006FD84: BF8903F7
	v_mul_lo_u32 v2, v3, v2                                    // 00000006FD88: D72C0002 00020503
	global_store_b32 v[0:1], v2, off                           // 00000006FD90: DC6A0000 007C0200
	s_nop 0                                                    // 00000006FD98: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FD9C: BFB60003
	s_endpgm                                                   // 00000006FDA0: BFB00000
mul_get_local_size_8_8_symend:
	.long 0xbf800000                                           // 00000006FDA4: BF800000
	.long 0xbf800000                                           // 00000006FDA8: BF800000
	.long 0xbf800000                                           // 00000006FDAC: BF800000
	.long 0xbf800000                                           // 00000006FDB0: BF800000
	.long 0xbf800000                                           // 00000006FDB4: BF800000
	.long 0xbf800000                                           // 00000006FDB8: BF800000
	.long 0xbf800000                                           // 00000006FDBC: BF800000
	.long 0xbf800000                                           // 00000006FDC0: BF800000
	.long 0xbf800000                                           // 00000006FDC4: BF800000
	.long 0xbf800000                                           // 00000006FDC8: BF800000
	.long 0xbf800000                                           // 00000006FDCC: BF800000
	.long 0xbf800000                                           // 00000006FDD0: BF800000
	.long 0xbf800000                                           // 00000006FDD4: BF800000
	.long 0xbf800000                                           // 00000006FDD8: BF800000
	.long 0xbf800000                                           // 00000006FDDC: BF800000
	.long 0xbf800000                                           // 00000006FDE0: BF800000
	.long 0xbf800000                                           // 00000006FDE4: BF800000
	.long 0xbf800000                                           // 00000006FDE8: BF800000
	.long 0xbf800000                                           // 00000006FDEC: BF800000
	.long 0xbf800000                                           // 00000006FDF0: BF800000
	.long 0xbf800000                                           // 00000006FDF4: BF800000
	.long 0xbf800000                                           // 00000006FDF8: BF800000
	.long 0xbf800000                                           // 00000006FDFC: BF800000

	.p2align	8
	.type	mul_get_global_id_8_8,@function
	.size	mul_get_global_id_8_8, mul_get_global_id_8_8_symend-mul_get_global_id_8_8
mul_get_global_id_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006FE00: F4080100 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006FE08: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006FE10: F4040000 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006FE18: D6100003 02291500
	s_mov_b32 s33, 0                                           // 00000006FE20: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000006FE24: BF870142
	v_lshl_or_b32 v2, s2, 3, v1                                // 00000006FE28: D6560002 04050602
	v_mov_b32_e32 v1, 0                                        // 00000006FE30: 7E020280
	s_lshl_b32 s2, s3, 3                                       // 00000006FE34: 84028303
	s_waitcnt lgkmcnt(0)                                       // 00000006FE38: BF89FC07
	v_add_nc_u32_e32 v0, s4, v2                                // 00000006FE3C: 4A000404
	v_add3_u32 v3, s6, s2, v3                                  // 00000006FE40: D6550003 040C0406
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006FE48: BF870112
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 00000006FE4C: D73C0001 00020082
	v_mul_lo_u32 v3, v3, v0                                    // 00000006FE54: D72C0003 00020103
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006FE5C: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000006FE60: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 00000006FE68: 40020401
	global_store_b32 v[0:1], v3, off                           // 00000006FE6C: DC6A0000 007C0300
	s_nop 0                                                    // 00000006FE74: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FE78: BFB60003
	s_endpgm                                                   // 00000006FE7C: BFB00000
mul_get_global_id_8_8_symend:
	.long 0xbf800000                                           // 00000006FE80: BF800000
	.long 0xbf800000                                           // 00000006FE84: BF800000
	.long 0xbf800000                                           // 00000006FE88: BF800000
	.long 0xbf800000                                           // 00000006FE8C: BF800000
	.long 0xbf800000                                           // 00000006FE90: BF800000
	.long 0xbf800000                                           // 00000006FE94: BF800000
	.long 0xbf800000                                           // 00000006FE98: BF800000
	.long 0xbf800000                                           // 00000006FE9C: BF800000
	.long 0xbf800000                                           // 00000006FEA0: BF800000
	.long 0xbf800000                                           // 00000006FEA4: BF800000
	.long 0xbf800000                                           // 00000006FEA8: BF800000
	.long 0xbf800000                                           // 00000006FEAC: BF800000
	.long 0xbf800000                                           // 00000006FEB0: BF800000
	.long 0xbf800000                                           // 00000006FEB4: BF800000
	.long 0xbf800000                                           // 00000006FEB8: BF800000
	.long 0xbf800000                                           // 00000006FEBC: BF800000
	.long 0xbf800000                                           // 00000006FEC0: BF800000
	.long 0xbf800000                                           // 00000006FEC4: BF800000
	.long 0xbf800000                                           // 00000006FEC8: BF800000
	.long 0xbf800000                                           // 00000006FECC: BF800000
	.long 0xbf800000                                           // 00000006FED0: BF800000
	.long 0xbf800000                                           // 00000006FED4: BF800000
	.long 0xbf800000                                           // 00000006FED8: BF800000
	.long 0xbf800000                                           // 00000006FEDC: BF800000
	.long 0xbf800000                                           // 00000006FEE0: BF800000
	.long 0xbf800000                                           // 00000006FEE4: BF800000
	.long 0xbf800000                                           // 00000006FEE8: BF800000
	.long 0xbf800000                                           // 00000006FEEC: BF800000
	.long 0xbf800000                                           // 00000006FEF0: BF800000
	.long 0xbf800000                                           // 00000006FEF4: BF800000
	.long 0xbf800000                                           // 00000006FEF8: BF800000
	.long 0xbf800000                                           // 00000006FEFC: BF800000

	.p2align	8
	.type	mul_get_global_size_8_8,@function
	.size	mul_get_global_size_8_8, mul_get_global_size_8_8_symend-mul_get_global_size_8_8
mul_get_global_size_8_8:
	v_mov_b32_e32 v1, 0                                        // 00000006FF00: 7E020280
	s_mov_b32 s33, 0                                           // 00000006FF04: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000006FF08: DC520022 02000001
	s_clause 0x1                                               // 00000006FF10: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000006FF14: F40000C0 F8000038
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000006FF1C: F4080100 F8000008
	s_lshl_b32 s0, s2, 3                                       // 00000006FF24: 84008302
	s_waitcnt lgkmcnt(0)                                       // 00000006FF28: BF89FC07
	v_add3_u32 v0, s3, s0, v0                                  // 00000006FF2C: D6550000 04000003
	s_lshl_b32 s0, s6, 3                                       // 00000006FF34: 84008306
	s_lshl_b32 s1, s7, 3                                       // 00000006FF38: 84018307
	s_waitcnt vmcnt(0)                                         // 00000006FF3C: BF8903F7
	v_and_b32_e32 v3, 0xffff, v2                               // 00000006FF40: 360604FF 0000FFFF
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000006FF48: 32040490
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006FF4C: BF870112
	v_add_nc_u32_e32 v3, s0, v3                                // 00000006FF50: 4A060600
	v_add_nc_u32_e32 v2, s1, v2                                // 00000006FF54: 4A040401
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006FF58: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006FF60: BF870112
	v_mul_lo_u32 v2, v2, v3                                    // 00000006FF64: D72C0002 00020702
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 00000006FF6C: D7006A00 00020004
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006FF74: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 00000006FF78: 40020205
	global_store_b32 v[0:1], v2, off                           // 00000006FF7C: DC6A0000 007C0200
	s_nop 0                                                    // 00000006FF84: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FF88: BFB60003
	s_endpgm                                                   // 00000006FF8C: BFB00000
mul_get_global_size_8_8_symend:
	.long 0xbf800000                                           // 00000006FF90: BF800000
	.long 0xbf800000                                           // 00000006FF94: BF800000
	.long 0xbf800000                                           // 00000006FF98: BF800000
	.long 0xbf800000                                           // 00000006FF9C: BF800000
	.long 0xbf800000                                           // 00000006FFA0: BF800000
	.long 0xbf800000                                           // 00000006FFA4: BF800000
	.long 0xbf800000                                           // 00000006FFA8: BF800000
	.long 0xbf800000                                           // 00000006FFAC: BF800000
	.long 0xbf800000                                           // 00000006FFB0: BF800000
	.long 0xbf800000                                           // 00000006FFB4: BF800000
	.long 0xbf800000                                           // 00000006FFB8: BF800000
	.long 0xbf800000                                           // 00000006FFBC: BF800000
	.long 0xbf800000                                           // 00000006FFC0: BF800000
	.long 0xbf800000                                           // 00000006FFC4: BF800000
	.long 0xbf800000                                           // 00000006FFC8: BF800000
	.long 0xbf800000                                           // 00000006FFCC: BF800000
	.long 0xbf800000                                           // 00000006FFD0: BF800000
	.long 0xbf800000                                           // 00000006FFD4: BF800000
	.long 0xbf800000                                           // 00000006FFD8: BF800000
	.long 0xbf800000                                           // 00000006FFDC: BF800000
	.long 0xbf800000                                           // 00000006FFE0: BF800000
	.long 0xbf800000                                           // 00000006FFE4: BF800000
	.long 0xbf800000                                           // 00000006FFE8: BF800000
	.long 0xbf800000                                           // 00000006FFEC: BF800000
	.long 0xbf800000                                           // 00000006FFF0: BF800000
	.long 0xbf800000                                           // 00000006FFF4: BF800000
	.long 0xbf800000                                           // 00000006FFF8: BF800000
	.long 0xbf800000                                           // 00000006FFFC: BF800000

	.p2align	8
	.type	mul_get_num_groups_8_8,@function
	.size	mul_get_num_groups_8_8, mul_get_num_groups_8_8_symend-mul_get_num_groups_8_8
mul_get_num_groups_8_8:
	v_mov_b32_e32 v1, 0                                        // 000000070000: 7E020280
	s_mov_b32 s33, 0                                           // 000000070004: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000070008: DC520022 02000001
	s_clause 0x1                                               // 000000070010: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000070014: F40000C0 F8000038
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000007001C: F4080100 F8000008
	s_lshl_b32 s0, s2, 3                                       // 000000070024: 84008302
	s_waitcnt lgkmcnt(0)                                       // 000000070028: BF89FC07
	v_add3_u32 v0, s3, s0, v0                                  // 00000007002C: D6550000 04000003
	s_waitcnt vmcnt(0)                                         // 000000070034: BF8903F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 000000070038: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007003C: 7C7A0480
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000070040: BF8700B2
	v_cmp_ne_u16_e64 s0, 0, v3.l                               // 000000070044: D43D0000 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007004C: BF07806A
	s_addc_u32 s1, s6, 0                                       // 000000070050: 82018006
	s_cmp_lg_u32 s0, 0                                         // 000000070054: BF078000
	s_addc_u32 s0, s7, 0                                       // 000000070058: 82008007
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 00000007005C: BF870499
	s_mul_i32 s0, s0, s1                                       // 000000070060: 96000100
	v_mov_b32_e32 v2, s0                                       // 000000070064: 7E040200
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070068: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070070: BF870111
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 000000070074: D7006A00 00020004
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 00000007007C: 40020205
	global_store_b32 v[0:1], v2, off                           // 000000070080: DC6A0000 007C0200
	s_nop 0                                                    // 000000070088: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007008C: BFB60003
	s_endpgm                                                   // 000000070090: BFB00000
mul_get_num_groups_8_8_symend:
	.long 0xbf800000                                           // 000000070094: BF800000
	.long 0xbf800000                                           // 000000070098: BF800000
	.long 0xbf800000                                           // 00000007009C: BF800000
	.long 0xbf800000                                           // 0000000700A0: BF800000
	.long 0xbf800000                                           // 0000000700A4: BF800000
	.long 0xbf800000                                           // 0000000700A8: BF800000
	.long 0xbf800000                                           // 0000000700AC: BF800000
	.long 0xbf800000                                           // 0000000700B0: BF800000
	.long 0xbf800000                                           // 0000000700B4: BF800000
	.long 0xbf800000                                           // 0000000700B8: BF800000
	.long 0xbf800000                                           // 0000000700BC: BF800000
	.long 0xbf800000                                           // 0000000700C0: BF800000
	.long 0xbf800000                                           // 0000000700C4: BF800000
	.long 0xbf800000                                           // 0000000700C8: BF800000
	.long 0xbf800000                                           // 0000000700CC: BF800000
	.long 0xbf800000                                           // 0000000700D0: BF800000
	.long 0xbf800000                                           // 0000000700D4: BF800000
	.long 0xbf800000                                           // 0000000700D8: BF800000
	.long 0xbf800000                                           // 0000000700DC: BF800000
	.long 0xbf800000                                           // 0000000700E0: BF800000
	.long 0xbf800000                                           // 0000000700E4: BF800000
	.long 0xbf800000                                           // 0000000700E8: BF800000
	.long 0xbf800000                                           // 0000000700EC: BF800000
	.long 0xbf800000                                           // 0000000700F0: BF800000
	.long 0xbf800000                                           // 0000000700F4: BF800000
	.long 0xbf800000                                           // 0000000700F8: BF800000
	.long 0xbf800000                                           // 0000000700FC: BF800000

	.p2align	8
	.type	mul_get_work_dim_8_8,@function
	.size	mul_get_work_dim_8_8, mul_get_work_dim_8_8_symend-mul_get_work_dim_8_8
mul_get_work_dim_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000070100: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000070108: BF89FC07
	s_clause 0x1                                               // 00000007010C: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 000000070110: F4000140 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070118: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000070120: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000007012C: 84028302
	v_bfe_u32 v3, v0, 10, 10                                   // 000000070130: D6100003 02291500
	s_mov_b32 s33, 0                                           // 000000070138: BEA10080
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007013C: BF870002
	v_add3_u32 v0, s4, s2, v2                                  // 000000070140: D6550000 04080404
	s_lshl_b32 s2, s3, 3                                       // 000000070148: 84028303
	s_delay_alu instid0(VALU_DEP_2) | instid1(SALU_CYCLE_1)    // 00000007014C: BF870482
	v_add3_u32 v2, s6, s2, v3                                  // 000000070150: D6550002 040C0406
	s_waitcnt lgkmcnt(0)                                       // 000000070158: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000007015C: 8B02FF05 0000FFFF
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070164: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007016C: BF870112
	v_mul_lo_u32 v2, v2, s2                                    // 000000070170: D72C0002 00000502
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000070178: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3)                            // 000000070180: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000070184: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000070188: DC6A0000 007C0200
	s_nop 0                                                    // 000000070190: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070194: BFB60003
	s_endpgm                                                   // 000000070198: BFB00000
mul_get_work_dim_8_8_symend:
	.long 0xbf800000                                           // 00000007019C: BF800000
	.long 0xbf800000                                           // 0000000701A0: BF800000
	.long 0xbf800000                                           // 0000000701A4: BF800000
	.long 0xbf800000                                           // 0000000701A8: BF800000
	.long 0xbf800000                                           // 0000000701AC: BF800000
	.long 0xbf800000                                           // 0000000701B0: BF800000
	.long 0xbf800000                                           // 0000000701B4: BF800000
	.long 0xbf800000                                           // 0000000701B8: BF800000
	.long 0xbf800000                                           // 0000000701BC: BF800000
	.long 0xbf800000                                           // 0000000701C0: BF800000
	.long 0xbf800000                                           // 0000000701C4: BF800000
	.long 0xbf800000                                           // 0000000701C8: BF800000
	.long 0xbf800000                                           // 0000000701CC: BF800000
	.long 0xbf800000                                           // 0000000701D0: BF800000
	.long 0xbf800000                                           // 0000000701D4: BF800000
	.long 0xbf800000                                           // 0000000701D8: BF800000
	.long 0xbf800000                                           // 0000000701DC: BF800000
	.long 0xbf800000                                           // 0000000701E0: BF800000
	.long 0xbf800000                                           // 0000000701E4: BF800000
	.long 0xbf800000                                           // 0000000701E8: BF800000
	.long 0xbf800000                                           // 0000000701EC: BF800000
	.long 0xbf800000                                           // 0000000701F0: BF800000
	.long 0xbf800000                                           // 0000000701F4: BF800000
	.long 0xbf800000                                           // 0000000701F8: BF800000
	.long 0xbf800000                                           // 0000000701FC: BF800000

	.p2align	8
	.type	mul_long_x_x,@function
	.size	mul_long_x_x, mul_long_x_x_symend-mul_long_x_x
mul_long_x_x:
	s_clause 0x2                                               // 000000070200: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 000000070204: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x8                                 // 00000007020C: F4000100 F8000008
	s_load_b64 s[0:1], s[0:1], null                            // 000000070214: F4040000 F8000000
	s_lshl_b32 s2, s2, 6                                       // 00000007021C: 84028602
	s_mov_b32 s33, 0                                           // 000000070220: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070224: BF89FC07
	v_add3_u32 v2, s3, s2, v0                                  // 000000070228: D6550002 04000403
	s_mul_i32 s4, s4, s4                                       // 000000070230: 96040404
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070234: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v0, s4              // 000000070238: CA100080 01000004
	v_mov_b32_e32 v3, v1                                       // 000000070240: 7E060301
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070244: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000070248: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000070250: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 000000070258: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007025C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000070260: DC6E0000 007C0002
	s_nop 0                                                    // 000000070268: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007026C: BFB60003
	s_endpgm                                                   // 000000070270: BFB00000
mul_long_x_x_symend:
	.long 0xbf800000                                           // 000000070274: BF800000
	.long 0xbf800000                                           // 000000070278: BF800000
	.long 0xbf800000                                           // 00000007027C: BF800000
	.long 0xbf800000                                           // 000000070280: BF800000
	.long 0xbf800000                                           // 000000070284: BF800000
	.long 0xbf800000                                           // 000000070288: BF800000
	.long 0xbf800000                                           // 00000007028C: BF800000
	.long 0xbf800000                                           // 000000070290: BF800000
	.long 0xbf800000                                           // 000000070294: BF800000
	.long 0xbf800000                                           // 000000070298: BF800000
	.long 0xbf800000                                           // 00000007029C: BF800000
	.long 0xbf800000                                           // 0000000702A0: BF800000
	.long 0xbf800000                                           // 0000000702A4: BF800000
	.long 0xbf800000                                           // 0000000702A8: BF800000
	.long 0xbf800000                                           // 0000000702AC: BF800000
	.long 0xbf800000                                           // 0000000702B0: BF800000
	.long 0xbf800000                                           // 0000000702B4: BF800000
	.long 0xbf800000                                           // 0000000702B8: BF800000
	.long 0xbf800000                                           // 0000000702BC: BF800000
	.long 0xbf800000                                           // 0000000702C0: BF800000
	.long 0xbf800000                                           // 0000000702C4: BF800000
	.long 0xbf800000                                           // 0000000702C8: BF800000
	.long 0xbf800000                                           // 0000000702CC: BF800000
	.long 0xbf800000                                           // 0000000702D0: BF800000
	.long 0xbf800000                                           // 0000000702D4: BF800000
	.long 0xbf800000                                           // 0000000702D8: BF800000
	.long 0xbf800000                                           // 0000000702DC: BF800000
	.long 0xbf800000                                           // 0000000702E0: BF800000
	.long 0xbf800000                                           // 0000000702E4: BF800000
	.long 0xbf800000                                           // 0000000702E8: BF800000
	.long 0xbf800000                                           // 0000000702EC: BF800000
	.long 0xbf800000                                           // 0000000702F0: BF800000
	.long 0xbf800000                                           // 0000000702F4: BF800000
	.long 0xbf800000                                           // 0000000702F8: BF800000
	.long 0xbf800000                                           // 0000000702FC: BF800000

	.p2align	8
	.type	mul_long_get_global_offset_x,@function
	.size	mul_long_get_global_offset_x, mul_long_get_global_offset_x_symend-mul_long_get_global_offset_x
mul_long_get_global_offset_x:
	s_clause 0x3                                               // 000000070300: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000070304: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000007030C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 000000070314: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007031C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000070324: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000070330: 84028102
	v_bfe_u32 v4, v0, 10, 10                                   // 000000070334: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007033C: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000070344: 84048104
	s_lshl_b32 s3, s3, 4                                       // 000000070348: 84038403
	s_mov_b32 s33, 0                                           // 00000007034C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070350: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 000000070354: D6550002 04080408
	s_mul_i32 s2, s8, s5                                       // 00000007035C: 96020508
	v_mov_b32_e32 v3, v1                                       // 000000070360: 7E060301
	v_add3_u32 v6, s6, s4, v0                                  // 000000070364: D6550006 04000806
	v_mov_b32_e32 v0, s2                                       // 00000007036C: 7E000202
	v_add3_u32 v4, s10, s3, v4                                 // 000000070370: D6550004 0410060A
	s_mul_i32 s3, s10, s5                                      // 000000070378: 9603050A
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007037C: D73C0002 00020483
	v_mov_b32_e32 v5, v1                                       // 000000070384: 7E0A0301
	s_mul_i32 s6, s6, s5                                       // 000000070388: 96060506
	v_mov_b32_e32 v7, v1                                       // 00000007038C: 7E0E0301
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000070390: BF870213
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000070394: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007039C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000703A0: DC6E0000 007C0002
	v_mov_b32_e32 v0, s3                                       // 0000000703A8: 7E000203
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000703AC: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000703B4: BF870111
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000703B8: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000703C0: 400A0A01
	global_store_b64 v[4:5], v[0:1], off                       // 0000000703C4: DC6E0000 007C0004
	v_mov_b32_e32 v0, s6                                       // 0000000703CC: 7E000206
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000703D0: D73C0002 00020C83
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000703D8: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000703DC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000703E4: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000703E8: DC6E0000 007C0002
	s_nop 0                                                    // 0000000703F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000703F4: BFB60003
	s_endpgm                                                   // 0000000703F8: BFB00000
mul_long_get_global_offset_x_symend:
	.long 0xbf800000                                           // 0000000703FC: BF800000

	.p2align	8
	.type	mul_long_get_local_id_x,@function
	.size	mul_long_get_local_id_x, mul_long_get_local_id_x_symend-mul_long_get_local_id_x
mul_long_get_local_id_x:
	s_clause 0x2                                               // 000000070400: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000070404: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000007040C: F4000140 F8000000
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000070414: F4040180 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007041C: CA240080 010400FF 000003FF
	s_load_b32 s0, s[0:1], 0x48                                // 000000070428: F4000000 F8000048
	s_lshl_b32 s1, s2, 3                                       // 000000070430: 84018302
	v_bfe_u32 v8, v0, 10, 10                                   // 000000070434: D6100008 02291500
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007043C: BF870002
	v_mov_b32_e32 v3, v1                                       // 000000070440: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000070444: 7E0A0301
	v_bfe_u32 v9, v0, 20, 10                                   // 000000070448: D6100009 02292900
	v_mov_b32_e32 v7, v1                                       // 000000070450: 7E0E0301
	s_mov_b32 s33, 0                                           // 000000070454: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070458: BF89FC07
	v_add3_u32 v2, s8, s1, v4                                  // 00000007045C: D6550002 04100208
	s_lshl_b32 s1, s3, 2                                       // 000000070464: 84018203
	v_mul_lo_u32 v0, v4, s5                                    // 000000070468: D72C0000 00000B04
	v_add3_u32 v4, s10, s1, v8                                 // 000000070470: D6550004 0420020A
	s_lshl_b32 s1, s4, 1                                       // 000000070478: 84018104
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007047C: D73C0002 00020483
	v_add3_u32 v6, s0, s1, v9                                  // 000000070484: D6550006 04240200
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007048C: BF870193
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000070490: D73C0004 00020883
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000070498: D7006A02 00020406
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000704A0: BF870004
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000704A4: 40060607
	global_store_b64 v[2:3], v[0:1], off                       // 0000000704A8: DC6E0000 007C0002
	v_mul_lo_u32 v0, v8, s5                                    // 0000000704B0: D72C0000 00000B08
	v_add_co_u32 v2, vcc_lo, s6, v4                            // 0000000704B8: D7006A02 00020806
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v5, vcc_lo             // 0000000704C0: 40060A07
	v_lshlrev_b64 v[4:5], 3, v[6:7]                            // 0000000704C4: D73C0004 00020C83
	global_store_b64 v[2:3], v[0:1], off                       // 0000000704CC: DC6E0000 007C0002
	v_mul_lo_u32 v0, v9, s5                                    // 0000000704D4: D72C0000 00000B09
	v_add_co_u32 v2, vcc_lo, s6, v4                            // 0000000704DC: D7006A02 00020806
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v5, vcc_lo             // 0000000704E4: 40060A07
	global_store_b64 v[2:3], v[0:1], off                       // 0000000704E8: DC6E0000 007C0002
	s_nop 0                                                    // 0000000704F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000704F4: BFB60003
	s_endpgm                                                   // 0000000704F8: BFB00000
mul_long_get_local_id_x_symend:
	.long 0xbf800000                                           // 0000000704FC: BF800000

	.p2align	8
	.type	mul_long_get_group_id_x,@function
	.size	mul_long_get_group_id_x, mul_long_get_group_id_x_symend-mul_long_get_group_id_x
mul_long_get_group_id_x:
	s_clause 0x3                                               // 000000070500: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000070504: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000007050C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 000000070514: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007051C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000070524: CA240080 010200FF 000003FF
	s_lshl_b32 s7, s2, 1                                       // 000000070530: 84078102
	v_bfe_u32 v4, v0, 10, 10                                   // 000000070534: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007053C: D6100000 02292900
	s_waitcnt lgkmcnt(0)                                       // 000000070544: BF89FC07
	s_lshl_b32 s11, s4, 1                                      // 000000070548: 840B8104
	s_lshl_b32 s9, s3, 4                                       // 00000007054C: 84098403
	s_mov_b32 s33, 0                                           // 000000070550: BEA10080
	v_add3_u32 v2, s8, s7, v2                                  // 000000070554: D6550002 04080E08
	s_mul_i32 s2, s2, s5                                       // 00000007055C: 96020502
	v_mov_b32_e32 v3, v1                                       // 000000070560: 7E060301
	v_add3_u32 v6, s6, s11, v0                                 // 000000070564: D6550006 04001606
	v_mov_b32_e32 v0, s2                                       // 00000007056C: 7E000202
	v_add3_u32 v4, s10, s9, v4                                 // 000000070570: D6550004 0410120A
	s_mul_i32 s3, s3, s5                                       // 000000070578: 96030503
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007057C: D73C0002 00020483
	v_mov_b32_e32 v5, v1                                       // 000000070584: 7E0A0301
	s_mul_i32 s4, s4, s5                                       // 000000070588: 96040504
	v_mov_b32_e32 v7, v1                                       // 00000007058C: 7E0E0301
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000070590: BF870213
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000070594: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007059C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000705A0: DC6E0000 007C0002
	v_mov_b32_e32 v0, s3                                       // 0000000705A8: 7E000203
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000705AC: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000705B4: BF870111
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000705B8: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000705C0: 400A0A01
	global_store_b64 v[4:5], v[0:1], off                       // 0000000705C4: DC6E0000 007C0004
	v_mov_b32_e32 v0, s4                                       // 0000000705CC: 7E000204
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000705D0: D73C0002 00020C83
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000705D8: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000705DC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000705E4: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000705E8: DC6E0000 007C0002
	s_nop 0                                                    // 0000000705F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000705F4: BFB60003
	s_endpgm                                                   // 0000000705F8: BFB00000
mul_long_get_group_id_x_symend:
	.long 0xbf800000                                           // 0000000705FC: BF800000

	.p2align	8
	.type	mul_long_get_local_size_x,@function
	.size	mul_long_get_local_size_x, mul_long_get_local_size_x_symend-mul_long_get_local_size_x
mul_long_get_local_size_x:
	s_clause 0x1                                               // 000000070600: BF850001
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000070604: F4080300 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007060C: F4080200 F8000038
	s_add_u32 s5, s0, 16                                       // 000000070614: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000070618: BF89FC07
	s_addc_u32 s9, s1, 0                                       // 00000007061C: 82098001
	s_lshl_b32 s11, s2, 1                                      // 000000070620: 840B8102
	s_lshl_b32 s15, s3, 1                                      // 000000070624: 840F8103
	s_lshl_b32 s16, s4, 2                                      // 000000070628: 84108204
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007062C: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000070638: D6100004 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000070640: D610000A 02292900
	s_mov_b32 s33, 0                                           // 000000070648: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007064C: BF870003
	v_mov_b32_e32 v3, v1                                       // 000000070650: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000070654: 7E0A0301
	v_mov_b32_e32 v7, v1                                       // 000000070658: 7E0E0301
	s_cmp_lt_u32 s2, s12                                       // 00000007065C: BF0A0C02
	v_add3_u32 v2, s8, s11, v2                                 // 000000070660: D6550002 04081608
	s_cselect_b32 s2, 12, 18                                   // 000000070668: 9802928C
	v_add3_u32 v4, s10, s15, v4                                // 00000007066C: D6550004 04101E0A
	s_add_u32 s6, s5, s2                                       // 000000070674: 80060205
	s_addc_u32 s7, s9, 0                                       // 000000070678: 82078009
	s_cmp_lt_u32 s3, s13                                       // 00000007067C: BF0A0D03
	global_load_u16 v6, v1, s[6:7]                             // 000000070680: DC4A0000 06060001
	s_cselect_b32 s2, 14, 20                                   // 000000070688: 9802948E
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007068C: D73C0002 00020483
	s_add_u32 s2, s5, s2                                       // 000000070694: 80020205
	s_addc_u32 s3, s9, 0                                       // 000000070698: 82038009
	s_cmp_lt_u32 s4, s14                                       // 00000007069C: BF0A0E04
	global_load_u16 v8, v1, s[2:3]                             // 0000000706A0: DC4A0000 08020001
	s_cselect_b32 s2, 16, 22                                   // 0000000706A8: 98029690
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000706AC: D73C0004 00020883
	s_add_u32 s2, s5, s2                                       // 0000000706B4: 80020205
	s_addc_u32 s3, s9, 0                                       // 0000000706B8: 82038009
	global_load_u16 v9, v1, s[2:3]                             // 0000000706BC: DC4A0000 09020001
	s_clause 0x2                                               // 0000000706C4: BF850002
	s_load_b32 s4, s[0:1], null                                // 0000000706C8: F4000100 F8000000
	s_load_b64 s[2:3], s[0:1], 0x8                             // 0000000706D0: F4040080 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 0000000706D8: F4000000 F8000048
	s_waitcnt lgkmcnt(0)                                       // 0000000706E0: BF89FC07
	v_add_co_u32 v2, vcc_lo, s2, v2                            // 0000000706E4: D7006A02 00020402
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo             // 0000000706EC: 40060603
	s_waitcnt vmcnt(2)                                         // 0000000706F0: BF890BF7
	v_mul_lo_u32 v0, v6, s4                                    // 0000000706F4: D72C0000 00000906
	v_add3_u32 v6, s0, s16, v10                                // 0000000706FC: D6550006 04282000
	global_store_b64 v[2:3], v[0:1], off                       // 000000070704: DC6E0000 007C0002
	s_waitcnt vmcnt(1)                                         // 00000007070C: BF8907F7
	v_mul_lo_u32 v0, v8, s4                                    // 000000070710: D72C0000 00000908
	v_add_co_u32 v2, vcc_lo, s2, v4                            // 000000070718: D7006A02 00020802
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v5, vcc_lo             // 000000070720: 40060A03
	v_lshlrev_b64 v[4:5], 3, v[6:7]                            // 000000070724: D73C0004 00020C83
	global_store_b64 v[2:3], v[0:1], off                       // 00000007072C: DC6E0000 007C0002
	s_waitcnt vmcnt(0)                                         // 000000070734: BF8903F7
	v_mul_lo_u32 v0, v9, s4                                    // 000000070738: D72C0000 00000909
	v_add_co_u32 v2, vcc_lo, s2, v4                            // 000000070740: D7006A02 00020802
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v5, vcc_lo             // 000000070748: 40060A03
	global_store_b64 v[2:3], v[0:1], off                       // 00000007074C: DC6E0000 007C0002
	s_nop 0                                                    // 000000070754: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070758: BFB60003
	s_endpgm                                                   // 00000007075C: BFB00000
mul_long_get_local_size_x_symend:
	.long 0xbf800000                                           // 000000070760: BF800000
	.long 0xbf800000                                           // 000000070764: BF800000
	.long 0xbf800000                                           // 000000070768: BF800000
	.long 0xbf800000                                           // 00000007076C: BF800000
	.long 0xbf800000                                           // 000000070770: BF800000
	.long 0xbf800000                                           // 000000070774: BF800000
	.long 0xbf800000                                           // 000000070778: BF800000
	.long 0xbf800000                                           // 00000007077C: BF800000
	.long 0xbf800000                                           // 000000070780: BF800000
	.long 0xbf800000                                           // 000000070784: BF800000
	.long 0xbf800000                                           // 000000070788: BF800000
	.long 0xbf800000                                           // 00000007078C: BF800000
	.long 0xbf800000                                           // 000000070790: BF800000
	.long 0xbf800000                                           // 000000070794: BF800000
	.long 0xbf800000                                           // 000000070798: BF800000
	.long 0xbf800000                                           // 00000007079C: BF800000
	.long 0xbf800000                                           // 0000000707A0: BF800000
	.long 0xbf800000                                           // 0000000707A4: BF800000
	.long 0xbf800000                                           // 0000000707A8: BF800000
	.long 0xbf800000                                           // 0000000707AC: BF800000
	.long 0xbf800000                                           // 0000000707B0: BF800000
	.long 0xbf800000                                           // 0000000707B4: BF800000
	.long 0xbf800000                                           // 0000000707B8: BF800000
	.long 0xbf800000                                           // 0000000707BC: BF800000
	.long 0xbf800000                                           // 0000000707C0: BF800000
	.long 0xbf800000                                           // 0000000707C4: BF800000
	.long 0xbf800000                                           // 0000000707C8: BF800000
	.long 0xbf800000                                           // 0000000707CC: BF800000
	.long 0xbf800000                                           // 0000000707D0: BF800000
	.long 0xbf800000                                           // 0000000707D4: BF800000
	.long 0xbf800000                                           // 0000000707D8: BF800000
	.long 0xbf800000                                           // 0000000707DC: BF800000
	.long 0xbf800000                                           // 0000000707E0: BF800000
	.long 0xbf800000                                           // 0000000707E4: BF800000
	.long 0xbf800000                                           // 0000000707E8: BF800000
	.long 0xbf800000                                           // 0000000707EC: BF800000
	.long 0xbf800000                                           // 0000000707F0: BF800000
	.long 0xbf800000                                           // 0000000707F4: BF800000
	.long 0xbf800000                                           // 0000000707F8: BF800000
	.long 0xbf800000                                           // 0000000707FC: BF800000

	.p2align	8
	.type	mul_long_get_global_id_x,@function
	.size	mul_long_get_global_id_x, mul_long_get_global_id_x_symend-mul_long_get_global_id_x
mul_long_get_global_id_x:
	s_clause 0x3                                               // 000000070800: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000070804: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007080C: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000070814: F4040180 F8000008
	s_load_b32 s0, s[0:1], null                                // 00000007081C: F4000000 F8000000
	v_bfe_u32 v2, v0, 10, 10                                   // 000000070824: D6100002 02291500
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007082C: 360600FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 000000070834: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000007083C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000070840: BF8701D3
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000070844: D6560002 04090203
	v_mov_b32_e32 v1, 0                                        // 00000007084C: 7E020280
	v_lshl_or_b32 v0, s2, 1, v3                                // 000000070850: D6560000 040D0202
	v_lshl_or_b32 v8, s4, 2, v4                                // 000000070858: D6560008 04110404
	s_waitcnt lgkmcnt(0)                                       // 000000070860: BF89FC07
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v4, s10, v2     // 000000070864: CA200101 0504040A
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 00000007086C: BF870232
	v_add_nc_u32_e32 v8, s5, v8                                // 000000070870: 4A101005
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 000000070874: D73C0006 00020083
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v0, s8, v0      // 00000007087C: CA200101 03000008
	v_lshlrev_b64 v[10:11], 3, v[4:5]                          // 000000070884: D73C000A 00020883
	v_mov_b32_e32 v9, v1                                       // 00000007088C: 7E120301
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000070890: BF870214
	v_add_co_u32 v5, vcc_lo, s6, v6                            // 000000070894: D7006A05 00020C06
	v_mul_lo_u32 v2, v0, s0                                    // 00000007089C: D72C0002 00000100
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v7, vcc_lo             // 0000000708A4: 400C0E07
	v_mul_lo_u32 v0, v4, s0                                    // 0000000708A8: D72C0000 00000104
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 0000000708B0: D7006A0A 00021406
	v_lshlrev_b64 v[12:13], 3, v[8:9]                          // 0000000708B8: D73C000C 00021083
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 0000000708C0: 40161607
	s_clause 0x1                                               // 0000000708C4: BF850001
	global_store_b64 v[5:6], v[2:3], off                       // 0000000708C8: DC6E0000 007C0205
	global_store_b64 v[10:11], v[0:1], off                     // 0000000708D0: DC6E0000 007C000A
	v_mul_lo_u32 v0, v8, s0                                    // 0000000708D8: D72C0000 00000108
	v_add_co_u32 v2, vcc_lo, s6, v12                           // 0000000708E0: D7006A02 00021806
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v13, vcc_lo            // 0000000708E8: 40061A07
	global_store_b64 v[2:3], v[0:1], off                       // 0000000708EC: DC6E0000 007C0002
	s_nop 0                                                    // 0000000708F4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000708F8: BFB60003
	s_endpgm                                                   // 0000000708FC: BFB00000
mul_long_get_global_id_x_symend:

	.p2align	8
	.type	mul_long_get_global_size_x,@function
	.size	mul_long_get_global_size_x, mul_long_get_global_size_x_symend-mul_long_get_global_size_x
mul_long_get_global_size_x:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000070900: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000007090C: 84028402
	v_bfe_u32 v10, v0, 10, 10                                  // 000000070910: D610000A 02291500
	v_bfe_u32 v11, v0, 20, 10                                  // 000000070918: D610000B 02292900
	s_clause 0x1                                               // 000000070920: BF850001
	global_load_b32 v8, v1, s[0:1] offset:34                   // 000000070924: DC520022 08000001
	global_load_u16 v9, v1, s[0:1] offset:38                   // 00000007092C: DC4A0026 09000001
	s_clause 0x4                                               // 000000070934: BF850004
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000070938: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000070940: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x8                                 // 000000070948: F4000140 F8000008
	s_load_b32 s6, s[0:1], 0x48                                // 000000070950: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000070958: F4040000 F8000000
	v_mov_b32_e32 v3, v1                                       // 000000070960: 7E060301
	s_lshl_b32 s3, s3, 1                                       // 000000070964: 84038103
	v_mov_b32_e32 v4, v1                                       // 000000070968: 7E080301
	s_lshl_b32 s4, s4, 1                                       // 00000007096C: 84048104
	s_mov_b32 s33, 0                                           // 000000070970: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070974: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 000000070978: D6550002 04080408
	s_lshl_b32 s2, s12, 4                                      // 000000070980: 8402840C
	s_waitcnt vmcnt(1)                                         // 000000070984: BF8907F7
	v_dual_mov_b32 v5, v1 :: v_dual_and_b32 v6, 0xffff, v8     // 000000070988: CA240101 050610FF 0000FFFF
	s_delay_alu instid0(VALU_DEP_1)                            // 000000070994: BF870001
	v_add_nc_u32_e32 v0, s2, v6                                // 000000070998: 4A000C02
	v_lshlrev_b64 v[6:7], 3, v[2:3]                            // 00000007099C: D73C0006 00020483
	v_add3_u32 v3, s10, s3, v10                                // 0000000709A4: D6550003 0428060A
	v_lshrrev_b32_e32 v2, 16, v8                               // 0000000709AC: 32041090
	s_lshl_b32 s2, s13, 1                                      // 0000000709B0: 8402810D
	v_mul_lo_u32 v0, v0, s5                                    // 0000000709B4: D72C0000 00000B00
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000709BC: BF870004
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 0000000709C0: D7006A06 00020C00
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 0000000709C8: 400E0E01
	v_add_nc_u32_e32 v8, s2, v2                                // 0000000709CC: 4A100402
	v_lshlrev_b64 v[2:3], 3, v[3:4]                            // 0000000709D0: D73C0002 00020683
	v_add3_u32 v4, s6, s4, v11                                 // 0000000709D8: D6550004 042C0806
	global_store_b64 v[6:7], v[0:1], off                       // 0000000709E0: DC6E0000 007C0006
	s_lshl_b32 s2, s14, 1                                      // 0000000709E8: 8402810E
	v_mul_lo_u32 v0, v8, s5                                    // 0000000709EC: D72C0000 00000B08
	s_waitcnt vmcnt(0)                                         // 0000000709F4: BF8903F7
	v_add_nc_u32_e32 v6, s2, v9                                // 0000000709F8: 4A0C1202
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000709FC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000070A04: 40060601
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000070A08: D73C0004 00020883
	global_store_b64 v[2:3], v[0:1], off                       // 000000070A10: DC6E0000 007C0002
	v_mul_lo_u32 v0, v6, s5                                    // 000000070A18: D72C0000 00000B06
	v_add_co_u32 v2, vcc_lo, s0, v4                            // 000000070A20: D7006A02 00020800
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v5, vcc_lo             // 000000070A28: 40060A01
	global_store_b64 v[2:3], v[0:1], off                       // 000000070A2C: DC6E0000 007C0002
	s_nop 0                                                    // 000000070A34: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070A38: BFB60003
	s_endpgm                                                   // 000000070A3C: BFB00000
mul_long_get_global_size_x_symend:
	.long 0xbf800000                                           // 000000070A40: BF800000
	.long 0xbf800000                                           // 000000070A44: BF800000
	.long 0xbf800000                                           // 000000070A48: BF800000
	.long 0xbf800000                                           // 000000070A4C: BF800000
	.long 0xbf800000                                           // 000000070A50: BF800000
	.long 0xbf800000                                           // 000000070A54: BF800000
	.long 0xbf800000                                           // 000000070A58: BF800000
	.long 0xbf800000                                           // 000000070A5C: BF800000
	.long 0xbf800000                                           // 000000070A60: BF800000
	.long 0xbf800000                                           // 000000070A64: BF800000
	.long 0xbf800000                                           // 000000070A68: BF800000
	.long 0xbf800000                                           // 000000070A6C: BF800000
	.long 0xbf800000                                           // 000000070A70: BF800000
	.long 0xbf800000                                           // 000000070A74: BF800000
	.long 0xbf800000                                           // 000000070A78: BF800000
	.long 0xbf800000                                           // 000000070A7C: BF800000
	.long 0xbf800000                                           // 000000070A80: BF800000
	.long 0xbf800000                                           // 000000070A84: BF800000
	.long 0xbf800000                                           // 000000070A88: BF800000
	.long 0xbf800000                                           // 000000070A8C: BF800000
	.long 0xbf800000                                           // 000000070A90: BF800000
	.long 0xbf800000                                           // 000000070A94: BF800000
	.long 0xbf800000                                           // 000000070A98: BF800000
	.long 0xbf800000                                           // 000000070A9C: BF800000
	.long 0xbf800000                                           // 000000070AA0: BF800000
	.long 0xbf800000                                           // 000000070AA4: BF800000
	.long 0xbf800000                                           // 000000070AA8: BF800000
	.long 0xbf800000                                           // 000000070AAC: BF800000
	.long 0xbf800000                                           // 000000070AB0: BF800000
	.long 0xbf800000                                           // 000000070AB4: BF800000
	.long 0xbf800000                                           // 000000070AB8: BF800000
	.long 0xbf800000                                           // 000000070ABC: BF800000
	.long 0xbf800000                                           // 000000070AC0: BF800000
	.long 0xbf800000                                           // 000000070AC4: BF800000
	.long 0xbf800000                                           // 000000070AC8: BF800000
	.long 0xbf800000                                           // 000000070ACC: BF800000
	.long 0xbf800000                                           // 000000070AD0: BF800000
	.long 0xbf800000                                           // 000000070AD4: BF800000
	.long 0xbf800000                                           // 000000070AD8: BF800000
	.long 0xbf800000                                           // 000000070ADC: BF800000
	.long 0xbf800000                                           // 000000070AE0: BF800000
	.long 0xbf800000                                           // 000000070AE4: BF800000
	.long 0xbf800000                                           // 000000070AE8: BF800000
	.long 0xbf800000                                           // 000000070AEC: BF800000
	.long 0xbf800000                                           // 000000070AF0: BF800000
	.long 0xbf800000                                           // 000000070AF4: BF800000
	.long 0xbf800000                                           // 000000070AF8: BF800000
	.long 0xbf800000                                           // 000000070AFC: BF800000

	.p2align	8
	.type	mul_long_get_num_groups_x,@function
	.size	mul_long_get_num_groups_x, mul_long_get_num_groups_x_symend-mul_long_get_num_groups_x
mul_long_get_num_groups_x:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000070B00: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000070B0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000070B14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000070B1C: BEA10080
	s_clause 0x1                                               // 000000070B20: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000070B24: DC520022 06000001
	global_load_u16 v8, v1, s[0:1] offset:38                   // 000000070B2C: DC4A0026 08000001
	s_clause 0x2                                               // 000000070B34: BF850002
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000070B38: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000070B40: F4000140 F8000048
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000070B48: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 000000070B50: BF89FC07
	s_clause 0x1                                               // 000000070B54: BF850001
	s_load_b32 s11, s[0:1], null                               // 000000070B58: F40002C0 F8000000
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000070B60: F4040180 F8000008
	s_lshl_b32 s0, s2, 1                                       // 000000070B68: 84008102
	s_lshl_b32 s1, s3, 1                                       // 000000070B6C: 84018103
	s_lshl_b32 s2, s4, 2                                       // 000000070B70: 84028204
	v_add3_u32 v4, s14, s1, v4                                 // 000000070B74: D6550004 0410020E
	v_add3_u32 v2, s12, s0, v2                                 // 000000070B7C: D6550002 0408000C
	s_waitcnt vmcnt(1)                                         // 000000070B84: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 000000070B88: 7C7A0C80
	v_lshrrev_b32_e32 v9, 16, v6                               // 000000070B8C: 32120C90
	v_add3_u32 v6, s5, s2, v0                                  // 000000070B90: D6550006 04000405
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000070B98: BF07806A
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000070B9C: BF8704C2
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 000000070BA0: 7C7A1280
	s_addc_u32 s1, s8, 0                                       // 000000070BA4: 82018008
	s_waitcnt lgkmcnt(0)                                       // 000000070BA8: BF89FC07
	s_mul_i32 s1, s1, s11                                      // 000000070BAC: 96010B01
	v_dual_mov_b32 v3, v1 :: v_dual_mov_b32 v0, s1             // 000000070BB0: CA100101 03000001
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000070BB8: BF07806A
	s_addc_u32 s1, s9, 0                                       // 000000070BBC: 82018009
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000070BC0: BF870131
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000070BC4: D73C0002 00020483
	s_mul_i32 s1, s1, s11                                      // 000000070BCC: 96010B01
	v_mov_b32_e32 v5, v1                                       // 000000070BD0: 7E0A0301
	v_add_co_u32 v2, s0, s6, v2                                // 000000070BD4: D7000002 00020406
	s_delay_alu instid0(VALU_DEP_1)                            // 000000070BDC: BF870001
	v_add_co_ci_u32_e64 v3, s0, s7, v3, s0                     // 000000070BE0: D5200003 00020607
	s_waitcnt vmcnt(0)                                         // 000000070BE8: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 000000070BEC: D43D0000 00021080
	global_store_b64 v[2:3], v[0:1], off                       // 000000070BF4: DC6E0000 007C0002
	v_mov_b32_e32 v0, s1                                       // 000000070BFC: 7E000201
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000070C00: D73C0004 00020883
	s_cmp_lg_u32 s0, 0                                         // 000000070C08: BF078000
	s_addc_u32 s0, s10, 0                                      // 000000070C0C: 8200800A
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070C10: BF870099
	s_mul_i32 s0, s0, s11                                      // 000000070C14: 96000B00
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000070C18: D7006A04 00020806
	v_mov_b32_e32 v7, v1                                       // 000000070C20: 7E0E0301
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000070C24: 400A0A07
	global_store_b64 v[4:5], v[0:1], off                       // 000000070C28: DC6E0000 007C0004
	v_mov_b32_e32 v0, s0                                       // 000000070C30: 7E000200
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 000000070C34: D73C0002 00020C83
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070C3C: BF870111
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000070C40: D7006A02 00020406
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000070C48: 40060607
	global_store_b64 v[2:3], v[0:1], off                       // 000000070C4C: DC6E0000 007C0002
	s_nop 0                                                    // 000000070C54: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070C58: BFB60003
	s_endpgm                                                   // 000000070C5C: BFB00000
mul_long_get_num_groups_x_symend:
	.long 0xbf800000                                           // 000000070C60: BF800000
	.long 0xbf800000                                           // 000000070C64: BF800000
	.long 0xbf800000                                           // 000000070C68: BF800000
	.long 0xbf800000                                           // 000000070C6C: BF800000
	.long 0xbf800000                                           // 000000070C70: BF800000
	.long 0xbf800000                                           // 000000070C74: BF800000
	.long 0xbf800000                                           // 000000070C78: BF800000
	.long 0xbf800000                                           // 000000070C7C: BF800000
	.long 0xbf800000                                           // 000000070C80: BF800000
	.long 0xbf800000                                           // 000000070C84: BF800000
	.long 0xbf800000                                           // 000000070C88: BF800000
	.long 0xbf800000                                           // 000000070C8C: BF800000
	.long 0xbf800000                                           // 000000070C90: BF800000
	.long 0xbf800000                                           // 000000070C94: BF800000
	.long 0xbf800000                                           // 000000070C98: BF800000
	.long 0xbf800000                                           // 000000070C9C: BF800000
	.long 0xbf800000                                           // 000000070CA0: BF800000
	.long 0xbf800000                                           // 000000070CA4: BF800000
	.long 0xbf800000                                           // 000000070CA8: BF800000
	.long 0xbf800000                                           // 000000070CAC: BF800000
	.long 0xbf800000                                           // 000000070CB0: BF800000
	.long 0xbf800000                                           // 000000070CB4: BF800000
	.long 0xbf800000                                           // 000000070CB8: BF800000
	.long 0xbf800000                                           // 000000070CBC: BF800000
	.long 0xbf800000                                           // 000000070CC0: BF800000
	.long 0xbf800000                                           // 000000070CC4: BF800000
	.long 0xbf800000                                           // 000000070CC8: BF800000
	.long 0xbf800000                                           // 000000070CCC: BF800000
	.long 0xbf800000                                           // 000000070CD0: BF800000
	.long 0xbf800000                                           // 000000070CD4: BF800000
	.long 0xbf800000                                           // 000000070CD8: BF800000
	.long 0xbf800000                                           // 000000070CDC: BF800000
	.long 0xbf800000                                           // 000000070CE0: BF800000
	.long 0xbf800000                                           // 000000070CE4: BF800000
	.long 0xbf800000                                           // 000000070CE8: BF800000
	.long 0xbf800000                                           // 000000070CEC: BF800000
	.long 0xbf800000                                           // 000000070CF0: BF800000
	.long 0xbf800000                                           // 000000070CF4: BF800000
	.long 0xbf800000                                           // 000000070CF8: BF800000
	.long 0xbf800000                                           // 000000070CFC: BF800000

	.p2align	8
	.type	mul_long_get_work_dim_x,@function
	.size	mul_long_get_work_dim_x, mul_long_get_work_dim_x_symend-mul_long_get_work_dim_x
mul_long_get_work_dim_x:
	s_clause 0x3                                               // 000000070D00: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 000000070D04: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x50                                // 000000070D0C: F4000100 F8000050
	s_load_b32 s5, s[0:1], null                                // 000000070D14: F4000140 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070D1C: F4040000 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000070D24: 84028102
	s_mov_b32 s33, 0                                           // 000000070D28: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070D2C: BF89FC07
	v_add3_u32 v2, s3, s2, v0                                  // 000000070D30: D6550002 04000403
	s_and_b32 s2, s4, 0xffff                                   // 000000070D38: 8B02FF04 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 000000070D40: BF870499
	s_mul_i32 s2, s2, s5                                       // 000000070D44: 96020502
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v0, s2              // 000000070D48: CA100080 01000002
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070D50: BF870091
	v_mov_b32_e32 v3, v1                                       // 000000070D54: 7E060301
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000070D58: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070D60: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000070D64: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000070D6C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000070D70: DC6E0000 007C0002
	s_nop 0                                                    // 000000070D78: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070D7C: BFB60003
	s_endpgm                                                   // 000000070D80: BFB00000
mul_long_get_work_dim_x_symend:
	.long 0xbf800000                                           // 000000070D84: BF800000
	.long 0xbf800000                                           // 000000070D88: BF800000
	.long 0xbf800000                                           // 000000070D8C: BF800000
	.long 0xbf800000                                           // 000000070D90: BF800000
	.long 0xbf800000                                           // 000000070D94: BF800000
	.long 0xbf800000                                           // 000000070D98: BF800000
	.long 0xbf800000                                           // 000000070D9C: BF800000
	.long 0xbf800000                                           // 000000070DA0: BF800000
	.long 0xbf800000                                           // 000000070DA4: BF800000
	.long 0xbf800000                                           // 000000070DA8: BF800000
	.long 0xbf800000                                           // 000000070DAC: BF800000
	.long 0xbf800000                                           // 000000070DB0: BF800000
	.long 0xbf800000                                           // 000000070DB4: BF800000
	.long 0xbf800000                                           // 000000070DB8: BF800000
	.long 0xbf800000                                           // 000000070DBC: BF800000
	.long 0xbf800000                                           // 000000070DC0: BF800000
	.long 0xbf800000                                           // 000000070DC4: BF800000
	.long 0xbf800000                                           // 000000070DC8: BF800000
	.long 0xbf800000                                           // 000000070DCC: BF800000
	.long 0xbf800000                                           // 000000070DD0: BF800000
	.long 0xbf800000                                           // 000000070DD4: BF800000
	.long 0xbf800000                                           // 000000070DD8: BF800000
	.long 0xbf800000                                           // 000000070DDC: BF800000
	.long 0xbf800000                                           // 000000070DE0: BF800000
	.long 0xbf800000                                           // 000000070DE4: BF800000
	.long 0xbf800000                                           // 000000070DE8: BF800000
	.long 0xbf800000                                           // 000000070DEC: BF800000
	.long 0xbf800000                                           // 000000070DF0: BF800000
	.long 0xbf800000                                           // 000000070DF4: BF800000
	.long 0xbf800000                                           // 000000070DF8: BF800000
	.long 0xbf800000                                           // 000000070DFC: BF800000

	.p2align	8
	.type	mul_long_x_get_global_offset,@function
	.size	mul_long_x_get_global_offset, mul_long_x_get_global_offset_symend-mul_long_x_get_global_offset
mul_long_x_get_global_offset:
	s_clause 0x3                                               // 000000070E00: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 000000070E04: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000070E0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], null                            // 000000070E14: F4040180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000070E1C: F4040000 F8000048
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000070E24: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000070E30: 84028402
	v_bfe_u32 v7, v0, 10, 10                                   // 000000070E34: D6100007 02291500
	s_lshl_b32 s3, s3, 1                                       // 000000070E3C: 84038103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000070E40: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000070E48: 84048104
	s_mov_b32 s33, 0                                           // 000000070E4C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070E50: BF89FC07
	s_ashr_i32 s12, s5, 31                                     // 000000070E54: 860C9F05
	v_add3_u32 v1, s8, s2, v1                                  // 000000070E58: D6550001 04040408
	s_mul_hi_u32 s13, s8, s5                                   // 000000070E60: 968D0508
	s_mul_i32 s14, s8, s5                                      // 000000070E64: 960E0508
	s_mul_i32 s8, s8, s12                                      // 000000070E68: 96080C08
	s_mul_hi_u32 s2, s10, s5                                   // 000000070E6C: 9682050A
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000070E70: D73C0005 00020283
	v_add3_u32 v1, s10, s3, v7                                 // 000000070E78: D6550001 041C060A
	s_add_i32 s8, s13, s8                                      // 000000070E80: 8108080D
	s_mul_i32 s13, s10, s12                                    // 000000070E84: 960D0C0A
	s_mul_i32 s11, s11, s5                                     // 000000070E88: 960B050B
	s_add_i32 s2, s2, s13                                      // 000000070E8C: 81020D02
	v_lshlrev_b64 v[9:10], 3, v[1:2]                           // 000000070E90: D73C0009 00020283
	v_add3_u32 v1, s0, s4, v0                                  // 000000070E98: D6550001 04000800
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 000000070EA0: D7006A05 00020A06
	s_mul_i32 s3, s10, s5                                      // 000000070EA8: 9603050A
	s_add_i32 s2, s2, s11                                      // 000000070EAC: 81020B02
	s_delay_alu instid0(VALU_DEP_2)                            // 000000070EB0: BF870002
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000070EB4: D73C0000 00020283
	s_mul_i32 s9, s9, s5                                       // 000000070EBC: 96090509
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 000000070EC0: 400C0C07
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v8, s2             // 000000070EC4: CA100003 07080002
	s_mul_hi_u32 s2, s0, s5                                    // 000000070ECC: 96820500
	s_mul_i32 s3, s0, s12                                      // 000000070ED0: 96030C00
	v_add_co_u32 v9, vcc_lo, s6, v9                            // 000000070ED4: D7006A09 00021206
	s_add_i32 s8, s8, s9                                       // 000000070EDC: 81080908
	s_add_i32 s2, s2, s3                                       // 000000070EE0: 81020302
	s_mul_i32 s1, s1, s5                                       // 000000070EE4: 96010501
	v_add_co_ci_u32_e32 v10, vcc_lo, s7, v10, vcc_lo           // 000000070EE8: 40141407
	v_dual_mov_b32 v3, s14 :: v_dual_mov_b32 v4, s8            // 000000070EEC: CA10000E 03040008
	s_mul_i32 s0, s0, s5                                       // 000000070EF4: 96000500
	s_add_i32 s2, s2, s1                                       // 000000070EF8: 81020102
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000070EFC: D7006A00 00020006
	v_dual_mov_b32 v11, s0 :: v_dual_mov_b32 v12, s2           // 000000070F04: CA100000 0B0C0002
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000070F0C: 40020207
	s_clause 0x2                                               // 000000070F10: BF850002
	global_store_b64 v[5:6], v[3:4], off                       // 000000070F14: DC6E0000 007C0305
	global_store_b64 v[9:10], v[7:8], off                      // 000000070F1C: DC6E0000 007C0709
	global_store_b64 v[0:1], v[11:12], off                     // 000000070F24: DC6E0000 007C0B00
	s_nop 0                                                    // 000000070F2C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070F30: BFB60003
	s_endpgm                                                   // 000000070F34: BFB00000
mul_long_x_get_global_offset_symend:
	.long 0xbf800000                                           // 000000070F38: BF800000
	.long 0xbf800000                                           // 000000070F3C: BF800000
	.long 0xbf800000                                           // 000000070F40: BF800000
	.long 0xbf800000                                           // 000000070F44: BF800000
	.long 0xbf800000                                           // 000000070F48: BF800000
	.long 0xbf800000                                           // 000000070F4C: BF800000
	.long 0xbf800000                                           // 000000070F50: BF800000
	.long 0xbf800000                                           // 000000070F54: BF800000
	.long 0xbf800000                                           // 000000070F58: BF800000
	.long 0xbf800000                                           // 000000070F5C: BF800000
	.long 0xbf800000                                           // 000000070F60: BF800000
	.long 0xbf800000                                           // 000000070F64: BF800000
	.long 0xbf800000                                           // 000000070F68: BF800000
	.long 0xbf800000                                           // 000000070F6C: BF800000
	.long 0xbf800000                                           // 000000070F70: BF800000
	.long 0xbf800000                                           // 000000070F74: BF800000
	.long 0xbf800000                                           // 000000070F78: BF800000
	.long 0xbf800000                                           // 000000070F7C: BF800000
	.long 0xbf800000                                           // 000000070F80: BF800000
	.long 0xbf800000                                           // 000000070F84: BF800000
	.long 0xbf800000                                           // 000000070F88: BF800000
	.long 0xbf800000                                           // 000000070F8C: BF800000
	.long 0xbf800000                                           // 000000070F90: BF800000
	.long 0xbf800000                                           // 000000070F94: BF800000
	.long 0xbf800000                                           // 000000070F98: BF800000
	.long 0xbf800000                                           // 000000070F9C: BF800000
	.long 0xbf800000                                           // 000000070FA0: BF800000
	.long 0xbf800000                                           // 000000070FA4: BF800000
	.long 0xbf800000                                           // 000000070FA8: BF800000
	.long 0xbf800000                                           // 000000070FAC: BF800000
	.long 0xbf800000                                           // 000000070FB0: BF800000
	.long 0xbf800000                                           // 000000070FB4: BF800000
	.long 0xbf800000                                           // 000000070FB8: BF800000
	.long 0xbf800000                                           // 000000070FBC: BF800000
	.long 0xbf800000                                           // 000000070FC0: BF800000
	.long 0xbf800000                                           // 000000070FC4: BF800000
	.long 0xbf800000                                           // 000000070FC8: BF800000
	.long 0xbf800000                                           // 000000070FCC: BF800000
	.long 0xbf800000                                           // 000000070FD0: BF800000
	.long 0xbf800000                                           // 000000070FD4: BF800000
	.long 0xbf800000                                           // 000000070FD8: BF800000
	.long 0xbf800000                                           // 000000070FDC: BF800000
	.long 0xbf800000                                           // 000000070FE0: BF800000
	.long 0xbf800000                                           // 000000070FE4: BF800000
	.long 0xbf800000                                           // 000000070FE8: BF800000
	.long 0xbf800000                                           // 000000070FEC: BF800000
	.long 0xbf800000                                           // 000000070FF0: BF800000
	.long 0xbf800000                                           // 000000070FF4: BF800000
	.long 0xbf800000                                           // 000000070FF8: BF800000
	.long 0xbf800000                                           // 000000070FFC: BF800000

	.p2align	8
	.type	mul_long_get_global_offset_get_global_offset,@function
	.size	mul_long_get_global_offset_get_global_offset, mul_long_get_global_offset_get_global_offset_symend-mul_long_get_global_offset_get_global_offset
mul_long_get_global_offset_get_global_offset:
	s_clause 0x2                                               // 000000071000: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071004: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007100C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000071014: F4040000 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007101C: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000071028: 84028102
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007102C: D6100003 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000071034: D610000A 02292900
	s_lshl_b32 s3, s3, 4                                       // 00000007103C: 84038403
	s_lshl_b32 s4, s4, 1                                       // 000000071040: 84048104
	s_mov_b32 s33, 0                                           // 000000071044: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071048: BF89FC07
	v_add3_u32 v0, s8, s2, v2                                  // 00000007104C: D6550000 04080408
	s_mul_i32 s5, s8, s9                                       // 000000071054: 96050908
	s_mul_hi_u32 s9, s8, s8                                    // 000000071058: 96890808
	s_mul_i32 s12, s8, s8                                      // 00000007105C: 960C0808
	s_mul_i32 s2, s10, s11                                     // 000000071060: 96020B0A
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000071064: D73C0004 00020083
	v_add3_u32 v0, s10, s3, v3                                 // 00000007106C: D6550000 040C060A
	s_mul_hi_u32 s8, s10, s10                                  // 000000071074: 96880A0A
	s_add_i32 s9, s9, s5                                       // 000000071078: 81090509
	s_add_i32 s8, s8, s2                                       // 00000007107C: 81080208
	s_mul_i32 s1, s0, s1                                       // 000000071080: 96010100
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000071084: D73C0008 00020083
	v_add3_u32 v0, s0, s4, v10                                 // 00000007108C: D6550000 04280800
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000071094: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 00000007109C: 400A0A07
	s_delay_alu instid0(VALU_DEP_3)                            // 0000000710A0: BF870003
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000710A4: D73C0000 00020083
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 0000000710AC: D7006A08 00021006
	s_mul_hi_u32 s2, s0, s0                                    // 0000000710B4: 96820000
	s_mul_i32 s11, s10, s10                                    // 0000000710B8: 960B0A0A
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 0000000710BC: 40121207
	v_dual_mov_b32 v2, s12 :: v_dual_mov_b32 v3, s9            // 0000000710C0: CA10000C 02020009
	s_mul_i32 s0, s0, s0                                       // 0000000710C8: 96000000
	s_add_i32 s2, s2, s1                                       // 0000000710CC: 81020102
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000710D0: D7006A00 00020006
	v_dual_mov_b32 v6, s11 :: v_dual_mov_b32 v7, s8            // 0000000710D8: CA10000B 06060008
	v_dual_mov_b32 v10, s0 :: v_dual_mov_b32 v11, s2           // 0000000710E0: CA100000 0A0A0002
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000710E8: 40020207
	s_clause 0x2                                               // 0000000710EC: BF850002
	global_store_b64 v[4:5], v[2:3], off                       // 0000000710F0: DC6E0000 007C0204
	global_store_b64 v[8:9], v[6:7], off                       // 0000000710F8: DC6E0000 007C0608
	global_store_b64 v[0:1], v[10:11], off                     // 000000071100: DC6E0000 007C0A00
	s_nop 0                                                    // 000000071108: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007110C: BFB60003
	s_endpgm                                                   // 000000071110: BFB00000
mul_long_get_global_offset_get_global_offset_symend:
	.long 0xbf800000                                           // 000000071114: BF800000
	.long 0xbf800000                                           // 000000071118: BF800000
	.long 0xbf800000                                           // 00000007111C: BF800000
	.long 0xbf800000                                           // 000000071120: BF800000
	.long 0xbf800000                                           // 000000071124: BF800000
	.long 0xbf800000                                           // 000000071128: BF800000
	.long 0xbf800000                                           // 00000007112C: BF800000
	.long 0xbf800000                                           // 000000071130: BF800000
	.long 0xbf800000                                           // 000000071134: BF800000
	.long 0xbf800000                                           // 000000071138: BF800000
	.long 0xbf800000                                           // 00000007113C: BF800000
	.long 0xbf800000                                           // 000000071140: BF800000
	.long 0xbf800000                                           // 000000071144: BF800000
	.long 0xbf800000                                           // 000000071148: BF800000
	.long 0xbf800000                                           // 00000007114C: BF800000
	.long 0xbf800000                                           // 000000071150: BF800000
	.long 0xbf800000                                           // 000000071154: BF800000
	.long 0xbf800000                                           // 000000071158: BF800000
	.long 0xbf800000                                           // 00000007115C: BF800000
	.long 0xbf800000                                           // 000000071160: BF800000
	.long 0xbf800000                                           // 000000071164: BF800000
	.long 0xbf800000                                           // 000000071168: BF800000
	.long 0xbf800000                                           // 00000007116C: BF800000
	.long 0xbf800000                                           // 000000071170: BF800000
	.long 0xbf800000                                           // 000000071174: BF800000
	.long 0xbf800000                                           // 000000071178: BF800000
	.long 0xbf800000                                           // 00000007117C: BF800000
	.long 0xbf800000                                           // 000000071180: BF800000
	.long 0xbf800000                                           // 000000071184: BF800000
	.long 0xbf800000                                           // 000000071188: BF800000
	.long 0xbf800000                                           // 00000007118C: BF800000
	.long 0xbf800000                                           // 000000071190: BF800000
	.long 0xbf800000                                           // 000000071194: BF800000
	.long 0xbf800000                                           // 000000071198: BF800000
	.long 0xbf800000                                           // 00000007119C: BF800000
	.long 0xbf800000                                           // 0000000711A0: BF800000
	.long 0xbf800000                                           // 0000000711A4: BF800000
	.long 0xbf800000                                           // 0000000711A8: BF800000
	.long 0xbf800000                                           // 0000000711AC: BF800000
	.long 0xbf800000                                           // 0000000711B0: BF800000
	.long 0xbf800000                                           // 0000000711B4: BF800000
	.long 0xbf800000                                           // 0000000711B8: BF800000
	.long 0xbf800000                                           // 0000000711BC: BF800000
	.long 0xbf800000                                           // 0000000711C0: BF800000
	.long 0xbf800000                                           // 0000000711C4: BF800000
	.long 0xbf800000                                           // 0000000711C8: BF800000
	.long 0xbf800000                                           // 0000000711CC: BF800000
	.long 0xbf800000                                           // 0000000711D0: BF800000
	.long 0xbf800000                                           // 0000000711D4: BF800000
	.long 0xbf800000                                           // 0000000711D8: BF800000
	.long 0xbf800000                                           // 0000000711DC: BF800000
	.long 0xbf800000                                           // 0000000711E0: BF800000
	.long 0xbf800000                                           // 0000000711E4: BF800000
	.long 0xbf800000                                           // 0000000711E8: BF800000
	.long 0xbf800000                                           // 0000000711EC: BF800000
	.long 0xbf800000                                           // 0000000711F0: BF800000
	.long 0xbf800000                                           // 0000000711F4: BF800000
	.long 0xbf800000                                           // 0000000711F8: BF800000
	.long 0xbf800000                                           // 0000000711FC: BF800000

	.p2align	8
	.type	mul_long_get_local_id_get_global_offset,@function
	.size	mul_long_get_local_id_get_global_offset, mul_long_get_local_id_get_global_offset_symend-mul_long_get_local_id_get_global_offset
mul_long_get_local_id_get_global_offset:
	s_clause 0x2                                               // 000000071200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071204: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007120C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000071214: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v14, 0x3ff, v0      // 00000007121C: CA240080 010E00FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000071228: 84028302
	v_bfe_u32 v15, v0, 10, 10                                  // 00000007122C: D610000F 02291500
	v_bfe_u32 v16, v0, 20, 10                                  // 000000071234: D6100010 02292900
	s_mov_b32 s33, 0                                           // 00000007123C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071240: BF89FC07
	v_add3_u32 v0, s8, s2, v14                                 // 000000071244: D6550000 04380408
	s_lshl_b32 s2, s3, 2                                       // 00000007124C: 84028203
	v_mad_u64_u32 v[2:3], null, s8, v14, 0                     // 000000071250: D6FE7C02 02021C08
	v_mad_u64_u32 v[4:5], null, s10, v15, 0                    // 000000071258: D6FE7C04 02021E0A
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000071260: BF870143
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000071264: D73C0008 00020083
	v_add3_u32 v0, s10, s2, v15                                // 00000007126C: D6550000 043C040A
	v_mad_u64_u32 v[6:7], null, s6, v16, 0                     // 000000071274: D6FE7C06 02022006
	s_lshl_b32 s2, s4, 1                                       // 00000007127C: 84028104
	v_lshlrev_b64 v[10:11], 3, v[0:1]                          // 000000071280: D73C000A 00020083
	v_add3_u32 v0, s6, s2, v16                                 // 000000071288: D6550000 04400406
	v_add_co_u32 v8, vcc_lo, s0, v8                            // 000000071290: D7006A08 00021000
	v_mad_u64_u32 v[12:13], null, s9, v14, v[3:4]              // 000000071298: D6FE7C0C 040E1C09
	v_mad_u64_u32 v[13:14], null, s11, v15, v[5:6]             // 0000000712A0: D6FE7C0D 04161E0B
	s_delay_alu instid0(VALU_DEP_3)                            // 0000000712A8: BF870003
	v_mad_u64_u32 v[14:15], null, s7, v16, v[7:8]              // 0000000712AC: D6FE7C0E 041E2007
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000712B4: D73C0000 00020083
	v_add_co_ci_u32_e32 v9, vcc_lo, s1, v9, vcc_lo             // 0000000712BC: 40121201
	v_add_co_u32 v10, vcc_lo, s0, v10                          // 0000000712C0: D7006A0A 00021400
	v_add_co_ci_u32_e32 v11, vcc_lo, s1, v11, vcc_lo           // 0000000712C8: 40161601
	v_mov_b32_e32 v3, v12                                      // 0000000712CC: 7E06030C
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000712D0: D7006A00 00020000
	v_mov_b32_e32 v5, v13                                      // 0000000712D8: 7E0A030D
	v_mov_b32_e32 v7, v14                                      // 0000000712DC: 7E0E030E
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000712E0: 40020201
	s_clause 0x2                                               // 0000000712E4: BF850002
	global_store_b64 v[8:9], v[2:3], off                       // 0000000712E8: DC6E0000 007C0208
	global_store_b64 v[10:11], v[4:5], off                     // 0000000712F0: DC6E0000 007C040A
	global_store_b64 v[0:1], v[6:7], off                       // 0000000712F8: DC6E0000 007C0600
	s_nop 0                                                    // 000000071300: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071304: BFB60003
	s_endpgm                                                   // 000000071308: BFB00000
mul_long_get_local_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007130C: BF800000
	.long 0xbf800000                                           // 000000071310: BF800000
	.long 0xbf800000                                           // 000000071314: BF800000
	.long 0xbf800000                                           // 000000071318: BF800000
	.long 0xbf800000                                           // 00000007131C: BF800000
	.long 0xbf800000                                           // 000000071320: BF800000
	.long 0xbf800000                                           // 000000071324: BF800000
	.long 0xbf800000                                           // 000000071328: BF800000
	.long 0xbf800000                                           // 00000007132C: BF800000
	.long 0xbf800000                                           // 000000071330: BF800000
	.long 0xbf800000                                           // 000000071334: BF800000
	.long 0xbf800000                                           // 000000071338: BF800000
	.long 0xbf800000                                           // 00000007133C: BF800000
	.long 0xbf800000                                           // 000000071340: BF800000
	.long 0xbf800000                                           // 000000071344: BF800000
	.long 0xbf800000                                           // 000000071348: BF800000
	.long 0xbf800000                                           // 00000007134C: BF800000
	.long 0xbf800000                                           // 000000071350: BF800000
	.long 0xbf800000                                           // 000000071354: BF800000
	.long 0xbf800000                                           // 000000071358: BF800000
	.long 0xbf800000                                           // 00000007135C: BF800000
	.long 0xbf800000                                           // 000000071360: BF800000
	.long 0xbf800000                                           // 000000071364: BF800000
	.long 0xbf800000                                           // 000000071368: BF800000
	.long 0xbf800000                                           // 00000007136C: BF800000
	.long 0xbf800000                                           // 000000071370: BF800000
	.long 0xbf800000                                           // 000000071374: BF800000
	.long 0xbf800000                                           // 000000071378: BF800000
	.long 0xbf800000                                           // 00000007137C: BF800000
	.long 0xbf800000                                           // 000000071380: BF800000
	.long 0xbf800000                                           // 000000071384: BF800000
	.long 0xbf800000                                           // 000000071388: BF800000
	.long 0xbf800000                                           // 00000007138C: BF800000
	.long 0xbf800000                                           // 000000071390: BF800000
	.long 0xbf800000                                           // 000000071394: BF800000
	.long 0xbf800000                                           // 000000071398: BF800000
	.long 0xbf800000                                           // 00000007139C: BF800000
	.long 0xbf800000                                           // 0000000713A0: BF800000
	.long 0xbf800000                                           // 0000000713A4: BF800000
	.long 0xbf800000                                           // 0000000713A8: BF800000
	.long 0xbf800000                                           // 0000000713AC: BF800000
	.long 0xbf800000                                           // 0000000713B0: BF800000
	.long 0xbf800000                                           // 0000000713B4: BF800000
	.long 0xbf800000                                           // 0000000713B8: BF800000
	.long 0xbf800000                                           // 0000000713BC: BF800000
	.long 0xbf800000                                           // 0000000713C0: BF800000
	.long 0xbf800000                                           // 0000000713C4: BF800000
	.long 0xbf800000                                           // 0000000713C8: BF800000
	.long 0xbf800000                                           // 0000000713CC: BF800000
	.long 0xbf800000                                           // 0000000713D0: BF800000
	.long 0xbf800000                                           // 0000000713D4: BF800000
	.long 0xbf800000                                           // 0000000713D8: BF800000
	.long 0xbf800000                                           // 0000000713DC: BF800000
	.long 0xbf800000                                           // 0000000713E0: BF800000
	.long 0xbf800000                                           // 0000000713E4: BF800000
	.long 0xbf800000                                           // 0000000713E8: BF800000
	.long 0xbf800000                                           // 0000000713EC: BF800000
	.long 0xbf800000                                           // 0000000713F0: BF800000
	.long 0xbf800000                                           // 0000000713F4: BF800000
	.long 0xbf800000                                           // 0000000713F8: BF800000
	.long 0xbf800000                                           // 0000000713FC: BF800000

	.p2align	8
	.type	mul_long_get_group_id_get_global_offset,@function
	.size	mul_long_get_group_id_get_global_offset, mul_long_get_group_id_get_global_offset_symend-mul_long_get_group_id_get_global_offset
mul_long_get_group_id_get_global_offset:
	s_clause 0x2                                               // 000000071400: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071404: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007140C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000071414: F4040000 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007141C: CA240080 010200FF 000003FF
	s_lshl_b32 s5, s2, 1                                       // 000000071428: 84058102
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007142C: D6100003 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000071434: D610000A 02292900
	s_lshl_b32 s12, s3, 4                                      // 00000007143C: 840C8403
	s_lshl_b32 s13, s4, 1                                      // 000000071440: 840D8104
	s_mov_b32 s33, 0                                           // 000000071444: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071448: BF89FC07
	v_add3_u32 v0, s8, s5, v2                                  // 00000007144C: D6550000 04080A08
	s_mul_i32 s9, s9, s2                                       // 000000071454: 96090209
	s_mul_hi_u32 s14, s8, s2                                   // 000000071458: 968E0208
	s_mul_i32 s2, s8, s2                                       // 00000007145C: 96020208
	s_mul_i32 s5, s11, s3                                      // 000000071460: 9605030B
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000071464: D73C0004 00020083
	v_add3_u32 v0, s10, s12, v3                                // 00000007146C: D6550000 040C180A
	s_mul_hi_u32 s8, s10, s3                                   // 000000071474: 9688030A
	s_add_i32 s14, s14, s9                                     // 000000071478: 810E090E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007147C: BF870119
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s14            // 000000071480: CA100002 0202000E
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000071488: D73C0008 00020083
	v_add3_u32 v0, s0, s13, v10                                // 000000071490: D6550000 04281A00
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000071498: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 0000000714A0: 400A0A07
	s_delay_alu instid0(VALU_DEP_3)                            // 0000000714A4: BF870003
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000714A8: D73C0000 00020083
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 0000000714B0: D7006A08 00021006
	s_mul_i32 s1, s1, s4                                       // 0000000714B8: 96010401
	s_mul_hi_u32 s2, s0, s4                                    // 0000000714BC: 96820400
	s_mul_i32 s3, s10, s3                                      // 0000000714C0: 9603030A
	s_add_i32 s8, s8, s5                                       // 0000000714C4: 81080508
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 0000000714C8: 40121207
	s_mul_i32 s0, s0, s4                                       // 0000000714CC: 96000400
	s_add_i32 s2, s2, s1                                       // 0000000714D0: 81020102
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000714D4: D7006A00 00020006
	v_dual_mov_b32 v6, s3 :: v_dual_mov_b32 v7, s8             // 0000000714DC: CA100003 06060008
	v_dual_mov_b32 v10, s0 :: v_dual_mov_b32 v11, s2           // 0000000714E4: CA100000 0A0A0002
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000714EC: 40020207
	s_clause 0x2                                               // 0000000714F0: BF850002
	global_store_b64 v[4:5], v[2:3], off                       // 0000000714F4: DC6E0000 007C0204
	global_store_b64 v[8:9], v[6:7], off                       // 0000000714FC: DC6E0000 007C0608
	global_store_b64 v[0:1], v[10:11], off                     // 000000071504: DC6E0000 007C0A00
	s_nop 0                                                    // 00000007150C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071510: BFB60003
	s_endpgm                                                   // 000000071514: BFB00000
mul_long_get_group_id_get_global_offset_symend:
	.long 0xbf800000                                           // 000000071518: BF800000
	.long 0xbf800000                                           // 00000007151C: BF800000
	.long 0xbf800000                                           // 000000071520: BF800000
	.long 0xbf800000                                           // 000000071524: BF800000
	.long 0xbf800000                                           // 000000071528: BF800000
	.long 0xbf800000                                           // 00000007152C: BF800000
	.long 0xbf800000                                           // 000000071530: BF800000
	.long 0xbf800000                                           // 000000071534: BF800000
	.long 0xbf800000                                           // 000000071538: BF800000
	.long 0xbf800000                                           // 00000007153C: BF800000
	.long 0xbf800000                                           // 000000071540: BF800000
	.long 0xbf800000                                           // 000000071544: BF800000
	.long 0xbf800000                                           // 000000071548: BF800000
	.long 0xbf800000                                           // 00000007154C: BF800000
	.long 0xbf800000                                           // 000000071550: BF800000
	.long 0xbf800000                                           // 000000071554: BF800000
	.long 0xbf800000                                           // 000000071558: BF800000
	.long 0xbf800000                                           // 00000007155C: BF800000
	.long 0xbf800000                                           // 000000071560: BF800000
	.long 0xbf800000                                           // 000000071564: BF800000
	.long 0xbf800000                                           // 000000071568: BF800000
	.long 0xbf800000                                           // 00000007156C: BF800000
	.long 0xbf800000                                           // 000000071570: BF800000
	.long 0xbf800000                                           // 000000071574: BF800000
	.long 0xbf800000                                           // 000000071578: BF800000
	.long 0xbf800000                                           // 00000007157C: BF800000
	.long 0xbf800000                                           // 000000071580: BF800000
	.long 0xbf800000                                           // 000000071584: BF800000
	.long 0xbf800000                                           // 000000071588: BF800000
	.long 0xbf800000                                           // 00000007158C: BF800000
	.long 0xbf800000                                           // 000000071590: BF800000
	.long 0xbf800000                                           // 000000071594: BF800000
	.long 0xbf800000                                           // 000000071598: BF800000
	.long 0xbf800000                                           // 00000007159C: BF800000
	.long 0xbf800000                                           // 0000000715A0: BF800000
	.long 0xbf800000                                           // 0000000715A4: BF800000
	.long 0xbf800000                                           // 0000000715A8: BF800000
	.long 0xbf800000                                           // 0000000715AC: BF800000
	.long 0xbf800000                                           // 0000000715B0: BF800000
	.long 0xbf800000                                           // 0000000715B4: BF800000
	.long 0xbf800000                                           // 0000000715B8: BF800000
	.long 0xbf800000                                           // 0000000715BC: BF800000
	.long 0xbf800000                                           // 0000000715C0: BF800000
	.long 0xbf800000                                           // 0000000715C4: BF800000
	.long 0xbf800000                                           // 0000000715C8: BF800000
	.long 0xbf800000                                           // 0000000715CC: BF800000
	.long 0xbf800000                                           // 0000000715D0: BF800000
	.long 0xbf800000                                           // 0000000715D4: BF800000
	.long 0xbf800000                                           // 0000000715D8: BF800000
	.long 0xbf800000                                           // 0000000715DC: BF800000
	.long 0xbf800000                                           // 0000000715E0: BF800000
	.long 0xbf800000                                           // 0000000715E4: BF800000
	.long 0xbf800000                                           // 0000000715E8: BF800000
	.long 0xbf800000                                           // 0000000715EC: BF800000
	.long 0xbf800000                                           // 0000000715F0: BF800000
	.long 0xbf800000                                           // 0000000715F4: BF800000
	.long 0xbf800000                                           // 0000000715F8: BF800000
	.long 0xbf800000                                           // 0000000715FC: BF800000

	.p2align	8
	.type	mul_long_get_local_size_get_global_offset,@function
	.size	mul_long_get_local_size_get_global_offset, mul_long_get_local_size_get_global_offset_symend-mul_long_get_local_size_get_global_offset
mul_long_get_local_size_get_global_offset:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000071600: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000071608: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007160C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000071610: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000071614: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000071618: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000007161C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000071620: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007162C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000071634: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007163C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000071640: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000071644: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000071648: BF8704D9
	s_add_u32 s6, s5, s2                                       // 00000007164C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000071650: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000071654: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 000000071658: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 000000071660: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000071664: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000071668: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007166C: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 000000071670: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000071674: BF870009
	s_add_u32 s4, s5, s4                                       // 000000071678: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000007167C: 8205800B
	s_clause 0x1                                               // 000000071680: BF850001
	global_load_u16 v8, v2, s[2:3]                             // 000000071684: DC4A0000 08020002
	global_load_u16 v10, v2, s[4:5]                            // 00000007168C: DC4A0000 0A040002
	s_clause 0x2                                               // 000000071694: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000071698: F4080100 F8000038
	s_load_b64 s[2:3], s[0:1], 0x48                            // 0000000716A0: F4040080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000716A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000716B0: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 0000000716B4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000716BC: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000716C0: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v5                                 // 0000000716C8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000716D0: D73C0005 00020283
	v_add3_u32 v1, s2, s14, v0                                 // 0000000716D8: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000716E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000716E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000716EC: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000716F0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000716F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000071700: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000071704: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071708: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071710: 40020201
	s_waitcnt vmcnt(2)                                         // 000000071714: BF890BF7
	v_mul_lo_u32 v2, s5, v7                                    // 000000071718: D72C0002 00020E05
	v_mul_hi_u32 v11, s4, v7                                   // 000000071720: D72D000B 00020E04
	v_mul_lo_u32 v7, s4, v7                                    // 000000071728: D72C0007 00020E04
	s_waitcnt vmcnt(1)                                         // 000000071730: BF8907F7
	v_mul_lo_u32 v12, s7, v8                                   // 000000071734: D72C000C 00021007
	v_mul_hi_u32 v13, s6, v8                                   // 00000007173C: D72D000D 00021006
	s_waitcnt vmcnt(0)                                         // 000000071744: BF8903F7
	v_mul_lo_u32 v14, s3, v10                                  // 000000071748: D72C000E 00021403
	v_mul_hi_u32 v15, s2, v10                                  // 000000071750: D72D000F 00021402
	v_mul_lo_u32 v9, s6, v8                                    // 000000071758: D72C0009 00021006
	v_add_nc_u32_e32 v8, v11, v2                               // 000000071760: 4A10050B
	v_mul_lo_u32 v11, s2, v10                                  // 000000071764: D72C000B 00021402
	v_add_nc_u32_e32 v10, v13, v12                             // 00000007176C: 4A14190D
	v_add_nc_u32_e32 v12, v15, v14                             // 000000071770: 4A181D0F
	s_clause 0x2                                               // 000000071774: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000071778: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000071780: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000071788: DC6E0000 007C0B00
	s_nop 0                                                    // 000000071790: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071794: BFB60003
	s_endpgm                                                   // 000000071798: BFB00000
mul_long_get_local_size_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007179C: BF800000
	.long 0xbf800000                                           // 0000000717A0: BF800000
	.long 0xbf800000                                           // 0000000717A4: BF800000
	.long 0xbf800000                                           // 0000000717A8: BF800000
	.long 0xbf800000                                           // 0000000717AC: BF800000
	.long 0xbf800000                                           // 0000000717B0: BF800000
	.long 0xbf800000                                           // 0000000717B4: BF800000
	.long 0xbf800000                                           // 0000000717B8: BF800000
	.long 0xbf800000                                           // 0000000717BC: BF800000
	.long 0xbf800000                                           // 0000000717C0: BF800000
	.long 0xbf800000                                           // 0000000717C4: BF800000
	.long 0xbf800000                                           // 0000000717C8: BF800000
	.long 0xbf800000                                           // 0000000717CC: BF800000
	.long 0xbf800000                                           // 0000000717D0: BF800000
	.long 0xbf800000                                           // 0000000717D4: BF800000
	.long 0xbf800000                                           // 0000000717D8: BF800000
	.long 0xbf800000                                           // 0000000717DC: BF800000
	.long 0xbf800000                                           // 0000000717E0: BF800000
	.long 0xbf800000                                           // 0000000717E4: BF800000
	.long 0xbf800000                                           // 0000000717E8: BF800000
	.long 0xbf800000                                           // 0000000717EC: BF800000
	.long 0xbf800000                                           // 0000000717F0: BF800000
	.long 0xbf800000                                           // 0000000717F4: BF800000
	.long 0xbf800000                                           // 0000000717F8: BF800000
	.long 0xbf800000                                           // 0000000717FC: BF800000

	.p2align	8
	.type	mul_long_get_global_id_get_global_offset,@function
	.size	mul_long_get_global_id_get_global_offset, mul_long_get_global_id_get_global_offset_symend-mul_long_get_global_id_get_global_offset
mul_long_get_global_id_get_global_offset:
	s_clause 0x1                                               // 000000071800: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071804: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007180C: F4040180 F8000048
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000071814: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000071820: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000071828: D6100000 02292900
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000071830: F4040000 F8000008
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000071838: BF8700B3
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007183C: D6560001 04050202
	s_lshl_b32 s2, s3, 1                                       // 000000071844: 84028103
	s_mov_b32 s33, 0                                           // 000000071848: BEA10080
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007184C: D73C0003 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000071854: BF89FC07
	v_add_nc_u32_e32 v15, s8, v1                               // 000000071858: 4A1E0208
	v_add3_u32 v1, s10, s2, v5                                 // 00000007185C: D6550001 0414040A
	s_lshl_b32 s2, s4, 2                                       // 000000071864: 84028204
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000071868: BF870113
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000007186C: D7006A03 00020600
	v_mad_u64_u32 v[5:6], null, s10, v1, 0                     // 000000071874: D6FE7C05 0202020A
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 00000007187C: D73C0007 00020283
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000071884: 40080801
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000071888: BF870132
	v_mad_u64_u32 v[9:10], null, s11, v1, v[6:7]               // 00000007188C: D6FE7C09 041A020B
	v_add3_u32 v1, s6, s2, v0                                  // 000000071894: D6550001 04000406
	v_mad_u64_u32 v[10:11], null, v15, s8, 0                   // 00000007189C: D6FE7C0A 0200110F
	v_mad_u64_u32 v[12:13], null, s6, v1, 0                    // 0000000718A4: D6FE7C0C 02020206
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000718AC: BF870112
	v_mov_b32_e32 v0, v11                                      // 0000000718B0: 7E00030B
	v_mov_b32_e32 v6, v13                                      // 0000000718B4: 7E0C030D
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000718B8: BF870112
	v_mad_u64_u32 v[13:14], null, v15, s9, v[0:1]              // 0000000718BC: D6FE7C0D 0400130F
	v_mad_u64_u32 v[14:15], null, s7, v1, v[6:7]               // 0000000718C4: D6FE7C0E 041A0207
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000718CC: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 0000000718D4: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 0000000718DC: 40101001
	v_mov_b32_e32 v11, v13                                     // 0000000718E0: 7E16030D
	v_mov_b32_e32 v13, v14                                     // 0000000718E4: 7E1A030E
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000718E8: D7006A00 00020000
	v_mov_b32_e32 v6, v9                                       // 0000000718F0: 7E0C0309
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000718F4: 40020201
	s_clause 0x2                                               // 0000000718F8: BF850002
	global_store_b64 v[3:4], v[10:11], off                     // 0000000718FC: DC6E0000 007C0A03
	global_store_b64 v[7:8], v[5:6], off                       // 000000071904: DC6E0000 007C0507
	global_store_b64 v[0:1], v[12:13], off                     // 00000007190C: DC6E0000 007C0C00
	s_nop 0                                                    // 000000071914: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071918: BFB60003
	s_endpgm                                                   // 00000007191C: BFB00000
mul_long_get_global_id_get_global_offset_symend:
	.long 0xbf800000                                           // 000000071920: BF800000
	.long 0xbf800000                                           // 000000071924: BF800000
	.long 0xbf800000                                           // 000000071928: BF800000
	.long 0xbf800000                                           // 00000007192C: BF800000
	.long 0xbf800000                                           // 000000071930: BF800000
	.long 0xbf800000                                           // 000000071934: BF800000
	.long 0xbf800000                                           // 000000071938: BF800000
	.long 0xbf800000                                           // 00000007193C: BF800000
	.long 0xbf800000                                           // 000000071940: BF800000
	.long 0xbf800000                                           // 000000071944: BF800000
	.long 0xbf800000                                           // 000000071948: BF800000
	.long 0xbf800000                                           // 00000007194C: BF800000
	.long 0xbf800000                                           // 000000071950: BF800000
	.long 0xbf800000                                           // 000000071954: BF800000
	.long 0xbf800000                                           // 000000071958: BF800000
	.long 0xbf800000                                           // 00000007195C: BF800000
	.long 0xbf800000                                           // 000000071960: BF800000
	.long 0xbf800000                                           // 000000071964: BF800000
	.long 0xbf800000                                           // 000000071968: BF800000
	.long 0xbf800000                                           // 00000007196C: BF800000
	.long 0xbf800000                                           // 000000071970: BF800000
	.long 0xbf800000                                           // 000000071974: BF800000
	.long 0xbf800000                                           // 000000071978: BF800000
	.long 0xbf800000                                           // 00000007197C: BF800000
	.long 0xbf800000                                           // 000000071980: BF800000
	.long 0xbf800000                                           // 000000071984: BF800000
	.long 0xbf800000                                           // 000000071988: BF800000
	.long 0xbf800000                                           // 00000007198C: BF800000
	.long 0xbf800000                                           // 000000071990: BF800000
	.long 0xbf800000                                           // 000000071994: BF800000
	.long 0xbf800000                                           // 000000071998: BF800000
	.long 0xbf800000                                           // 00000007199C: BF800000
	.long 0xbf800000                                           // 0000000719A0: BF800000
	.long 0xbf800000                                           // 0000000719A4: BF800000
	.long 0xbf800000                                           // 0000000719A8: BF800000
	.long 0xbf800000                                           // 0000000719AC: BF800000
	.long 0xbf800000                                           // 0000000719B0: BF800000
	.long 0xbf800000                                           // 0000000719B4: BF800000
	.long 0xbf800000                                           // 0000000719B8: BF800000
	.long 0xbf800000                                           // 0000000719BC: BF800000
	.long 0xbf800000                                           // 0000000719C0: BF800000
	.long 0xbf800000                                           // 0000000719C4: BF800000
	.long 0xbf800000                                           // 0000000719C8: BF800000
	.long 0xbf800000                                           // 0000000719CC: BF800000
	.long 0xbf800000                                           // 0000000719D0: BF800000
	.long 0xbf800000                                           // 0000000719D4: BF800000
	.long 0xbf800000                                           // 0000000719D8: BF800000
	.long 0xbf800000                                           // 0000000719DC: BF800000
	.long 0xbf800000                                           // 0000000719E0: BF800000
	.long 0xbf800000                                           // 0000000719E4: BF800000
	.long 0xbf800000                                           // 0000000719E8: BF800000
	.long 0xbf800000                                           // 0000000719EC: BF800000
	.long 0xbf800000                                           // 0000000719F0: BF800000
	.long 0xbf800000                                           // 0000000719F4: BF800000
	.long 0xbf800000                                           // 0000000719F8: BF800000
	.long 0xbf800000                                           // 0000000719FC: BF800000

	.p2align	8
	.type	mul_long_get_global_size_get_global_offset,@function
	.size	mul_long_get_global_size_get_global_offset, mul_long_get_global_size_get_global_offset_symend-mul_long_get_global_size_get_global_offset
mul_long_get_global_size_get_global_offset:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000071A00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000071A0C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000071A10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000071A18: D6100000 02292900
	s_clause 0x1                                               // 000000071A20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000071A24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000071A2C: DC4A0026 08000002
	s_clause 0x3                                               // 000000071A34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071A38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000071A40: F4080300 F8000010
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000071A48: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000071A50: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 000000071A58: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071A5C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000071A60: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 000000071A68: 84028103
	s_lshl_b32 s3, s4, 1                                       // 000000071A6C: 84038104
	s_lshl_b32 s5, s14, 1                                      // 000000071A70: 8405810E
	s_lshl_b32 s4, s13, 1                                      // 000000071A74: 8404810D
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000071A78: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v5                                 // 000000071A80: D6550001 0414040A
	s_lshl_b32 s2, s12, 4                                      // 000000071A88: 8402840C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000071A8C: BF870221
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000071A90: D73C0005 00020283
	v_add3_u32 v1, s6, s3, v0                                  // 000000071A98: D6550001 04000606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000071AA0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000071AA8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000071AAC: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000071AB0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000071AB8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000071AC0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071AC4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000071ACC: BF870154
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071AD0: 40020201
	s_waitcnt vmcnt(1)                                         // 000000071AD4: BF8907F7
	v_readfirstlane_b32 s3, v7                                 // 000000071AD8: 7E060507
	s_waitcnt vmcnt(0)                                         // 000000071ADC: BF8903F7
	v_readfirstlane_b32 s12, v8                                // 000000071AE0: 7E180508
	s_and_b32 s1, s3, 0xffff                                   // 000000071AE4: 8B01FF03 0000FFFF
	s_lshr_b32 s0, s3, 16                                      // 000000071AEC: 85009003
	s_delay_alu instid0(VALU_DEP_1)                            // 000000071AF0: BF870001
	s_add_i32 s5, s5, s12                                      // 000000071AF4: 81050C05
	s_add_i32 s2, s2, s1                                       // 000000071AF8: 81020102
	s_add_i32 s4, s4, s0                                       // 000000071AFC: 81040004
	s_mul_i32 s0, s7, s5                                       // 000000071B00: 96000507
	s_mul_hi_u32 s1, s6, s5                                    // 000000071B04: 96810506
	s_mul_i32 s3, s6, s5                                       // 000000071B08: 96030506
	s_mul_i32 s5, s9, s2                                       // 000000071B0C: 96050209
	s_mul_hi_u32 s6, s8, s2                                    // 000000071B10: 96860208
	s_mul_i32 s2, s8, s2                                       // 000000071B14: 96020208
	s_mul_i32 s7, s11, s4                                      // 000000071B18: 9607040B
	s_mul_hi_u32 s8, s10, s4                                   // 000000071B1C: 9688040A
	s_add_i32 s6, s6, s5                                       // 000000071B20: 81060506
	s_mul_i32 s4, s10, s4                                      // 000000071B24: 9604040A
	s_add_i32 s8, s8, s7                                       // 000000071B28: 81080708
	s_add_i32 s1, s1, s0                                       // 000000071B2C: 81010001
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v10, s6            // 000000071B30: CA100003 070A0006
	v_dual_mov_b32 v9, s2 :: v_dual_mov_b32 v12, s8            // 000000071B38: CA100002 090C0008
	v_dual_mov_b32 v11, s4 :: v_dual_mov_b32 v8, s1            // 000000071B40: CA100004 0B080001
	s_clause 0x2                                               // 000000071B48: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 000000071B4C: DC6E0000 007C0903
	global_store_b64 v[5:6], v[11:12], off                     // 000000071B54: DC6E0000 007C0B05
	global_store_b64 v[0:1], v[7:8], off                       // 000000071B5C: DC6E0000 007C0700
	s_nop 0                                                    // 000000071B64: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071B68: BFB60003
	s_endpgm                                                   // 000000071B6C: BFB00000
mul_long_get_global_size_get_global_offset_symend:
	.long 0xbf800000                                           // 000000071B70: BF800000
	.long 0xbf800000                                           // 000000071B74: BF800000
	.long 0xbf800000                                           // 000000071B78: BF800000
	.long 0xbf800000                                           // 000000071B7C: BF800000
	.long 0xbf800000                                           // 000000071B80: BF800000
	.long 0xbf800000                                           // 000000071B84: BF800000
	.long 0xbf800000                                           // 000000071B88: BF800000
	.long 0xbf800000                                           // 000000071B8C: BF800000
	.long 0xbf800000                                           // 000000071B90: BF800000
	.long 0xbf800000                                           // 000000071B94: BF800000
	.long 0xbf800000                                           // 000000071B98: BF800000
	.long 0xbf800000                                           // 000000071B9C: BF800000
	.long 0xbf800000                                           // 000000071BA0: BF800000
	.long 0xbf800000                                           // 000000071BA4: BF800000
	.long 0xbf800000                                           // 000000071BA8: BF800000
	.long 0xbf800000                                           // 000000071BAC: BF800000
	.long 0xbf800000                                           // 000000071BB0: BF800000
	.long 0xbf800000                                           // 000000071BB4: BF800000
	.long 0xbf800000                                           // 000000071BB8: BF800000
	.long 0xbf800000                                           // 000000071BBC: BF800000
	.long 0xbf800000                                           // 000000071BC0: BF800000
	.long 0xbf800000                                           // 000000071BC4: BF800000
	.long 0xbf800000                                           // 000000071BC8: BF800000
	.long 0xbf800000                                           // 000000071BCC: BF800000
	.long 0xbf800000                                           // 000000071BD0: BF800000
	.long 0xbf800000                                           // 000000071BD4: BF800000
	.long 0xbf800000                                           // 000000071BD8: BF800000
	.long 0xbf800000                                           // 000000071BDC: BF800000
	.long 0xbf800000                                           // 000000071BE0: BF800000
	.long 0xbf800000                                           // 000000071BE4: BF800000
	.long 0xbf800000                                           // 000000071BE8: BF800000
	.long 0xbf800000                                           // 000000071BEC: BF800000
	.long 0xbf800000                                           // 000000071BF0: BF800000
	.long 0xbf800000                                           // 000000071BF4: BF800000
	.long 0xbf800000                                           // 000000071BF8: BF800000
	.long 0xbf800000                                           // 000000071BFC: BF800000

	.p2align	8
	.type	mul_long_get_num_groups_get_global_offset,@function
	.size	mul_long_get_num_groups_get_global_offset, mul_long_get_num_groups_get_global_offset_symend-mul_long_get_num_groups_get_global_offset
mul_long_get_num_groups_get_global_offset:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000071C00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000071C0C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000071C10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000071C18: D6100000 02292900
	s_clause 0x1                                               // 000000071C20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000071C24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000071C2C: DC4A0026 08000002
	s_clause 0x3                                               // 000000071C34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071C38: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000071C40: F4040180 F8000048
	s_load_b64 s[16:17], s[0:1], 0x8                           // 000000071C48: F4040400 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000071C50: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000071C58: 84008103
	s_mov_b32 s33, 0                                           // 000000071C5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071C60: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000071C64: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000071C6C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000071C70: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000071C78: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000071C80: 84008204
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000071C84: D73C0005 00020283
	v_add3_u32 v1, s6, s0, v0                                  // 000000071C8C: D6550001 04000006
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000071C94: BF8701A4
	v_add_co_u32 v3, vcc_lo, s16, v3                           // 000000071C98: D7006A03 00020610
	v_add_co_ci_u32_e32 v4, vcc_lo, s17, v4, vcc_lo            // 000000071CA0: 40080811
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000071CA4: D73C0000 00020283
	v_add_co_u32 v5, s0, s16, v5                               // 000000071CAC: D7000005 00020A10
	s_delay_alu instid0(VALU_DEP_1)                            // 000000071CB4: BF870001
	v_add_co_ci_u32_e64 v6, s0, s17, v6, s0                    // 000000071CB8: D5200006 00020C11
	s_waitcnt vmcnt(1)                                         // 000000071CC0: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 000000071CC4: 32040E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000071CC8: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 000000071CCC: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 000000071CD0: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000071CD8: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000071CDC: 7C7A0480
	s_addc_u32 s1, s12, 0                                      // 000000071CE0: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000071CE4: BF870009
	s_mul_i32 s2, s9, s1                                       // 000000071CE8: 96020109
	s_mul_hi_u32 s3, s8, s1                                    // 000000071CEC: 96830108
	s_mul_i32 s1, s8, s1                                       // 000000071CF0: 96010108
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000071CF4: BF07806A
	v_mov_b32_e32 v7, s1                                       // 000000071CF8: 7E0E0201
	s_addc_u32 s1, s13, 0                                      // 000000071CFC: 8201800D
	s_cmp_lg_u32 s0, 0                                         // 000000071D00: BF078000
	s_mul_i32 s0, s11, s1                                      // 000000071D04: 9600010B
	s_mul_hi_u32 s4, s10, s1                                   // 000000071D08: 9684010A
	s_mul_i32 s1, s10, s1                                      // 000000071D0C: 9601010A
	s_addc_u32 s5, s14, 0                                      // 000000071D10: 8205800E
	s_add_i32 s3, s3, s2                                       // 000000071D14: 81030203
	s_add_i32 s4, s4, s0                                       // 000000071D18: 81040004
	v_dual_mov_b32 v8, s3 :: v_dual_mov_b32 v9, s1             // 000000071D1C: CA100003 08080001
	v_mov_b32_e32 v10, s4                                      // 000000071D24: 7E140204
	s_mul_i32 s0, s7, s5                                       // 000000071D28: 96000507
	s_mul_hi_u32 s1, s6, s5                                    // 000000071D2C: 96810506
	s_mul_i32 s2, s6, s5                                       // 000000071D30: 96020506
	s_add_i32 s1, s1, s0                                       // 000000071D34: 81010001
	v_add_co_u32 v0, vcc_lo, s16, v0                           // 000000071D38: D7006A00 00020010
	v_dual_mov_b32 v11, s2 :: v_dual_mov_b32 v12, s1           // 000000071D40: CA100002 0B0C0001
	v_add_co_ci_u32_e32 v1, vcc_lo, s17, v1, vcc_lo            // 000000071D48: 40020211
	s_clause 0x2                                               // 000000071D4C: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000071D50: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000071D58: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000071D60: DC6E0000 007C0B00
	s_nop 0                                                    // 000000071D68: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071D6C: BFB60003
	s_endpgm                                                   // 000000071D70: BFB00000
mul_long_get_num_groups_get_global_offset_symend:
	.long 0xbf800000                                           // 000000071D74: BF800000
	.long 0xbf800000                                           // 000000071D78: BF800000
	.long 0xbf800000                                           // 000000071D7C: BF800000
	.long 0xbf800000                                           // 000000071D80: BF800000
	.long 0xbf800000                                           // 000000071D84: BF800000
	.long 0xbf800000                                           // 000000071D88: BF800000
	.long 0xbf800000                                           // 000000071D8C: BF800000
	.long 0xbf800000                                           // 000000071D90: BF800000
	.long 0xbf800000                                           // 000000071D94: BF800000
	.long 0xbf800000                                           // 000000071D98: BF800000
	.long 0xbf800000                                           // 000000071D9C: BF800000
	.long 0xbf800000                                           // 000000071DA0: BF800000
	.long 0xbf800000                                           // 000000071DA4: BF800000
	.long 0xbf800000                                           // 000000071DA8: BF800000
	.long 0xbf800000                                           // 000000071DAC: BF800000
	.long 0xbf800000                                           // 000000071DB0: BF800000
	.long 0xbf800000                                           // 000000071DB4: BF800000
	.long 0xbf800000                                           // 000000071DB8: BF800000
	.long 0xbf800000                                           // 000000071DBC: BF800000
	.long 0xbf800000                                           // 000000071DC0: BF800000
	.long 0xbf800000                                           // 000000071DC4: BF800000
	.long 0xbf800000                                           // 000000071DC8: BF800000
	.long 0xbf800000                                           // 000000071DCC: BF800000
	.long 0xbf800000                                           // 000000071DD0: BF800000
	.long 0xbf800000                                           // 000000071DD4: BF800000
	.long 0xbf800000                                           // 000000071DD8: BF800000
	.long 0xbf800000                                           // 000000071DDC: BF800000
	.long 0xbf800000                                           // 000000071DE0: BF800000
	.long 0xbf800000                                           // 000000071DE4: BF800000
	.long 0xbf800000                                           // 000000071DE8: BF800000
	.long 0xbf800000                                           // 000000071DEC: BF800000
	.long 0xbf800000                                           // 000000071DF0: BF800000
	.long 0xbf800000                                           // 000000071DF4: BF800000
	.long 0xbf800000                                           // 000000071DF8: BF800000
	.long 0xbf800000                                           // 000000071DFC: BF800000

	.p2align	8
	.type	mul_long_get_work_dim_get_global_offset,@function
	.size	mul_long_get_work_dim_get_global_offset, mul_long_get_work_dim_get_global_offset_symend-mul_long_get_work_dim_get_global_offset
mul_long_get_work_dim_get_global_offset:
	s_clause 0x3                                               // 000000071E00: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000071E04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071E0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000071E14: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000071E1C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000071E24: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000071E30: 84028102
	v_bfe_u32 v4, v0, 10, 10                                   // 000000071E34: D6100004 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000071E3C: D610000A 02292900
	s_lshl_b32 s3, s3, 1                                       // 000000071E44: 84038103
	s_lshl_b32 s4, s4, 2                                       // 000000071E48: 84048204
	s_mov_b32 s33, 0                                           // 000000071E4C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071E50: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 000000071E54: 8B05FF05 0000FFFF
	v_add3_u32 v0, s8, s2, v2                                  // 000000071E5C: D6550000 04080408
	s_mul_i32 s2, s9, s5                                       // 000000071E64: 96020509
	s_mul_hi_u32 s9, s8, s5                                    // 000000071E68: 96890508
	s_mul_i32 s11, s11, s5                                     // 000000071E6C: 960B050B
	s_mul_hi_u32 s12, s10, s5                                  // 000000071E70: 968C050A
	v_lshlrev_b64 v[2:3], 3, v[0:1]                            // 000000071E74: D73C0002 00020083
	v_add3_u32 v0, s10, s3, v4                                 // 000000071E7C: D6550000 0410060A
	s_mul_i32 s3, s10, s5                                      // 000000071E84: 9603050A
	s_mul_i32 s8, s8, s5                                       // 000000071E88: 96080508
	s_add_i32 s9, s9, s2                                       // 000000071E8C: 81090209
	s_add_i32 s12, s12, s11                                    // 000000071E90: 810C0B0C
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 000000071E94: D73C0006 00020083
	v_add3_u32 v0, s6, s4, v10                                 // 000000071E9C: D6550000 04280806
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000071EA4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000071EAC: 40060601
	s_delay_alu instid0(VALU_DEP_3)                            // 000000071EB0: BF870003
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000071EB4: D73C0000 00020083
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 000000071EBC: D7006A06 00020C00
	v_dual_mov_b32 v8, s3 :: v_dual_mov_b32 v9, s12            // 000000071EC4: CA100003 0808000C
	s_mul_i32 s2, s7, s5                                       // 000000071ECC: 96020507
	s_mul_hi_u32 s3, s6, s5                                    // 000000071ED0: 96830506
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 000000071ED4: 400E0E01
	v_dual_mov_b32 v4, s8 :: v_dual_mov_b32 v5, s9             // 000000071ED8: CA100008 04040009
	s_mul_i32 s4, s6, s5                                       // 000000071EE0: 96040506
	s_add_i32 s3, s3, s2                                       // 000000071EE4: 81030203
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071EE8: D7006A00 00020000
	v_dual_mov_b32 v10, s4 :: v_dual_mov_b32 v11, s3           // 000000071EF0: CA100004 0A0A0003
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071EF8: 40020201
	s_clause 0x2                                               // 000000071EFC: BF850002
	global_store_b64 v[2:3], v[4:5], off                       // 000000071F00: DC6E0000 007C0402
	global_store_b64 v[6:7], v[8:9], off                       // 000000071F08: DC6E0000 007C0806
	global_store_b64 v[0:1], v[10:11], off                     // 000000071F10: DC6E0000 007C0A00
	s_nop 0                                                    // 000000071F18: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071F1C: BFB60003
	s_endpgm                                                   // 000000071F20: BFB00000
mul_long_get_work_dim_get_global_offset_symend:
	.long 0xbf800000                                           // 000000071F24: BF800000
	.long 0xbf800000                                           // 000000071F28: BF800000
	.long 0xbf800000                                           // 000000071F2C: BF800000
	.long 0xbf800000                                           // 000000071F30: BF800000
	.long 0xbf800000                                           // 000000071F34: BF800000
	.long 0xbf800000                                           // 000000071F38: BF800000
	.long 0xbf800000                                           // 000000071F3C: BF800000
	.long 0xbf800000                                           // 000000071F40: BF800000
	.long 0xbf800000                                           // 000000071F44: BF800000
	.long 0xbf800000                                           // 000000071F48: BF800000
	.long 0xbf800000                                           // 000000071F4C: BF800000
	.long 0xbf800000                                           // 000000071F50: BF800000
	.long 0xbf800000                                           // 000000071F54: BF800000
	.long 0xbf800000                                           // 000000071F58: BF800000
	.long 0xbf800000                                           // 000000071F5C: BF800000
	.long 0xbf800000                                           // 000000071F60: BF800000
	.long 0xbf800000                                           // 000000071F64: BF800000
	.long 0xbf800000                                           // 000000071F68: BF800000
	.long 0xbf800000                                           // 000000071F6C: BF800000
	.long 0xbf800000                                           // 000000071F70: BF800000
	.long 0xbf800000                                           // 000000071F74: BF800000
	.long 0xbf800000                                           // 000000071F78: BF800000
	.long 0xbf800000                                           // 000000071F7C: BF800000
	.long 0xbf800000                                           // 000000071F80: BF800000
	.long 0xbf800000                                           // 000000071F84: BF800000
	.long 0xbf800000                                           // 000000071F88: BF800000
	.long 0xbf800000                                           // 000000071F8C: BF800000
	.long 0xbf800000                                           // 000000071F90: BF800000
	.long 0xbf800000                                           // 000000071F94: BF800000
	.long 0xbf800000                                           // 000000071F98: BF800000
	.long 0xbf800000                                           // 000000071F9C: BF800000
	.long 0xbf800000                                           // 000000071FA0: BF800000
	.long 0xbf800000                                           // 000000071FA4: BF800000
	.long 0xbf800000                                           // 000000071FA8: BF800000
	.long 0xbf800000                                           // 000000071FAC: BF800000
	.long 0xbf800000                                           // 000000071FB0: BF800000
	.long 0xbf800000                                           // 000000071FB4: BF800000
	.long 0xbf800000                                           // 000000071FB8: BF800000
	.long 0xbf800000                                           // 000000071FBC: BF800000
	.long 0xbf800000                                           // 000000071FC0: BF800000
	.long 0xbf800000                                           // 000000071FC4: BF800000
	.long 0xbf800000                                           // 000000071FC8: BF800000
	.long 0xbf800000                                           // 000000071FCC: BF800000
	.long 0xbf800000                                           // 000000071FD0: BF800000
	.long 0xbf800000                                           // 000000071FD4: BF800000
	.long 0xbf800000                                           // 000000071FD8: BF800000
	.long 0xbf800000                                           // 000000071FDC: BF800000
	.long 0xbf800000                                           // 000000071FE0: BF800000
	.long 0xbf800000                                           // 000000071FE4: BF800000
	.long 0xbf800000                                           // 000000071FE8: BF800000
	.long 0xbf800000                                           // 000000071FEC: BF800000
	.long 0xbf800000                                           // 000000071FF0: BF800000
	.long 0xbf800000                                           // 000000071FF4: BF800000
	.long 0xbf800000                                           // 000000071FF8: BF800000
	.long 0xbf800000                                           // 000000071FFC: BF800000

	.p2align	8
	.type	mul_long_x_get_local_id,@function
	.size	mul_long_x_get_local_id, mul_long_x_get_local_id_symend-mul_long_x_get_local_id
mul_long_x_get_local_id:
	s_clause 0x3                                               // 000000072000: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072004: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007200C: F4000140 F8000008
	s_load_b32 s6, s[0:1], 0x48                                // 000000072014: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007201C: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 000000072024: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000072030: 84028402
	v_bfe_u32 v9, v0, 10, 10                                   // 000000072034: D6100009 02291500
	s_lshl_b32 s3, s3, 1                                       // 00000007203C: 84038103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072040: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000072048: 84048104
	s_mov_b32 s33, 0                                           // 00000007204C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072050: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 000000072054: D6550001 04140408
	v_mad_i64_i32 v[3:4], null, s5, v5, 0                      // 00000007205C: D6FF7C03 02020A05
	v_mad_i64_i32 v[7:8], null, s5, v9, 0                      // 000000072064: D6FF7C07 02021205
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 00000007206C: BF870133
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000072070: D73C0005 00020283
	v_add3_u32 v1, s10, s3, v9                                 // 000000072078: D6550001 0424060A
	v_mad_i64_i32 v[9:10], null, s5, v0, 0                     // 000000072080: D6FF7C09 02020005
	v_lshlrev_b64 v[11:12], 3, v[1:2]                          // 000000072088: D73C000B 00020283
	v_add3_u32 v1, s6, s4, v0                                  // 000000072090: D6550001 04000806
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000072098: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000720A0: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000720A4: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000720A8: D73C0000 00020283
	v_add_co_u32 v11, vcc_lo, s0, v11                          // 0000000720B0: D7006A0B 00021600
	v_add_co_ci_u32_e32 v12, vcc_lo, s1, v12, vcc_lo           // 0000000720B8: 40181801
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000720BC: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000720C4: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000720C8: 40020201
	s_clause 0x2                                               // 0000000720CC: BF850002
	global_store_b64 v[5:6], v[3:4], off                       // 0000000720D0: DC6E0000 007C0305
	global_store_b64 v[11:12], v[7:8], off                     // 0000000720D8: DC6E0000 007C070B
	global_store_b64 v[0:1], v[9:10], off                      // 0000000720E0: DC6E0000 007C0900
	s_nop 0                                                    // 0000000720E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000720EC: BFB60003
	s_endpgm                                                   // 0000000720F0: BFB00000
mul_long_x_get_local_id_symend:
	.long 0xbf800000                                           // 0000000720F4: BF800000
	.long 0xbf800000                                           // 0000000720F8: BF800000
	.long 0xbf800000                                           // 0000000720FC: BF800000

	.p2align	8
	.type	mul_long_get_global_offset_get_local_id,@function
	.size	mul_long_get_global_offset_get_local_id, mul_long_get_global_offset_get_local_id_symend-mul_long_get_global_offset_get_local_id
mul_long_get_global_offset_get_local_id:
	s_clause 0x2                                               // 000000072100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007210C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072114: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000007211C: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000072128: 84028102
	v_bfe_u32 v9, v0, 10, 10                                   // 00000007212C: D6100009 02291500
	s_lshl_b32 s3, s3, 4                                       // 000000072134: 84038403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072138: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000072140: 84048104
	s_mov_b32 s33, 0                                           // 000000072144: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072148: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000007214C: D6550001 04140408
	v_mad_u64_u32 v[3:4], null, s8, v5, 0                      // 000000072154: D6FE7C03 02020A08
	v_mad_u64_u32 v[7:8], null, s10, v9, 0                     // 00000007215C: D6FE7C07 0202120A
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000072164: BF870133
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000072168: D73C0005 00020283
	v_add3_u32 v1, s10, s3, v9                                 // 000000072170: D6550001 0424060A
	v_mad_u64_u32 v[9:10], null, s5, v0, 0                     // 000000072178: D6FE7C09 02020005
	v_lshlrev_b64 v[11:12], 3, v[1:2]                          // 000000072180: D73C000B 00020283
	v_add3_u32 v1, s5, s4, v0                                  // 000000072188: D6550001 04000805
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000072190: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000072198: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000007219C: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000721A0: D73C0000 00020283
	v_add_co_u32 v11, vcc_lo, s0, v11                          // 0000000721A8: D7006A0B 00021600
	v_add_co_ci_u32_e32 v12, vcc_lo, s1, v12, vcc_lo           // 0000000721B0: 40181801
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000721B4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000721BC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000721C0: 40020201
	s_clause 0x2                                               // 0000000721C4: BF850002
	global_store_b64 v[5:6], v[3:4], off                       // 0000000721C8: DC6E0000 007C0305
	global_store_b64 v[11:12], v[7:8], off                     // 0000000721D0: DC6E0000 007C070B
	global_store_b64 v[0:1], v[9:10], off                      // 0000000721D8: DC6E0000 007C0900
	s_nop 0                                                    // 0000000721E0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000721E4: BFB60003
	s_endpgm                                                   // 0000000721E8: BFB00000
mul_long_get_global_offset_get_local_id_symend:
	.long 0xbf800000                                           // 0000000721EC: BF800000
	.long 0xbf800000                                           // 0000000721F0: BF800000
	.long 0xbf800000                                           // 0000000721F4: BF800000
	.long 0xbf800000                                           // 0000000721F8: BF800000
	.long 0xbf800000                                           // 0000000721FC: BF800000

	.p2align	8
	.type	mul_long_get_local_id_get_local_id,@function
	.size	mul_long_get_local_id_get_local_id, mul_long_get_local_id_get_local_id_symend-mul_long_get_local_id_get_local_id
mul_long_get_local_id_get_local_id:
	s_clause 0x2                                               // 000000072200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007220C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072214: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v6, 0x3ff, v0       // 00000007221C: CA240080 010600FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000072228: 84028302
	v_bfe_u32 v8, v0, 10, 10                                   // 00000007222C: D6100008 02291500
	s_lshl_b32 s3, s3, 2                                       // 000000072234: 84038203
	s_delay_alu instid0(VALU_DEP_2)                            // 000000072238: BF870002
	v_mov_b32_e32 v3, v1                                       // 00000007223C: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000072240: 7E0A0301
	v_bfe_u32 v9, v0, 20, 10                                   // 000000072244: D6100009 02292900
	v_mov_b32_e32 v7, v1                                       // 00000007224C: 7E0E0301
	v_mul_u32_u24_e32 v0, v6, v6                               // 000000072250: 16000D06
	s_mov_b32 s33, 0                                           // 000000072254: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072258: BF89FC07
	v_add3_u32 v2, s8, s2, v6                                  // 00000007225C: D6550002 04180408
	v_add3_u32 v4, s10, s3, v8                                 // 000000072264: D6550004 0420060A
	s_lshl_b32 s2, s4, 1                                       // 00000007226C: 84028104
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072270: BF870199
	v_add3_u32 v6, s5, s2, v9                                  // 000000072274: D6550006 04240405
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007227C: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000072284: BF870113
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000072288: D73C0004 00020883
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000072290: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072298: BF870193
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007229C: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000722A0: D7006A04 00020800
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000722A8: BF870004
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000722AC: 400A0A01
	global_store_b64 v[2:3], v[0:1], off                       // 0000000722B0: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000722B8: D73C0002 00020C83
	v_mul_u32_u24_e32 v0, v8, v8                               // 0000000722C0: 16001108
	global_store_b64 v[4:5], v[0:1], off                       // 0000000722C4: DC6E0000 007C0004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000722CC: D7006A02 00020400
	v_mul_u32_u24_e32 v0, v9, v9                               // 0000000722D4: 16001309
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000722D8: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000722DC: DC6E0000 007C0002
	s_nop 0                                                    // 0000000722E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000722E8: BFB60003
	s_endpgm                                                   // 0000000722EC: BFB00000
mul_long_get_local_id_get_local_id_symend:
	.long 0xbf800000                                           // 0000000722F0: BF800000
	.long 0xbf800000                                           // 0000000722F4: BF800000
	.long 0xbf800000                                           // 0000000722F8: BF800000
	.long 0xbf800000                                           // 0000000722FC: BF800000

	.p2align	8
	.type	mul_long_get_group_id_get_local_id,@function
	.size	mul_long_get_group_id_get_local_id, mul_long_get_group_id_get_local_id_symend-mul_long_get_group_id_get_local_id
mul_long_get_group_id_get_local_id:
	s_clause 0x2                                               // 000000072300: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007230C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072314: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000007231C: CA240080 020400FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 000000072328: 84068102
	v_bfe_u32 v9, v0, 10, 10                                   // 00000007232C: D6100009 02291500
	s_lshl_b32 s7, s3, 4                                       // 000000072334: 84078403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072338: D6100000 02292900
	v_mad_u64_u32 v[3:4], null, s2, v5, 0                      // 000000072340: D6FE7C03 02020A02
	s_waitcnt lgkmcnt(0)                                       // 000000072348: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000007234C: 84098104
	v_mad_u64_u32 v[7:8], null, s3, v9, 0                      // 000000072350: D6FE7C07 02021203
	s_mov_b32 s33, 0                                           // 000000072358: BEA10080
	v_add3_u32 v1, s8, s6, v5                                  // 00000007235C: D6550001 04140C08
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000072364: BF870131
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000072368: D73C0005 00020283
	v_add3_u32 v1, s10, s7, v9                                 // 000000072370: D6550001 04240E0A
	v_mad_u64_u32 v[9:10], null, s4, v0, 0                     // 000000072378: D6FE7C09 02020004
	v_lshlrev_b64 v[11:12], 3, v[1:2]                          // 000000072380: D73C000B 00020283
	v_add3_u32 v1, s5, s9, v0                                  // 000000072388: D6550001 04001205
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000072390: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000072398: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000007239C: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000723A0: D73C0000 00020283
	v_add_co_u32 v11, vcc_lo, s0, v11                          // 0000000723A8: D7006A0B 00021600
	v_add_co_ci_u32_e32 v12, vcc_lo, s1, v12, vcc_lo           // 0000000723B0: 40181801
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000723B4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000723BC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000723C0: 40020201
	s_clause 0x2                                               // 0000000723C4: BF850002
	global_store_b64 v[5:6], v[3:4], off                       // 0000000723C8: DC6E0000 007C0305
	global_store_b64 v[11:12], v[7:8], off                     // 0000000723D0: DC6E0000 007C070B
	global_store_b64 v[0:1], v[9:10], off                      // 0000000723D8: DC6E0000 007C0900
	s_nop 0                                                    // 0000000723E0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000723E4: BFB60003
	s_endpgm                                                   // 0000000723E8: BFB00000
mul_long_get_group_id_get_local_id_symend:
	.long 0xbf800000                                           // 0000000723EC: BF800000
	.long 0xbf800000                                           // 0000000723F0: BF800000
	.long 0xbf800000                                           // 0000000723F4: BF800000
	.long 0xbf800000                                           // 0000000723F8: BF800000
	.long 0xbf800000                                           // 0000000723FC: BF800000

	.p2align	8
	.type	mul_long_get_local_size_get_local_id,@function
	.size	mul_long_get_local_size_get_local_id, mul_long_get_local_size_get_local_id_symend-mul_long_get_local_size_get_local_id
mul_long_get_local_size_get_local_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000072400: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000072408: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007240C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000072410: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000072414: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000072418: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000007241C: 840E8204
	v_mov_b32_e32 v1, 0                                        // 000000072420: 7E020280
	v_and_b32_e32 v11, 0x3ff, v0                               // 000000072424: 361600FF 000003FF
	v_bfe_u32 v12, v0, 10, 10                                  // 00000007242C: D610000C 02291500
	v_bfe_u32 v13, v0, 20, 10                                  // 000000072434: D610000D 02292900
	s_mov_b32 s33, 0                                           // 00000007243C: BEA10080
	v_mov_b32_e32 v3, v1                                       // 000000072440: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000072444: 7E0A0301
	v_mov_b32_e32 v7, v1                                       // 000000072448: 7E0E0301
	s_cmp_lt_u32 s2, s8                                        // 00000007244C: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000072450: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000072454: BF8704D9
	s_add_u32 s6, s5, s2                                       // 000000072458: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007245C: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000072460: BF0A0903
	global_load_u16 v8, v1, s[6:7]                             // 000000072464: DC4A0000 08060001
	s_cselect_b32 s2, 14, 20                                   // 00000007246C: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000072470: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000072474: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000072478: BF0A0A04
	global_load_u16 v9, v1, s[2:3]                             // 00000007247C: DC4A0000 09020001
	s_cselect_b32 s2, 16, 22                                   // 000000072484: 98029690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000072488: BF870009
	s_add_u32 s2, s5, s2                                       // 00000007248C: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000072490: 8203800B
	global_load_u16 v10, v1, s[2:3]                            // 000000072494: DC4A0000 0A020001
	s_clause 0x2                                               // 00000007249C: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 0000000724A0: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 0000000724A8: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000724B0: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000724B8: BF89FC07
	v_add3_u32 v2, s4, s12, v11                                // 0000000724BC: D6550002 042C1804
	v_add3_u32 v4, s6, s13, v12                                // 0000000724C4: D6550004 04301A06
	v_add3_u32 v6, s2, s14, v13                                // 0000000724CC: D6550006 04341C02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000724D4: BF870193
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000724D8: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000724E0: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000724E8: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000724EC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000724F4: 40060601
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000724F8: BF870213
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000724FC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000072504: 400A0A01
	s_waitcnt vmcnt(2)                                         // 000000072508: BF890BF7
	v_mul_u32_u24_e32 v0, v8, v11                              // 00000007250C: 16001708
	global_store_b64 v[2:3], v[0:1], off                       // 000000072510: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 000000072518: D73C0002 00020C83
	s_waitcnt vmcnt(1)                                         // 000000072520: BF8907F7
	v_mul_u32_u24_e32 v0, v9, v12                              // 000000072524: 16001909
	s_delay_alu instid0(VALU_DEP_2)                            // 000000072528: BF870002
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007252C: D7006A02 00020400
	global_store_b64 v[4:5], v[0:1], off                       // 000000072534: DC6E0000 007C0004
	s_waitcnt vmcnt(0)                                         // 00000007253C: BF8903F7
	v_mul_u32_u24_e32 v0, v10, v13                             // 000000072540: 16001B0A
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000072544: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000072548: DC6E0000 007C0002
	s_nop 0                                                    // 000000072550: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072554: BFB60003
	s_endpgm                                                   // 000000072558: BFB00000
mul_long_get_local_size_get_local_id_symend:
	.long 0xbf800000                                           // 00000007255C: BF800000
	.long 0xbf800000                                           // 000000072560: BF800000
	.long 0xbf800000                                           // 000000072564: BF800000
	.long 0xbf800000                                           // 000000072568: BF800000
	.long 0xbf800000                                           // 00000007256C: BF800000
	.long 0xbf800000                                           // 000000072570: BF800000
	.long 0xbf800000                                           // 000000072574: BF800000
	.long 0xbf800000                                           // 000000072578: BF800000
	.long 0xbf800000                                           // 00000007257C: BF800000
	.long 0xbf800000                                           // 000000072580: BF800000
	.long 0xbf800000                                           // 000000072584: BF800000
	.long 0xbf800000                                           // 000000072588: BF800000
	.long 0xbf800000                                           // 00000007258C: BF800000
	.long 0xbf800000                                           // 000000072590: BF800000
	.long 0xbf800000                                           // 000000072594: BF800000
	.long 0xbf800000                                           // 000000072598: BF800000
	.long 0xbf800000                                           // 00000007259C: BF800000
	.long 0xbf800000                                           // 0000000725A0: BF800000
	.long 0xbf800000                                           // 0000000725A4: BF800000
	.long 0xbf800000                                           // 0000000725A8: BF800000
	.long 0xbf800000                                           // 0000000725AC: BF800000
	.long 0xbf800000                                           // 0000000725B0: BF800000
	.long 0xbf800000                                           // 0000000725B4: BF800000
	.long 0xbf800000                                           // 0000000725B8: BF800000
	.long 0xbf800000                                           // 0000000725BC: BF800000
	.long 0xbf800000                                           // 0000000725C0: BF800000
	.long 0xbf800000                                           // 0000000725C4: BF800000
	.long 0xbf800000                                           // 0000000725C8: BF800000
	.long 0xbf800000                                           // 0000000725CC: BF800000
	.long 0xbf800000                                           // 0000000725D0: BF800000
	.long 0xbf800000                                           // 0000000725D4: BF800000
	.long 0xbf800000                                           // 0000000725D8: BF800000
	.long 0xbf800000                                           // 0000000725DC: BF800000
	.long 0xbf800000                                           // 0000000725E0: BF800000
	.long 0xbf800000                                           // 0000000725E4: BF800000
	.long 0xbf800000                                           // 0000000725E8: BF800000
	.long 0xbf800000                                           // 0000000725EC: BF800000
	.long 0xbf800000                                           // 0000000725F0: BF800000
	.long 0xbf800000                                           // 0000000725F4: BF800000
	.long 0xbf800000                                           // 0000000725F8: BF800000
	.long 0xbf800000                                           // 0000000725FC: BF800000

	.p2align	8
	.type	mul_long_get_global_id_get_local_id,@function
	.size	mul_long_get_global_id_get_local_id, mul_long_get_global_id_get_local_id_symend-mul_long_get_global_id_get_local_id
mul_long_get_global_id_get_local_id:
	s_clause 0x1                                               // 000000072600: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007260C: F4000140 F8000048
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v11, 0x3ff, v0      // 000000072614: CA240080 020A00FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072620: F4040000 F8000008
	v_bfe_u32 v7, v0, 10, 10                                   // 000000072628: D6100007 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072630: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000072638: BF8700B3
	v_lshl_or_b32 v1, s2, 1, v11                               // 00000007263C: D6560001 042D0202
	s_lshl_b32 s2, s3, 1                                       // 000000072644: 84028103
	s_mov_b32 s33, 0                                           // 000000072648: BEA10080
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007264C: D73C0003 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000072654: BF89FC07
	v_add_nc_u32_e32 v12, s8, v1                               // 000000072658: 4A180208
	v_add3_u32 v1, s10, s2, v7                                 // 00000007265C: D6550001 041C040A
	s_lshl_b32 s2, s4, 2                                       // 000000072664: 84028204
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000072668: BF870113
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000007266C: D7006A03 00020600
	v_mad_u64_u32 v[5:6], null, v1, v7, 0                      // 000000072674: D6FE7C05 02020F01
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 00000007267C: D73C0007 00020283
	v_add3_u32 v1, s5, s2, v0                                  // 000000072684: D6550001 04000405
	v_mad_u64_u32 v[9:10], null, v12, v11, 0                   // 00000007268C: D6FE7C09 0202170C
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000072694: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000072698: BF8701C3
	v_mad_u64_u32 v[11:12], null, v1, v0, 0                    // 00000007269C: D6FE7C0B 02020101
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000726A4: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 0000000726AC: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 0000000726B4: 40101001
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000726B8: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000726C0: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000726C4: 40020201
	s_clause 0x2                                               // 0000000726C8: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 0000000726CC: DC6E0000 007C0903
	global_store_b64 v[7:8], v[5:6], off                       // 0000000726D4: DC6E0000 007C0507
	global_store_b64 v[0:1], v[11:12], off                     // 0000000726DC: DC6E0000 007C0B00
	s_nop 0                                                    // 0000000726E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000726E8: BFB60003
	s_endpgm                                                   // 0000000726EC: BFB00000
mul_long_get_global_id_get_local_id_symend:
	.long 0xbf800000                                           // 0000000726F0: BF800000
	.long 0xbf800000                                           // 0000000726F4: BF800000
	.long 0xbf800000                                           // 0000000726F8: BF800000
	.long 0xbf800000                                           // 0000000726FC: BF800000

	.p2align	8
	.type	mul_long_get_global_size_get_local_id,@function
	.size	mul_long_get_global_size_get_local_id, mul_long_get_global_size_get_local_id_symend-mul_long_get_global_size_get_local_id
mul_long_get_global_size_get_local_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v11, 0x3ff, v0      // 000000072700: CA240080 020A00FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000007270C: 84028402
	v_bfe_u32 v13, v0, 10, 10                                  // 000000072710: D610000D 02291500
	v_bfe_u32 v9, v0, 20, 10                                   // 000000072718: D6100009 02292900
	s_clause 0x1                                               // 000000072720: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000072724: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007272C: DC4A0026 08000002
	s_clause 0x3                                               // 000000072734: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072738: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000072740: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000072748: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000072750: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 000000072758: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007275C: BF89FC07
	v_add3_u32 v1, s8, s2, v11                                 // 000000072760: D6550001 042C0408
	s_lshl_b32 s2, s3, 1                                       // 000000072768: 84028103
	s_lshl_b32 s3, s4, 1                                       // 00000007276C: 84038104
	s_lshl_b32 s6, s14, 1                                      // 000000072770: 8406810E
	s_lshl_b32 s4, s13, 1                                      // 000000072774: 8404810D
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000072778: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v13                                // 000000072780: D6550001 0434040A
	s_lshl_b32 s2, s12, 4                                      // 000000072788: 8402840C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007278C: BF870221
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000072790: D73C0005 00020283
	v_add3_u32 v1, s5, s3, v9                                  // 000000072798: D6550001 04240605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000727A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000727A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000727AC: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000727B0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000727B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000727C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000727C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000727CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000727D0: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000727D4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 0000000727D8: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 0000000727DC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 0000000727E4: BF8903F7
	v_add_nc_u32_e32 v10, s6, v8                               // 0000000727E8: 4A141006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000727EC: BF870193
	v_add_nc_u32_e32 v2, s4, v2                                // 0000000727F0: 4A040404
	v_add_nc_u32_e32 v12, s2, v7                               // 0000000727F4: 4A180E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000727F8: BF870113
	v_mad_u64_u32 v[7:8], null, v10, v9, 0                     // 0000000727FC: D6FE7C07 0202130A
	v_mad_u64_u32 v[9:10], null, v12, v11, 0                   // 000000072804: D6FE7C09 0202170C
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007280C: BF870004
	v_mad_u64_u32 v[11:12], null, v2, v13, 0                   // 000000072810: D6FE7C0B 02021B02
	s_clause 0x2                                               // 000000072818: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 00000007281C: DC6E0000 007C0903
	global_store_b64 v[5:6], v[11:12], off                     // 000000072824: DC6E0000 007C0B05
	global_store_b64 v[0:1], v[7:8], off                       // 00000007282C: DC6E0000 007C0700
	s_nop 0                                                    // 000000072834: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072838: BFB60003
	s_endpgm                                                   // 00000007283C: BFB00000
mul_long_get_global_size_get_local_id_symend:
	.long 0xbf800000                                           // 000000072840: BF800000
	.long 0xbf800000                                           // 000000072844: BF800000
	.long 0xbf800000                                           // 000000072848: BF800000
	.long 0xbf800000                                           // 00000007284C: BF800000
	.long 0xbf800000                                           // 000000072850: BF800000
	.long 0xbf800000                                           // 000000072854: BF800000
	.long 0xbf800000                                           // 000000072858: BF800000
	.long 0xbf800000                                           // 00000007285C: BF800000
	.long 0xbf800000                                           // 000000072860: BF800000
	.long 0xbf800000                                           // 000000072864: BF800000
	.long 0xbf800000                                           // 000000072868: BF800000
	.long 0xbf800000                                           // 00000007286C: BF800000
	.long 0xbf800000                                           // 000000072870: BF800000
	.long 0xbf800000                                           // 000000072874: BF800000
	.long 0xbf800000                                           // 000000072878: BF800000
	.long 0xbf800000                                           // 00000007287C: BF800000
	.long 0xbf800000                                           // 000000072880: BF800000
	.long 0xbf800000                                           // 000000072884: BF800000
	.long 0xbf800000                                           // 000000072888: BF800000
	.long 0xbf800000                                           // 00000007288C: BF800000
	.long 0xbf800000                                           // 000000072890: BF800000
	.long 0xbf800000                                           // 000000072894: BF800000
	.long 0xbf800000                                           // 000000072898: BF800000
	.long 0xbf800000                                           // 00000007289C: BF800000
	.long 0xbf800000                                           // 0000000728A0: BF800000
	.long 0xbf800000                                           // 0000000728A4: BF800000
	.long 0xbf800000                                           // 0000000728A8: BF800000
	.long 0xbf800000                                           // 0000000728AC: BF800000
	.long 0xbf800000                                           // 0000000728B0: BF800000
	.long 0xbf800000                                           // 0000000728B4: BF800000
	.long 0xbf800000                                           // 0000000728B8: BF800000
	.long 0xbf800000                                           // 0000000728BC: BF800000
	.long 0xbf800000                                           // 0000000728C0: BF800000
	.long 0xbf800000                                           // 0000000728C4: BF800000
	.long 0xbf800000                                           // 0000000728C8: BF800000
	.long 0xbf800000                                           // 0000000728CC: BF800000
	.long 0xbf800000                                           // 0000000728D0: BF800000
	.long 0xbf800000                                           // 0000000728D4: BF800000
	.long 0xbf800000                                           // 0000000728D8: BF800000
	.long 0xbf800000                                           // 0000000728DC: BF800000
	.long 0xbf800000                                           // 0000000728E0: BF800000
	.long 0xbf800000                                           // 0000000728E4: BF800000
	.long 0xbf800000                                           // 0000000728E8: BF800000
	.long 0xbf800000                                           // 0000000728EC: BF800000
	.long 0xbf800000                                           // 0000000728F0: BF800000
	.long 0xbf800000                                           // 0000000728F4: BF800000
	.long 0xbf800000                                           // 0000000728F8: BF800000
	.long 0xbf800000                                           // 0000000728FC: BF800000

	.p2align	8
	.type	mul_long_get_num_groups_get_local_id,@function
	.size	mul_long_get_num_groups_get_local_id, mul_long_get_num_groups_get_local_id_symend-mul_long_get_num_groups_get_local_id
mul_long_get_num_groups_get_local_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 000000072900: CA240080 020800FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007290C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000072914: 84028102
	v_bfe_u32 v11, v0, 10, 10                                  // 000000072918: D610000B 02291500
	s_clause 0x1                                               // 000000072920: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000072924: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007292C: DC4A0026 08000002
	s_clause 0x2                                               // 000000072934: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072938: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000072940: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000072948: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000072950: 84008103
	v_bfe_u32 v13, v0, 20, 10                                  // 000000072954: D610000D 02292900
	s_mov_b32 s33, 0                                           // 00000007295C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072960: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 000000072964: D6550001 04240408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007296C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000072970: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v11                                // 000000072978: D6550001 042C000A
	s_lshl_b32 s0, s4, 2                                       // 000000072980: 84008204
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000072984: D73C0005 00020283
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000007298C: BF870213
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000072990: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000072998: 40080807
	v_add3_u32 v1, s5, s0, v13                                 // 00000007299C: D6550001 04340005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000729A4: BF870094
	v_add_co_u32 v5, s1, s6, v5                                // 0000000729A8: D7000105 00020A06
	v_add_co_ci_u32_e64 v6, s1, s7, v6, s1                     // 0000000729B0: D5200106 00060C07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 0000000729B8: BF870143
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000729BC: D73C0000 00020283
	s_waitcnt vmcnt(1)                                         // 0000000729C4: BF8907F7
	v_lshrrev_b32_e32 v10, 16, v7                              // 0000000729C8: 32140E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000729CC: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v10.l                              // 0000000729D0: D43D0000 00021480
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000729D8: BF07806A
	s_waitcnt vmcnt(0)                                         // 0000000729DC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 0000000729E0: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 0000000729E4: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000729E8: BF870009
	v_mad_u64_u32 v[7:8], null, s1, v9, 0                      // 0000000729EC: D6FE7C07 02021201
	s_cmp_lg_u32 s0, 0                                         // 0000000729F4: BF078000
	s_addc_u32 s0, s13, 0                                      // 0000000729F8: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000729FC: BF07806A
	v_mad_u64_u32 v[9:10], null, s0, v11, 0                    // 000000072A00: D6FE7C09 02021600
	s_addc_u32 s0, s14, 0                                      // 000000072A08: 8200800E
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000072A0C: D7006A00 00020006
	v_mad_u64_u32 v[11:12], null, s0, v13, 0                   // 000000072A14: D6FE7C0B 02021A00
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000072A1C: 40020207
	s_clause 0x2                                               // 000000072A20: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000072A24: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000072A2C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000072A34: DC6E0000 007C0B00
	s_nop 0                                                    // 000000072A3C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072A40: BFB60003
	s_endpgm                                                   // 000000072A44: BFB00000
mul_long_get_num_groups_get_local_id_symend:
	.long 0xbf800000                                           // 000000072A48: BF800000
	.long 0xbf800000                                           // 000000072A4C: BF800000
	.long 0xbf800000                                           // 000000072A50: BF800000
	.long 0xbf800000                                           // 000000072A54: BF800000
	.long 0xbf800000                                           // 000000072A58: BF800000
	.long 0xbf800000                                           // 000000072A5C: BF800000
	.long 0xbf800000                                           // 000000072A60: BF800000
	.long 0xbf800000                                           // 000000072A64: BF800000
	.long 0xbf800000                                           // 000000072A68: BF800000
	.long 0xbf800000                                           // 000000072A6C: BF800000
	.long 0xbf800000                                           // 000000072A70: BF800000
	.long 0xbf800000                                           // 000000072A74: BF800000
	.long 0xbf800000                                           // 000000072A78: BF800000
	.long 0xbf800000                                           // 000000072A7C: BF800000
	.long 0xbf800000                                           // 000000072A80: BF800000
	.long 0xbf800000                                           // 000000072A84: BF800000
	.long 0xbf800000                                           // 000000072A88: BF800000
	.long 0xbf800000                                           // 000000072A8C: BF800000
	.long 0xbf800000                                           // 000000072A90: BF800000
	.long 0xbf800000                                           // 000000072A94: BF800000
	.long 0xbf800000                                           // 000000072A98: BF800000
	.long 0xbf800000                                           // 000000072A9C: BF800000
	.long 0xbf800000                                           // 000000072AA0: BF800000
	.long 0xbf800000                                           // 000000072AA4: BF800000
	.long 0xbf800000                                           // 000000072AA8: BF800000
	.long 0xbf800000                                           // 000000072AAC: BF800000
	.long 0xbf800000                                           // 000000072AB0: BF800000
	.long 0xbf800000                                           // 000000072AB4: BF800000
	.long 0xbf800000                                           // 000000072AB8: BF800000
	.long 0xbf800000                                           // 000000072ABC: BF800000
	.long 0xbf800000                                           // 000000072AC0: BF800000
	.long 0xbf800000                                           // 000000072AC4: BF800000
	.long 0xbf800000                                           // 000000072AC8: BF800000
	.long 0xbf800000                                           // 000000072ACC: BF800000
	.long 0xbf800000                                           // 000000072AD0: BF800000
	.long 0xbf800000                                           // 000000072AD4: BF800000
	.long 0xbf800000                                           // 000000072AD8: BF800000
	.long 0xbf800000                                           // 000000072ADC: BF800000
	.long 0xbf800000                                           // 000000072AE0: BF800000
	.long 0xbf800000                                           // 000000072AE4: BF800000
	.long 0xbf800000                                           // 000000072AE8: BF800000
	.long 0xbf800000                                           // 000000072AEC: BF800000
	.long 0xbf800000                                           // 000000072AF0: BF800000
	.long 0xbf800000                                           // 000000072AF4: BF800000
	.long 0xbf800000                                           // 000000072AF8: BF800000
	.long 0xbf800000                                           // 000000072AFC: BF800000

	.p2align	8
	.type	mul_long_get_work_dim_get_local_id,@function
	.size	mul_long_get_work_dim_get_local_id, mul_long_get_work_dim_get_local_id_symend-mul_long_get_work_dim_get_local_id
mul_long_get_work_dim_get_local_id:
	s_clause 0x3                                               // 000000072B00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072B04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 000000072B0C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 000000072B14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072B1C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 000000072B24: CA240080 010800FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000072B30: 84028102
	v_bfe_u32 v9, v0, 10, 10                                   // 000000072B34: D6100009 02291500
	s_lshl_b32 s3, s3, 1                                       // 000000072B3C: 84038103
	s_delay_alu instid0(VALU_DEP_2)                            // 000000072B40: BF870002
	v_mov_b32_e32 v3, v1                                       // 000000072B44: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000072B48: 7E0A0301
	v_bfe_u32 v10, v0, 20, 10                                  // 000000072B4C: D610000A 02292900
	s_lshl_b32 s4, s4, 2                                       // 000000072B54: 84048204
	v_mov_b32_e32 v7, v1                                       // 000000072B58: 7E0E0301
	s_mov_b32 s33, 0                                           // 000000072B5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072B60: BF89FC07
	v_add3_u32 v2, s8, s2, v8                                  // 000000072B64: D6550002 04200408
	v_add3_u32 v4, s10, s3, v9                                 // 000000072B6C: D6550004 0424060A
	s_and_b32 s2, s5, 0xffff                                   // 000000072B74: 8B02FF05 0000FFFF
	v_add3_u32 v6, s6, s4, v10                                 // 000000072B7C: D6550006 04280806
	v_mul_u32_u24_e32 v0, s2, v8                               // 000000072B84: 16001002
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000072B88: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000072B90: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072B98: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000072B9C: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000072BA4: 40060601
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000072BA8: BF870213
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000072BAC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000072BB4: 400A0A01
	global_store_b64 v[2:3], v[0:1], off                       // 000000072BB8: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 000000072BC0: D73C0002 00020C83
	v_mul_u32_u24_e32 v0, s2, v9                               // 000000072BC8: 16001202
	global_store_b64 v[4:5], v[0:1], off                       // 000000072BCC: DC6E0000 007C0004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000072BD4: D7006A02 00020400
	v_mul_u32_u24_e32 v0, s2, v10                              // 000000072BDC: 16001402
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000072BE0: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000072BE4: DC6E0000 007C0002
	s_nop 0                                                    // 000000072BEC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072BF0: BFB60003
	s_endpgm                                                   // 000000072BF4: BFB00000
mul_long_get_work_dim_get_local_id_symend:
	.long 0xbf800000                                           // 000000072BF8: BF800000
	.long 0xbf800000                                           // 000000072BFC: BF800000

	.p2align	8
	.type	mul_long_x_get_group_id,@function
	.size	mul_long_x_get_group_id, mul_long_x_get_group_id_symend-mul_long_x_get_group_id
mul_long_x_get_group_id:
	s_clause 0x3                                               // 000000072C00: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 000000072C04: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072C0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], null                            // 000000072C14: F4040180 F8000000
	s_load_b32 s0, s[0:1], 0x48                                // 000000072C1C: F4000000 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000072C24: CA240080 010200FF 000003FF
	s_waitcnt lgkmcnt(0)                                       // 000000072C30: BF89FC07
	s_lshl_b32 s9, s2, 4                                       // 000000072C34: 84098402
	v_bfe_u32 v4, v0, 10, 10                                   // 000000072C38: D6100004 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000072C40: D610000A 02292900
	s_lshl_b32 s1, s3, 1                                       // 000000072C48: 84018103
	s_lshl_b32 s11, s4, 1                                      // 000000072C4C: 840B8104
	s_mov_b32 s33, 0                                           // 000000072C50: BEA10080
	s_ashr_i32 s12, s5, 31                                     // 000000072C54: 860C9F05
	v_add3_u32 v0, s8, s9, v2                                  // 000000072C58: D6550000 04081208
	s_mul_hi_u32 s13, s5, s2                                   // 000000072C60: 968D0205
	s_mul_i32 s8, s5, s2                                       // 000000072C64: 96080205
	s_mul_i32 s2, s12, s2                                      // 000000072C68: 9602020C
	s_mul_hi_u32 s9, s5, s3                                    // 000000072C6C: 96890305
	v_lshlrev_b64 v[2:3], 3, v[0:1]                            // 000000072C70: D73C0002 00020083
	v_add3_u32 v0, s10, s1, v4                                 // 000000072C78: D6550000 0410020A
	s_mul_i32 s1, s12, s3                                      // 000000072C80: 9601030C
	s_add_i32 s13, s13, s2                                     // 000000072C84: 810D020D
	s_mul_i32 s12, s12, s4                                     // 000000072C88: 960C040C
	s_mul_i32 s14, s5, s3                                      // 000000072C8C: 960E0305
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 000000072C90: D73C0006 00020083
	v_add3_u32 v0, s0, s11, v10                                // 000000072C98: D6550000 04281600
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000072CA0: D7006A02 00020406
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000072CA8: 40060607
	s_delay_alu instid0(VALU_DEP_3)                            // 000000072CAC: BF870003
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000072CB0: D73C0000 00020083
	v_add_co_u32 v6, vcc_lo, s6, v6                            // 000000072CB8: D7006A06 00020C06
	s_mul_hi_u32 s0, s5, s4                                    // 000000072CC0: 96800405
	s_add_i32 s9, s9, s1                                       // 000000072CC4: 81090109
	v_add_co_ci_u32_e32 v7, vcc_lo, s7, v7, vcc_lo             // 000000072CC8: 400E0E07
	v_dual_mov_b32 v4, s8 :: v_dual_mov_b32 v5, s13            // 000000072CCC: CA100008 0404000D
	s_mul_i32 s5, s5, s4                                       // 000000072CD4: 96050405
	s_add_i32 s0, s0, s12                                      // 000000072CD8: 81000C00
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000072CDC: D7006A00 00020006
	v_dual_mov_b32 v8, s14 :: v_dual_mov_b32 v9, s9            // 000000072CE4: CA10000E 08080009
	v_dual_mov_b32 v10, s5 :: v_dual_mov_b32 v11, s0           // 000000072CEC: CA100005 0A0A0000
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000072CF4: 40020207
	s_clause 0x2                                               // 000000072CF8: BF850002
	global_store_b64 v[2:3], v[4:5], off                       // 000000072CFC: DC6E0000 007C0402
	global_store_b64 v[6:7], v[8:9], off                       // 000000072D04: DC6E0000 007C0806
	global_store_b64 v[0:1], v[10:11], off                     // 000000072D0C: DC6E0000 007C0A00
	s_nop 0                                                    // 000000072D14: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072D18: BFB60003
	s_endpgm                                                   // 000000072D1C: BFB00000
mul_long_x_get_group_id_symend:
	.long 0xbf800000                                           // 000000072D20: BF800000
	.long 0xbf800000                                           // 000000072D24: BF800000
	.long 0xbf800000                                           // 000000072D28: BF800000
	.long 0xbf800000                                           // 000000072D2C: BF800000
	.long 0xbf800000                                           // 000000072D30: BF800000
	.long 0xbf800000                                           // 000000072D34: BF800000
	.long 0xbf800000                                           // 000000072D38: BF800000
	.long 0xbf800000                                           // 000000072D3C: BF800000
	.long 0xbf800000                                           // 000000072D40: BF800000
	.long 0xbf800000                                           // 000000072D44: BF800000
	.long 0xbf800000                                           // 000000072D48: BF800000
	.long 0xbf800000                                           // 000000072D4C: BF800000
	.long 0xbf800000                                           // 000000072D50: BF800000
	.long 0xbf800000                                           // 000000072D54: BF800000
	.long 0xbf800000                                           // 000000072D58: BF800000
	.long 0xbf800000                                           // 000000072D5C: BF800000
	.long 0xbf800000                                           // 000000072D60: BF800000
	.long 0xbf800000                                           // 000000072D64: BF800000
	.long 0xbf800000                                           // 000000072D68: BF800000
	.long 0xbf800000                                           // 000000072D6C: BF800000
	.long 0xbf800000                                           // 000000072D70: BF800000
	.long 0xbf800000                                           // 000000072D74: BF800000
	.long 0xbf800000                                           // 000000072D78: BF800000
	.long 0xbf800000                                           // 000000072D7C: BF800000
	.long 0xbf800000                                           // 000000072D80: BF800000
	.long 0xbf800000                                           // 000000072D84: BF800000
	.long 0xbf800000                                           // 000000072D88: BF800000
	.long 0xbf800000                                           // 000000072D8C: BF800000
	.long 0xbf800000                                           // 000000072D90: BF800000
	.long 0xbf800000                                           // 000000072D94: BF800000
	.long 0xbf800000                                           // 000000072D98: BF800000
	.long 0xbf800000                                           // 000000072D9C: BF800000
	.long 0xbf800000                                           // 000000072DA0: BF800000
	.long 0xbf800000                                           // 000000072DA4: BF800000
	.long 0xbf800000                                           // 000000072DA8: BF800000
	.long 0xbf800000                                           // 000000072DAC: BF800000
	.long 0xbf800000                                           // 000000072DB0: BF800000
	.long 0xbf800000                                           // 000000072DB4: BF800000
	.long 0xbf800000                                           // 000000072DB8: BF800000
	.long 0xbf800000                                           // 000000072DBC: BF800000
	.long 0xbf800000                                           // 000000072DC0: BF800000
	.long 0xbf800000                                           // 000000072DC4: BF800000
	.long 0xbf800000                                           // 000000072DC8: BF800000
	.long 0xbf800000                                           // 000000072DCC: BF800000
	.long 0xbf800000                                           // 000000072DD0: BF800000
	.long 0xbf800000                                           // 000000072DD4: BF800000
	.long 0xbf800000                                           // 000000072DD8: BF800000
	.long 0xbf800000                                           // 000000072DDC: BF800000
	.long 0xbf800000                                           // 000000072DE0: BF800000
	.long 0xbf800000                                           // 000000072DE4: BF800000
	.long 0xbf800000                                           // 000000072DE8: BF800000
	.long 0xbf800000                                           // 000000072DEC: BF800000
	.long 0xbf800000                                           // 000000072DF0: BF800000
	.long 0xbf800000                                           // 000000072DF4: BF800000
	.long 0xbf800000                                           // 000000072DF8: BF800000
	.long 0xbf800000                                           // 000000072DFC: BF800000

	.p2align	8
	.type	mul_long_get_global_offset_get_group_id,@function
	.size	mul_long_get_global_offset_get_group_id, mul_long_get_global_offset_get_group_id_symend-mul_long_get_global_offset_get_group_id
mul_long_get_global_offset_get_group_id:
	s_clause 0x2                                               // 000000072E00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072E04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000072E0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072E14: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000072E1C: CA240080 010200FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 000000072E28: 84068102
	v_bfe_u32 v6, v0, 10, 10                                   // 000000072E2C: D6100006 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 000000072E34: D610000C 02292900
	s_lshl_b32 s7, s3, 4                                       // 000000072E3C: 84078403
	s_waitcnt lgkmcnt(0)                                       // 000000072E40: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 000000072E44: 84098104
	s_mov_b32 s33, 0                                           // 000000072E48: BEA10080
	v_add3_u32 v0, s8, s6, v2                                  // 000000072E4C: D6550000 04080C08
	s_mul_hi_u32 s11, s8, s2                                   // 000000072E54: 968B0208
	s_mul_i32 s2, s8, s2                                       // 000000072E58: 96020208
	s_mul_hi_u32 s6, s10, s3                                   // 000000072E5C: 9686030A
	s_mul_i32 s3, s10, s3                                      // 000000072E60: 9603030A
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000072E64: D73C0004 00020083
	v_add3_u32 v0, s10, s7, v6                                 // 000000072E6C: D6550000 04180E0A
	s_mul_hi_u32 s8, s5, s4                                    // 000000072E74: 96880405
	s_mul_i32 s4, s5, s4                                       // 000000072E78: 96040405
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s11            // 000000072E7C: CA100002 0202000B
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000072E84: BF8701C2
	v_lshlrev_b64 v[10:11], 3, v[0:1]                          // 000000072E88: D73C000A 00020083
	v_add3_u32 v0, s5, s9, v12                                 // 000000072E90: D6550000 04301205
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000072E98: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000072EA0: 400A0A01
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000072EA4: D73C0000 00020083
	v_add_co_u32 v10, vcc_lo, s0, v10                          // 000000072EAC: D7006A0A 00021400
	v_add_co_ci_u32_e32 v11, vcc_lo, s1, v11, vcc_lo           // 000000072EB4: 40161601
	v_dual_mov_b32 v6, s3 :: v_dual_mov_b32 v7, s6             // 000000072EB8: CA100003 06060006
	s_delay_alu instid0(VALU_DEP_4)                            // 000000072EC0: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000072EC4: D7006A00 00020000
	v_dual_mov_b32 v8, s4 :: v_dual_mov_b32 v9, s8             // 000000072ECC: CA100004 08080008
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000072ED4: 40020201
	s_clause 0x2                                               // 000000072ED8: BF850002
	global_store_b64 v[4:5], v[2:3], off                       // 000000072EDC: DC6E0000 007C0204
	global_store_b64 v[10:11], v[6:7], off                     // 000000072EE4: DC6E0000 007C060A
	global_store_b64 v[0:1], v[8:9], off                       // 000000072EEC: DC6E0000 007C0800
	s_nop 0                                                    // 000000072EF4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072EF8: BFB60003
	s_endpgm                                                   // 000000072EFC: BFB00000
mul_long_get_global_offset_get_group_id_symend:

	.p2align	8
	.type	mul_long_get_local_id_get_group_id,@function
	.size	mul_long_get_local_id_get_group_id, mul_long_get_local_id_get_group_id_symend-mul_long_get_local_id_get_group_id
mul_long_get_local_id_get_group_id:
	s_clause 0x2                                               // 000000072F00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072F04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000072F0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072F14: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 000000072F1C: CA240080 020400FF 000003FF
	s_lshl_b32 s6, s2, 3                                       // 000000072F28: 84068302
	v_bfe_u32 v9, v0, 10, 10                                   // 000000072F2C: D6100009 02291500
	s_lshl_b32 s7, s3, 2                                       // 000000072F34: 84078203
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072F38: D6100000 02292900
	v_mad_u64_u32 v[3:4], null, v5, s2, 0                      // 000000072F40: D6FE7C03 02000505
	s_waitcnt lgkmcnt(0)                                       // 000000072F48: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 000000072F4C: 84098104
	v_mad_u64_u32 v[7:8], null, v9, s3, 0                      // 000000072F50: D6FE7C07 02000709
	s_mov_b32 s33, 0                                           // 000000072F58: BEA10080
	v_add3_u32 v1, s8, s6, v5                                  // 000000072F5C: D6550001 04140C08
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000072F64: BF870131
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000072F68: D73C0005 00020283
	v_add3_u32 v1, s10, s7, v9                                 // 000000072F70: D6550001 04240E0A
	v_mad_u64_u32 v[9:10], null, v0, s4, 0                     // 000000072F78: D6FE7C09 02000900
	v_lshlrev_b64 v[11:12], 3, v[1:2]                          // 000000072F80: D73C000B 00020283
	v_add3_u32 v1, s5, s9, v0                                  // 000000072F88: D6550001 04001205
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000072F90: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000072F98: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000072F9C: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000072FA0: D73C0000 00020283
	v_add_co_u32 v11, vcc_lo, s0, v11                          // 000000072FA8: D7006A0B 00021600
	v_add_co_ci_u32_e32 v12, vcc_lo, s1, v12, vcc_lo           // 000000072FB0: 40181801
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000072FB4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000072FBC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000072FC0: 40020201
	s_clause 0x2                                               // 000000072FC4: BF850002
	global_store_b64 v[5:6], v[3:4], off                       // 000000072FC8: DC6E0000 007C0305
	global_store_b64 v[11:12], v[7:8], off                     // 000000072FD0: DC6E0000 007C070B
	global_store_b64 v[0:1], v[9:10], off                      // 000000072FD8: DC6E0000 007C0900
	s_nop 0                                                    // 000000072FE0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072FE4: BFB60003
	s_endpgm                                                   // 000000072FE8: BFB00000
mul_long_get_local_id_get_group_id_symend:
	.long 0xbf800000                                           // 000000072FEC: BF800000
	.long 0xbf800000                                           // 000000072FF0: BF800000
	.long 0xbf800000                                           // 000000072FF4: BF800000
	.long 0xbf800000                                           // 000000072FF8: BF800000
	.long 0xbf800000                                           // 000000072FFC: BF800000

	.p2align	8
	.type	mul_long_get_group_id_get_group_id,@function
	.size	mul_long_get_group_id_get_group_id, mul_long_get_group_id_get_group_id_symend-mul_long_get_group_id_get_group_id
mul_long_get_group_id_get_group_id:
	s_clause 0x2                                               // 000000073000: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073004: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007300C: F4040180 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 000000073014: F4000000 F8000048
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007301C: CA240080 020000FF 000003FF
	s_lshl_b32 s5, s2, 1                                       // 000000073028: 84058102
	v_bfe_u32 v6, v0, 10, 10                                   // 00000007302C: D6100006 02291500
	s_lshl_b32 s1, s3, 4                                       // 000000073034: 84018403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000073038: D6100000 02292900
	s_waitcnt lgkmcnt(0)                                       // 000000073040: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 000000073044: 84098104
	s_mul_hi_u32 s11, s2, s2                                   // 000000073048: 968B0202
	s_mul_i32 s2, s2, s2                                       // 00000007304C: 96020202
	s_mul_hi_u32 s12, s3, s3                                   // 000000073050: 968C0303
	s_mul_i32 s3, s3, s3                                       // 000000073054: 96030303
	s_mul_hi_u32 s13, s4, s4                                   // 000000073058: 968D0404
	s_mul_i32 s4, s4, s4                                       // 00000007305C: 96040404
	v_dual_mov_b32 v3, s2 :: v_dual_mov_b32 v4, s11            // 000000073060: CA100002 0304000B
	v_mov_b32_e32 v5, s3                                       // 000000073068: 7E0A0203
	v_dual_mov_b32 v9, s4 :: v_dual_mov_b32 v10, s13           // 00000007306C: CA100004 090A000D
	v_add3_u32 v1, s8, s5, v1                                  // 000000073074: D6550001 04040A08
	s_mov_b32 s33, 0                                           // 00000007307C: BEA10080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000073080: BF870131
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 000000073084: D73C0007 00020283
	v_add3_u32 v1, s10, s1, v6                                 // 00000007308C: D6550001 0418020A
	v_mov_b32_e32 v6, s12                                      // 000000073094: 7E0C020C
	v_lshlrev_b64 v[11:12], 3, v[1:2]                          // 000000073098: D73C000B 00020283
	v_add3_u32 v1, s0, s9, v0                                  // 0000000730A0: D6550001 04001200
	v_add_co_u32 v7, vcc_lo, s6, v7                            // 0000000730A8: D7006A07 00020E06
	v_add_co_ci_u32_e32 v8, vcc_lo, s7, v8, vcc_lo             // 0000000730B0: 40101007
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000730B4: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000730B8: D73C0000 00020283
	v_add_co_u32 v11, vcc_lo, s6, v11                          // 0000000730C0: D7006A0B 00021606
	v_add_co_ci_u32_e32 v12, vcc_lo, s7, v12, vcc_lo           // 0000000730C8: 40181807
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000730CC: D7006A00 00020006
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000730D4: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000730D8: 40020207
	s_clause 0x2                                               // 0000000730DC: BF850002
	global_store_b64 v[7:8], v[3:4], off                       // 0000000730E0: DC6E0000 007C0307
	global_store_b64 v[11:12], v[5:6], off                     // 0000000730E8: DC6E0000 007C050B
	global_store_b64 v[0:1], v[9:10], off                      // 0000000730F0: DC6E0000 007C0900
	s_nop 0                                                    // 0000000730F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000730FC: BFB60003
	s_endpgm                                                   // 000000073100: BFB00000
mul_long_get_group_id_get_group_id_symend:
	.long 0xbf800000                                           // 000000073104: BF800000
	.long 0xbf800000                                           // 000000073108: BF800000
	.long 0xbf800000                                           // 00000007310C: BF800000
	.long 0xbf800000                                           // 000000073110: BF800000
	.long 0xbf800000                                           // 000000073114: BF800000
	.long 0xbf800000                                           // 000000073118: BF800000
	.long 0xbf800000                                           // 00000007311C: BF800000
	.long 0xbf800000                                           // 000000073120: BF800000
	.long 0xbf800000                                           // 000000073124: BF800000
	.long 0xbf800000                                           // 000000073128: BF800000
	.long 0xbf800000                                           // 00000007312C: BF800000
	.long 0xbf800000                                           // 000000073130: BF800000
	.long 0xbf800000                                           // 000000073134: BF800000
	.long 0xbf800000                                           // 000000073138: BF800000
	.long 0xbf800000                                           // 00000007313C: BF800000
	.long 0xbf800000                                           // 000000073140: BF800000
	.long 0xbf800000                                           // 000000073144: BF800000
	.long 0xbf800000                                           // 000000073148: BF800000
	.long 0xbf800000                                           // 00000007314C: BF800000
	.long 0xbf800000                                           // 000000073150: BF800000
	.long 0xbf800000                                           // 000000073154: BF800000
	.long 0xbf800000                                           // 000000073158: BF800000
	.long 0xbf800000                                           // 00000007315C: BF800000
	.long 0xbf800000                                           // 000000073160: BF800000
	.long 0xbf800000                                           // 000000073164: BF800000
	.long 0xbf800000                                           // 000000073168: BF800000
	.long 0xbf800000                                           // 00000007316C: BF800000
	.long 0xbf800000                                           // 000000073170: BF800000
	.long 0xbf800000                                           // 000000073174: BF800000
	.long 0xbf800000                                           // 000000073178: BF800000
	.long 0xbf800000                                           // 00000007317C: BF800000
	.long 0xbf800000                                           // 000000073180: BF800000
	.long 0xbf800000                                           // 000000073184: BF800000
	.long 0xbf800000                                           // 000000073188: BF800000
	.long 0xbf800000                                           // 00000007318C: BF800000
	.long 0xbf800000                                           // 000000073190: BF800000
	.long 0xbf800000                                           // 000000073194: BF800000
	.long 0xbf800000                                           // 000000073198: BF800000
	.long 0xbf800000                                           // 00000007319C: BF800000
	.long 0xbf800000                                           // 0000000731A0: BF800000
	.long 0xbf800000                                           // 0000000731A4: BF800000
	.long 0xbf800000                                           // 0000000731A8: BF800000
	.long 0xbf800000                                           // 0000000731AC: BF800000
	.long 0xbf800000                                           // 0000000731B0: BF800000
	.long 0xbf800000                                           // 0000000731B4: BF800000
	.long 0xbf800000                                           // 0000000731B8: BF800000
	.long 0xbf800000                                           // 0000000731BC: BF800000
	.long 0xbf800000                                           // 0000000731C0: BF800000
	.long 0xbf800000                                           // 0000000731C4: BF800000
	.long 0xbf800000                                           // 0000000731C8: BF800000
	.long 0xbf800000                                           // 0000000731CC: BF800000
	.long 0xbf800000                                           // 0000000731D0: BF800000
	.long 0xbf800000                                           // 0000000731D4: BF800000
	.long 0xbf800000                                           // 0000000731D8: BF800000
	.long 0xbf800000                                           // 0000000731DC: BF800000
	.long 0xbf800000                                           // 0000000731E0: BF800000
	.long 0xbf800000                                           // 0000000731E4: BF800000
	.long 0xbf800000                                           // 0000000731E8: BF800000
	.long 0xbf800000                                           // 0000000731EC: BF800000
	.long 0xbf800000                                           // 0000000731F0: BF800000
	.long 0xbf800000                                           // 0000000731F4: BF800000
	.long 0xbf800000                                           // 0000000731F8: BF800000
	.long 0xbf800000                                           // 0000000731FC: BF800000

	.p2align	8
	.type	mul_long_get_local_size_get_group_id,@function
	.size	mul_long_get_local_size_get_group_id, mul_long_get_local_size_get_group_id_symend-mul_long_get_local_size_get_group_id
mul_long_get_local_size_get_group_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000073200: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000073208: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007320C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000073210: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000073214: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000073218: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000007321C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000073220: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007322C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000073234: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007323C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000073240: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 000000073244: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000073248: BF8704C9
	s_add_u32 s6, s5, s6                                       // 00000007324C: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000073250: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000073254: BF0A0903
	s_cselect_b32 s8, 14, 20                                   // 000000073258: 9808948E
	s_add_u32 s8, s5, s8                                       // 00000007325C: 80080805
	s_addc_u32 s9, s11, 0                                      // 000000073260: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 000000073264: BF0A0A04
	s_clause 0x1                                               // 000000073268: BF850001
	global_load_u16 v7, v2, s[6:7]                             // 00000007326C: DC4A0000 07060002
	global_load_u16 v9, v2, s[8:9]                             // 000000073274: DC4A0000 09080002
	s_cselect_b32 s10, 16, 22                                  // 00000007327C: 980A9690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000073280: BF870009
	s_add_u32 s6, s5, s10                                      // 000000073284: 80060A05
	s_addc_u32 s7, s11, 0                                      // 000000073288: 8207800B
	global_load_u16 v11, v2, s[6:7]                            // 00000007328C: DC4A0000 0B060002
	s_clause 0x2                                               // 000000073294: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073298: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 0000000732A0: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000732A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000732B0: BF89FC07
	v_add3_u32 v1, s8, s12, v1                                 // 0000000732B4: D6550001 04041808
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000732BC: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000732C0: D73C0003 00020283
	v_add3_u32 v1, s10, s13, v5                                // 0000000732C8: D6550001 04141A0A
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000732D0: D73C0005 00020283
	v_add3_u32 v1, s5, s14, v0                                 // 0000000732D8: D6550001 04001C05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000732E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000732E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000732EC: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000732F0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000732F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000073300: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000073304: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000073308: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000073310: 40020201
	s_waitcnt vmcnt(2)                                         // 000000073314: BF890BF7
	v_mul_hi_u32 v8, v7, s2                                    // 000000073318: D72D0008 00000507
	v_mul_lo_u32 v7, v7, s2                                    // 000000073320: D72C0007 00000507
	s_waitcnt vmcnt(1)                                         // 000000073328: BF8907F7
	v_mul_hi_u32 v10, v9, s3                                   // 00000007332C: D72D000A 00000709
	v_mul_lo_u32 v9, v9, s3                                    // 000000073334: D72C0009 00000709
	s_waitcnt vmcnt(0)                                         // 00000007333C: BF8903F7
	v_mul_hi_u32 v12, v11, s4                                  // 000000073340: D72D000C 0000090B
	v_mul_lo_u32 v11, v11, s4                                  // 000000073348: D72C000B 0000090B
	s_clause 0x2                                               // 000000073350: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000073354: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 00000007335C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000073364: DC6E0000 007C0B00
	s_nop 0                                                    // 00000007336C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073370: BFB60003
	s_endpgm                                                   // 000000073374: BFB00000
mul_long_get_local_size_get_group_id_symend:
	.long 0xbf800000                                           // 000000073378: BF800000
	.long 0xbf800000                                           // 00000007337C: BF800000
	.long 0xbf800000                                           // 000000073380: BF800000
	.long 0xbf800000                                           // 000000073384: BF800000
	.long 0xbf800000                                           // 000000073388: BF800000
	.long 0xbf800000                                           // 00000007338C: BF800000
	.long 0xbf800000                                           // 000000073390: BF800000
	.long 0xbf800000                                           // 000000073394: BF800000
	.long 0xbf800000                                           // 000000073398: BF800000
	.long 0xbf800000                                           // 00000007339C: BF800000
	.long 0xbf800000                                           // 0000000733A0: BF800000
	.long 0xbf800000                                           // 0000000733A4: BF800000
	.long 0xbf800000                                           // 0000000733A8: BF800000
	.long 0xbf800000                                           // 0000000733AC: BF800000
	.long 0xbf800000                                           // 0000000733B0: BF800000
	.long 0xbf800000                                           // 0000000733B4: BF800000
	.long 0xbf800000                                           // 0000000733B8: BF800000
	.long 0xbf800000                                           // 0000000733BC: BF800000
	.long 0xbf800000                                           // 0000000733C0: BF800000
	.long 0xbf800000                                           // 0000000733C4: BF800000
	.long 0xbf800000                                           // 0000000733C8: BF800000
	.long 0xbf800000                                           // 0000000733CC: BF800000
	.long 0xbf800000                                           // 0000000733D0: BF800000
	.long 0xbf800000                                           // 0000000733D4: BF800000
	.long 0xbf800000                                           // 0000000733D8: BF800000
	.long 0xbf800000                                           // 0000000733DC: BF800000
	.long 0xbf800000                                           // 0000000733E0: BF800000
	.long 0xbf800000                                           // 0000000733E4: BF800000
	.long 0xbf800000                                           // 0000000733E8: BF800000
	.long 0xbf800000                                           // 0000000733EC: BF800000
	.long 0xbf800000                                           // 0000000733F0: BF800000
	.long 0xbf800000                                           // 0000000733F4: BF800000
	.long 0xbf800000                                           // 0000000733F8: BF800000
	.long 0xbf800000                                           // 0000000733FC: BF800000

	.p2align	8
	.type	mul_long_get_global_id_get_group_id,@function
	.size	mul_long_get_global_id_get_group_id, mul_long_get_global_id_get_group_id_symend-mul_long_get_global_id_get_group_id
mul_long_get_global_id_get_group_id:
	s_clause 0x1                                               // 000000073400: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073404: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007340C: F4000140 F8000048
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000073414: CA240080 020000FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000073420: F4040000 F8000008
	v_bfe_u32 v5, v0, 10, 10                                   // 000000073428: D6100005 02291500
	s_lshl_b32 s6, s3, 1                                       // 000000073430: 84068103
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000073434: BF870132
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000073438: D6560001 04050202
	v_bfe_u32 v0, v0, 20, 10                                   // 000000073440: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000073448: BEA10080
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007344C: D73C0003 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000073454: BF89FC07
	v_add_nc_u32_e32 v11, s8, v1                               // 000000073458: 4A160208
	v_add3_u32 v1, s10, s6, v5                                 // 00000007345C: D6550001 04140C0A
	s_lshl_b32 s6, s4, 2                                       // 000000073464: 84068204
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000073468: BF870113
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000007346C: D7006A03 00020600
	v_mad_u64_u32 v[5:6], null, v1, s3, 0                      // 000000073474: D6FE7C05 02000701
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 00000007347C: D73C0007 00020283
	v_add3_u32 v1, s5, s6, v0                                  // 000000073484: D6550001 04000C05
	v_mad_u64_u32 v[9:10], null, v11, s2, 0                    // 00000007348C: D6FE7C09 0200050B
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000073494: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000073498: BF8701C3
	v_mad_u64_u32 v[11:12], null, v1, s4, 0                    // 00000007349C: D6FE7C0B 02000901
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000734A4: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 0000000734AC: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 0000000734B4: 40101001
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000734B8: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000734C0: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000734C4: 40020201
	s_clause 0x2                                               // 0000000734C8: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 0000000734CC: DC6E0000 007C0903
	global_store_b64 v[7:8], v[5:6], off                       // 0000000734D4: DC6E0000 007C0507
	global_store_b64 v[0:1], v[11:12], off                     // 0000000734DC: DC6E0000 007C0B00
	s_nop 0                                                    // 0000000734E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000734E8: BFB60003
	s_endpgm                                                   // 0000000734EC: BFB00000
mul_long_get_global_id_get_group_id_symend:
	.long 0xbf800000                                           // 0000000734F0: BF800000
	.long 0xbf800000                                           // 0000000734F4: BF800000
	.long 0xbf800000                                           // 0000000734F8: BF800000
	.long 0xbf800000                                           // 0000000734FC: BF800000

	.p2align	8
	.type	mul_long_get_global_size_get_group_id,@function
	.size	mul_long_get_global_size_get_group_id, mul_long_get_global_size_get_group_id_symend-mul_long_get_global_size_get_group_id
mul_long_get_global_size_get_group_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000073500: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 4                                       // 00000007350C: 84068402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000073510: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000073518: D6100000 02292900
	s_clause 0x1                                               // 000000073520: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000073524: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007352C: DC4A0026 08000002
	s_clause 0x3                                               // 000000073534: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073538: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000073540: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000073548: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000073550: F4040000 F8000000
	s_lshl_b32 s7, s4, 1                                       // 000000073558: 84078104
	s_mov_b32 s33, 0                                           // 00000007355C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000073560: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 000000073564: D6550001 04040C08
	s_lshl_b32 s6, s3, 1                                       // 00000007356C: 84068103
	s_lshl_b32 s8, s13, 1                                      // 000000073570: 8408810D
	s_lshl_b32 s9, s14, 1                                      // 000000073574: 8409810E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000073578: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007357C: D73C0003 00020283
	v_add3_u32 v1, s10, s6, v5                                 // 000000073584: D6550001 04140C0A
	s_lshl_b32 s6, s12, 4                                      // 00000007358C: 8406840C
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000073590: D73C0005 00020283
	v_add3_u32 v1, s5, s7, v0                                  // 000000073598: D6550001 04000E05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000735A0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000735A4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000735AC: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000735B0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000735B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000735C0: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000735C4: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000735C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000735D0: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000735D4: BF8907F7
	v_and_b32_e32 v9, 0xffff, v7                               // 0000000735D8: 36120EFF 0000FFFF
	v_lshrrev_b32_e32 v2, 16, v7                               // 0000000735E0: 32040E90
	s_waitcnt vmcnt(0)                                         // 0000000735E4: BF8903F7
	v_add_nc_u32_e32 v7, s9, v8                                // 0000000735E8: 4A0E1009
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000735EC: BF870193
	v_add_nc_u32_e32 v9, s6, v9                                // 0000000735F0: 4A121206
	v_add_nc_u32_e32 v2, s8, v2                                // 0000000735F4: 4A040408
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000735F8: BF870223
	v_mul_hi_u32 v8, v7, s4                                    // 0000000735FC: D72D0008 00000907
	v_mul_lo_u32 v7, v7, s4                                    // 000000073604: D72C0007 00000907
	v_mul_hi_u32 v10, v9, s2                                   // 00000007360C: D72D000A 00000509
	v_mul_lo_u32 v9, v9, s2                                    // 000000073614: D72C0009 00000509
	v_mul_hi_u32 v12, v2, s3                                   // 00000007361C: D72D000C 00000702
	v_mul_lo_u32 v11, v2, s3                                   // 000000073624: D72C000B 00000702
	s_clause 0x2                                               // 00000007362C: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 000000073630: DC6E0000 007C0903
	global_store_b64 v[5:6], v[11:12], off                     // 000000073638: DC6E0000 007C0B05
	global_store_b64 v[0:1], v[7:8], off                       // 000000073640: DC6E0000 007C0700
	s_nop 0                                                    // 000000073648: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007364C: BFB60003
	s_endpgm                                                   // 000000073650: BFB00000
mul_long_get_global_size_get_group_id_symend:
	.long 0xbf800000                                           // 000000073654: BF800000
	.long 0xbf800000                                           // 000000073658: BF800000
	.long 0xbf800000                                           // 00000007365C: BF800000
	.long 0xbf800000                                           // 000000073660: BF800000
	.long 0xbf800000                                           // 000000073664: BF800000
	.long 0xbf800000                                           // 000000073668: BF800000
	.long 0xbf800000                                           // 00000007366C: BF800000
	.long 0xbf800000                                           // 000000073670: BF800000
	.long 0xbf800000                                           // 000000073674: BF800000
	.long 0xbf800000                                           // 000000073678: BF800000
	.long 0xbf800000                                           // 00000007367C: BF800000
	.long 0xbf800000                                           // 000000073680: BF800000
	.long 0xbf800000                                           // 000000073684: BF800000
	.long 0xbf800000                                           // 000000073688: BF800000
	.long 0xbf800000                                           // 00000007368C: BF800000
	.long 0xbf800000                                           // 000000073690: BF800000
	.long 0xbf800000                                           // 000000073694: BF800000
	.long 0xbf800000                                           // 000000073698: BF800000
	.long 0xbf800000                                           // 00000007369C: BF800000
	.long 0xbf800000                                           // 0000000736A0: BF800000
	.long 0xbf800000                                           // 0000000736A4: BF800000
	.long 0xbf800000                                           // 0000000736A8: BF800000
	.long 0xbf800000                                           // 0000000736AC: BF800000
	.long 0xbf800000                                           // 0000000736B0: BF800000
	.long 0xbf800000                                           // 0000000736B4: BF800000
	.long 0xbf800000                                           // 0000000736B8: BF800000
	.long 0xbf800000                                           // 0000000736BC: BF800000
	.long 0xbf800000                                           // 0000000736C0: BF800000
	.long 0xbf800000                                           // 0000000736C4: BF800000
	.long 0xbf800000                                           // 0000000736C8: BF800000
	.long 0xbf800000                                           // 0000000736CC: BF800000
	.long 0xbf800000                                           // 0000000736D0: BF800000
	.long 0xbf800000                                           // 0000000736D4: BF800000
	.long 0xbf800000                                           // 0000000736D8: BF800000
	.long 0xbf800000                                           // 0000000736DC: BF800000
	.long 0xbf800000                                           // 0000000736E0: BF800000
	.long 0xbf800000                                           // 0000000736E4: BF800000
	.long 0xbf800000                                           // 0000000736E8: BF800000
	.long 0xbf800000                                           // 0000000736EC: BF800000
	.long 0xbf800000                                           // 0000000736F0: BF800000
	.long 0xbf800000                                           // 0000000736F4: BF800000
	.long 0xbf800000                                           // 0000000736F8: BF800000
	.long 0xbf800000                                           // 0000000736FC: BF800000

	.p2align	8
	.type	mul_long_get_num_groups_get_group_id,@function
	.size	mul_long_get_num_groups_get_group_id, mul_long_get_num_groups_get_group_id_symend-mul_long_get_num_groups_get_group_id
mul_long_get_num_groups_get_group_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000073700: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007370C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000073714: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007371C: BEA10080
	s_clause 0x1                                               // 000000073720: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000073724: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007372C: DC4A0026 08000002
	s_clause 0x2                                               // 000000073734: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073738: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000073740: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000073748: F4040180 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000073750: BF89FC07
	s_lshl_b32 s9, s2, 1                                       // 000000073754: 84098102
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000073758: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000073760: 84008103
	v_add3_u32 v1, s8, s9, v1                                  // 000000073764: D6550001 04041208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007376C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000073770: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000073778: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000073780: 84008204
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000073784: D73C0005 00020283
	v_add3_u32 v1, s5, s0, v0                                  // 00000007378C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000073794: BF8701A4
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000073798: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 0000000737A0: 40080807
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000737A4: D73C0000 00020283
	v_add_co_u32 v5, s0, s6, v5                                // 0000000737AC: D7000005 00020A06
	s_delay_alu instid0(VALU_DEP_1)                            // 0000000737B4: BF870001
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000737B8: D5200006 00020C07
	s_waitcnt vmcnt(1)                                         // 0000000737C0: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 0000000737C4: 32040E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000737C8: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 0000000737CC: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 0000000737D0: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000737D8: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 0000000737DC: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 0000000737E0: BF89FC07
	s_addc_u32 s1, s12, 0                                      // 0000000737E4: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000737E8: BF870009
	s_mul_hi_u32 s5, s1, s2                                    // 0000000737EC: 96850201
	s_mul_i32 s1, s1, s2                                       // 0000000737F0: 96010201
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000737F4: BF07806A
	v_dual_mov_b32 v7, s1 :: v_dual_mov_b32 v8, s5             // 0000000737F8: CA100001 07080005
	s_addc_u32 s1, s13, 0                                      // 000000073800: 8201800D
	s_cmp_lg_u32 s0, 0                                         // 000000073804: BF078000
	s_mul_hi_u32 s0, s1, s3                                    // 000000073808: 96800301
	s_mul_i32 s1, s1, s3                                       // 00000007380C: 96010301
	s_addc_u32 s2, s14, 0                                      // 000000073810: 8202800E
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v10, s0            // 000000073814: CA100001 090A0000
	s_mul_i32 s0, s2, s4                                       // 00000007381C: 96000402
	s_mul_hi_u32 s1, s2, s4                                    // 000000073820: 96810402
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000073824: D7006A00 00020006
	v_dual_mov_b32 v11, s0 :: v_dual_mov_b32 v12, s1           // 00000007382C: CA100000 0B0C0001
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000073834: 40020207
	s_clause 0x2                                               // 000000073838: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 00000007383C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000073844: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 00000007384C: DC6E0000 007C0B00
	s_nop 0                                                    // 000000073854: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073858: BFB60003
	s_endpgm                                                   // 00000007385C: BFB00000
mul_long_get_num_groups_get_group_id_symend:
	.long 0xbf800000                                           // 000000073860: BF800000
	.long 0xbf800000                                           // 000000073864: BF800000
	.long 0xbf800000                                           // 000000073868: BF800000
	.long 0xbf800000                                           // 00000007386C: BF800000
	.long 0xbf800000                                           // 000000073870: BF800000
	.long 0xbf800000                                           // 000000073874: BF800000
	.long 0xbf800000                                           // 000000073878: BF800000
	.long 0xbf800000                                           // 00000007387C: BF800000
	.long 0xbf800000                                           // 000000073880: BF800000
	.long 0xbf800000                                           // 000000073884: BF800000
	.long 0xbf800000                                           // 000000073888: BF800000
	.long 0xbf800000                                           // 00000007388C: BF800000
	.long 0xbf800000                                           // 000000073890: BF800000
	.long 0xbf800000                                           // 000000073894: BF800000
	.long 0xbf800000                                           // 000000073898: BF800000
	.long 0xbf800000                                           // 00000007389C: BF800000
	.long 0xbf800000                                           // 0000000738A0: BF800000
	.long 0xbf800000                                           // 0000000738A4: BF800000
	.long 0xbf800000                                           // 0000000738A8: BF800000
	.long 0xbf800000                                           // 0000000738AC: BF800000
	.long 0xbf800000                                           // 0000000738B0: BF800000
	.long 0xbf800000                                           // 0000000738B4: BF800000
	.long 0xbf800000                                           // 0000000738B8: BF800000
	.long 0xbf800000                                           // 0000000738BC: BF800000
	.long 0xbf800000                                           // 0000000738C0: BF800000
	.long 0xbf800000                                           // 0000000738C4: BF800000
	.long 0xbf800000                                           // 0000000738C8: BF800000
	.long 0xbf800000                                           // 0000000738CC: BF800000
	.long 0xbf800000                                           // 0000000738D0: BF800000
	.long 0xbf800000                                           // 0000000738D4: BF800000
	.long 0xbf800000                                           // 0000000738D8: BF800000
	.long 0xbf800000                                           // 0000000738DC: BF800000
	.long 0xbf800000                                           // 0000000738E0: BF800000
	.long 0xbf800000                                           // 0000000738E4: BF800000
	.long 0xbf800000                                           // 0000000738E8: BF800000
	.long 0xbf800000                                           // 0000000738EC: BF800000
	.long 0xbf800000                                           // 0000000738F0: BF800000
	.long 0xbf800000                                           // 0000000738F4: BF800000
	.long 0xbf800000                                           // 0000000738F8: BF800000
	.long 0xbf800000                                           // 0000000738FC: BF800000

	.p2align	8
	.type	mul_long_get_work_dim_get_group_id,@function
	.size	mul_long_get_work_dim_get_group_id, mul_long_get_work_dim_get_group_id_symend-mul_long_get_work_dim_get_group_id
mul_long_get_work_dim_get_group_id:
	s_clause 0x3                                               // 000000073900: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000073904: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007390C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000073914: F4040180 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 00000007391C: F4000000 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000073924: CA240080 010200FF 000003FF
	s_lshl_b32 s1, s2, 1                                       // 000000073930: 84018102
	v_bfe_u32 v4, v0, 10, 10                                   // 000000073934: D6100004 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 00000007393C: D610000A 02292900
	s_waitcnt lgkmcnt(0)                                       // 000000073944: BF89FC07
	s_lshl_b32 s9, s3, 1                                       // 000000073948: 84098103
	s_lshl_b32 s11, s4, 2                                      // 00000007394C: 840B8204
	s_mov_b32 s33, 0                                           // 000000073950: BEA10080
	s_and_b32 s5, s5, 0xffff                                   // 000000073954: 8B05FF05 0000FFFF
	v_add3_u32 v0, s8, s1, v2                                  // 00000007395C: D6550000 04080208
	s_mul_hi_u32 s1, s5, s2                                    // 000000073964: 96810205
	s_mul_i32 s2, s5, s2                                       // 000000073968: 96020205
	s_mul_hi_u32 s8, s5, s3                                    // 00000007396C: 96880305
	s_mul_i32 s3, s5, s3                                       // 000000073970: 96030305
	v_lshlrev_b64 v[2:3], 3, v[0:1]                            // 000000073974: D73C0002 00020083
	v_add3_u32 v0, s10, s9, v4                                 // 00000007397C: D6550000 0410120A
	v_dual_mov_b32 v4, s2 :: v_dual_mov_b32 v5, s1             // 000000073984: CA100002 04040001
	s_mul_hi_u32 s1, s5, s4                                    // 00000007398C: 96810405
	v_dual_mov_b32 v6, s3 :: v_dual_mov_b32 v7, s8             // 000000073990: CA100003 06060008
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000073998: BF8701C3
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 00000007399C: D73C0008 00020083
	v_add3_u32 v0, s0, s11, v10                                // 0000000739A4: D6550000 04281600
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000739AC: D7006A02 00020406
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 0000000739B4: 40060607
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000739B8: D73C0000 00020083
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 0000000739C0: D7006A08 00021006
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 0000000739C8: 40121207
	s_mul_i32 s0, s5, s4                                       // 0000000739CC: 96000405
	s_delay_alu instid0(VALU_DEP_3)                            // 0000000739D0: BF870003
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000739D4: D7006A00 00020006
	v_dual_mov_b32 v10, s0 :: v_dual_mov_b32 v11, s1           // 0000000739DC: CA100000 0A0A0001
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000739E4: 40020207
	s_clause 0x2                                               // 0000000739E8: BF850002
	global_store_b64 v[2:3], v[4:5], off                       // 0000000739EC: DC6E0000 007C0402
	global_store_b64 v[8:9], v[6:7], off                       // 0000000739F4: DC6E0000 007C0608
	global_store_b64 v[0:1], v[10:11], off                     // 0000000739FC: DC6E0000 007C0A00
	s_nop 0                                                    // 000000073A04: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073A08: BFB60003
	s_endpgm                                                   // 000000073A0C: BFB00000
mul_long_get_work_dim_get_group_id_symend:
	.long 0xbf800000                                           // 000000073A10: BF800000
	.long 0xbf800000                                           // 000000073A14: BF800000
	.long 0xbf800000                                           // 000000073A18: BF800000
	.long 0xbf800000                                           // 000000073A1C: BF800000
	.long 0xbf800000                                           // 000000073A20: BF800000
	.long 0xbf800000                                           // 000000073A24: BF800000
	.long 0xbf800000                                           // 000000073A28: BF800000
	.long 0xbf800000                                           // 000000073A2C: BF800000
	.long 0xbf800000                                           // 000000073A30: BF800000
	.long 0xbf800000                                           // 000000073A34: BF800000
	.long 0xbf800000                                           // 000000073A38: BF800000
	.long 0xbf800000                                           // 000000073A3C: BF800000
	.long 0xbf800000                                           // 000000073A40: BF800000
	.long 0xbf800000                                           // 000000073A44: BF800000
	.long 0xbf800000                                           // 000000073A48: BF800000
	.long 0xbf800000                                           // 000000073A4C: BF800000
	.long 0xbf800000                                           // 000000073A50: BF800000
	.long 0xbf800000                                           // 000000073A54: BF800000
	.long 0xbf800000                                           // 000000073A58: BF800000
	.long 0xbf800000                                           // 000000073A5C: BF800000
	.long 0xbf800000                                           // 000000073A60: BF800000
	.long 0xbf800000                                           // 000000073A64: BF800000
	.long 0xbf800000                                           // 000000073A68: BF800000
	.long 0xbf800000                                           // 000000073A6C: BF800000
	.long 0xbf800000                                           // 000000073A70: BF800000
	.long 0xbf800000                                           // 000000073A74: BF800000
	.long 0xbf800000                                           // 000000073A78: BF800000
	.long 0xbf800000                                           // 000000073A7C: BF800000
	.long 0xbf800000                                           // 000000073A80: BF800000
	.long 0xbf800000                                           // 000000073A84: BF800000
	.long 0xbf800000                                           // 000000073A88: BF800000
	.long 0xbf800000                                           // 000000073A8C: BF800000
	.long 0xbf800000                                           // 000000073A90: BF800000
	.long 0xbf800000                                           // 000000073A94: BF800000
	.long 0xbf800000                                           // 000000073A98: BF800000
	.long 0xbf800000                                           // 000000073A9C: BF800000
	.long 0xbf800000                                           // 000000073AA0: BF800000
	.long 0xbf800000                                           // 000000073AA4: BF800000
	.long 0xbf800000                                           // 000000073AA8: BF800000
	.long 0xbf800000                                           // 000000073AAC: BF800000
	.long 0xbf800000                                           // 000000073AB0: BF800000
	.long 0xbf800000                                           // 000000073AB4: BF800000
	.long 0xbf800000                                           // 000000073AB8: BF800000
	.long 0xbf800000                                           // 000000073ABC: BF800000
	.long 0xbf800000                                           // 000000073AC0: BF800000
	.long 0xbf800000                                           // 000000073AC4: BF800000
	.long 0xbf800000                                           // 000000073AC8: BF800000
	.long 0xbf800000                                           // 000000073ACC: BF800000
	.long 0xbf800000                                           // 000000073AD0: BF800000
	.long 0xbf800000                                           // 000000073AD4: BF800000
	.long 0xbf800000                                           // 000000073AD8: BF800000
	.long 0xbf800000                                           // 000000073ADC: BF800000
	.long 0xbf800000                                           // 000000073AE0: BF800000
	.long 0xbf800000                                           // 000000073AE4: BF800000
	.long 0xbf800000                                           // 000000073AE8: BF800000
	.long 0xbf800000                                           // 000000073AEC: BF800000
	.long 0xbf800000                                           // 000000073AF0: BF800000
	.long 0xbf800000                                           // 000000073AF4: BF800000
	.long 0xbf800000                                           // 000000073AF8: BF800000
	.long 0xbf800000                                           // 000000073AFC: BF800000

	.p2align	8
	.type	mul_long_x_get_local_size,@function
	.size	mul_long_x_get_local_size, mul_long_x_get_local_size_symend-mul_long_x_get_local_size
mul_long_x_get_local_size:
	s_clause 0x1                                               // 000000073B00: BF850001
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000073B04: F4080300 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073B0C: F4080200 F8000038
	s_add_u32 s5, s0, 16                                       // 000000073B14: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000073B18: BF89FC07
	s_addc_u32 s9, s1, 0                                       // 000000073B1C: 82098001
	s_lshl_b32 s11, s2, 4                                      // 000000073B20: 840B8402
	s_lshl_b32 s15, s3, 1                                      // 000000073B24: 840F8103
	s_lshl_b32 s16, s4, 1                                      // 000000073B28: 84108104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000073B2C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000073B38: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000073B40: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000073B48: BEA10080
	s_cmp_lt_u32 s2, s12                                       // 000000073B4C: BF0A0C02
	v_add3_u32 v1, s8, s11, v1                                 // 000000073B50: D6550001 04041608
	s_cselect_b32 s2, 12, 18                                   // 000000073B58: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000073B5C: BF870009
	s_add_u32 s6, s5, s2                                       // 000000073B60: 80060205
	s_addc_u32 s7, s9, 0                                       // 000000073B64: 82078009
	s_cmp_lt_u32 s3, s13                                       // 000000073B68: BF0A0D03
	global_load_u16 v7, v2, s[6:7]                             // 000000073B6C: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 000000073B74: 9802948E
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000073B78: D73C0003 00020283
	s_add_u32 s2, s5, s2                                       // 000000073B80: 80020205
	s_addc_u32 s3, s9, 0                                       // 000000073B84: 82038009
	s_cmp_lt_u32 s4, s14                                       // 000000073B88: BF0A0E04
	v_add3_u32 v1, s10, s15, v5                                // 000000073B8C: D6550001 04141E0A
	s_cselect_b32 s4, 16, 22                                   // 000000073B94: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000073B98: BF870009
	s_add_u32 s4, s5, s4                                       // 000000073B9C: 80040405
	s_addc_u32 s5, s9, 0                                       // 000000073BA0: 82058009
	s_clause 0x1                                               // 000000073BA4: BF850001
	global_load_u16 v9, v2, s[2:3]                             // 000000073BA8: DC4A0000 09020002
	global_load_u16 v11, v2, s[4:5]                            // 000000073BB0: DC4A0000 0B040002
	s_clause 0x2                                               // 000000073BB8: BF850002
	s_load_b64 s[2:3], s[0:1], null                            // 000000073BBC: F4040080 F8000000
	s_load_b32 s4, s[0:1], 0x48                                // 000000073BC4: F4000100 F8000048
	s_load_b32 s0, s[0:1], 0x8                                 // 000000073BCC: F4000000 F8000008
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000073BD4: D73C0005 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000073BDC: BF89FC07
	v_add_co_u32 v3, vcc_lo, s2, v3                            // 000000073BE0: D7006A03 00020602
	v_add3_u32 v1, s4, s16, v0                                 // 000000073BE8: D6550001 04002004
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo             // 000000073BF0: 40080803
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073BF4: BF870194
	v_add_co_u32 v5, vcc_lo, s2, v5                            // 000000073BF8: D7006A05 00020A02
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000073C00: D73C0000 00020283
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo             // 000000073C08: 400C0C03
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073C0C: BF870192
	v_add_co_u32 v0, vcc_lo, s2, v0                            // 000000073C10: D7006A00 00020002
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo             // 000000073C18: 40020203
	s_waitcnt vmcnt(2)                                         // 000000073C1C: BF890BF7
	v_mul_hi_i32 v8, v7, s0                                    // 000000073C20: D72E0008 00000107
	v_mul_lo_u32 v7, v7, s0                                    // 000000073C28: D72C0007 00000107
	s_waitcnt vmcnt(1)                                         // 000000073C30: BF8907F7
	v_mul_hi_i32 v10, v9, s0                                   // 000000073C34: D72E000A 00000109
	v_mul_lo_u32 v9, v9, s0                                    // 000000073C3C: D72C0009 00000109
	s_waitcnt vmcnt(0)                                         // 000000073C44: BF8903F7
	v_mul_hi_i32 v12, v11, s0                                  // 000000073C48: D72E000C 0000010B
	v_mul_lo_u32 v11, v11, s0                                  // 000000073C50: D72C000B 0000010B
	s_clause 0x2                                               // 000000073C58: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000073C5C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000073C64: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000073C6C: DC6E0000 007C0B00
	s_nop 0                                                    // 000000073C74: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073C78: BFB60003
	s_endpgm                                                   // 000000073C7C: BFB00000
mul_long_x_get_local_size_symend:
	.long 0xbf800000                                           // 000000073C80: BF800000
	.long 0xbf800000                                           // 000000073C84: BF800000
	.long 0xbf800000                                           // 000000073C88: BF800000
	.long 0xbf800000                                           // 000000073C8C: BF800000
	.long 0xbf800000                                           // 000000073C90: BF800000
	.long 0xbf800000                                           // 000000073C94: BF800000
	.long 0xbf800000                                           // 000000073C98: BF800000
	.long 0xbf800000                                           // 000000073C9C: BF800000
	.long 0xbf800000                                           // 000000073CA0: BF800000
	.long 0xbf800000                                           // 000000073CA4: BF800000
	.long 0xbf800000                                           // 000000073CA8: BF800000
	.long 0xbf800000                                           // 000000073CAC: BF800000
	.long 0xbf800000                                           // 000000073CB0: BF800000
	.long 0xbf800000                                           // 000000073CB4: BF800000
	.long 0xbf800000                                           // 000000073CB8: BF800000
	.long 0xbf800000                                           // 000000073CBC: BF800000
	.long 0xbf800000                                           // 000000073CC0: BF800000
	.long 0xbf800000                                           // 000000073CC4: BF800000
	.long 0xbf800000                                           // 000000073CC8: BF800000
	.long 0xbf800000                                           // 000000073CCC: BF800000
	.long 0xbf800000                                           // 000000073CD0: BF800000
	.long 0xbf800000                                           // 000000073CD4: BF800000
	.long 0xbf800000                                           // 000000073CD8: BF800000
	.long 0xbf800000                                           // 000000073CDC: BF800000
	.long 0xbf800000                                           // 000000073CE0: BF800000
	.long 0xbf800000                                           // 000000073CE4: BF800000
	.long 0xbf800000                                           // 000000073CE8: BF800000
	.long 0xbf800000                                           // 000000073CEC: BF800000
	.long 0xbf800000                                           // 000000073CF0: BF800000
	.long 0xbf800000                                           // 000000073CF4: BF800000
	.long 0xbf800000                                           // 000000073CF8: BF800000
	.long 0xbf800000                                           // 000000073CFC: BF800000

	.p2align	8
	.type	mul_long_get_global_offset_get_local_size,@function
	.size	mul_long_get_global_offset_get_local_size, mul_long_get_global_offset_get_local_size_symend-mul_long_get_global_offset_get_local_size
mul_long_get_global_offset_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000073D00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000073D08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000073D0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000073D10: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000073D14: 840C8102
	s_lshl_b32 s13, s3, 4                                      // 000000073D18: 840D8403
	s_lshl_b32 s14, s4, 1                                      // 000000073D1C: 840E8104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000073D20: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000073D2C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000073D34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000073D3C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000073D40: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000073D44: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000073D48: BF8704C9
	s_add_u32 s6, s5, s2                                       // 000000073D4C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000073D50: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000073D54: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 000000073D58: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000073D5C: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000073D60: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000073D64: BF0A0A04
	s_clause 0x1                                               // 000000073D68: BF850001
	global_load_u16 v7, v2, s[6:7]                             // 000000073D6C: DC4A0000 07060002
	global_load_u16 v9, v2, s[2:3]                             // 000000073D74: DC4A0000 09020002
	s_cselect_b32 s4, 16, 22                                   // 000000073D7C: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000073D80: BF870009
	s_add_u32 s2, s5, s4                                       // 000000073D84: 80020405
	s_addc_u32 s3, s11, 0                                      // 000000073D88: 8203800B
	global_load_u16 v11, v2, s[2:3]                            // 000000073D8C: DC4A0000 0B020002
	s_clause 0x2                                               // 000000073D94: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000073D98: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 000000073DA0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000073DA8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000073DB0: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 000000073DB4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000073DBC: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000073DC0: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v5                                 // 000000073DC8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000073DD0: D73C0005 00020283
	v_add3_u32 v1, s2, s14, v0                                 // 000000073DD8: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000073DE0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000073DE4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000073DEC: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000073DF0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000073DF8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000073E00: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000073E04: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000073E08: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000073E10: 40020201
	s_waitcnt vmcnt(2)                                         // 000000073E14: BF890BF7
	v_mul_hi_u32 v8, s4, v7                                    // 000000073E18: D72D0008 00020E04
	v_mul_lo_u32 v7, s4, v7                                    // 000000073E20: D72C0007 00020E04
	s_waitcnt vmcnt(1)                                         // 000000073E28: BF8907F7
	v_mul_hi_u32 v10, s6, v9                                   // 000000073E2C: D72D000A 00021206
	v_mul_lo_u32 v9, s6, v9                                    // 000000073E34: D72C0009 00021206
	s_waitcnt vmcnt(0)                                         // 000000073E3C: BF8903F7
	v_mul_hi_u32 v12, s2, v11                                  // 000000073E40: D72D000C 00021602
	v_mul_lo_u32 v11, s2, v11                                  // 000000073E48: D72C000B 00021602
	s_clause 0x2                                               // 000000073E50: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000073E54: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000073E5C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000073E64: DC6E0000 007C0B00
	s_nop 0                                                    // 000000073E6C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073E70: BFB60003
	s_endpgm                                                   // 000000073E74: BFB00000
mul_long_get_global_offset_get_local_size_symend:
	.long 0xbf800000                                           // 000000073E78: BF800000
	.long 0xbf800000                                           // 000000073E7C: BF800000
	.long 0xbf800000                                           // 000000073E80: BF800000
	.long 0xbf800000                                           // 000000073E84: BF800000
	.long 0xbf800000                                           // 000000073E88: BF800000
	.long 0xbf800000                                           // 000000073E8C: BF800000
	.long 0xbf800000                                           // 000000073E90: BF800000
	.long 0xbf800000                                           // 000000073E94: BF800000
	.long 0xbf800000                                           // 000000073E98: BF800000
	.long 0xbf800000                                           // 000000073E9C: BF800000
	.long 0xbf800000                                           // 000000073EA0: BF800000
	.long 0xbf800000                                           // 000000073EA4: BF800000
	.long 0xbf800000                                           // 000000073EA8: BF800000
	.long 0xbf800000                                           // 000000073EAC: BF800000
	.long 0xbf800000                                           // 000000073EB0: BF800000
	.long 0xbf800000                                           // 000000073EB4: BF800000
	.long 0xbf800000                                           // 000000073EB8: BF800000
	.long 0xbf800000                                           // 000000073EBC: BF800000
	.long 0xbf800000                                           // 000000073EC0: BF800000
	.long 0xbf800000                                           // 000000073EC4: BF800000
	.long 0xbf800000                                           // 000000073EC8: BF800000
	.long 0xbf800000                                           // 000000073ECC: BF800000
	.long 0xbf800000                                           // 000000073ED0: BF800000
	.long 0xbf800000                                           // 000000073ED4: BF800000
	.long 0xbf800000                                           // 000000073ED8: BF800000
	.long 0xbf800000                                           // 000000073EDC: BF800000
	.long 0xbf800000                                           // 000000073EE0: BF800000
	.long 0xbf800000                                           // 000000073EE4: BF800000
	.long 0xbf800000                                           // 000000073EE8: BF800000
	.long 0xbf800000                                           // 000000073EEC: BF800000
	.long 0xbf800000                                           // 000000073EF0: BF800000
	.long 0xbf800000                                           // 000000073EF4: BF800000
	.long 0xbf800000                                           // 000000073EF8: BF800000
	.long 0xbf800000                                           // 000000073EFC: BF800000

	.p2align	8
	.type	mul_long_get_local_id_get_local_size,@function
	.size	mul_long_get_local_id_get_local_size, mul_long_get_local_id_get_local_size_symend-mul_long_get_local_id_get_local_size
mul_long_get_local_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000073F00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000073F08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000073F0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000073F10: 820B8001
	s_lshl_b32 s12, s2, 3                                      // 000000073F14: 840C8302
	s_lshl_b32 s13, s3, 2                                      // 000000073F18: 840D8203
	s_lshl_b32 s14, s4, 1                                      // 000000073F1C: 840E8104
	v_mov_b32_e32 v1, 0                                        // 000000073F20: 7E020280
	v_and_b32_e32 v11, 0x3ff, v0                               // 000000073F24: 361600FF 000003FF
	v_bfe_u32 v12, v0, 10, 10                                  // 000000073F2C: D610000C 02291500
	v_bfe_u32 v13, v0, 20, 10                                  // 000000073F34: D610000D 02292900
	s_mov_b32 s33, 0                                           // 000000073F3C: BEA10080
	v_mov_b32_e32 v3, v1                                       // 000000073F40: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000073F44: 7E0A0301
	v_mov_b32_e32 v7, v1                                       // 000000073F48: 7E0E0301
	s_cmp_lt_u32 s2, s8                                        // 000000073F4C: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000073F50: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000073F54: BF8704D9
	s_add_u32 s6, s5, s2                                       // 000000073F58: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000073F5C: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000073F60: BF0A0903
	global_load_u16 v8, v1, s[6:7]                             // 000000073F64: DC4A0000 08060001
	s_cselect_b32 s2, 14, 20                                   // 000000073F6C: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000073F70: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000073F74: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000073F78: BF0A0A04
	global_load_u16 v9, v1, s[2:3]                             // 000000073F7C: DC4A0000 09020001
	s_cselect_b32 s2, 16, 22                                   // 000000073F84: 98029690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000073F88: BF870009
	s_add_u32 s2, s5, s2                                       // 000000073F8C: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000073F90: 8203800B
	global_load_u16 v10, v1, s[2:3]                            // 000000073F94: DC4A0000 0A020001
	s_clause 0x2                                               // 000000073F9C: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000073FA0: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 000000073FA8: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000073FB0: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000073FB8: BF89FC07
	v_add3_u32 v2, s4, s12, v11                                // 000000073FBC: D6550002 042C1804
	v_add3_u32 v4, s6, s13, v12                                // 000000073FC4: D6550004 04301A06
	v_add3_u32 v6, s2, s14, v13                                // 000000073FCC: D6550006 04341C02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073FD4: BF870193
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000073FD8: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000073FE0: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073FE8: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000073FEC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000073FF4: 40060601
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000073FF8: BF870213
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000073FFC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000074004: 400A0A01
	s_waitcnt vmcnt(2)                                         // 000000074008: BF890BF7
	v_mul_u32_u24_e32 v0, v8, v11                              // 00000007400C: 16001708
	global_store_b64 v[2:3], v[0:1], off                       // 000000074010: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 000000074018: D73C0002 00020C83
	s_waitcnt vmcnt(1)                                         // 000000074020: BF8907F7
	v_mul_u32_u24_e32 v0, v9, v12                              // 000000074024: 16001909
	s_delay_alu instid0(VALU_DEP_2)                            // 000000074028: BF870002
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007402C: D7006A02 00020400
	global_store_b64 v[4:5], v[0:1], off                       // 000000074034: DC6E0000 007C0004
	s_waitcnt vmcnt(0)                                         // 00000007403C: BF8903F7
	v_mul_u32_u24_e32 v0, v10, v13                             // 000000074040: 16001B0A
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000074044: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000074048: DC6E0000 007C0002
	s_nop 0                                                    // 000000074050: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074054: BFB60003
	s_endpgm                                                   // 000000074058: BFB00000
mul_long_get_local_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000007405C: BF800000
	.long 0xbf800000                                           // 000000074060: BF800000
	.long 0xbf800000                                           // 000000074064: BF800000
	.long 0xbf800000                                           // 000000074068: BF800000
	.long 0xbf800000                                           // 00000007406C: BF800000
	.long 0xbf800000                                           // 000000074070: BF800000
	.long 0xbf800000                                           // 000000074074: BF800000
	.long 0xbf800000                                           // 000000074078: BF800000
	.long 0xbf800000                                           // 00000007407C: BF800000
	.long 0xbf800000                                           // 000000074080: BF800000
	.long 0xbf800000                                           // 000000074084: BF800000
	.long 0xbf800000                                           // 000000074088: BF800000
	.long 0xbf800000                                           // 00000007408C: BF800000
	.long 0xbf800000                                           // 000000074090: BF800000
	.long 0xbf800000                                           // 000000074094: BF800000
	.long 0xbf800000                                           // 000000074098: BF800000
	.long 0xbf800000                                           // 00000007409C: BF800000
	.long 0xbf800000                                           // 0000000740A0: BF800000
	.long 0xbf800000                                           // 0000000740A4: BF800000
	.long 0xbf800000                                           // 0000000740A8: BF800000
	.long 0xbf800000                                           // 0000000740AC: BF800000
	.long 0xbf800000                                           // 0000000740B0: BF800000
	.long 0xbf800000                                           // 0000000740B4: BF800000
	.long 0xbf800000                                           // 0000000740B8: BF800000
	.long 0xbf800000                                           // 0000000740BC: BF800000
	.long 0xbf800000                                           // 0000000740C0: BF800000
	.long 0xbf800000                                           // 0000000740C4: BF800000
	.long 0xbf800000                                           // 0000000740C8: BF800000
	.long 0xbf800000                                           // 0000000740CC: BF800000
	.long 0xbf800000                                           // 0000000740D0: BF800000
	.long 0xbf800000                                           // 0000000740D4: BF800000
	.long 0xbf800000                                           // 0000000740D8: BF800000
	.long 0xbf800000                                           // 0000000740DC: BF800000
	.long 0xbf800000                                           // 0000000740E0: BF800000
	.long 0xbf800000                                           // 0000000740E4: BF800000
	.long 0xbf800000                                           // 0000000740E8: BF800000
	.long 0xbf800000                                           // 0000000740EC: BF800000
	.long 0xbf800000                                           // 0000000740F0: BF800000
	.long 0xbf800000                                           // 0000000740F4: BF800000
	.long 0xbf800000                                           // 0000000740F8: BF800000
	.long 0xbf800000                                           // 0000000740FC: BF800000

	.p2align	8
	.type	mul_long_get_group_id_get_local_size,@function
	.size	mul_long_get_group_id_get_local_size, mul_long_get_group_id_get_local_size_symend-mul_long_get_group_id_get_local_size
mul_long_get_group_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000074100: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000074108: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007410C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000074110: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000074114: 840C8102
	s_lshl_b32 s13, s3, 4                                      // 000000074118: 840D8403
	s_lshl_b32 s14, s4, 1                                      // 00000007411C: 840E8104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000074120: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007412C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074134: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007413C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000074140: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 000000074144: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000074148: BF8704C9
	s_add_u32 s6, s5, s6                                       // 00000007414C: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000074150: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000074154: BF0A0903
	s_cselect_b32 s8, 14, 20                                   // 000000074158: 9808948E
	s_add_u32 s8, s5, s8                                       // 00000007415C: 80080805
	s_addc_u32 s9, s11, 0                                      // 000000074160: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 000000074164: BF0A0A04
	s_clause 0x1                                               // 000000074168: BF850001
	global_load_u16 v7, v2, s[6:7]                             // 00000007416C: DC4A0000 07060002
	global_load_u16 v9, v2, s[8:9]                             // 000000074174: DC4A0000 09080002
	s_cselect_b32 s10, 16, 22                                  // 00000007417C: 980A9690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000074180: BF870009
	s_add_u32 s6, s5, s10                                      // 000000074184: 80060A05
	s_addc_u32 s7, s11, 0                                      // 000000074188: 8207800B
	global_load_u16 v11, v2, s[6:7]                            // 00000007418C: DC4A0000 0B060002
	s_clause 0x2                                               // 000000074194: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074198: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 0000000741A0: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000741A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000741B0: BF89FC07
	v_add3_u32 v1, s8, s12, v1                                 // 0000000741B4: D6550001 04041808
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000741BC: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000741C0: D73C0003 00020283
	v_add3_u32 v1, s10, s13, v5                                // 0000000741C8: D6550001 04141A0A
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000741D0: D73C0005 00020283
	v_add3_u32 v1, s5, s14, v0                                 // 0000000741D8: D6550001 04001C05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000741E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000741E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000741EC: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000741F0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000741F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000074200: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000074204: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000074208: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000074210: 40020201
	s_waitcnt vmcnt(2)                                         // 000000074214: BF890BF7
	v_mul_hi_u32 v8, v7, s2                                    // 000000074218: D72D0008 00000507
	v_mul_lo_u32 v7, v7, s2                                    // 000000074220: D72C0007 00000507
	s_waitcnt vmcnt(1)                                         // 000000074228: BF8907F7
	v_mul_hi_u32 v10, v9, s3                                   // 00000007422C: D72D000A 00000709
	v_mul_lo_u32 v9, v9, s3                                    // 000000074234: D72C0009 00000709
	s_waitcnt vmcnt(0)                                         // 00000007423C: BF8903F7
	v_mul_hi_u32 v12, v11, s4                                  // 000000074240: D72D000C 0000090B
	v_mul_lo_u32 v11, v11, s4                                  // 000000074248: D72C000B 0000090B
	s_clause 0x2                                               // 000000074250: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000074254: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 00000007425C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000074264: DC6E0000 007C0B00
	s_nop 0                                                    // 00000007426C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074270: BFB60003
	s_endpgm                                                   // 000000074274: BFB00000
mul_long_get_group_id_get_local_size_symend:
	.long 0xbf800000                                           // 000000074278: BF800000
	.long 0xbf800000                                           // 00000007427C: BF800000
	.long 0xbf800000                                           // 000000074280: BF800000
	.long 0xbf800000                                           // 000000074284: BF800000
	.long 0xbf800000                                           // 000000074288: BF800000
	.long 0xbf800000                                           // 00000007428C: BF800000
	.long 0xbf800000                                           // 000000074290: BF800000
	.long 0xbf800000                                           // 000000074294: BF800000
	.long 0xbf800000                                           // 000000074298: BF800000
	.long 0xbf800000                                           // 00000007429C: BF800000
	.long 0xbf800000                                           // 0000000742A0: BF800000
	.long 0xbf800000                                           // 0000000742A4: BF800000
	.long 0xbf800000                                           // 0000000742A8: BF800000
	.long 0xbf800000                                           // 0000000742AC: BF800000
	.long 0xbf800000                                           // 0000000742B0: BF800000
	.long 0xbf800000                                           // 0000000742B4: BF800000
	.long 0xbf800000                                           // 0000000742B8: BF800000
	.long 0xbf800000                                           // 0000000742BC: BF800000
	.long 0xbf800000                                           // 0000000742C0: BF800000
	.long 0xbf800000                                           // 0000000742C4: BF800000
	.long 0xbf800000                                           // 0000000742C8: BF800000
	.long 0xbf800000                                           // 0000000742CC: BF800000
	.long 0xbf800000                                           // 0000000742D0: BF800000
	.long 0xbf800000                                           // 0000000742D4: BF800000
	.long 0xbf800000                                           // 0000000742D8: BF800000
	.long 0xbf800000                                           // 0000000742DC: BF800000
	.long 0xbf800000                                           // 0000000742E0: BF800000
	.long 0xbf800000                                           // 0000000742E4: BF800000
	.long 0xbf800000                                           // 0000000742E8: BF800000
	.long 0xbf800000                                           // 0000000742EC: BF800000
	.long 0xbf800000                                           // 0000000742F0: BF800000
	.long 0xbf800000                                           // 0000000742F4: BF800000
	.long 0xbf800000                                           // 0000000742F8: BF800000
	.long 0xbf800000                                           // 0000000742FC: BF800000

	.p2align	8
	.type	mul_long_get_local_size_get_local_size,@function
	.size	mul_long_get_local_size_get_local_size, mul_long_get_local_size_get_local_size_symend-mul_long_get_local_size_get_local_size
mul_long_get_local_size_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000074300: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000074308: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007430C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000074310: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000074314: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000074318: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000007431C: 840E8204
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000074320: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007432C: D6100004 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000074334: D610000A 02292900
	s_mov_b32 s33, 0                                           // 00000007433C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000074340: BF8704D3
	v_mov_b32_e32 v3, v1                                       // 000000074344: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000074348: 7E0A0301
	v_mov_b32_e32 v7, v1                                       // 00000007434C: 7E0E0301
	s_cmp_lt_u32 s2, s8                                        // 000000074350: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000074354: 9802928C
	s_add_u32 s6, s5, s2                                       // 000000074358: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007435C: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000074360: BF0A0903
	global_load_u16 v6, v1, s[6:7]                             // 000000074364: DC4A0000 06060001
	s_cselect_b32 s2, 14, 20                                   // 00000007436C: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000074370: BF8704D9
	s_add_u32 s2, s5, s2                                       // 000000074374: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000074378: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007437C: BF0A0A04
	global_load_u16 v8, v1, s[2:3]                             // 000000074380: DC4A0000 08020001
	s_cselect_b32 s2, 16, 22                                   // 000000074388: 98029690
	s_add_u32 s2, s5, s2                                       // 00000007438C: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000074390: 8203800B
	global_load_u16 v9, v1, s[2:3]                             // 000000074394: DC4A0000 09020001
	s_clause 0x2                                               // 00000007439C: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 0000000743A0: F4080100 F8000038
	s_load_b64 s[2:3], s[0:1], 0x8                             // 0000000743A8: F4040080 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 0000000743B0: F4000000 F8000048
	s_waitcnt lgkmcnt(0)                                       // 0000000743B8: BF89FC07
	v_add3_u32 v2, s4, s12, v2                                 // 0000000743BC: D6550002 04081804
	v_add3_u32 v4, s6, s13, v4                                 // 0000000743C4: D6550004 04101A06
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000743CC: BF870112
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000743D0: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000743D8: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000743E0: BF870192
	v_add_co_u32 v2, vcc_lo, s2, v2                            // 0000000743E4: D7006A02 00020402
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo             // 0000000743EC: 40060603
	s_waitcnt vmcnt(2)                                         // 0000000743F0: BF890BF7
	v_mul_lo_u32 v0, v6, v6                                    // 0000000743F4: D72C0000 00020D06
	v_add3_u32 v6, s0, s14, v10                                // 0000000743FC: D6550006 04281C00
	global_store_b64 v[2:3], v[0:1], off                       // 000000074404: DC6E0000 007C0002
	s_waitcnt vmcnt(1)                                         // 00000007440C: BF8907F7
	v_mul_lo_u32 v0, v8, v8                                    // 000000074410: D72C0000 00021108
	v_add_co_u32 v2, vcc_lo, s2, v4                            // 000000074418: D7006A02 00020802
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v5, vcc_lo             // 000000074420: 40060A03
	v_lshlrev_b64 v[4:5], 3, v[6:7]                            // 000000074424: D73C0004 00020C83
	global_store_b64 v[2:3], v[0:1], off                       // 00000007442C: DC6E0000 007C0002
	s_waitcnt vmcnt(0)                                         // 000000074434: BF8903F7
	v_mul_lo_u32 v0, v9, v9                                    // 000000074438: D72C0000 00021309
	v_add_co_u32 v2, vcc_lo, s2, v4                            // 000000074440: D7006A02 00020802
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v5, vcc_lo             // 000000074448: 40060A03
	global_store_b64 v[2:3], v[0:1], off                       // 00000007444C: DC6E0000 007C0002
	s_nop 0                                                    // 000000074454: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074458: BFB60003
	s_endpgm                                                   // 00000007445C: BFB00000
mul_long_get_local_size_get_local_size_symend:
	.long 0xbf800000                                           // 000000074460: BF800000
	.long 0xbf800000                                           // 000000074464: BF800000
	.long 0xbf800000                                           // 000000074468: BF800000
	.long 0xbf800000                                           // 00000007446C: BF800000
	.long 0xbf800000                                           // 000000074470: BF800000
	.long 0xbf800000                                           // 000000074474: BF800000
	.long 0xbf800000                                           // 000000074478: BF800000
	.long 0xbf800000                                           // 00000007447C: BF800000
	.long 0xbf800000                                           // 000000074480: BF800000
	.long 0xbf800000                                           // 000000074484: BF800000
	.long 0xbf800000                                           // 000000074488: BF800000
	.long 0xbf800000                                           // 00000007448C: BF800000
	.long 0xbf800000                                           // 000000074490: BF800000
	.long 0xbf800000                                           // 000000074494: BF800000
	.long 0xbf800000                                           // 000000074498: BF800000
	.long 0xbf800000                                           // 00000007449C: BF800000
	.long 0xbf800000                                           // 0000000744A0: BF800000
	.long 0xbf800000                                           // 0000000744A4: BF800000
	.long 0xbf800000                                           // 0000000744A8: BF800000
	.long 0xbf800000                                           // 0000000744AC: BF800000
	.long 0xbf800000                                           // 0000000744B0: BF800000
	.long 0xbf800000                                           // 0000000744B4: BF800000
	.long 0xbf800000                                           // 0000000744B8: BF800000
	.long 0xbf800000                                           // 0000000744BC: BF800000
	.long 0xbf800000                                           // 0000000744C0: BF800000
	.long 0xbf800000                                           // 0000000744C4: BF800000
	.long 0xbf800000                                           // 0000000744C8: BF800000
	.long 0xbf800000                                           // 0000000744CC: BF800000
	.long 0xbf800000                                           // 0000000744D0: BF800000
	.long 0xbf800000                                           // 0000000744D4: BF800000
	.long 0xbf800000                                           // 0000000744D8: BF800000
	.long 0xbf800000                                           // 0000000744DC: BF800000
	.long 0xbf800000                                           // 0000000744E0: BF800000
	.long 0xbf800000                                           // 0000000744E4: BF800000
	.long 0xbf800000                                           // 0000000744E8: BF800000
	.long 0xbf800000                                           // 0000000744EC: BF800000
	.long 0xbf800000                                           // 0000000744F0: BF800000
	.long 0xbf800000                                           // 0000000744F4: BF800000
	.long 0xbf800000                                           // 0000000744F8: BF800000
	.long 0xbf800000                                           // 0000000744FC: BF800000

	.p2align	8
	.type	mul_long_get_global_id_get_local_size,@function
	.size	mul_long_get_global_id_get_local_size, mul_long_get_global_id_get_local_size_symend-mul_long_get_global_id_get_local_size
mul_long_get_global_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000074500: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000074508: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007450C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000074510: 820B8001
	s_lshl_b32 s12, s3, 1                                      // 000000074514: 840C8103
	s_lshl_b32 s13, s4, 2                                      // 000000074518: 840D8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007451C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000074528: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074530: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000074538: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007453C: BF870093
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000074540: D6560001 04050202
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000074548: D73C0003 00020283
	s_cmp_lt_u32 s2, s8                                        // 000000074550: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 000000074554: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000074558: BF8704D9
	s_add_u32 s6, s5, s6                                       // 00000007455C: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000074560: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000074564: BF0A0903
	global_load_u16 v13, v2, s[6:7]                            // 000000074568: DC4A0000 0D060002
	s_cselect_b32 s3, 14, 20                                   // 000000074570: 9803948E
	s_add_u32 s8, s5, s3                                       // 000000074574: 80080305
	s_addc_u32 s9, s11, 0                                      // 000000074578: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 00000007457C: BF0A0A04
	global_load_u16 v9, v2, s[8:9]                             // 000000074580: DC4A0000 09080002
	s_cselect_b32 s3, 16, 22                                   // 000000074588: 98039690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007458C: BF870009
	s_add_u32 s4, s5, s3                                       // 000000074590: 80040305
	s_addc_u32 s5, s11, 0                                      // 000000074594: 8205800B
	global_load_u16 v15, v2, s[4:5]                            // 000000074598: DC4A0000 0F040002
	s_clause 0x2                                               // 0000000745A0: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 0000000745A4: F4080100 F8000038
	s_load_b64 s[8:9], s[0:1], 0x8                             // 0000000745AC: F4040200 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 0000000745B4: F4000000 F8000048
	s_waitcnt lgkmcnt(0)                                       // 0000000745BC: BF89FC07
	v_add_nc_u32_e32 v14, s4, v1                               // 0000000745C0: 4A1C0204
	v_add3_u32 v1, s6, s12, v5                                 // 0000000745C4: D6550001 04141806
	v_add_co_u32 v3, vcc_lo, s8, v3                            // 0000000745CC: D7006A03 00020608
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo             // 0000000745D4: 40080809
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000745D8: BF870093
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000745DC: D73C0005 00020283
	v_add_co_u32 v5, vcc_lo, s8, v5                            // 0000000745E4: D7006A05 00020A08
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000745EC: BF870002
	v_add_co_ci_u32_e32 v6, vcc_lo, s9, v6, vcc_lo             // 0000000745F0: 400C0C09
	s_waitcnt vmcnt(2)                                         // 0000000745F4: BF890BF7
	v_mad_u64_u32 v[11:12], null, v14, v13, 0                  // 0000000745F8: D6FE7C0B 02021B0E
	s_waitcnt vmcnt(1)                                         // 000000074600: BF8907F7
	v_mad_u64_u32 v[7:8], null, v9, v1, 0                      // 000000074604: D6FE7C07 02020309
	v_add3_u32 v1, s0, s13, v0                                 // 00000007460C: D6550001 04001A00
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000074614: BF870131
	v_lshlrev_b64 v[9:10], 3, v[1:2]                           // 000000074618: D73C0009 00020283
	s_waitcnt vmcnt(0)                                         // 000000074620: BF8903F7
	v_mad_u64_u32 v[13:14], null, v15, v1, 0                   // 000000074624: D6FE7C0D 0202030F
	v_add_co_u32 v0, vcc_lo, s8, v9                            // 00000007462C: D7006A00 00021208
	s_delay_alu instid0(VALU_DEP_3)                            // 000000074634: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v10, vcc_lo            // 000000074638: 40021409
	s_clause 0x2                                               // 00000007463C: BF850002
	global_store_b64 v[3:4], v[11:12], off                     // 000000074640: DC6E0000 007C0B03
	global_store_b64 v[5:6], v[7:8], off                       // 000000074648: DC6E0000 007C0705
	global_store_b64 v[0:1], v[13:14], off                     // 000000074650: DC6E0000 007C0D00
	s_nop 0                                                    // 000000074658: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007465C: BFB60003
	s_endpgm                                                   // 000000074660: BFB00000
mul_long_get_global_id_get_local_size_symend:
	.long 0xbf800000                                           // 000000074664: BF800000
	.long 0xbf800000                                           // 000000074668: BF800000
	.long 0xbf800000                                           // 00000007466C: BF800000
	.long 0xbf800000                                           // 000000074670: BF800000
	.long 0xbf800000                                           // 000000074674: BF800000
	.long 0xbf800000                                           // 000000074678: BF800000
	.long 0xbf800000                                           // 00000007467C: BF800000
	.long 0xbf800000                                           // 000000074680: BF800000
	.long 0xbf800000                                           // 000000074684: BF800000
	.long 0xbf800000                                           // 000000074688: BF800000
	.long 0xbf800000                                           // 00000007468C: BF800000
	.long 0xbf800000                                           // 000000074690: BF800000
	.long 0xbf800000                                           // 000000074694: BF800000
	.long 0xbf800000                                           // 000000074698: BF800000
	.long 0xbf800000                                           // 00000007469C: BF800000
	.long 0xbf800000                                           // 0000000746A0: BF800000
	.long 0xbf800000                                           // 0000000746A4: BF800000
	.long 0xbf800000                                           // 0000000746A8: BF800000
	.long 0xbf800000                                           // 0000000746AC: BF800000
	.long 0xbf800000                                           // 0000000746B0: BF800000
	.long 0xbf800000                                           // 0000000746B4: BF800000
	.long 0xbf800000                                           // 0000000746B8: BF800000
	.long 0xbf800000                                           // 0000000746BC: BF800000
	.long 0xbf800000                                           // 0000000746C0: BF800000
	.long 0xbf800000                                           // 0000000746C4: BF800000
	.long 0xbf800000                                           // 0000000746C8: BF800000
	.long 0xbf800000                                           // 0000000746CC: BF800000
	.long 0xbf800000                                           // 0000000746D0: BF800000
	.long 0xbf800000                                           // 0000000746D4: BF800000
	.long 0xbf800000                                           // 0000000746D8: BF800000
	.long 0xbf800000                                           // 0000000746DC: BF800000
	.long 0xbf800000                                           // 0000000746E0: BF800000
	.long 0xbf800000                                           // 0000000746E4: BF800000
	.long 0xbf800000                                           // 0000000746E8: BF800000
	.long 0xbf800000                                           // 0000000746EC: BF800000
	.long 0xbf800000                                           // 0000000746F0: BF800000
	.long 0xbf800000                                           // 0000000746F4: BF800000
	.long 0xbf800000                                           // 0000000746F8: BF800000
	.long 0xbf800000                                           // 0000000746FC: BF800000

	.p2align	8
	.type	mul_long_get_global_size_get_local_size,@function
	.size	mul_long_get_global_size_get_local_size, mul_long_get_global_size_get_local_size_symend-mul_long_get_global_size_get_local_size
mul_long_get_global_size_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000074700: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000074708: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007470C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000074710: 820B8001
	s_lshl_b32 s12, s2, 4                                      // 000000074714: 840C8402
	s_lshl_b32 s13, s3, 1                                      // 000000074718: 840D8103
	s_lshl_b32 s14, s4, 1                                      // 00000007471C: 840E8104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000074720: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007472C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074734: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007473C: BEA10080
	s_clause 0x1                                               // 000000074740: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000074744: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007474C: DC4A0026 08000002
	s_lshl_b32 s15, s8, 4                                      // 000000074754: 840F8408
	s_lshl_b32 s16, s9, 1                                      // 000000074758: 84108109
	s_lshl_b32 s17, s10, 1                                     // 00000007475C: 8411810A
	s_cmp_lt_u32 s2, s8                                        // 000000074760: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000074764: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000074768: BF8704D9
	s_add_u32 s6, s5, s2                                       // 00000007476C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000074770: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000074774: BF0A0903
	global_load_u16 v9, v2, s[6:7]                             // 000000074778: DC4A0000 09060002
	s_cselect_b32 s2, 14, 20                                   // 000000074780: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000074784: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000074788: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007478C: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 000000074790: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000074794: BF870009
	s_add_u32 s4, s5, s4                                       // 000000074798: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000007479C: 8205800B
	s_clause 0x1                                               // 0000000747A0: BF850001
	global_load_u16 v11, v2, s[2:3]                            // 0000000747A4: DC4A0000 0B020002
	global_load_u16 v13, v2, s[4:5]                            // 0000000747AC: DC4A0000 0D040002
	s_clause 0x2                                               // 0000000747B4: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 0000000747B8: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 0000000747C0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 0000000747C8: F4040000 F8000000
	s_waitcnt lgkmcnt(0)                                       // 0000000747D0: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 0000000747D4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000747DC: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000747E0: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v5                                 // 0000000747E8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000747F0: D73C0005 00020283
	v_add3_u32 v1, s2, s14, v0                                 // 0000000747F8: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000074800: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000074804: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000007480C: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000074810: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000074818: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000074820: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000074824: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000074828: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000074830: 40020201
	s_waitcnt vmcnt(4)                                         // 000000074834: BF8913F7
	v_lshrrev_b32_e32 v10, 16, v7                              // 000000074838: 32140E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000007483C: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(3)                                         // 000000074844: BF890FF7
	v_add_nc_u32_e32 v14, s17, v8                              // 000000074848: 4A1C1011
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007484C: BF870193
	v_add_nc_u32_e32 v12, s16, v10                             // 000000074850: 4A181410
	v_add_nc_u32_e32 v2, s15, v7                               // 000000074854: 4A040E0F
	s_waitcnt vmcnt(2)                                         // 000000074858: BF890BF7
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007485C: BF870001
	v_mul_hi_u32 v8, v9, v2                                    // 000000074860: D72D0008 00020509
	v_mul_lo_u32 v7, v9, v2                                    // 000000074868: D72C0007 00020509
	s_waitcnt vmcnt(1)                                         // 000000074870: BF8907F7
	v_mul_hi_u32 v10, v11, v12                                 // 000000074874: D72D000A 0002190B
	v_mul_lo_u32 v9, v11, v12                                  // 00000007487C: D72C0009 0002190B
	s_waitcnt vmcnt(0)                                         // 000000074884: BF8903F7
	v_mul_hi_u32 v12, v13, v14                                 // 000000074888: D72D000C 00021D0D
	v_mul_lo_u32 v11, v13, v14                                 // 000000074890: D72C000B 00021D0D
	s_clause 0x2                                               // 000000074898: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 00000007489C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 0000000748A4: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 0000000748AC: DC6E0000 007C0B00
	s_nop 0                                                    // 0000000748B4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000748B8: BFB60003
	s_endpgm                                                   // 0000000748BC: BFB00000
mul_long_get_global_size_get_local_size_symend:
	.long 0xbf800000                                           // 0000000748C0: BF800000
	.long 0xbf800000                                           // 0000000748C4: BF800000
	.long 0xbf800000                                           // 0000000748C8: BF800000
	.long 0xbf800000                                           // 0000000748CC: BF800000
	.long 0xbf800000                                           // 0000000748D0: BF800000
	.long 0xbf800000                                           // 0000000748D4: BF800000
	.long 0xbf800000                                           // 0000000748D8: BF800000
	.long 0xbf800000                                           // 0000000748DC: BF800000
	.long 0xbf800000                                           // 0000000748E0: BF800000
	.long 0xbf800000                                           // 0000000748E4: BF800000
	.long 0xbf800000                                           // 0000000748E8: BF800000
	.long 0xbf800000                                           // 0000000748EC: BF800000
	.long 0xbf800000                                           // 0000000748F0: BF800000
	.long 0xbf800000                                           // 0000000748F4: BF800000
	.long 0xbf800000                                           // 0000000748F8: BF800000
	.long 0xbf800000                                           // 0000000748FC: BF800000

	.p2align	8
	.type	mul_long_get_num_groups_get_local_size,@function
	.size	mul_long_get_num_groups_get_local_size, mul_long_get_num_groups_get_local_size_symend-mul_long_get_num_groups_get_local_size
mul_long_get_num_groups_get_local_size:
	v_mov_b32_e32 v2, 0                                        // 000000074900: 7E040280
	v_bfe_u32 v5, v0, 10, 10                                   // 000000074904: D6100005 02291500
	s_mov_b32 s33, 0                                           // 00000007490C: BEA10080
	s_clause 0x1                                               // 000000074910: BF850001
	global_load_b32 v1, v2, s[0:1] offset:34                   // 000000074914: DC520022 01000002
	global_load_u16 v3, v2, s[0:1] offset:38                   // 00000007491C: DC4A0026 03000002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000074924: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000007492C: BF89FC07
	s_add_u32 s11, s0, 16                                      // 000000074930: 800B9000
	s_addc_u32 s12, s1, 0                                      // 000000074934: 820C8001
	s_lshl_b32 s13, s2, 1                                      // 000000074938: 840D8102
	s_lshl_b32 s14, s3, 1                                      // 00000007493C: 840E8103
	s_lshl_b32 s15, s4, 2                                      // 000000074940: 840F8204
	s_waitcnt vmcnt(1)                                         // 000000074944: BF8907F7
	v_lshrrev_b32_e32 v4, 16, v1                               // 000000074948: 32080290
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000007494C: 7C7A0280
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000074950: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074958: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 000000074960: BF870004
	v_cmp_ne_u16_e64 s5, 0, v4.l                               // 000000074964: D43D0005 00020880
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007496C: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000074970: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v3.l                           // 000000074974: 7C7A0680
	s_addc_u32 s16, s8, 0                                      // 000000074978: 82108008
	s_cmp_lg_u32 s5, 0                                         // 00000007497C: BF078005
	s_addc_u32 s17, s9, 0                                      // 000000074980: 82118009
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000074984: BF07806A
	s_addc_u32 s18, s10, 0                                     // 000000074988: 8212800A
	s_cmp_lt_u32 s2, s8                                        // 00000007498C: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000074990: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000074994: BF8704D9
	s_add_u32 s6, s11, s2                                      // 000000074998: 8006020B
	s_addc_u32 s7, s12, 0                                      // 00000007499C: 8207800C
	s_cmp_lt_u32 s3, s9                                        // 0000000749A0: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 0000000749A4: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 0000000749AC: 9802948E
	s_add_u32 s2, s11, s2                                      // 0000000749B0: 8002020B
	s_addc_u32 s3, s12, 0                                      // 0000000749B4: 8203800C
	s_cmp_lt_u32 s4, s10                                       // 0000000749B8: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 0000000749BC: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000749C0: BF870009
	s_add_u32 s4, s11, s4                                      // 0000000749C4: 8004040B
	s_addc_u32 s5, s12, 0                                      // 0000000749C8: 8205800C
	s_clause 0x1                                               // 0000000749CC: BF850001
	global_load_u16 v9, v2, s[2:3]                             // 0000000749D0: DC4A0000 09020002
	global_load_u16 v11, v2, s[4:5]                            // 0000000749D8: DC4A0000 0B040002
	s_clause 0x2                                               // 0000000749E0: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 0000000749E4: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 0000000749EC: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000749F4: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000749FC: BF89FC07
	v_add3_u32 v1, s4, s13, v1                                 // 000000074A00: D6550001 04041A04
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000074A08: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000074A0C: D73C0003 00020283
	v_add3_u32 v1, s6, s14, v5                                 // 000000074A14: D6550001 04141C06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000074A1C: D73C0005 00020283
	v_add3_u32 v1, s2, s15, v0                                 // 000000074A24: D6550001 04001E02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000074A2C: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000074A30: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000074A38: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000074A3C: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000074A44: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000074A4C: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000074A50: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000074A54: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000074A5C: 40020201
	s_waitcnt vmcnt(2)                                         // 000000074A60: BF890BF7
	v_mul_hi_u32 v8, v7, s16                                   // 000000074A64: D72D0008 00002107
	v_mul_lo_u32 v7, v7, s16                                   // 000000074A6C: D72C0007 00002107
	s_waitcnt vmcnt(1)                                         // 000000074A74: BF8907F7
	v_mul_hi_u32 v10, v9, s17                                  // 000000074A78: D72D000A 00002309
	v_mul_lo_u32 v9, v9, s17                                   // 000000074A80: D72C0009 00002309
	s_waitcnt vmcnt(0)                                         // 000000074A88: BF8903F7
	v_mul_hi_u32 v12, v11, s18                                 // 000000074A8C: D72D000C 0000250B
	v_mul_lo_u32 v11, v11, s18                                 // 000000074A94: D72C000B 0000250B
	s_clause 0x2                                               // 000000074A9C: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000074AA0: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000074AA8: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000074AB0: DC6E0000 007C0B00
	s_nop 0                                                    // 000000074AB8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074ABC: BFB60003
	s_endpgm                                                   // 000000074AC0: BFB00000
mul_long_get_num_groups_get_local_size_symend:
	.long 0xbf800000                                           // 000000074AC4: BF800000
	.long 0xbf800000                                           // 000000074AC8: BF800000
	.long 0xbf800000                                           // 000000074ACC: BF800000
	.long 0xbf800000                                           // 000000074AD0: BF800000
	.long 0xbf800000                                           // 000000074AD4: BF800000
	.long 0xbf800000                                           // 000000074AD8: BF800000
	.long 0xbf800000                                           // 000000074ADC: BF800000
	.long 0xbf800000                                           // 000000074AE0: BF800000
	.long 0xbf800000                                           // 000000074AE4: BF800000
	.long 0xbf800000                                           // 000000074AE8: BF800000
	.long 0xbf800000                                           // 000000074AEC: BF800000
	.long 0xbf800000                                           // 000000074AF0: BF800000
	.long 0xbf800000                                           // 000000074AF4: BF800000
	.long 0xbf800000                                           // 000000074AF8: BF800000
	.long 0xbf800000                                           // 000000074AFC: BF800000

	.p2align	8
	.type	mul_long_get_work_dim_get_local_size,@function
	.size	mul_long_get_work_dim_get_local_size, mul_long_get_work_dim_get_local_size_symend-mul_long_get_work_dim_get_local_size
mul_long_get_work_dim_get_local_size:
	s_clause 0x1                                               // 000000074B00: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 000000074B04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000074B0C: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 000000074B14: BF89FC07
	s_add_u32 s11, s0, 16                                      // 000000074B18: 800B9000
	s_addc_u32 s12, s1, 0                                      // 000000074B1C: 820C8001
	s_lshl_b32 s13, s2, 1                                      // 000000074B20: 840D8102
	s_lshl_b32 s14, s3, 1                                      // 000000074B24: 840E8103
	s_lshl_b32 s15, s4, 2                                      // 000000074B28: 840F8204
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000074B2C: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000074B38: D6100004 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000074B40: D610000A 02292900
	s_mov_b32 s33, 0                                           // 000000074B48: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 000000074B4C: BF870003
	v_mov_b32_e32 v3, v1                                       // 000000074B50: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000074B54: 7E0A0301
	v_mov_b32_e32 v7, v1                                       // 000000074B58: 7E0E0301
	s_and_b32 s16, s5, 0xffff                                  // 000000074B5C: 8B10FF05 0000FFFF
	s_cmp_lt_u32 s2, s8                                        // 000000074B64: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000074B68: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000074B6C: BF8704D9
	s_add_u32 s6, s11, s2                                      // 000000074B70: 8006020B
	s_addc_u32 s7, s12, 0                                      // 000000074B74: 8207800C
	s_cmp_lt_u32 s3, s9                                        // 000000074B78: BF0A0903
	global_load_u16 v6, v1, s[6:7]                             // 000000074B7C: DC4A0000 06060001
	s_cselect_b32 s2, 14, 20                                   // 000000074B84: 9802948E
	s_add_u32 s2, s11, s2                                      // 000000074B88: 8002020B
	s_addc_u32 s3, s12, 0                                      // 000000074B8C: 8203800C
	s_cmp_lt_u32 s4, s10                                       // 000000074B90: BF0A0A04
	global_load_u16 v8, v1, s[2:3]                             // 000000074B94: DC4A0000 08020001
	s_cselect_b32 s2, 16, 22                                   // 000000074B9C: 98029690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000074BA0: BF870009
	s_add_u32 s2, s11, s2                                      // 000000074BA4: 8002020B
	s_addc_u32 s3, s12, 0                                      // 000000074BA8: 8203800C
	global_load_u16 v9, v1, s[2:3]                             // 000000074BAC: DC4A0000 09020001
	s_clause 0x2                                               // 000000074BB4: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000074BB8: F4080100 F8000038
	s_load_b64 s[2:3], s[0:1], 0x8                             // 000000074BC0: F4040080 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 000000074BC8: F4000000 F8000048
	s_waitcnt lgkmcnt(0)                                       // 000000074BD0: BF89FC07
	v_add3_u32 v2, s4, s13, v2                                 // 000000074BD4: D6550002 04081A04
	v_add3_u32 v4, s6, s14, v4                                 // 000000074BDC: D6550004 04101C06
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000074BE4: BF870112
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000074BE8: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000074BF0: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000074BF8: BF870192
	v_add_co_u32 v2, vcc_lo, s2, v2                            // 000000074BFC: D7006A02 00020402
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo             // 000000074C04: 40060603
	s_waitcnt vmcnt(2)                                         // 000000074C08: BF890BF7
	v_mul_lo_u32 v0, v6, s16                                   // 000000074C0C: D72C0000 00002106
	v_add3_u32 v6, s0, s15, v10                                // 000000074C14: D6550006 04281E00
	global_store_b64 v[2:3], v[0:1], off                       // 000000074C1C: DC6E0000 007C0002
	s_waitcnt vmcnt(1)                                         // 000000074C24: BF8907F7
	v_mul_lo_u32 v0, v8, s16                                   // 000000074C28: D72C0000 00002108
	v_add_co_u32 v2, vcc_lo, s2, v4                            // 000000074C30: D7006A02 00020802
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v5, vcc_lo             // 000000074C38: 40060A03
	v_lshlrev_b64 v[4:5], 3, v[6:7]                            // 000000074C3C: D73C0004 00020C83
	global_store_b64 v[2:3], v[0:1], off                       // 000000074C44: DC6E0000 007C0002
	s_waitcnt vmcnt(0)                                         // 000000074C4C: BF8903F7
	v_mul_lo_u32 v0, v9, s16                                   // 000000074C50: D72C0000 00002109
	v_add_co_u32 v2, vcc_lo, s2, v4                            // 000000074C58: D7006A02 00020802
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v5, vcc_lo             // 000000074C60: 40060A03
	global_store_b64 v[2:3], v[0:1], off                       // 000000074C64: DC6E0000 007C0002
	s_nop 0                                                    // 000000074C6C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074C70: BFB60003
	s_endpgm                                                   // 000000074C74: BFB00000
mul_long_get_work_dim_get_local_size_symend:
	.long 0xbf800000                                           // 000000074C78: BF800000
	.long 0xbf800000                                           // 000000074C7C: BF800000
	.long 0xbf800000                                           // 000000074C80: BF800000
	.long 0xbf800000                                           // 000000074C84: BF800000
	.long 0xbf800000                                           // 000000074C88: BF800000
	.long 0xbf800000                                           // 000000074C8C: BF800000
	.long 0xbf800000                                           // 000000074C90: BF800000
	.long 0xbf800000                                           // 000000074C94: BF800000
	.long 0xbf800000                                           // 000000074C98: BF800000
	.long 0xbf800000                                           // 000000074C9C: BF800000
	.long 0xbf800000                                           // 000000074CA0: BF800000
	.long 0xbf800000                                           // 000000074CA4: BF800000
	.long 0xbf800000                                           // 000000074CA8: BF800000
	.long 0xbf800000                                           // 000000074CAC: BF800000
	.long 0xbf800000                                           // 000000074CB0: BF800000
	.long 0xbf800000                                           // 000000074CB4: BF800000
	.long 0xbf800000                                           // 000000074CB8: BF800000
	.long 0xbf800000                                           // 000000074CBC: BF800000
	.long 0xbf800000                                           // 000000074CC0: BF800000
	.long 0xbf800000                                           // 000000074CC4: BF800000
	.long 0xbf800000                                           // 000000074CC8: BF800000
	.long 0xbf800000                                           // 000000074CCC: BF800000
	.long 0xbf800000                                           // 000000074CD0: BF800000
	.long 0xbf800000                                           // 000000074CD4: BF800000
	.long 0xbf800000                                           // 000000074CD8: BF800000
	.long 0xbf800000                                           // 000000074CDC: BF800000
	.long 0xbf800000                                           // 000000074CE0: BF800000
	.long 0xbf800000                                           // 000000074CE4: BF800000
	.long 0xbf800000                                           // 000000074CE8: BF800000
	.long 0xbf800000                                           // 000000074CEC: BF800000
	.long 0xbf800000                                           // 000000074CF0: BF800000
	.long 0xbf800000                                           // 000000074CF4: BF800000
	.long 0xbf800000                                           // 000000074CF8: BF800000
	.long 0xbf800000                                           // 000000074CFC: BF800000

	.p2align	8
	.type	mul_long_x_get_global_id,@function
	.size	mul_long_x_get_global_id, mul_long_x_get_global_id_symend-mul_long_x_get_global_id
mul_long_x_get_global_id:
	s_clause 0x3                                               // 000000074D00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074D04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 000000074D0C: F4000140 F8000008
	s_load_b64 s[6:7], s[0:1], null                            // 000000074D14: F4040180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000074D1C: F4040000 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000074D24: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000074D30: D6100004 02291500
	v_bfe_u32 v5, v0, 20, 10                                   // 000000074D38: D6100005 02292900
	s_mov_b32 s33, 0                                           // 000000074D40: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 000000074D44: BF870003
	v_lshl_or_b32 v2, s2, 4, v2                                // 000000074D48: D6560002 04090802
	v_mov_b32_e32 v3, v1                                       // 000000074D50: 7E060301
	v_lshl_or_b32 v6, s3, 1, v4                                // 000000074D54: D6560006 04110203
	v_lshl_or_b32 v7, s4, 1, v5                                // 000000074D5C: D6560007 04150204
	s_waitcnt lgkmcnt(0)                                       // 000000074D64: BF89FC07
	v_add_co_u32 v0, s2, s8, v2                                // 000000074D68: D7000200 00020408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000074D70: BF870121
	v_add_co_ci_u32_e64 v2, null, s9, 0, s2                    // 000000074D74: D5207C02 00090009
	s_ashr_i32 s2, s5, 31                                      // 000000074D7C: 86029F05
	v_mad_u64_u32 v[4:5], null, v0, s5, 0                      // 000000074D80: D6FE7C04 02000B00
	s_delay_alu instid0(VALU_DEP_2)                            // 000000074D88: BF870002
	v_mul_lo_u32 v10, v2, s5                                   // 000000074D8C: D72C000A 00000B02
	v_add_co_u32 v2, s3, s10, v6                               // 000000074D94: D7000302 00020C0A
	v_add_co_u32 v6, s0, s0, v7                                // 000000074D9C: D7000006 00020E00
	v_mul_lo_u32 v11, v0, s2                                   // 000000074DA4: D72C000B 00000500
	v_add_co_ci_u32_e64 v7, null, s1, 0, s0                    // 000000074DAC: D5207C07 00010001
	v_add_co_ci_u32_e64 v12, null, s11, 0, s3                  // 000000074DB4: D5207C0C 000D000B
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000074DBC: D73C0008 00020083
	s_delay_alu instid0(VALU_DEP_3)                            // 000000074DC4: BF870003
	v_mul_lo_u32 v16, v7, s5                                   // 000000074DC8: D72C0010 00000B07
	v_mov_b32_e32 v7, v1                                       // 000000074DD0: 7E0E0301
	v_add3_u32 v5, v5, v11, v10                                // 000000074DD4: D6550005 042A1705
	v_mul_lo_u32 v15, v2, s2                                   // 000000074DDC: D72C000F 00000502
	v_mad_u64_u32 v[10:11], null, v2, s5, 0                    // 000000074DE4: D6FE7C0A 02000B02
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000074DEC: D73C0002 00020483
	v_mul_lo_u32 v14, v12, s5                                  // 000000074DF4: D72C000E 00000B0C
	v_mul_lo_u32 v17, v6, s2                                   // 000000074DFC: D72C0011 00000506
	v_mad_u64_u32 v[12:13], null, v6, s5, 0                    // 000000074E04: D6FE7C0C 02000B06
	v_add_co_u32 v0, vcc_lo, s6, v8                            // 000000074E0C: D7006A00 00021006
	v_lshlrev_b64 v[6:7], 3, v[6:7]                            // 000000074E14: D73C0006 00020C83
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v9, vcc_lo             // 000000074E1C: 40021207
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 000000074E20: D7006A02 00020406
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000074E28: 40060607
	s_delay_alu instid0(VALU_DEP_4)                            // 000000074E2C: BF870004
	v_add_co_u32 v6, vcc_lo, s6, v6                            // 000000074E30: D7006A06 00020C06
	v_add3_u32 v11, v11, v15, v14                              // 000000074E38: D655000B 043A1F0B
	v_add3_u32 v13, v13, v17, v16                              // 000000074E40: D655000D 0442230D
	v_add_co_ci_u32_e32 v7, vcc_lo, s7, v7, vcc_lo             // 000000074E48: 400E0E07
	s_clause 0x2                                               // 000000074E4C: BF850002
	global_store_b64 v[0:1], v[4:5], off                       // 000000074E50: DC6E0000 007C0400
	global_store_b64 v[2:3], v[10:11], off                     // 000000074E58: DC6E0000 007C0A02
	global_store_b64 v[6:7], v[12:13], off                     // 000000074E60: DC6E0000 007C0C06
	s_nop 0                                                    // 000000074E68: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074E6C: BFB60003
	s_endpgm                                                   // 000000074E70: BFB00000
mul_long_x_get_global_id_symend:
	.long 0xbf800000                                           // 000000074E74: BF800000
	.long 0xbf800000                                           // 000000074E78: BF800000
	.long 0xbf800000                                           // 000000074E7C: BF800000
	.long 0xbf800000                                           // 000000074E80: BF800000
	.long 0xbf800000                                           // 000000074E84: BF800000
	.long 0xbf800000                                           // 000000074E88: BF800000
	.long 0xbf800000                                           // 000000074E8C: BF800000
	.long 0xbf800000                                           // 000000074E90: BF800000
	.long 0xbf800000                                           // 000000074E94: BF800000
	.long 0xbf800000                                           // 000000074E98: BF800000
	.long 0xbf800000                                           // 000000074E9C: BF800000
	.long 0xbf800000                                           // 000000074EA0: BF800000
	.long 0xbf800000                                           // 000000074EA4: BF800000
	.long 0xbf800000                                           // 000000074EA8: BF800000
	.long 0xbf800000                                           // 000000074EAC: BF800000
	.long 0xbf800000                                           // 000000074EB0: BF800000
	.long 0xbf800000                                           // 000000074EB4: BF800000
	.long 0xbf800000                                           // 000000074EB8: BF800000
	.long 0xbf800000                                           // 000000074EBC: BF800000
	.long 0xbf800000                                           // 000000074EC0: BF800000
	.long 0xbf800000                                           // 000000074EC4: BF800000
	.long 0xbf800000                                           // 000000074EC8: BF800000
	.long 0xbf800000                                           // 000000074ECC: BF800000
	.long 0xbf800000                                           // 000000074ED0: BF800000
	.long 0xbf800000                                           // 000000074ED4: BF800000
	.long 0xbf800000                                           // 000000074ED8: BF800000
	.long 0xbf800000                                           // 000000074EDC: BF800000
	.long 0xbf800000                                           // 000000074EE0: BF800000
	.long 0xbf800000                                           // 000000074EE4: BF800000
	.long 0xbf800000                                           // 000000074EE8: BF800000
	.long 0xbf800000                                           // 000000074EEC: BF800000
	.long 0xbf800000                                           // 000000074EF0: BF800000
	.long 0xbf800000                                           // 000000074EF4: BF800000
	.long 0xbf800000                                           // 000000074EF8: BF800000
	.long 0xbf800000                                           // 000000074EFC: BF800000

	.p2align	8
	.type	mul_long_get_global_offset_get_global_id,@function
	.size	mul_long_get_global_offset_get_global_id, mul_long_get_global_offset_get_global_id_symend-mul_long_get_global_offset_get_global_id
mul_long_get_global_offset_get_global_id:
	s_clause 0x1                                               // 000000074F00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074F04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000074F0C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000074F14: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000074F1C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074F24: D6100000 02292900
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000074F2C: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000074F34: BEA10080
	v_lshl_or_b32 v3, s2, 1, v1                                // 000000074F38: D6560003 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000074F40: D6560002 04090803
	v_lshl_or_b32 v6, s4, 1, v0                                // 000000074F48: D6560006 04010204
	v_mov_b32_e32 v1, 0                                        // 000000074F50: 7E020280
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000074F54: BF8700B1
	v_mov_b32_e32 v7, v1                                       // 000000074F58: 7E0E0301
	s_waitcnt lgkmcnt(0)                                       // 000000074F5C: BF89FC07
	v_add_co_u32 v0, s2, s8, v3                                // 000000074F60: D7000200 00020608
	v_add_co_ci_u32_e64 v14, null, s9, 0, s2                   // 000000074F68: D5207C0E 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000074F70: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 000000074F78: BF870231
	v_add_co_ci_u32_e64 v15, null, s11, 0, s2                  // 000000074F7C: D5207C0F 0009000B
	v_add_co_u32 v6, s2, s6, v6                                // 000000074F84: D7000206 00020C06
	v_mad_u64_u32 v[4:5], null, s8, v0, 0                      // 000000074F8C: D6FE7C04 02020008
	v_mad_u64_u32 v[8:9], null, s10, v2, 0                     // 000000074F94: D6FE7C08 0202040A
	s_delay_alu instid0(VALU_DEP_3)                            // 000000074F9C: BF870003
	v_mad_u64_u32 v[10:11], null, s6, v6, 0                    // 000000074FA0: D6FE7C0A 02020C06
	v_mov_b32_e32 v3, v1                                       // 000000074FA8: 7E060301
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000074FAC: D73C0000 00020083
	v_add_co_ci_u32_e64 v16, null, s7, 0, s2                   // 000000074FB4: D5207C10 00090007
	v_mad_u64_u32 v[12:13], null, s8, v14, v[5:6]              // 000000074FBC: D6FE7C0C 04161C08
	v_mov_b32_e32 v5, v11                                      // 000000074FC4: 7E0A030B
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000074FC8: D73C0002 00020483
	v_mad_u64_u32 v[13:14], null, s10, v15, v[9:10]            // 000000074FD0: D6FE7C0D 04261E0A
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000074FD8: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000074FE0: BF870004
	v_mad_u64_u32 v[14:15], null, s6, v16, v[5:6]              // 000000074FE4: D6FE7C0E 04162006
	v_lshlrev_b64 v[6:7], 3, v[6:7]                            // 000000074FEC: D73C0006 00020C83
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000074FF4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000074FF8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000075000: 40060601
	v_mov_b32_e32 v5, v12                                      // 000000075004: 7E0A030C
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 000000075008: D7006A06 00020C00
	v_mov_b32_e32 v9, v13                                      // 000000075010: 7E12030D
	v_mov_b32_e32 v11, v14                                     // 000000075014: 7E16030E
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 000000075018: 400E0E01
	s_clause 0x2                                               // 00000007501C: BF850002
	global_store_b64 v[0:1], v[4:5], off                       // 000000075020: DC6E0000 007C0400
	global_store_b64 v[2:3], v[8:9], off                       // 000000075028: DC6E0000 007C0802
	global_store_b64 v[6:7], v[10:11], off                     // 000000075030: DC6E0000 007C0A06
	s_nop 0                                                    // 000000075038: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007503C: BFB60003
	s_endpgm                                                   // 000000075040: BFB00000
mul_long_get_global_offset_get_global_id_symend:
	.long 0xbf800000                                           // 000000075044: BF800000
	.long 0xbf800000                                           // 000000075048: BF800000
	.long 0xbf800000                                           // 00000007504C: BF800000
	.long 0xbf800000                                           // 000000075050: BF800000
	.long 0xbf800000                                           // 000000075054: BF800000
	.long 0xbf800000                                           // 000000075058: BF800000
	.long 0xbf800000                                           // 00000007505C: BF800000
	.long 0xbf800000                                           // 000000075060: BF800000
	.long 0xbf800000                                           // 000000075064: BF800000
	.long 0xbf800000                                           // 000000075068: BF800000
	.long 0xbf800000                                           // 00000007506C: BF800000
	.long 0xbf800000                                           // 000000075070: BF800000
	.long 0xbf800000                                           // 000000075074: BF800000
	.long 0xbf800000                                           // 000000075078: BF800000
	.long 0xbf800000                                           // 00000007507C: BF800000
	.long 0xbf800000                                           // 000000075080: BF800000
	.long 0xbf800000                                           // 000000075084: BF800000
	.long 0xbf800000                                           // 000000075088: BF800000
	.long 0xbf800000                                           // 00000007508C: BF800000
	.long 0xbf800000                                           // 000000075090: BF800000
	.long 0xbf800000                                           // 000000075094: BF800000
	.long 0xbf800000                                           // 000000075098: BF800000
	.long 0xbf800000                                           // 00000007509C: BF800000
	.long 0xbf800000                                           // 0000000750A0: BF800000
	.long 0xbf800000                                           // 0000000750A4: BF800000
	.long 0xbf800000                                           // 0000000750A8: BF800000
	.long 0xbf800000                                           // 0000000750AC: BF800000
	.long 0xbf800000                                           // 0000000750B0: BF800000
	.long 0xbf800000                                           // 0000000750B4: BF800000
	.long 0xbf800000                                           // 0000000750B8: BF800000
	.long 0xbf800000                                           // 0000000750BC: BF800000
	.long 0xbf800000                                           // 0000000750C0: BF800000
	.long 0xbf800000                                           // 0000000750C4: BF800000
	.long 0xbf800000                                           // 0000000750C8: BF800000
	.long 0xbf800000                                           // 0000000750CC: BF800000
	.long 0xbf800000                                           // 0000000750D0: BF800000
	.long 0xbf800000                                           // 0000000750D4: BF800000
	.long 0xbf800000                                           // 0000000750D8: BF800000
	.long 0xbf800000                                           // 0000000750DC: BF800000
	.long 0xbf800000                                           // 0000000750E0: BF800000
	.long 0xbf800000                                           // 0000000750E4: BF800000
	.long 0xbf800000                                           // 0000000750E8: BF800000
	.long 0xbf800000                                           // 0000000750EC: BF800000
	.long 0xbf800000                                           // 0000000750F0: BF800000
	.long 0xbf800000                                           // 0000000750F4: BF800000
	.long 0xbf800000                                           // 0000000750F8: BF800000
	.long 0xbf800000                                           // 0000000750FC: BF800000

	.p2align	8
	.type	mul_long_get_local_id_get_global_id,@function
	.size	mul_long_get_local_id_get_global_id, mul_long_get_local_id_get_global_id_symend-mul_long_get_local_id_get_global_id
mul_long_get_local_id_get_global_id:
	s_clause 0x1                                               // 000000075100: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075104: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007510C: F4040180 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v14, 0x3ff, v0      // 000000075114: CA240080 010E00FF 000003FF
	v_bfe_u32 v15, v0, 10, 10                                  // 000000075120: D610000F 02291500
	v_bfe_u32 v16, v0, 20, 10                                  // 000000075128: D6100010 02292900
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000075130: F4040000 F8000008
	s_delay_alu instid0(VALU_DEP_3)                            // 000000075138: BF870003
	v_lshl_or_b32 v0, s2, 3, v14                               // 00000007513C: D6560000 04390602
	v_mov_b32_e32 v7, v1                                       // 000000075144: 7E0E0301
	v_lshl_or_b32 v2, s3, 2, v15                               // 000000075148: D6560002 043D0403
	v_lshl_or_b32 v3, s4, 1, v16                               // 000000075150: D6560003 04410204
	s_mov_b32 s33, 0                                           // 000000075158: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007515C: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 000000075160: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000075168: BF8700A1
	v_add_co_ci_u32_e64 v17, null, s9, 0, s2                   // 00000007516C: D5207C11 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000075174: D7000202 0002040A
	v_add_co_ci_u32_e64 v18, null, s11, 0, s2                  // 00000007517C: D5207C12 0009000B
	v_add_co_u32 v6, s2, s6, v3                                // 000000075184: D7000206 00020606
	v_mad_u64_u32 v[4:5], null, v0, v14, 0                     // 00000007518C: D6FE7C04 02021D00
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000075194: BF870194
	v_mad_u64_u32 v[8:9], null, v2, v15, 0                     // 000000075198: D6FE7C08 02021F02
	v_mad_u64_u32 v[10:11], null, v6, v16, 0                   // 0000000751A0: D6FE7C0A 02022106
	v_mov_b32_e32 v3, v1                                       // 0000000751A8: 7E060301
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000751AC: D73C0000 00020083
	v_add_co_ci_u32_e64 v19, null, s7, 0, s2                   // 0000000751B4: D5207C13 00090007
	v_mad_u64_u32 v[12:13], null, v17, v14, v[5:6]             // 0000000751BC: D6FE7C0C 04161D11
	v_mov_b32_e32 v5, v11                                      // 0000000751C4: 7E0A030B
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000751C8: D73C0002 00020483
	v_mad_u64_u32 v[13:14], null, v18, v15, v[9:10]            // 0000000751D0: D6FE7C0D 04261F12
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000751D8: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000751E0: BF870004
	v_mad_u64_u32 v[14:15], null, v19, v16, v[5:6]             // 0000000751E4: D6FE7C0E 04162113
	v_lshlrev_b64 v[6:7], 3, v[6:7]                            // 0000000751EC: D73C0006 00020C83
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000751F4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000751F8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000075200: 40060601
	v_mov_b32_e32 v5, v12                                      // 000000075204: 7E0A030C
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 000000075208: D7006A06 00020C00
	v_mov_b32_e32 v9, v13                                      // 000000075210: 7E12030D
	v_mov_b32_e32 v11, v14                                     // 000000075214: 7E16030E
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 000000075218: 400E0E01
	s_clause 0x2                                               // 00000007521C: BF850002
	global_store_b64 v[0:1], v[4:5], off                       // 000000075220: DC6E0000 007C0400
	global_store_b64 v[2:3], v[8:9], off                       // 000000075228: DC6E0000 007C0802
	global_store_b64 v[6:7], v[10:11], off                     // 000000075230: DC6E0000 007C0A06
	s_nop 0                                                    // 000000075238: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007523C: BFB60003
	s_endpgm                                                   // 000000075240: BFB00000
mul_long_get_local_id_get_global_id_symend:
	.long 0xbf800000                                           // 000000075244: BF800000
	.long 0xbf800000                                           // 000000075248: BF800000
	.long 0xbf800000                                           // 00000007524C: BF800000
	.long 0xbf800000                                           // 000000075250: BF800000
	.long 0xbf800000                                           // 000000075254: BF800000
	.long 0xbf800000                                           // 000000075258: BF800000
	.long 0xbf800000                                           // 00000007525C: BF800000
	.long 0xbf800000                                           // 000000075260: BF800000
	.long 0xbf800000                                           // 000000075264: BF800000
	.long 0xbf800000                                           // 000000075268: BF800000
	.long 0xbf800000                                           // 00000007526C: BF800000
	.long 0xbf800000                                           // 000000075270: BF800000
	.long 0xbf800000                                           // 000000075274: BF800000
	.long 0xbf800000                                           // 000000075278: BF800000
	.long 0xbf800000                                           // 00000007527C: BF800000
	.long 0xbf800000                                           // 000000075280: BF800000
	.long 0xbf800000                                           // 000000075284: BF800000
	.long 0xbf800000                                           // 000000075288: BF800000
	.long 0xbf800000                                           // 00000007528C: BF800000
	.long 0xbf800000                                           // 000000075290: BF800000
	.long 0xbf800000                                           // 000000075294: BF800000
	.long 0xbf800000                                           // 000000075298: BF800000
	.long 0xbf800000                                           // 00000007529C: BF800000
	.long 0xbf800000                                           // 0000000752A0: BF800000
	.long 0xbf800000                                           // 0000000752A4: BF800000
	.long 0xbf800000                                           // 0000000752A8: BF800000
	.long 0xbf800000                                           // 0000000752AC: BF800000
	.long 0xbf800000                                           // 0000000752B0: BF800000
	.long 0xbf800000                                           // 0000000752B4: BF800000
	.long 0xbf800000                                           // 0000000752B8: BF800000
	.long 0xbf800000                                           // 0000000752BC: BF800000
	.long 0xbf800000                                           // 0000000752C0: BF800000
	.long 0xbf800000                                           // 0000000752C4: BF800000
	.long 0xbf800000                                           // 0000000752C8: BF800000
	.long 0xbf800000                                           // 0000000752CC: BF800000
	.long 0xbf800000                                           // 0000000752D0: BF800000
	.long 0xbf800000                                           // 0000000752D4: BF800000
	.long 0xbf800000                                           // 0000000752D8: BF800000
	.long 0xbf800000                                           // 0000000752DC: BF800000
	.long 0xbf800000                                           // 0000000752E0: BF800000
	.long 0xbf800000                                           // 0000000752E4: BF800000
	.long 0xbf800000                                           // 0000000752E8: BF800000
	.long 0xbf800000                                           // 0000000752EC: BF800000
	.long 0xbf800000                                           // 0000000752F0: BF800000
	.long 0xbf800000                                           // 0000000752F4: BF800000
	.long 0xbf800000                                           // 0000000752F8: BF800000
	.long 0xbf800000                                           // 0000000752FC: BF800000

	.p2align	8
	.type	mul_long_get_group_id_get_global_id,@function
	.size	mul_long_get_group_id_get_global_id, mul_long_get_group_id_get_global_id_symend-mul_long_get_group_id_get_global_id
mul_long_get_group_id_get_global_id:
	s_clause 0x1                                               // 000000075300: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075304: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007530C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000075314: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007531C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075324: D6100000 02292900
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007532C: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000075334: BEA10080
	v_lshl_or_b32 v3, s2, 1, v1                                // 000000075338: D6560003 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000075340: D6560002 04090803
	v_lshl_or_b32 v6, s4, 1, v0                                // 000000075348: D6560006 04010204
	v_mov_b32_e32 v1, 0                                        // 000000075350: 7E020280
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000075354: BF8700B1
	v_mov_b32_e32 v7, v1                                       // 000000075358: 7E0E0301
	s_waitcnt lgkmcnt(0)                                       // 00000007535C: BF89FC07
	v_add_co_u32 v0, s5, s8, v3                                // 000000075360: D7000500 00020608
	v_add_co_ci_u32_e64 v14, null, s9, 0, s5                   // 000000075368: D5207C0E 00150009
	v_add_co_u32 v2, s5, s10, v2                               // 000000075370: D7000502 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 000000075378: BF870231
	v_add_co_ci_u32_e64 v15, null, s11, 0, s5                  // 00000007537C: D5207C0F 0015000B
	v_add_co_u32 v6, s5, s6, v6                                // 000000075384: D7000506 00020C06
	v_mad_u64_u32 v[4:5], null, v0, s2, 0                      // 00000007538C: D6FE7C04 02000500
	v_mad_u64_u32 v[8:9], null, v2, s3, 0                      // 000000075394: D6FE7C08 02000702
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007539C: BF870003
	v_mad_u64_u32 v[10:11], null, v6, s4, 0                    // 0000000753A0: D6FE7C0A 02000906
	v_mov_b32_e32 v3, v1                                       // 0000000753A8: 7E060301
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000753AC: D73C0000 00020083
	v_add_co_ci_u32_e64 v16, null, s7, 0, s5                   // 0000000753B4: D5207C10 00150007
	v_mad_u64_u32 v[12:13], null, v14, s2, v[5:6]              // 0000000753BC: D6FE7C0C 0414050E
	v_mov_b32_e32 v5, v11                                      // 0000000753C4: 7E0A030B
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000753C8: D73C0002 00020483
	v_mad_u64_u32 v[13:14], null, v15, s3, v[9:10]             // 0000000753D0: D6FE7C0D 0424070F
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000753D8: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000753E0: BF870004
	v_mad_u64_u32 v[14:15], null, v16, s4, v[5:6]              // 0000000753E4: D6FE7C0E 04140910
	v_lshlrev_b64 v[6:7], 3, v[6:7]                            // 0000000753EC: D73C0006 00020C83
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000753F4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000753F8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000075400: 40060601
	v_mov_b32_e32 v5, v12                                      // 000000075404: 7E0A030C
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 000000075408: D7006A06 00020C00
	v_mov_b32_e32 v9, v13                                      // 000000075410: 7E12030D
	v_mov_b32_e32 v11, v14                                     // 000000075414: 7E16030E
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 000000075418: 400E0E01
	s_clause 0x2                                               // 00000007541C: BF850002
	global_store_b64 v[0:1], v[4:5], off                       // 000000075420: DC6E0000 007C0400
	global_store_b64 v[2:3], v[8:9], off                       // 000000075428: DC6E0000 007C0802
	global_store_b64 v[6:7], v[10:11], off                     // 000000075430: DC6E0000 007C0A06
	s_nop 0                                                    // 000000075438: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007543C: BFB60003
	s_endpgm                                                   // 000000075440: BFB00000
mul_long_get_group_id_get_global_id_symend:
	.long 0xbf800000                                           // 000000075444: BF800000
	.long 0xbf800000                                           // 000000075448: BF800000
	.long 0xbf800000                                           // 00000007544C: BF800000
	.long 0xbf800000                                           // 000000075450: BF800000
	.long 0xbf800000                                           // 000000075454: BF800000
	.long 0xbf800000                                           // 000000075458: BF800000
	.long 0xbf800000                                           // 00000007545C: BF800000
	.long 0xbf800000                                           // 000000075460: BF800000
	.long 0xbf800000                                           // 000000075464: BF800000
	.long 0xbf800000                                           // 000000075468: BF800000
	.long 0xbf800000                                           // 00000007546C: BF800000
	.long 0xbf800000                                           // 000000075470: BF800000
	.long 0xbf800000                                           // 000000075474: BF800000
	.long 0xbf800000                                           // 000000075478: BF800000
	.long 0xbf800000                                           // 00000007547C: BF800000
	.long 0xbf800000                                           // 000000075480: BF800000
	.long 0xbf800000                                           // 000000075484: BF800000
	.long 0xbf800000                                           // 000000075488: BF800000
	.long 0xbf800000                                           // 00000007548C: BF800000
	.long 0xbf800000                                           // 000000075490: BF800000
	.long 0xbf800000                                           // 000000075494: BF800000
	.long 0xbf800000                                           // 000000075498: BF800000
	.long 0xbf800000                                           // 00000007549C: BF800000
	.long 0xbf800000                                           // 0000000754A0: BF800000
	.long 0xbf800000                                           // 0000000754A4: BF800000
	.long 0xbf800000                                           // 0000000754A8: BF800000
	.long 0xbf800000                                           // 0000000754AC: BF800000
	.long 0xbf800000                                           // 0000000754B0: BF800000
	.long 0xbf800000                                           // 0000000754B4: BF800000
	.long 0xbf800000                                           // 0000000754B8: BF800000
	.long 0xbf800000                                           // 0000000754BC: BF800000
	.long 0xbf800000                                           // 0000000754C0: BF800000
	.long 0xbf800000                                           // 0000000754C4: BF800000
	.long 0xbf800000                                           // 0000000754C8: BF800000
	.long 0xbf800000                                           // 0000000754CC: BF800000
	.long 0xbf800000                                           // 0000000754D0: BF800000
	.long 0xbf800000                                           // 0000000754D4: BF800000
	.long 0xbf800000                                           // 0000000754D8: BF800000
	.long 0xbf800000                                           // 0000000754DC: BF800000
	.long 0xbf800000                                           // 0000000754E0: BF800000
	.long 0xbf800000                                           // 0000000754E4: BF800000
	.long 0xbf800000                                           // 0000000754E8: BF800000
	.long 0xbf800000                                           // 0000000754EC: BF800000
	.long 0xbf800000                                           // 0000000754F0: BF800000
	.long 0xbf800000                                           // 0000000754F4: BF800000
	.long 0xbf800000                                           // 0000000754F8: BF800000
	.long 0xbf800000                                           // 0000000754FC: BF800000

	.p2align	8
	.type	mul_long_get_local_size_get_global_id,@function
	.size	mul_long_get_local_size_get_global_id, mul_long_get_local_size_get_global_id_symend-mul_long_get_local_size_get_global_id
mul_long_get_local_size_get_global_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000075500: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000075508: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007550C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000075510: 820B8001
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000075514: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000075520: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075528: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000075530: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 000000075534: BF870003
	v_mov_b32_e32 v3, v1                                       // 000000075538: 7E060301
	v_lshl_or_b32 v2, s2, 1, v2                                // 00000007553C: D6560002 04090202
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000075544: D6560004 04110203
	v_lshl_or_b32 v5, s4, 2, v0                                // 00000007554C: D6560005 04010404
	s_cmp_lt_u32 s2, s8                                        // 000000075554: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 000000075558: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007555C: BF8704D9
	s_add_u32 s6, s5, s6                                       // 000000075560: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000075564: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000075568: BF0A0903
	global_load_u16 v14, v1, s[6:7]                            // 00000007556C: DC4A0000 0E060001
	s_cselect_b32 s8, 14, 20                                   // 000000075574: 9808948E
	s_add_u32 s8, s5, s8                                       // 000000075578: 80080805
	s_addc_u32 s9, s11, 0                                      // 00000007557C: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 000000075580: BF0A0A04
	s_cselect_b32 s10, 16, 22                                  // 000000075584: 980A9690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000075588: BF870009
	s_add_u32 s10, s5, s10                                     // 00000007558C: 800A0A05
	s_addc_u32 s11, s11, 0                                     // 000000075590: 820B800B
	s_clause 0x1                                               // 000000075594: BF850001
	global_load_u16 v15, v1, s[8:9]                            // 000000075598: DC4A0000 0F080001
	global_load_u16 v16, v1, s[10:11]                          // 0000000755A0: DC4A0000 100A0001
	s_clause 0x2                                               // 0000000755A8: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 0000000755AC: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 0000000755B4: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000755BC: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000755C4: BF89FC07
	v_add_co_u32 v0, s2, s8, v2                                // 0000000755C8: D7000200 00020408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000755D0: BF8700A1
	v_add_co_ci_u32_e64 v17, null, s9, 0, s2                   // 0000000755D4: D5207C11 00090009
	v_add_co_u32 v2, s2, s10, v4                               // 0000000755DC: D7000202 0002080A
	v_add_co_ci_u32_e64 v18, null, s11, 0, s2                  // 0000000755E4: D5207C12 0009000B
	v_add_co_u32 v4, s2, s6, v5                                // 0000000755EC: D7000204 00020A06
	v_mov_b32_e32 v5, v1                                       // 0000000755F4: 7E0A0301
	v_add_co_ci_u32_e64 v19, null, s7, 0, s2                   // 0000000755F8: D5207C13 00090007
	s_waitcnt vmcnt(2)                                         // 000000075600: BF890BF7
	v_mad_u64_u32 v[6:7], null, v0, v14, 0                     // 000000075604: D6FE7C06 02021D00
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 00000007560C: D73C0000 00020083
	s_delay_alu instid0(VALU_DEP_1)                            // 000000075614: BF870001
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000075618: D7006A00 00020000
	s_waitcnt vmcnt(1)                                         // 000000075620: BF8907F7
	v_mad_u64_u32 v[8:9], null, v2, v15, 0                     // 000000075624: D6FE7C08 02021F02
	s_waitcnt vmcnt(0)                                         // 00000007562C: BF8903F7
	v_mad_u64_u32 v[10:11], null, v4, v16, 0                   // 000000075630: D6FE7C0A 02022104
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000075638: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000075640: D73C0004 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000075648: 40020201
	v_mad_u64_u32 v[12:13], null, v17, v14, v[7:8]             // 00000007564C: D6FE7C0C 041E1D11
	v_mad_u64_u32 v[13:14], null, v18, v15, v[9:10]            // 000000075654: D6FE7C0D 04261F12
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007565C: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000075664: 40060601
	s_delay_alu instid0(VALU_DEP_4)                            // 000000075668: BF870004
	v_mad_u64_u32 v[14:15], null, v19, v16, v[11:12]           // 00000007566C: D6FE7C0E 042E2113
	v_mov_b32_e32 v7, v12                                      // 000000075674: 7E0E030C
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000075678: D7006A04 00020800
	v_mov_b32_e32 v9, v13                                      // 000000075680: 7E12030D
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000075684: 400A0A01
	v_mov_b32_e32 v11, v14                                     // 000000075688: 7E16030E
	s_clause 0x2                                               // 00000007568C: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000075690: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000075698: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 0000000756A0: DC6E0000 007C0A04
	s_nop 0                                                    // 0000000756A8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000756AC: BFB60003
	s_endpgm                                                   // 0000000756B0: BFB00000
mul_long_get_local_size_get_global_id_symend:
	.long 0xbf800000                                           // 0000000756B4: BF800000
	.long 0xbf800000                                           // 0000000756B8: BF800000
	.long 0xbf800000                                           // 0000000756BC: BF800000
	.long 0xbf800000                                           // 0000000756C0: BF800000
	.long 0xbf800000                                           // 0000000756C4: BF800000
	.long 0xbf800000                                           // 0000000756C8: BF800000
	.long 0xbf800000                                           // 0000000756CC: BF800000
	.long 0xbf800000                                           // 0000000756D0: BF800000
	.long 0xbf800000                                           // 0000000756D4: BF800000
	.long 0xbf800000                                           // 0000000756D8: BF800000
	.long 0xbf800000                                           // 0000000756DC: BF800000
	.long 0xbf800000                                           // 0000000756E0: BF800000
	.long 0xbf800000                                           // 0000000756E4: BF800000
	.long 0xbf800000                                           // 0000000756E8: BF800000
	.long 0xbf800000                                           // 0000000756EC: BF800000
	.long 0xbf800000                                           // 0000000756F0: BF800000
	.long 0xbf800000                                           // 0000000756F4: BF800000
	.long 0xbf800000                                           // 0000000756F8: BF800000
	.long 0xbf800000                                           // 0000000756FC: BF800000

	.p2align	8
	.type	mul_long_get_global_id_get_global_id,@function
	.size	mul_long_get_global_id_get_global_id, mul_long_get_global_id_get_global_id_symend-mul_long_get_global_id_get_global_id
mul_long_get_global_id_get_global_id:
	s_clause 0x1                                               // 000000075700: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075704: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007570C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000075714: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007571C: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 000000075724: D6100003 02292900
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007572C: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000075734: BEA10080
	v_lshl_or_b32 v0, s2, 1, v1                                // 000000075738: D6560000 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000075740: D6560002 04090203
	v_lshl_or_b32 v3, s4, 2, v3                                // 000000075748: D6560003 040D0404
	v_mov_b32_e32 v1, 0                                        // 000000075750: 7E020280
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000075754: BF8700B1
	v_mov_b32_e32 v7, v1                                       // 000000075758: 7E0E0301
	s_waitcnt lgkmcnt(0)                                       // 00000007575C: BF89FC07
	v_add_co_u32 v14, s2, s8, v0                               // 000000075760: D700020E 00020008
	v_add_co_ci_u32_e64 v15, null, s9, 0, s2                   // 000000075768: D5207C0F 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000075770: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 000000075778: BF870231
	v_add_co_ci_u32_e64 v17, null, s11, 0, s2                  // 00000007577C: D5207C11 0009000B
	v_add_co_u32 v6, s2, s6, v3                                // 000000075784: D7000206 00020606
	v_mad_u64_u32 v[4:5], null, v14, v14, 0                    // 00000007578C: D6FE7C04 02021D0E
	v_mad_u64_u32 v[8:9], null, v2, v2, 0                      // 000000075794: D6FE7C08 02020502
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007579C: BF870003
	v_mad_u64_u32 v[10:11], null, v6, v6, 0                    // 0000000757A0: D6FE7C0A 02020D06
	v_mov_b32_e32 v3, v1                                       // 0000000757A8: 7E060301
	v_add_co_ci_u32_e64 v18, null, s7, 0, s2                   // 0000000757AC: D5207C12 00090007
	v_mad_u64_u32 v[12:13], null, v14, v15, v[5:6]             // 0000000757B4: D6FE7C0C 04161F0E
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000757BC: D73C0000 00020083
	v_mov_b32_e32 v5, v11                                      // 0000000757C4: 7E0A030B
	v_lshlrev_b64 v[13:14], 3, v[2:3]                          // 0000000757C8: D73C000D 00020483
	v_mad_u64_u32 v[15:16], null, v2, v17, v[9:10]             // 0000000757D0: D6FE7C0F 04262302
	s_delay_alu instid0(VALU_DEP_3)                            // 0000000757D8: BF870003
	v_mad_u64_u32 v[2:3], null, v6, v18, v[5:6]                // 0000000757DC: D6FE7C02 04162506
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000757E4: D7006A00 00020000
	v_lshlrev_b64 v[6:7], 3, v[6:7]                            // 0000000757EC: D73C0006 00020C83
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000757F4: 40020201
	v_mov_b32_e32 v5, v12                                      // 0000000757F8: 7E0A030C
	v_add_co_u32 v12, vcc_lo, s0, v13                          // 0000000757FC: D7006A0C 00021A00
	v_add_co_ci_u32_e32 v13, vcc_lo, s1, v14, vcc_lo           // 000000075804: 401A1C01
	v_mov_b32_e32 v11, v2                                      // 000000075808: 7E160302
	v_add_co_u32 v2, vcc_lo, s0, v6                            // 00000007580C: D7006A02 00020C00
	v_mov_b32_e32 v9, v15                                      // 000000075814: 7E12030F
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v7, vcc_lo             // 000000075818: 40060E01
	s_clause 0x2                                               // 00000007581C: BF850002
	global_store_b64 v[0:1], v[4:5], off                       // 000000075820: DC6E0000 007C0400
	global_store_b64 v[12:13], v[8:9], off                     // 000000075828: DC6E0000 007C080C
	global_store_b64 v[2:3], v[10:11], off                     // 000000075830: DC6E0000 007C0A02
	s_nop 0                                                    // 000000075838: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007583C: BFB60003
	s_endpgm                                                   // 000000075840: BFB00000
mul_long_get_global_id_get_global_id_symend:
	.long 0xbf800000                                           // 000000075844: BF800000
	.long 0xbf800000                                           // 000000075848: BF800000
	.long 0xbf800000                                           // 00000007584C: BF800000
	.long 0xbf800000                                           // 000000075850: BF800000
	.long 0xbf800000                                           // 000000075854: BF800000
	.long 0xbf800000                                           // 000000075858: BF800000
	.long 0xbf800000                                           // 00000007585C: BF800000
	.long 0xbf800000                                           // 000000075860: BF800000
	.long 0xbf800000                                           // 000000075864: BF800000
	.long 0xbf800000                                           // 000000075868: BF800000
	.long 0xbf800000                                           // 00000007586C: BF800000
	.long 0xbf800000                                           // 000000075870: BF800000
	.long 0xbf800000                                           // 000000075874: BF800000
	.long 0xbf800000                                           // 000000075878: BF800000
	.long 0xbf800000                                           // 00000007587C: BF800000
	.long 0xbf800000                                           // 000000075880: BF800000
	.long 0xbf800000                                           // 000000075884: BF800000
	.long 0xbf800000                                           // 000000075888: BF800000
	.long 0xbf800000                                           // 00000007588C: BF800000
	.long 0xbf800000                                           // 000000075890: BF800000
	.long 0xbf800000                                           // 000000075894: BF800000
	.long 0xbf800000                                           // 000000075898: BF800000
	.long 0xbf800000                                           // 00000007589C: BF800000
	.long 0xbf800000                                           // 0000000758A0: BF800000
	.long 0xbf800000                                           // 0000000758A4: BF800000
	.long 0xbf800000                                           // 0000000758A8: BF800000
	.long 0xbf800000                                           // 0000000758AC: BF800000
	.long 0xbf800000                                           // 0000000758B0: BF800000
	.long 0xbf800000                                           // 0000000758B4: BF800000
	.long 0xbf800000                                           // 0000000758B8: BF800000
	.long 0xbf800000                                           // 0000000758BC: BF800000
	.long 0xbf800000                                           // 0000000758C0: BF800000
	.long 0xbf800000                                           // 0000000758C4: BF800000
	.long 0xbf800000                                           // 0000000758C8: BF800000
	.long 0xbf800000                                           // 0000000758CC: BF800000
	.long 0xbf800000                                           // 0000000758D0: BF800000
	.long 0xbf800000                                           // 0000000758D4: BF800000
	.long 0xbf800000                                           // 0000000758D8: BF800000
	.long 0xbf800000                                           // 0000000758DC: BF800000
	.long 0xbf800000                                           // 0000000758E0: BF800000
	.long 0xbf800000                                           // 0000000758E4: BF800000
	.long 0xbf800000                                           // 0000000758E8: BF800000
	.long 0xbf800000                                           // 0000000758EC: BF800000
	.long 0xbf800000                                           // 0000000758F0: BF800000
	.long 0xbf800000                                           // 0000000758F4: BF800000
	.long 0xbf800000                                           // 0000000758F8: BF800000
	.long 0xbf800000                                           // 0000000758FC: BF800000

	.p2align	8
	.type	mul_long_get_global_size_get_global_id,@function
	.size	mul_long_get_global_size_get_global_id, mul_long_get_global_size_get_global_id_symend-mul_long_get_global_size_get_global_id
mul_long_get_global_size_get_global_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000075900: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007590C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075914: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007591C: BEA10080
	s_clause 0x1                                               // 000000075920: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 000000075924: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000007592C: DC4A0026 07000001
	s_clause 0x3                                               // 000000075934: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075938: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000075940: F4040180 F8000048
	s_load_b64 s[16:17], s[0:1], null                          // 000000075948: F4040400 F8000000
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000075950: F4080300 F8000010
	v_lshl_or_b32 v2, s2, 4, v2                                // 000000075958: D6560002 04090802
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000075960: D6560004 04110203
	v_lshl_or_b32 v8, s4, 1, v0                                // 000000075968: D6560008 04010204
	v_mov_b32_e32 v3, v1                                       // 000000075970: 7E060301
	s_waitcnt lgkmcnt(0)                                       // 000000075974: BF89FC07
	v_add_co_u32 v0, s0, s8, v2                                // 000000075978: D7000000 00020408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000075980: BF8700A1
	v_add_co_ci_u32_e64 v17, null, s9, 0, s0                   // 000000075984: D5207C11 00010009
	v_add_co_u32 v2, s0, s10, v4                               // 00000007598C: D7000002 0002080A
	v_add_co_ci_u32_e64 v18, null, s11, 0, s0                  // 000000075994: D5207C12 0001000B
	v_add_co_u32 v4, s0, s6, v8                                // 00000007599C: D7000004 00021006
	s_lshl_b32 s1, s14, 1                                      // 0000000759A4: 8401810E
	v_add_co_ci_u32_e64 v16, null, s7, 0, s0                   // 0000000759A8: D5207C10 00010007
	s_lshl_b32 s0, s12, 4                                      // 0000000759B0: 8400840C
	s_lshl_b32 s2, s13, 1                                      // 0000000759B4: 8402810D
	s_waitcnt vmcnt(1)                                         // 0000000759B8: BF8907F7
	v_and_b32_e32 v8, 0xffff, v6                               // 0000000759BC: 36100CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 0000000759C4: BF8903F7
	v_add_nc_u32_e32 v19, s1, v7                               // 0000000759C8: 4A260E01
	v_mov_b32_e32 v5, v1                                       // 0000000759CC: 7E0A0301
	v_lshrrev_b32_e32 v10, 16, v6                              // 0000000759D0: 32140C90
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 0000000759D4: D73C0006 00020083
	v_add_nc_u32_e32 v20, s0, v8                               // 0000000759DC: 4A281000
	v_mad_u64_u32 v[8:9], null, v4, v19, 0                     // 0000000759E0: D6FE7C08 02022704
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000759E8: BF870224
	v_add_nc_u32_e32 v21, s2, v10                              // 0000000759EC: 4A2A1402
	v_lshlrev_b64 v[10:11], 3, v[2:3]                          // 0000000759F0: D73C000A 00020483
	v_mad_u64_u32 v[12:13], null, v0, v20, 0                   // 0000000759F8: D6FE7C0C 02022900
	s_delay_alu instid0(VALU_DEP_3)                            // 000000075A00: BF870003
	v_mad_u64_u32 v[0:1], null, v2, v21, 0                     // 000000075A04: D6FE7C00 02022B02
	v_lshlrev_b64 v[2:3], 3, v[4:5]                            // 000000075A0C: D73C0002 00020883
	v_add_co_u32 v5, vcc_lo, s16, v6                           // 000000075A14: D7006A05 00020C10
	v_mov_b32_e32 v4, v9                                       // 000000075A1C: 7E080309
	v_add_co_ci_u32_e32 v6, vcc_lo, s17, v7, vcc_lo            // 000000075A20: 400C0E11
	v_mov_b32_e32 v7, v13                                      // 000000075A24: 7E0E030D
	v_add_co_u32 v10, vcc_lo, s16, v10                         // 000000075A28: D7006A0A 00021410
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000075A30: BF870194
	v_mad_u64_u32 v[14:15], null, v16, v19, v[4:5]             // 000000075A34: D6FE7C0E 04122710
	v_mad_u64_u32 v[15:16], null, v17, v20, v[7:8]             // 000000075A3C: D6FE7C0F 041E2911
	v_mad_u64_u32 v[16:17], null, v18, v21, v[1:2]             // 000000075A44: D6FE7C10 04062B12
	v_add_co_ci_u32_e32 v11, vcc_lo, s17, v11, vcc_lo          // 000000075A4C: 40161611
	v_add_co_u32 v2, vcc_lo, s16, v2                           // 000000075A50: D7006A02 00020410
	s_delay_alu instid0(VALU_DEP_4)                            // 000000075A58: BF870004
	v_mov_b32_e32 v13, v15                                     // 000000075A5C: 7E1A030F
	v_add_co_ci_u32_e32 v3, vcc_lo, s17, v3, vcc_lo            // 000000075A60: 40060611
	v_mov_b32_e32 v1, v16                                      // 000000075A64: 7E020310
	v_mov_b32_e32 v9, v14                                      // 000000075A68: 7E12030E
	s_clause 0x2                                               // 000000075A6C: BF850002
	global_store_b64 v[5:6], v[12:13], off                     // 000000075A70: DC6E0000 007C0C05
	global_store_b64 v[10:11], v[0:1], off                     // 000000075A78: DC6E0000 007C000A
	global_store_b64 v[2:3], v[8:9], off                       // 000000075A80: DC6E0000 007C0802
	s_nop 0                                                    // 000000075A88: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075A8C: BFB60003
	s_endpgm                                                   // 000000075A90: BFB00000
mul_long_get_global_size_get_global_id_symend:
	.long 0xbf800000                                           // 000000075A94: BF800000
	.long 0xbf800000                                           // 000000075A98: BF800000
	.long 0xbf800000                                           // 000000075A9C: BF800000
	.long 0xbf800000                                           // 000000075AA0: BF800000
	.long 0xbf800000                                           // 000000075AA4: BF800000
	.long 0xbf800000                                           // 000000075AA8: BF800000
	.long 0xbf800000                                           // 000000075AAC: BF800000
	.long 0xbf800000                                           // 000000075AB0: BF800000
	.long 0xbf800000                                           // 000000075AB4: BF800000
	.long 0xbf800000                                           // 000000075AB8: BF800000
	.long 0xbf800000                                           // 000000075ABC: BF800000
	.long 0xbf800000                                           // 000000075AC0: BF800000
	.long 0xbf800000                                           // 000000075AC4: BF800000
	.long 0xbf800000                                           // 000000075AC8: BF800000
	.long 0xbf800000                                           // 000000075ACC: BF800000
	.long 0xbf800000                                           // 000000075AD0: BF800000
	.long 0xbf800000                                           // 000000075AD4: BF800000
	.long 0xbf800000                                           // 000000075AD8: BF800000
	.long 0xbf800000                                           // 000000075ADC: BF800000
	.long 0xbf800000                                           // 000000075AE0: BF800000
	.long 0xbf800000                                           // 000000075AE4: BF800000
	.long 0xbf800000                                           // 000000075AE8: BF800000
	.long 0xbf800000                                           // 000000075AEC: BF800000
	.long 0xbf800000                                           // 000000075AF0: BF800000
	.long 0xbf800000                                           // 000000075AF4: BF800000
	.long 0xbf800000                                           // 000000075AF8: BF800000
	.long 0xbf800000                                           // 000000075AFC: BF800000

	.p2align	8
	.type	mul_long_get_num_groups_get_global_id,@function
	.size	mul_long_get_num_groups_get_global_id, mul_long_get_num_groups_get_global_id_symend-mul_long_get_num_groups_get_global_id
mul_long_get_num_groups_get_global_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000075B00: CA240080 010200FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 000000075B0C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075B14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000075B1C: BEA10080
	s_clause 0x1                                               // 000000075B20: BF850001
	global_load_b32 v4, v1, s[0:1] offset:34                   // 000000075B24: DC520022 04000001
	global_load_u16 v5, v1, s[0:1] offset:38                   // 000000075B2C: DC4A0026 05000001
	s_clause 0x3                                               // 000000075B34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075B38: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000075B40: F4040180 F8000048
	s_load_b64 s[16:17], s[0:1], 0x8                           // 000000075B48: F4040400 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000075B50: F4080300 F8000010
	v_lshl_or_b32 v2, s2, 1, v2                                // 000000075B58: D6560002 04090202
	v_lshl_or_b32 v6, s3, 1, v6                                // 000000075B60: D6560006 04190203
	v_lshl_or_b32 v7, s4, 2, v0                                // 000000075B68: D6560007 04010404
	v_mov_b32_e32 v3, v1                                       // 000000075B70: 7E060301
	s_waitcnt lgkmcnt(0)                                       // 000000075B74: BF89FC07
	v_add_co_u32 v0, s0, s8, v2                                // 000000075B78: D7000000 00020408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000075B80: BF8700A1
	v_add_co_ci_u32_e64 v14, null, s9, 0, s0                   // 000000075B84: D5207C0E 00010009
	v_add_co_u32 v2, s0, s10, v6                               // 000000075B8C: D7000002 00020C0A
	v_add_co_ci_u32_e64 v15, null, s11, 0, s0                  // 000000075B94: D5207C0F 0001000B
	s_waitcnt vmcnt(1)                                         // 000000075B9C: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v4                               // 000000075BA0: 32100890
	v_cmp_ne_u16_e32 vcc_lo, 0, v4.l                           // 000000075BA4: 7C7A0880
	v_add_co_u32 v4, s1, s6, v7                                // 000000075BA8: D7000104 00020E06
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000075BB0: BF870211
	v_add_co_ci_u32_e64 v16, null, s7, 0, s1                   // 000000075BB4: D5207C10 00050007
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 000000075BBC: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000075BC4: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000075BC8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v5.l                           // 000000075BCC: 7C7A0A80
	s_addc_u32 s1, s12, 0                                      // 000000075BD0: 8201800C
	v_mov_b32_e32 v5, v1                                       // 000000075BD4: 7E0A0301
	s_cmp_lg_u32 s0, 0                                         // 000000075BD8: BF078000
	v_mad_u64_u32 v[6:7], null, v0, s1, 0                      // 000000075BDC: D6FE7C06 02000300
	s_addc_u32 s0, s13, 0                                      // 000000075BE4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000075BE8: BF07806A
	v_mad_u64_u32 v[8:9], null, v2, s0, 0                      // 000000075BEC: D6FE7C08 02000102
	s_addc_u32 s2, s14, 0                                      // 000000075BF4: 8202800E
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000075BF8: D73C0000 00020083
	v_mad_u64_u32 v[10:11], null, v4, s2, 0                    // 000000075C00: D6FE7C0A 02000504
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000075C08: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000075C10: D73C0004 00020883
	v_mad_u64_u32 v[12:13], null, v14, s1, v[7:8]              // 000000075C18: D6FE7C0C 041C030E
	v_add_co_u32 v0, vcc_lo, s16, v0                           // 000000075C20: D7006A00 00020010
	v_mad_u64_u32 v[13:14], null, v15, s0, v[9:10]             // 000000075C28: D6FE7C0D 0424010F
	v_add_co_ci_u32_e32 v1, vcc_lo, s17, v1, vcc_lo            // 000000075C30: 40020211
	s_delay_alu instid0(VALU_DEP_4)                            // 000000075C34: BF870004
	v_mad_u64_u32 v[14:15], null, v16, s2, v[11:12]            // 000000075C38: D6FE7C0E 042C0510
	v_add_co_u32 v2, vcc_lo, s16, v2                           // 000000075C40: D7006A02 00020410
	v_add_co_ci_u32_e32 v3, vcc_lo, s17, v3, vcc_lo            // 000000075C48: 40060611
	v_mov_b32_e32 v7, v12                                      // 000000075C4C: 7E0E030C
	v_add_co_u32 v4, vcc_lo, s16, v4                           // 000000075C50: D7006A04 00020810
	v_mov_b32_e32 v9, v13                                      // 000000075C58: 7E12030D
	v_mov_b32_e32 v11, v14                                     // 000000075C5C: 7E16030E
	v_add_co_ci_u32_e32 v5, vcc_lo, s17, v5, vcc_lo            // 000000075C60: 400A0A11
	s_clause 0x2                                               // 000000075C64: BF850002
	global_store_b64 v[0:1], v[6:7], off                       // 000000075C68: DC6E0000 007C0600
	global_store_b64 v[2:3], v[8:9], off                       // 000000075C70: DC6E0000 007C0802
	global_store_b64 v[4:5], v[10:11], off                     // 000000075C78: DC6E0000 007C0A04
	s_nop 0                                                    // 000000075C80: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075C84: BFB60003
	s_endpgm                                                   // 000000075C88: BFB00000
mul_long_get_num_groups_get_global_id_symend:
	.long 0xbf800000                                           // 000000075C8C: BF800000
	.long 0xbf800000                                           // 000000075C90: BF800000
	.long 0xbf800000                                           // 000000075C94: BF800000
	.long 0xbf800000                                           // 000000075C98: BF800000
	.long 0xbf800000                                           // 000000075C9C: BF800000
	.long 0xbf800000                                           // 000000075CA0: BF800000
	.long 0xbf800000                                           // 000000075CA4: BF800000
	.long 0xbf800000                                           // 000000075CA8: BF800000
	.long 0xbf800000                                           // 000000075CAC: BF800000
	.long 0xbf800000                                           // 000000075CB0: BF800000
	.long 0xbf800000                                           // 000000075CB4: BF800000
	.long 0xbf800000                                           // 000000075CB8: BF800000
	.long 0xbf800000                                           // 000000075CBC: BF800000
	.long 0xbf800000                                           // 000000075CC0: BF800000
	.long 0xbf800000                                           // 000000075CC4: BF800000
	.long 0xbf800000                                           // 000000075CC8: BF800000
	.long 0xbf800000                                           // 000000075CCC: BF800000
	.long 0xbf800000                                           // 000000075CD0: BF800000
	.long 0xbf800000                                           // 000000075CD4: BF800000
	.long 0xbf800000                                           // 000000075CD8: BF800000
	.long 0xbf800000                                           // 000000075CDC: BF800000
	.long 0xbf800000                                           // 000000075CE0: BF800000
	.long 0xbf800000                                           // 000000075CE4: BF800000
	.long 0xbf800000                                           // 000000075CE8: BF800000
	.long 0xbf800000                                           // 000000075CEC: BF800000
	.long 0xbf800000                                           // 000000075CF0: BF800000
	.long 0xbf800000                                           // 000000075CF4: BF800000
	.long 0xbf800000                                           // 000000075CF8: BF800000
	.long 0xbf800000                                           // 000000075CFC: BF800000

	.p2align	8
	.type	mul_long_get_work_dim_get_global_id,@function
	.size	mul_long_get_work_dim_get_global_id, mul_long_get_work_dim_get_global_id_symend-mul_long_get_work_dim_get_global_id
mul_long_get_work_dim_get_global_id:
	s_clause 0x2                                               // 000000075D00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075D04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 000000075D0C: F4000140 F8000050
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000075D14: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000075D1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000075D24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075D2C: D6100000 02292900
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000075D34: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000075D3C: BEA10080
	v_lshl_or_b32 v3, s2, 1, v1                                // 000000075D40: D6560003 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000075D48: D6560002 04090203
	v_lshl_or_b32 v6, s4, 2, v0                                // 000000075D50: D6560006 04010404
	v_mov_b32_e32 v1, 0                                        // 000000075D58: 7E020280
	s_delay_alu instid0(VALU_DEP_1)                            // 000000075D5C: BF870001
	v_mov_b32_e32 v7, v1                                       // 000000075D60: 7E0E0301
	s_waitcnt lgkmcnt(0)                                       // 000000075D64: BF89FC07
	v_add_co_u32 v0, s2, s8, v3                                // 000000075D68: D7000200 00020608
	v_add_co_u32 v6, s3, s6, v6                                // 000000075D70: D7000306 00020C06
	v_add_co_ci_u32_e64 v14, null, s9, 0, s2                   // 000000075D78: D5207C0E 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000075D80: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000075D88: BF870001
	v_add_co_ci_u32_e64 v15, null, s11, 0, s2                  // 000000075D8C: D5207C0F 0009000B
	s_and_b32 s2, s5, 0xffff                                   // 000000075D94: 8B02FF05 0000FFFF
	v_mov_b32_e32 v3, v1                                       // 000000075D9C: 7E060301
	v_mad_u64_u32 v[4:5], null, v0, s2, 0                      // 000000075DA0: D6FE7C04 02000500
	v_mad_u64_u32 v[10:11], null, v6, s2, 0                    // 000000075DA8: D6FE7C0A 02000506
	v_mad_u64_u32 v[8:9], null, v2, s2, 0                      // 000000075DB0: D6FE7C08 02000502
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000075DB8: D73C0000 00020083
	v_add_co_ci_u32_e64 v16, null, s7, 0, s3                   // 000000075DC0: D5207C10 000D0007
	v_mad_u64_u32 v[12:13], null, v14, s2, v[5:6]              // 000000075DC8: D6FE7C0C 0414050E
	v_mov_b32_e32 v5, v11                                      // 000000075DD0: 7E0A030B
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000075DD4: D73C0002 00020483
	v_mad_u64_u32 v[13:14], null, v15, s2, v[9:10]             // 000000075DDC: D6FE7C0D 0424050F
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000075DE4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000075DEC: BF870004
	v_mad_u64_u32 v[14:15], null, v16, s2, v[5:6]              // 000000075DF0: D6FE7C0E 04140510
	v_lshlrev_b64 v[6:7], 3, v[6:7]                            // 000000075DF8: D73C0006 00020C83
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000075E00: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000075E04: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000075E0C: 40060601
	v_mov_b32_e32 v5, v12                                      // 000000075E10: 7E0A030C
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 000000075E14: D7006A06 00020C00
	v_mov_b32_e32 v9, v13                                      // 000000075E1C: 7E12030D
	v_mov_b32_e32 v11, v14                                     // 000000075E20: 7E16030E
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 000000075E24: 400E0E01
	s_clause 0x2                                               // 000000075E28: BF850002
	global_store_b64 v[0:1], v[4:5], off                       // 000000075E2C: DC6E0000 007C0400
	global_store_b64 v[2:3], v[8:9], off                       // 000000075E34: DC6E0000 007C0802
	global_store_b64 v[6:7], v[10:11], off                     // 000000075E3C: DC6E0000 007C0A06
	s_nop 0                                                    // 000000075E44: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075E48: BFB60003
	s_endpgm                                                   // 000000075E4C: BFB00000
mul_long_get_work_dim_get_global_id_symend:
	.long 0xbf800000                                           // 000000075E50: BF800000
	.long 0xbf800000                                           // 000000075E54: BF800000
	.long 0xbf800000                                           // 000000075E58: BF800000
	.long 0xbf800000                                           // 000000075E5C: BF800000
	.long 0xbf800000                                           // 000000075E60: BF800000
	.long 0xbf800000                                           // 000000075E64: BF800000
	.long 0xbf800000                                           // 000000075E68: BF800000
	.long 0xbf800000                                           // 000000075E6C: BF800000
	.long 0xbf800000                                           // 000000075E70: BF800000
	.long 0xbf800000                                           // 000000075E74: BF800000
	.long 0xbf800000                                           // 000000075E78: BF800000
	.long 0xbf800000                                           // 000000075E7C: BF800000
	.long 0xbf800000                                           // 000000075E80: BF800000
	.long 0xbf800000                                           // 000000075E84: BF800000
	.long 0xbf800000                                           // 000000075E88: BF800000
	.long 0xbf800000                                           // 000000075E8C: BF800000
	.long 0xbf800000                                           // 000000075E90: BF800000
	.long 0xbf800000                                           // 000000075E94: BF800000
	.long 0xbf800000                                           // 000000075E98: BF800000
	.long 0xbf800000                                           // 000000075E9C: BF800000
	.long 0xbf800000                                           // 000000075EA0: BF800000
	.long 0xbf800000                                           // 000000075EA4: BF800000
	.long 0xbf800000                                           // 000000075EA8: BF800000
	.long 0xbf800000                                           // 000000075EAC: BF800000
	.long 0xbf800000                                           // 000000075EB0: BF800000
	.long 0xbf800000                                           // 000000075EB4: BF800000
	.long 0xbf800000                                           // 000000075EB8: BF800000
	.long 0xbf800000                                           // 000000075EBC: BF800000
	.long 0xbf800000                                           // 000000075EC0: BF800000
	.long 0xbf800000                                           // 000000075EC4: BF800000
	.long 0xbf800000                                           // 000000075EC8: BF800000
	.long 0xbf800000                                           // 000000075ECC: BF800000
	.long 0xbf800000                                           // 000000075ED0: BF800000
	.long 0xbf800000                                           // 000000075ED4: BF800000
	.long 0xbf800000                                           // 000000075ED8: BF800000
	.long 0xbf800000                                           // 000000075EDC: BF800000
	.long 0xbf800000                                           // 000000075EE0: BF800000
	.long 0xbf800000                                           // 000000075EE4: BF800000
	.long 0xbf800000                                           // 000000075EE8: BF800000
	.long 0xbf800000                                           // 000000075EEC: BF800000
	.long 0xbf800000                                           // 000000075EF0: BF800000
	.long 0xbf800000                                           // 000000075EF4: BF800000
	.long 0xbf800000                                           // 000000075EF8: BF800000
	.long 0xbf800000                                           // 000000075EFC: BF800000

	.p2align	8
	.type	mul_long_x_get_global_size,@function
	.size	mul_long_x_get_global_size, mul_long_x_get_global_size_symend-mul_long_x_get_global_size
mul_long_x_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000075F00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000075F0C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000075F10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075F18: D6100000 02292900
	s_clause 0x1                                               // 000000075F20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000075F24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000075F2C: DC4A0026 08000002
	s_clause 0x4                                               // 000000075F34: BF850004
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000075F38: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 000000075F40: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000075F48: F4080200 F8000010
	s_load_b32 s6, s[0:1], 0x48                                // 000000075F50: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000075F58: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 000000075F60: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000075F64: BF89FC07
	v_add3_u32 v1, s12, s2, v1                                 // 000000075F68: D6550001 0404040C
	s_lshl_b32 s2, s3, 1                                       // 000000075F70: 84028103
	s_lshl_b32 s3, s4, 1                                       // 000000075F74: 84038104
	s_lshl_b32 s4, s8, 4                                       // 000000075F78: 84048408
	s_lshl_b32 s7, s9, 1                                       // 000000075F7C: 84078109
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000075F80: D73C0003 00020283
	v_add3_u32 v1, s14, s2, v5                                 // 000000075F88: D6550001 0414040E
	s_lshl_b32 s8, s10, 1                                      // 000000075F90: 8408810A
	s_ashr_i32 s2, s5, 31                                      // 000000075F94: 86029F05
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000075F98: BF8701C1
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000075F9C: D73C0005 00020283
	v_add3_u32 v1, s6, s3, v0                                  // 000000075FA4: D6550001 04000606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000075FAC: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000075FB4: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000075FB8: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000075FC0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000075FC8: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000075FCC: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000075FD0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000075FD8: 40020201
	s_waitcnt vmcnt(1)                                         // 000000075FDC: BF8907F7
	v_readfirstlane_b32 s3, v7                                 // 000000075FE0: 7E060507
	s_waitcnt vmcnt(0)                                         // 000000075FE4: BF8903F7
	v_readfirstlane_b32 s6, v8                                 // 000000075FE8: 7E0C0508
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000075FEC: BF8700B2
	s_and_b32 s1, s3, 0xffff                                   // 000000075FF0: 8B01FF03 0000FFFF
	s_lshr_b32 s0, s3, 16                                      // 000000075FF8: 85009003
	s_add_i32 s1, s4, s1                                       // 000000075FFC: 81010104
	s_add_i32 s3, s8, s6                                       // 000000076000: 81030608
	s_add_i32 s0, s7, s0                                       // 000000076004: 81000007
	s_mul_hi_u32 s7, s1, s5                                    // 000000076008: 96870501
	s_mul_i32 s8, s1, s2                                       // 00000007600C: 96080201
	s_mul_i32 s6, s3, s2                                       // 000000076010: 96060203
	s_mul_hi_u32 s9, s0, s5                                    // 000000076014: 96890500
	s_mul_i32 s2, s0, s2                                       // 000000076018: 96020200
	s_mul_hi_u32 s4, s3, s5                                    // 00000007601C: 96840503
	s_mul_i32 s3, s3, s5                                       // 000000076020: 96030503
	s_mul_i32 s1, s1, s5                                       // 000000076024: 96010501
	s_add_i32 s7, s7, s8                                       // 000000076028: 81070807
	s_mul_i32 s0, s0, s5                                       // 00000007602C: 96000500
	s_add_i32 s9, s9, s2                                       // 000000076030: 81090209
	s_add_i32 s4, s4, s6                                       // 000000076034: 81040604
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v10, s7            // 000000076038: CA100003 070A0007
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v12, s9            // 000000076040: CA100001 090C0009
	v_dual_mov_b32 v11, s0 :: v_dual_mov_b32 v8, s4            // 000000076048: CA100000 0B080004
	s_clause 0x2                                               // 000000076050: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 000000076054: DC6E0000 007C0903
	global_store_b64 v[5:6], v[11:12], off                     // 00000007605C: DC6E0000 007C0B05
	global_store_b64 v[0:1], v[7:8], off                       // 000000076064: DC6E0000 007C0700
	s_nop 0                                                    // 00000007606C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076070: BFB60003
	s_endpgm                                                   // 000000076074: BFB00000
mul_long_x_get_global_size_symend:
	.long 0xbf800000                                           // 000000076078: BF800000
	.long 0xbf800000                                           // 00000007607C: BF800000
	.long 0xbf800000                                           // 000000076080: BF800000
	.long 0xbf800000                                           // 000000076084: BF800000
	.long 0xbf800000                                           // 000000076088: BF800000
	.long 0xbf800000                                           // 00000007608C: BF800000
	.long 0xbf800000                                           // 000000076090: BF800000
	.long 0xbf800000                                           // 000000076094: BF800000
	.long 0xbf800000                                           // 000000076098: BF800000
	.long 0xbf800000                                           // 00000007609C: BF800000
	.long 0xbf800000                                           // 0000000760A0: BF800000
	.long 0xbf800000                                           // 0000000760A4: BF800000
	.long 0xbf800000                                           // 0000000760A8: BF800000
	.long 0xbf800000                                           // 0000000760AC: BF800000
	.long 0xbf800000                                           // 0000000760B0: BF800000
	.long 0xbf800000                                           // 0000000760B4: BF800000
	.long 0xbf800000                                           // 0000000760B8: BF800000
	.long 0xbf800000                                           // 0000000760BC: BF800000
	.long 0xbf800000                                           // 0000000760C0: BF800000
	.long 0xbf800000                                           // 0000000760C4: BF800000
	.long 0xbf800000                                           // 0000000760C8: BF800000
	.long 0xbf800000                                           // 0000000760CC: BF800000
	.long 0xbf800000                                           // 0000000760D0: BF800000
	.long 0xbf800000                                           // 0000000760D4: BF800000
	.long 0xbf800000                                           // 0000000760D8: BF800000
	.long 0xbf800000                                           // 0000000760DC: BF800000
	.long 0xbf800000                                           // 0000000760E0: BF800000
	.long 0xbf800000                                           // 0000000760E4: BF800000
	.long 0xbf800000                                           // 0000000760E8: BF800000
	.long 0xbf800000                                           // 0000000760EC: BF800000
	.long 0xbf800000                                           // 0000000760F0: BF800000
	.long 0xbf800000                                           // 0000000760F4: BF800000
	.long 0xbf800000                                           // 0000000760F8: BF800000
	.long 0xbf800000                                           // 0000000760FC: BF800000

	.p2align	8
	.type	mul_long_get_global_offset_get_global_size,@function
	.size	mul_long_get_global_offset_get_global_size, mul_long_get_global_offset_get_global_size_symend-mul_long_get_global_offset_get_global_size
mul_long_get_global_offset_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000076100: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000007610C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000076110: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076118: D6100000 02292900
	s_clause 0x1                                               // 000000076120: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000076124: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007612C: DC4A0026 08000002
	s_clause 0x3                                               // 000000076134: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076138: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000076140: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000076148: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000076150: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000076158: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007615C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000076160: D6550001 04040408
	s_lshl_b32 s2, s3, 4                                       // 000000076168: 84028403
	s_lshl_b32 s3, s4, 1                                       // 00000007616C: 84038104
	s_lshl_b32 s4, s13, 4                                      // 000000076170: 8404840D
	s_lshl_b32 s6, s14, 1                                      // 000000076174: 8406810E
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000076178: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v5                                 // 000000076180: D6550001 0414040A
	s_lshl_b32 s2, s12, 1                                      // 000000076188: 8402810C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007618C: BF870221
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000076190: D73C0005 00020283
	v_add3_u32 v1, s5, s3, v0                                  // 000000076198: D6550001 04000605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000761A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000761A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000761AC: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000761B0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000761B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000761C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000761C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000761CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000761D0: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000761D4: BF8907F7
	v_and_b32_e32 v9, 0xffff, v7                               // 0000000761D8: 36120EFF 0000FFFF
	v_lshrrev_b32_e32 v2, 16, v7                               // 0000000761E0: 32040E90
	s_waitcnt vmcnt(0)                                         // 0000000761E4: BF8903F7
	v_add_nc_u32_e32 v7, s6, v8                                // 0000000761E8: 4A0E1006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000761EC: BF870193
	v_add_nc_u32_e32 v9, s2, v9                                // 0000000761F0: 4A121202
	v_add_nc_u32_e32 v2, s4, v2                                // 0000000761F4: 4A040404
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000761F8: BF870223
	v_mul_hi_u32 v8, s5, v7                                    // 0000000761FC: D72D0008 00020E05
	v_mul_lo_u32 v7, s5, v7                                    // 000000076204: D72C0007 00020E05
	v_mul_hi_u32 v10, s8, v9                                   // 00000007620C: D72D000A 00021208
	v_mul_lo_u32 v9, s8, v9                                    // 000000076214: D72C0009 00021208
	v_mul_hi_u32 v12, s10, v2                                  // 00000007621C: D72D000C 0002040A
	v_mul_lo_u32 v11, s10, v2                                  // 000000076224: D72C000B 0002040A
	s_clause 0x2                                               // 00000007622C: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 000000076230: DC6E0000 007C0903
	global_store_b64 v[5:6], v[11:12], off                     // 000000076238: DC6E0000 007C0B05
	global_store_b64 v[0:1], v[7:8], off                       // 000000076240: DC6E0000 007C0700
	s_nop 0                                                    // 000000076248: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007624C: BFB60003
	s_endpgm                                                   // 000000076250: BFB00000
mul_long_get_global_offset_get_global_size_symend:
	.long 0xbf800000                                           // 000000076254: BF800000
	.long 0xbf800000                                           // 000000076258: BF800000
	.long 0xbf800000                                           // 00000007625C: BF800000
	.long 0xbf800000                                           // 000000076260: BF800000
	.long 0xbf800000                                           // 000000076264: BF800000
	.long 0xbf800000                                           // 000000076268: BF800000
	.long 0xbf800000                                           // 00000007626C: BF800000
	.long 0xbf800000                                           // 000000076270: BF800000
	.long 0xbf800000                                           // 000000076274: BF800000
	.long 0xbf800000                                           // 000000076278: BF800000
	.long 0xbf800000                                           // 00000007627C: BF800000
	.long 0xbf800000                                           // 000000076280: BF800000
	.long 0xbf800000                                           // 000000076284: BF800000
	.long 0xbf800000                                           // 000000076288: BF800000
	.long 0xbf800000                                           // 00000007628C: BF800000
	.long 0xbf800000                                           // 000000076290: BF800000
	.long 0xbf800000                                           // 000000076294: BF800000
	.long 0xbf800000                                           // 000000076298: BF800000
	.long 0xbf800000                                           // 00000007629C: BF800000
	.long 0xbf800000                                           // 0000000762A0: BF800000
	.long 0xbf800000                                           // 0000000762A4: BF800000
	.long 0xbf800000                                           // 0000000762A8: BF800000
	.long 0xbf800000                                           // 0000000762AC: BF800000
	.long 0xbf800000                                           // 0000000762B0: BF800000
	.long 0xbf800000                                           // 0000000762B4: BF800000
	.long 0xbf800000                                           // 0000000762B8: BF800000
	.long 0xbf800000                                           // 0000000762BC: BF800000
	.long 0xbf800000                                           // 0000000762C0: BF800000
	.long 0xbf800000                                           // 0000000762C4: BF800000
	.long 0xbf800000                                           // 0000000762C8: BF800000
	.long 0xbf800000                                           // 0000000762CC: BF800000
	.long 0xbf800000                                           // 0000000762D0: BF800000
	.long 0xbf800000                                           // 0000000762D4: BF800000
	.long 0xbf800000                                           // 0000000762D8: BF800000
	.long 0xbf800000                                           // 0000000762DC: BF800000
	.long 0xbf800000                                           // 0000000762E0: BF800000
	.long 0xbf800000                                           // 0000000762E4: BF800000
	.long 0xbf800000                                           // 0000000762E8: BF800000
	.long 0xbf800000                                           // 0000000762EC: BF800000
	.long 0xbf800000                                           // 0000000762F0: BF800000
	.long 0xbf800000                                           // 0000000762F4: BF800000
	.long 0xbf800000                                           // 0000000762F8: BF800000
	.long 0xbf800000                                           // 0000000762FC: BF800000

	.p2align	8
	.type	mul_long_get_local_id_get_global_size,@function
	.size	mul_long_get_local_id_get_global_size, mul_long_get_local_id_get_global_size_symend-mul_long_get_local_id_get_global_size
mul_long_get_local_id_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v11, 0x3ff, v0      // 000000076300: CA240080 020A00FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000007630C: 84028302
	v_bfe_u32 v13, v0, 10, 10                                  // 000000076310: D610000D 02291500
	v_bfe_u32 v9, v0, 20, 10                                   // 000000076318: D6100009 02292900
	s_clause 0x1                                               // 000000076320: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000076324: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007632C: DC4A0026 08000002
	s_clause 0x3                                               // 000000076334: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076338: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000076340: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000076348: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000076350: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000076358: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007635C: BF89FC07
	v_add3_u32 v1, s8, s2, v11                                 // 000000076360: D6550001 042C0408
	s_lshl_b32 s2, s3, 2                                       // 000000076368: 84028203
	s_lshl_b32 s3, s4, 1                                       // 00000007636C: 84038104
	s_lshl_b32 s6, s14, 1                                      // 000000076370: 8406810E
	s_lshl_b32 s4, s13, 2                                      // 000000076374: 8404820D
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000076378: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v13                                // 000000076380: D6550001 0434040A
	s_lshl_b32 s2, s12, 3                                      // 000000076388: 8402830C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007638C: BF870221
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000076390: D73C0005 00020283
	v_add3_u32 v1, s5, s3, v9                                  // 000000076398: D6550001 04240605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000763A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000763A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000763AC: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000763B0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000763B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000763C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000763C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000763CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000763D0: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000763D4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 0000000763D8: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 0000000763DC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 0000000763E4: BF8903F7
	v_add_nc_u32_e32 v10, s6, v8                               // 0000000763E8: 4A141006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000763EC: BF870193
	v_add_nc_u32_e32 v2, s4, v2                                // 0000000763F0: 4A040404
	v_add_nc_u32_e32 v12, s2, v7                               // 0000000763F4: 4A180E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000763F8: BF870113
	v_mad_u64_u32 v[7:8], null, v10, v9, 0                     // 0000000763FC: D6FE7C07 0202130A
	v_mad_u64_u32 v[9:10], null, v12, v11, 0                   // 000000076404: D6FE7C09 0202170C
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007640C: BF870004
	v_mad_u64_u32 v[11:12], null, v2, v13, 0                   // 000000076410: D6FE7C0B 02021B02
	s_clause 0x2                                               // 000000076418: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 00000007641C: DC6E0000 007C0903
	global_store_b64 v[5:6], v[11:12], off                     // 000000076424: DC6E0000 007C0B05
	global_store_b64 v[0:1], v[7:8], off                       // 00000007642C: DC6E0000 007C0700
	s_nop 0                                                    // 000000076434: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076438: BFB60003
	s_endpgm                                                   // 00000007643C: BFB00000
mul_long_get_local_id_get_global_size_symend:
	.long 0xbf800000                                           // 000000076440: BF800000
	.long 0xbf800000                                           // 000000076444: BF800000
	.long 0xbf800000                                           // 000000076448: BF800000
	.long 0xbf800000                                           // 00000007644C: BF800000
	.long 0xbf800000                                           // 000000076450: BF800000
	.long 0xbf800000                                           // 000000076454: BF800000
	.long 0xbf800000                                           // 000000076458: BF800000
	.long 0xbf800000                                           // 00000007645C: BF800000
	.long 0xbf800000                                           // 000000076460: BF800000
	.long 0xbf800000                                           // 000000076464: BF800000
	.long 0xbf800000                                           // 000000076468: BF800000
	.long 0xbf800000                                           // 00000007646C: BF800000
	.long 0xbf800000                                           // 000000076470: BF800000
	.long 0xbf800000                                           // 000000076474: BF800000
	.long 0xbf800000                                           // 000000076478: BF800000
	.long 0xbf800000                                           // 00000007647C: BF800000
	.long 0xbf800000                                           // 000000076480: BF800000
	.long 0xbf800000                                           // 000000076484: BF800000
	.long 0xbf800000                                           // 000000076488: BF800000
	.long 0xbf800000                                           // 00000007648C: BF800000
	.long 0xbf800000                                           // 000000076490: BF800000
	.long 0xbf800000                                           // 000000076494: BF800000
	.long 0xbf800000                                           // 000000076498: BF800000
	.long 0xbf800000                                           // 00000007649C: BF800000
	.long 0xbf800000                                           // 0000000764A0: BF800000
	.long 0xbf800000                                           // 0000000764A4: BF800000
	.long 0xbf800000                                           // 0000000764A8: BF800000
	.long 0xbf800000                                           // 0000000764AC: BF800000
	.long 0xbf800000                                           // 0000000764B0: BF800000
	.long 0xbf800000                                           // 0000000764B4: BF800000
	.long 0xbf800000                                           // 0000000764B8: BF800000
	.long 0xbf800000                                           // 0000000764BC: BF800000
	.long 0xbf800000                                           // 0000000764C0: BF800000
	.long 0xbf800000                                           // 0000000764C4: BF800000
	.long 0xbf800000                                           // 0000000764C8: BF800000
	.long 0xbf800000                                           // 0000000764CC: BF800000
	.long 0xbf800000                                           // 0000000764D0: BF800000
	.long 0xbf800000                                           // 0000000764D4: BF800000
	.long 0xbf800000                                           // 0000000764D8: BF800000
	.long 0xbf800000                                           // 0000000764DC: BF800000
	.long 0xbf800000                                           // 0000000764E0: BF800000
	.long 0xbf800000                                           // 0000000764E4: BF800000
	.long 0xbf800000                                           // 0000000764E8: BF800000
	.long 0xbf800000                                           // 0000000764EC: BF800000
	.long 0xbf800000                                           // 0000000764F0: BF800000
	.long 0xbf800000                                           // 0000000764F4: BF800000
	.long 0xbf800000                                           // 0000000764F8: BF800000
	.long 0xbf800000                                           // 0000000764FC: BF800000

	.p2align	8
	.type	mul_long_get_group_id_get_global_size,@function
	.size	mul_long_get_group_id_get_global_size, mul_long_get_group_id_get_global_size_symend-mul_long_get_group_id_get_global_size
mul_long_get_group_id_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000076500: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 00000007650C: 84068102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000076510: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076518: D6100000 02292900
	s_clause 0x1                                               // 000000076520: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000076524: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007652C: DC4A0026 08000002
	s_clause 0x3                                               // 000000076534: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076538: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000076540: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000076548: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000076550: F4040000 F8000008
	s_lshl_b32 s7, s4, 1                                       // 000000076558: 84078104
	s_mov_b32 s33, 0                                           // 00000007655C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000076560: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 000000076564: D6550001 04040C08
	s_lshl_b32 s6, s3, 4                                       // 00000007656C: 84068403
	s_lshl_b32 s8, s13, 4                                      // 000000076570: 8408840D
	s_lshl_b32 s9, s14, 1                                      // 000000076574: 8409810E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000076578: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007657C: D73C0003 00020283
	v_add3_u32 v1, s10, s6, v5                                 // 000000076584: D6550001 04140C0A
	s_lshl_b32 s6, s12, 1                                      // 00000007658C: 8406810C
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000076590: D73C0005 00020283
	v_add3_u32 v1, s5, s7, v0                                  // 000000076598: D6550001 04000E05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000765A0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000765A4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000765AC: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000765B0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000765B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000765C0: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000765C4: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000765C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000765D0: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000765D4: BF8907F7
	v_and_b32_e32 v9, 0xffff, v7                               // 0000000765D8: 36120EFF 0000FFFF
	v_lshrrev_b32_e32 v2, 16, v7                               // 0000000765E0: 32040E90
	s_waitcnt vmcnt(0)                                         // 0000000765E4: BF8903F7
	v_add_nc_u32_e32 v7, s9, v8                                // 0000000765E8: 4A0E1009
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000765EC: BF870193
	v_add_nc_u32_e32 v9, s6, v9                                // 0000000765F0: 4A121206
	v_add_nc_u32_e32 v2, s8, v2                                // 0000000765F4: 4A040408
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000765F8: BF870223
	v_mul_hi_u32 v8, v7, s4                                    // 0000000765FC: D72D0008 00000907
	v_mul_lo_u32 v7, v7, s4                                    // 000000076604: D72C0007 00000907
	v_mul_hi_u32 v10, v9, s2                                   // 00000007660C: D72D000A 00000509
	v_mul_lo_u32 v9, v9, s2                                    // 000000076614: D72C0009 00000509
	v_mul_hi_u32 v12, v2, s3                                   // 00000007661C: D72D000C 00000702
	v_mul_lo_u32 v11, v2, s3                                   // 000000076624: D72C000B 00000702
	s_clause 0x2                                               // 00000007662C: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 000000076630: DC6E0000 007C0903
	global_store_b64 v[5:6], v[11:12], off                     // 000000076638: DC6E0000 007C0B05
	global_store_b64 v[0:1], v[7:8], off                       // 000000076640: DC6E0000 007C0700
	s_nop 0                                                    // 000000076648: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007664C: BFB60003
	s_endpgm                                                   // 000000076650: BFB00000
mul_long_get_group_id_get_global_size_symend:
	.long 0xbf800000                                           // 000000076654: BF800000
	.long 0xbf800000                                           // 000000076658: BF800000
	.long 0xbf800000                                           // 00000007665C: BF800000
	.long 0xbf800000                                           // 000000076660: BF800000
	.long 0xbf800000                                           // 000000076664: BF800000
	.long 0xbf800000                                           // 000000076668: BF800000
	.long 0xbf800000                                           // 00000007666C: BF800000
	.long 0xbf800000                                           // 000000076670: BF800000
	.long 0xbf800000                                           // 000000076674: BF800000
	.long 0xbf800000                                           // 000000076678: BF800000
	.long 0xbf800000                                           // 00000007667C: BF800000
	.long 0xbf800000                                           // 000000076680: BF800000
	.long 0xbf800000                                           // 000000076684: BF800000
	.long 0xbf800000                                           // 000000076688: BF800000
	.long 0xbf800000                                           // 00000007668C: BF800000
	.long 0xbf800000                                           // 000000076690: BF800000
	.long 0xbf800000                                           // 000000076694: BF800000
	.long 0xbf800000                                           // 000000076698: BF800000
	.long 0xbf800000                                           // 00000007669C: BF800000
	.long 0xbf800000                                           // 0000000766A0: BF800000
	.long 0xbf800000                                           // 0000000766A4: BF800000
	.long 0xbf800000                                           // 0000000766A8: BF800000
	.long 0xbf800000                                           // 0000000766AC: BF800000
	.long 0xbf800000                                           // 0000000766B0: BF800000
	.long 0xbf800000                                           // 0000000766B4: BF800000
	.long 0xbf800000                                           // 0000000766B8: BF800000
	.long 0xbf800000                                           // 0000000766BC: BF800000
	.long 0xbf800000                                           // 0000000766C0: BF800000
	.long 0xbf800000                                           // 0000000766C4: BF800000
	.long 0xbf800000                                           // 0000000766C8: BF800000
	.long 0xbf800000                                           // 0000000766CC: BF800000
	.long 0xbf800000                                           // 0000000766D0: BF800000
	.long 0xbf800000                                           // 0000000766D4: BF800000
	.long 0xbf800000                                           // 0000000766D8: BF800000
	.long 0xbf800000                                           // 0000000766DC: BF800000
	.long 0xbf800000                                           // 0000000766E0: BF800000
	.long 0xbf800000                                           // 0000000766E4: BF800000
	.long 0xbf800000                                           // 0000000766E8: BF800000
	.long 0xbf800000                                           // 0000000766EC: BF800000
	.long 0xbf800000                                           // 0000000766F0: BF800000
	.long 0xbf800000                                           // 0000000766F4: BF800000
	.long 0xbf800000                                           // 0000000766F8: BF800000
	.long 0xbf800000                                           // 0000000766FC: BF800000

	.p2align	8
	.type	mul_long_get_local_size_get_global_size,@function
	.size	mul_long_get_local_size_get_global_size, mul_long_get_local_size_get_global_size_symend-mul_long_get_local_size_get_global_size
mul_long_get_local_size_get_global_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000076700: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000076708: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007670C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000076710: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000076714: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000076718: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000007671C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000076720: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007672C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076734: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007673C: BEA10080
	s_clause 0x1                                               // 000000076740: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000076744: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007674C: DC4A0026 08000002
	s_cmp_lt_u32 s2, s8                                        // 000000076754: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000076758: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007675C: BF8704D9
	s_add_u32 s6, s5, s2                                       // 000000076760: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000076764: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000076768: BF0A0903
	global_load_u16 v9, v2, s[6:7]                             // 00000007676C: DC4A0000 09060002
	s_cselect_b32 s2, 14, 20                                   // 000000076774: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000076778: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000007677C: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000076780: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 000000076784: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000076788: BF870009
	s_add_u32 s4, s5, s4                                       // 00000007678C: 80040405
	s_addc_u32 s5, s11, 0                                      // 000000076790: 8205800B
	s_clause 0x1                                               // 000000076794: BF850001
	global_load_u16 v11, v2, s[2:3]                            // 000000076798: DC4A0000 0B020002
	global_load_u16 v13, v2, s[4:5]                            // 0000000767A0: DC4A0000 0D040002
	s_clause 0x2                                               // 0000000767A8: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 0000000767AC: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 0000000767B4: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000767BC: F4040000 F8000008
	s_lshl_b32 s3, s9, 1                                       // 0000000767C4: 84038109
	s_waitcnt lgkmcnt(0)                                       // 0000000767C8: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 0000000767CC: D6550001 04041804
	s_lshl_b32 s4, s10, 2                                      // 0000000767D4: 8404820A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000767D8: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000767DC: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v5                                 // 0000000767E4: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000767EC: D73C0005 00020283
	v_add3_u32 v1, s2, s14, v0                                 // 0000000767F4: D6550001 04001C02
	s_lshl_b32 s2, s8, 1                                       // 0000000767FC: 84028108
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000076800: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000076804: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000007680C: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000076810: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000076818: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000076820: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000076824: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000076828: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000076830: 40020201
	s_waitcnt vmcnt(4)                                         // 000000076834: BF8913F7
	v_and_b32_e32 v10, 0xffff, v7                              // 000000076838: 36140EFF 0000FFFF
	v_lshrrev_b32_e32 v7, 16, v7                               // 000000076840: 320E0E90
	s_waitcnt vmcnt(3)                                         // 000000076844: BF890FF7
	v_add_nc_u32_e32 v14, s4, v8                               // 000000076848: 4A1C1004
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007684C: BF870193
	v_add_nc_u32_e32 v2, s2, v10                               // 000000076850: 4A041402
	v_add_nc_u32_e32 v12, s3, v7                               // 000000076854: 4A180E03
	s_waitcnt vmcnt(2)                                         // 000000076858: BF890BF7
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007685C: BF870002
	v_mul_hi_u32 v8, v2, v9                                    // 000000076860: D72D0008 00021302
	v_mul_lo_u32 v7, v2, v9                                    // 000000076868: D72C0007 00021302
	s_waitcnt vmcnt(1)                                         // 000000076870: BF8907F7
	v_mul_hi_u32 v10, v12, v11                                 // 000000076874: D72D000A 0002170C
	v_mul_lo_u32 v9, v12, v11                                  // 00000007687C: D72C0009 0002170C
	s_waitcnt vmcnt(0)                                         // 000000076884: BF8903F7
	v_mul_hi_u32 v12, v14, v13                                 // 000000076888: D72D000C 00021B0E
	v_mul_lo_u32 v11, v14, v13                                 // 000000076890: D72C000B 00021B0E
	s_clause 0x2                                               // 000000076898: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 00000007689C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 0000000768A4: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 0000000768AC: DC6E0000 007C0B00
	s_nop 0                                                    // 0000000768B4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000768B8: BFB60003
	s_endpgm                                                   // 0000000768BC: BFB00000
mul_long_get_local_size_get_global_size_symend:
	.long 0xbf800000                                           // 0000000768C0: BF800000
	.long 0xbf800000                                           // 0000000768C4: BF800000
	.long 0xbf800000                                           // 0000000768C8: BF800000
	.long 0xbf800000                                           // 0000000768CC: BF800000
	.long 0xbf800000                                           // 0000000768D0: BF800000
	.long 0xbf800000                                           // 0000000768D4: BF800000
	.long 0xbf800000                                           // 0000000768D8: BF800000
	.long 0xbf800000                                           // 0000000768DC: BF800000
	.long 0xbf800000                                           // 0000000768E0: BF800000
	.long 0xbf800000                                           // 0000000768E4: BF800000
	.long 0xbf800000                                           // 0000000768E8: BF800000
	.long 0xbf800000                                           // 0000000768EC: BF800000
	.long 0xbf800000                                           // 0000000768F0: BF800000
	.long 0xbf800000                                           // 0000000768F4: BF800000
	.long 0xbf800000                                           // 0000000768F8: BF800000
	.long 0xbf800000                                           // 0000000768FC: BF800000

	.p2align	8
	.type	mul_long_get_global_id_get_global_size,@function
	.size	mul_long_get_global_id_get_global_size, mul_long_get_global_id_get_global_size_symend-mul_long_get_global_id_get_global_size
mul_long_get_global_id_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000076900: CA240080 020000FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 00000007690C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076914: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007691C: BEA10080
	s_clause 0x1                                               // 000000076920: BF850001
	global_load_b32 v5, v2, s[0:1] offset:34                   // 000000076924: DC520022 05000002
	global_load_u16 v9, v2, s[0:1] offset:38                   // 00000007692C: DC4A0026 09000002
	s_clause 0x3                                               // 000000076934: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000076938: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000076940: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000076948: F4040180 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 000000076950: F4000000 F8000048
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000076958: D6560001 04050202
	s_lshl_b32 s1, s3, 1                                       // 000000076960: 84018103
	s_lshl_b32 s2, s4, 2                                       // 000000076964: 84028204
	s_delay_alu instid0(VALU_DEP_1)                            // 000000076968: BF870001
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007696C: D73C0003 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000076974: BF89FC07
	s_lshl_b32 s4, s9, 1                                       // 000000076978: 84048109
	v_add_nc_u32_e32 v13, s12, v1                              // 00000007697C: 4A1A020C
	v_add3_u32 v1, s14, s1, v6                                 // 000000076980: D6550001 0418020E
	s_lshl_b32 s3, s8, 1                                       // 000000076988: 84038108
	s_lshl_b32 s1, s10, 2                                      // 00000007698C: 8401820A
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000076990: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000076998: 40080807
	s_waitcnt vmcnt(1)                                         // 00000007699C: BF8907F7
	v_lshrrev_b32_e32 v6, 16, v5                               // 0000000769A0: 320C0A90
	v_and_b32_e32 v7, 0xffff, v5                               // 0000000769A4: 360E0AFF 0000FFFF
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000769AC: BF8701A2
	v_add_nc_u32_e32 v10, s4, v6                               // 0000000769B0: 4A140C04
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000769B4: D73C0005 00020283
	v_add_nc_u32_e32 v14, s3, v7                               // 0000000769BC: 4A1C0E03
	s_delay_alu instid0(VALU_DEP_3)                            // 0000000769C0: BF870003
	v_mad_u64_u32 v[7:8], null, v10, v1, 0                     // 0000000769C4: D6FE7C07 0202030A
	v_add3_u32 v1, s0, s2, v0                                  // 0000000769CC: D6550001 04000400
	s_waitcnt vmcnt(0)                                         // 0000000769D4: BF8903F7
	v_add_nc_u32_e32 v0, s1, v9                                // 0000000769D8: 4A001201
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 0000000769DC: D7006A05 00020A06
	v_mad_u64_u32 v[11:12], null, v13, v14, 0                  // 0000000769E4: D6FE7C0B 02021D0D
	v_lshlrev_b64 v[9:10], 3, v[1:2]                           // 0000000769EC: D73C0009 00020283
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 0000000769F4: 400C0C07
	v_mad_u64_u32 v[13:14], null, v0, v1, 0                    // 0000000769F8: D6FE7C0D 02020300
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000076A00: BF870213
	v_add_co_u32 v0, vcc_lo, s6, v9                            // 000000076A04: D7006A00 00021206
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v10, vcc_lo            // 000000076A0C: 40021407
	s_clause 0x2                                               // 000000076A10: BF850002
	global_store_b64 v[3:4], v[11:12], off                     // 000000076A14: DC6E0000 007C0B03
	global_store_b64 v[5:6], v[7:8], off                       // 000000076A1C: DC6E0000 007C0705
	global_store_b64 v[0:1], v[13:14], off                     // 000000076A24: DC6E0000 007C0D00
	s_nop 0                                                    // 000000076A2C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076A30: BFB60003
	s_endpgm                                                   // 000000076A34: BFB00000
mul_long_get_global_id_get_global_size_symend:
	.long 0xbf800000                                           // 000000076A38: BF800000
	.long 0xbf800000                                           // 000000076A3C: BF800000
	.long 0xbf800000                                           // 000000076A40: BF800000
	.long 0xbf800000                                           // 000000076A44: BF800000
	.long 0xbf800000                                           // 000000076A48: BF800000
	.long 0xbf800000                                           // 000000076A4C: BF800000
	.long 0xbf800000                                           // 000000076A50: BF800000
	.long 0xbf800000                                           // 000000076A54: BF800000
	.long 0xbf800000                                           // 000000076A58: BF800000
	.long 0xbf800000                                           // 000000076A5C: BF800000
	.long 0xbf800000                                           // 000000076A60: BF800000
	.long 0xbf800000                                           // 000000076A64: BF800000
	.long 0xbf800000                                           // 000000076A68: BF800000
	.long 0xbf800000                                           // 000000076A6C: BF800000
	.long 0xbf800000                                           // 000000076A70: BF800000
	.long 0xbf800000                                           // 000000076A74: BF800000
	.long 0xbf800000                                           // 000000076A78: BF800000
	.long 0xbf800000                                           // 000000076A7C: BF800000
	.long 0xbf800000                                           // 000000076A80: BF800000
	.long 0xbf800000                                           // 000000076A84: BF800000
	.long 0xbf800000                                           // 000000076A88: BF800000
	.long 0xbf800000                                           // 000000076A8C: BF800000
	.long 0xbf800000                                           // 000000076A90: BF800000
	.long 0xbf800000                                           // 000000076A94: BF800000
	.long 0xbf800000                                           // 000000076A98: BF800000
	.long 0xbf800000                                           // 000000076A9C: BF800000
	.long 0xbf800000                                           // 000000076AA0: BF800000
	.long 0xbf800000                                           // 000000076AA4: BF800000
	.long 0xbf800000                                           // 000000076AA8: BF800000
	.long 0xbf800000                                           // 000000076AAC: BF800000
	.long 0xbf800000                                           // 000000076AB0: BF800000
	.long 0xbf800000                                           // 000000076AB4: BF800000
	.long 0xbf800000                                           // 000000076AB8: BF800000
	.long 0xbf800000                                           // 000000076ABC: BF800000
	.long 0xbf800000                                           // 000000076AC0: BF800000
	.long 0xbf800000                                           // 000000076AC4: BF800000
	.long 0xbf800000                                           // 000000076AC8: BF800000
	.long 0xbf800000                                           // 000000076ACC: BF800000
	.long 0xbf800000                                           // 000000076AD0: BF800000
	.long 0xbf800000                                           // 000000076AD4: BF800000
	.long 0xbf800000                                           // 000000076AD8: BF800000
	.long 0xbf800000                                           // 000000076ADC: BF800000
	.long 0xbf800000                                           // 000000076AE0: BF800000
	.long 0xbf800000                                           // 000000076AE4: BF800000
	.long 0xbf800000                                           // 000000076AE8: BF800000
	.long 0xbf800000                                           // 000000076AEC: BF800000
	.long 0xbf800000                                           // 000000076AF0: BF800000
	.long 0xbf800000                                           // 000000076AF4: BF800000
	.long 0xbf800000                                           // 000000076AF8: BF800000
	.long 0xbf800000                                           // 000000076AFC: BF800000

	.p2align	8
	.type	mul_long_get_global_size_get_global_size,@function
	.size	mul_long_get_global_size_get_global_size, mul_long_get_global_size_get_global_size_symend-mul_long_get_global_size_get_global_size
mul_long_get_global_size_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000076B00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000076B0C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000076B10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076B18: D6100000 02292900
	s_clause 0x1                                               // 000000076B20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000076B24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000076B2C: DC4A0026 08000002
	s_clause 0x3                                               // 000000076B34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076B38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000076B40: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000076B48: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000076B50: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 000000076B58: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000076B5C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000076B60: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 000000076B68: 84028103
	s_lshl_b32 s3, s4, 1                                       // 000000076B6C: 84038104
	s_lshl_b32 s4, s13, 1                                      // 000000076B70: 8404810D
	s_lshl_b32 s6, s14, 1                                      // 000000076B74: 8406810E
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000076B78: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v5                                 // 000000076B80: D6550001 0414040A
	s_lshl_b32 s2, s12, 4                                      // 000000076B88: 8402840C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000076B8C: BF870221
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000076B90: D73C0005 00020283
	v_add3_u32 v1, s5, s3, v0                                  // 000000076B98: D6550001 04000605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000076BA0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000076BA8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000076BAC: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000076BB0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000076BB8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000076BC0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000076BC4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000076BCC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000076BD0: 40020201
	s_waitcnt vmcnt(1)                                         // 000000076BD4: BF8907F7
	v_and_b32_e32 v9, 0xffff, v7                               // 000000076BD8: 36120EFF 0000FFFF
	v_lshrrev_b32_e32 v2, 16, v7                               // 000000076BE0: 32040E90
	s_waitcnt vmcnt(0)                                         // 000000076BE4: BF8903F7
	v_add_nc_u32_e32 v7, s6, v8                                // 000000076BE8: 4A0E1006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000076BEC: BF870193
	v_add_nc_u32_e32 v9, s2, v9                                // 000000076BF0: 4A121202
	v_add_nc_u32_e32 v2, s4, v2                                // 000000076BF4: 4A040404
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000076BF8: BF870223
	v_mul_hi_u32 v8, v7, v7                                    // 000000076BFC: D72D0008 00020F07
	v_mul_lo_u32 v7, v7, v7                                    // 000000076C04: D72C0007 00020F07
	v_mul_hi_u32 v10, v9, v9                                   // 000000076C0C: D72D000A 00021309
	v_mul_lo_u32 v9, v9, v9                                    // 000000076C14: D72C0009 00021309
	v_mul_hi_u32 v12, v2, v2                                   // 000000076C1C: D72D000C 00020502
	v_mul_lo_u32 v11, v2, v2                                   // 000000076C24: D72C000B 00020502
	s_clause 0x2                                               // 000000076C2C: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 000000076C30: DC6E0000 007C0903
	global_store_b64 v[5:6], v[11:12], off                     // 000000076C38: DC6E0000 007C0B05
	global_store_b64 v[0:1], v[7:8], off                       // 000000076C40: DC6E0000 007C0700
	s_nop 0                                                    // 000000076C48: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076C4C: BFB60003
	s_endpgm                                                   // 000000076C50: BFB00000
mul_long_get_global_size_get_global_size_symend:
	.long 0xbf800000                                           // 000000076C54: BF800000
	.long 0xbf800000                                           // 000000076C58: BF800000
	.long 0xbf800000                                           // 000000076C5C: BF800000
	.long 0xbf800000                                           // 000000076C60: BF800000
	.long 0xbf800000                                           // 000000076C64: BF800000
	.long 0xbf800000                                           // 000000076C68: BF800000
	.long 0xbf800000                                           // 000000076C6C: BF800000
	.long 0xbf800000                                           // 000000076C70: BF800000
	.long 0xbf800000                                           // 000000076C74: BF800000
	.long 0xbf800000                                           // 000000076C78: BF800000
	.long 0xbf800000                                           // 000000076C7C: BF800000
	.long 0xbf800000                                           // 000000076C80: BF800000
	.long 0xbf800000                                           // 000000076C84: BF800000
	.long 0xbf800000                                           // 000000076C88: BF800000
	.long 0xbf800000                                           // 000000076C8C: BF800000
	.long 0xbf800000                                           // 000000076C90: BF800000
	.long 0xbf800000                                           // 000000076C94: BF800000
	.long 0xbf800000                                           // 000000076C98: BF800000
	.long 0xbf800000                                           // 000000076C9C: BF800000
	.long 0xbf800000                                           // 000000076CA0: BF800000
	.long 0xbf800000                                           // 000000076CA4: BF800000
	.long 0xbf800000                                           // 000000076CA8: BF800000
	.long 0xbf800000                                           // 000000076CAC: BF800000
	.long 0xbf800000                                           // 000000076CB0: BF800000
	.long 0xbf800000                                           // 000000076CB4: BF800000
	.long 0xbf800000                                           // 000000076CB8: BF800000
	.long 0xbf800000                                           // 000000076CBC: BF800000
	.long 0xbf800000                                           // 000000076CC0: BF800000
	.long 0xbf800000                                           // 000000076CC4: BF800000
	.long 0xbf800000                                           // 000000076CC8: BF800000
	.long 0xbf800000                                           // 000000076CCC: BF800000
	.long 0xbf800000                                           // 000000076CD0: BF800000
	.long 0xbf800000                                           // 000000076CD4: BF800000
	.long 0xbf800000                                           // 000000076CD8: BF800000
	.long 0xbf800000                                           // 000000076CDC: BF800000
	.long 0xbf800000                                           // 000000076CE0: BF800000
	.long 0xbf800000                                           // 000000076CE4: BF800000
	.long 0xbf800000                                           // 000000076CE8: BF800000
	.long 0xbf800000                                           // 000000076CEC: BF800000
	.long 0xbf800000                                           // 000000076CF0: BF800000
	.long 0xbf800000                                           // 000000076CF4: BF800000
	.long 0xbf800000                                           // 000000076CF8: BF800000
	.long 0xbf800000                                           // 000000076CFC: BF800000

	.p2align	8
	.type	mul_long_get_num_groups_get_global_size,@function
	.size	mul_long_get_num_groups_get_global_size, mul_long_get_num_groups_get_global_size_symend-mul_long_get_num_groups_get_global_size
mul_long_get_num_groups_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000076D00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000076D0C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000076D14: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000076D18: D6100005 02291500
	s_clause 0x1                                               // 000000076D20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000076D24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000076D2C: DC4A0026 08000002
	s_clause 0x2                                               // 000000076D34: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076D38: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000076D40: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000076D48: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000076D50: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076D54: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000076D5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000076D60: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000076D64: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000076D6C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000076D70: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000076D78: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000076D80: 84008204
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000076D84: D73C0005 00020283
	v_add3_u32 v1, s5, s0, v0                                  // 000000076D8C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000076D94: BF870094
	v_add_co_u32 v3, s1, s6, v3                                // 000000076D98: D7000103 00020606
	v_add_co_ci_u32_e64 v4, s1, s7, v4, s1                     // 000000076DA0: D5200104 00060807
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000076DA8: BF8701D3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000076DAC: D73C0000 00020283
	s_waitcnt vmcnt(1)                                         // 000000076DB4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 000000076DB8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000076DBC: 7C7A0E80
	v_and_b32_e32 v2, 0xffff, v7                               // 000000076DC0: 36040EFF 0000FFFF
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 000000076DC8: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000076DD0: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000076DD4: BF8903F7
	v_cmp_ne_u32_e32 vcc_lo, 0, v8                             // 000000076DD8: 7C9A1080
	s_addc_u32 s1, s12, 0                                      // 000000076DDC: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 000000076DE0: BF078000
	s_addc_u32 s0, s13, 0                                      // 000000076DE4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000076DE8: BF07806A
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 000000076DEC: D7006A05 00020A06
	s_addc_u32 s2, s14, 0                                      // 000000076DF4: 8202800E
	s_lshl_b32 s3, s12, 1                                      // 000000076DF8: 8403810C
	s_lshl_b32 s4, s13, 1                                      // 000000076DFC: 8404810D
	s_lshl_b32 s5, s14, 2                                      // 000000076E00: 8405820E
	v_add_nc_u32_e32 v2, s3, v2                                // 000000076E04: 4A040403
	v_add_nc_u32_e32 v9, s4, v9                                // 000000076E08: 4A121204
	v_add_nc_u32_e32 v11, s5, v8                               // 000000076E0C: 4A161005
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 000000076E10: 400C0C07
	s_delay_alu instid0(VALU_DEP_4)                            // 000000076E14: BF870004
	v_mul_hi_u32 v8, s1, v2                                    // 000000076E18: D72D0008 00020401
	v_mul_lo_u32 v7, s1, v2                                    // 000000076E20: D72C0007 00020401
	v_mul_hi_u32 v10, s0, v9                                   // 000000076E28: D72D000A 00021200
	v_mul_lo_u32 v9, s0, v9                                    // 000000076E30: D72C0009 00021200
	v_mul_hi_u32 v12, s2, v11                                  // 000000076E38: D72D000C 00021602
	v_mul_lo_u32 v11, s2, v11                                  // 000000076E40: D72C000B 00021602
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000076E48: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000076E50: 40020207
	s_clause 0x2                                               // 000000076E54: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000076E58: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000076E60: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000076E68: DC6E0000 007C0B00
	s_nop 0                                                    // 000000076E70: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076E74: BFB60003
	s_endpgm                                                   // 000000076E78: BFB00000
mul_long_get_num_groups_get_global_size_symend:
	.long 0xbf800000                                           // 000000076E7C: BF800000
	.long 0xbf800000                                           // 000000076E80: BF800000
	.long 0xbf800000                                           // 000000076E84: BF800000
	.long 0xbf800000                                           // 000000076E88: BF800000
	.long 0xbf800000                                           // 000000076E8C: BF800000
	.long 0xbf800000                                           // 000000076E90: BF800000
	.long 0xbf800000                                           // 000000076E94: BF800000
	.long 0xbf800000                                           // 000000076E98: BF800000
	.long 0xbf800000                                           // 000000076E9C: BF800000
	.long 0xbf800000                                           // 000000076EA0: BF800000
	.long 0xbf800000                                           // 000000076EA4: BF800000
	.long 0xbf800000                                           // 000000076EA8: BF800000
	.long 0xbf800000                                           // 000000076EAC: BF800000
	.long 0xbf800000                                           // 000000076EB0: BF800000
	.long 0xbf800000                                           // 000000076EB4: BF800000
	.long 0xbf800000                                           // 000000076EB8: BF800000
	.long 0xbf800000                                           // 000000076EBC: BF800000
	.long 0xbf800000                                           // 000000076EC0: BF800000
	.long 0xbf800000                                           // 000000076EC4: BF800000
	.long 0xbf800000                                           // 000000076EC8: BF800000
	.long 0xbf800000                                           // 000000076ECC: BF800000
	.long 0xbf800000                                           // 000000076ED0: BF800000
	.long 0xbf800000                                           // 000000076ED4: BF800000
	.long 0xbf800000                                           // 000000076ED8: BF800000
	.long 0xbf800000                                           // 000000076EDC: BF800000
	.long 0xbf800000                                           // 000000076EE0: BF800000
	.long 0xbf800000                                           // 000000076EE4: BF800000
	.long 0xbf800000                                           // 000000076EE8: BF800000
	.long 0xbf800000                                           // 000000076EEC: BF800000
	.long 0xbf800000                                           // 000000076EF0: BF800000
	.long 0xbf800000                                           // 000000076EF4: BF800000
	.long 0xbf800000                                           // 000000076EF8: BF800000
	.long 0xbf800000                                           // 000000076EFC: BF800000

	.p2align	8
	.type	mul_long_get_work_dim_get_global_size,@function
	.size	mul_long_get_work_dim_get_global_size, mul_long_get_work_dim_get_global_size_symend-mul_long_get_work_dim_get_global_size
mul_long_get_work_dim_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000076F00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000076F0C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000076F10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076F18: D6100000 02292900
	s_clause 0x1                                               // 000000076F20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000076F24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000076F2C: DC4A0026 08000002
	s_clause 0x4                                               // 000000076F34: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 000000076F38: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076F40: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000076F48: F4080300 F8000010
	s_load_b32 s6, s[0:1], 0x48                                // 000000076F50: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000076F58: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000076F60: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000076F64: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000076F68: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 000000076F70: 84028103
	s_lshl_b32 s3, s4, 2                                       // 000000076F74: 84038204
	s_lshl_b32 s4, s12, 1                                      // 000000076F78: 8404810C
	s_lshl_b32 s7, s14, 2                                      // 000000076F7C: 8407820E
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000076F80: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v5                                 // 000000076F88: D6550001 0414040A
	s_and_b32 s2, s5, 0xffff                                   // 000000076F90: 8B02FF05 0000FFFF
	s_lshl_b32 s5, s13, 1                                      // 000000076F98: 8405810D
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000076F9C: BF8701C1
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000076FA0: D73C0005 00020283
	v_add3_u32 v1, s6, s3, v0                                  // 000000076FA8: D6550001 04000606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000076FB0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000076FB8: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000076FBC: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000076FC4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000076FCC: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000076FD0: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000076FD4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000076FDC: 40020201
	s_waitcnt vmcnt(1)                                         // 000000076FE0: BF8907F7
	v_and_b32_e32 v9, 0xffff, v7                               // 000000076FE4: 36120EFF 0000FFFF
	v_lshrrev_b32_e32 v2, 16, v7                               // 000000076FEC: 32040E90
	s_waitcnt vmcnt(0)                                         // 000000076FF0: BF8903F7
	v_add_nc_u32_e32 v7, s7, v8                                // 000000076FF4: 4A0E1007
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000076FF8: BF870193
	v_add_nc_u32_e32 v9, s4, v9                                // 000000076FFC: 4A121204
	v_add_nc_u32_e32 v2, s5, v2                                // 000000077000: 4A040405
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000077004: BF870223
	v_mul_hi_u32 v8, v7, s2                                    // 000000077008: D72D0008 00000507
	v_mul_lo_u32 v7, v7, s2                                    // 000000077010: D72C0007 00000507
	v_mul_hi_u32 v10, v9, s2                                   // 000000077018: D72D000A 00000509
	v_mul_lo_u32 v9, v9, s2                                    // 000000077020: D72C0009 00000509
	v_mul_hi_u32 v12, v2, s2                                   // 000000077028: D72D000C 00000502
	v_mul_lo_u32 v11, v2, s2                                   // 000000077030: D72C000B 00000502
	s_clause 0x2                                               // 000000077038: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 00000007703C: DC6E0000 007C0903
	global_store_b64 v[5:6], v[11:12], off                     // 000000077044: DC6E0000 007C0B05
	global_store_b64 v[0:1], v[7:8], off                       // 00000007704C: DC6E0000 007C0700
	s_nop 0                                                    // 000000077054: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077058: BFB60003
	s_endpgm                                                   // 00000007705C: BFB00000
mul_long_get_work_dim_get_global_size_symend:
	.long 0xbf800000                                           // 000000077060: BF800000
	.long 0xbf800000                                           // 000000077064: BF800000
	.long 0xbf800000                                           // 000000077068: BF800000
	.long 0xbf800000                                           // 00000007706C: BF800000
	.long 0xbf800000                                           // 000000077070: BF800000
	.long 0xbf800000                                           // 000000077074: BF800000
	.long 0xbf800000                                           // 000000077078: BF800000
	.long 0xbf800000                                           // 00000007707C: BF800000
	.long 0xbf800000                                           // 000000077080: BF800000
	.long 0xbf800000                                           // 000000077084: BF800000
	.long 0xbf800000                                           // 000000077088: BF800000
	.long 0xbf800000                                           // 00000007708C: BF800000
	.long 0xbf800000                                           // 000000077090: BF800000
	.long 0xbf800000                                           // 000000077094: BF800000
	.long 0xbf800000                                           // 000000077098: BF800000
	.long 0xbf800000                                           // 00000007709C: BF800000
	.long 0xbf800000                                           // 0000000770A0: BF800000
	.long 0xbf800000                                           // 0000000770A4: BF800000
	.long 0xbf800000                                           // 0000000770A8: BF800000
	.long 0xbf800000                                           // 0000000770AC: BF800000
	.long 0xbf800000                                           // 0000000770B0: BF800000
	.long 0xbf800000                                           // 0000000770B4: BF800000
	.long 0xbf800000                                           // 0000000770B8: BF800000
	.long 0xbf800000                                           // 0000000770BC: BF800000
	.long 0xbf800000                                           // 0000000770C0: BF800000
	.long 0xbf800000                                           // 0000000770C4: BF800000
	.long 0xbf800000                                           // 0000000770C8: BF800000
	.long 0xbf800000                                           // 0000000770CC: BF800000
	.long 0xbf800000                                           // 0000000770D0: BF800000
	.long 0xbf800000                                           // 0000000770D4: BF800000
	.long 0xbf800000                                           // 0000000770D8: BF800000
	.long 0xbf800000                                           // 0000000770DC: BF800000
	.long 0xbf800000                                           // 0000000770E0: BF800000
	.long 0xbf800000                                           // 0000000770E4: BF800000
	.long 0xbf800000                                           // 0000000770E8: BF800000
	.long 0xbf800000                                           // 0000000770EC: BF800000
	.long 0xbf800000                                           // 0000000770F0: BF800000
	.long 0xbf800000                                           // 0000000770F4: BF800000
	.long 0xbf800000                                           // 0000000770F8: BF800000
	.long 0xbf800000                                           // 0000000770FC: BF800000

	.p2align	8
	.type	mul_long_x_get_num_groups,@function
	.size	mul_long_x_get_num_groups, mul_long_x_get_num_groups_symend-mul_long_x_get_num_groups
mul_long_x_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077100: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000007710C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077110: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077118: D6100000 02292900
	s_clause 0x1                                               // 000000077120: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077124: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007712C: DC4A0026 08000002
	s_clause 0x1                                               // 000000077134: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077138: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 000000077140: F4000140 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000077148: BF89FC07
	s_clause 0x2                                               // 00000007714C: BF850002
	s_load_b32 s9, s[0:1], 0x48                                // 000000077150: F4000240 F8000048
	s_load_b64 s[6:7], s[0:1], null                            // 000000077158: F4040180 F8000000
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000077160: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000077168: 84008103
	s_mov_b32 s33, 0                                           // 00000007716C: BEA10080
	v_add3_u32 v1, s8, s2, v1                                  // 000000077170: D6550001 04040408
	s_ashr_i32 s1, s5, 31                                      // 000000077178: 86019F05
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007717C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077180: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000077188: D6550001 0414000A
	s_lshl_b32 s0, s4, 1                                       // 000000077190: 84008104
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077194: D73C0005 00020283
	s_waitcnt lgkmcnt(0)                                       // 00000007719C: BF89FC07
	v_add3_u32 v1, s9, s0, v0                                  // 0000000771A0: D6550001 04000009
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 0000000771A8: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 0000000771B0: 40080807
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000771B4: BF8700A3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000771B8: D73C0000 00020283
	v_add_co_u32 v5, s0, s6, v5                                // 0000000771C0: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000771C8: D5200006 00020C07
	s_waitcnt vmcnt(1)                                         // 0000000771D0: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000771D4: 7C7A0E80
	v_lshrrev_b32_e32 v2, 16, v7                               // 0000000771D8: 32040E90
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000771DC: BF07806A
	s_delay_alu instid0(VALU_DEP_1)                            // 0000000771E0: BF870001
	v_cmp_ne_u16_e64 s0, 0, v2.l                               // 0000000771E4: D43D0000 00020480
	s_addc_u32 s2, s12, 0                                      // 0000000771EC: 8202800C
	s_waitcnt vmcnt(0)                                         // 0000000771F0: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 0000000771F4: 7C7A1080
	s_mul_i32 s3, s2, s1                                       // 0000000771F8: 96030102
	s_mul_hi_u32 s4, s2, s5                                    // 0000000771FC: 96840502
	s_mul_i32 s2, s2, s5                                       // 000000077200: 96020502
	s_add_i32 s4, s4, s3                                       // 000000077204: 81040304
	s_cmp_lg_u32 s0, 0                                         // 000000077208: BF078000
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s4             // 00000007720C: CA100002 07080004
	s_addc_u32 s0, s13, 0                                      // 000000077214: 8200800D
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000077218: BF870009
	s_mul_i32 s2, s0, s1                                       // 00000007721C: 96020100
	s_mul_hi_u32 s3, s0, s5                                    // 000000077220: 96830500
	s_mul_i32 s0, s0, s5                                       // 000000077224: 96000500
	s_add_i32 s3, s3, s2                                       // 000000077228: 81030203
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007722C: BF07806A
	v_dual_mov_b32 v9, s0 :: v_dual_mov_b32 v10, s3            // 000000077230: CA100000 090A0003
	s_addc_u32 s0, s14, 0                                      // 000000077238: 8200800E
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000007723C: D7006A00 00020006
	s_mul_i32 s1, s0, s1                                       // 000000077244: 96010100
	s_mul_hi_u32 s2, s0, s5                                    // 000000077248: 96820500
	s_mul_i32 s0, s0, s5                                       // 00000007724C: 96000500
	s_add_i32 s2, s2, s1                                       // 000000077250: 81020102
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000077254: BF870009
	v_dual_mov_b32 v11, s0 :: v_dual_mov_b32 v12, s2           // 000000077258: CA100000 0B0C0002
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000077260: 40020207
	s_clause 0x2                                               // 000000077264: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000077268: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000077270: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000077278: DC6E0000 007C0B00
	s_nop 0                                                    // 000000077280: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077284: BFB60003
	s_endpgm                                                   // 000000077288: BFB00000
mul_long_x_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007728C: BF800000
	.long 0xbf800000                                           // 000000077290: BF800000
	.long 0xbf800000                                           // 000000077294: BF800000
	.long 0xbf800000                                           // 000000077298: BF800000
	.long 0xbf800000                                           // 00000007729C: BF800000
	.long 0xbf800000                                           // 0000000772A0: BF800000
	.long 0xbf800000                                           // 0000000772A4: BF800000
	.long 0xbf800000                                           // 0000000772A8: BF800000
	.long 0xbf800000                                           // 0000000772AC: BF800000
	.long 0xbf800000                                           // 0000000772B0: BF800000
	.long 0xbf800000                                           // 0000000772B4: BF800000
	.long 0xbf800000                                           // 0000000772B8: BF800000
	.long 0xbf800000                                           // 0000000772BC: BF800000
	.long 0xbf800000                                           // 0000000772C0: BF800000
	.long 0xbf800000                                           // 0000000772C4: BF800000
	.long 0xbf800000                                           // 0000000772C8: BF800000
	.long 0xbf800000                                           // 0000000772CC: BF800000
	.long 0xbf800000                                           // 0000000772D0: BF800000
	.long 0xbf800000                                           // 0000000772D4: BF800000
	.long 0xbf800000                                           // 0000000772D8: BF800000
	.long 0xbf800000                                           // 0000000772DC: BF800000
	.long 0xbf800000                                           // 0000000772E0: BF800000
	.long 0xbf800000                                           // 0000000772E4: BF800000
	.long 0xbf800000                                           // 0000000772E8: BF800000
	.long 0xbf800000                                           // 0000000772EC: BF800000
	.long 0xbf800000                                           // 0000000772F0: BF800000
	.long 0xbf800000                                           // 0000000772F4: BF800000
	.long 0xbf800000                                           // 0000000772F8: BF800000
	.long 0xbf800000                                           // 0000000772FC: BF800000

	.p2align	8
	.type	mul_long_get_global_offset_get_num_groups,@function
	.size	mul_long_get_global_offset_get_num_groups, mul_long_get_global_offset_get_num_groups_symend-mul_long_get_global_offset_get_num_groups
mul_long_get_global_offset_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077300: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000007730C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077310: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077318: D6100000 02292900
	s_clause 0x1                                               // 000000077320: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077324: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007732C: DC4A0026 08000002
	s_clause 0x3                                               // 000000077334: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077338: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000077340: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000077348: F4040180 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000077350: F4080300 F8000010
	s_lshl_b32 s0, s3, 4                                       // 000000077358: 84008403
	s_mov_b32 s33, 0                                           // 00000007735C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000077360: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000077364: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007736C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077370: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000077378: D6550001 0414000A
	s_lshl_b32 s0, s4, 1                                       // 000000077380: 84008104
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077384: D73C0005 00020283
	v_add3_u32 v1, s5, s0, v0                                  // 00000007738C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000077394: BF8701A4
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000077398: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 0000000773A0: 40080807
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000773A4: D73C0000 00020283
	v_add_co_u32 v5, s0, s6, v5                                // 0000000773AC: D7000005 00020A06
	s_delay_alu instid0(VALU_DEP_1)                            // 0000000773B4: BF870001
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000773B8: D5200006 00020C07
	s_waitcnt vmcnt(1)                                         // 0000000773C0: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 0000000773C4: 32040E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000773C8: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 0000000773CC: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 0000000773D0: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000773D8: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 0000000773DC: 7C7A0480
	s_addc_u32 s1, s12, 0                                      // 0000000773E0: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000773E4: BF870009
	s_mul_hi_u32 s2, s8, s1                                    // 0000000773E8: 96820108
	s_mul_i32 s1, s8, s1                                       // 0000000773EC: 96010108
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000773F0: BF07806A
	v_dual_mov_b32 v7, s1 :: v_dual_mov_b32 v8, s2             // 0000000773F4: CA100001 07080002
	s_addc_u32 s1, s13, 0                                      // 0000000773FC: 8201800D
	s_cmp_lg_u32 s0, 0                                         // 000000077400: BF078000
	s_mul_hi_u32 s0, s10, s1                                   // 000000077404: 9680010A
	s_mul_i32 s1, s10, s1                                      // 000000077408: 9601010A
	s_addc_u32 s2, s14, 0                                      // 00000007740C: 8202800E
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v10, s0            // 000000077410: CA100001 090A0000
	s_mul_i32 s0, s5, s2                                       // 000000077418: 96000205
	s_mul_hi_u32 s1, s5, s2                                    // 00000007741C: 96810205
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000077420: D7006A00 00020006
	v_dual_mov_b32 v11, s0 :: v_dual_mov_b32 v12, s1           // 000000077428: CA100000 0B0C0001
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000077430: 40020207
	s_clause 0x2                                               // 000000077434: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000077438: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000077440: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000077448: DC6E0000 007C0B00
	s_nop 0                                                    // 000000077450: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077454: BFB60003
	s_endpgm                                                   // 000000077458: BFB00000
mul_long_get_global_offset_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007745C: BF800000
	.long 0xbf800000                                           // 000000077460: BF800000
	.long 0xbf800000                                           // 000000077464: BF800000
	.long 0xbf800000                                           // 000000077468: BF800000
	.long 0xbf800000                                           // 00000007746C: BF800000
	.long 0xbf800000                                           // 000000077470: BF800000
	.long 0xbf800000                                           // 000000077474: BF800000
	.long 0xbf800000                                           // 000000077478: BF800000
	.long 0xbf800000                                           // 00000007747C: BF800000
	.long 0xbf800000                                           // 000000077480: BF800000
	.long 0xbf800000                                           // 000000077484: BF800000
	.long 0xbf800000                                           // 000000077488: BF800000
	.long 0xbf800000                                           // 00000007748C: BF800000
	.long 0xbf800000                                           // 000000077490: BF800000
	.long 0xbf800000                                           // 000000077494: BF800000
	.long 0xbf800000                                           // 000000077498: BF800000
	.long 0xbf800000                                           // 00000007749C: BF800000
	.long 0xbf800000                                           // 0000000774A0: BF800000
	.long 0xbf800000                                           // 0000000774A4: BF800000
	.long 0xbf800000                                           // 0000000774A8: BF800000
	.long 0xbf800000                                           // 0000000774AC: BF800000
	.long 0xbf800000                                           // 0000000774B0: BF800000
	.long 0xbf800000                                           // 0000000774B4: BF800000
	.long 0xbf800000                                           // 0000000774B8: BF800000
	.long 0xbf800000                                           // 0000000774BC: BF800000
	.long 0xbf800000                                           // 0000000774C0: BF800000
	.long 0xbf800000                                           // 0000000774C4: BF800000
	.long 0xbf800000                                           // 0000000774C8: BF800000
	.long 0xbf800000                                           // 0000000774CC: BF800000
	.long 0xbf800000                                           // 0000000774D0: BF800000
	.long 0xbf800000                                           // 0000000774D4: BF800000
	.long 0xbf800000                                           // 0000000774D8: BF800000
	.long 0xbf800000                                           // 0000000774DC: BF800000
	.long 0xbf800000                                           // 0000000774E0: BF800000
	.long 0xbf800000                                           // 0000000774E4: BF800000
	.long 0xbf800000                                           // 0000000774E8: BF800000
	.long 0xbf800000                                           // 0000000774EC: BF800000
	.long 0xbf800000                                           // 0000000774F0: BF800000
	.long 0xbf800000                                           // 0000000774F4: BF800000
	.long 0xbf800000                                           // 0000000774F8: BF800000
	.long 0xbf800000                                           // 0000000774FC: BF800000

	.p2align	8
	.type	mul_long_get_local_id_get_num_groups,@function
	.size	mul_long_get_local_id_get_num_groups, mul_long_get_local_id_get_num_groups_symend-mul_long_get_local_id_get_num_groups
mul_long_get_local_id_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 000000077500: CA240080 020800FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007750C: F4040180 F8000008
	s_lshl_b32 s2, s2, 3                                       // 000000077514: 84028302
	v_bfe_u32 v11, v0, 10, 10                                  // 000000077518: D610000B 02291500
	s_clause 0x1                                               // 000000077520: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077524: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007752C: DC4A0026 08000002
	s_clause 0x2                                               // 000000077534: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077538: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000077540: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000077548: F4080300 F8000010
	s_lshl_b32 s0, s3, 2                                       // 000000077550: 84008203
	v_bfe_u32 v13, v0, 20, 10                                  // 000000077554: D610000D 02292900
	s_mov_b32 s33, 0                                           // 00000007755C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000077560: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 000000077564: D6550001 04240408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007756C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077570: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v11                                // 000000077578: D6550001 042C000A
	s_lshl_b32 s0, s4, 1                                       // 000000077580: 84008104
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077584: D73C0005 00020283
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000007758C: BF870213
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000077590: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000077598: 40080807
	v_add3_u32 v1, s5, s0, v13                                 // 00000007759C: D6550001 04340005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000775A4: BF870094
	v_add_co_u32 v5, s1, s6, v5                                // 0000000775A8: D7000105 00020A06
	v_add_co_ci_u32_e64 v6, s1, s7, v6, s1                     // 0000000775B0: D5200106 00060C07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 0000000775B8: BF870143
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000775BC: D73C0000 00020283
	s_waitcnt vmcnt(1)                                         // 0000000775C4: BF8907F7
	v_lshrrev_b32_e32 v10, 16, v7                              // 0000000775C8: 32140E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000775CC: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v10.l                              // 0000000775D0: D43D0000 00021480
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000775D8: BF07806A
	s_waitcnt vmcnt(0)                                         // 0000000775DC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 0000000775E0: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 0000000775E4: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000775E8: BF870009
	v_mad_u64_u32 v[7:8], null, s1, v9, 0                      // 0000000775EC: D6FE7C07 02021201
	s_cmp_lg_u32 s0, 0                                         // 0000000775F4: BF078000
	s_addc_u32 s0, s13, 0                                      // 0000000775F8: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000775FC: BF07806A
	v_mad_u64_u32 v[9:10], null, s0, v11, 0                    // 000000077600: D6FE7C09 02021600
	s_addc_u32 s0, s14, 0                                      // 000000077608: 8200800E
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000007760C: D7006A00 00020006
	v_mad_u64_u32 v[11:12], null, s0, v13, 0                   // 000000077614: D6FE7C0B 02021A00
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000007761C: 40020207
	s_clause 0x2                                               // 000000077620: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000077624: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 00000007762C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000077634: DC6E0000 007C0B00
	s_nop 0                                                    // 00000007763C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077640: BFB60003
	s_endpgm                                                   // 000000077644: BFB00000
mul_long_get_local_id_get_num_groups_symend:
	.long 0xbf800000                                           // 000000077648: BF800000
	.long 0xbf800000                                           // 00000007764C: BF800000
	.long 0xbf800000                                           // 000000077650: BF800000
	.long 0xbf800000                                           // 000000077654: BF800000
	.long 0xbf800000                                           // 000000077658: BF800000
	.long 0xbf800000                                           // 00000007765C: BF800000
	.long 0xbf800000                                           // 000000077660: BF800000
	.long 0xbf800000                                           // 000000077664: BF800000
	.long 0xbf800000                                           // 000000077668: BF800000
	.long 0xbf800000                                           // 00000007766C: BF800000
	.long 0xbf800000                                           // 000000077670: BF800000
	.long 0xbf800000                                           // 000000077674: BF800000
	.long 0xbf800000                                           // 000000077678: BF800000
	.long 0xbf800000                                           // 00000007767C: BF800000
	.long 0xbf800000                                           // 000000077680: BF800000
	.long 0xbf800000                                           // 000000077684: BF800000
	.long 0xbf800000                                           // 000000077688: BF800000
	.long 0xbf800000                                           // 00000007768C: BF800000
	.long 0xbf800000                                           // 000000077690: BF800000
	.long 0xbf800000                                           // 000000077694: BF800000
	.long 0xbf800000                                           // 000000077698: BF800000
	.long 0xbf800000                                           // 00000007769C: BF800000
	.long 0xbf800000                                           // 0000000776A0: BF800000
	.long 0xbf800000                                           // 0000000776A4: BF800000
	.long 0xbf800000                                           // 0000000776A8: BF800000
	.long 0xbf800000                                           // 0000000776AC: BF800000
	.long 0xbf800000                                           // 0000000776B0: BF800000
	.long 0xbf800000                                           // 0000000776B4: BF800000
	.long 0xbf800000                                           // 0000000776B8: BF800000
	.long 0xbf800000                                           // 0000000776BC: BF800000
	.long 0xbf800000                                           // 0000000776C0: BF800000
	.long 0xbf800000                                           // 0000000776C4: BF800000
	.long 0xbf800000                                           // 0000000776C8: BF800000
	.long 0xbf800000                                           // 0000000776CC: BF800000
	.long 0xbf800000                                           // 0000000776D0: BF800000
	.long 0xbf800000                                           // 0000000776D4: BF800000
	.long 0xbf800000                                           // 0000000776D8: BF800000
	.long 0xbf800000                                           // 0000000776DC: BF800000
	.long 0xbf800000                                           // 0000000776E0: BF800000
	.long 0xbf800000                                           // 0000000776E4: BF800000
	.long 0xbf800000                                           // 0000000776E8: BF800000
	.long 0xbf800000                                           // 0000000776EC: BF800000
	.long 0xbf800000                                           // 0000000776F0: BF800000
	.long 0xbf800000                                           // 0000000776F4: BF800000
	.long 0xbf800000                                           // 0000000776F8: BF800000
	.long 0xbf800000                                           // 0000000776FC: BF800000

	.p2align	8
	.type	mul_long_get_group_id_get_num_groups,@function
	.size	mul_long_get_group_id_get_num_groups, mul_long_get_group_id_get_num_groups_symend-mul_long_get_group_id_get_num_groups
mul_long_get_group_id_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077700: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007770C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077714: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007771C: BEA10080
	s_clause 0x1                                               // 000000077720: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077724: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007772C: DC4A0026 08000002
	s_clause 0x2                                               // 000000077734: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077738: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000077740: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000077748: F4040180 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000077750: BF89FC07
	s_lshl_b32 s9, s2, 1                                       // 000000077754: 84098102
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000077758: F4080300 F8000010
	s_lshl_b32 s0, s3, 4                                       // 000000077760: 84008403
	v_add3_u32 v1, s8, s9, v1                                  // 000000077764: D6550001 04041208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007776C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077770: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000077778: D6550001 0414000A
	s_lshl_b32 s0, s4, 1                                       // 000000077780: 84008104
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077784: D73C0005 00020283
	v_add3_u32 v1, s5, s0, v0                                  // 00000007778C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000077794: BF8701A4
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000077798: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 0000000777A0: 40080807
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000777A4: D73C0000 00020283
	v_add_co_u32 v5, s0, s6, v5                                // 0000000777AC: D7000005 00020A06
	s_delay_alu instid0(VALU_DEP_1)                            // 0000000777B4: BF870001
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000777B8: D5200006 00020C07
	s_waitcnt vmcnt(1)                                         // 0000000777C0: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 0000000777C4: 32040E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000777C8: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 0000000777CC: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 0000000777D0: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000777D8: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 0000000777DC: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 0000000777E0: BF89FC07
	s_addc_u32 s1, s12, 0                                      // 0000000777E4: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000777E8: BF870009
	s_mul_hi_u32 s5, s1, s2                                    // 0000000777EC: 96850201
	s_mul_i32 s1, s1, s2                                       // 0000000777F0: 96010201
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000777F4: BF07806A
	v_dual_mov_b32 v7, s1 :: v_dual_mov_b32 v8, s5             // 0000000777F8: CA100001 07080005
	s_addc_u32 s1, s13, 0                                      // 000000077800: 8201800D
	s_cmp_lg_u32 s0, 0                                         // 000000077804: BF078000
	s_mul_hi_u32 s0, s1, s3                                    // 000000077808: 96800301
	s_mul_i32 s1, s1, s3                                       // 00000007780C: 96010301
	s_addc_u32 s2, s14, 0                                      // 000000077810: 8202800E
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v10, s0            // 000000077814: CA100001 090A0000
	s_mul_i32 s0, s2, s4                                       // 00000007781C: 96000402
	s_mul_hi_u32 s1, s2, s4                                    // 000000077820: 96810402
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000077824: D7006A00 00020006
	v_dual_mov_b32 v11, s0 :: v_dual_mov_b32 v12, s1           // 00000007782C: CA100000 0B0C0001
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000077834: 40020207
	s_clause 0x2                                               // 000000077838: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 00000007783C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000077844: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 00000007784C: DC6E0000 007C0B00
	s_nop 0                                                    // 000000077854: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077858: BFB60003
	s_endpgm                                                   // 00000007785C: BFB00000
mul_long_get_group_id_get_num_groups_symend:
	.long 0xbf800000                                           // 000000077860: BF800000
	.long 0xbf800000                                           // 000000077864: BF800000
	.long 0xbf800000                                           // 000000077868: BF800000
	.long 0xbf800000                                           // 00000007786C: BF800000
	.long 0xbf800000                                           // 000000077870: BF800000
	.long 0xbf800000                                           // 000000077874: BF800000
	.long 0xbf800000                                           // 000000077878: BF800000
	.long 0xbf800000                                           // 00000007787C: BF800000
	.long 0xbf800000                                           // 000000077880: BF800000
	.long 0xbf800000                                           // 000000077884: BF800000
	.long 0xbf800000                                           // 000000077888: BF800000
	.long 0xbf800000                                           // 00000007788C: BF800000
	.long 0xbf800000                                           // 000000077890: BF800000
	.long 0xbf800000                                           // 000000077894: BF800000
	.long 0xbf800000                                           // 000000077898: BF800000
	.long 0xbf800000                                           // 00000007789C: BF800000
	.long 0xbf800000                                           // 0000000778A0: BF800000
	.long 0xbf800000                                           // 0000000778A4: BF800000
	.long 0xbf800000                                           // 0000000778A8: BF800000
	.long 0xbf800000                                           // 0000000778AC: BF800000
	.long 0xbf800000                                           // 0000000778B0: BF800000
	.long 0xbf800000                                           // 0000000778B4: BF800000
	.long 0xbf800000                                           // 0000000778B8: BF800000
	.long 0xbf800000                                           // 0000000778BC: BF800000
	.long 0xbf800000                                           // 0000000778C0: BF800000
	.long 0xbf800000                                           // 0000000778C4: BF800000
	.long 0xbf800000                                           // 0000000778C8: BF800000
	.long 0xbf800000                                           // 0000000778CC: BF800000
	.long 0xbf800000                                           // 0000000778D0: BF800000
	.long 0xbf800000                                           // 0000000778D4: BF800000
	.long 0xbf800000                                           // 0000000778D8: BF800000
	.long 0xbf800000                                           // 0000000778DC: BF800000
	.long 0xbf800000                                           // 0000000778E0: BF800000
	.long 0xbf800000                                           // 0000000778E4: BF800000
	.long 0xbf800000                                           // 0000000778E8: BF800000
	.long 0xbf800000                                           // 0000000778EC: BF800000
	.long 0xbf800000                                           // 0000000778F0: BF800000
	.long 0xbf800000                                           // 0000000778F4: BF800000
	.long 0xbf800000                                           // 0000000778F8: BF800000
	.long 0xbf800000                                           // 0000000778FC: BF800000

	.p2align	8
	.type	mul_long_get_local_size_get_num_groups,@function
	.size	mul_long_get_local_size_get_num_groups, mul_long_get_local_size_get_num_groups_symend-mul_long_get_local_size_get_num_groups
mul_long_get_local_size_get_num_groups:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000077900: F4080200 F8000010
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077908: CA240080 020000FF 000003FF
	s_add_u32 s5, s0, 16                                       // 000000077914: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000077918: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007791C: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000077920: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000077924: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 000000077928: 840E8204
	s_clause 0x1                                               // 00000007792C: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077930: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000077938: DC4A0026 08000002
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077940: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077948: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000077950: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000077954: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000077958: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007795C: BF8704D9
	s_add_u32 s6, s5, s2                                       // 000000077960: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000077964: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000077968: BF0A0903
	global_load_u16 v9, v2, s[6:7]                             // 00000007796C: DC4A0000 09060002
	s_cselect_b32 s2, 14, 20                                   // 000000077974: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000077978: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000007797C: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000077980: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 000000077984: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000077988: BF870009
	s_add_u32 s4, s5, s4                                       // 00000007798C: 80040405
	s_addc_u32 s5, s11, 0                                      // 000000077990: 8205800B
	s_clause 0x1                                               // 000000077994: BF850001
	global_load_u16 v11, v2, s[2:3]                            // 000000077998: DC4A0000 0B020002
	global_load_u16 v13, v2, s[4:5]                            // 0000000779A0: DC4A0000 0D040002
	s_clause 0x1                                               // 0000000779A8: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 0000000779AC: F4080100 F8000038
	s_load_b64 s[2:3], s[0:1], 0x8                             // 0000000779B4: F4040080 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000779BC: BF89FC07
	s_load_b32 s5, s[0:1], 0x48                                // 0000000779C0: F4000140 F8000048
	v_add3_u32 v1, s4, s12, v1                                 // 0000000779C8: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000779D0: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000779D4: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v5                                 // 0000000779DC: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000779E4: D73C0005 00020283
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 0000000779EC: BF870143
	v_add_co_u32 v3, s1, s2, v3                                // 0000000779F0: D7000103 00020602
	s_waitcnt lgkmcnt(0)                                       // 0000000779F8: BF89FC07
	v_add3_u32 v1, s5, s14, v0                                 // 0000000779FC: D6550001 04001C05
	v_add_co_ci_u32_e64 v4, s1, s3, v4, s1                     // 000000077A04: D5200104 00060803
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000077A0C: D73C0000 00020283
	s_waitcnt vmcnt(4)                                         // 000000077A14: BF8913F7
	v_lshrrev_b32_e32 v10, 16, v7                              // 000000077A18: 32140E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000077A1C: 7C7A0E80
	s_delay_alu instid0(VALU_DEP_2)                            // 000000077A20: BF870002
	v_cmp_ne_u16_e64 s0, 0, v10.l                              // 000000077A24: D43D0000 00021480
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077A2C: BF07806A
	s_waitcnt vmcnt(3)                                         // 000000077A30: BF890FF7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 000000077A34: 7C7A1080
	s_addc_u32 s1, s8, 0                                       // 000000077A38: 82018008
	s_cmp_lg_u32 s0, 0                                         // 000000077A3C: BF078000
	s_addc_u32 s0, s9, 0                                       // 000000077A40: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077A44: BF07806A
	v_add_co_u32 v5, vcc_lo, s2, v5                            // 000000077A48: D7006A05 00020A02
	s_addc_u32 s4, s10, 0                                      // 000000077A50: 8204800A
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo             // 000000077A54: 400C0C03
	s_waitcnt vmcnt(2)                                         // 000000077A58: BF890BF7
	v_mul_hi_u32 v8, s1, v9                                    // 000000077A5C: D72D0008 00021201
	v_mul_lo_u32 v7, s1, v9                                    // 000000077A64: D72C0007 00021201
	v_add_co_u32 v0, vcc_lo, s2, v0                            // 000000077A6C: D7006A00 00020002
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo             // 000000077A74: 40020203
	s_waitcnt vmcnt(1)                                         // 000000077A78: BF8907F7
	v_mul_hi_u32 v10, s0, v11                                  // 000000077A7C: D72D000A 00021600
	v_mul_lo_u32 v9, s0, v11                                   // 000000077A84: D72C0009 00021600
	s_waitcnt vmcnt(0)                                         // 000000077A8C: BF8903F7
	v_mul_hi_u32 v12, s4, v13                                  // 000000077A90: D72D000C 00021A04
	v_mul_lo_u32 v11, s4, v13                                  // 000000077A98: D72C000B 00021A04
	s_clause 0x2                                               // 000000077AA0: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000077AA4: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000077AAC: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000077AB4: DC6E0000 007C0B00
	s_nop 0                                                    // 000000077ABC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077AC0: BFB60003
	s_endpgm                                                   // 000000077AC4: BFB00000
mul_long_get_local_size_get_num_groups_symend:
	.long 0xbf800000                                           // 000000077AC8: BF800000
	.long 0xbf800000                                           // 000000077ACC: BF800000
	.long 0xbf800000                                           // 000000077AD0: BF800000
	.long 0xbf800000                                           // 000000077AD4: BF800000
	.long 0xbf800000                                           // 000000077AD8: BF800000
	.long 0xbf800000                                           // 000000077ADC: BF800000
	.long 0xbf800000                                           // 000000077AE0: BF800000
	.long 0xbf800000                                           // 000000077AE4: BF800000
	.long 0xbf800000                                           // 000000077AE8: BF800000
	.long 0xbf800000                                           // 000000077AEC: BF800000
	.long 0xbf800000                                           // 000000077AF0: BF800000
	.long 0xbf800000                                           // 000000077AF4: BF800000
	.long 0xbf800000                                           // 000000077AF8: BF800000
	.long 0xbf800000                                           // 000000077AFC: BF800000

	.p2align	8
	.type	mul_long_get_global_id_get_num_groups,@function
	.size	mul_long_get_global_id_get_num_groups, mul_long_get_global_id_get_num_groups_symend-mul_long_get_global_id_get_num_groups
mul_long_get_global_id_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077B00: CA240080 020000FF 000003FF
	v_bfe_u32 v6, v0, 10, 10                                   // 000000077B0C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077B14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000077B1C: BEA10080
	s_clause 0x1                                               // 000000077B20: BF850001
	global_load_b32 v5, v2, s[0:1] offset:34                   // 000000077B24: DC520022 05000002
	global_load_u16 v7, v2, s[0:1] offset:38                   // 000000077B2C: DC4A0026 07000002
	s_clause 0x3                                               // 000000077B34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077B38: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000077B40: F4040180 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000077B48: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000077B50: F4000140 F8000048
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000077B58: D6560001 04050202
	s_lshl_b32 s0, s3, 1                                       // 000000077B60: 84008103
	s_lshl_b32 s2, s4, 2                                       // 000000077B64: 84028204
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000077B68: BF8701C1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077B6C: D73C0003 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000077B74: BF89FC07
	v_add_nc_u32_e32 v13, s8, v1                               // 000000077B78: 4A1A0208
	v_add3_u32 v1, s10, s0, v6                                 // 000000077B7C: D6550001 0418000A
	v_add_co_u32 v3, s1, s6, v3                                // 000000077B84: D7000103 00020606
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000077B8C: BF8701D1
	v_add_co_ci_u32_e64 v4, s1, s7, v4, s1                     // 000000077B90: D5200104 00060807
	s_waitcnt vmcnt(1)                                         // 000000077B98: BF8907F7
	v_lshrrev_b32_e32 v8, 16, v5                               // 000000077B9C: 32100A90
	v_cmp_ne_u16_e32 vcc_lo, 0, v5.l                           // 000000077BA0: 7C7A0A80
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077BA4: D73C0005 00020283
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 000000077BAC: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077BB4: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000077BB8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000077BBC: 7C7A0E80
	s_addc_u32 s1, s12, 0                                      // 000000077BC0: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000077BC4: BF870009
	v_mad_u64_u32 v[11:12], null, v13, s1, 0                   // 000000077BC8: D6FE7C0B 0200030D
	s_cmp_lg_u32 s0, 0                                         // 000000077BD0: BF078000
	s_addc_u32 s0, s13, 0                                      // 000000077BD4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077BD8: BF07806A
	v_mad_u64_u32 v[7:8], null, s0, v1, 0                      // 000000077BDC: D6FE7C07 02020200
	v_add3_u32 v1, s5, s2, v0                                  // 000000077BE4: D6550001 04000405
	v_add_co_u32 v5, s0, s6, v5                                // 000000077BEC: D7000005 00020A06
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000077BF4: BF870191
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 000000077BF8: D5200006 00020C07
	v_lshlrev_b64 v[9:10], 3, v[1:2]                           // 000000077C00: D73C0009 00020283
	s_addc_u32 s0, s14, 0                                      // 000000077C08: 8200800E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000077C0C: BF870119
	v_mad_u64_u32 v[13:14], null, s0, v1, 0                    // 000000077C10: D6FE7C0D 02020200
	v_add_co_u32 v0, vcc_lo, s6, v9                            // 000000077C18: D7006A00 00021206
	s_delay_alu instid0(VALU_DEP_3)                            // 000000077C20: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v10, vcc_lo            // 000000077C24: 40021407
	s_clause 0x2                                               // 000000077C28: BF850002
	global_store_b64 v[3:4], v[11:12], off                     // 000000077C2C: DC6E0000 007C0B03
	global_store_b64 v[5:6], v[7:8], off                       // 000000077C34: DC6E0000 007C0705
	global_store_b64 v[0:1], v[13:14], off                     // 000000077C3C: DC6E0000 007C0D00
	s_nop 0                                                    // 000000077C44: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077C48: BFB60003
	s_endpgm                                                   // 000000077C4C: BFB00000
mul_long_get_global_id_get_num_groups_symend:
	.long 0xbf800000                                           // 000000077C50: BF800000
	.long 0xbf800000                                           // 000000077C54: BF800000
	.long 0xbf800000                                           // 000000077C58: BF800000
	.long 0xbf800000                                           // 000000077C5C: BF800000
	.long 0xbf800000                                           // 000000077C60: BF800000
	.long 0xbf800000                                           // 000000077C64: BF800000
	.long 0xbf800000                                           // 000000077C68: BF800000
	.long 0xbf800000                                           // 000000077C6C: BF800000
	.long 0xbf800000                                           // 000000077C70: BF800000
	.long 0xbf800000                                           // 000000077C74: BF800000
	.long 0xbf800000                                           // 000000077C78: BF800000
	.long 0xbf800000                                           // 000000077C7C: BF800000
	.long 0xbf800000                                           // 000000077C80: BF800000
	.long 0xbf800000                                           // 000000077C84: BF800000
	.long 0xbf800000                                           // 000000077C88: BF800000
	.long 0xbf800000                                           // 000000077C8C: BF800000
	.long 0xbf800000                                           // 000000077C90: BF800000
	.long 0xbf800000                                           // 000000077C94: BF800000
	.long 0xbf800000                                           // 000000077C98: BF800000
	.long 0xbf800000                                           // 000000077C9C: BF800000
	.long 0xbf800000                                           // 000000077CA0: BF800000
	.long 0xbf800000                                           // 000000077CA4: BF800000
	.long 0xbf800000                                           // 000000077CA8: BF800000
	.long 0xbf800000                                           // 000000077CAC: BF800000
	.long 0xbf800000                                           // 000000077CB0: BF800000
	.long 0xbf800000                                           // 000000077CB4: BF800000
	.long 0xbf800000                                           // 000000077CB8: BF800000
	.long 0xbf800000                                           // 000000077CBC: BF800000
	.long 0xbf800000                                           // 000000077CC0: BF800000
	.long 0xbf800000                                           // 000000077CC4: BF800000
	.long 0xbf800000                                           // 000000077CC8: BF800000
	.long 0xbf800000                                           // 000000077CCC: BF800000
	.long 0xbf800000                                           // 000000077CD0: BF800000
	.long 0xbf800000                                           // 000000077CD4: BF800000
	.long 0xbf800000                                           // 000000077CD8: BF800000
	.long 0xbf800000                                           // 000000077CDC: BF800000
	.long 0xbf800000                                           // 000000077CE0: BF800000
	.long 0xbf800000                                           // 000000077CE4: BF800000
	.long 0xbf800000                                           // 000000077CE8: BF800000
	.long 0xbf800000                                           // 000000077CEC: BF800000
	.long 0xbf800000                                           // 000000077CF0: BF800000
	.long 0xbf800000                                           // 000000077CF4: BF800000
	.long 0xbf800000                                           // 000000077CF8: BF800000
	.long 0xbf800000                                           // 000000077CFC: BF800000

	.p2align	8
	.type	mul_long_get_global_size_get_num_groups,@function
	.size	mul_long_get_global_size_get_num_groups, mul_long_get_global_size_get_num_groups_symend-mul_long_get_global_size_get_num_groups
mul_long_get_global_size_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077D00: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077D0C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077D14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000077D1C: BEA10080
	s_clause 0x1                                               // 000000077D20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077D24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000077D2C: DC4A0026 08000002
	s_clause 0x3                                               // 000000077D34: BF850003
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000077D38: F4080300 F8000038
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000077D40: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000077D48: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], null                            // 000000077D50: F4040180 F8000000
	s_lshl_b32 s0, s2, 4                                       // 000000077D58: 84008402
	s_lshl_b32 s1, s4, 1                                       // 000000077D5C: 84018104
	s_waitcnt lgkmcnt(0)                                       // 000000077D60: BF89FC07
	v_add3_u32 v1, s12, s0, v1                                 // 000000077D64: D6550001 0404000C
	s_lshl_b32 s0, s3, 1                                       // 000000077D6C: 84008103
	s_lshl_b32 s2, s8, 4                                       // 000000077D70: 84028408
	s_lshl_b32 s3, s9, 1                                       // 000000077D74: 84038109
	s_lshl_b32 s4, s10, 1                                      // 000000077D78: 8404810A
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077D7C: D73C0003 00020283
	v_add3_u32 v1, s14, s0, v5                                 // 000000077D84: D6550001 0414000E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000077D8C: BF870221
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077D90: D73C0005 00020283
	v_add3_u32 v1, s5, s1, v0                                  // 000000077D98: D6550001 04000205
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000077DA0: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000077DA8: 40080807
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000077DAC: BF8700A3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000077DB0: D73C0000 00020283
	v_add_co_u32 v5, s0, s6, v5                                // 000000077DB8: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 000000077DC0: D5200006 00020C07
	s_waitcnt vmcnt(1)                                         // 000000077DC8: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 000000077DCC: 32040E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000077DD0: 7C7A0E80
	v_and_b32_e32 v9, 0xffff, v7                               // 000000077DD4: 36120EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 000000077DDC: BF8903F7
	v_cmp_ne_u32_e64 s0, 0, v8                                 // 000000077DE0: D44D0000 00021080
	v_add_nc_u32_e32 v11, s4, v8                               // 000000077DE8: 4A161004
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077DEC: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000077DF0: 7C7A0480
	v_add_nc_u32_e32 v7, s2, v9                                // 000000077DF4: 4A0E1202
	s_addc_u32 s1, s8, 0                                       // 000000077DF8: 82018008
	v_add_nc_u32_e32 v2, s3, v2                                // 000000077DFC: 4A040403
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077E00: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 000000077E04: BF870002
	v_mul_hi_u32 v8, s1, v7                                    // 000000077E08: D72D0008 00020E01
	v_mul_lo_u32 v7, s1, v7                                    // 000000077E10: D72C0007 00020E01
	s_addc_u32 s1, s9, 0                                       // 000000077E18: 82018009
	s_cmp_lg_u32 s0, 0                                         // 000000077E1C: BF078000
	v_mul_hi_u32 v10, s1, v2                                   // 000000077E20: D72D000A 00020401
	s_addc_u32 s0, s10, 0                                      // 000000077E28: 8200800A
	v_mul_lo_u32 v9, s1, v2                                    // 000000077E2C: D72C0009 00020401
	v_mul_hi_u32 v12, s0, v11                                  // 000000077E34: D72D000C 00021600
	v_mul_lo_u32 v11, s0, v11                                  // 000000077E3C: D72C000B 00021600
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000077E44: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000077E4C: 40020207
	s_clause 0x2                                               // 000000077E50: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000077E54: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000077E5C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000077E64: DC6E0000 007C0B00
	s_nop 0                                                    // 000000077E6C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077E70: BFB60003
	s_endpgm                                                   // 000000077E74: BFB00000
mul_long_get_global_size_get_num_groups_symend:
	.long 0xbf800000                                           // 000000077E78: BF800000
	.long 0xbf800000                                           // 000000077E7C: BF800000
	.long 0xbf800000                                           // 000000077E80: BF800000
	.long 0xbf800000                                           // 000000077E84: BF800000
	.long 0xbf800000                                           // 000000077E88: BF800000
	.long 0xbf800000                                           // 000000077E8C: BF800000
	.long 0xbf800000                                           // 000000077E90: BF800000
	.long 0xbf800000                                           // 000000077E94: BF800000
	.long 0xbf800000                                           // 000000077E98: BF800000
	.long 0xbf800000                                           // 000000077E9C: BF800000
	.long 0xbf800000                                           // 000000077EA0: BF800000
	.long 0xbf800000                                           // 000000077EA4: BF800000
	.long 0xbf800000                                           // 000000077EA8: BF800000
	.long 0xbf800000                                           // 000000077EAC: BF800000
	.long 0xbf800000                                           // 000000077EB0: BF800000
	.long 0xbf800000                                           // 000000077EB4: BF800000
	.long 0xbf800000                                           // 000000077EB8: BF800000
	.long 0xbf800000                                           // 000000077EBC: BF800000
	.long 0xbf800000                                           // 000000077EC0: BF800000
	.long 0xbf800000                                           // 000000077EC4: BF800000
	.long 0xbf800000                                           // 000000077EC8: BF800000
	.long 0xbf800000                                           // 000000077ECC: BF800000
	.long 0xbf800000                                           // 000000077ED0: BF800000
	.long 0xbf800000                                           // 000000077ED4: BF800000
	.long 0xbf800000                                           // 000000077ED8: BF800000
	.long 0xbf800000                                           // 000000077EDC: BF800000
	.long 0xbf800000                                           // 000000077EE0: BF800000
	.long 0xbf800000                                           // 000000077EE4: BF800000
	.long 0xbf800000                                           // 000000077EE8: BF800000
	.long 0xbf800000                                           // 000000077EEC: BF800000
	.long 0xbf800000                                           // 000000077EF0: BF800000
	.long 0xbf800000                                           // 000000077EF4: BF800000
	.long 0xbf800000                                           // 000000077EF8: BF800000
	.long 0xbf800000                                           // 000000077EFC: BF800000

	.p2align	8
	.type	mul_long_get_num_groups_get_num_groups,@function
	.size	mul_long_get_num_groups_get_num_groups, mul_long_get_num_groups_get_num_groups_symend-mul_long_get_num_groups_get_num_groups
mul_long_get_num_groups_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077F00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000077F0C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077F10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077F18: D6100000 02292900
	s_clause 0x1                                               // 000000077F20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077F24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000077F2C: DC4A0026 08000002
	s_clause 0x3                                               // 000000077F34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077F38: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000077F40: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000077F48: F4040180 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000077F50: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000077F58: 84008103
	s_mov_b32 s33, 0                                           // 000000077F5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000077F60: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000077F64: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000077F6C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077F70: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000077F78: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000077F80: 84008204
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077F84: D73C0005 00020283
	v_add3_u32 v1, s5, s0, v0                                  // 000000077F8C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000077F94: BF8701A4
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000077F98: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000077FA0: 40080807
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000077FA4: D73C0000 00020283
	v_add_co_u32 v5, s0, s6, v5                                // 000000077FAC: D7000005 00020A06
	s_delay_alu instid0(VALU_DEP_1)                            // 000000077FB4: BF870001
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 000000077FB8: D5200006 00020C07
	s_waitcnt vmcnt(1)                                         // 000000077FC0: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 000000077FC4: 32040E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000077FC8: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 000000077FCC: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 000000077FD0: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077FD8: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000077FDC: 7C7A0480
	s_addc_u32 s1, s12, 0                                      // 000000077FE0: 8201800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000077FE4: BF870009
	s_mul_hi_u32 s2, s1, s1                                    // 000000077FE8: 96820101
	s_mul_i32 s1, s1, s1                                       // 000000077FEC: 96010101
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077FF0: BF07806A
	v_dual_mov_b32 v7, s1 :: v_dual_mov_b32 v8, s2             // 000000077FF4: CA100001 07080002
	s_addc_u32 s1, s13, 0                                      // 000000077FFC: 8201800D
	s_cmp_lg_u32 s0, 0                                         // 000000078000: BF078000
	s_mul_hi_u32 s0, s1, s1                                    // 000000078004: 96800101
	s_mul_i32 s1, s1, s1                                       // 000000078008: 96010101
	s_addc_u32 s2, s14, 0                                      // 00000007800C: 8202800E
	v_dual_mov_b32 v9, s1 :: v_dual_mov_b32 v10, s0            // 000000078010: CA100001 090A0000
	s_mul_i32 s0, s2, s2                                       // 000000078018: 96000202
	s_mul_hi_u32 s1, s2, s2                                    // 00000007801C: 96810202
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000078020: D7006A00 00020006
	v_dual_mov_b32 v11, s0 :: v_dual_mov_b32 v12, s1           // 000000078028: CA100000 0B0C0001
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000078030: 40020207
	s_clause 0x2                                               // 000000078034: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000078038: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000078040: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000078048: DC6E0000 007C0B00
	s_nop 0                                                    // 000000078050: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078054: BFB60003
	s_endpgm                                                   // 000000078058: BFB00000
mul_long_get_num_groups_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007805C: BF800000
	.long 0xbf800000                                           // 000000078060: BF800000
	.long 0xbf800000                                           // 000000078064: BF800000
	.long 0xbf800000                                           // 000000078068: BF800000
	.long 0xbf800000                                           // 00000007806C: BF800000
	.long 0xbf800000                                           // 000000078070: BF800000
	.long 0xbf800000                                           // 000000078074: BF800000
	.long 0xbf800000                                           // 000000078078: BF800000
	.long 0xbf800000                                           // 00000007807C: BF800000
	.long 0xbf800000                                           // 000000078080: BF800000
	.long 0xbf800000                                           // 000000078084: BF800000
	.long 0xbf800000                                           // 000000078088: BF800000
	.long 0xbf800000                                           // 00000007808C: BF800000
	.long 0xbf800000                                           // 000000078090: BF800000
	.long 0xbf800000                                           // 000000078094: BF800000
	.long 0xbf800000                                           // 000000078098: BF800000
	.long 0xbf800000                                           // 00000007809C: BF800000
	.long 0xbf800000                                           // 0000000780A0: BF800000
	.long 0xbf800000                                           // 0000000780A4: BF800000
	.long 0xbf800000                                           // 0000000780A8: BF800000
	.long 0xbf800000                                           // 0000000780AC: BF800000
	.long 0xbf800000                                           // 0000000780B0: BF800000
	.long 0xbf800000                                           // 0000000780B4: BF800000
	.long 0xbf800000                                           // 0000000780B8: BF800000
	.long 0xbf800000                                           // 0000000780BC: BF800000
	.long 0xbf800000                                           // 0000000780C0: BF800000
	.long 0xbf800000                                           // 0000000780C4: BF800000
	.long 0xbf800000                                           // 0000000780C8: BF800000
	.long 0xbf800000                                           // 0000000780CC: BF800000
	.long 0xbf800000                                           // 0000000780D0: BF800000
	.long 0xbf800000                                           // 0000000780D4: BF800000
	.long 0xbf800000                                           // 0000000780D8: BF800000
	.long 0xbf800000                                           // 0000000780DC: BF800000
	.long 0xbf800000                                           // 0000000780E0: BF800000
	.long 0xbf800000                                           // 0000000780E4: BF800000
	.long 0xbf800000                                           // 0000000780E8: BF800000
	.long 0xbf800000                                           // 0000000780EC: BF800000
	.long 0xbf800000                                           // 0000000780F0: BF800000
	.long 0xbf800000                                           // 0000000780F4: BF800000
	.long 0xbf800000                                           // 0000000780F8: BF800000
	.long 0xbf800000                                           // 0000000780FC: BF800000

	.p2align	8
	.type	mul_long_get_work_dim_get_num_groups,@function
	.size	mul_long_get_work_dim_get_num_groups, mul_long_get_work_dim_get_num_groups_symend-mul_long_get_work_dim_get_num_groups
mul_long_get_work_dim_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000078100: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000007810C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000078110: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078118: D6100000 02292900
	s_clause 0x1                                               // 000000078120: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000078124: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007812C: DC4A0026 08000002
	s_clause 0x1                                               // 000000078134: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 000000078138: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078140: F4080200 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000078148: BF89FC07
	s_clause 0x2                                               // 00000007814C: BF850002
	s_load_b32 s9, s[0:1], 0x48                                // 000000078150: F4000240 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000078158: F4040180 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000078160: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000078168: 84008103
	s_mov_b32 s33, 0                                           // 00000007816C: BEA10080
	s_and_b32 s1, s5, 0xffff                                   // 000000078170: 8B01FF05 0000FFFF
	v_add3_u32 v1, s8, s2, v1                                  // 000000078178: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000078180: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000078184: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 00000007818C: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000078194: 84008204
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000078198: D73C0005 00020283
	s_waitcnt lgkmcnt(0)                                       // 0000000781A0: BF89FC07
	v_add3_u32 v1, s9, s0, v0                                  // 0000000781A4: D6550001 04000009
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 0000000781AC: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 0000000781B4: 40080807
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000781B8: BF8700A3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000781BC: D73C0000 00020283
	v_add_co_u32 v5, s0, s6, v5                                // 0000000781C4: D7000005 00020A06
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000781CC: D5200006 00020C07
	s_waitcnt vmcnt(1)                                         // 0000000781D4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 0000000781D8: 32040E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000781DC: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 0000000781E0: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v8.l                               // 0000000781E4: D43D0000 00021080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000781EC: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 0000000781F0: 7C7A0480
	s_addc_u32 s2, s12, 0                                      // 0000000781F4: 8202800C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000781F8: BF870009
	s_mul_hi_u32 s3, s2, s1                                    // 0000000781FC: 96830102
	s_mul_i32 s2, s2, s1                                       // 000000078200: 96020102
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000078204: BF07806A
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 000000078208: CA100002 07080003
	s_addc_u32 s2, s13, 0                                      // 000000078210: 8202800D
	s_cmp_lg_u32 s0, 0                                         // 000000078214: BF078000
	s_mul_hi_u32 s0, s2, s1                                    // 000000078218: 96800102
	s_mul_i32 s2, s2, s1                                       // 00000007821C: 96020102
	s_addc_u32 s3, s14, 0                                      // 000000078220: 8203800E
	v_dual_mov_b32 v9, s2 :: v_dual_mov_b32 v10, s0            // 000000078224: CA100002 090A0000
	s_mul_i32 s0, s3, s1                                       // 00000007822C: 96000103
	s_mul_hi_u32 s1, s3, s1                                    // 000000078230: 96810103
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000078234: D7006A00 00020006
	v_dual_mov_b32 v11, s0 :: v_dual_mov_b32 v12, s1           // 00000007823C: CA100000 0B0C0001
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000078244: 40020207
	s_clause 0x2                                               // 000000078248: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 00000007824C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000078254: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 00000007825C: DC6E0000 007C0B00
	s_nop 0                                                    // 000000078264: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078268: BFB60003
	s_endpgm                                                   // 00000007826C: BFB00000
mul_long_get_work_dim_get_num_groups_symend:
	.long 0xbf800000                                           // 000000078270: BF800000
	.long 0xbf800000                                           // 000000078274: BF800000
	.long 0xbf800000                                           // 000000078278: BF800000
	.long 0xbf800000                                           // 00000007827C: BF800000
	.long 0xbf800000                                           // 000000078280: BF800000
	.long 0xbf800000                                           // 000000078284: BF800000
	.long 0xbf800000                                           // 000000078288: BF800000
	.long 0xbf800000                                           // 00000007828C: BF800000
	.long 0xbf800000                                           // 000000078290: BF800000
	.long 0xbf800000                                           // 000000078294: BF800000
	.long 0xbf800000                                           // 000000078298: BF800000
	.long 0xbf800000                                           // 00000007829C: BF800000
	.long 0xbf800000                                           // 0000000782A0: BF800000
	.long 0xbf800000                                           // 0000000782A4: BF800000
	.long 0xbf800000                                           // 0000000782A8: BF800000
	.long 0xbf800000                                           // 0000000782AC: BF800000
	.long 0xbf800000                                           // 0000000782B0: BF800000
	.long 0xbf800000                                           // 0000000782B4: BF800000
	.long 0xbf800000                                           // 0000000782B8: BF800000
	.long 0xbf800000                                           // 0000000782BC: BF800000
	.long 0xbf800000                                           // 0000000782C0: BF800000
	.long 0xbf800000                                           // 0000000782C4: BF800000
	.long 0xbf800000                                           // 0000000782C8: BF800000
	.long 0xbf800000                                           // 0000000782CC: BF800000
	.long 0xbf800000                                           // 0000000782D0: BF800000
	.long 0xbf800000                                           // 0000000782D4: BF800000
	.long 0xbf800000                                           // 0000000782D8: BF800000
	.long 0xbf800000                                           // 0000000782DC: BF800000
	.long 0xbf800000                                           // 0000000782E0: BF800000
	.long 0xbf800000                                           // 0000000782E4: BF800000
	.long 0xbf800000                                           // 0000000782E8: BF800000
	.long 0xbf800000                                           // 0000000782EC: BF800000
	.long 0xbf800000                                           // 0000000782F0: BF800000
	.long 0xbf800000                                           // 0000000782F4: BF800000
	.long 0xbf800000                                           // 0000000782F8: BF800000
	.long 0xbf800000                                           // 0000000782FC: BF800000

	.p2align	8
	.type	mul_long_x_get_work_dim,@function
	.size	mul_long_x_get_work_dim, mul_long_x_get_work_dim_symend-mul_long_x_get_work_dim
mul_long_x_get_work_dim:
	s_clause 0x2                                               // 000000078300: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 000000078304: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007830C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x8                                 // 000000078314: F4000180 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007831C: BF89FC07
	s_clause 0x1                                               // 000000078320: BF850001
	s_load_b32 s9, s[0:1], 0x48                                // 000000078324: F4000240 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007832C: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000078334: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000078340: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000078344: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007834C: D6100000 02292900
	s_mov_b32 s7, 0                                            // 000000078354: BE870080
	s_mov_b32 s33, 0                                           // 000000078358: BEA10080
	v_add3_u32 v1, s8, s2, v1                                  // 00000007835C: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 000000078364: 84028103
	s_and_b32 s3, s5, 0xffff                                   // 000000078368: 8B03FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078370: BF870099
	s_mul_i32 s6, s3, s6                                       // 000000078374: 96060603
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000078378: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v5                                 // 000000078380: D6550001 0414040A
	s_lshl_b32 s2, s4, 1                                       // 000000078388: 84028104
	v_dual_mov_b32 v5, s6 :: v_dual_mov_b32 v6, s7             // 00000007838C: CA100006 05060007
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000078394: BF8701D2
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 000000078398: D73C0007 00020283
	s_waitcnt lgkmcnt(0)                                       // 0000000783A0: BF89FC07
	v_add3_u32 v1, s9, s2, v0                                  // 0000000783A4: D6550001 04000409
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000783AC: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000783B4: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000783B8: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 0000000783C0: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 0000000783C8: 40101001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000783CC: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000783D0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000783D8: 40020201
	s_clause 0x2                                               // 0000000783DC: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 0000000783E0: DC6E0000 007C0503
	global_store_b64 v[7:8], v[5:6], off                       // 0000000783E8: DC6E0000 007C0507
	global_store_b64 v[0:1], v[5:6], off                       // 0000000783F0: DC6E0000 007C0500
	s_nop 0                                                    // 0000000783F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000783FC: BFB60003
	s_endpgm                                                   // 000000078400: BFB00000
mul_long_x_get_work_dim_symend:
	.long 0xbf800000                                           // 000000078404: BF800000
	.long 0xbf800000                                           // 000000078408: BF800000
	.long 0xbf800000                                           // 00000007840C: BF800000
	.long 0xbf800000                                           // 000000078410: BF800000
	.long 0xbf800000                                           // 000000078414: BF800000
	.long 0xbf800000                                           // 000000078418: BF800000
	.long 0xbf800000                                           // 00000007841C: BF800000
	.long 0xbf800000                                           // 000000078420: BF800000
	.long 0xbf800000                                           // 000000078424: BF800000
	.long 0xbf800000                                           // 000000078428: BF800000
	.long 0xbf800000                                           // 00000007842C: BF800000
	.long 0xbf800000                                           // 000000078430: BF800000
	.long 0xbf800000                                           // 000000078434: BF800000
	.long 0xbf800000                                           // 000000078438: BF800000
	.long 0xbf800000                                           // 00000007843C: BF800000
	.long 0xbf800000                                           // 000000078440: BF800000
	.long 0xbf800000                                           // 000000078444: BF800000
	.long 0xbf800000                                           // 000000078448: BF800000
	.long 0xbf800000                                           // 00000007844C: BF800000
	.long 0xbf800000                                           // 000000078450: BF800000
	.long 0xbf800000                                           // 000000078454: BF800000
	.long 0xbf800000                                           // 000000078458: BF800000
	.long 0xbf800000                                           // 00000007845C: BF800000
	.long 0xbf800000                                           // 000000078460: BF800000
	.long 0xbf800000                                           // 000000078464: BF800000
	.long 0xbf800000                                           // 000000078468: BF800000
	.long 0xbf800000                                           // 00000007846C: BF800000
	.long 0xbf800000                                           // 000000078470: BF800000
	.long 0xbf800000                                           // 000000078474: BF800000
	.long 0xbf800000                                           // 000000078478: BF800000
	.long 0xbf800000                                           // 00000007847C: BF800000
	.long 0xbf800000                                           // 000000078480: BF800000
	.long 0xbf800000                                           // 000000078484: BF800000
	.long 0xbf800000                                           // 000000078488: BF800000
	.long 0xbf800000                                           // 00000007848C: BF800000
	.long 0xbf800000                                           // 000000078490: BF800000
	.long 0xbf800000                                           // 000000078494: BF800000
	.long 0xbf800000                                           // 000000078498: BF800000
	.long 0xbf800000                                           // 00000007849C: BF800000
	.long 0xbf800000                                           // 0000000784A0: BF800000
	.long 0xbf800000                                           // 0000000784A4: BF800000
	.long 0xbf800000                                           // 0000000784A8: BF800000
	.long 0xbf800000                                           // 0000000784AC: BF800000
	.long 0xbf800000                                           // 0000000784B0: BF800000
	.long 0xbf800000                                           // 0000000784B4: BF800000
	.long 0xbf800000                                           // 0000000784B8: BF800000
	.long 0xbf800000                                           // 0000000784BC: BF800000
	.long 0xbf800000                                           // 0000000784C0: BF800000
	.long 0xbf800000                                           // 0000000784C4: BF800000
	.long 0xbf800000                                           // 0000000784C8: BF800000
	.long 0xbf800000                                           // 0000000784CC: BF800000
	.long 0xbf800000                                           // 0000000784D0: BF800000
	.long 0xbf800000                                           // 0000000784D4: BF800000
	.long 0xbf800000                                           // 0000000784D8: BF800000
	.long 0xbf800000                                           // 0000000784DC: BF800000
	.long 0xbf800000                                           // 0000000784E0: BF800000
	.long 0xbf800000                                           // 0000000784E4: BF800000
	.long 0xbf800000                                           // 0000000784E8: BF800000
	.long 0xbf800000                                           // 0000000784EC: BF800000
	.long 0xbf800000                                           // 0000000784F0: BF800000
	.long 0xbf800000                                           // 0000000784F4: BF800000
	.long 0xbf800000                                           // 0000000784F8: BF800000
	.long 0xbf800000                                           // 0000000784FC: BF800000

	.p2align	8
	.type	mul_long_get_global_offset_get_work_dim,@function
	.size	mul_long_get_global_offset_get_work_dim, mul_long_get_global_offset_get_work_dim_symend-mul_long_get_global_offset_get_work_dim
mul_long_get_global_offset_get_work_dim:
	s_clause 0x3                                               // 000000078500: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078504: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007850C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 000000078514: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007851C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000078524: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000078530: D6100004 02291500
	s_lshl_b32 s2, s2, 1                                       // 000000078538: 84028102
	s_lshl_b32 s3, s3, 4                                       // 00000007853C: 84038403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078540: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000078548: 84048104
	s_mov_b32 s33, 0                                           // 00000007854C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000078550: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 000000078554: D6550002 04080408
	s_and_b32 s2, s5, 0xffff                                   // 00000007855C: 8B02FF05 0000FFFF
	v_add3_u32 v4, s10, s3, v4                                 // 000000078564: D6550004 0410060A
	s_mul_i32 s3, s2, s8                                       // 00000007856C: 96030802
	v_mov_b32_e32 v3, v1                                       // 000000078570: 7E060301
	v_add3_u32 v6, s6, s4, v0                                  // 000000078574: D6550006 04000806
	v_mov_b32_e32 v0, s3                                       // 00000007857C: 7E000203
	s_mul_i32 s4, s2, s10                                      // 000000078580: 96040A02
	v_mov_b32_e32 v5, v1                                       // 000000078584: 7E0A0301
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000078588: D73C0002 00020483
	s_mul_i32 s2, s2, s6                                       // 000000078590: 96020602
	v_mov_b32_e32 v7, v1                                       // 000000078594: 7E0E0301
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000078598: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007859C: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000785A4: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000785A8: DC6E0000 007C0002
	v_mov_b32_e32 v0, s4                                       // 0000000785B0: 7E000204
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000785B4: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000785BC: BF870111
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000785C0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000785C8: 400A0A01
	global_store_b64 v[4:5], v[0:1], off                       // 0000000785CC: DC6E0000 007C0004
	v_mov_b32_e32 v0, s2                                       // 0000000785D4: 7E000202
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000785D8: D73C0002 00020C83
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000785E0: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000785E4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000785EC: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000785F0: DC6E0000 007C0002
	s_nop 0                                                    // 0000000785F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000785FC: BFB60003
	s_endpgm                                                   // 000000078600: BFB00000
mul_long_get_global_offset_get_work_dim_symend:
	.long 0xbf800000                                           // 000000078604: BF800000
	.long 0xbf800000                                           // 000000078608: BF800000
	.long 0xbf800000                                           // 00000007860C: BF800000
	.long 0xbf800000                                           // 000000078610: BF800000
	.long 0xbf800000                                           // 000000078614: BF800000
	.long 0xbf800000                                           // 000000078618: BF800000
	.long 0xbf800000                                           // 00000007861C: BF800000
	.long 0xbf800000                                           // 000000078620: BF800000
	.long 0xbf800000                                           // 000000078624: BF800000
	.long 0xbf800000                                           // 000000078628: BF800000
	.long 0xbf800000                                           // 00000007862C: BF800000
	.long 0xbf800000                                           // 000000078630: BF800000
	.long 0xbf800000                                           // 000000078634: BF800000
	.long 0xbf800000                                           // 000000078638: BF800000
	.long 0xbf800000                                           // 00000007863C: BF800000
	.long 0xbf800000                                           // 000000078640: BF800000
	.long 0xbf800000                                           // 000000078644: BF800000
	.long 0xbf800000                                           // 000000078648: BF800000
	.long 0xbf800000                                           // 00000007864C: BF800000
	.long 0xbf800000                                           // 000000078650: BF800000
	.long 0xbf800000                                           // 000000078654: BF800000
	.long 0xbf800000                                           // 000000078658: BF800000
	.long 0xbf800000                                           // 00000007865C: BF800000
	.long 0xbf800000                                           // 000000078660: BF800000
	.long 0xbf800000                                           // 000000078664: BF800000
	.long 0xbf800000                                           // 000000078668: BF800000
	.long 0xbf800000                                           // 00000007866C: BF800000
	.long 0xbf800000                                           // 000000078670: BF800000
	.long 0xbf800000                                           // 000000078674: BF800000
	.long 0xbf800000                                           // 000000078678: BF800000
	.long 0xbf800000                                           // 00000007867C: BF800000
	.long 0xbf800000                                           // 000000078680: BF800000
	.long 0xbf800000                                           // 000000078684: BF800000
	.long 0xbf800000                                           // 000000078688: BF800000
	.long 0xbf800000                                           // 00000007868C: BF800000
	.long 0xbf800000                                           // 000000078690: BF800000
	.long 0xbf800000                                           // 000000078694: BF800000
	.long 0xbf800000                                           // 000000078698: BF800000
	.long 0xbf800000                                           // 00000007869C: BF800000
	.long 0xbf800000                                           // 0000000786A0: BF800000
	.long 0xbf800000                                           // 0000000786A4: BF800000
	.long 0xbf800000                                           // 0000000786A8: BF800000
	.long 0xbf800000                                           // 0000000786AC: BF800000
	.long 0xbf800000                                           // 0000000786B0: BF800000
	.long 0xbf800000                                           // 0000000786B4: BF800000
	.long 0xbf800000                                           // 0000000786B8: BF800000
	.long 0xbf800000                                           // 0000000786BC: BF800000
	.long 0xbf800000                                           // 0000000786C0: BF800000
	.long 0xbf800000                                           // 0000000786C4: BF800000
	.long 0xbf800000                                           // 0000000786C8: BF800000
	.long 0xbf800000                                           // 0000000786CC: BF800000
	.long 0xbf800000                                           // 0000000786D0: BF800000
	.long 0xbf800000                                           // 0000000786D4: BF800000
	.long 0xbf800000                                           // 0000000786D8: BF800000
	.long 0xbf800000                                           // 0000000786DC: BF800000
	.long 0xbf800000                                           // 0000000786E0: BF800000
	.long 0xbf800000                                           // 0000000786E4: BF800000
	.long 0xbf800000                                           // 0000000786E8: BF800000
	.long 0xbf800000                                           // 0000000786EC: BF800000
	.long 0xbf800000                                           // 0000000786F0: BF800000
	.long 0xbf800000                                           // 0000000786F4: BF800000
	.long 0xbf800000                                           // 0000000786F8: BF800000
	.long 0xbf800000                                           // 0000000786FC: BF800000

	.p2align	8
	.type	mul_long_get_local_id_get_work_dim,@function
	.size	mul_long_get_local_id_get_work_dim, mul_long_get_local_id_get_work_dim_symend-mul_long_get_local_id_get_work_dim
mul_long_get_local_id_get_work_dim:
	s_clause 0x3                                               // 000000078700: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078704: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007870C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 000000078714: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007871C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 000000078724: CA240080 010800FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000078730: 84028302
	v_bfe_u32 v9, v0, 10, 10                                   // 000000078734: D6100009 02291500
	s_lshl_b32 s3, s3, 2                                       // 00000007873C: 84038203
	s_delay_alu instid0(VALU_DEP_2)                            // 000000078740: BF870002
	v_mov_b32_e32 v3, v1                                       // 000000078744: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000078748: 7E0A0301
	v_bfe_u32 v10, v0, 20, 10                                  // 00000007874C: D610000A 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000078754: 84048104
	v_mov_b32_e32 v7, v1                                       // 000000078758: 7E0E0301
	s_mov_b32 s33, 0                                           // 00000007875C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000078760: BF89FC07
	v_add3_u32 v2, s8, s2, v8                                  // 000000078764: D6550002 04200408
	v_add3_u32 v4, s10, s3, v9                                 // 00000007876C: D6550004 0424060A
	s_and_b32 s2, s5, 0xffff                                   // 000000078774: 8B02FF05 0000FFFF
	v_add3_u32 v6, s6, s4, v10                                 // 00000007877C: D6550006 04280806
	v_mul_u32_u24_e32 v0, s2, v8                               // 000000078784: 16001002
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000078788: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000078790: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000078798: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007879C: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000787A4: 40060601
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000787A8: BF870213
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000787AC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000787B4: 400A0A01
	global_store_b64 v[2:3], v[0:1], off                       // 0000000787B8: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000787C0: D73C0002 00020C83
	v_mul_u32_u24_e32 v0, s2, v9                               // 0000000787C8: 16001202
	global_store_b64 v[4:5], v[0:1], off                       // 0000000787CC: DC6E0000 007C0004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000787D4: D7006A02 00020400
	v_mul_u32_u24_e32 v0, s2, v10                              // 0000000787DC: 16001402
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000787E0: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000787E4: DC6E0000 007C0002
	s_nop 0                                                    // 0000000787EC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000787F0: BFB60003
	s_endpgm                                                   // 0000000787F4: BFB00000
mul_long_get_local_id_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000787F8: BF800000
	.long 0xbf800000                                           // 0000000787FC: BF800000

	.p2align	8
	.type	mul_long_get_group_id_get_work_dim,@function
	.size	mul_long_get_group_id_get_work_dim, mul_long_get_group_id_get_work_dim_symend-mul_long_get_group_id_get_work_dim
mul_long_get_group_id_get_work_dim:
	s_clause 0x3                                               // 000000078800: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078804: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007880C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 000000078814: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007881C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000078824: CA240080 010200FF 000003FF
	s_lshl_b32 s7, s2, 1                                       // 000000078830: 84078102
	v_bfe_u32 v4, v0, 10, 10                                   // 000000078834: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007883C: D6100000 02292900
	s_waitcnt lgkmcnt(0)                                       // 000000078844: BF89FC07
	s_lshl_b32 s11, s4, 1                                      // 000000078848: 840B8104
	s_lshl_b32 s9, s3, 4                                       // 00000007884C: 84098403
	s_mov_b32 s33, 0                                           // 000000078850: BEA10080
	v_add3_u32 v2, s8, s7, v2                                  // 000000078854: D6550002 04080E08
	s_and_b32 s5, s5, 0xffff                                   // 00000007885C: 8B05FF05 0000FFFF
	v_add3_u32 v6, s6, s11, v0                                 // 000000078864: D6550006 04001606
	s_mul_i32 s2, s2, s5                                       // 00000007886C: 96020502
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000078870: BF8701C9
	v_dual_mov_b32 v3, v1 :: v_dual_mov_b32 v0, s2             // 000000078874: CA100101 03000002
	v_add3_u32 v4, s10, s9, v4                                 // 00000007887C: D6550004 0410120A
	s_mul_i32 s3, s3, s5                                       // 000000078884: 96030503
	v_mov_b32_e32 v5, v1                                       // 000000078888: 7E0A0301
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007888C: D73C0002 00020483
	s_mul_i32 s4, s4, s5                                       // 000000078894: 96040504
	v_mov_b32_e32 v7, v1                                       // 000000078898: 7E0E0301
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007889C: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000788A0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000788A8: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000788AC: DC6E0000 007C0002
	v_mov_b32_e32 v0, s3                                       // 0000000788B4: 7E000203
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000788B8: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000788C0: BF870111
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000788C4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000788CC: 400A0A01
	global_store_b64 v[4:5], v[0:1], off                       // 0000000788D0: DC6E0000 007C0004
	v_mov_b32_e32 v0, s4                                       // 0000000788D8: 7E000204
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000788DC: D73C0002 00020C83
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000788E4: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000788E8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000788F0: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000788F4: DC6E0000 007C0002
	s_nop 0                                                    // 0000000788FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078900: BFB60003
	s_endpgm                                                   // 000000078904: BFB00000
mul_long_get_group_id_get_work_dim_symend:
	.long 0xbf800000                                           // 000000078908: BF800000
	.long 0xbf800000                                           // 00000007890C: BF800000
	.long 0xbf800000                                           // 000000078910: BF800000
	.long 0xbf800000                                           // 000000078914: BF800000
	.long 0xbf800000                                           // 000000078918: BF800000
	.long 0xbf800000                                           // 00000007891C: BF800000
	.long 0xbf800000                                           // 000000078920: BF800000
	.long 0xbf800000                                           // 000000078924: BF800000
	.long 0xbf800000                                           // 000000078928: BF800000
	.long 0xbf800000                                           // 00000007892C: BF800000
	.long 0xbf800000                                           // 000000078930: BF800000
	.long 0xbf800000                                           // 000000078934: BF800000
	.long 0xbf800000                                           // 000000078938: BF800000
	.long 0xbf800000                                           // 00000007893C: BF800000
	.long 0xbf800000                                           // 000000078940: BF800000
	.long 0xbf800000                                           // 000000078944: BF800000
	.long 0xbf800000                                           // 000000078948: BF800000
	.long 0xbf800000                                           // 00000007894C: BF800000
	.long 0xbf800000                                           // 000000078950: BF800000
	.long 0xbf800000                                           // 000000078954: BF800000
	.long 0xbf800000                                           // 000000078958: BF800000
	.long 0xbf800000                                           // 00000007895C: BF800000
	.long 0xbf800000                                           // 000000078960: BF800000
	.long 0xbf800000                                           // 000000078964: BF800000
	.long 0xbf800000                                           // 000000078968: BF800000
	.long 0xbf800000                                           // 00000007896C: BF800000
	.long 0xbf800000                                           // 000000078970: BF800000
	.long 0xbf800000                                           // 000000078974: BF800000
	.long 0xbf800000                                           // 000000078978: BF800000
	.long 0xbf800000                                           // 00000007897C: BF800000
	.long 0xbf800000                                           // 000000078980: BF800000
	.long 0xbf800000                                           // 000000078984: BF800000
	.long 0xbf800000                                           // 000000078988: BF800000
	.long 0xbf800000                                           // 00000007898C: BF800000
	.long 0xbf800000                                           // 000000078990: BF800000
	.long 0xbf800000                                           // 000000078994: BF800000
	.long 0xbf800000                                           // 000000078998: BF800000
	.long 0xbf800000                                           // 00000007899C: BF800000
	.long 0xbf800000                                           // 0000000789A0: BF800000
	.long 0xbf800000                                           // 0000000789A4: BF800000
	.long 0xbf800000                                           // 0000000789A8: BF800000
	.long 0xbf800000                                           // 0000000789AC: BF800000
	.long 0xbf800000                                           // 0000000789B0: BF800000
	.long 0xbf800000                                           // 0000000789B4: BF800000
	.long 0xbf800000                                           // 0000000789B8: BF800000
	.long 0xbf800000                                           // 0000000789BC: BF800000
	.long 0xbf800000                                           // 0000000789C0: BF800000
	.long 0xbf800000                                           // 0000000789C4: BF800000
	.long 0xbf800000                                           // 0000000789C8: BF800000
	.long 0xbf800000                                           // 0000000789CC: BF800000
	.long 0xbf800000                                           // 0000000789D0: BF800000
	.long 0xbf800000                                           // 0000000789D4: BF800000
	.long 0xbf800000                                           // 0000000789D8: BF800000
	.long 0xbf800000                                           // 0000000789DC: BF800000
	.long 0xbf800000                                           // 0000000789E0: BF800000
	.long 0xbf800000                                           // 0000000789E4: BF800000
	.long 0xbf800000                                           // 0000000789E8: BF800000
	.long 0xbf800000                                           // 0000000789EC: BF800000
	.long 0xbf800000                                           // 0000000789F0: BF800000
	.long 0xbf800000                                           // 0000000789F4: BF800000
	.long 0xbf800000                                           // 0000000789F8: BF800000
	.long 0xbf800000                                           // 0000000789FC: BF800000

	.p2align	8
	.type	mul_long_get_local_size_get_work_dim,@function
	.size	mul_long_get_local_size_get_work_dim, mul_long_get_local_size_get_work_dim_symend-mul_long_get_local_size_get_work_dim
mul_long_get_local_size_get_work_dim:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000078A00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000078A08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000078A0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000078A10: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000078A14: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000078A18: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 000000078A1C: 840E8204
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000078A20: CA240080 010200FF 000003FF
	v_bfe_u32 v8, v0, 10, 10                                   // 000000078A2C: D6100008 02291500
	v_bfe_u32 v11, v0, 20, 10                                  // 000000078A34: D610000B 02292900
	s_mov_b32 s33, 0                                           // 000000078A3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000078A40: BF8704C3
	v_mov_b32_e32 v3, v1                                       // 000000078A44: 7E060301
	v_mov_b32_e32 v4, v1                                       // 000000078A48: 7E080301
	s_cmp_lt_u32 s2, s8                                        // 000000078A4C: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000078A50: 9802928C
	s_add_u32 s6, s5, s2                                       // 000000078A54: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000078A58: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000078A5C: BF0A0903
	global_load_u16 v7, v1, s[6:7]                             // 000000078A60: DC4A0000 07060001
	s_cselect_b32 s2, 14, 20                                   // 000000078A68: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000078A6C: BF8704D9
	s_add_u32 s2, s5, s2                                       // 000000078A70: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000078A74: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000078A78: BF0A0A04
	global_load_u16 v9, v1, s[2:3]                             // 000000078A7C: DC4A0000 09020001
	s_cselect_b32 s2, 16, 22                                   // 000000078A84: 98029690
	s_add_u32 s2, s5, s2                                       // 000000078A88: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000078A8C: 8203800B
	global_load_u16 v10, v1, s[2:3]                            // 000000078A90: DC4A0000 0A020001
	s_clause 0x3                                               // 000000078A98: BF850003
	s_load_b32 s8, s[0:1], 0x50                                // 000000078A9C: F4000200 F8000050
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000078AA4: F4080100 F8000038
	s_load_b64 s[2:3], s[0:1], 0x8                             // 000000078AAC: F4040080 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 000000078AB4: F4000000 F8000048
	s_waitcnt lgkmcnt(0)                                       // 000000078ABC: BF89FC07
	s_and_b32 s1, s8, 0xffff                                   // 000000078AC0: 8B01FF08 0000FFFF
	v_add3_u32 v2, s4, s12, v2                                 // 000000078AC8: D6550002 04081804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000078AD0: BF870131
	v_lshlrev_b64 v[5:6], 3, v[2:3]                            // 000000078AD4: D73C0005 00020483
	v_add3_u32 v3, s6, s13, v8                                 // 000000078ADC: D6550003 04201A06
	v_mov_b32_e32 v8, v1                                       // 000000078AE4: 7E100301
	v_lshlrev_b64 v[2:3], 3, v[3:4]                            // 000000078AE8: D73C0002 00020683
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000078AF0: BF8701A4
	v_add_co_u32 v5, vcc_lo, s2, v5                            // 000000078AF4: D7006A05 00020A02
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo             // 000000078AFC: 400C0C03
	v_add_co_u32 v2, vcc_lo, s2, v2                            // 000000078B00: D7006A02 00020402
	s_delay_alu instid0(VALU_DEP_4)                            // 000000078B08: BF870004
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo             // 000000078B0C: 40060603
	s_waitcnt vmcnt(2)                                         // 000000078B10: BF890BF7
	v_mul_lo_u32 v0, s1, v7                                    // 000000078B14: D72C0000 00020E01
	v_add3_u32 v7, s0, s14, v11                                // 000000078B1C: D6550007 042C1C00
	global_store_b64 v[5:6], v[0:1], off                       // 000000078B24: DC6E0000 007C0005
	s_waitcnt vmcnt(1)                                         // 000000078B2C: BF8907F7
	v_mul_lo_u32 v0, s1, v9                                    // 000000078B30: D72C0000 00021201
	v_lshlrev_b64 v[4:5], 3, v[7:8]                            // 000000078B38: D73C0004 00020E83
	global_store_b64 v[2:3], v[0:1], off                       // 000000078B40: DC6E0000 007C0002
	s_waitcnt vmcnt(0)                                         // 000000078B48: BF8903F7
	v_mul_lo_u32 v0, s1, v10                                   // 000000078B4C: D72C0000 00021401
	v_add_co_u32 v2, vcc_lo, s2, v4                            // 000000078B54: D7006A02 00020802
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v5, vcc_lo             // 000000078B5C: 40060A03
	global_store_b64 v[2:3], v[0:1], off                       // 000000078B60: DC6E0000 007C0002
	s_nop 0                                                    // 000000078B68: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078B6C: BFB60003
	s_endpgm                                                   // 000000078B70: BFB00000
mul_long_get_local_size_get_work_dim_symend:
	.long 0xbf800000                                           // 000000078B74: BF800000
	.long 0xbf800000                                           // 000000078B78: BF800000
	.long 0xbf800000                                           // 000000078B7C: BF800000
	.long 0xbf800000                                           // 000000078B80: BF800000
	.long 0xbf800000                                           // 000000078B84: BF800000
	.long 0xbf800000                                           // 000000078B88: BF800000
	.long 0xbf800000                                           // 000000078B8C: BF800000
	.long 0xbf800000                                           // 000000078B90: BF800000
	.long 0xbf800000                                           // 000000078B94: BF800000
	.long 0xbf800000                                           // 000000078B98: BF800000
	.long 0xbf800000                                           // 000000078B9C: BF800000
	.long 0xbf800000                                           // 000000078BA0: BF800000
	.long 0xbf800000                                           // 000000078BA4: BF800000
	.long 0xbf800000                                           // 000000078BA8: BF800000
	.long 0xbf800000                                           // 000000078BAC: BF800000
	.long 0xbf800000                                           // 000000078BB0: BF800000
	.long 0xbf800000                                           // 000000078BB4: BF800000
	.long 0xbf800000                                           // 000000078BB8: BF800000
	.long 0xbf800000                                           // 000000078BBC: BF800000
	.long 0xbf800000                                           // 000000078BC0: BF800000
	.long 0xbf800000                                           // 000000078BC4: BF800000
	.long 0xbf800000                                           // 000000078BC8: BF800000
	.long 0xbf800000                                           // 000000078BCC: BF800000
	.long 0xbf800000                                           // 000000078BD0: BF800000
	.long 0xbf800000                                           // 000000078BD4: BF800000
	.long 0xbf800000                                           // 000000078BD8: BF800000
	.long 0xbf800000                                           // 000000078BDC: BF800000
	.long 0xbf800000                                           // 000000078BE0: BF800000
	.long 0xbf800000                                           // 000000078BE4: BF800000
	.long 0xbf800000                                           // 000000078BE8: BF800000
	.long 0xbf800000                                           // 000000078BEC: BF800000
	.long 0xbf800000                                           // 000000078BF0: BF800000
	.long 0xbf800000                                           // 000000078BF4: BF800000
	.long 0xbf800000                                           // 000000078BF8: BF800000
	.long 0xbf800000                                           // 000000078BFC: BF800000

	.p2align	8
	.type	mul_long_get_global_id_get_work_dim,@function
	.size	mul_long_get_global_id_get_work_dim, mul_long_get_global_id_get_work_dim_symend-mul_long_get_global_id_get_work_dim
mul_long_get_global_id_get_work_dim:
	s_clause 0x3                                               // 000000078C00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078C04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000078C0C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x50                                // 000000078C14: F4000180 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000078C1C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000078C24: D6100002 02291500
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 000000078C2C: CA240080 010400FF 000003FF
	v_bfe_u32 v6, v0, 20, 10                                   // 000000078C38: D6100006 02292900
	s_mov_b32 s33, 0                                           // 000000078C40: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000078C44: BF870193
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000078C48: D6560002 04090203
	v_mov_b32_e32 v3, v1                                       // 000000078C50: 7E060301
	v_lshl_or_b32 v0, s2, 1, v4                                // 000000078C54: D6560000 04110202
	v_mov_b32_e32 v5, v1                                       // 000000078C5C: 7E0A0301
	v_lshl_or_b32 v6, s4, 2, v6                                // 000000078C60: D6560006 04190404
	v_mov_b32_e32 v7, v1                                       // 000000078C68: 7E0E0301
	s_delay_alu instid0(VALU_DEP_4)                            // 000000078C6C: BF870004
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000078C70: D73C0008 00020083
	s_waitcnt lgkmcnt(0)                                       // 000000078C78: BF89FC07
	v_add_nc_u32_e32 v4, s10, v2                               // 000000078C7C: 4A08040A
	v_add_nc_u32_e32 v6, s5, v6                                // 000000078C80: 4A0C0C05
	v_add_nc_u32_e32 v0, s8, v0                                // 000000078C84: 4A000008
	s_and_b32 s2, s6, 0xffff                                   // 000000078C88: 8B02FF06 0000FFFF
	v_add_co_u32 v8, vcc_lo, s0, v8                            // 000000078C90: D7006A08 00021000
	v_lshlrev_b64 v[10:11], 3, v[4:5]                          // 000000078C98: D73C000A 00020883
	v_add_co_ci_u32_e32 v9, vcc_lo, s1, v9, vcc_lo             // 000000078CA0: 40121201
	v_mul_lo_u32 v2, v0, s2                                    // 000000078CA4: D72C0002 00000500
	v_mul_lo_u32 v0, s2, v4                                    // 000000078CAC: D72C0000 00020802
	s_delay_alu instid0(VALU_DEP_4)                            // 000000078CB4: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v10                           // 000000078CB8: D7006A04 00021400
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v11, vcc_lo            // 000000078CC0: 400A1601
	v_lshlrev_b64 v[10:11], 3, v[6:7]                          // 000000078CC4: D73C000A 00020C83
	s_clause 0x1                                               // 000000078CCC: BF850001
	global_store_b64 v[8:9], v[2:3], off                       // 000000078CD0: DC6E0000 007C0208
	global_store_b64 v[4:5], v[0:1], off                       // 000000078CD8: DC6E0000 007C0004
	v_mul_lo_u32 v0, s2, v6                                    // 000000078CE0: D72C0000 00020C02
	v_add_co_u32 v2, vcc_lo, s0, v10                           // 000000078CE8: D7006A02 00021400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v11, vcc_lo            // 000000078CF0: 40061601
	global_store_b64 v[2:3], v[0:1], off                       // 000000078CF4: DC6E0000 007C0002
	s_nop 0                                                    // 000000078CFC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078D00: BFB60003
	s_endpgm                                                   // 000000078D04: BFB00000
mul_long_get_global_id_get_work_dim_symend:
	.long 0xbf800000                                           // 000000078D08: BF800000
	.long 0xbf800000                                           // 000000078D0C: BF800000
	.long 0xbf800000                                           // 000000078D10: BF800000
	.long 0xbf800000                                           // 000000078D14: BF800000
	.long 0xbf800000                                           // 000000078D18: BF800000
	.long 0xbf800000                                           // 000000078D1C: BF800000
	.long 0xbf800000                                           // 000000078D20: BF800000
	.long 0xbf800000                                           // 000000078D24: BF800000
	.long 0xbf800000                                           // 000000078D28: BF800000
	.long 0xbf800000                                           // 000000078D2C: BF800000
	.long 0xbf800000                                           // 000000078D30: BF800000
	.long 0xbf800000                                           // 000000078D34: BF800000
	.long 0xbf800000                                           // 000000078D38: BF800000
	.long 0xbf800000                                           // 000000078D3C: BF800000
	.long 0xbf800000                                           // 000000078D40: BF800000
	.long 0xbf800000                                           // 000000078D44: BF800000
	.long 0xbf800000                                           // 000000078D48: BF800000
	.long 0xbf800000                                           // 000000078D4C: BF800000
	.long 0xbf800000                                           // 000000078D50: BF800000
	.long 0xbf800000                                           // 000000078D54: BF800000
	.long 0xbf800000                                           // 000000078D58: BF800000
	.long 0xbf800000                                           // 000000078D5C: BF800000
	.long 0xbf800000                                           // 000000078D60: BF800000
	.long 0xbf800000                                           // 000000078D64: BF800000
	.long 0xbf800000                                           // 000000078D68: BF800000
	.long 0xbf800000                                           // 000000078D6C: BF800000
	.long 0xbf800000                                           // 000000078D70: BF800000
	.long 0xbf800000                                           // 000000078D74: BF800000
	.long 0xbf800000                                           // 000000078D78: BF800000
	.long 0xbf800000                                           // 000000078D7C: BF800000
	.long 0xbf800000                                           // 000000078D80: BF800000
	.long 0xbf800000                                           // 000000078D84: BF800000
	.long 0xbf800000                                           // 000000078D88: BF800000
	.long 0xbf800000                                           // 000000078D8C: BF800000
	.long 0xbf800000                                           // 000000078D90: BF800000
	.long 0xbf800000                                           // 000000078D94: BF800000
	.long 0xbf800000                                           // 000000078D98: BF800000
	.long 0xbf800000                                           // 000000078D9C: BF800000
	.long 0xbf800000                                           // 000000078DA0: BF800000
	.long 0xbf800000                                           // 000000078DA4: BF800000
	.long 0xbf800000                                           // 000000078DA8: BF800000
	.long 0xbf800000                                           // 000000078DAC: BF800000
	.long 0xbf800000                                           // 000000078DB0: BF800000
	.long 0xbf800000                                           // 000000078DB4: BF800000
	.long 0xbf800000                                           // 000000078DB8: BF800000
	.long 0xbf800000                                           // 000000078DBC: BF800000
	.long 0xbf800000                                           // 000000078DC0: BF800000
	.long 0xbf800000                                           // 000000078DC4: BF800000
	.long 0xbf800000                                           // 000000078DC8: BF800000
	.long 0xbf800000                                           // 000000078DCC: BF800000
	.long 0xbf800000                                           // 000000078DD0: BF800000
	.long 0xbf800000                                           // 000000078DD4: BF800000
	.long 0xbf800000                                           // 000000078DD8: BF800000
	.long 0xbf800000                                           // 000000078DDC: BF800000
	.long 0xbf800000                                           // 000000078DE0: BF800000
	.long 0xbf800000                                           // 000000078DE4: BF800000
	.long 0xbf800000                                           // 000000078DE8: BF800000
	.long 0xbf800000                                           // 000000078DEC: BF800000
	.long 0xbf800000                                           // 000000078DF0: BF800000
	.long 0xbf800000                                           // 000000078DF4: BF800000
	.long 0xbf800000                                           // 000000078DF8: BF800000
	.long 0xbf800000                                           // 000000078DFC: BF800000

	.p2align	8
	.type	mul_long_get_global_size_get_work_dim,@function
	.size	mul_long_get_global_size_get_work_dim, mul_long_get_global_size_get_work_dim_symend-mul_long_get_global_size_get_work_dim
mul_long_get_global_size_get_work_dim:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000078E00: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000078E0C: 84028402
	v_bfe_u32 v10, v0, 10, 10                                  // 000000078E10: D610000A 02291500
	v_bfe_u32 v11, v0, 20, 10                                  // 000000078E18: D610000B 02292900
	s_clause 0x1                                               // 000000078E20: BF850001
	global_load_b32 v8, v1, s[0:1] offset:34                   // 000000078E24: DC520022 08000001
	global_load_u16 v9, v1, s[0:1] offset:38                   // 000000078E2C: DC4A0026 09000001
	s_clause 0x4                                               // 000000078E34: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 000000078E38: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078E40: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000078E48: F4080300 F8000010
	s_load_b32 s6, s[0:1], 0x48                                // 000000078E50: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000078E58: F4040000 F8000000
	v_mov_b32_e32 v3, v1                                       // 000000078E60: 7E060301
	s_lshl_b32 s3, s3, 1                                       // 000000078E64: 84038103
	v_mov_b32_e32 v4, v1                                       // 000000078E68: 7E080301
	s_lshl_b32 s4, s4, 1                                       // 000000078E6C: 84048104
	s_mov_b32 s33, 0                                           // 000000078E70: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000078E74: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 000000078E78: D6550002 04080408
	s_lshl_b32 s2, s12, 4                                      // 000000078E80: 8402840C
	s_lshl_b32 s7, s13, 1                                      // 000000078E84: 8407810D
	s_waitcnt vmcnt(1)                                         // 000000078E88: BF8907F7
	v_dual_mov_b32 v5, v1 :: v_dual_and_b32 v0, 0xffff, v8     // 000000078E8C: CA240101 050010FF 0000FFFF
	v_lshlrev_b64 v[6:7], 3, v[2:3]                            // 000000078E98: D73C0006 00020483
	v_add3_u32 v3, s10, s3, v10                                // 000000078EA0: D6550003 0428060A
	v_lshrrev_b32_e32 v2, 16, v8                               // 000000078EA8: 32041090
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000078EAC: BF870144
	v_add_nc_u32_e32 v0, s2, v0                                // 000000078EB0: 4A000002
	s_and_b32 s2, s5, 0xffff                                   // 000000078EB4: 8B02FF05 0000FFFF
	s_lshl_b32 s3, s14, 1                                      // 000000078EBC: 8403810E
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 000000078EC0: D7006A06 00020C00
	v_mul_lo_u32 v0, v0, s2                                    // 000000078EC8: D72C0000 00000500
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 000000078ED0: 400E0E01
	v_add_nc_u32_e32 v8, s7, v2                                // 000000078ED4: 4A100407
	v_lshlrev_b64 v[2:3], 3, v[3:4]                            // 000000078ED8: D73C0002 00020683
	v_add3_u32 v4, s6, s4, v11                                 // 000000078EE0: D6550004 042C0806
	global_store_b64 v[6:7], v[0:1], off                       // 000000078EE8: DC6E0000 007C0006
	v_mul_lo_u32 v0, v8, s2                                    // 000000078EF0: D72C0000 00000508
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000078EF8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000078F00: 40060601
	s_waitcnt vmcnt(0)                                         // 000000078F04: BF8903F7
	v_add_nc_u32_e32 v6, s3, v9                                // 000000078F08: 4A0C1203
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000078F0C: D73C0004 00020883
	global_store_b64 v[2:3], v[0:1], off                       // 000000078F14: DC6E0000 007C0002
	v_mul_lo_u32 v0, v6, s2                                    // 000000078F1C: D72C0000 00000506
	v_add_co_u32 v2, vcc_lo, s0, v4                            // 000000078F24: D7006A02 00020800
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v5, vcc_lo             // 000000078F2C: 40060A01
	global_store_b64 v[2:3], v[0:1], off                       // 000000078F30: DC6E0000 007C0002
	s_nop 0                                                    // 000000078F38: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078F3C: BFB60003
	s_endpgm                                                   // 000000078F40: BFB00000
mul_long_get_global_size_get_work_dim_symend:
	.long 0xbf800000                                           // 000000078F44: BF800000
	.long 0xbf800000                                           // 000000078F48: BF800000
	.long 0xbf800000                                           // 000000078F4C: BF800000
	.long 0xbf800000                                           // 000000078F50: BF800000
	.long 0xbf800000                                           // 000000078F54: BF800000
	.long 0xbf800000                                           // 000000078F58: BF800000
	.long 0xbf800000                                           // 000000078F5C: BF800000
	.long 0xbf800000                                           // 000000078F60: BF800000
	.long 0xbf800000                                           // 000000078F64: BF800000
	.long 0xbf800000                                           // 000000078F68: BF800000
	.long 0xbf800000                                           // 000000078F6C: BF800000
	.long 0xbf800000                                           // 000000078F70: BF800000
	.long 0xbf800000                                           // 000000078F74: BF800000
	.long 0xbf800000                                           // 000000078F78: BF800000
	.long 0xbf800000                                           // 000000078F7C: BF800000
	.long 0xbf800000                                           // 000000078F80: BF800000
	.long 0xbf800000                                           // 000000078F84: BF800000
	.long 0xbf800000                                           // 000000078F88: BF800000
	.long 0xbf800000                                           // 000000078F8C: BF800000
	.long 0xbf800000                                           // 000000078F90: BF800000
	.long 0xbf800000                                           // 000000078F94: BF800000
	.long 0xbf800000                                           // 000000078F98: BF800000
	.long 0xbf800000                                           // 000000078F9C: BF800000
	.long 0xbf800000                                           // 000000078FA0: BF800000
	.long 0xbf800000                                           // 000000078FA4: BF800000
	.long 0xbf800000                                           // 000000078FA8: BF800000
	.long 0xbf800000                                           // 000000078FAC: BF800000
	.long 0xbf800000                                           // 000000078FB0: BF800000
	.long 0xbf800000                                           // 000000078FB4: BF800000
	.long 0xbf800000                                           // 000000078FB8: BF800000
	.long 0xbf800000                                           // 000000078FBC: BF800000
	.long 0xbf800000                                           // 000000078FC0: BF800000
	.long 0xbf800000                                           // 000000078FC4: BF800000
	.long 0xbf800000                                           // 000000078FC8: BF800000
	.long 0xbf800000                                           // 000000078FCC: BF800000
	.long 0xbf800000                                           // 000000078FD0: BF800000
	.long 0xbf800000                                           // 000000078FD4: BF800000
	.long 0xbf800000                                           // 000000078FD8: BF800000
	.long 0xbf800000                                           // 000000078FDC: BF800000
	.long 0xbf800000                                           // 000000078FE0: BF800000
	.long 0xbf800000                                           // 000000078FE4: BF800000
	.long 0xbf800000                                           // 000000078FE8: BF800000
	.long 0xbf800000                                           // 000000078FEC: BF800000
	.long 0xbf800000                                           // 000000078FF0: BF800000
	.long 0xbf800000                                           // 000000078FF4: BF800000
	.long 0xbf800000                                           // 000000078FF8: BF800000
	.long 0xbf800000                                           // 000000078FFC: BF800000

	.p2align	8
	.type	mul_long_get_num_groups_get_work_dim,@function
	.size	mul_long_get_num_groups_get_work_dim, mul_long_get_num_groups_get_work_dim_symend-mul_long_get_num_groups_get_work_dim
mul_long_get_num_groups_get_work_dim:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 000000079000: CA240080 010800FF 000003FF
	v_bfe_u32 v9, v0, 10, 10                                   // 00000007900C: D6100009 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079014: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007901C: BEA10080
	s_clause 0x1                                               // 000000079020: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000079024: DC520022 02000001
	global_load_u16 v4, v1, s[0:1] offset:38                   // 00000007902C: DC4A0026 04000001
	s_clause 0x4                                               // 000000079034: BF850004
	s_load_b32 s5, s[0:1], 0x48                                // 000000079038: F4000140 F8000048
	s_load_b32 s16, s[0:1], 0x50                               // 000000079040: F4000400 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079048: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000079050: F4080300 F8000010
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000079058: F4040180 F8000008
	s_lshl_b32 s0, s4, 2                                       // 000000079060: 84008204
	s_lshl_b32 s1, s2, 1                                       // 000000079064: 84018102
	s_lshl_b32 s2, s3, 1                                       // 000000079068: 84028103
	s_waitcnt lgkmcnt(0)                                       // 00000007906C: BF89FC07
	v_add3_u32 v6, s5, s0, v0                                  // 000000079070: D6550006 04000005
	s_waitcnt vmcnt(1)                                         // 000000079078: BF8907F7
	v_lshrrev_b32_e32 v10, 16, v2                              // 00000007907C: 32140490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000079080: 7C7A0480
	v_add3_u32 v2, s8, s1, v8                                  // 000000079084: D6550002 04200208
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007908C: BF870003
	v_cmp_ne_u16_e64 s0, 0, v10.l                              // 000000079090: D43D0000 00021480
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000079098: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007909C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v4.l                           // 0000000790A0: 7C7A0880
	s_addc_u32 s1, s12, 0                                      // 0000000790A4: 8201800C
	v_add3_u32 v4, s10, s2, v9                                 // 0000000790A8: D6550004 0424040A
	s_cmp_lg_u32 s0, 0                                         // 0000000790B0: BF078000
	s_addc_u32 s0, s13, 0                                      // 0000000790B4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000790B8: BF07806A
	s_addc_u32 s2, s14, 0                                      // 0000000790BC: 8202800E
	s_and_b32 s3, s16, 0xffff                                  // 0000000790C0: 8B03FF10 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 0000000790C8: BF870499
	s_mul_i32 s1, s1, s3                                       // 0000000790CC: 96010301
	v_dual_mov_b32 v3, v1 :: v_dual_mov_b32 v0, s1             // 0000000790D0: CA100101 03000001
	s_mul_i32 s0, s0, s3                                       // 0000000790D8: 96000300
	v_mov_b32_e32 v5, v1                                       // 0000000790DC: 7E0A0301
	s_mul_i32 s2, s2, s3                                       // 0000000790E0: 96020302
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 0000000790E4: BF870122
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 0000000790E8: D73C0002 00020483
	v_mov_b32_e32 v7, v1                                       // 0000000790F0: 7E0E0301
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 0000000790F4: D7006A02 00020406
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 0000000790FC: BF8700C3
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000079100: 40060607
	global_store_b64 v[2:3], v[0:1], off                       // 000000079104: DC6E0000 007C0002
	v_mov_b32_e32 v0, s0                                       // 00000007910C: 7E000200
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000079110: D73C0004 00020883
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000079118: D7006A04 00020806
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000079120: BF8700C2
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000079124: 400A0A07
	global_store_b64 v[4:5], v[0:1], off                       // 000000079128: DC6E0000 007C0004
	v_mov_b32_e32 v0, s2                                       // 000000079130: 7E000202
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 000000079134: D73C0002 00020C83
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 00000007913C: D7006A02 00020406
	s_delay_alu instid0(VALU_DEP_2)                            // 000000079144: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 000000079148: 40060607
	global_store_b64 v[2:3], v[0:1], off                       // 00000007914C: DC6E0000 007C0002
	s_nop 0                                                    // 000000079154: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079158: BFB60003
	s_endpgm                                                   // 00000007915C: BFB00000
mul_long_get_num_groups_get_work_dim_symend:
	.long 0xbf800000                                           // 000000079160: BF800000
	.long 0xbf800000                                           // 000000079164: BF800000
	.long 0xbf800000                                           // 000000079168: BF800000
	.long 0xbf800000                                           // 00000007916C: BF800000
	.long 0xbf800000                                           // 000000079170: BF800000
	.long 0xbf800000                                           // 000000079174: BF800000
	.long 0xbf800000                                           // 000000079178: BF800000
	.long 0xbf800000                                           // 00000007917C: BF800000
	.long 0xbf800000                                           // 000000079180: BF800000
	.long 0xbf800000                                           // 000000079184: BF800000
	.long 0xbf800000                                           // 000000079188: BF800000
	.long 0xbf800000                                           // 00000007918C: BF800000
	.long 0xbf800000                                           // 000000079190: BF800000
	.long 0xbf800000                                           // 000000079194: BF800000
	.long 0xbf800000                                           // 000000079198: BF800000
	.long 0xbf800000                                           // 00000007919C: BF800000
	.long 0xbf800000                                           // 0000000791A0: BF800000
	.long 0xbf800000                                           // 0000000791A4: BF800000
	.long 0xbf800000                                           // 0000000791A8: BF800000
	.long 0xbf800000                                           // 0000000791AC: BF800000
	.long 0xbf800000                                           // 0000000791B0: BF800000
	.long 0xbf800000                                           // 0000000791B4: BF800000
	.long 0xbf800000                                           // 0000000791B8: BF800000
	.long 0xbf800000                                           // 0000000791BC: BF800000
	.long 0xbf800000                                           // 0000000791C0: BF800000
	.long 0xbf800000                                           // 0000000791C4: BF800000
	.long 0xbf800000                                           // 0000000791C8: BF800000
	.long 0xbf800000                                           // 0000000791CC: BF800000
	.long 0xbf800000                                           // 0000000791D0: BF800000
	.long 0xbf800000                                           // 0000000791D4: BF800000
	.long 0xbf800000                                           // 0000000791D8: BF800000
	.long 0xbf800000                                           // 0000000791DC: BF800000
	.long 0xbf800000                                           // 0000000791E0: BF800000
	.long 0xbf800000                                           // 0000000791E4: BF800000
	.long 0xbf800000                                           // 0000000791E8: BF800000
	.long 0xbf800000                                           // 0000000791EC: BF800000
	.long 0xbf800000                                           // 0000000791F0: BF800000
	.long 0xbf800000                                           // 0000000791F4: BF800000
	.long 0xbf800000                                           // 0000000791F8: BF800000
	.long 0xbf800000                                           // 0000000791FC: BF800000

	.p2align	8
	.type	mul_long_get_work_dim_get_work_dim,@function
	.size	mul_long_get_work_dim_get_work_dim, mul_long_get_work_dim_get_work_dim_symend-mul_long_get_work_dim_get_work_dim
mul_long_get_work_dim_get_work_dim:
	s_clause 0x1                                               // 000000079200: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007920C: F4000140 F8000050
	s_waitcnt lgkmcnt(0)                                       // 000000079214: BF89FC07
	s_clause 0x1                                               // 000000079218: BF850001
	s_load_b32 s9, s[0:1], 0x48                                // 00000007921C: F4000240 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079224: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007922C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000079238: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007923C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079244: D6100000 02292900
	s_mov_b32 s7, 0                                            // 00000007924C: BE870080
	s_mov_b32 s33, 0                                           // 000000079250: BEA10080
	v_add3_u32 v1, s8, s2, v1                                  // 000000079254: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000007925C: 84028103
	s_and_b32 s3, s5, 0xffff                                   // 000000079260: 8B03FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079268: BF870099
	s_mul_i32 s6, s3, s3                                       // 00000007926C: 96060303
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000079270: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v5                                 // 000000079278: D6550001 0414040A
	s_lshl_b32 s2, s4, 2                                       // 000000079280: 84028204
	v_dual_mov_b32 v5, s6 :: v_dual_mov_b32 v6, s7             // 000000079284: CA100006 05060007
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 00000007928C: BF8701D2
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 000000079290: D73C0007 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000079298: BF89FC07
	v_add3_u32 v1, s9, s2, v0                                  // 00000007929C: D6550001 04000409
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000792A4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000792AC: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000792B0: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 0000000792B8: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 0000000792C0: 40101001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000792C4: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000792C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000792D0: 40020201
	s_clause 0x2                                               // 0000000792D4: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 0000000792D8: DC6E0000 007C0503
	global_store_b64 v[7:8], v[5:6], off                       // 0000000792E0: DC6E0000 007C0507
	global_store_b64 v[0:1], v[5:6], off                       // 0000000792E8: DC6E0000 007C0500
	s_nop 0                                                    // 0000000792F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000792F4: BFB60003
	s_endpgm                                                   // 0000000792F8: BFB00000
mul_long_get_work_dim_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000792FC: BF800000

	.p2align	8
	.type	mul_long_x_64,@function
	.size	mul_long_x_64, mul_long_x_64_symend-mul_long_x_64
mul_long_x_64:
	s_clause 0x2                                               // 000000079300: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 000000079304: F40000C0 F8000038
	s_load_b32 s4, s[0:1], null                                // 00000007930C: F4000100 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079314: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 00000007931C: 84028602
	s_mov_b32 s33, 0                                           // 000000079320: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079324: BF89FC07
	v_add3_u32 v2, s3, s2, v0                                  // 000000079328: D6550002 04000403
	s_mul_i32 s4, s4, s4                                       // 000000079330: 96040404
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079334: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v0, s4              // 000000079338: CA100080 01000004
	v_mov_b32_e32 v3, v1                                       // 000000079340: 7E060301
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079344: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079348: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079350: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 000000079358: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007935C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079360: DC6E0000 007C0002
	s_nop 0                                                    // 000000079368: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007936C: BFB60003
	s_endpgm                                                   // 000000079370: BFB00000
mul_long_x_64_symend:
	.long 0xbf800000                                           // 000000079374: BF800000
	.long 0xbf800000                                           // 000000079378: BF800000
	.long 0xbf800000                                           // 00000007937C: BF800000
	.long 0xbf800000                                           // 000000079380: BF800000
	.long 0xbf800000                                           // 000000079384: BF800000
	.long 0xbf800000                                           // 000000079388: BF800000
	.long 0xbf800000                                           // 00000007938C: BF800000
	.long 0xbf800000                                           // 000000079390: BF800000
	.long 0xbf800000                                           // 000000079394: BF800000
	.long 0xbf800000                                           // 000000079398: BF800000
	.long 0xbf800000                                           // 00000007939C: BF800000
	.long 0xbf800000                                           // 0000000793A0: BF800000
	.long 0xbf800000                                           // 0000000793A4: BF800000
	.long 0xbf800000                                           // 0000000793A8: BF800000
	.long 0xbf800000                                           // 0000000793AC: BF800000
	.long 0xbf800000                                           // 0000000793B0: BF800000
	.long 0xbf800000                                           // 0000000793B4: BF800000
	.long 0xbf800000                                           // 0000000793B8: BF800000
	.long 0xbf800000                                           // 0000000793BC: BF800000
	.long 0xbf800000                                           // 0000000793C0: BF800000
	.long 0xbf800000                                           // 0000000793C4: BF800000
	.long 0xbf800000                                           // 0000000793C8: BF800000
	.long 0xbf800000                                           // 0000000793CC: BF800000
	.long 0xbf800000                                           // 0000000793D0: BF800000
	.long 0xbf800000                                           // 0000000793D4: BF800000
	.long 0xbf800000                                           // 0000000793D8: BF800000
	.long 0xbf800000                                           // 0000000793DC: BF800000
	.long 0xbf800000                                           // 0000000793E0: BF800000
	.long 0xbf800000                                           // 0000000793E4: BF800000
	.long 0xbf800000                                           // 0000000793E8: BF800000
	.long 0xbf800000                                           // 0000000793EC: BF800000
	.long 0xbf800000                                           // 0000000793F0: BF800000
	.long 0xbf800000                                           // 0000000793F4: BF800000
	.long 0xbf800000                                           // 0000000793F8: BF800000
	.long 0xbf800000                                           // 0000000793FC: BF800000

	.p2align	8
	.type	mul_long_get_global_offset_64,@function
	.size	mul_long_get_global_offset_64, mul_long_get_global_offset_64_symend-mul_long_get_global_offset_64
mul_long_get_global_offset_64:
	s_clause 0x1                                               // 000000079400: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000079404: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007940C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 000000079414: 84028602
	s_mov_b32 s33, 0                                           // 000000079418: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007941C: BF89FC07
	v_add3_u32 v2, s3, s2, v0                                  // 000000079420: D6550002 04000403
	s_mul_i32 s3, s3, s3                                       // 000000079428: 96030303
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007942C: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v0, s3              // 000000079430: CA100080 01000003
	v_mov_b32_e32 v3, v1                                       // 000000079438: 7E060301
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007943C: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079440: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079448: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 000000079450: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079454: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079458: DC6E0000 007C0002
	s_nop 0                                                    // 000000079460: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079464: BFB60003
	s_endpgm                                                   // 000000079468: BFB00000
mul_long_get_global_offset_64_symend:
	.long 0xbf800000                                           // 00000007946C: BF800000
	.long 0xbf800000                                           // 000000079470: BF800000
	.long 0xbf800000                                           // 000000079474: BF800000
	.long 0xbf800000                                           // 000000079478: BF800000
	.long 0xbf800000                                           // 00000007947C: BF800000
	.long 0xbf800000                                           // 000000079480: BF800000
	.long 0xbf800000                                           // 000000079484: BF800000
	.long 0xbf800000                                           // 000000079488: BF800000
	.long 0xbf800000                                           // 00000007948C: BF800000
	.long 0xbf800000                                           // 000000079490: BF800000
	.long 0xbf800000                                           // 000000079494: BF800000
	.long 0xbf800000                                           // 000000079498: BF800000
	.long 0xbf800000                                           // 00000007949C: BF800000
	.long 0xbf800000                                           // 0000000794A0: BF800000
	.long 0xbf800000                                           // 0000000794A4: BF800000
	.long 0xbf800000                                           // 0000000794A8: BF800000
	.long 0xbf800000                                           // 0000000794AC: BF800000
	.long 0xbf800000                                           // 0000000794B0: BF800000
	.long 0xbf800000                                           // 0000000794B4: BF800000
	.long 0xbf800000                                           // 0000000794B8: BF800000
	.long 0xbf800000                                           // 0000000794BC: BF800000
	.long 0xbf800000                                           // 0000000794C0: BF800000
	.long 0xbf800000                                           // 0000000794C4: BF800000
	.long 0xbf800000                                           // 0000000794C8: BF800000
	.long 0xbf800000                                           // 0000000794CC: BF800000
	.long 0xbf800000                                           // 0000000794D0: BF800000
	.long 0xbf800000                                           // 0000000794D4: BF800000
	.long 0xbf800000                                           // 0000000794D8: BF800000
	.long 0xbf800000                                           // 0000000794DC: BF800000
	.long 0xbf800000                                           // 0000000794E0: BF800000
	.long 0xbf800000                                           // 0000000794E4: BF800000
	.long 0xbf800000                                           // 0000000794E8: BF800000
	.long 0xbf800000                                           // 0000000794EC: BF800000
	.long 0xbf800000                                           // 0000000794F0: BF800000
	.long 0xbf800000                                           // 0000000794F4: BF800000
	.long 0xbf800000                                           // 0000000794F8: BF800000
	.long 0xbf800000                                           // 0000000794FC: BF800000

	.p2align	8
	.type	mul_long_get_local_id_64,@function
	.size	mul_long_get_local_id_64, mul_long_get_local_id_64_symend-mul_long_get_local_id_64
mul_long_get_local_id_64:
	s_clause 0x1                                               // 000000079500: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000079504: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007950C: F4040000 F8000008
	v_mov_b32_e32 v1, 0                                        // 000000079514: 7E020280
	s_lshl_b32 s2, s2, 6                                       // 000000079518: 84028602
	s_mov_b32 s33, 0                                           // 00000007951C: BEA10080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000079520: BF870141
	v_mov_b32_e32 v3, v1                                       // 000000079524: 7E060301
	s_waitcnt lgkmcnt(0)                                       // 000000079528: BF89FC07
	v_add3_u32 v2, s3, s2, v0                                  // 00000007952C: D6550002 04000403
	v_mul_u32_u24_e32 v0, v0, v0                               // 000000079534: 16000100
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079538: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000079540: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079544: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007954C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079550: DC6E0000 007C0002
	s_nop 0                                                    // 000000079558: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007955C: BFB60003
	s_endpgm                                                   // 000000079560: BFB00000
mul_long_get_local_id_64_symend:
	.long 0xbf800000                                           // 000000079564: BF800000
	.long 0xbf800000                                           // 000000079568: BF800000
	.long 0xbf800000                                           // 00000007956C: BF800000
	.long 0xbf800000                                           // 000000079570: BF800000
	.long 0xbf800000                                           // 000000079574: BF800000
	.long 0xbf800000                                           // 000000079578: BF800000
	.long 0xbf800000                                           // 00000007957C: BF800000
	.long 0xbf800000                                           // 000000079580: BF800000
	.long 0xbf800000                                           // 000000079584: BF800000
	.long 0xbf800000                                           // 000000079588: BF800000
	.long 0xbf800000                                           // 00000007958C: BF800000
	.long 0xbf800000                                           // 000000079590: BF800000
	.long 0xbf800000                                           // 000000079594: BF800000
	.long 0xbf800000                                           // 000000079598: BF800000
	.long 0xbf800000                                           // 00000007959C: BF800000
	.long 0xbf800000                                           // 0000000795A0: BF800000
	.long 0xbf800000                                           // 0000000795A4: BF800000
	.long 0xbf800000                                           // 0000000795A8: BF800000
	.long 0xbf800000                                           // 0000000795AC: BF800000
	.long 0xbf800000                                           // 0000000795B0: BF800000
	.long 0xbf800000                                           // 0000000795B4: BF800000
	.long 0xbf800000                                           // 0000000795B8: BF800000
	.long 0xbf800000                                           // 0000000795BC: BF800000
	.long 0xbf800000                                           // 0000000795C0: BF800000
	.long 0xbf800000                                           // 0000000795C4: BF800000
	.long 0xbf800000                                           // 0000000795C8: BF800000
	.long 0xbf800000                                           // 0000000795CC: BF800000
	.long 0xbf800000                                           // 0000000795D0: BF800000
	.long 0xbf800000                                           // 0000000795D4: BF800000
	.long 0xbf800000                                           // 0000000795D8: BF800000
	.long 0xbf800000                                           // 0000000795DC: BF800000
	.long 0xbf800000                                           // 0000000795E0: BF800000
	.long 0xbf800000                                           // 0000000795E4: BF800000
	.long 0xbf800000                                           // 0000000795E8: BF800000
	.long 0xbf800000                                           // 0000000795EC: BF800000
	.long 0xbf800000                                           // 0000000795F0: BF800000
	.long 0xbf800000                                           // 0000000795F4: BF800000
	.long 0xbf800000                                           // 0000000795F8: BF800000
	.long 0xbf800000                                           // 0000000795FC: BF800000

	.p2align	8
	.type	mul_long_get_group_id_64,@function
	.size	mul_long_get_group_id_64, mul_long_get_group_id_64_symend-mul_long_get_group_id_64
mul_long_get_group_id_64:
	s_clause 0x1                                               // 000000079600: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000079604: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007960C: F4040000 F8000008
	s_lshl_b32 s4, s2, 6                                       // 000000079614: 84048602
	s_mul_i32 s2, s2, s2                                       // 000000079618: 96020202
	v_mov_b32_e32 v1, 0                                        // 00000007961C: 7E020280
	s_mov_b32 s33, 0                                           // 000000079620: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079624: BF89FC07
	v_add3_u32 v2, s3, s4, v0                                  // 000000079628: D6550002 04000803
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079630: BF870092
	v_dual_mov_b32 v0, s2 :: v_dual_mov_b32 v3, v1             // 000000079634: CA100002 00020101
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007963C: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000079644: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079648: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079650: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079654: DC6E0000 007C0002
	s_nop 0                                                    // 00000007965C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079660: BFB60003
	s_endpgm                                                   // 000000079664: BFB00000
mul_long_get_group_id_64_symend:
	.long 0xbf800000                                           // 000000079668: BF800000
	.long 0xbf800000                                           // 00000007966C: BF800000
	.long 0xbf800000                                           // 000000079670: BF800000
	.long 0xbf800000                                           // 000000079674: BF800000
	.long 0xbf800000                                           // 000000079678: BF800000
	.long 0xbf800000                                           // 00000007967C: BF800000
	.long 0xbf800000                                           // 000000079680: BF800000
	.long 0xbf800000                                           // 000000079684: BF800000
	.long 0xbf800000                                           // 000000079688: BF800000
	.long 0xbf800000                                           // 00000007968C: BF800000
	.long 0xbf800000                                           // 000000079690: BF800000
	.long 0xbf800000                                           // 000000079694: BF800000
	.long 0xbf800000                                           // 000000079698: BF800000
	.long 0xbf800000                                           // 00000007969C: BF800000
	.long 0xbf800000                                           // 0000000796A0: BF800000
	.long 0xbf800000                                           // 0000000796A4: BF800000
	.long 0xbf800000                                           // 0000000796A8: BF800000
	.long 0xbf800000                                           // 0000000796AC: BF800000
	.long 0xbf800000                                           // 0000000796B0: BF800000
	.long 0xbf800000                                           // 0000000796B4: BF800000
	.long 0xbf800000                                           // 0000000796B8: BF800000
	.long 0xbf800000                                           // 0000000796BC: BF800000
	.long 0xbf800000                                           // 0000000796C0: BF800000
	.long 0xbf800000                                           // 0000000796C4: BF800000
	.long 0xbf800000                                           // 0000000796C8: BF800000
	.long 0xbf800000                                           // 0000000796CC: BF800000
	.long 0xbf800000                                           // 0000000796D0: BF800000
	.long 0xbf800000                                           // 0000000796D4: BF800000
	.long 0xbf800000                                           // 0000000796D8: BF800000
	.long 0xbf800000                                           // 0000000796DC: BF800000
	.long 0xbf800000                                           // 0000000796E0: BF800000
	.long 0xbf800000                                           // 0000000796E4: BF800000
	.long 0xbf800000                                           // 0000000796E8: BF800000
	.long 0xbf800000                                           // 0000000796EC: BF800000
	.long 0xbf800000                                           // 0000000796F0: BF800000
	.long 0xbf800000                                           // 0000000796F4: BF800000
	.long 0xbf800000                                           // 0000000796F8: BF800000
	.long 0xbf800000                                           // 0000000796FC: BF800000

	.p2align	8
	.type	mul_long_get_local_size_64,@function
	.size	mul_long_get_local_size_64, mul_long_get_local_size_64_symend-mul_long_get_local_size_64
mul_long_get_local_size_64:
	s_clause 0x1                                               // 000000079700: BF850001
	s_load_b32 s3, s[0:1], 0x10                                // 000000079704: F40000C0 F8000010
	s_load_b32 s5, s[0:1], 0x38                                // 00000007970C: F4000140 F8000038
	s_add_u32 s4, s0, 16                                       // 000000079714: 80049000
	s_addc_u32 s6, s1, 0                                       // 000000079718: 82068001
	s_lshl_b32 s7, s2, 6                                       // 00000007971C: 84078602
	v_mov_b32_e32 v1, 0                                        // 000000079720: 7E020280
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079724: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000007972C: BEA10080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000079730: BF8704D1
	v_mov_b32_e32 v3, v1                                       // 000000079734: 7E060301
	s_waitcnt lgkmcnt(0)                                       // 000000079738: BF89FC07
	s_cmp_lt_u32 s2, s3                                        // 00000007973C: BF0A0302
	v_add3_u32 v2, s5, s7, v0                                  // 000000079740: D6550002 04000E05
	s_cselect_b32 s2, 12, 18                                   // 000000079748: 9802928C
	s_add_u32 s2, s4, s2                                       // 00000007974C: 80020204
	s_addc_u32 s3, s6, 0                                       // 000000079750: 82038006
	s_delay_alu instid0(VALU_DEP_1)                            // 000000079754: BF870001
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079758: D73C0002 00020483
	global_load_u16 v4, v1, s[2:3]                             // 000000079760: DC4A0000 04020001
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079768: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079770: 40060601
	s_waitcnt vmcnt(0)                                         // 000000079774: BF8903F7
	v_mul_lo_u32 v0, v4, v4                                    // 000000079778: D72C0000 00020904
	global_store_b64 v[2:3], v[0:1], off                       // 000000079780: DC6E0000 007C0002
	s_nop 0                                                    // 000000079788: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007978C: BFB60003
	s_endpgm                                                   // 000000079790: BFB00000
mul_long_get_local_size_64_symend:
	.long 0xbf800000                                           // 000000079794: BF800000
	.long 0xbf800000                                           // 000000079798: BF800000
	.long 0xbf800000                                           // 00000007979C: BF800000
	.long 0xbf800000                                           // 0000000797A0: BF800000
	.long 0xbf800000                                           // 0000000797A4: BF800000
	.long 0xbf800000                                           // 0000000797A8: BF800000
	.long 0xbf800000                                           // 0000000797AC: BF800000
	.long 0xbf800000                                           // 0000000797B0: BF800000
	.long 0xbf800000                                           // 0000000797B4: BF800000
	.long 0xbf800000                                           // 0000000797B8: BF800000
	.long 0xbf800000                                           // 0000000797BC: BF800000
	.long 0xbf800000                                           // 0000000797C0: BF800000
	.long 0xbf800000                                           // 0000000797C4: BF800000
	.long 0xbf800000                                           // 0000000797C8: BF800000
	.long 0xbf800000                                           // 0000000797CC: BF800000
	.long 0xbf800000                                           // 0000000797D0: BF800000
	.long 0xbf800000                                           // 0000000797D4: BF800000
	.long 0xbf800000                                           // 0000000797D8: BF800000
	.long 0xbf800000                                           // 0000000797DC: BF800000
	.long 0xbf800000                                           // 0000000797E0: BF800000
	.long 0xbf800000                                           // 0000000797E4: BF800000
	.long 0xbf800000                                           // 0000000797E8: BF800000
	.long 0xbf800000                                           // 0000000797EC: BF800000
	.long 0xbf800000                                           // 0000000797F0: BF800000
	.long 0xbf800000                                           // 0000000797F4: BF800000
	.long 0xbf800000                                           // 0000000797F8: BF800000
	.long 0xbf800000                                           // 0000000797FC: BF800000

	.p2align	8
	.type	mul_long_get_global_id_64,@function
	.size	mul_long_get_global_id_64, mul_long_get_global_id_64_symend-mul_long_get_global_id_64
mul_long_get_global_id_64:
	s_clause 0x1                                               // 000000079800: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000079804: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007980C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000079814: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000007981C: 7E020280
	s_mov_b32 s33, 0                                           // 000000079820: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079824: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079828: BF870091
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s3, v0      // 00000007982C: CA200101 03020003
	v_mul_lo_u32 v0, v2, v2                                    // 000000079834: D72C0000 00020502
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007983C: BF870092
	v_lshlrev_b64 v[3:4], 3, v[2:3]                            // 000000079840: D73C0003 00020483
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 000000079848: D7006A02 00020600
	s_delay_alu instid0(VALU_DEP_2)                            // 000000079850: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v4, vcc_lo             // 000000079854: 40060801
	global_store_b64 v[2:3], v[0:1], off                       // 000000079858: DC6E0000 007C0002
	s_nop 0                                                    // 000000079860: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079864: BFB60003
	s_endpgm                                                   // 000000079868: BFB00000
mul_long_get_global_id_64_symend:
	.long 0xbf800000                                           // 00000007986C: BF800000
	.long 0xbf800000                                           // 000000079870: BF800000
	.long 0xbf800000                                           // 000000079874: BF800000
	.long 0xbf800000                                           // 000000079878: BF800000
	.long 0xbf800000                                           // 00000007987C: BF800000
	.long 0xbf800000                                           // 000000079880: BF800000
	.long 0xbf800000                                           // 000000079884: BF800000
	.long 0xbf800000                                           // 000000079888: BF800000
	.long 0xbf800000                                           // 00000007988C: BF800000
	.long 0xbf800000                                           // 000000079890: BF800000
	.long 0xbf800000                                           // 000000079894: BF800000
	.long 0xbf800000                                           // 000000079898: BF800000
	.long 0xbf800000                                           // 00000007989C: BF800000
	.long 0xbf800000                                           // 0000000798A0: BF800000
	.long 0xbf800000                                           // 0000000798A4: BF800000
	.long 0xbf800000                                           // 0000000798A8: BF800000
	.long 0xbf800000                                           // 0000000798AC: BF800000
	.long 0xbf800000                                           // 0000000798B0: BF800000
	.long 0xbf800000                                           // 0000000798B4: BF800000
	.long 0xbf800000                                           // 0000000798B8: BF800000
	.long 0xbf800000                                           // 0000000798BC: BF800000
	.long 0xbf800000                                           // 0000000798C0: BF800000
	.long 0xbf800000                                           // 0000000798C4: BF800000
	.long 0xbf800000                                           // 0000000798C8: BF800000
	.long 0xbf800000                                           // 0000000798CC: BF800000
	.long 0xbf800000                                           // 0000000798D0: BF800000
	.long 0xbf800000                                           // 0000000798D4: BF800000
	.long 0xbf800000                                           // 0000000798D8: BF800000
	.long 0xbf800000                                           // 0000000798DC: BF800000
	.long 0xbf800000                                           // 0000000798E0: BF800000
	.long 0xbf800000                                           // 0000000798E4: BF800000
	.long 0xbf800000                                           // 0000000798E8: BF800000
	.long 0xbf800000                                           // 0000000798EC: BF800000
	.long 0xbf800000                                           // 0000000798F0: BF800000
	.long 0xbf800000                                           // 0000000798F4: BF800000
	.long 0xbf800000                                           // 0000000798F8: BF800000
	.long 0xbf800000                                           // 0000000798FC: BF800000

	.p2align	8
	.type	mul_long_get_global_size_64,@function
	.size	mul_long_get_global_size_64, mul_long_get_global_size_64_symend-mul_long_get_global_size_64
mul_long_get_global_size_64:
	s_clause 0x3                                               // 000000079900: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 000000079904: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x10                                // 00000007990C: F4000100 F8000010
	s_load_b32 s5, s[0:1], 0x20                                // 000000079914: F4000140 F8000020
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007991C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 000000079924: 84028602
	s_mov_b32 s33, 0                                           // 000000079928: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007992C: BF89FC07
	v_add3_u32 v2, s3, s2, v0                                  // 000000079930: D6550002 04000403
	s_lshl_b32 s2, s4, 6                                       // 000000079938: 84028604
	s_lshr_b32 s3, s5, 16                                      // 00000007993C: 85039005
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 000000079940: BF870499
	s_add_i32 s2, s2, s3                                       // 000000079944: 81020302
	s_mul_i32 s2, s2, s2                                       // 000000079948: 96020202
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007994C: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v0, s2              // 000000079950: CA100080 01000002
	v_mov_b32_e32 v3, v1                                       // 000000079958: 7E060301
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007995C: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079960: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079968: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 000000079970: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079974: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079978: DC6E0000 007C0002
	s_nop 0                                                    // 000000079980: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079984: BFB60003
	s_endpgm                                                   // 000000079988: BFB00000
mul_long_get_global_size_64_symend:
	.long 0xbf800000                                           // 00000007998C: BF800000
	.long 0xbf800000                                           // 000000079990: BF800000
	.long 0xbf800000                                           // 000000079994: BF800000
	.long 0xbf800000                                           // 000000079998: BF800000
	.long 0xbf800000                                           // 00000007999C: BF800000
	.long 0xbf800000                                           // 0000000799A0: BF800000
	.long 0xbf800000                                           // 0000000799A4: BF800000
	.long 0xbf800000                                           // 0000000799A8: BF800000
	.long 0xbf800000                                           // 0000000799AC: BF800000
	.long 0xbf800000                                           // 0000000799B0: BF800000
	.long 0xbf800000                                           // 0000000799B4: BF800000
	.long 0xbf800000                                           // 0000000799B8: BF800000
	.long 0xbf800000                                           // 0000000799BC: BF800000
	.long 0xbf800000                                           // 0000000799C0: BF800000
	.long 0xbf800000                                           // 0000000799C4: BF800000
	.long 0xbf800000                                           // 0000000799C8: BF800000
	.long 0xbf800000                                           // 0000000799CC: BF800000
	.long 0xbf800000                                           // 0000000799D0: BF800000
	.long 0xbf800000                                           // 0000000799D4: BF800000
	.long 0xbf800000                                           // 0000000799D8: BF800000
	.long 0xbf800000                                           // 0000000799DC: BF800000
	.long 0xbf800000                                           // 0000000799E0: BF800000
	.long 0xbf800000                                           // 0000000799E4: BF800000
	.long 0xbf800000                                           // 0000000799E8: BF800000
	.long 0xbf800000                                           // 0000000799EC: BF800000
	.long 0xbf800000                                           // 0000000799F0: BF800000
	.long 0xbf800000                                           // 0000000799F4: BF800000
	.long 0xbf800000                                           // 0000000799F8: BF800000
	.long 0xbf800000                                           // 0000000799FC: BF800000

	.p2align	8
	.type	mul_long_get_num_groups_64,@function
	.size	mul_long_get_num_groups_64, mul_long_get_num_groups_64_symend-mul_long_get_num_groups_64
mul_long_get_num_groups_64:
	s_clause 0x3                                               // 000000079A00: BF850003
	s_load_b32 s3, s[0:1], 0x20                                // 000000079A04: F40000C0 F8000020
	s_load_b32 s4, s[0:1], 0x38                                // 000000079A0C: F4000100 F8000038
	s_load_b32 s5, s[0:1], 0x10                                // 000000079A14: F4000140 F8000010
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079A1C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 000000079A24: 84028602
	s_mov_b32 s33, 0                                           // 000000079A28: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079A2C: BF89FC07
	s_lshr_b32 s3, s3, 16                                      // 000000079A30: 85039003
	v_add3_u32 v2, s4, s2, v0                                  // 000000079A34: D6550002 04000404
	v_cmp_ne_u16_e64 s3, s3, 0                                 // 000000079A3C: D43D0003 00010003
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000079A44: BF8704A1
	s_cmp_lg_u32 s3, 0                                         // 000000079A48: BF078003
	s_addc_u32 s2, s5, 0                                       // 000000079A4C: 82028005
	s_mul_i32 s2, s2, s2                                       // 000000079A50: 96020202
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079A54: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v0, s2              // 000000079A58: CA100080 01000002
	v_mov_b32_e32 v3, v1                                       // 000000079A60: 7E060301
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079A64: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079A68: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079A70: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 000000079A78: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079A7C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079A80: DC6E0000 007C0002
	s_nop 0                                                    // 000000079A88: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079A8C: BFB60003
	s_endpgm                                                   // 000000079A90: BFB00000
mul_long_get_num_groups_64_symend:
	.long 0xbf800000                                           // 000000079A94: BF800000
	.long 0xbf800000                                           // 000000079A98: BF800000
	.long 0xbf800000                                           // 000000079A9C: BF800000
	.long 0xbf800000                                           // 000000079AA0: BF800000
	.long 0xbf800000                                           // 000000079AA4: BF800000
	.long 0xbf800000                                           // 000000079AA8: BF800000
	.long 0xbf800000                                           // 000000079AAC: BF800000
	.long 0xbf800000                                           // 000000079AB0: BF800000
	.long 0xbf800000                                           // 000000079AB4: BF800000
	.long 0xbf800000                                           // 000000079AB8: BF800000
	.long 0xbf800000                                           // 000000079ABC: BF800000
	.long 0xbf800000                                           // 000000079AC0: BF800000
	.long 0xbf800000                                           // 000000079AC4: BF800000
	.long 0xbf800000                                           // 000000079AC8: BF800000
	.long 0xbf800000                                           // 000000079ACC: BF800000
	.long 0xbf800000                                           // 000000079AD0: BF800000
	.long 0xbf800000                                           // 000000079AD4: BF800000
	.long 0xbf800000                                           // 000000079AD8: BF800000
	.long 0xbf800000                                           // 000000079ADC: BF800000
	.long 0xbf800000                                           // 000000079AE0: BF800000
	.long 0xbf800000                                           // 000000079AE4: BF800000
	.long 0xbf800000                                           // 000000079AE8: BF800000
	.long 0xbf800000                                           // 000000079AEC: BF800000
	.long 0xbf800000                                           // 000000079AF0: BF800000
	.long 0xbf800000                                           // 000000079AF4: BF800000
	.long 0xbf800000                                           // 000000079AF8: BF800000
	.long 0xbf800000                                           // 000000079AFC: BF800000

	.p2align	8
	.type	mul_long_get_work_dim,@function
	.size	mul_long_get_work_dim, mul_long_get_work_dim_symend-mul_long_get_work_dim
mul_long_get_work_dim:
	s_clause 0x2                                               // 000000079B00: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 000000079B04: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x50                                // 000000079B0C: F4000100 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079B14: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 000000079B1C: 84028602
	s_mov_b32 s33, 0                                           // 000000079B20: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079B24: BF89FC07
	v_add3_u32 v2, s3, s2, v0                                  // 000000079B28: D6550002 04000403
	s_and_b32 s2, s4, 0xffff                                   // 000000079B30: 8B02FF04 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 000000079B38: BF870499
	s_mul_i32 s2, s2, s2                                       // 000000079B3C: 96020202
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v0, s2              // 000000079B40: CA100080 01000002
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079B48: BF870091
	v_mov_b32_e32 v3, v1                                       // 000000079B4C: 7E060301
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079B50: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000079B58: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079B5C: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079B64: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079B68: DC6E0000 007C0002
	s_nop 0                                                    // 000000079B70: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079B74: BFB60003
	s_endpgm                                                   // 000000079B78: BFB00000
mul_long_get_work_dim_symend:
	.long 0xbf800000                                           // 000000079B7C: BF800000
	.long 0xbf800000                                           // 000000079B80: BF800000
	.long 0xbf800000                                           // 000000079B84: BF800000
	.long 0xbf800000                                           // 000000079B88: BF800000
	.long 0xbf800000                                           // 000000079B8C: BF800000
	.long 0xbf800000                                           // 000000079B90: BF800000
	.long 0xbf800000                                           // 000000079B94: BF800000
	.long 0xbf800000                                           // 000000079B98: BF800000
	.long 0xbf800000                                           // 000000079B9C: BF800000
	.long 0xbf800000                                           // 000000079BA0: BF800000
	.long 0xbf800000                                           // 000000079BA4: BF800000
	.long 0xbf800000                                           // 000000079BA8: BF800000
	.long 0xbf800000                                           // 000000079BAC: BF800000
	.long 0xbf800000                                           // 000000079BB0: BF800000
	.long 0xbf800000                                           // 000000079BB4: BF800000
	.long 0xbf800000                                           // 000000079BB8: BF800000
	.long 0xbf800000                                           // 000000079BBC: BF800000
	.long 0xbf800000                                           // 000000079BC0: BF800000
	.long 0xbf800000                                           // 000000079BC4: BF800000
	.long 0xbf800000                                           // 000000079BC8: BF800000
	.long 0xbf800000                                           // 000000079BCC: BF800000
	.long 0xbf800000                                           // 000000079BD0: BF800000
	.long 0xbf800000                                           // 000000079BD4: BF800000
	.long 0xbf800000                                           // 000000079BD8: BF800000
	.long 0xbf800000                                           // 000000079BDC: BF800000
	.long 0xbf800000                                           // 000000079BE0: BF800000
	.long 0xbf800000                                           // 000000079BE4: BF800000
	.long 0xbf800000                                           // 000000079BE8: BF800000
	.long 0xbf800000                                           // 000000079BEC: BF800000
	.long 0xbf800000                                           // 000000079BF0: BF800000
	.long 0xbf800000                                           // 000000079BF4: BF800000
	.long 0xbf800000                                           // 000000079BF8: BF800000
	.long 0xbf800000                                           // 000000079BFC: BF800000

	.p2align	8
	.type	mul_long_x_8_8,@function
	.size	mul_long_x_8_8, mul_long_x_8_8_symend-mul_long_x_8_8
mul_long_x_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000079C00: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000079C08: BF89FC07
	s_clause 0x1                                               // 000000079C0C: BF850001
	s_load_b32 s5, s[0:1], null                                // 000000079C10: F4000140 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079C18: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000079C20: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000079C2C: 84028302
	v_bfe_u32 v0, v0, 10, 10                                   // 000000079C30: D6100000 02291500
	s_mov_b32 s33, 0                                           // 000000079C38: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 000000079C3C: BF8704B2
	v_mov_b32_e32 v3, v1                                       // 000000079C40: 7E060301
	v_add3_u32 v2, s4, s2, v2                                  // 000000079C44: D6550002 04080404
	s_lshl_b32 s2, s3, 3                                       // 000000079C4C: 84028303
	v_add3_u32 v0, s6, s2, v0                                  // 000000079C50: D6550000 04000406
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000079C58: BF870122
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079C5C: D73C0002 00020483
	s_waitcnt lgkmcnt(0)                                       // 000000079C64: BF89FC07
	v_mul_lo_u32 v0, v0, s5                                    // 000000079C68: D72C0000 00000B00
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000079C70: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079C74: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079C7C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079C80: DC6E0000 007C0002
	s_nop 0                                                    // 000000079C88: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079C8C: BFB60003
	s_endpgm                                                   // 000000079C90: BFB00000
mul_long_x_8_8_symend:
	.long 0xbf800000                                           // 000000079C94: BF800000
	.long 0xbf800000                                           // 000000079C98: BF800000
	.long 0xbf800000                                           // 000000079C9C: BF800000
	.long 0xbf800000                                           // 000000079CA0: BF800000
	.long 0xbf800000                                           // 000000079CA4: BF800000
	.long 0xbf800000                                           // 000000079CA8: BF800000
	.long 0xbf800000                                           // 000000079CAC: BF800000
	.long 0xbf800000                                           // 000000079CB0: BF800000
	.long 0xbf800000                                           // 000000079CB4: BF800000
	.long 0xbf800000                                           // 000000079CB8: BF800000
	.long 0xbf800000                                           // 000000079CBC: BF800000
	.long 0xbf800000                                           // 000000079CC0: BF800000
	.long 0xbf800000                                           // 000000079CC4: BF800000
	.long 0xbf800000                                           // 000000079CC8: BF800000
	.long 0xbf800000                                           // 000000079CCC: BF800000
	.long 0xbf800000                                           // 000000079CD0: BF800000
	.long 0xbf800000                                           // 000000079CD4: BF800000
	.long 0xbf800000                                           // 000000079CD8: BF800000
	.long 0xbf800000                                           // 000000079CDC: BF800000
	.long 0xbf800000                                           // 000000079CE0: BF800000
	.long 0xbf800000                                           // 000000079CE4: BF800000
	.long 0xbf800000                                           // 000000079CE8: BF800000
	.long 0xbf800000                                           // 000000079CEC: BF800000
	.long 0xbf800000                                           // 000000079CF0: BF800000
	.long 0xbf800000                                           // 000000079CF4: BF800000
	.long 0xbf800000                                           // 000000079CF8: BF800000
	.long 0xbf800000                                           // 000000079CFC: BF800000

	.p2align	8
	.type	mul_long_get_global_offset_8_8,@function
	.size	mul_long_get_global_offset_8_8, mul_long_get_global_offset_8_8_symend-mul_long_get_global_offset_8_8
mul_long_get_global_offset_8_8:
	s_clause 0x1                                               // 000000079D00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000079D04: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079D0C: F4040000 F8000008
	s_lshl_b32 s2, s2, 3                                       // 000000079D14: 84028302
	s_mov_b32 s33, 0                                           // 000000079D18: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079D1C: BF89FC07
	v_add3_u32 v2, s4, s2, v0                                  // 000000079D20: D6550002 04000404
	s_mul_i32 s2, s6, s4                                       // 000000079D28: 96020406
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079D2C: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v0, s2              // 000000079D30: CA100080 01000002
	v_mov_b32_e32 v3, v1                                       // 000000079D38: 7E060301
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079D3C: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079D40: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079D48: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 000000079D50: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079D54: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079D58: DC6E0000 007C0002
	s_nop 0                                                    // 000000079D60: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079D64: BFB60003
	s_endpgm                                                   // 000000079D68: BFB00000
mul_long_get_global_offset_8_8_symend:
	.long 0xbf800000                                           // 000000079D6C: BF800000
	.long 0xbf800000                                           // 000000079D70: BF800000
	.long 0xbf800000                                           // 000000079D74: BF800000
	.long 0xbf800000                                           // 000000079D78: BF800000
	.long 0xbf800000                                           // 000000079D7C: BF800000
	.long 0xbf800000                                           // 000000079D80: BF800000
	.long 0xbf800000                                           // 000000079D84: BF800000
	.long 0xbf800000                                           // 000000079D88: BF800000
	.long 0xbf800000                                           // 000000079D8C: BF800000
	.long 0xbf800000                                           // 000000079D90: BF800000
	.long 0xbf800000                                           // 000000079D94: BF800000
	.long 0xbf800000                                           // 000000079D98: BF800000
	.long 0xbf800000                                           // 000000079D9C: BF800000
	.long 0xbf800000                                           // 000000079DA0: BF800000
	.long 0xbf800000                                           // 000000079DA4: BF800000
	.long 0xbf800000                                           // 000000079DA8: BF800000
	.long 0xbf800000                                           // 000000079DAC: BF800000
	.long 0xbf800000                                           // 000000079DB0: BF800000
	.long 0xbf800000                                           // 000000079DB4: BF800000
	.long 0xbf800000                                           // 000000079DB8: BF800000
	.long 0xbf800000                                           // 000000079DBC: BF800000
	.long 0xbf800000                                           // 000000079DC0: BF800000
	.long 0xbf800000                                           // 000000079DC4: BF800000
	.long 0xbf800000                                           // 000000079DC8: BF800000
	.long 0xbf800000                                           // 000000079DCC: BF800000
	.long 0xbf800000                                           // 000000079DD0: BF800000
	.long 0xbf800000                                           // 000000079DD4: BF800000
	.long 0xbf800000                                           // 000000079DD8: BF800000
	.long 0xbf800000                                           // 000000079DDC: BF800000
	.long 0xbf800000                                           // 000000079DE0: BF800000
	.long 0xbf800000                                           // 000000079DE4: BF800000
	.long 0xbf800000                                           // 000000079DE8: BF800000
	.long 0xbf800000                                           // 000000079DEC: BF800000
	.long 0xbf800000                                           // 000000079DF0: BF800000
	.long 0xbf800000                                           // 000000079DF4: BF800000
	.long 0xbf800000                                           // 000000079DF8: BF800000
	.long 0xbf800000                                           // 000000079DFC: BF800000

	.p2align	8
	.type	mul_long_get_local_id_8_8,@function
	.size	mul_long_get_local_id_8_8, mul_long_get_local_id_8_8_symend-mul_long_get_local_id_8_8
mul_long_get_local_id_8_8:
	s_clause 0x1                                               // 000000079E00: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000079E04: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079E0C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 000000079E14: CA240080 010400FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000079E20: 84028302
	v_bfe_u32 v0, v0, 10, 10                                   // 000000079E24: D6100000 02291500
	s_mov_b32 s33, 0                                           // 000000079E2C: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000079E30: BF870112
	v_mov_b32_e32 v3, v1                                       // 000000079E34: 7E060301
	v_mul_u32_u24_e32 v0, v4, v0                               // 000000079E38: 16000104
	s_waitcnt lgkmcnt(0)                                       // 000000079E3C: BF89FC07
	v_add3_u32 v2, s3, s2, v4                                  // 000000079E40: D6550002 04100403
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079E48: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079E4C: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079E54: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 000000079E5C: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079E60: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079E64: DC6E0000 007C0002
	s_nop 0                                                    // 000000079E6C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079E70: BFB60003
	s_endpgm                                                   // 000000079E74: BFB00000
mul_long_get_local_id_8_8_symend:
	.long 0xbf800000                                           // 000000079E78: BF800000
	.long 0xbf800000                                           // 000000079E7C: BF800000
	.long 0xbf800000                                           // 000000079E80: BF800000
	.long 0xbf800000                                           // 000000079E84: BF800000
	.long 0xbf800000                                           // 000000079E88: BF800000
	.long 0xbf800000                                           // 000000079E8C: BF800000
	.long 0xbf800000                                           // 000000079E90: BF800000
	.long 0xbf800000                                           // 000000079E94: BF800000
	.long 0xbf800000                                           // 000000079E98: BF800000
	.long 0xbf800000                                           // 000000079E9C: BF800000
	.long 0xbf800000                                           // 000000079EA0: BF800000
	.long 0xbf800000                                           // 000000079EA4: BF800000
	.long 0xbf800000                                           // 000000079EA8: BF800000
	.long 0xbf800000                                           // 000000079EAC: BF800000
	.long 0xbf800000                                           // 000000079EB0: BF800000
	.long 0xbf800000                                           // 000000079EB4: BF800000
	.long 0xbf800000                                           // 000000079EB8: BF800000
	.long 0xbf800000                                           // 000000079EBC: BF800000
	.long 0xbf800000                                           // 000000079EC0: BF800000
	.long 0xbf800000                                           // 000000079EC4: BF800000
	.long 0xbf800000                                           // 000000079EC8: BF800000
	.long 0xbf800000                                           // 000000079ECC: BF800000
	.long 0xbf800000                                           // 000000079ED0: BF800000
	.long 0xbf800000                                           // 000000079ED4: BF800000
	.long 0xbf800000                                           // 000000079ED8: BF800000
	.long 0xbf800000                                           // 000000079EDC: BF800000
	.long 0xbf800000                                           // 000000079EE0: BF800000
	.long 0xbf800000                                           // 000000079EE4: BF800000
	.long 0xbf800000                                           // 000000079EE8: BF800000
	.long 0xbf800000                                           // 000000079EEC: BF800000
	.long 0xbf800000                                           // 000000079EF0: BF800000
	.long 0xbf800000                                           // 000000079EF4: BF800000
	.long 0xbf800000                                           // 000000079EF8: BF800000
	.long 0xbf800000                                           // 000000079EFC: BF800000

	.p2align	8
	.type	mul_long_get_group_id_8_8,@function
	.size	mul_long_get_group_id_8_8, mul_long_get_group_id_8_8_symend-mul_long_get_group_id_8_8
mul_long_get_group_id_8_8:
	s_clause 0x1                                               // 000000079F00: BF850001
	s_load_b32 s4, s[0:1], 0x38                                // 000000079F04: F4000100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079F0C: F4040000 F8000008
	s_lshl_b32 s5, s2, 3                                       // 000000079F14: 84058302
	s_mul_i32 s2, s2, s3                                       // 000000079F18: 96020302
	v_mov_b32_e32 v1, 0                                        // 000000079F1C: 7E020280
	s_mov_b32 s33, 0                                           // 000000079F20: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079F24: BF89FC07
	v_add3_u32 v2, s4, s5, v0                                  // 000000079F28: D6550002 04000A04
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079F30: BF870092
	v_dual_mov_b32 v0, s2 :: v_dual_mov_b32 v3, v1             // 000000079F34: CA100002 00020101
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079F3C: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000079F44: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079F48: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079F50: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079F54: DC6E0000 007C0002
	s_nop 0                                                    // 000000079F5C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079F60: BFB60003
	s_endpgm                                                   // 000000079F64: BFB00000
mul_long_get_group_id_8_8_symend:
	.long 0xbf800000                                           // 000000079F68: BF800000
	.long 0xbf800000                                           // 000000079F6C: BF800000
	.long 0xbf800000                                           // 000000079F70: BF800000
	.long 0xbf800000                                           // 000000079F74: BF800000
	.long 0xbf800000                                           // 000000079F78: BF800000
	.long 0xbf800000                                           // 000000079F7C: BF800000
	.long 0xbf800000                                           // 000000079F80: BF800000
	.long 0xbf800000                                           // 000000079F84: BF800000
	.long 0xbf800000                                           // 000000079F88: BF800000
	.long 0xbf800000                                           // 000000079F8C: BF800000
	.long 0xbf800000                                           // 000000079F90: BF800000
	.long 0xbf800000                                           // 000000079F94: BF800000
	.long 0xbf800000                                           // 000000079F98: BF800000
	.long 0xbf800000                                           // 000000079F9C: BF800000
	.long 0xbf800000                                           // 000000079FA0: BF800000
	.long 0xbf800000                                           // 000000079FA4: BF800000
	.long 0xbf800000                                           // 000000079FA8: BF800000
	.long 0xbf800000                                           // 000000079FAC: BF800000
	.long 0xbf800000                                           // 000000079FB0: BF800000
	.long 0xbf800000                                           // 000000079FB4: BF800000
	.long 0xbf800000                                           // 000000079FB8: BF800000
	.long 0xbf800000                                           // 000000079FBC: BF800000
	.long 0xbf800000                                           // 000000079FC0: BF800000
	.long 0xbf800000                                           // 000000079FC4: BF800000
	.long 0xbf800000                                           // 000000079FC8: BF800000
	.long 0xbf800000                                           // 000000079FCC: BF800000
	.long 0xbf800000                                           // 000000079FD0: BF800000
	.long 0xbf800000                                           // 000000079FD4: BF800000
	.long 0xbf800000                                           // 000000079FD8: BF800000
	.long 0xbf800000                                           // 000000079FDC: BF800000
	.long 0xbf800000                                           // 000000079FE0: BF800000
	.long 0xbf800000                                           // 000000079FE4: BF800000
	.long 0xbf800000                                           // 000000079FE8: BF800000
	.long 0xbf800000                                           // 000000079FEC: BF800000
	.long 0xbf800000                                           // 000000079FF0: BF800000
	.long 0xbf800000                                           // 000000079FF4: BF800000
	.long 0xbf800000                                           // 000000079FF8: BF800000
	.long 0xbf800000                                           // 000000079FFC: BF800000

	.p2align	8
	.type	mul_long_get_local_size_8_8,@function
	.size	mul_long_get_local_size_8_8, mul_long_get_local_size_8_8_symend-mul_long_get_local_size_8_8
mul_long_get_local_size_8_8:
	s_clause 0x1                                               // 00000007A000: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000007A004: F4080100 F8000008
	s_load_b32 s9, s[0:1], 0x38                                // 00000007A00C: F4000240 F8000038
	s_add_u32 s8, s0, 16                                       // 00000007A014: 80089000
	s_addc_u32 s10, s1, 0                                      // 00000007A018: 820A8001
	s_lshl_b32 s11, s2, 3                                      // 00000007A01C: 840B8302
	v_mov_b32_e32 v1, 0                                        // 00000007A020: 7E020280
	s_mov_b32 s33, 0                                           // 00000007A024: BEA10080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007A028: BF8704D1
	v_mov_b32_e32 v3, v1                                       // 00000007A02C: 7E060301
	s_waitcnt lgkmcnt(0)                                       // 00000007A030: BF89FC07
	s_cmp_lt_u32 s2, s6                                        // 00000007A034: BF0A0602
	v_add3_u32 v2, s9, s11, v0                                 // 00000007A038: D6550002 04001609
	s_cselect_b32 s0, 12, 18                                   // 00000007A040: 9800928C
	s_add_u32 s0, s8, s0                                       // 00000007A044: 80000008
	s_addc_u32 s1, s10, 0                                      // 00000007A048: 8201800A
	s_cmp_lt_u32 s3, s7                                        // 00000007A04C: BF0A0703
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007A050: D73C0002 00020483
	s_cselect_b32 s2, 14, 20                                   // 00000007A058: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007A05C: BF870009
	s_add_u32 s2, s8, s2                                       // 00000007A060: 80020208
	s_addc_u32 s3, s10, 0                                      // 00000007A064: 8203800A
	s_clause 0x1                                               // 00000007A068: BF850001
	global_load_u16 v4, v1, s[0:1]                             // 00000007A06C: DC4A0000 04000001
	global_load_u16 v5, v1, s[2:3]                             // 00000007A074: DC4A0000 05020001
	v_add_co_u32 v2, vcc_lo, s4, v2                            // 00000007A07C: D7006A02 00020404
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo             // 00000007A084: 40060605
	s_waitcnt vmcnt(0)                                         // 00000007A088: BF8903F7
	v_mul_lo_u32 v0, v5, v4                                    // 00000007A08C: D72C0000 00020905
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A094: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A09C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A0A0: BFB60003
	s_endpgm                                                   // 00000007A0A4: BFB00000
mul_long_get_local_size_8_8_symend:
	.long 0xbf800000                                           // 00000007A0A8: BF800000
	.long 0xbf800000                                           // 00000007A0AC: BF800000
	.long 0xbf800000                                           // 00000007A0B0: BF800000
	.long 0xbf800000                                           // 00000007A0B4: BF800000
	.long 0xbf800000                                           // 00000007A0B8: BF800000
	.long 0xbf800000                                           // 00000007A0BC: BF800000
	.long 0xbf800000                                           // 00000007A0C0: BF800000
	.long 0xbf800000                                           // 00000007A0C4: BF800000
	.long 0xbf800000                                           // 00000007A0C8: BF800000
	.long 0xbf800000                                           // 00000007A0CC: BF800000
	.long 0xbf800000                                           // 00000007A0D0: BF800000
	.long 0xbf800000                                           // 00000007A0D4: BF800000
	.long 0xbf800000                                           // 00000007A0D8: BF800000
	.long 0xbf800000                                           // 00000007A0DC: BF800000
	.long 0xbf800000                                           // 00000007A0E0: BF800000
	.long 0xbf800000                                           // 00000007A0E4: BF800000
	.long 0xbf800000                                           // 00000007A0E8: BF800000
	.long 0xbf800000                                           // 00000007A0EC: BF800000
	.long 0xbf800000                                           // 00000007A0F0: BF800000
	.long 0xbf800000                                           // 00000007A0F4: BF800000
	.long 0xbf800000                                           // 00000007A0F8: BF800000
	.long 0xbf800000                                           // 00000007A0FC: BF800000

	.p2align	8
	.type	mul_long_get_global_id_8_8,@function
	.size	mul_long_get_global_id_8_8, mul_long_get_global_id_8_8_symend-mul_long_get_global_id_8_8
mul_long_get_global_id_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007A100: F4080100 F8000038
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007A108: CA240080 010200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A114: F4040000 F8000008
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007A11C: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000007A124: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007A128: BF870142
	v_lshl_or_b32 v2, s2, 3, v2                                // 00000007A12C: D6560002 04090602
	v_mov_b32_e32 v3, v1                                       // 00000007A134: 7E060301
	s_lshl_b32 s2, s3, 3                                       // 00000007A138: 84028303
	s_waitcnt lgkmcnt(0)                                       // 00000007A13C: BF89FC07
	v_add_nc_u32_e32 v2, s4, v2                                // 00000007A140: 4A040404
	v_add3_u32 v0, s6, s2, v0                                  // 00000007A144: D6550000 04000406
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007A14C: BF870112
	v_lshlrev_b64 v[3:4], 3, v[2:3]                            // 00000007A150: D73C0003 00020483
	v_mul_lo_u32 v0, v0, v2                                    // 00000007A158: D72C0000 00020500
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007A160: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 00000007A164: D7006A02 00020600
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v4, vcc_lo             // 00000007A16C: 40060801
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A170: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A178: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A17C: BFB60003
	s_endpgm                                                   // 00000007A180: BFB00000
mul_long_get_global_id_8_8_symend:
	.long 0xbf800000                                           // 00000007A184: BF800000
	.long 0xbf800000                                           // 00000007A188: BF800000
	.long 0xbf800000                                           // 00000007A18C: BF800000
	.long 0xbf800000                                           // 00000007A190: BF800000
	.long 0xbf800000                                           // 00000007A194: BF800000
	.long 0xbf800000                                           // 00000007A198: BF800000
	.long 0xbf800000                                           // 00000007A19C: BF800000
	.long 0xbf800000                                           // 00000007A1A0: BF800000
	.long 0xbf800000                                           // 00000007A1A4: BF800000
	.long 0xbf800000                                           // 00000007A1A8: BF800000
	.long 0xbf800000                                           // 00000007A1AC: BF800000
	.long 0xbf800000                                           // 00000007A1B0: BF800000
	.long 0xbf800000                                           // 00000007A1B4: BF800000
	.long 0xbf800000                                           // 00000007A1B8: BF800000
	.long 0xbf800000                                           // 00000007A1BC: BF800000
	.long 0xbf800000                                           // 00000007A1C0: BF800000
	.long 0xbf800000                                           // 00000007A1C4: BF800000
	.long 0xbf800000                                           // 00000007A1C8: BF800000
	.long 0xbf800000                                           // 00000007A1CC: BF800000
	.long 0xbf800000                                           // 00000007A1D0: BF800000
	.long 0xbf800000                                           // 00000007A1D4: BF800000
	.long 0xbf800000                                           // 00000007A1D8: BF800000
	.long 0xbf800000                                           // 00000007A1DC: BF800000
	.long 0xbf800000                                           // 00000007A1E0: BF800000
	.long 0xbf800000                                           // 00000007A1E4: BF800000
	.long 0xbf800000                                           // 00000007A1E8: BF800000
	.long 0xbf800000                                           // 00000007A1EC: BF800000
	.long 0xbf800000                                           // 00000007A1F0: BF800000
	.long 0xbf800000                                           // 00000007A1F4: BF800000
	.long 0xbf800000                                           // 00000007A1F8: BF800000
	.long 0xbf800000                                           // 00000007A1FC: BF800000

	.p2align	8
	.type	mul_long_get_global_size_8_8,@function
	.size	mul_long_get_global_size_8_8, mul_long_get_global_size_8_8_symend-mul_long_get_global_size_8_8
mul_long_get_global_size_8_8:
	v_mov_b32_e32 v1, 0                                        // 00000007A200: 7E020280
	s_mov_b32 s33, 0                                           // 00000007A204: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007A208: DC520022 02000001
	s_clause 0x1                                               // 00000007A210: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000007A214: F40000C0 F8000038
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000007A21C: F4080100 F8000008
	s_lshl_b32 s0, s2, 3                                       // 00000007A224: 84008302
	s_waitcnt lgkmcnt(0)                                       // 00000007A228: BF89FC07
	s_lshl_b32 s1, s7, 3                                       // 00000007A22C: 84018307
	s_waitcnt vmcnt(0)                                         // 00000007A230: BF8903F7
	v_and_b32_e32 v4, 0xffff, v2                               // 00000007A234: 360804FF 0000FFFF
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007A23C: 320A0490
	v_add3_u32 v2, s3, s0, v0                                  // 00000007A240: D6550002 04000003
	s_lshl_b32 s0, s6, 3                                       // 00000007A248: 84008306
	s_delay_alu instid0(VALU_DEP_3) | instid1(SALU_CYCLE_1)    // 00000007A24C: BF870483
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v0, s0, v4      // 00000007A250: CA200101 03000800
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007A258: BF870113
	v_add_nc_u32_e32 v4, s1, v5                                // 00000007A25C: 4A080A01
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007A260: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007A268: BF870112
	v_mul_lo_u32 v0, v4, v0                                    // 00000007A26C: D72C0000 00020104
	v_add_co_u32 v2, vcc_lo, s4, v2                            // 00000007A274: D7006A02 00020404
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007A27C: BF870003
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo             // 00000007A280: 40060605
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A284: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A28C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A290: BFB60003
	s_endpgm                                                   // 00000007A294: BFB00000
mul_long_get_global_size_8_8_symend:
	.long 0xbf800000                                           // 00000007A298: BF800000
	.long 0xbf800000                                           // 00000007A29C: BF800000
	.long 0xbf800000                                           // 00000007A2A0: BF800000
	.long 0xbf800000                                           // 00000007A2A4: BF800000
	.long 0xbf800000                                           // 00000007A2A8: BF800000
	.long 0xbf800000                                           // 00000007A2AC: BF800000
	.long 0xbf800000                                           // 00000007A2B0: BF800000
	.long 0xbf800000                                           // 00000007A2B4: BF800000
	.long 0xbf800000                                           // 00000007A2B8: BF800000
	.long 0xbf800000                                           // 00000007A2BC: BF800000
	.long 0xbf800000                                           // 00000007A2C0: BF800000
	.long 0xbf800000                                           // 00000007A2C4: BF800000
	.long 0xbf800000                                           // 00000007A2C8: BF800000
	.long 0xbf800000                                           // 00000007A2CC: BF800000
	.long 0xbf800000                                           // 00000007A2D0: BF800000
	.long 0xbf800000                                           // 00000007A2D4: BF800000
	.long 0xbf800000                                           // 00000007A2D8: BF800000
	.long 0xbf800000                                           // 00000007A2DC: BF800000
	.long 0xbf800000                                           // 00000007A2E0: BF800000
	.long 0xbf800000                                           // 00000007A2E4: BF800000
	.long 0xbf800000                                           // 00000007A2E8: BF800000
	.long 0xbf800000                                           // 00000007A2EC: BF800000
	.long 0xbf800000                                           // 00000007A2F0: BF800000
	.long 0xbf800000                                           // 00000007A2F4: BF800000
	.long 0xbf800000                                           // 00000007A2F8: BF800000
	.long 0xbf800000                                           // 00000007A2FC: BF800000

	.p2align	8
	.type	mul_long_get_num_groups_8_8,@function
	.size	mul_long_get_num_groups_8_8, mul_long_get_num_groups_8_8_symend-mul_long_get_num_groups_8_8
mul_long_get_num_groups_8_8:
	v_mov_b32_e32 v1, 0                                        // 00000007A300: 7E020280
	s_mov_b32 s33, 0                                           // 00000007A304: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007A308: DC520022 02000001
	s_clause 0x1                                               // 00000007A310: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000007A314: F40000C0 F8000038
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000007A31C: F4080100 F8000008
	s_lshl_b32 s1, s2, 3                                       // 00000007A324: 84018302
	s_waitcnt vmcnt(0)                                         // 00000007A328: BF8903F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007A32C: 32080490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007A330: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 00000007A334: BF89FC07
	v_add3_u32 v2, s3, s1, v0                                  // 00000007A338: D6550002 04000203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007A340: BF8700B3
	v_cmp_ne_u16_e64 s0, 0, v4.l                               // 00000007A344: D43D0000 00020880
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A34C: BF07806A
	s_addc_u32 s1, s6, 0                                       // 00000007A350: 82018006
	s_cmp_lg_u32 s0, 0                                         // 00000007A354: BF078000
	s_addc_u32 s0, s7, 0                                       // 00000007A358: 82008007
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 00000007A35C: BF870499
	s_mul_i32 s0, s0, s1                                       // 00000007A360: 96000100
	v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v3, v1             // 00000007A364: CA100000 00020101
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A36C: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007A370: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s4, v2                            // 00000007A378: D7006A02 00020404
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007A380: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo             // 00000007A384: 40060605
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A388: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A390: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A394: BFB60003
	s_endpgm                                                   // 00000007A398: BFB00000
mul_long_get_num_groups_8_8_symend:
	.long 0xbf800000                                           // 00000007A39C: BF800000
	.long 0xbf800000                                           // 00000007A3A0: BF800000
	.long 0xbf800000                                           // 00000007A3A4: BF800000
	.long 0xbf800000                                           // 00000007A3A8: BF800000
	.long 0xbf800000                                           // 00000007A3AC: BF800000
	.long 0xbf800000                                           // 00000007A3B0: BF800000
	.long 0xbf800000                                           // 00000007A3B4: BF800000
	.long 0xbf800000                                           // 00000007A3B8: BF800000
	.long 0xbf800000                                           // 00000007A3BC: BF800000
	.long 0xbf800000                                           // 00000007A3C0: BF800000
	.long 0xbf800000                                           // 00000007A3C4: BF800000
	.long 0xbf800000                                           // 00000007A3C8: BF800000
	.long 0xbf800000                                           // 00000007A3CC: BF800000
	.long 0xbf800000                                           // 00000007A3D0: BF800000
	.long 0xbf800000                                           // 00000007A3D4: BF800000
	.long 0xbf800000                                           // 00000007A3D8: BF800000
	.long 0xbf800000                                           // 00000007A3DC: BF800000
	.long 0xbf800000                                           // 00000007A3E0: BF800000
	.long 0xbf800000                                           // 00000007A3E4: BF800000
	.long 0xbf800000                                           // 00000007A3E8: BF800000
	.long 0xbf800000                                           // 00000007A3EC: BF800000
	.long 0xbf800000                                           // 00000007A3F0: BF800000
	.long 0xbf800000                                           // 00000007A3F4: BF800000
	.long 0xbf800000                                           // 00000007A3F8: BF800000
	.long 0xbf800000                                           // 00000007A3FC: BF800000

	.p2align	8
	.type	mul_long_get_work_dim_8_8,@function
	.size	mul_long_get_work_dim_8_8, mul_long_get_work_dim_8_8_symend-mul_long_get_work_dim_8_8
mul_long_get_work_dim_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007A400: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 00000007A408: BF89FC07
	s_clause 0x1                                               // 00000007A40C: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 00000007A410: F4000140 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A418: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007A420: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000007A42C: 84028302
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007A430: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000007A438: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 00000007A43C: BF8704B2
	v_mov_b32_e32 v3, v1                                       // 00000007A440: 7E060301
	v_add3_u32 v2, s4, s2, v2                                  // 00000007A444: D6550002 04080404
	s_lshl_b32 s2, s3, 3                                       // 00000007A44C: 84028303
	v_add3_u32 v0, s6, s2, v0                                  // 00000007A450: D6550000 04000406
	s_waitcnt lgkmcnt(0)                                       // 00000007A458: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000007A45C: 8B02FF05 0000FFFF
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007A464: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007A46C: BF870112
	v_mul_lo_u32 v0, v0, s2                                    // 00000007A470: D72C0000 00000500
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007A478: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007A480: BF870003
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007A484: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A488: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A490: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A494: BFB60003
	s_endpgm                                                   // 00000007A498: BFB00000
mul_long_get_work_dim_8_8_symend:
	.long 0xbf800000                                           // 00000007A49C: BF800000
	.long 0xbf800000                                           // 00000007A4A0: BF800000
	.long 0xbf800000                                           // 00000007A4A4: BF800000
	.long 0xbf800000                                           // 00000007A4A8: BF800000
	.long 0xbf800000                                           // 00000007A4AC: BF800000
	.long 0xbf800000                                           // 00000007A4B0: BF800000
	.long 0xbf800000                                           // 00000007A4B4: BF800000
	.long 0xbf800000                                           // 00000007A4B8: BF800000
	.long 0xbf800000                                           // 00000007A4BC: BF800000
	.long 0xbf800000                                           // 00000007A4C0: BF800000
	.long 0xbf800000                                           // 00000007A4C4: BF800000
	.long 0xbf800000                                           // 00000007A4C8: BF800000
	.long 0xbf800000                                           // 00000007A4CC: BF800000
	.long 0xbf800000                                           // 00000007A4D0: BF800000
	.long 0xbf800000                                           // 00000007A4D4: BF800000
	.long 0xbf800000                                           // 00000007A4D8: BF800000
	.long 0xbf800000                                           // 00000007A4DC: BF800000
	.long 0xbf800000                                           // 00000007A4E0: BF800000
	.long 0xbf800000                                           // 00000007A4E4: BF800000
	.long 0xbf800000                                           // 00000007A4E8: BF800000
	.long 0xbf800000                                           // 00000007A4EC: BF800000
	.long 0xbf800000                                           // 00000007A4F0: BF800000
	.long 0xbf800000                                           // 00000007A4F4: BF800000
	.long 0xbf800000                                           // 00000007A4F8: BF800000
	.long 0xbf800000                                           // 00000007A4FC: BF800000

	.p2align	8
	.type	mul_char_x_x,@function
	.size	mul_char_x_x, mul_char_x_x_symend-mul_char_x_x
mul_char_x_x:
	s_clause 0x2                                               // 00000007A500: BF850002
	s_load_b32 s3, s[0:1], 0x8                                 // 00000007A504: F40000C0 F8000008
	s_load_b32 s4, s[0:1], 0x38                                // 00000007A50C: F4000100 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 00000007A514: F4040000 F8000000
	s_lshl_b32 s2, s2, 6                                       // 00000007A51C: 84028602
	s_mov_b32 s33, 0                                           // 00000007A520: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007A524: BF89FC07
	s_mul_i32 s3, s3, s3                                       // 00000007A528: 96030303
	v_add3_u32 v0, s4, s2, v0                                  // 00000007A52C: D6550000 04000404
	v_mov_b32_e32 v1, s3                                       // 00000007A534: 7E020203
	global_store_b8 v0, v1, s[0:1]                             // 00000007A538: DC620000 00000100
	s_nop 0                                                    // 00000007A540: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A544: BFB60003
	s_endpgm                                                   // 00000007A548: BFB00000
mul_char_x_x_symend:
	.long 0xbf800000                                           // 00000007A54C: BF800000
	.long 0xbf800000                                           // 00000007A550: BF800000
	.long 0xbf800000                                           // 00000007A554: BF800000
	.long 0xbf800000                                           // 00000007A558: BF800000
	.long 0xbf800000                                           // 00000007A55C: BF800000
	.long 0xbf800000                                           // 00000007A560: BF800000
	.long 0xbf800000                                           // 00000007A564: BF800000
	.long 0xbf800000                                           // 00000007A568: BF800000
	.long 0xbf800000                                           // 00000007A56C: BF800000
	.long 0xbf800000                                           // 00000007A570: BF800000
	.long 0xbf800000                                           // 00000007A574: BF800000
	.long 0xbf800000                                           // 00000007A578: BF800000
	.long 0xbf800000                                           // 00000007A57C: BF800000
	.long 0xbf800000                                           // 00000007A580: BF800000
	.long 0xbf800000                                           // 00000007A584: BF800000
	.long 0xbf800000                                           // 00000007A588: BF800000
	.long 0xbf800000                                           // 00000007A58C: BF800000
	.long 0xbf800000                                           // 00000007A590: BF800000
	.long 0xbf800000                                           // 00000007A594: BF800000
	.long 0xbf800000                                           // 00000007A598: BF800000
	.long 0xbf800000                                           // 00000007A59C: BF800000
	.long 0xbf800000                                           // 00000007A5A0: BF800000
	.long 0xbf800000                                           // 00000007A5A4: BF800000
	.long 0xbf800000                                           // 00000007A5A8: BF800000
	.long 0xbf800000                                           // 00000007A5AC: BF800000
	.long 0xbf800000                                           // 00000007A5B0: BF800000
	.long 0xbf800000                                           // 00000007A5B4: BF800000
	.long 0xbf800000                                           // 00000007A5B8: BF800000
	.long 0xbf800000                                           // 00000007A5BC: BF800000
	.long 0xbf800000                                           // 00000007A5C0: BF800000
	.long 0xbf800000                                           // 00000007A5C4: BF800000
	.long 0xbf800000                                           // 00000007A5C8: BF800000
	.long 0xbf800000                                           // 00000007A5CC: BF800000
	.long 0xbf800000                                           // 00000007A5D0: BF800000
	.long 0xbf800000                                           // 00000007A5D4: BF800000
	.long 0xbf800000                                           // 00000007A5D8: BF800000
	.long 0xbf800000                                           // 00000007A5DC: BF800000
	.long 0xbf800000                                           // 00000007A5E0: BF800000
	.long 0xbf800000                                           // 00000007A5E4: BF800000
	.long 0xbf800000                                           // 00000007A5E8: BF800000
	.long 0xbf800000                                           // 00000007A5EC: BF800000
	.long 0xbf800000                                           // 00000007A5F0: BF800000
	.long 0xbf800000                                           // 00000007A5F4: BF800000
	.long 0xbf800000                                           // 00000007A5F8: BF800000
	.long 0xbf800000                                           // 00000007A5FC: BF800000

	.p2align	8
	.type	mul_char_get_global_offset_x,@function
	.size	mul_char_get_global_offset_x, mul_char_get_global_offset_x_symend-mul_char_get_global_offset_x
mul_char_get_global_offset_x:
	s_clause 0x3                                               // 00000007A600: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007A604: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000007A60C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 00000007A614: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A61C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007A624: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007A62C: D6100002 02291500
	s_lshl_b32 s2, s2, 1                                       // 00000007A634: 84028102
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007A638: D6100000 02292900
	s_lshl_b32 s3, s3, 4                                       // 00000007A640: 84038403
	s_lshl_b32 s4, s4, 1                                       // 00000007A644: 84048104
	s_mov_b32 s33, 0                                           // 00000007A648: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007A64C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000007A650: D6550001 04040408
	s_mul_i32 s7, s8, s5                                       // 00000007A658: 96070508
	s_mul_i32 s2, s10, s5                                      // 00000007A65C: 9602050A
	v_add3_u32 v2, s10, s3, v2                                 // 00000007A660: D6550002 0408060A
	v_mov_b32_e32 v4, s2                                       // 00000007A668: 7E080202
	s_mul_i32 s3, s6, s5                                       // 00000007A66C: 96030506
	v_mov_b32_e32 v3, s7                                       // 00000007A670: 7E060207
	v_add3_u32 v0, s6, s4, v0                                  // 00000007A674: D6550000 04000806
	v_mov_b32_e32 v5, s3                                       // 00000007A67C: 7E0A0203
	s_clause 0x2                                               // 00000007A680: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007A684: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007A68C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007A694: DC620000 00000500
	s_nop 0                                                    // 00000007A69C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A6A0: BFB60003
	s_endpgm                                                   // 00000007A6A4: BFB00000
mul_char_get_global_offset_x_symend:
	.long 0xbf800000                                           // 00000007A6A8: BF800000
	.long 0xbf800000                                           // 00000007A6AC: BF800000
	.long 0xbf800000                                           // 00000007A6B0: BF800000
	.long 0xbf800000                                           // 00000007A6B4: BF800000
	.long 0xbf800000                                           // 00000007A6B8: BF800000
	.long 0xbf800000                                           // 00000007A6BC: BF800000
	.long 0xbf800000                                           // 00000007A6C0: BF800000
	.long 0xbf800000                                           // 00000007A6C4: BF800000
	.long 0xbf800000                                           // 00000007A6C8: BF800000
	.long 0xbf800000                                           // 00000007A6CC: BF800000
	.long 0xbf800000                                           // 00000007A6D0: BF800000
	.long 0xbf800000                                           // 00000007A6D4: BF800000
	.long 0xbf800000                                           // 00000007A6D8: BF800000
	.long 0xbf800000                                           // 00000007A6DC: BF800000
	.long 0xbf800000                                           // 00000007A6E0: BF800000
	.long 0xbf800000                                           // 00000007A6E4: BF800000
	.long 0xbf800000                                           // 00000007A6E8: BF800000
	.long 0xbf800000                                           // 00000007A6EC: BF800000
	.long 0xbf800000                                           // 00000007A6F0: BF800000
	.long 0xbf800000                                           // 00000007A6F4: BF800000
	.long 0xbf800000                                           // 00000007A6F8: BF800000
	.long 0xbf800000                                           // 00000007A6FC: BF800000

	.p2align	8
	.type	mul_char_get_local_id_x,@function
	.size	mul_char_get_local_id_x, mul_char_get_local_id_x_symend-mul_char_get_local_id_x
mul_char_get_local_id_x:
	s_clause 0x3                                               // 00000007A700: BF850003
	s_load_b32 s5, s[0:1], null                                // 00000007A704: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007A70C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007A714: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A71C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007A724: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007A72C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007A734: D6100000 02292900
	s_lshl_b32 s2, s2, 3                                       // 00000007A73C: 84028302
	s_lshl_b32 s3, s3, 2                                       // 00000007A740: 84038203
	s_lshl_b32 s4, s4, 1                                       // 00000007A744: 84048104
	s_mov_b32 s33, 0                                           // 00000007A748: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007A74C: BF89FC07
	v_mul_lo_u32 v3, v1, s5                                    // 00000007A750: D72C0003 00000B01
	v_mul_lo_u32 v4, v2, s5                                    // 00000007A758: D72C0004 00000B02
	v_mul_lo_u32 v5, v0, s5                                    // 00000007A760: D72C0005 00000B00
	v_add3_u32 v1, s8, s2, v1                                  // 00000007A768: D6550001 04040408
	v_add3_u32 v2, s10, s3, v2                                 // 00000007A770: D6550002 0408060A
	v_add3_u32 v0, s6, s4, v0                                  // 00000007A778: D6550000 04000806
	s_clause 0x2                                               // 00000007A780: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007A784: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007A78C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007A794: DC620000 00000500
	s_nop 0                                                    // 00000007A79C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A7A0: BFB60003
	s_endpgm                                                   // 00000007A7A4: BFB00000
mul_char_get_local_id_x_symend:
	.long 0xbf800000                                           // 00000007A7A8: BF800000
	.long 0xbf800000                                           // 00000007A7AC: BF800000
	.long 0xbf800000                                           // 00000007A7B0: BF800000
	.long 0xbf800000                                           // 00000007A7B4: BF800000
	.long 0xbf800000                                           // 00000007A7B8: BF800000
	.long 0xbf800000                                           // 00000007A7BC: BF800000
	.long 0xbf800000                                           // 00000007A7C0: BF800000
	.long 0xbf800000                                           // 00000007A7C4: BF800000
	.long 0xbf800000                                           // 00000007A7C8: BF800000
	.long 0xbf800000                                           // 00000007A7CC: BF800000
	.long 0xbf800000                                           // 00000007A7D0: BF800000
	.long 0xbf800000                                           // 00000007A7D4: BF800000
	.long 0xbf800000                                           // 00000007A7D8: BF800000
	.long 0xbf800000                                           // 00000007A7DC: BF800000
	.long 0xbf800000                                           // 00000007A7E0: BF800000
	.long 0xbf800000                                           // 00000007A7E4: BF800000
	.long 0xbf800000                                           // 00000007A7E8: BF800000
	.long 0xbf800000                                           // 00000007A7EC: BF800000
	.long 0xbf800000                                           // 00000007A7F0: BF800000
	.long 0xbf800000                                           // 00000007A7F4: BF800000
	.long 0xbf800000                                           // 00000007A7F8: BF800000
	.long 0xbf800000                                           // 00000007A7FC: BF800000

	.p2align	8
	.type	mul_char_get_group_id_x,@function
	.size	mul_char_get_group_id_x, mul_char_get_group_id_x_symend-mul_char_get_group_id_x
mul_char_get_group_id_x:
	s_clause 0x3                                               // 00000007A800: BF850003
	s_load_b32 s5, s[0:1], null                                // 00000007A804: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007A80C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007A814: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A81C: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007A824: BF89FC07
	s_lshl_b32 s9, s3, 4                                       // 00000007A828: 84098403
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007A82C: D6100002 02291500
	s_lshl_b32 s7, s2, 1                                       // 00000007A834: 84078102
	s_lshl_b32 s11, s4, 1                                      // 00000007A838: 840B8104
	s_mov_b32 s33, 0                                           // 00000007A83C: BEA10080
	s_mul_i32 s3, s3, s5                                       // 00000007A840: 96030503
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007A844: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007A848: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007A854: D6100000 02292900
	s_mul_i32 s2, s2, s5                                       // 00000007A85C: 96020502
	s_mul_i32 s4, s4, s5                                       // 00000007A860: 96040504
	v_add3_u32 v1, s8, s7, v1                                  // 00000007A864: D6550001 04040E08
	v_mov_b32_e32 v3, s2                                       // 00000007A86C: 7E060202
	v_add3_u32 v2, s10, s9, v2                                 // 00000007A870: D6550002 0408120A
	v_add3_u32 v0, s6, s11, v0                                 // 00000007A878: D6550000 04001606
	v_mov_b32_e32 v5, s4                                       // 00000007A880: 7E0A0204
	s_clause 0x2                                               // 00000007A884: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007A888: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007A890: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007A898: DC620000 00000500
	s_nop 0                                                    // 00000007A8A0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A8A4: BFB60003
	s_endpgm                                                   // 00000007A8A8: BFB00000
mul_char_get_group_id_x_symend:
	.long 0xbf800000                                           // 00000007A8AC: BF800000
	.long 0xbf800000                                           // 00000007A8B0: BF800000
	.long 0xbf800000                                           // 00000007A8B4: BF800000
	.long 0xbf800000                                           // 00000007A8B8: BF800000
	.long 0xbf800000                                           // 00000007A8BC: BF800000
	.long 0xbf800000                                           // 00000007A8C0: BF800000
	.long 0xbf800000                                           // 00000007A8C4: BF800000
	.long 0xbf800000                                           // 00000007A8C8: BF800000
	.long 0xbf800000                                           // 00000007A8CC: BF800000
	.long 0xbf800000                                           // 00000007A8D0: BF800000
	.long 0xbf800000                                           // 00000007A8D4: BF800000
	.long 0xbf800000                                           // 00000007A8D8: BF800000
	.long 0xbf800000                                           // 00000007A8DC: BF800000
	.long 0xbf800000                                           // 00000007A8E0: BF800000
	.long 0xbf800000                                           // 00000007A8E4: BF800000
	.long 0xbf800000                                           // 00000007A8E8: BF800000
	.long 0xbf800000                                           // 00000007A8EC: BF800000
	.long 0xbf800000                                           // 00000007A8F0: BF800000
	.long 0xbf800000                                           // 00000007A8F4: BF800000
	.long 0xbf800000                                           // 00000007A8F8: BF800000
	.long 0xbf800000                                           // 00000007A8FC: BF800000

	.p2align	8
	.type	mul_char_get_local_size_x,@function
	.size	mul_char_get_local_size_x, mul_char_get_local_size_x_symend-mul_char_get_local_size_x
mul_char_get_local_size_x:
	s_clause 0x1                                               // 00000007A900: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007A904: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007A90C: F4080300 F8000038
	s_add_u32 s5, s0, 16                                       // 00000007A914: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007A918: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007A91C: 820B8001
	s_lshl_b32 s13, s2, 1                                      // 00000007A920: 840D8102
	s_lshl_b32 s15, s3, 1                                      // 00000007A924: 840F8103
	s_lshl_b32 s16, s4, 2                                      // 00000007A928: 84108204
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007A92C: CA240080 010400FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007A938: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007A940: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007A948: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007A94C: BF0A0802
	v_add3_u32 v4, s12, s13, v4                                // 00000007A950: D6550004 04101A0C
	s_cselect_b32 s2, 12, 18                                   // 00000007A958: 9802928C
	v_add3_u32 v5, s14, s15, v5                                // 00000007A95C: D6550005 04141E0E
	s_add_u32 s6, s5, s2                                       // 00000007A964: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007A968: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007A96C: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 00000007A970: DC4A0000 02060001
	s_cselect_b32 s2, 14, 20                                   // 00000007A978: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000007A97C: BF8704C9
	s_add_u32 s2, s5, s2                                       // 00000007A980: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000007A984: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007A988: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000007A98C: 98049690
	s_add_u32 s4, s5, s4                                       // 00000007A990: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000007A994: 8205800B
	s_clause 0x1                                               // 00000007A998: BF850001
	global_load_u16 v3, v1, s[2:3]                             // 00000007A99C: DC4A0000 03020001
	global_load_u16 v1, v1, s[4:5]                             // 00000007A9A4: DC4A0000 01040001
	s_clause 0x2                                               // 00000007A9AC: BF850002
	s_load_b32 s2, s[0:1], null                                // 00000007A9B0: F4000080 F8000000
	s_load_b32 s3, s[0:1], 0x48                                // 00000007A9B8: F40000C0 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A9C0: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007A9C8: BF89FC07
	v_add3_u32 v0, s3, s16, v0                                 // 00000007A9CC: D6550000 04002003
	s_waitcnt vmcnt(2)                                         // 00000007A9D4: BF890BF7
	v_mul_lo_u32 v2, v2, s2                                    // 00000007A9D8: D72C0002 00000502
	s_waitcnt vmcnt(1)                                         // 00000007A9E0: BF8907F7
	v_mul_lo_u32 v3, v3, s2                                    // 00000007A9E4: D72C0003 00000503
	s_waitcnt vmcnt(0)                                         // 00000007A9EC: BF8903F7
	v_mul_lo_u32 v1, v1, s2                                    // 00000007A9F0: D72C0001 00000501
	s_clause 0x2                                               // 00000007A9F8: BF850002
	global_store_b8 v4, v2, s[0:1]                             // 00000007A9FC: DC620000 00000204
	global_store_b8 v5, v3, s[0:1]                             // 00000007AA04: DC620000 00000305
	global_store_b8 v0, v1, s[0:1]                             // 00000007AA0C: DC620000 00000100
	s_nop 0                                                    // 00000007AA14: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AA18: BFB60003
	s_endpgm                                                   // 00000007AA1C: BFB00000
mul_char_get_local_size_x_symend:
	.long 0xbf800000                                           // 00000007AA20: BF800000
	.long 0xbf800000                                           // 00000007AA24: BF800000
	.long 0xbf800000                                           // 00000007AA28: BF800000
	.long 0xbf800000                                           // 00000007AA2C: BF800000
	.long 0xbf800000                                           // 00000007AA30: BF800000
	.long 0xbf800000                                           // 00000007AA34: BF800000
	.long 0xbf800000                                           // 00000007AA38: BF800000
	.long 0xbf800000                                           // 00000007AA3C: BF800000
	.long 0xbf800000                                           // 00000007AA40: BF800000
	.long 0xbf800000                                           // 00000007AA44: BF800000
	.long 0xbf800000                                           // 00000007AA48: BF800000
	.long 0xbf800000                                           // 00000007AA4C: BF800000
	.long 0xbf800000                                           // 00000007AA50: BF800000
	.long 0xbf800000                                           // 00000007AA54: BF800000
	.long 0xbf800000                                           // 00000007AA58: BF800000
	.long 0xbf800000                                           // 00000007AA5C: BF800000
	.long 0xbf800000                                           // 00000007AA60: BF800000
	.long 0xbf800000                                           // 00000007AA64: BF800000
	.long 0xbf800000                                           // 00000007AA68: BF800000
	.long 0xbf800000                                           // 00000007AA6C: BF800000
	.long 0xbf800000                                           // 00000007AA70: BF800000
	.long 0xbf800000                                           // 00000007AA74: BF800000
	.long 0xbf800000                                           // 00000007AA78: BF800000
	.long 0xbf800000                                           // 00000007AA7C: BF800000
	.long 0xbf800000                                           // 00000007AA80: BF800000
	.long 0xbf800000                                           // 00000007AA84: BF800000
	.long 0xbf800000                                           // 00000007AA88: BF800000
	.long 0xbf800000                                           // 00000007AA8C: BF800000
	.long 0xbf800000                                           // 00000007AA90: BF800000
	.long 0xbf800000                                           // 00000007AA94: BF800000
	.long 0xbf800000                                           // 00000007AA98: BF800000
	.long 0xbf800000                                           // 00000007AA9C: BF800000
	.long 0xbf800000                                           // 00000007AAA0: BF800000
	.long 0xbf800000                                           // 00000007AAA4: BF800000
	.long 0xbf800000                                           // 00000007AAA8: BF800000
	.long 0xbf800000                                           // 00000007AAAC: BF800000
	.long 0xbf800000                                           // 00000007AAB0: BF800000
	.long 0xbf800000                                           // 00000007AAB4: BF800000
	.long 0xbf800000                                           // 00000007AAB8: BF800000
	.long 0xbf800000                                           // 00000007AABC: BF800000
	.long 0xbf800000                                           // 00000007AAC0: BF800000
	.long 0xbf800000                                           // 00000007AAC4: BF800000
	.long 0xbf800000                                           // 00000007AAC8: BF800000
	.long 0xbf800000                                           // 00000007AACC: BF800000
	.long 0xbf800000                                           // 00000007AAD0: BF800000
	.long 0xbf800000                                           // 00000007AAD4: BF800000
	.long 0xbf800000                                           // 00000007AAD8: BF800000
	.long 0xbf800000                                           // 00000007AADC: BF800000
	.long 0xbf800000                                           // 00000007AAE0: BF800000
	.long 0xbf800000                                           // 00000007AAE4: BF800000
	.long 0xbf800000                                           // 00000007AAE8: BF800000
	.long 0xbf800000                                           // 00000007AAEC: BF800000
	.long 0xbf800000                                           // 00000007AAF0: BF800000
	.long 0xbf800000                                           // 00000007AAF4: BF800000
	.long 0xbf800000                                           // 00000007AAF8: BF800000
	.long 0xbf800000                                           // 00000007AAFC: BF800000

	.p2align	8
	.type	mul_char_get_global_id_x,@function
	.size	mul_char_get_global_id_x, mul_char_get_global_id_x_symend-mul_char_get_global_id_x
mul_char_get_global_id_x:
	s_clause 0x3                                               // 00000007AB00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007AB04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007AB0C: F4000140 F8000048
	s_load_b32 s6, s[0:1], null                                // 00000007AB14: F4000180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007AB1C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007AB24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007AB2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007AB34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007AB3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007AB40: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007AB44: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 00000007AB4C: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007AB54: BF8701A3
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007AB58: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007AB60: BF89FC07
	v_add_nc_u32_e32 v2, s8, v4                                // 00000007AB64: 4A040808
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007AB68: BF870193
	v_add_nc_u32_e32 v1, s10, v1                               // 00000007AB6C: 4A02020A
	v_add_nc_u32_e32 v3, s5, v0                                // 00000007AB70: 4A060005
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007AB74: BF870193
	v_mul_lo_u32 v5, v2, s6                                    // 00000007AB78: D72C0005 00000D02
	v_mul_lo_u32 v6, v1, s6                                    // 00000007AB80: D72C0006 00000D01
	v_add_co_u32 v0, s2, s0, v1                                // 00000007AB88: D7000200 00020200
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007AB90: BF8700B4
	v_mul_lo_u32 v7, v3, s6                                    // 00000007AB94: D72C0007 00000D03
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007AB9C: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v3                                // 00000007ABA4: D7000202 00020600
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007ABAC: D5207C03 00090001
	s_clause 0x2                                               // 00000007ABB4: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 00000007ABB8: DC620000 00000504
	global_store_b8 v[0:1], v6, off                            // 00000007ABC0: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007ABC8: DC620000 007C0702
	s_nop 0                                                    // 00000007ABD0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007ABD4: BFB60003
	s_endpgm                                                   // 00000007ABD8: BFB00000
mul_char_get_global_id_x_symend:
	.long 0xbf800000                                           // 00000007ABDC: BF800000
	.long 0xbf800000                                           // 00000007ABE0: BF800000
	.long 0xbf800000                                           // 00000007ABE4: BF800000
	.long 0xbf800000                                           // 00000007ABE8: BF800000
	.long 0xbf800000                                           // 00000007ABEC: BF800000
	.long 0xbf800000                                           // 00000007ABF0: BF800000
	.long 0xbf800000                                           // 00000007ABF4: BF800000
	.long 0xbf800000                                           // 00000007ABF8: BF800000
	.long 0xbf800000                                           // 00000007ABFC: BF800000

	.p2align	8
	.type	mul_char_get_global_size_x,@function
	.size	mul_char_get_global_size_x, mul_char_get_global_size_x_symend-mul_char_get_global_size_x
mul_char_get_global_size_x:
	v_mov_b32_e32 v1, 0                                        // 00000007AC00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007AC04: 360600FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007AC0C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007AC14: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 00000007AC1C: 84028402
	s_clause 0x1                                               // 00000007AC20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007AC24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007AC2C: DC4A0026 01000001
	s_clause 0x4                                               // 00000007AC34: BF850004
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007AC38: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007AC40: F4000140 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007AC48: F4080300 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007AC50: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007AC58: F4040000 F8000000
	s_lshl_b32 s3, s3, 1                                       // 00000007AC60: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000007AC64: 84048104
	s_mov_b32 s33, 0                                           // 00000007AC68: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007AC6C: BF89FC07
	s_lshl_b32 s7, s8, 4                                       // 00000007AC70: 84078408
	s_lshl_b32 s8, s9, 1                                       // 00000007AC74: 84088109
	s_lshl_b32 s9, s10, 1                                      // 00000007AC78: 8409810A
	v_add3_u32 v3, s12, s2, v3                                 // 00000007AC7C: D6550003 040C040C
	v_add3_u32 v5, s14, s3, v5                                 // 00000007AC84: D6550005 0414060E
	v_add3_u32 v0, s6, s4, v0                                  // 00000007AC8C: D6550000 04000806
	s_waitcnt vmcnt(1)                                         // 00000007AC94: BF8907F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007AC98: 32080490
	v_add_nc_u32_e32 v2, s7, v2                                // 00000007AC9C: 4A040407
	s_waitcnt vmcnt(0)                                         // 00000007ACA0: BF8903F7
	v_add_nc_u32_e32 v1, s9, v1                                // 00000007ACA4: 4A020209
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007ACA8: BF870193
	v_add_nc_u32_e32 v4, s8, v4                                // 00000007ACAC: 4A080808
	v_mul_lo_u32 v2, v2, s5                                    // 00000007ACB0: D72C0002 00000B02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007ACB8: BF870193
	v_mul_lo_u32 v1, v1, s5                                    // 00000007ACBC: D72C0001 00000B01
	v_mul_lo_u32 v4, v4, s5                                    // 00000007ACC4: D72C0004 00000B04
	s_clause 0x2                                               // 00000007ACCC: BF850002
	global_store_b8 v3, v2, s[0:1]                             // 00000007ACD0: DC620000 00000203
	global_store_b8 v5, v4, s[0:1]                             // 00000007ACD8: DC620000 00000405
	global_store_b8 v0, v1, s[0:1]                             // 00000007ACE0: DC620000 00000100
	s_nop 0                                                    // 00000007ACE8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007ACEC: BFB60003
	s_endpgm                                                   // 00000007ACF0: BFB00000
mul_char_get_global_size_x_symend:
	.long 0xbf800000                                           // 00000007ACF4: BF800000
	.long 0xbf800000                                           // 00000007ACF8: BF800000
	.long 0xbf800000                                           // 00000007ACFC: BF800000

	.p2align	8
	.type	mul_char_get_num_groups_x,@function
	.size	mul_char_get_num_groups_x, mul_char_get_num_groups_x_symend-mul_char_get_num_groups_x
mul_char_get_num_groups_x:
	v_mov_b32_e32 v1, 0                                        // 00000007AD00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007AD04: 360600FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000007AD0C: 84028102
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007AD10: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007AD18: D6100000 02292900
	s_clause 0x1                                               // 00000007AD20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007AD24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007AD2C: DC4A0026 01000001
	s_clause 0x2                                               // 00000007AD34: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007AD38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007AD40: F4080300 F8000010
	s_load_b32 s5, s[0:1], null                                // 00000007AD48: F4000140 F8000000
	s_waitcnt lgkmcnt(0)                                       // 00000007AD50: BF89FC07
	s_clause 0x1                                               // 00000007AD54: BF850001
	s_load_b32 s9, s[0:1], 0x48                                // 00000007AD58: F4000240 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007AD60: F4040180 F8000008
	s_lshl_b32 s1, s3, 1                                       // 00000007AD68: 84018103
	s_lshl_b32 s3, s4, 2                                       // 00000007AD6C: 84038204
	s_mov_b32 s33, 0                                           // 00000007AD70: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007AD74: BF89FC07
	v_add3_u32 v0, s9, s3, v0                                  // 00000007AD78: D6550000 04000609
	s_waitcnt vmcnt(1)                                         // 00000007AD80: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007AD84: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007AD88: 32040490
	s_waitcnt vmcnt(0)                                         // 00000007AD8C: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000007AD90: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007AD98: BF07806A
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007AD9C: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007ADA0: 7C7A0480
	v_add3_u32 v2, s8, s2, v3                                  // 00000007ADA4: D6550002 040C0408
	s_addc_u32 s2, s12, 0                                      // 00000007ADAC: 8202800C
	v_add3_u32 v3, s10, s1, v4                                 // 00000007ADB0: D6550003 0410020A
	s_mul_i32 s2, s2, s5                                       // 00000007ADB8: 96020502
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007ADBC: BF07806A
	v_mov_b32_e32 v1, s2                                       // 00000007ADC0: 7E020202
	s_addc_u32 s2, s13, 0                                      // 00000007ADC4: 8202800D
	s_cmp_lg_u32 s0, 0                                         // 00000007ADC8: BF078000
	s_mul_i32 s0, s2, s5                                       // 00000007ADCC: 96000502
	s_addc_u32 s2, s14, 0                                      // 00000007ADD0: 8202800E
	v_mov_b32_e32 v4, s0                                       // 00000007ADD4: 7E080200
	s_mul_i32 s0, s2, s5                                       // 00000007ADD8: 96000502
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007ADDC: BF870009
	v_mov_b32_e32 v5, s0                                       // 00000007ADE0: 7E0A0200
	s_clause 0x2                                               // 00000007ADE4: BF850002
	global_store_b8 v2, v1, s[6:7]                             // 00000007ADE8: DC620000 00060102
	global_store_b8 v3, v4, s[6:7]                             // 00000007ADF0: DC620000 00060403
	global_store_b8 v0, v5, s[6:7]                             // 00000007ADF8: DC620000 00060500
	s_nop 0                                                    // 00000007AE00: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AE04: BFB60003
	s_endpgm                                                   // 00000007AE08: BFB00000
mul_char_get_num_groups_x_symend:
	.long 0xbf800000                                           // 00000007AE0C: BF800000
	.long 0xbf800000                                           // 00000007AE10: BF800000
	.long 0xbf800000                                           // 00000007AE14: BF800000
	.long 0xbf800000                                           // 00000007AE18: BF800000
	.long 0xbf800000                                           // 00000007AE1C: BF800000
	.long 0xbf800000                                           // 00000007AE20: BF800000
	.long 0xbf800000                                           // 00000007AE24: BF800000
	.long 0xbf800000                                           // 00000007AE28: BF800000
	.long 0xbf800000                                           // 00000007AE2C: BF800000
	.long 0xbf800000                                           // 00000007AE30: BF800000
	.long 0xbf800000                                           // 00000007AE34: BF800000
	.long 0xbf800000                                           // 00000007AE38: BF800000
	.long 0xbf800000                                           // 00000007AE3C: BF800000
	.long 0xbf800000                                           // 00000007AE40: BF800000
	.long 0xbf800000                                           // 00000007AE44: BF800000
	.long 0xbf800000                                           // 00000007AE48: BF800000
	.long 0xbf800000                                           // 00000007AE4C: BF800000
	.long 0xbf800000                                           // 00000007AE50: BF800000
	.long 0xbf800000                                           // 00000007AE54: BF800000
	.long 0xbf800000                                           // 00000007AE58: BF800000
	.long 0xbf800000                                           // 00000007AE5C: BF800000
	.long 0xbf800000                                           // 00000007AE60: BF800000
	.long 0xbf800000                                           // 00000007AE64: BF800000
	.long 0xbf800000                                           // 00000007AE68: BF800000
	.long 0xbf800000                                           // 00000007AE6C: BF800000
	.long 0xbf800000                                           // 00000007AE70: BF800000
	.long 0xbf800000                                           // 00000007AE74: BF800000
	.long 0xbf800000                                           // 00000007AE78: BF800000
	.long 0xbf800000                                           // 00000007AE7C: BF800000
	.long 0xbf800000                                           // 00000007AE80: BF800000
	.long 0xbf800000                                           // 00000007AE84: BF800000
	.long 0xbf800000                                           // 00000007AE88: BF800000
	.long 0xbf800000                                           // 00000007AE8C: BF800000
	.long 0xbf800000                                           // 00000007AE90: BF800000
	.long 0xbf800000                                           // 00000007AE94: BF800000
	.long 0xbf800000                                           // 00000007AE98: BF800000
	.long 0xbf800000                                           // 00000007AE9C: BF800000
	.long 0xbf800000                                           // 00000007AEA0: BF800000
	.long 0xbf800000                                           // 00000007AEA4: BF800000
	.long 0xbf800000                                           // 00000007AEA8: BF800000
	.long 0xbf800000                                           // 00000007AEAC: BF800000
	.long 0xbf800000                                           // 00000007AEB0: BF800000
	.long 0xbf800000                                           // 00000007AEB4: BF800000
	.long 0xbf800000                                           // 00000007AEB8: BF800000
	.long 0xbf800000                                           // 00000007AEBC: BF800000
	.long 0xbf800000                                           // 00000007AEC0: BF800000
	.long 0xbf800000                                           // 00000007AEC4: BF800000
	.long 0xbf800000                                           // 00000007AEC8: BF800000
	.long 0xbf800000                                           // 00000007AECC: BF800000
	.long 0xbf800000                                           // 00000007AED0: BF800000
	.long 0xbf800000                                           // 00000007AED4: BF800000
	.long 0xbf800000                                           // 00000007AED8: BF800000
	.long 0xbf800000                                           // 00000007AEDC: BF800000
	.long 0xbf800000                                           // 00000007AEE0: BF800000
	.long 0xbf800000                                           // 00000007AEE4: BF800000
	.long 0xbf800000                                           // 00000007AEE8: BF800000
	.long 0xbf800000                                           // 00000007AEEC: BF800000
	.long 0xbf800000                                           // 00000007AEF0: BF800000
	.long 0xbf800000                                           // 00000007AEF4: BF800000
	.long 0xbf800000                                           // 00000007AEF8: BF800000
	.long 0xbf800000                                           // 00000007AEFC: BF800000

	.p2align	8
	.type	mul_char_get_work_dim_x,@function
	.size	mul_char_get_work_dim_x, mul_char_get_work_dim_x_symend-mul_char_get_work_dim_x
mul_char_get_work_dim_x:
	s_clause 0x3                                               // 00000007AF00: BF850003
	s_load_b32 s3, s[0:1], null                                // 00000007AF04: F40000C0 F8000000
	s_load_b32 s4, s[0:1], 0x50                                // 00000007AF0C: F4000100 F8000050
	s_load_b32 s5, s[0:1], 0x38                                // 00000007AF14: F4000140 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007AF1C: F4040000 F8000008
	s_lshl_b32 s2, s2, 1                                       // 00000007AF24: 84028102
	s_mov_b32 s33, 0                                           // 00000007AF28: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007AF2C: BF89FC07
	s_mul_i32 s3, s4, s3                                       // 00000007AF30: 96030304
	v_add3_u32 v0, s5, s2, v0                                  // 00000007AF34: D6550000 04000405
	v_mov_b32_e32 v1, s3                                       // 00000007AF3C: 7E020203
	global_store_b8 v0, v1, s[0:1]                             // 00000007AF40: DC620000 00000100
	s_nop 0                                                    // 00000007AF48: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AF4C: BFB60003
	s_endpgm                                                   // 00000007AF50: BFB00000
mul_char_get_work_dim_x_symend:
	.long 0xbf800000                                           // 00000007AF54: BF800000
	.long 0xbf800000                                           // 00000007AF58: BF800000
	.long 0xbf800000                                           // 00000007AF5C: BF800000
	.long 0xbf800000                                           // 00000007AF60: BF800000
	.long 0xbf800000                                           // 00000007AF64: BF800000
	.long 0xbf800000                                           // 00000007AF68: BF800000
	.long 0xbf800000                                           // 00000007AF6C: BF800000
	.long 0xbf800000                                           // 00000007AF70: BF800000
	.long 0xbf800000                                           // 00000007AF74: BF800000
	.long 0xbf800000                                           // 00000007AF78: BF800000
	.long 0xbf800000                                           // 00000007AF7C: BF800000
	.long 0xbf800000                                           // 00000007AF80: BF800000
	.long 0xbf800000                                           // 00000007AF84: BF800000
	.long 0xbf800000                                           // 00000007AF88: BF800000
	.long 0xbf800000                                           // 00000007AF8C: BF800000
	.long 0xbf800000                                           // 00000007AF90: BF800000
	.long 0xbf800000                                           // 00000007AF94: BF800000
	.long 0xbf800000                                           // 00000007AF98: BF800000
	.long 0xbf800000                                           // 00000007AF9C: BF800000
	.long 0xbf800000                                           // 00000007AFA0: BF800000
	.long 0xbf800000                                           // 00000007AFA4: BF800000
	.long 0xbf800000                                           // 00000007AFA8: BF800000
	.long 0xbf800000                                           // 00000007AFAC: BF800000
	.long 0xbf800000                                           // 00000007AFB0: BF800000
	.long 0xbf800000                                           // 00000007AFB4: BF800000
	.long 0xbf800000                                           // 00000007AFB8: BF800000
	.long 0xbf800000                                           // 00000007AFBC: BF800000
	.long 0xbf800000                                           // 00000007AFC0: BF800000
	.long 0xbf800000                                           // 00000007AFC4: BF800000
	.long 0xbf800000                                           // 00000007AFC8: BF800000
	.long 0xbf800000                                           // 00000007AFCC: BF800000
	.long 0xbf800000                                           // 00000007AFD0: BF800000
	.long 0xbf800000                                           // 00000007AFD4: BF800000
	.long 0xbf800000                                           // 00000007AFD8: BF800000
	.long 0xbf800000                                           // 00000007AFDC: BF800000
	.long 0xbf800000                                           // 00000007AFE0: BF800000
	.long 0xbf800000                                           // 00000007AFE4: BF800000
	.long 0xbf800000                                           // 00000007AFE8: BF800000
	.long 0xbf800000                                           // 00000007AFEC: BF800000
	.long 0xbf800000                                           // 00000007AFF0: BF800000
	.long 0xbf800000                                           // 00000007AFF4: BF800000
	.long 0xbf800000                                           // 00000007AFF8: BF800000
	.long 0xbf800000                                           // 00000007AFFC: BF800000

	.p2align	8
	.type	mul_char_x_get_global_offset,@function
	.size	mul_char_x_get_global_offset, mul_char_x_get_global_offset_symend-mul_char_x_get_global_offset
mul_char_x_get_global_offset:
	s_clause 0x3                                               // 00000007B000: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007B004: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B00C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007B014: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007B01C: F4040000 F8000000
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007B024: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B02C: D6100002 02291500
	s_lshl_b32 s2, s2, 4                                       // 00000007B034: 84028402
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B038: D6100000 02292900
	s_lshl_b32 s3, s3, 1                                       // 00000007B040: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000007B044: 84048104
	s_mov_b32 s33, 0                                           // 00000007B048: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007B04C: BF89FC07
	s_mul_i32 s7, s8, s5                                       // 00000007B050: 96070508
	v_add3_u32 v1, s8, s2, v1                                  // 00000007B054: D6550001 04040408
	s_mul_i32 s2, s10, s5                                      // 00000007B05C: 9602050A
	v_add3_u32 v2, s10, s3, v2                                 // 00000007B060: D6550002 0408060A
	v_mov_b32_e32 v4, s2                                       // 00000007B068: 7E080202
	s_mul_i32 s3, s6, s5                                       // 00000007B06C: 96030506
	v_mov_b32_e32 v3, s7                                       // 00000007B070: 7E060207
	v_add3_u32 v0, s6, s4, v0                                  // 00000007B074: D6550000 04000806
	v_mov_b32_e32 v5, s3                                       // 00000007B07C: 7E0A0203
	s_clause 0x2                                               // 00000007B080: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007B084: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007B08C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007B094: DC620000 00000500
	s_nop 0                                                    // 00000007B09C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B0A0: BFB60003
	s_endpgm                                                   // 00000007B0A4: BFB00000
mul_char_x_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007B0A8: BF800000
	.long 0xbf800000                                           // 00000007B0AC: BF800000
	.long 0xbf800000                                           // 00000007B0B0: BF800000
	.long 0xbf800000                                           // 00000007B0B4: BF800000
	.long 0xbf800000                                           // 00000007B0B8: BF800000
	.long 0xbf800000                                           // 00000007B0BC: BF800000
	.long 0xbf800000                                           // 00000007B0C0: BF800000
	.long 0xbf800000                                           // 00000007B0C4: BF800000
	.long 0xbf800000                                           // 00000007B0C8: BF800000
	.long 0xbf800000                                           // 00000007B0CC: BF800000
	.long 0xbf800000                                           // 00000007B0D0: BF800000
	.long 0xbf800000                                           // 00000007B0D4: BF800000
	.long 0xbf800000                                           // 00000007B0D8: BF800000
	.long 0xbf800000                                           // 00000007B0DC: BF800000
	.long 0xbf800000                                           // 00000007B0E0: BF800000
	.long 0xbf800000                                           // 00000007B0E4: BF800000
	.long 0xbf800000                                           // 00000007B0E8: BF800000
	.long 0xbf800000                                           // 00000007B0EC: BF800000
	.long 0xbf800000                                           // 00000007B0F0: BF800000
	.long 0xbf800000                                           // 00000007B0F4: BF800000
	.long 0xbf800000                                           // 00000007B0F8: BF800000
	.long 0xbf800000                                           // 00000007B0FC: BF800000

	.p2align	8
	.type	mul_char_get_global_offset_get_global_offset,@function
	.size	mul_char_get_global_offset_get_global_offset, mul_char_get_global_offset_get_global_offset_symend-mul_char_get_global_offset_get_global_offset
mul_char_get_global_offset_get_global_offset:
	s_clause 0x2                                               // 00000007B100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007B10C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B114: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007B11C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B124: D6100002 02291500
	s_lshl_b32 s2, s2, 1                                       // 00000007B12C: 84028102
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B130: D6100000 02292900
	s_lshl_b32 s3, s3, 4                                       // 00000007B138: 84038403
	s_lshl_b32 s4, s4, 1                                       // 00000007B13C: 84048104
	s_mov_b32 s33, 0                                           // 00000007B140: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007B144: BF89FC07
	s_mul_i32 s6, s8, s8                                       // 00000007B148: 96060808
	v_add3_u32 v1, s8, s2, v1                                  // 00000007B14C: D6550001 04040408
	s_mul_i32 s2, s10, s10                                     // 00000007B154: 96020A0A
	v_add3_u32 v2, s10, s3, v2                                 // 00000007B158: D6550002 0408060A
	v_mov_b32_e32 v4, s2                                       // 00000007B160: 7E080202
	s_mul_i32 s3, s5, s5                                       // 00000007B164: 96030505
	v_mov_b32_e32 v3, s6                                       // 00000007B168: 7E060206
	v_add3_u32 v0, s5, s4, v0                                  // 00000007B16C: D6550000 04000805
	v_mov_b32_e32 v5, s3                                       // 00000007B174: 7E0A0203
	s_clause 0x2                                               // 00000007B178: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007B17C: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007B184: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007B18C: DC620000 00000500
	s_nop 0                                                    // 00000007B194: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B198: BFB60003
	s_endpgm                                                   // 00000007B19C: BFB00000
mul_char_get_global_offset_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007B1A0: BF800000
	.long 0xbf800000                                           // 00000007B1A4: BF800000
	.long 0xbf800000                                           // 00000007B1A8: BF800000
	.long 0xbf800000                                           // 00000007B1AC: BF800000
	.long 0xbf800000                                           // 00000007B1B0: BF800000
	.long 0xbf800000                                           // 00000007B1B4: BF800000
	.long 0xbf800000                                           // 00000007B1B8: BF800000
	.long 0xbf800000                                           // 00000007B1BC: BF800000
	.long 0xbf800000                                           // 00000007B1C0: BF800000
	.long 0xbf800000                                           // 00000007B1C4: BF800000
	.long 0xbf800000                                           // 00000007B1C8: BF800000
	.long 0xbf800000                                           // 00000007B1CC: BF800000
	.long 0xbf800000                                           // 00000007B1D0: BF800000
	.long 0xbf800000                                           // 00000007B1D4: BF800000
	.long 0xbf800000                                           // 00000007B1D8: BF800000
	.long 0xbf800000                                           // 00000007B1DC: BF800000
	.long 0xbf800000                                           // 00000007B1E0: BF800000
	.long 0xbf800000                                           // 00000007B1E4: BF800000
	.long 0xbf800000                                           // 00000007B1E8: BF800000
	.long 0xbf800000                                           // 00000007B1EC: BF800000
	.long 0xbf800000                                           // 00000007B1F0: BF800000
	.long 0xbf800000                                           // 00000007B1F4: BF800000
	.long 0xbf800000                                           // 00000007B1F8: BF800000
	.long 0xbf800000                                           // 00000007B1FC: BF800000

	.p2align	8
	.type	mul_char_get_local_id_get_global_offset,@function
	.size	mul_char_get_local_id_get_global_offset, mul_char_get_local_id_get_global_offset_symend-mul_char_get_local_id_get_global_offset
mul_char_get_local_id_get_global_offset:
	s_clause 0x2                                               // 00000007B200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007B20C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B214: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007B21C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B224: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B22C: D6100000 02292900
	s_lshl_b32 s2, s2, 3                                       // 00000007B234: 84028302
	s_lshl_b32 s3, s3, 2                                       // 00000007B238: 84038203
	s_lshl_b32 s4, s4, 1                                       // 00000007B23C: 84048104
	s_mov_b32 s33, 0                                           // 00000007B240: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007B244: BF89FC07
	v_mul_lo_u32 v3, s8, v1                                    // 00000007B248: D72C0003 00020208
	v_mul_lo_u32 v4, s10, v2                                   // 00000007B250: D72C0004 0002040A
	v_mul_lo_u32 v5, s5, v0                                    // 00000007B258: D72C0005 00020005
	v_add3_u32 v1, s8, s2, v1                                  // 00000007B260: D6550001 04040408
	v_add3_u32 v2, s10, s3, v2                                 // 00000007B268: D6550002 0408060A
	v_add3_u32 v0, s5, s4, v0                                  // 00000007B270: D6550000 04000805
	s_clause 0x2                                               // 00000007B278: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007B27C: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007B284: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007B28C: DC620000 00000500
	s_nop 0                                                    // 00000007B294: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B298: BFB60003
	s_endpgm                                                   // 00000007B29C: BFB00000
mul_char_get_local_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007B2A0: BF800000
	.long 0xbf800000                                           // 00000007B2A4: BF800000
	.long 0xbf800000                                           // 00000007B2A8: BF800000
	.long 0xbf800000                                           // 00000007B2AC: BF800000
	.long 0xbf800000                                           // 00000007B2B0: BF800000
	.long 0xbf800000                                           // 00000007B2B4: BF800000
	.long 0xbf800000                                           // 00000007B2B8: BF800000
	.long 0xbf800000                                           // 00000007B2BC: BF800000
	.long 0xbf800000                                           // 00000007B2C0: BF800000
	.long 0xbf800000                                           // 00000007B2C4: BF800000
	.long 0xbf800000                                           // 00000007B2C8: BF800000
	.long 0xbf800000                                           // 00000007B2CC: BF800000
	.long 0xbf800000                                           // 00000007B2D0: BF800000
	.long 0xbf800000                                           // 00000007B2D4: BF800000
	.long 0xbf800000                                           // 00000007B2D8: BF800000
	.long 0xbf800000                                           // 00000007B2DC: BF800000
	.long 0xbf800000                                           // 00000007B2E0: BF800000
	.long 0xbf800000                                           // 00000007B2E4: BF800000
	.long 0xbf800000                                           // 00000007B2E8: BF800000
	.long 0xbf800000                                           // 00000007B2EC: BF800000
	.long 0xbf800000                                           // 00000007B2F0: BF800000
	.long 0xbf800000                                           // 00000007B2F4: BF800000
	.long 0xbf800000                                           // 00000007B2F8: BF800000
	.long 0xbf800000                                           // 00000007B2FC: BF800000

	.p2align	8
	.type	mul_char_get_group_id_get_global_offset,@function
	.size	mul_char_get_group_id_get_global_offset, mul_char_get_group_id_get_global_offset_symend-mul_char_get_group_id_get_global_offset
mul_char_get_group_id_get_global_offset:
	s_clause 0x2                                               // 00000007B300: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007B30C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B314: F4040000 F8000008
	s_lshl_b32 s7, s3, 4                                       // 00000007B31C: 84078403
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B320: D6100002 02291500
	s_lshl_b32 s6, s2, 1                                       // 00000007B328: 84068102
	s_waitcnt lgkmcnt(0)                                       // 00000007B32C: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000007B330: 84098104
	s_mov_b32 s33, 0                                           // 00000007B334: BEA10080
	s_mul_i32 s3, s10, s3                                      // 00000007B338: 9603030A
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007B33C: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007B340: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B34C: D6100000 02292900
	s_mul_i32 s2, s8, s2                                       // 00000007B354: 96020208
	s_mul_i32 s4, s5, s4                                       // 00000007B358: 96040405
	v_add3_u32 v1, s8, s6, v1                                  // 00000007B35C: D6550001 04040C08
	v_mov_b32_e32 v3, s2                                       // 00000007B364: 7E060202
	v_add3_u32 v2, s10, s7, v2                                 // 00000007B368: D6550002 04080E0A
	v_add3_u32 v0, s5, s9, v0                                  // 00000007B370: D6550000 04001205
	v_mov_b32_e32 v5, s4                                       // 00000007B378: 7E0A0204
	s_clause 0x2                                               // 00000007B37C: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007B380: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007B388: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007B390: DC620000 00000500
	s_nop 0                                                    // 00000007B398: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B39C: BFB60003
	s_endpgm                                                   // 00000007B3A0: BFB00000
mul_char_get_group_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007B3A4: BF800000
	.long 0xbf800000                                           // 00000007B3A8: BF800000
	.long 0xbf800000                                           // 00000007B3AC: BF800000
	.long 0xbf800000                                           // 00000007B3B0: BF800000
	.long 0xbf800000                                           // 00000007B3B4: BF800000
	.long 0xbf800000                                           // 00000007B3B8: BF800000
	.long 0xbf800000                                           // 00000007B3BC: BF800000
	.long 0xbf800000                                           // 00000007B3C0: BF800000
	.long 0xbf800000                                           // 00000007B3C4: BF800000
	.long 0xbf800000                                           // 00000007B3C8: BF800000
	.long 0xbf800000                                           // 00000007B3CC: BF800000
	.long 0xbf800000                                           // 00000007B3D0: BF800000
	.long 0xbf800000                                           // 00000007B3D4: BF800000
	.long 0xbf800000                                           // 00000007B3D8: BF800000
	.long 0xbf800000                                           // 00000007B3DC: BF800000
	.long 0xbf800000                                           // 00000007B3E0: BF800000
	.long 0xbf800000                                           // 00000007B3E4: BF800000
	.long 0xbf800000                                           // 00000007B3E8: BF800000
	.long 0xbf800000                                           // 00000007B3EC: BF800000
	.long 0xbf800000                                           // 00000007B3F0: BF800000
	.long 0xbf800000                                           // 00000007B3F4: BF800000
	.long 0xbf800000                                           // 00000007B3F8: BF800000
	.long 0xbf800000                                           // 00000007B3FC: BF800000

	.p2align	8
	.type	mul_char_get_local_size_get_global_offset,@function
	.size	mul_char_get_local_size_get_global_offset, mul_char_get_local_size_get_global_offset_symend-mul_char_get_local_size_get_global_offset
mul_char_get_local_size_get_global_offset:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007B400: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007B408: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007B40C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007B410: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 00000007B414: 84108102
	s_lshl_b32 s17, s3, 1                                      // 00000007B418: 84118103
	s_lshl_b32 s18, s4, 2                                      // 00000007B41C: 84128204
	v_mov_b32_e32 v1, 0                                        // 00000007B420: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007B424: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007B42C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007B430: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007B434: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007B438: BF870009
	s_add_u32 s6, s5, s2                                       // 00000007B43C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007B440: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007B444: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 00000007B448: DC4A0000 02060001
	s_clause 0x1                                               // 00000007B450: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007B454: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007B45C: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007B464: 9802948E
	s_load_b32 s3, s[0:1], 0x48                                // 00000007B468: F40000C0 F8000048
	s_add_u32 s0, s5, s2                                       // 00000007B470: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007B474: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007B478: BF0A0A04
	s_waitcnt lgkmcnt(0)                                       // 00000007B47C: BF89FC07
	v_add3_u32 v3, s12, s16, v3                                // 00000007B480: D6550003 040C200C
	s_waitcnt vmcnt(0)                                         // 00000007B488: BF8903F7
	v_mul_lo_u32 v2, s12, v2                                   // 00000007B48C: D72C0002 0002040C
	global_store_b8 v3, v2, s[6:7]                             // 00000007B494: DC620000 00060203
	global_load_u16 v2, v1, s[0:1]                             // 00000007B49C: DC4A0000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007B4A4: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007B4AC: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B4B0: D6100000 02292900
	s_add_u32 s0, s5, s0                                       // 00000007B4B8: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007B4BC: 8201800B
	v_add3_u32 v3, s14, s17, v3                                // 00000007B4C0: D6550003 040C220E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007B4C8: BF870002
	v_add3_u32 v0, s3, s18, v0                                 // 00000007B4CC: D6550000 04002403
	s_waitcnt vmcnt(0)                                         // 00000007B4D4: BF8903F7
	v_mul_lo_u32 v2, s14, v2                                   // 00000007B4D8: D72C0002 0002040E
	global_store_b8 v3, v2, s[6:7]                             // 00000007B4E0: DC620000 00060203
	global_load_u16 v1, v1, s[0:1]                             // 00000007B4E8: DC4A0000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007B4F0: BF8903F7
	v_mul_lo_u32 v1, s3, v1                                    // 00000007B4F4: D72C0001 00020203
	global_store_b8 v0, v1, s[6:7]                             // 00000007B4FC: DC620000 00060100
	s_nop 0                                                    // 00000007B504: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B508: BFB60003
	s_endpgm                                                   // 00000007B50C: BFB00000
mul_char_get_local_size_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007B510: BF800000
	.long 0xbf800000                                           // 00000007B514: BF800000
	.long 0xbf800000                                           // 00000007B518: BF800000
	.long 0xbf800000                                           // 00000007B51C: BF800000
	.long 0xbf800000                                           // 00000007B520: BF800000
	.long 0xbf800000                                           // 00000007B524: BF800000
	.long 0xbf800000                                           // 00000007B528: BF800000
	.long 0xbf800000                                           // 00000007B52C: BF800000
	.long 0xbf800000                                           // 00000007B530: BF800000
	.long 0xbf800000                                           // 00000007B534: BF800000
	.long 0xbf800000                                           // 00000007B538: BF800000
	.long 0xbf800000                                           // 00000007B53C: BF800000
	.long 0xbf800000                                           // 00000007B540: BF800000
	.long 0xbf800000                                           // 00000007B544: BF800000
	.long 0xbf800000                                           // 00000007B548: BF800000
	.long 0xbf800000                                           // 00000007B54C: BF800000
	.long 0xbf800000                                           // 00000007B550: BF800000
	.long 0xbf800000                                           // 00000007B554: BF800000
	.long 0xbf800000                                           // 00000007B558: BF800000
	.long 0xbf800000                                           // 00000007B55C: BF800000
	.long 0xbf800000                                           // 00000007B560: BF800000
	.long 0xbf800000                                           // 00000007B564: BF800000
	.long 0xbf800000                                           // 00000007B568: BF800000
	.long 0xbf800000                                           // 00000007B56C: BF800000
	.long 0xbf800000                                           // 00000007B570: BF800000
	.long 0xbf800000                                           // 00000007B574: BF800000
	.long 0xbf800000                                           // 00000007B578: BF800000
	.long 0xbf800000                                           // 00000007B57C: BF800000
	.long 0xbf800000                                           // 00000007B580: BF800000
	.long 0xbf800000                                           // 00000007B584: BF800000
	.long 0xbf800000                                           // 00000007B588: BF800000
	.long 0xbf800000                                           // 00000007B58C: BF800000
	.long 0xbf800000                                           // 00000007B590: BF800000
	.long 0xbf800000                                           // 00000007B594: BF800000
	.long 0xbf800000                                           // 00000007B598: BF800000
	.long 0xbf800000                                           // 00000007B59C: BF800000
	.long 0xbf800000                                           // 00000007B5A0: BF800000
	.long 0xbf800000                                           // 00000007B5A4: BF800000
	.long 0xbf800000                                           // 00000007B5A8: BF800000
	.long 0xbf800000                                           // 00000007B5AC: BF800000
	.long 0xbf800000                                           // 00000007B5B0: BF800000
	.long 0xbf800000                                           // 00000007B5B4: BF800000
	.long 0xbf800000                                           // 00000007B5B8: BF800000
	.long 0xbf800000                                           // 00000007B5BC: BF800000
	.long 0xbf800000                                           // 00000007B5C0: BF800000
	.long 0xbf800000                                           // 00000007B5C4: BF800000
	.long 0xbf800000                                           // 00000007B5C8: BF800000
	.long 0xbf800000                                           // 00000007B5CC: BF800000
	.long 0xbf800000                                           // 00000007B5D0: BF800000
	.long 0xbf800000                                           // 00000007B5D4: BF800000
	.long 0xbf800000                                           // 00000007B5D8: BF800000
	.long 0xbf800000                                           // 00000007B5DC: BF800000
	.long 0xbf800000                                           // 00000007B5E0: BF800000
	.long 0xbf800000                                           // 00000007B5E4: BF800000
	.long 0xbf800000                                           // 00000007B5E8: BF800000
	.long 0xbf800000                                           // 00000007B5EC: BF800000
	.long 0xbf800000                                           // 00000007B5F0: BF800000
	.long 0xbf800000                                           // 00000007B5F4: BF800000
	.long 0xbf800000                                           // 00000007B5F8: BF800000
	.long 0xbf800000                                           // 00000007B5FC: BF800000

	.p2align	8
	.type	mul_char_get_global_id_get_global_offset,@function
	.size	mul_char_get_global_id_get_global_offset, mul_char_get_global_id_get_global_offset_symend-mul_char_get_global_id_get_global_offset
mul_char_get_global_id_get_global_offset:
	s_clause 0x2                                               // 00000007B600: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007B60C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B614: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007B61C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B624: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B62C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007B634: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007B638: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007B63C: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 00000007B644: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007B64C: BF8701A3
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007B650: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007B658: BF89FC07
	v_add_nc_u32_e32 v2, s8, v4                                // 00000007B65C: 4A040808
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007B660: BF870193
	v_add_nc_u32_e32 v1, s10, v1                               // 00000007B664: 4A02020A
	v_add_nc_u32_e32 v3, s5, v0                                // 00000007B668: 4A060005
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007B66C: BF870193
	v_mul_lo_u32 v5, v2, s8                                    // 00000007B670: D72C0005 00001102
	v_mul_lo_u32 v6, s10, v1                                   // 00000007B678: D72C0006 0002020A
	v_add_co_u32 v0, s2, s0, v1                                // 00000007B680: D7000200 00020200
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007B688: BF8700B4
	v_mul_lo_u32 v7, s5, v3                                    // 00000007B68C: D72C0007 00020605
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007B694: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v3                                // 00000007B69C: D7000202 00020600
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007B6A4: D5207C03 00090001
	s_clause 0x2                                               // 00000007B6AC: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 00000007B6B0: DC620000 00000504
	global_store_b8 v[0:1], v6, off                            // 00000007B6B8: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007B6C0: DC620000 007C0702
	s_nop 0                                                    // 00000007B6C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B6CC: BFB60003
	s_endpgm                                                   // 00000007B6D0: BFB00000
mul_char_get_global_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007B6D4: BF800000
	.long 0xbf800000                                           // 00000007B6D8: BF800000
	.long 0xbf800000                                           // 00000007B6DC: BF800000
	.long 0xbf800000                                           // 00000007B6E0: BF800000
	.long 0xbf800000                                           // 00000007B6E4: BF800000
	.long 0xbf800000                                           // 00000007B6E8: BF800000
	.long 0xbf800000                                           // 00000007B6EC: BF800000
	.long 0xbf800000                                           // 00000007B6F0: BF800000
	.long 0xbf800000                                           // 00000007B6F4: BF800000
	.long 0xbf800000                                           // 00000007B6F8: BF800000
	.long 0xbf800000                                           // 00000007B6FC: BF800000

	.p2align	8
	.type	mul_char_get_global_size_get_global_offset,@function
	.size	mul_char_get_global_size_get_global_offset, mul_char_get_global_size_get_global_offset_symend-mul_char_get_global_size_get_global_offset
mul_char_get_global_size_get_global_offset:
	v_mov_b32_e32 v1, 0                                        // 00000007B700: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007B704: 360600FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007B70C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B714: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 00000007B71C: 84028402
	s_clause 0x1                                               // 00000007B720: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007B724: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007B72C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007B734: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007B738: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007B740: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007B748: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007B750: F4040000 F8000000
	s_lshl_b32 s3, s3, 1                                       // 00000007B758: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000007B75C: 84048104
	s_mov_b32 s33, 0                                           // 00000007B760: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007B764: BF89FC07
	s_lshl_b32 s6, s8, 4                                       // 00000007B768: 84068408
	s_lshl_b32 s7, s9, 1                                       // 00000007B76C: 84078109
	s_lshl_b32 s8, s10, 1                                      // 00000007B770: 8408810A
	v_add3_u32 v3, s12, s2, v3                                 // 00000007B774: D6550003 040C040C
	v_add3_u32 v5, s14, s3, v5                                 // 00000007B77C: D6550005 0414060E
	v_add3_u32 v0, s5, s4, v0                                  // 00000007B784: D6550000 04000805
	s_waitcnt vmcnt(1)                                         // 00000007B78C: BF8907F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007B790: 32080490
	v_add_nc_u32_e32 v2, s6, v2                                // 00000007B794: 4A040406
	s_waitcnt vmcnt(0)                                         // 00000007B798: BF8903F7
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007B79C: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007B7A0: BF870193
	v_add_nc_u32_e32 v4, s7, v4                                // 00000007B7A4: 4A080807
	v_mul_lo_u32 v2, s12, v2                                   // 00000007B7A8: D72C0002 0002040C
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007B7B0: BF870193
	v_mul_lo_u32 v1, s5, v1                                    // 00000007B7B4: D72C0001 00020205
	v_mul_lo_u32 v4, s14, v4                                   // 00000007B7BC: D72C0004 0002080E
	s_clause 0x2                                               // 00000007B7C4: BF850002
	global_store_b8 v3, v2, s[0:1]                             // 00000007B7C8: DC620000 00000203
	global_store_b8 v5, v4, s[0:1]                             // 00000007B7D0: DC620000 00000405
	global_store_b8 v0, v1, s[0:1]                             // 00000007B7D8: DC620000 00000100
	s_nop 0                                                    // 00000007B7E0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B7E4: BFB60003
	s_endpgm                                                   // 00000007B7E8: BFB00000
mul_char_get_global_size_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007B7EC: BF800000
	.long 0xbf800000                                           // 00000007B7F0: BF800000
	.long 0xbf800000                                           // 00000007B7F4: BF800000
	.long 0xbf800000                                           // 00000007B7F8: BF800000
	.long 0xbf800000                                           // 00000007B7FC: BF800000

	.p2align	8
	.type	mul_char_get_num_groups_get_global_offset,@function
	.size	mul_char_get_num_groups_get_global_offset, mul_char_get_num_groups_get_global_offset_symend-mul_char_get_num_groups_get_global_offset
mul_char_get_num_groups_get_global_offset:
	v_mov_b32_e32 v1, 0                                        // 00000007B800: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007B804: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007B80C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B814: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007B81C: BEA10080
	s_clause 0x1                                               // 00000007B820: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007B824: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007B82C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007B834: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B838: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007B840: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000007B848: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007B850: F4040180 F8000008
	s_lshl_b32 s0, s2, 1                                       // 00000007B858: 84008102
	s_lshl_b32 s1, s3, 1                                       // 00000007B85C: 84018103
	s_lshl_b32 s2, s4, 2                                       // 00000007B860: 84028204
	s_waitcnt lgkmcnt(0)                                       // 00000007B864: BF89FC07
	v_add3_u32 v0, s5, s2, v0                                  // 00000007B868: D6550000 04000405
	s_waitcnt vmcnt(1)                                         // 00000007B870: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007B874: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007B878: 32040490
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007B87C: BF07806A
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007B880: BF870001
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007B884: 7C7A0480
	v_add3_u32 v2, s8, s0, v3                                  // 00000007B888: D6550002 040C0008
	s_addc_u32 s3, s12, 0                                      // 00000007B890: 8203800C
	s_waitcnt vmcnt(0)                                         // 00000007B894: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000007B898: D43D0000 00020280
	s_mul_i32 s3, s8, s3                                       // 00000007B8A0: 96030308
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007B8A4: BF07806A
	v_mov_b32_e32 v1, s3                                       // 00000007B8A8: 7E020203
	s_addc_u32 s3, s13, 0                                      // 00000007B8AC: 8203800D
	s_cmp_lg_u32 s0, 0                                         // 00000007B8B0: BF078000
	s_mul_i32 s0, s10, s3                                      // 00000007B8B4: 9600030A
	s_addc_u32 s3, s14, 0                                      // 00000007B8B8: 8203800E
	v_add3_u32 v3, s10, s1, v4                                 // 00000007B8BC: D6550003 0410020A
	v_mov_b32_e32 v4, s0                                       // 00000007B8C4: 7E080200
	s_mul_i32 s0, s5, s3                                       // 00000007B8C8: 96000305
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007B8CC: BF870009
	v_mov_b32_e32 v5, s0                                       // 00000007B8D0: 7E0A0200
	s_clause 0x2                                               // 00000007B8D4: BF850002
	global_store_b8 v2, v1, s[6:7]                             // 00000007B8D8: DC620000 00060102
	global_store_b8 v3, v4, s[6:7]                             // 00000007B8E0: DC620000 00060403
	global_store_b8 v0, v5, s[6:7]                             // 00000007B8E8: DC620000 00060500
	s_nop 0                                                    // 00000007B8F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B8F4: BFB60003
	s_endpgm                                                   // 00000007B8F8: BFB00000
mul_char_get_num_groups_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007B8FC: BF800000

	.p2align	8
	.type	mul_char_get_work_dim_get_global_offset,@function
	.size	mul_char_get_work_dim_get_global_offset, mul_char_get_work_dim_get_global_offset_symend-mul_char_get_work_dim_get_global_offset
mul_char_get_work_dim_get_global_offset:
	s_clause 0x3                                               // 00000007B900: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B904: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007B90C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 00000007B914: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B91C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007B924: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B92C: D6100002 02291500
	s_lshl_b32 s2, s2, 1                                       // 00000007B934: 84028102
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B938: D6100000 02292900
	s_lshl_b32 s3, s3, 1                                       // 00000007B940: 84038103
	s_lshl_b32 s4, s4, 2                                       // 00000007B944: 84048204
	s_mov_b32 s33, 0                                           // 00000007B948: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007B94C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000007B950: D6550001 04040408
	s_mul_i32 s7, s8, s5                                       // 00000007B958: 96070508
	s_mul_i32 s2, s10, s5                                      // 00000007B95C: 9602050A
	v_add3_u32 v2, s10, s3, v2                                 // 00000007B960: D6550002 0408060A
	v_mov_b32_e32 v4, s2                                       // 00000007B968: 7E080202
	s_mul_i32 s3, s6, s5                                       // 00000007B96C: 96030506
	v_mov_b32_e32 v3, s7                                       // 00000007B970: 7E060207
	v_add3_u32 v0, s6, s4, v0                                  // 00000007B974: D6550000 04000806
	v_mov_b32_e32 v5, s3                                       // 00000007B97C: 7E0A0203
	s_clause 0x2                                               // 00000007B980: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007B984: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007B98C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007B994: DC620000 00000500
	s_nop 0                                                    // 00000007B99C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B9A0: BFB60003
	s_endpgm                                                   // 00000007B9A4: BFB00000
mul_char_get_work_dim_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007B9A8: BF800000
	.long 0xbf800000                                           // 00000007B9AC: BF800000
	.long 0xbf800000                                           // 00000007B9B0: BF800000
	.long 0xbf800000                                           // 00000007B9B4: BF800000
	.long 0xbf800000                                           // 00000007B9B8: BF800000
	.long 0xbf800000                                           // 00000007B9BC: BF800000
	.long 0xbf800000                                           // 00000007B9C0: BF800000
	.long 0xbf800000                                           // 00000007B9C4: BF800000
	.long 0xbf800000                                           // 00000007B9C8: BF800000
	.long 0xbf800000                                           // 00000007B9CC: BF800000
	.long 0xbf800000                                           // 00000007B9D0: BF800000
	.long 0xbf800000                                           // 00000007B9D4: BF800000
	.long 0xbf800000                                           // 00000007B9D8: BF800000
	.long 0xbf800000                                           // 00000007B9DC: BF800000
	.long 0xbf800000                                           // 00000007B9E0: BF800000
	.long 0xbf800000                                           // 00000007B9E4: BF800000
	.long 0xbf800000                                           // 00000007B9E8: BF800000
	.long 0xbf800000                                           // 00000007B9EC: BF800000
	.long 0xbf800000                                           // 00000007B9F0: BF800000
	.long 0xbf800000                                           // 00000007B9F4: BF800000
	.long 0xbf800000                                           // 00000007B9F8: BF800000
	.long 0xbf800000                                           // 00000007B9FC: BF800000

	.p2align	8
	.type	mul_char_x_get_local_id,@function
	.size	mul_char_x_get_local_id, mul_char_x_get_local_id_symend-mul_char_x_get_local_id
mul_char_x_get_local_id:
	s_clause 0x3                                               // 00000007BA00: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007BA04: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007BA0C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007BA14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007BA1C: F4040000 F8000000
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007BA24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007BA2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007BA34: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 00000007BA3C: 84028402
	s_lshl_b32 s3, s3, 1                                       // 00000007BA40: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000007BA44: 84048104
	s_mov_b32 s33, 0                                           // 00000007BA48: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007BA4C: BF89FC07
	v_mul_lo_u32 v3, s5, v1                                    // 00000007BA50: D72C0003 00020205
	v_mul_lo_u32 v4, s5, v2                                    // 00000007BA58: D72C0004 00020405
	v_mul_lo_u32 v5, s5, v0                                    // 00000007BA60: D72C0005 00020005
	v_add3_u32 v1, s8, s2, v1                                  // 00000007BA68: D6550001 04040408
	v_add3_u32 v2, s10, s3, v2                                 // 00000007BA70: D6550002 0408060A
	v_add3_u32 v0, s6, s4, v0                                  // 00000007BA78: D6550000 04000806
	s_clause 0x2                                               // 00000007BA80: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007BA84: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007BA8C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007BA94: DC620000 00000500
	s_nop 0                                                    // 00000007BA9C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BAA0: BFB60003
	s_endpgm                                                   // 00000007BAA4: BFB00000
mul_char_x_get_local_id_symend:
	.long 0xbf800000                                           // 00000007BAA8: BF800000
	.long 0xbf800000                                           // 00000007BAAC: BF800000
	.long 0xbf800000                                           // 00000007BAB0: BF800000
	.long 0xbf800000                                           // 00000007BAB4: BF800000
	.long 0xbf800000                                           // 00000007BAB8: BF800000
	.long 0xbf800000                                           // 00000007BABC: BF800000
	.long 0xbf800000                                           // 00000007BAC0: BF800000
	.long 0xbf800000                                           // 00000007BAC4: BF800000
	.long 0xbf800000                                           // 00000007BAC8: BF800000
	.long 0xbf800000                                           // 00000007BACC: BF800000
	.long 0xbf800000                                           // 00000007BAD0: BF800000
	.long 0xbf800000                                           // 00000007BAD4: BF800000
	.long 0xbf800000                                           // 00000007BAD8: BF800000
	.long 0xbf800000                                           // 00000007BADC: BF800000
	.long 0xbf800000                                           // 00000007BAE0: BF800000
	.long 0xbf800000                                           // 00000007BAE4: BF800000
	.long 0xbf800000                                           // 00000007BAE8: BF800000
	.long 0xbf800000                                           // 00000007BAEC: BF800000
	.long 0xbf800000                                           // 00000007BAF0: BF800000
	.long 0xbf800000                                           // 00000007BAF4: BF800000
	.long 0xbf800000                                           // 00000007BAF8: BF800000
	.long 0xbf800000                                           // 00000007BAFC: BF800000

	.p2align	8
	.type	mul_char_get_global_offset_get_local_id,@function
	.size	mul_char_get_global_offset_get_local_id, mul_char_get_global_offset_get_local_id_symend-mul_char_get_global_offset_get_local_id
mul_char_get_global_offset_get_local_id:
	s_clause 0x2                                               // 00000007BB00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007BB04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007BB0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007BB14: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007BB1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007BB24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007BB2C: D6100000 02292900
	s_lshl_b32 s2, s2, 1                                       // 00000007BB34: 84028102
	s_lshl_b32 s3, s3, 4                                       // 00000007BB38: 84038403
	s_lshl_b32 s4, s4, 1                                       // 00000007BB3C: 84048104
	s_mov_b32 s33, 0                                           // 00000007BB40: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007BB44: BF89FC07
	v_mul_lo_u32 v3, s8, v1                                    // 00000007BB48: D72C0003 00020208
	v_mul_lo_u32 v4, s10, v2                                   // 00000007BB50: D72C0004 0002040A
	v_mul_lo_u32 v5, s5, v0                                    // 00000007BB58: D72C0005 00020005
	v_add3_u32 v1, s8, s2, v1                                  // 00000007BB60: D6550001 04040408
	v_add3_u32 v2, s10, s3, v2                                 // 00000007BB68: D6550002 0408060A
	v_add3_u32 v0, s5, s4, v0                                  // 00000007BB70: D6550000 04000805
	s_clause 0x2                                               // 00000007BB78: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007BB7C: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007BB84: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007BB8C: DC620000 00000500
	s_nop 0                                                    // 00000007BB94: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BB98: BFB60003
	s_endpgm                                                   // 00000007BB9C: BFB00000
mul_char_get_global_offset_get_local_id_symend:
	.long 0xbf800000                                           // 00000007BBA0: BF800000
	.long 0xbf800000                                           // 00000007BBA4: BF800000
	.long 0xbf800000                                           // 00000007BBA8: BF800000
	.long 0xbf800000                                           // 00000007BBAC: BF800000
	.long 0xbf800000                                           // 00000007BBB0: BF800000
	.long 0xbf800000                                           // 00000007BBB4: BF800000
	.long 0xbf800000                                           // 00000007BBB8: BF800000
	.long 0xbf800000                                           // 00000007BBBC: BF800000
	.long 0xbf800000                                           // 00000007BBC0: BF800000
	.long 0xbf800000                                           // 00000007BBC4: BF800000
	.long 0xbf800000                                           // 00000007BBC8: BF800000
	.long 0xbf800000                                           // 00000007BBCC: BF800000
	.long 0xbf800000                                           // 00000007BBD0: BF800000
	.long 0xbf800000                                           // 00000007BBD4: BF800000
	.long 0xbf800000                                           // 00000007BBD8: BF800000
	.long 0xbf800000                                           // 00000007BBDC: BF800000
	.long 0xbf800000                                           // 00000007BBE0: BF800000
	.long 0xbf800000                                           // 00000007BBE4: BF800000
	.long 0xbf800000                                           // 00000007BBE8: BF800000
	.long 0xbf800000                                           // 00000007BBEC: BF800000
	.long 0xbf800000                                           // 00000007BBF0: BF800000
	.long 0xbf800000                                           // 00000007BBF4: BF800000
	.long 0xbf800000                                           // 00000007BBF8: BF800000
	.long 0xbf800000                                           // 00000007BBFC: BF800000

	.p2align	8
	.type	mul_char_get_local_id_get_local_id,@function
	.size	mul_char_get_local_id_get_local_id, mul_char_get_local_id_get_local_id_symend-mul_char_get_local_id_get_local_id
mul_char_get_local_id_get_local_id:
	s_clause 0x2                                               // 00000007BC00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007BC04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007BC0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007BC14: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007BC1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007BC24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007BC2C: D6100000 02292900
	s_lshl_b32 s2, s2, 3                                       // 00000007BC34: 84028302
	s_lshl_b32 s3, s3, 2                                       // 00000007BC38: 84038203
	s_lshl_b32 s4, s4, 1                                       // 00000007BC3C: 84048104
	v_mul_u32_u24_e32 v3, v1, v1                               // 00000007BC40: 16060301
	v_mul_u32_u24_e32 v4, v2, v2                               // 00000007BC44: 16080502
	v_mul_u32_u24_e32 v5, v0, v0                               // 00000007BC48: 160A0100
	s_mov_b32 s33, 0                                           // 00000007BC4C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007BC50: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000007BC54: D6550001 04040408
	v_add3_u32 v2, s10, s3, v2                                 // 00000007BC5C: D6550002 0408060A
	v_add3_u32 v0, s5, s4, v0                                  // 00000007BC64: D6550000 04000805
	s_clause 0x2                                               // 00000007BC6C: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007BC70: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007BC78: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007BC80: DC620000 00000500
	s_nop 0                                                    // 00000007BC88: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BC8C: BFB60003
	s_endpgm                                                   // 00000007BC90: BFB00000
mul_char_get_local_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000007BC94: BF800000
	.long 0xbf800000                                           // 00000007BC98: BF800000
	.long 0xbf800000                                           // 00000007BC9C: BF800000
	.long 0xbf800000                                           // 00000007BCA0: BF800000
	.long 0xbf800000                                           // 00000007BCA4: BF800000
	.long 0xbf800000                                           // 00000007BCA8: BF800000
	.long 0xbf800000                                           // 00000007BCAC: BF800000
	.long 0xbf800000                                           // 00000007BCB0: BF800000
	.long 0xbf800000                                           // 00000007BCB4: BF800000
	.long 0xbf800000                                           // 00000007BCB8: BF800000
	.long 0xbf800000                                           // 00000007BCBC: BF800000
	.long 0xbf800000                                           // 00000007BCC0: BF800000
	.long 0xbf800000                                           // 00000007BCC4: BF800000
	.long 0xbf800000                                           // 00000007BCC8: BF800000
	.long 0xbf800000                                           // 00000007BCCC: BF800000
	.long 0xbf800000                                           // 00000007BCD0: BF800000
	.long 0xbf800000                                           // 00000007BCD4: BF800000
	.long 0xbf800000                                           // 00000007BCD8: BF800000
	.long 0xbf800000                                           // 00000007BCDC: BF800000
	.long 0xbf800000                                           // 00000007BCE0: BF800000
	.long 0xbf800000                                           // 00000007BCE4: BF800000
	.long 0xbf800000                                           // 00000007BCE8: BF800000
	.long 0xbf800000                                           // 00000007BCEC: BF800000
	.long 0xbf800000                                           // 00000007BCF0: BF800000
	.long 0xbf800000                                           // 00000007BCF4: BF800000
	.long 0xbf800000                                           // 00000007BCF8: BF800000
	.long 0xbf800000                                           // 00000007BCFC: BF800000

	.p2align	8
	.type	mul_char_get_group_id_get_local_id,@function
	.size	mul_char_get_group_id_get_local_id, mul_char_get_group_id_get_local_id_symend-mul_char_get_group_id_get_local_id
mul_char_get_group_id_get_local_id:
	s_clause 0x2                                               // 00000007BD00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007BD04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007BD0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007BD14: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007BD1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007BD24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007BD2C: D6100000 02292900
	s_lshl_b32 s6, s2, 1                                       // 00000007BD34: 84068102
	s_lshl_b32 s7, s3, 4                                       // 00000007BD38: 84078403
	s_waitcnt lgkmcnt(0)                                       // 00000007BD3C: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000007BD40: 84098104
	v_mul_lo_u16 v3.l, s2, v1.l                                // 00000007BD44: D7050003 00020202
	v_mul_lo_u16 v4.l, s3, v2.l                                // 00000007BD4C: D7050004 00020403
	v_mul_lo_u16 v5.l, s4, v0.l                                // 00000007BD54: D7050005 00020004
	s_mov_b32 s33, 0                                           // 00000007BD5C: BEA10080
	v_add3_u32 v1, s8, s6, v1                                  // 00000007BD60: D6550001 04040C08
	v_add3_u32 v2, s10, s7, v2                                 // 00000007BD68: D6550002 04080E0A
	v_add3_u32 v0, s5, s9, v0                                  // 00000007BD70: D6550000 04001205
	s_clause 0x2                                               // 00000007BD78: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007BD7C: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007BD84: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007BD8C: DC620000 00000500
	s_nop 0                                                    // 00000007BD94: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BD98: BFB60003
	s_endpgm                                                   // 00000007BD9C: BFB00000
mul_char_get_group_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000007BDA0: BF800000
	.long 0xbf800000                                           // 00000007BDA4: BF800000
	.long 0xbf800000                                           // 00000007BDA8: BF800000
	.long 0xbf800000                                           // 00000007BDAC: BF800000
	.long 0xbf800000                                           // 00000007BDB0: BF800000
	.long 0xbf800000                                           // 00000007BDB4: BF800000
	.long 0xbf800000                                           // 00000007BDB8: BF800000
	.long 0xbf800000                                           // 00000007BDBC: BF800000
	.long 0xbf800000                                           // 00000007BDC0: BF800000
	.long 0xbf800000                                           // 00000007BDC4: BF800000
	.long 0xbf800000                                           // 00000007BDC8: BF800000
	.long 0xbf800000                                           // 00000007BDCC: BF800000
	.long 0xbf800000                                           // 00000007BDD0: BF800000
	.long 0xbf800000                                           // 00000007BDD4: BF800000
	.long 0xbf800000                                           // 00000007BDD8: BF800000
	.long 0xbf800000                                           // 00000007BDDC: BF800000
	.long 0xbf800000                                           // 00000007BDE0: BF800000
	.long 0xbf800000                                           // 00000007BDE4: BF800000
	.long 0xbf800000                                           // 00000007BDE8: BF800000
	.long 0xbf800000                                           // 00000007BDEC: BF800000
	.long 0xbf800000                                           // 00000007BDF0: BF800000
	.long 0xbf800000                                           // 00000007BDF4: BF800000
	.long 0xbf800000                                           // 00000007BDF8: BF800000
	.long 0xbf800000                                           // 00000007BDFC: BF800000

	.p2align	8
	.type	mul_char_get_local_size_get_local_id,@function
	.size	mul_char_get_local_size_get_local_id, mul_char_get_local_size_get_local_id_symend-mul_char_get_local_size_get_local_id
mul_char_get_local_size_get_local_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007BE00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007BE08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007BE0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007BE10: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000007BE14: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000007BE18: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000007BE1C: 840E8204
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007BE20: CA240080 010400FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007BE2C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007BE34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007BE3C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007BE40: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007BE44: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000007BE48: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000007BE4C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007BE50: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007BE54: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000007BE58: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000007BE5C: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000007BE60: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007BE64: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000007BE68: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007BE6C: BF870009
	s_add_u32 s4, s5, s4                                       // 00000007BE70: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000007BE74: 8205800B
	s_clause 0x2                                               // 00000007BE78: BF850002
	global_load_u8 v2, v1, s[6:7]                              // 00000007BE7C: DC420000 02060001
	global_load_u8 v3, v1, s[2:3]                              // 00000007BE84: DC420000 03020001
	global_load_u8 v1, v1, s[4:5]                              // 00000007BE8C: DC420000 01040001
	s_clause 0x2                                               // 00000007BE94: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007BE98: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000007BEA0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007BEA8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007BEB0: BF89FC07
	v_add3_u32 v6, s4, s12, v4                                 // 00000007BEB4: D6550006 04101804
	v_add3_u32 v7, s6, s13, v5                                 // 00000007BEBC: D6550007 04141A06
	s_waitcnt vmcnt(2)                                         // 00000007BEC4: BF890BF7
	v_mul_lo_u16 v2.l, v2.l, v4.l                              // 00000007BEC8: D7050002 00020902
	s_waitcnt vmcnt(1)                                         // 00000007BED0: BF8907F7
	v_mul_lo_u16 v3.l, v3.l, v5.l                              // 00000007BED4: D7050003 00020B03
	s_waitcnt vmcnt(0)                                         // 00000007BEDC: BF8903F7
	v_mul_lo_u16 v1.l, v1.l, v0.l                              // 00000007BEE0: D7050001 00020101
	v_add3_u32 v0, s2, s14, v0                                 // 00000007BEE8: D6550000 04001C02
	s_clause 0x2                                               // 00000007BEF0: BF850002
	global_store_b8 v6, v2, s[0:1]                             // 00000007BEF4: DC620000 00000206
	global_store_b8 v7, v3, s[0:1]                             // 00000007BEFC: DC620000 00000307
	global_store_b8 v0, v1, s[0:1]                             // 00000007BF04: DC620000 00000100
	s_nop 0                                                    // 00000007BF0C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BF10: BFB60003
	s_endpgm                                                   // 00000007BF14: BFB00000
mul_char_get_local_size_get_local_id_symend:
	.long 0xbf800000                                           // 00000007BF18: BF800000
	.long 0xbf800000                                           // 00000007BF1C: BF800000
	.long 0xbf800000                                           // 00000007BF20: BF800000
	.long 0xbf800000                                           // 00000007BF24: BF800000
	.long 0xbf800000                                           // 00000007BF28: BF800000
	.long 0xbf800000                                           // 00000007BF2C: BF800000
	.long 0xbf800000                                           // 00000007BF30: BF800000
	.long 0xbf800000                                           // 00000007BF34: BF800000
	.long 0xbf800000                                           // 00000007BF38: BF800000
	.long 0xbf800000                                           // 00000007BF3C: BF800000
	.long 0xbf800000                                           // 00000007BF40: BF800000
	.long 0xbf800000                                           // 00000007BF44: BF800000
	.long 0xbf800000                                           // 00000007BF48: BF800000
	.long 0xbf800000                                           // 00000007BF4C: BF800000
	.long 0xbf800000                                           // 00000007BF50: BF800000
	.long 0xbf800000                                           // 00000007BF54: BF800000
	.long 0xbf800000                                           // 00000007BF58: BF800000
	.long 0xbf800000                                           // 00000007BF5C: BF800000
	.long 0xbf800000                                           // 00000007BF60: BF800000
	.long 0xbf800000                                           // 00000007BF64: BF800000
	.long 0xbf800000                                           // 00000007BF68: BF800000
	.long 0xbf800000                                           // 00000007BF6C: BF800000
	.long 0xbf800000                                           // 00000007BF70: BF800000
	.long 0xbf800000                                           // 00000007BF74: BF800000
	.long 0xbf800000                                           // 00000007BF78: BF800000
	.long 0xbf800000                                           // 00000007BF7C: BF800000
	.long 0xbf800000                                           // 00000007BF80: BF800000
	.long 0xbf800000                                           // 00000007BF84: BF800000
	.long 0xbf800000                                           // 00000007BF88: BF800000
	.long 0xbf800000                                           // 00000007BF8C: BF800000
	.long 0xbf800000                                           // 00000007BF90: BF800000
	.long 0xbf800000                                           // 00000007BF94: BF800000
	.long 0xbf800000                                           // 00000007BF98: BF800000
	.long 0xbf800000                                           // 00000007BF9C: BF800000
	.long 0xbf800000                                           // 00000007BFA0: BF800000
	.long 0xbf800000                                           // 00000007BFA4: BF800000
	.long 0xbf800000                                           // 00000007BFA8: BF800000
	.long 0xbf800000                                           // 00000007BFAC: BF800000
	.long 0xbf800000                                           // 00000007BFB0: BF800000
	.long 0xbf800000                                           // 00000007BFB4: BF800000
	.long 0xbf800000                                           // 00000007BFB8: BF800000
	.long 0xbf800000                                           // 00000007BFBC: BF800000
	.long 0xbf800000                                           // 00000007BFC0: BF800000
	.long 0xbf800000                                           // 00000007BFC4: BF800000
	.long 0xbf800000                                           // 00000007BFC8: BF800000
	.long 0xbf800000                                           // 00000007BFCC: BF800000
	.long 0xbf800000                                           // 00000007BFD0: BF800000
	.long 0xbf800000                                           // 00000007BFD4: BF800000
	.long 0xbf800000                                           // 00000007BFD8: BF800000
	.long 0xbf800000                                           // 00000007BFDC: BF800000
	.long 0xbf800000                                           // 00000007BFE0: BF800000
	.long 0xbf800000                                           // 00000007BFE4: BF800000
	.long 0xbf800000                                           // 00000007BFE8: BF800000
	.long 0xbf800000                                           // 00000007BFEC: BF800000
	.long 0xbf800000                                           // 00000007BFF0: BF800000
	.long 0xbf800000                                           // 00000007BFF4: BF800000
	.long 0xbf800000                                           // 00000007BFF8: BF800000
	.long 0xbf800000                                           // 00000007BFFC: BF800000

	.p2align	8
	.type	mul_char_get_global_id_get_local_id,@function
	.size	mul_char_get_global_id_get_local_id, mul_char_get_global_id_get_local_id_symend-mul_char_get_global_id_get_local_id
mul_char_get_global_id_get_local_id:
	s_clause 0x2                                               // 00000007C000: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C004: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007C00C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C014: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007C01C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007C024: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 00000007C02C: D6100003 02292900
	s_mov_b32 s33, 0                                           // 00000007C034: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C038: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007C03C: D6560004 04050202
	v_lshl_or_b32 v0, s3, 1, v2                                // 00000007C044: D6560000 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007C04C: BF8701A3
	v_lshl_or_b32 v5, s4, 2, v3                                // 00000007C050: D6560005 040D0404
	s_waitcnt lgkmcnt(0)                                       // 00000007C058: BF89FC07
	v_add_nc_u32_e32 v6, s8, v4                                // 00000007C05C: 4A0C0808
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C060: BF870193
	v_add_nc_u32_e32 v0, s10, v0                               // 00000007C064: 4A00000A
	v_add_nc_u32_e32 v5, s5, v5                                // 00000007C068: 4A0A0A05
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C06C: BF870193
	v_mul_lo_u32 v6, v6, v1                                    // 00000007C070: D72C0006 00020306
	v_mul_lo_u32 v7, v0, v2                                    // 00000007C078: D72C0007 00020500
	v_add_co_u32 v0, s2, s0, v0                                // 00000007C080: D7000200 00020000
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007C088: BF8700B4
	v_mul_lo_u32 v8, v5, v3                                    // 00000007C08C: D72C0008 00020705
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007C094: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v5                                // 00000007C09C: D7000202 00020A00
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007C0A4: D5207C03 00090001
	s_clause 0x2                                               // 00000007C0AC: BF850002
	global_store_b8 v4, v6, s[0:1]                             // 00000007C0B0: DC620000 00000604
	global_store_b8 v[0:1], v7, off                            // 00000007C0B8: DC620000 007C0700
	global_store_b8 v[2:3], v8, off                            // 00000007C0C0: DC620000 007C0802
	s_nop 0                                                    // 00000007C0C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C0CC: BFB60003
	s_endpgm                                                   // 00000007C0D0: BFB00000
mul_char_get_global_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000007C0D4: BF800000
	.long 0xbf800000                                           // 00000007C0D8: BF800000
	.long 0xbf800000                                           // 00000007C0DC: BF800000
	.long 0xbf800000                                           // 00000007C0E0: BF800000
	.long 0xbf800000                                           // 00000007C0E4: BF800000
	.long 0xbf800000                                           // 00000007C0E8: BF800000
	.long 0xbf800000                                           // 00000007C0EC: BF800000
	.long 0xbf800000                                           // 00000007C0F0: BF800000
	.long 0xbf800000                                           // 00000007C0F4: BF800000
	.long 0xbf800000                                           // 00000007C0F8: BF800000
	.long 0xbf800000                                           // 00000007C0FC: BF800000

	.p2align	8
	.type	mul_char_get_global_size_get_local_id,@function
	.size	mul_char_get_global_size_get_local_id, mul_char_get_global_size_get_local_id_symend-mul_char_get_global_size_get_local_id
mul_char_get_global_size_get_local_id:
	v_mov_b32_e32 v1, 0                                        // 00000007C100: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007C104: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007C10C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C114: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 00000007C11C: 84028402
	s_clause 0x1                                               // 00000007C120: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007C124: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007C12C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007C134: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007C138: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000007C140: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007C148: F4080300 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 00000007C150: F4040000 F8000000
	s_lshl_b32 s3, s3, 1                                       // 00000007C158: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000007C15C: 84048104
	s_mov_b32 s33, 0                                           // 00000007C160: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C164: BF89FC07
	s_lshl_b32 s6, s8, 4                                       // 00000007C168: 84068408
	s_lshl_b32 s7, s9, 1                                       // 00000007C16C: 84078109
	s_lshl_b32 s8, s10, 1                                      // 00000007C170: 8408810A
	v_add3_u32 v7, s12, s2, v3                                 // 00000007C174: D6550007 040C040C
	v_add3_u32 v8, s14, s3, v4                                 // 00000007C17C: D6550008 0410060E
	v_add3_u32 v6, s5, s4, v0                                  // 00000007C184: D6550006 04000805
	s_waitcnt vmcnt(1)                                         // 00000007C18C: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007C190: 320A0490
	v_add_nc_u32_e32 v2, s6, v2                                // 00000007C194: 4A040406
	s_waitcnt vmcnt(0)                                         // 00000007C198: BF8903F7
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007C19C: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C1A0: BF870193
	v_add_nc_u32_e32 v5, s7, v5                                // 00000007C1A4: 4A0A0A07
	v_mul_lo_u16 v2.l, v2.l, v3.l                              // 00000007C1A8: D7050002 00020702
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C1B0: BF870193
	v_mul_lo_u16 v0.l, v1.l, v0.l                              // 00000007C1B4: D7050000 00020101
	v_mul_lo_u16 v3.l, v5.l, v4.l                              // 00000007C1BC: D7050003 00020905
	s_clause 0x2                                               // 00000007C1C4: BF850002
	global_store_b8 v7, v2, s[0:1]                             // 00000007C1C8: DC620000 00000207
	global_store_b8 v8, v3, s[0:1]                             // 00000007C1D0: DC620000 00000308
	global_store_b8 v6, v0, s[0:1]                             // 00000007C1D8: DC620000 00000006
	s_nop 0                                                    // 00000007C1E0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C1E4: BFB60003
	s_endpgm                                                   // 00000007C1E8: BFB00000
mul_char_get_global_size_get_local_id_symend:
	.long 0xbf800000                                           // 00000007C1EC: BF800000
	.long 0xbf800000                                           // 00000007C1F0: BF800000
	.long 0xbf800000                                           // 00000007C1F4: BF800000
	.long 0xbf800000                                           // 00000007C1F8: BF800000
	.long 0xbf800000                                           // 00000007C1FC: BF800000

	.p2align	8
	.type	mul_char_get_num_groups_get_local_id,@function
	.size	mul_char_get_num_groups_get_local_id, mul_char_get_num_groups_get_local_id_symend-mul_char_get_num_groups_get_local_id
mul_char_get_num_groups_get_local_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007C200: CA240080 010400FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007C20C: BEA10080
	s_clause 0x1                                               // 00000007C210: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007C214: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007C21C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007C224: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C228: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007C230: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000007C238: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007C240: F4040180 F8000008
	s_lshl_b32 s1, s2, 1                                       // 00000007C248: 84018102
	s_lshl_b32 s2, s3, 1                                       // 00000007C24C: 84028103
	s_lshl_b32 s3, s4, 2                                       // 00000007C250: 84038204
	s_waitcnt vmcnt(1)                                         // 00000007C254: BF8907F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 00000007C258: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007C25C: 7C7A0480
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007C260: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C268: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007C270: BF870004
	v_cmp_ne_u16_e64 s0, 0, v3.l                               // 00000007C274: D43D0000 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007C27C: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007C280: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000007C284: 7C7A0280
	s_waitcnt lgkmcnt(0)                                       // 00000007C288: BF89FC07
	v_add3_u32 v3, s8, s1, v4                                  // 00000007C28C: D6550003 04100208
	s_addc_u32 s1, s12, 0                                      // 00000007C294: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 00000007C298: BF078000
	v_mul_lo_u16 v4.l, s1, v4.l                                // 00000007C29C: D7050004 00020801
	s_addc_u32 s0, s13, 0                                      // 00000007C2A4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007C2A8: BF07806A
	v_add3_u32 v1, s10, s2, v2                                 // 00000007C2AC: D6550001 0408040A
	s_addc_u32 s1, s14, 0                                      // 00000007C2B4: 8201800E
	v_mul_lo_u16 v2.l, s0, v2.l                                // 00000007C2B8: D7050002 00020400
	v_mul_lo_u16 v5.l, s1, v0.l                                // 00000007C2C0: D7050005 00020001
	v_add3_u32 v0, s5, s3, v0                                  // 00000007C2C8: D6550000 04000605
	s_clause 0x2                                               // 00000007C2D0: BF850002
	global_store_b8 v3, v4, s[6:7]                             // 00000007C2D4: DC620000 00060403
	global_store_b8 v1, v2, s[6:7]                             // 00000007C2DC: DC620000 00060201
	global_store_b8 v0, v5, s[6:7]                             // 00000007C2E4: DC620000 00060500
	s_nop 0                                                    // 00000007C2EC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C2F0: BFB60003
	s_endpgm                                                   // 00000007C2F4: BFB00000
mul_char_get_num_groups_get_local_id_symend:
	.long 0xbf800000                                           // 00000007C2F8: BF800000
	.long 0xbf800000                                           // 00000007C2FC: BF800000

	.p2align	8
	.type	mul_char_get_work_dim_get_local_id,@function
	.size	mul_char_get_work_dim_get_local_id, mul_char_get_work_dim_get_local_id_symend-mul_char_get_work_dim_get_local_id
mul_char_get_work_dim_get_local_id:
	s_clause 0x3                                               // 00000007C300: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 00000007C304: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C30C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007C314: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C31C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007C324: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007C32C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C334: D6100000 02292900
	s_lshl_b32 s2, s2, 1                                       // 00000007C33C: 84028102
	s_lshl_b32 s3, s3, 1                                       // 00000007C340: 84038103
	s_lshl_b32 s4, s4, 2                                       // 00000007C344: 84048204
	s_mov_b32 s33, 0                                           // 00000007C348: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C34C: BF89FC07
	v_mul_lo_u16 v3.l, s5, v1.l                                // 00000007C350: D7050003 00020205
	v_add3_u32 v1, s8, s2, v1                                  // 00000007C358: D6550001 04040408
	v_mul_lo_u16 v4.l, s5, v2.l                                // 00000007C360: D7050004 00020405
	v_add3_u32 v2, s10, s3, v2                                 // 00000007C368: D6550002 0408060A
	v_mul_lo_u16 v5.l, s5, v0.l                                // 00000007C370: D7050005 00020005
	v_add3_u32 v0, s6, s4, v0                                  // 00000007C378: D6550000 04000806
	s_clause 0x2                                               // 00000007C380: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007C384: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007C38C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007C394: DC620000 00000500
	s_nop 0                                                    // 00000007C39C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C3A0: BFB60003
	s_endpgm                                                   // 00000007C3A4: BFB00000
mul_char_get_work_dim_get_local_id_symend:
	.long 0xbf800000                                           // 00000007C3A8: BF800000
	.long 0xbf800000                                           // 00000007C3AC: BF800000
	.long 0xbf800000                                           // 00000007C3B0: BF800000
	.long 0xbf800000                                           // 00000007C3B4: BF800000
	.long 0xbf800000                                           // 00000007C3B8: BF800000
	.long 0xbf800000                                           // 00000007C3BC: BF800000
	.long 0xbf800000                                           // 00000007C3C0: BF800000
	.long 0xbf800000                                           // 00000007C3C4: BF800000
	.long 0xbf800000                                           // 00000007C3C8: BF800000
	.long 0xbf800000                                           // 00000007C3CC: BF800000
	.long 0xbf800000                                           // 00000007C3D0: BF800000
	.long 0xbf800000                                           // 00000007C3D4: BF800000
	.long 0xbf800000                                           // 00000007C3D8: BF800000
	.long 0xbf800000                                           // 00000007C3DC: BF800000
	.long 0xbf800000                                           // 00000007C3E0: BF800000
	.long 0xbf800000                                           // 00000007C3E4: BF800000
	.long 0xbf800000                                           // 00000007C3E8: BF800000
	.long 0xbf800000                                           // 00000007C3EC: BF800000
	.long 0xbf800000                                           // 00000007C3F0: BF800000
	.long 0xbf800000                                           // 00000007C3F4: BF800000
	.long 0xbf800000                                           // 00000007C3F8: BF800000
	.long 0xbf800000                                           // 00000007C3FC: BF800000

	.p2align	8
	.type	mul_char_x_get_group_id,@function
	.size	mul_char_x_get_group_id, mul_char_x_get_group_id_symend-mul_char_x_get_group_id
mul_char_x_get_group_id:
	s_clause 0x3                                               // 00000007C400: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007C404: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C40C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007C414: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007C41C: F4040000 F8000000
	s_waitcnt lgkmcnt(0)                                       // 00000007C424: BF89FC07
	s_lshl_b32 s9, s3, 1                                       // 00000007C428: 84098103
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007C42C: D6100002 02291500
	s_lshl_b32 s7, s2, 4                                       // 00000007C434: 84078402
	s_lshl_b32 s11, s4, 1                                      // 00000007C438: 840B8104
	s_mov_b32 s33, 0                                           // 00000007C43C: BEA10080
	s_mul_i32 s3, s5, s3                                       // 00000007C440: 96030305
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007C444: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007C448: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C454: D6100000 02292900
	s_mul_i32 s2, s5, s2                                       // 00000007C45C: 96020205
	s_mul_i32 s4, s5, s4                                       // 00000007C460: 96040405
	v_add3_u32 v1, s8, s7, v1                                  // 00000007C464: D6550001 04040E08
	v_mov_b32_e32 v3, s2                                       // 00000007C46C: 7E060202
	v_add3_u32 v2, s10, s9, v2                                 // 00000007C470: D6550002 0408120A
	v_add3_u32 v0, s6, s11, v0                                 // 00000007C478: D6550000 04001606
	v_mov_b32_e32 v5, s4                                       // 00000007C480: 7E0A0204
	s_clause 0x2                                               // 00000007C484: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007C488: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007C490: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007C498: DC620000 00000500
	s_nop 0                                                    // 00000007C4A0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C4A4: BFB60003
	s_endpgm                                                   // 00000007C4A8: BFB00000
mul_char_x_get_group_id_symend:
	.long 0xbf800000                                           // 00000007C4AC: BF800000
	.long 0xbf800000                                           // 00000007C4B0: BF800000
	.long 0xbf800000                                           // 00000007C4B4: BF800000
	.long 0xbf800000                                           // 00000007C4B8: BF800000
	.long 0xbf800000                                           // 00000007C4BC: BF800000
	.long 0xbf800000                                           // 00000007C4C0: BF800000
	.long 0xbf800000                                           // 00000007C4C4: BF800000
	.long 0xbf800000                                           // 00000007C4C8: BF800000
	.long 0xbf800000                                           // 00000007C4CC: BF800000
	.long 0xbf800000                                           // 00000007C4D0: BF800000
	.long 0xbf800000                                           // 00000007C4D4: BF800000
	.long 0xbf800000                                           // 00000007C4D8: BF800000
	.long 0xbf800000                                           // 00000007C4DC: BF800000
	.long 0xbf800000                                           // 00000007C4E0: BF800000
	.long 0xbf800000                                           // 00000007C4E4: BF800000
	.long 0xbf800000                                           // 00000007C4E8: BF800000
	.long 0xbf800000                                           // 00000007C4EC: BF800000
	.long 0xbf800000                                           // 00000007C4F0: BF800000
	.long 0xbf800000                                           // 00000007C4F4: BF800000
	.long 0xbf800000                                           // 00000007C4F8: BF800000
	.long 0xbf800000                                           // 00000007C4FC: BF800000

	.p2align	8
	.type	mul_char_get_global_offset_get_group_id,@function
	.size	mul_char_get_global_offset_get_group_id, mul_char_get_global_offset_get_group_id_symend-mul_char_get_global_offset_get_group_id
mul_char_get_global_offset_get_group_id:
	s_clause 0x2                                               // 00000007C500: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C504: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007C50C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C514: F4040000 F8000008
	s_lshl_b32 s7, s3, 4                                       // 00000007C51C: 84078403
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007C520: D6100002 02291500
	s_lshl_b32 s6, s2, 1                                       // 00000007C528: 84068102
	s_waitcnt lgkmcnt(0)                                       // 00000007C52C: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000007C530: 84098104
	s_mov_b32 s33, 0                                           // 00000007C534: BEA10080
	s_mul_i32 s3, s10, s3                                      // 00000007C538: 9603030A
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007C53C: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007C540: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C54C: D6100000 02292900
	s_mul_i32 s2, s8, s2                                       // 00000007C554: 96020208
	s_mul_i32 s4, s5, s4                                       // 00000007C558: 96040405
	v_add3_u32 v1, s8, s6, v1                                  // 00000007C55C: D6550001 04040C08
	v_mov_b32_e32 v3, s2                                       // 00000007C564: 7E060202
	v_add3_u32 v2, s10, s7, v2                                 // 00000007C568: D6550002 04080E0A
	v_add3_u32 v0, s5, s9, v0                                  // 00000007C570: D6550000 04001205
	v_mov_b32_e32 v5, s4                                       // 00000007C578: 7E0A0204
	s_clause 0x2                                               // 00000007C57C: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007C580: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007C588: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007C590: DC620000 00000500
	s_nop 0                                                    // 00000007C598: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C59C: BFB60003
	s_endpgm                                                   // 00000007C5A0: BFB00000
mul_char_get_global_offset_get_group_id_symend:
	.long 0xbf800000                                           // 00000007C5A4: BF800000
	.long 0xbf800000                                           // 00000007C5A8: BF800000
	.long 0xbf800000                                           // 00000007C5AC: BF800000
	.long 0xbf800000                                           // 00000007C5B0: BF800000
	.long 0xbf800000                                           // 00000007C5B4: BF800000
	.long 0xbf800000                                           // 00000007C5B8: BF800000
	.long 0xbf800000                                           // 00000007C5BC: BF800000
	.long 0xbf800000                                           // 00000007C5C0: BF800000
	.long 0xbf800000                                           // 00000007C5C4: BF800000
	.long 0xbf800000                                           // 00000007C5C8: BF800000
	.long 0xbf800000                                           // 00000007C5CC: BF800000
	.long 0xbf800000                                           // 00000007C5D0: BF800000
	.long 0xbf800000                                           // 00000007C5D4: BF800000
	.long 0xbf800000                                           // 00000007C5D8: BF800000
	.long 0xbf800000                                           // 00000007C5DC: BF800000
	.long 0xbf800000                                           // 00000007C5E0: BF800000
	.long 0xbf800000                                           // 00000007C5E4: BF800000
	.long 0xbf800000                                           // 00000007C5E8: BF800000
	.long 0xbf800000                                           // 00000007C5EC: BF800000
	.long 0xbf800000                                           // 00000007C5F0: BF800000
	.long 0xbf800000                                           // 00000007C5F4: BF800000
	.long 0xbf800000                                           // 00000007C5F8: BF800000
	.long 0xbf800000                                           // 00000007C5FC: BF800000

	.p2align	8
	.type	mul_char_get_local_id_get_group_id,@function
	.size	mul_char_get_local_id_get_group_id, mul_char_get_local_id_get_group_id_symend-mul_char_get_local_id_get_group_id
mul_char_get_local_id_get_group_id:
	s_clause 0x2                                               // 00000007C600: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007C60C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C614: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007C61C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007C624: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C62C: D6100000 02292900
	s_lshl_b32 s6, s2, 3                                       // 00000007C634: 84068302
	s_lshl_b32 s7, s3, 2                                       // 00000007C638: 84078203
	s_waitcnt lgkmcnt(0)                                       // 00000007C63C: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000007C640: 84098104
	v_mul_lo_u16 v3.l, v1.l, s2                                // 00000007C644: D7050003 00000501
	v_mul_lo_u16 v4.l, v2.l, s3                                // 00000007C64C: D7050004 00000702
	v_mul_lo_u16 v5.l, v0.l, s4                                // 00000007C654: D7050005 00000900
	s_mov_b32 s33, 0                                           // 00000007C65C: BEA10080
	v_add3_u32 v1, s8, s6, v1                                  // 00000007C660: D6550001 04040C08
	v_add3_u32 v2, s10, s7, v2                                 // 00000007C668: D6550002 04080E0A
	v_add3_u32 v0, s5, s9, v0                                  // 00000007C670: D6550000 04001205
	s_clause 0x2                                               // 00000007C678: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007C67C: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007C684: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007C68C: DC620000 00000500
	s_nop 0                                                    // 00000007C694: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C698: BFB60003
	s_endpgm                                                   // 00000007C69C: BFB00000
mul_char_get_local_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000007C6A0: BF800000
	.long 0xbf800000                                           // 00000007C6A4: BF800000
	.long 0xbf800000                                           // 00000007C6A8: BF800000
	.long 0xbf800000                                           // 00000007C6AC: BF800000
	.long 0xbf800000                                           // 00000007C6B0: BF800000
	.long 0xbf800000                                           // 00000007C6B4: BF800000
	.long 0xbf800000                                           // 00000007C6B8: BF800000
	.long 0xbf800000                                           // 00000007C6BC: BF800000
	.long 0xbf800000                                           // 00000007C6C0: BF800000
	.long 0xbf800000                                           // 00000007C6C4: BF800000
	.long 0xbf800000                                           // 00000007C6C8: BF800000
	.long 0xbf800000                                           // 00000007C6CC: BF800000
	.long 0xbf800000                                           // 00000007C6D0: BF800000
	.long 0xbf800000                                           // 00000007C6D4: BF800000
	.long 0xbf800000                                           // 00000007C6D8: BF800000
	.long 0xbf800000                                           // 00000007C6DC: BF800000
	.long 0xbf800000                                           // 00000007C6E0: BF800000
	.long 0xbf800000                                           // 00000007C6E4: BF800000
	.long 0xbf800000                                           // 00000007C6E8: BF800000
	.long 0xbf800000                                           // 00000007C6EC: BF800000
	.long 0xbf800000                                           // 00000007C6F0: BF800000
	.long 0xbf800000                                           // 00000007C6F4: BF800000
	.long 0xbf800000                                           // 00000007C6F8: BF800000
	.long 0xbf800000                                           // 00000007C6FC: BF800000

	.p2align	8
	.type	mul_char_get_group_id_get_group_id,@function
	.size	mul_char_get_group_id_get_group_id, mul_char_get_group_id_get_group_id_symend-mul_char_get_group_id_get_group_id
mul_char_get_group_id_get_group_id:
	s_clause 0x2                                               // 00000007C700: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C704: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007C70C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C714: F4040000 F8000008
	s_lshl_b32 s6, s2, 1                                       // 00000007C71C: 84068102
	s_mul_i32 s2, s2, s2                                       // 00000007C720: 96020202
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007C724: BF870009
	v_dual_mov_b32 v1, s2 :: v_dual_and_b32 v2, 0x3ff, v0      // 00000007C728: CA240002 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007C734: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C73C: D6100000 02292900
	s_lshl_b32 s7, s3, 4                                       // 00000007C744: 84078403
	s_mul_i32 s3, s3, s3                                       // 00000007C748: 96030303
	s_waitcnt lgkmcnt(0)                                       // 00000007C74C: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000007C750: 84098104
	s_mul_i32 s4, s4, s4                                       // 00000007C754: 96040404
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007C758: BF870009
	v_dual_mov_b32 v4, s3 :: v_dual_mov_b32 v5, s4             // 00000007C75C: CA100003 04040004
	s_mov_b32 s33, 0                                           // 00000007C764: BEA10080
	v_add3_u32 v2, s8, s6, v2                                  // 00000007C768: D6550002 04080C08
	v_add3_u32 v3, s10, s7, v3                                 // 00000007C770: D6550003 040C0E0A
	v_add3_u32 v0, s5, s9, v0                                  // 00000007C778: D6550000 04001205
	s_clause 0x2                                               // 00000007C780: BF850002
	global_store_b8 v2, v1, s[0:1]                             // 00000007C784: DC620000 00000102
	global_store_b8 v3, v4, s[0:1]                             // 00000007C78C: DC620000 00000403
	global_store_b8 v0, v5, s[0:1]                             // 00000007C794: DC620000 00000500
	s_nop 0                                                    // 00000007C79C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C7A0: BFB60003
	s_endpgm                                                   // 00000007C7A4: BFB00000
mul_char_get_group_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000007C7A8: BF800000
	.long 0xbf800000                                           // 00000007C7AC: BF800000
	.long 0xbf800000                                           // 00000007C7B0: BF800000
	.long 0xbf800000                                           // 00000007C7B4: BF800000
	.long 0xbf800000                                           // 00000007C7B8: BF800000
	.long 0xbf800000                                           // 00000007C7BC: BF800000
	.long 0xbf800000                                           // 00000007C7C0: BF800000
	.long 0xbf800000                                           // 00000007C7C4: BF800000
	.long 0xbf800000                                           // 00000007C7C8: BF800000
	.long 0xbf800000                                           // 00000007C7CC: BF800000
	.long 0xbf800000                                           // 00000007C7D0: BF800000
	.long 0xbf800000                                           // 00000007C7D4: BF800000
	.long 0xbf800000                                           // 00000007C7D8: BF800000
	.long 0xbf800000                                           // 00000007C7DC: BF800000
	.long 0xbf800000                                           // 00000007C7E0: BF800000
	.long 0xbf800000                                           // 00000007C7E4: BF800000
	.long 0xbf800000                                           // 00000007C7E8: BF800000
	.long 0xbf800000                                           // 00000007C7EC: BF800000
	.long 0xbf800000                                           // 00000007C7F0: BF800000
	.long 0xbf800000                                           // 00000007C7F4: BF800000
	.long 0xbf800000                                           // 00000007C7F8: BF800000
	.long 0xbf800000                                           // 00000007C7FC: BF800000

	.p2align	8
	.type	mul_char_get_local_size_get_group_id,@function
	.size	mul_char_get_local_size_get_group_id, mul_char_get_local_size_get_group_id_symend-mul_char_get_local_size_get_group_id
mul_char_get_local_size_get_group_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007C800: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007C808: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007C80C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007C810: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 00000007C814: 84108102
	s_lshl_b32 s17, s3, 1                                      // 00000007C818: 84118103
	s_lshl_b32 s18, s4, 2                                      // 00000007C81C: 84128204
	v_mov_b32_e32 v1, 0                                        // 00000007C820: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007C824: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007C82C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007C830: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000007C834: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007C838: BF870009
	s_add_u32 s6, s5, s6                                       // 00000007C83C: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000007C840: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007C844: BF0A0903
	global_load_u8 v2, v1, s[6:7]                              // 00000007C848: DC420000 02060001
	s_clause 0x2                                               // 00000007C850: BF850002
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007C854: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007C85C: F4040180 F8000008
	s_load_b32 s8, s[0:1], 0x48                                // 00000007C864: F4000200 F8000048
	s_waitcnt lgkmcnt(0)                                       // 00000007C86C: BF89FC07
	v_add3_u32 v3, s12, s16, v3                                // 00000007C870: D6550003 040C200C
	s_waitcnt vmcnt(0)                                         // 00000007C878: BF8903F7
	v_mul_lo_u32 v2, v2, s2                                    // 00000007C87C: D72C0002 00000502
	s_cselect_b32 s2, 14, 20                                   // 00000007C884: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007C888: BF870009
	s_add_u32 s0, s5, s2                                       // 00000007C88C: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007C890: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007C894: BF0A0A04
	global_store_b8 v3, v2, s[6:7]                             // 00000007C898: DC620000 00060203
	global_load_u8 v2, v1, s[0:1]                              // 00000007C8A0: DC420000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007C8A8: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007C8B0: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C8B4: D6100000 02292900
	s_add_u32 s0, s5, s0                                       // 00000007C8BC: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007C8C0: 8201800B
	v_add3_u32 v3, s14, s17, v3                                // 00000007C8C4: D6550003 040C220E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007C8CC: BF870002
	v_add3_u32 v0, s8, s18, v0                                 // 00000007C8D0: D6550000 04002408
	s_waitcnt vmcnt(0)                                         // 00000007C8D8: BF8903F7
	v_mul_lo_u32 v2, v2, s3                                    // 00000007C8DC: D72C0002 00000702
	global_store_b8 v3, v2, s[6:7]                             // 00000007C8E4: DC620000 00060203
	global_load_u8 v1, v1, s[0:1]                              // 00000007C8EC: DC420000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007C8F4: BF8903F7
	v_mul_lo_u32 v1, v1, s4                                    // 00000007C8F8: D72C0001 00000901
	global_store_b8 v0, v1, s[6:7]                             // 00000007C900: DC620000 00060100
	s_nop 0                                                    // 00000007C908: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C90C: BFB60003
	s_endpgm                                                   // 00000007C910: BFB00000
mul_char_get_local_size_get_group_id_symend:
	.long 0xbf800000                                           // 00000007C914: BF800000
	.long 0xbf800000                                           // 00000007C918: BF800000
	.long 0xbf800000                                           // 00000007C91C: BF800000
	.long 0xbf800000                                           // 00000007C920: BF800000
	.long 0xbf800000                                           // 00000007C924: BF800000
	.long 0xbf800000                                           // 00000007C928: BF800000
	.long 0xbf800000                                           // 00000007C92C: BF800000
	.long 0xbf800000                                           // 00000007C930: BF800000
	.long 0xbf800000                                           // 00000007C934: BF800000
	.long 0xbf800000                                           // 00000007C938: BF800000
	.long 0xbf800000                                           // 00000007C93C: BF800000
	.long 0xbf800000                                           // 00000007C940: BF800000
	.long 0xbf800000                                           // 00000007C944: BF800000
	.long 0xbf800000                                           // 00000007C948: BF800000
	.long 0xbf800000                                           // 00000007C94C: BF800000
	.long 0xbf800000                                           // 00000007C950: BF800000
	.long 0xbf800000                                           // 00000007C954: BF800000
	.long 0xbf800000                                           // 00000007C958: BF800000
	.long 0xbf800000                                           // 00000007C95C: BF800000
	.long 0xbf800000                                           // 00000007C960: BF800000
	.long 0xbf800000                                           // 00000007C964: BF800000
	.long 0xbf800000                                           // 00000007C968: BF800000
	.long 0xbf800000                                           // 00000007C96C: BF800000
	.long 0xbf800000                                           // 00000007C970: BF800000
	.long 0xbf800000                                           // 00000007C974: BF800000
	.long 0xbf800000                                           // 00000007C978: BF800000
	.long 0xbf800000                                           // 00000007C97C: BF800000
	.long 0xbf800000                                           // 00000007C980: BF800000
	.long 0xbf800000                                           // 00000007C984: BF800000
	.long 0xbf800000                                           // 00000007C988: BF800000
	.long 0xbf800000                                           // 00000007C98C: BF800000
	.long 0xbf800000                                           // 00000007C990: BF800000
	.long 0xbf800000                                           // 00000007C994: BF800000
	.long 0xbf800000                                           // 00000007C998: BF800000
	.long 0xbf800000                                           // 00000007C99C: BF800000
	.long 0xbf800000                                           // 00000007C9A0: BF800000
	.long 0xbf800000                                           // 00000007C9A4: BF800000
	.long 0xbf800000                                           // 00000007C9A8: BF800000
	.long 0xbf800000                                           // 00000007C9AC: BF800000
	.long 0xbf800000                                           // 00000007C9B0: BF800000
	.long 0xbf800000                                           // 00000007C9B4: BF800000
	.long 0xbf800000                                           // 00000007C9B8: BF800000
	.long 0xbf800000                                           // 00000007C9BC: BF800000
	.long 0xbf800000                                           // 00000007C9C0: BF800000
	.long 0xbf800000                                           // 00000007C9C4: BF800000
	.long 0xbf800000                                           // 00000007C9C8: BF800000
	.long 0xbf800000                                           // 00000007C9CC: BF800000
	.long 0xbf800000                                           // 00000007C9D0: BF800000
	.long 0xbf800000                                           // 00000007C9D4: BF800000
	.long 0xbf800000                                           // 00000007C9D8: BF800000
	.long 0xbf800000                                           // 00000007C9DC: BF800000
	.long 0xbf800000                                           // 00000007C9E0: BF800000
	.long 0xbf800000                                           // 00000007C9E4: BF800000
	.long 0xbf800000                                           // 00000007C9E8: BF800000
	.long 0xbf800000                                           // 00000007C9EC: BF800000
	.long 0xbf800000                                           // 00000007C9F0: BF800000
	.long 0xbf800000                                           // 00000007C9F4: BF800000
	.long 0xbf800000                                           // 00000007C9F8: BF800000
	.long 0xbf800000                                           // 00000007C9FC: BF800000

	.p2align	8
	.type	mul_char_get_global_id_get_group_id,@function
	.size	mul_char_get_global_id_get_group_id, mul_char_get_global_id_get_group_id_symend-mul_char_get_global_id_get_group_id
mul_char_get_global_id_get_group_id:
	s_clause 0x2                                               // 00000007CA00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007CA04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007CA0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007CA14: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007CA1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007CA24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007CA2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007CA34: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007CA38: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007CA3C: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 00000007CA44: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007CA4C: BF8701A3
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007CA50: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007CA58: BF89FC07
	v_add_nc_u32_e32 v2, s8, v4                                // 00000007CA5C: 4A040808
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007CA60: BF870193
	v_add_nc_u32_e32 v1, s10, v1                               // 00000007CA64: 4A02020A
	v_add_nc_u32_e32 v3, s5, v0                                // 00000007CA68: 4A060005
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007CA6C: BF870193
	v_mul_lo_u32 v5, v2, s2                                    // 00000007CA70: D72C0005 00000502
	v_mul_lo_u32 v6, v1, s3                                    // 00000007CA78: D72C0006 00000701
	v_add_co_u32 v0, s2, s0, v1                                // 00000007CA80: D7000200 00020200
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007CA88: BF8700B4
	v_mul_lo_u32 v7, v3, s4                                    // 00000007CA8C: D72C0007 00000903
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007CA94: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v3                                // 00000007CA9C: D7000202 00020600
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007CAA4: D5207C03 00090001
	s_clause 0x2                                               // 00000007CAAC: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 00000007CAB0: DC620000 00000504
	global_store_b8 v[0:1], v6, off                            // 00000007CAB8: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007CAC0: DC620000 007C0702
	s_nop 0                                                    // 00000007CAC8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CACC: BFB60003
	s_endpgm                                                   // 00000007CAD0: BFB00000
mul_char_get_global_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000007CAD4: BF800000
	.long 0xbf800000                                           // 00000007CAD8: BF800000
	.long 0xbf800000                                           // 00000007CADC: BF800000
	.long 0xbf800000                                           // 00000007CAE0: BF800000
	.long 0xbf800000                                           // 00000007CAE4: BF800000
	.long 0xbf800000                                           // 00000007CAE8: BF800000
	.long 0xbf800000                                           // 00000007CAEC: BF800000
	.long 0xbf800000                                           // 00000007CAF0: BF800000
	.long 0xbf800000                                           // 00000007CAF4: BF800000
	.long 0xbf800000                                           // 00000007CAF8: BF800000
	.long 0xbf800000                                           // 00000007CAFC: BF800000

	.p2align	8
	.type	mul_char_get_global_size_get_group_id,@function
	.size	mul_char_get_global_size_get_group_id, mul_char_get_global_size_get_group_id_symend-mul_char_get_global_size_get_group_id
mul_char_get_global_size_get_group_id:
	v_mov_b32_e32 v1, 0                                        // 00000007CB00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007CB04: 360600FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007CB0C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007CB14: D6100000 02292900
	s_lshl_b32 s6, s2, 4                                       // 00000007CB1C: 84068402
	s_clause 0x1                                               // 00000007CB20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007CB24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007CB2C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007CB34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007CB38: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007CB40: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007CB48: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007CB50: F4040000 F8000000
	s_lshl_b32 s7, s3, 1                                       // 00000007CB58: 84078103
	s_waitcnt lgkmcnt(0)                                       // 00000007CB5C: BF89FC07
	s_lshl_b32 s11, s4, 1                                      // 00000007CB60: 840B8104
	s_mov_b32 s33, 0                                           // 00000007CB64: BEA10080
	s_lshl_b32 s8, s8, 4                                       // 00000007CB68: 84088408
	s_lshl_b32 s9, s9, 1                                       // 00000007CB6C: 84098109
	s_lshl_b32 s10, s10, 1                                     // 00000007CB70: 840A810A
	v_add3_u32 v3, s12, s6, v3                                 // 00000007CB74: D6550003 040C0C0C
	v_add3_u32 v5, s14, s7, v5                                 // 00000007CB7C: D6550005 04140E0E
	v_add3_u32 v0, s5, s11, v0                                 // 00000007CB84: D6550000 04001605
	s_waitcnt vmcnt(1)                                         // 00000007CB8C: BF8907F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007CB90: 32080490
	v_add_nc_u32_e32 v2, s8, v2                                // 00000007CB94: 4A040408
	s_waitcnt vmcnt(0)                                         // 00000007CB98: BF8903F7
	v_add_nc_u32_e32 v1, s10, v1                               // 00000007CB9C: 4A02020A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007CBA0: BF870193
	v_add_nc_u32_e32 v4, s9, v4                                // 00000007CBA4: 4A080809
	v_mul_lo_u32 v2, v2, s2                                    // 00000007CBA8: D72C0002 00000502
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007CBB0: BF870193
	v_mul_lo_u32 v1, v1, s4                                    // 00000007CBB4: D72C0001 00000901
	v_mul_lo_u32 v4, v4, s3                                    // 00000007CBBC: D72C0004 00000704
	s_clause 0x2                                               // 00000007CBC4: BF850002
	global_store_b8 v3, v2, s[0:1]                             // 00000007CBC8: DC620000 00000203
	global_store_b8 v5, v4, s[0:1]                             // 00000007CBD0: DC620000 00000405
	global_store_b8 v0, v1, s[0:1]                             // 00000007CBD8: DC620000 00000100
	s_nop 0                                                    // 00000007CBE0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CBE4: BFB60003
	s_endpgm                                                   // 00000007CBE8: BFB00000
mul_char_get_global_size_get_group_id_symend:
	.long 0xbf800000                                           // 00000007CBEC: BF800000
	.long 0xbf800000                                           // 00000007CBF0: BF800000
	.long 0xbf800000                                           // 00000007CBF4: BF800000
	.long 0xbf800000                                           // 00000007CBF8: BF800000
	.long 0xbf800000                                           // 00000007CBFC: BF800000

	.p2align	8
	.type	mul_char_get_num_groups_get_group_id,@function
	.size	mul_char_get_num_groups_get_group_id, mul_char_get_num_groups_get_group_id_symend-mul_char_get_num_groups_get_group_id
mul_char_get_num_groups_get_group_id:
	v_mov_b32_e32 v1, 0                                        // 00000007CC00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007CC04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007CC0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007CC14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007CC1C: BEA10080
	s_clause 0x1                                               // 00000007CC20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007CC24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007CC2C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007CC34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007CC38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007CC40: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000007CC48: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007CC50: F4040180 F8000008
	s_lshl_b32 s0, s2, 1                                       // 00000007CC58: 84008102
	s_lshl_b32 s1, s3, 1                                       // 00000007CC5C: 84018103
	s_waitcnt lgkmcnt(0)                                       // 00000007CC60: BF89FC07
	s_lshl_b32 s9, s4, 2                                       // 00000007CC64: 84098204
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(VALU_DEP_1)// 00000007CC68: BF8700D9
	v_add3_u32 v0, s5, s9, v0                                  // 00000007CC6C: D6550000 04001205
	s_waitcnt vmcnt(1)                                         // 00000007CC74: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007CC78: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007CC7C: 32040490
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007CC80: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007CC84: 7C7A0480
	v_add3_u32 v2, s8, s0, v3                                  // 00000007CC88: D6550002 040C0008
	s_addc_u32 s8, s12, 0                                      // 00000007CC90: 8208800C
	s_waitcnt vmcnt(0)                                         // 00000007CC94: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000007CC98: D43D0000 00020280
	s_mul_i32 s2, s8, s2                                       // 00000007CCA0: 96020208
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007CCA4: BF07806A
	v_mov_b32_e32 v1, s2                                       // 00000007CCA8: 7E020202
	s_addc_u32 s2, s13, 0                                      // 00000007CCAC: 8202800D
	s_cmp_lg_u32 s0, 0                                         // 00000007CCB0: BF078000
	s_mul_i32 s0, s2, s3                                       // 00000007CCB4: 96000302
	s_addc_u32 s2, s14, 0                                      // 00000007CCB8: 8202800E
	v_add3_u32 v3, s10, s1, v4                                 // 00000007CCBC: D6550003 0410020A
	v_mov_b32_e32 v4, s0                                       // 00000007CCC4: 7E080200
	s_mul_i32 s0, s2, s4                                       // 00000007CCC8: 96000402
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007CCCC: BF870009
	v_mov_b32_e32 v5, s0                                       // 00000007CCD0: 7E0A0200
	s_clause 0x2                                               // 00000007CCD4: BF850002
	global_store_b8 v2, v1, s[6:7]                             // 00000007CCD8: DC620000 00060102
	global_store_b8 v3, v4, s[6:7]                             // 00000007CCE0: DC620000 00060403
	global_store_b8 v0, v5, s[6:7]                             // 00000007CCE8: DC620000 00060500
	s_nop 0                                                    // 00000007CCF0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CCF4: BFB60003
	s_endpgm                                                   // 00000007CCF8: BFB00000
mul_char_get_num_groups_get_group_id_symend:
	.long 0xbf800000                                           // 00000007CCFC: BF800000

	.p2align	8
	.type	mul_char_get_work_dim_get_group_id,@function
	.size	mul_char_get_work_dim_get_group_id, mul_char_get_work_dim_get_group_id_symend-mul_char_get_work_dim_get_group_id
mul_char_get_work_dim_get_group_id:
	s_clause 0x3                                               // 00000007CD00: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 00000007CD04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007CD0C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007CD14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007CD1C: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007CD24: BF89FC07
	s_lshl_b32 s9, s3, 1                                       // 00000007CD28: 84098103
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007CD2C: D6100002 02291500
	s_lshl_b32 s7, s2, 1                                       // 00000007CD34: 84078102
	s_lshl_b32 s11, s4, 2                                      // 00000007CD38: 840B8204
	s_mov_b32 s33, 0                                           // 00000007CD3C: BEA10080
	s_and_b32 s5, s5, 0xffff                                   // 00000007CD40: 8B05FF05 0000FFFF
	v_add3_u32 v2, s10, s9, v2                                 // 00000007CD48: D6550002 0408120A
	s_mul_i32 s3, s5, s3                                       // 00000007CD50: 96030305
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007CD54: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007CD58: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007CD64: D6100000 02292900
	s_mul_i32 s2, s5, s2                                       // 00000007CD6C: 96020205
	s_mul_i32 s4, s5, s4                                       // 00000007CD70: 96040405
	v_add3_u32 v1, s8, s7, v1                                  // 00000007CD74: D6550001 04040E08
	v_mov_b32_e32 v3, s2                                       // 00000007CD7C: 7E060202
	v_add3_u32 v0, s6, s11, v0                                 // 00000007CD80: D6550000 04001606
	v_mov_b32_e32 v5, s4                                       // 00000007CD88: 7E0A0204
	s_clause 0x2                                               // 00000007CD8C: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007CD90: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007CD98: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007CDA0: DC620000 00000500
	s_nop 0                                                    // 00000007CDA8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CDAC: BFB60003
	s_endpgm                                                   // 00000007CDB0: BFB00000
mul_char_get_work_dim_get_group_id_symend:
	.long 0xbf800000                                           // 00000007CDB4: BF800000
	.long 0xbf800000                                           // 00000007CDB8: BF800000
	.long 0xbf800000                                           // 00000007CDBC: BF800000
	.long 0xbf800000                                           // 00000007CDC0: BF800000
	.long 0xbf800000                                           // 00000007CDC4: BF800000
	.long 0xbf800000                                           // 00000007CDC8: BF800000
	.long 0xbf800000                                           // 00000007CDCC: BF800000
	.long 0xbf800000                                           // 00000007CDD0: BF800000
	.long 0xbf800000                                           // 00000007CDD4: BF800000
	.long 0xbf800000                                           // 00000007CDD8: BF800000
	.long 0xbf800000                                           // 00000007CDDC: BF800000
	.long 0xbf800000                                           // 00000007CDE0: BF800000
	.long 0xbf800000                                           // 00000007CDE4: BF800000
	.long 0xbf800000                                           // 00000007CDE8: BF800000
	.long 0xbf800000                                           // 00000007CDEC: BF800000
	.long 0xbf800000                                           // 00000007CDF0: BF800000
	.long 0xbf800000                                           // 00000007CDF4: BF800000
	.long 0xbf800000                                           // 00000007CDF8: BF800000
	.long 0xbf800000                                           // 00000007CDFC: BF800000

	.p2align	8
	.type	mul_char_x_get_local_size,@function
	.size	mul_char_x_get_local_size, mul_char_x_get_local_size_symend-mul_char_x_get_local_size
mul_char_x_get_local_size:
	s_clause 0x1                                               // 00000007CE00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007CE04: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007CE0C: F4080300 F8000038
	s_add_u32 s5, s0, 16                                       // 00000007CE14: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007CE18: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007CE1C: 820B8001
	s_lshl_b32 s13, s2, 4                                      // 00000007CE20: 840D8402
	s_lshl_b32 s15, s3, 1                                      // 00000007CE24: 840F8103
	s_lshl_b32 s16, s4, 1                                      // 00000007CE28: 84108104
	v_mov_b32_e32 v1, 0                                        // 00000007CE2C: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007CE30: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007CE38: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007CE3C: BF0A0802
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007CE40: BF8704A1
	v_add3_u32 v3, s12, s13, v3                                // 00000007CE44: D6550003 040C1A0C
	s_cselect_b32 s2, 12, 18                                   // 00000007CE4C: 9802928C
	s_add_u32 s6, s5, s2                                       // 00000007CE50: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007CE54: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007CE58: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 00000007CE5C: DC4A0000 02060001
	s_clause 0x1                                               // 00000007CE64: BF850001
	s_load_b32 s2, s[0:1], 0x8                                 // 00000007CE68: F4000080 F8000008
	s_load_b64 s[6:7], s[0:1], null                            // 00000007CE70: F4040180 F8000000
	s_cselect_b32 s3, 14, 20                                   // 00000007CE78: 9803948E
	s_load_b32 s8, s[0:1], 0x48                                // 00000007CE7C: F4000200 F8000048
	s_add_u32 s0, s5, s3                                       // 00000007CE84: 80000305
	s_addc_u32 s1, s11, 0                                      // 00000007CE88: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007CE8C: BF0A0A04
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000007CE90: BF890007
	v_mul_lo_u32 v2, v2, s2                                    // 00000007CE94: D72C0002 00000502
	global_store_b8 v3, v2, s[6:7]                             // 00000007CE9C: DC620000 00060203
	global_load_u16 v2, v1, s[0:1]                             // 00000007CEA4: DC4A0000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007CEAC: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007CEB4: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007CEB8: D6100000 02292900
	s_add_u32 s0, s5, s0                                       // 00000007CEC0: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007CEC4: 8201800B
	v_add3_u32 v3, s14, s15, v3                                // 00000007CEC8: D6550003 040C1E0E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007CED0: BF870002
	v_add3_u32 v0, s8, s16, v0                                 // 00000007CED4: D6550000 04002008
	s_waitcnt vmcnt(0)                                         // 00000007CEDC: BF8903F7
	v_mul_lo_u32 v2, v2, s2                                    // 00000007CEE0: D72C0002 00000502
	global_store_b8 v3, v2, s[6:7]                             // 00000007CEE8: DC620000 00060203
	global_load_u16 v1, v1, s[0:1]                             // 00000007CEF0: DC4A0000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007CEF8: BF8903F7
	v_mul_lo_u32 v1, v1, s2                                    // 00000007CEFC: D72C0001 00000501
	global_store_b8 v0, v1, s[6:7]                             // 00000007CF04: DC620000 00060100
	s_nop 0                                                    // 00000007CF0C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CF10: BFB60003
	s_endpgm                                                   // 00000007CF14: BFB00000
mul_char_x_get_local_size_symend:
	.long 0xbf800000                                           // 00000007CF18: BF800000
	.long 0xbf800000                                           // 00000007CF1C: BF800000
	.long 0xbf800000                                           // 00000007CF20: BF800000
	.long 0xbf800000                                           // 00000007CF24: BF800000
	.long 0xbf800000                                           // 00000007CF28: BF800000
	.long 0xbf800000                                           // 00000007CF2C: BF800000
	.long 0xbf800000                                           // 00000007CF30: BF800000
	.long 0xbf800000                                           // 00000007CF34: BF800000
	.long 0xbf800000                                           // 00000007CF38: BF800000
	.long 0xbf800000                                           // 00000007CF3C: BF800000
	.long 0xbf800000                                           // 00000007CF40: BF800000
	.long 0xbf800000                                           // 00000007CF44: BF800000
	.long 0xbf800000                                           // 00000007CF48: BF800000
	.long 0xbf800000                                           // 00000007CF4C: BF800000
	.long 0xbf800000                                           // 00000007CF50: BF800000
	.long 0xbf800000                                           // 00000007CF54: BF800000
	.long 0xbf800000                                           // 00000007CF58: BF800000
	.long 0xbf800000                                           // 00000007CF5C: BF800000
	.long 0xbf800000                                           // 00000007CF60: BF800000
	.long 0xbf800000                                           // 00000007CF64: BF800000
	.long 0xbf800000                                           // 00000007CF68: BF800000
	.long 0xbf800000                                           // 00000007CF6C: BF800000
	.long 0xbf800000                                           // 00000007CF70: BF800000
	.long 0xbf800000                                           // 00000007CF74: BF800000
	.long 0xbf800000                                           // 00000007CF78: BF800000
	.long 0xbf800000                                           // 00000007CF7C: BF800000
	.long 0xbf800000                                           // 00000007CF80: BF800000
	.long 0xbf800000                                           // 00000007CF84: BF800000
	.long 0xbf800000                                           // 00000007CF88: BF800000
	.long 0xbf800000                                           // 00000007CF8C: BF800000
	.long 0xbf800000                                           // 00000007CF90: BF800000
	.long 0xbf800000                                           // 00000007CF94: BF800000
	.long 0xbf800000                                           // 00000007CF98: BF800000
	.long 0xbf800000                                           // 00000007CF9C: BF800000
	.long 0xbf800000                                           // 00000007CFA0: BF800000
	.long 0xbf800000                                           // 00000007CFA4: BF800000
	.long 0xbf800000                                           // 00000007CFA8: BF800000
	.long 0xbf800000                                           // 00000007CFAC: BF800000
	.long 0xbf800000                                           // 00000007CFB0: BF800000
	.long 0xbf800000                                           // 00000007CFB4: BF800000
	.long 0xbf800000                                           // 00000007CFB8: BF800000
	.long 0xbf800000                                           // 00000007CFBC: BF800000
	.long 0xbf800000                                           // 00000007CFC0: BF800000
	.long 0xbf800000                                           // 00000007CFC4: BF800000
	.long 0xbf800000                                           // 00000007CFC8: BF800000
	.long 0xbf800000                                           // 00000007CFCC: BF800000
	.long 0xbf800000                                           // 00000007CFD0: BF800000
	.long 0xbf800000                                           // 00000007CFD4: BF800000
	.long 0xbf800000                                           // 00000007CFD8: BF800000
	.long 0xbf800000                                           // 00000007CFDC: BF800000
	.long 0xbf800000                                           // 00000007CFE0: BF800000
	.long 0xbf800000                                           // 00000007CFE4: BF800000
	.long 0xbf800000                                           // 00000007CFE8: BF800000
	.long 0xbf800000                                           // 00000007CFEC: BF800000
	.long 0xbf800000                                           // 00000007CFF0: BF800000
	.long 0xbf800000                                           // 00000007CFF4: BF800000
	.long 0xbf800000                                           // 00000007CFF8: BF800000
	.long 0xbf800000                                           // 00000007CFFC: BF800000

	.p2align	8
	.type	mul_char_get_global_offset_get_local_size,@function
	.size	mul_char_get_global_offset_get_local_size, mul_char_get_global_offset_get_local_size_symend-mul_char_get_global_offset_get_local_size
mul_char_get_global_offset_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007D000: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007D008: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007D00C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007D010: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 00000007D014: 84108102
	s_lshl_b32 s17, s3, 4                                      // 00000007D018: 84118403
	s_lshl_b32 s18, s4, 1                                      // 00000007D01C: 84128104
	v_mov_b32_e32 v1, 0                                        // 00000007D020: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007D024: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007D02C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007D030: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007D034: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D038: BF870009
	s_add_u32 s6, s5, s2                                       // 00000007D03C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007D040: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007D044: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 00000007D048: DC4A0000 02060001
	s_clause 0x1                                               // 00000007D050: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007D054: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007D05C: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007D064: 9802948E
	s_load_b32 s3, s[0:1], 0x48                                // 00000007D068: F40000C0 F8000048
	s_add_u32 s0, s5, s2                                       // 00000007D070: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007D074: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007D078: BF0A0A04
	s_waitcnt lgkmcnt(0)                                       // 00000007D07C: BF89FC07
	v_add3_u32 v3, s12, s16, v3                                // 00000007D080: D6550003 040C200C
	s_waitcnt vmcnt(0)                                         // 00000007D088: BF8903F7
	v_mul_lo_u32 v2, s12, v2                                   // 00000007D08C: D72C0002 0002040C
	global_store_b8 v3, v2, s[6:7]                             // 00000007D094: DC620000 00060203
	global_load_u16 v2, v1, s[0:1]                             // 00000007D09C: DC4A0000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007D0A4: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007D0AC: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D0B0: D6100000 02292900
	s_add_u32 s0, s5, s0                                       // 00000007D0B8: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007D0BC: 8201800B
	v_add3_u32 v3, s14, s17, v3                                // 00000007D0C0: D6550003 040C220E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007D0C8: BF870002
	v_add3_u32 v0, s3, s18, v0                                 // 00000007D0CC: D6550000 04002403
	s_waitcnt vmcnt(0)                                         // 00000007D0D4: BF8903F7
	v_mul_lo_u32 v2, s14, v2                                   // 00000007D0D8: D72C0002 0002040E
	global_store_b8 v3, v2, s[6:7]                             // 00000007D0E0: DC620000 00060203
	global_load_u16 v1, v1, s[0:1]                             // 00000007D0E8: DC4A0000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007D0F0: BF8903F7
	v_mul_lo_u32 v1, s3, v1                                    // 00000007D0F4: D72C0001 00020203
	global_store_b8 v0, v1, s[6:7]                             // 00000007D0FC: DC620000 00060100
	s_nop 0                                                    // 00000007D104: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D108: BFB60003
	s_endpgm                                                   // 00000007D10C: BFB00000
mul_char_get_global_offset_get_local_size_symend:
	.long 0xbf800000                                           // 00000007D110: BF800000
	.long 0xbf800000                                           // 00000007D114: BF800000
	.long 0xbf800000                                           // 00000007D118: BF800000
	.long 0xbf800000                                           // 00000007D11C: BF800000
	.long 0xbf800000                                           // 00000007D120: BF800000
	.long 0xbf800000                                           // 00000007D124: BF800000
	.long 0xbf800000                                           // 00000007D128: BF800000
	.long 0xbf800000                                           // 00000007D12C: BF800000
	.long 0xbf800000                                           // 00000007D130: BF800000
	.long 0xbf800000                                           // 00000007D134: BF800000
	.long 0xbf800000                                           // 00000007D138: BF800000
	.long 0xbf800000                                           // 00000007D13C: BF800000
	.long 0xbf800000                                           // 00000007D140: BF800000
	.long 0xbf800000                                           // 00000007D144: BF800000
	.long 0xbf800000                                           // 00000007D148: BF800000
	.long 0xbf800000                                           // 00000007D14C: BF800000
	.long 0xbf800000                                           // 00000007D150: BF800000
	.long 0xbf800000                                           // 00000007D154: BF800000
	.long 0xbf800000                                           // 00000007D158: BF800000
	.long 0xbf800000                                           // 00000007D15C: BF800000
	.long 0xbf800000                                           // 00000007D160: BF800000
	.long 0xbf800000                                           // 00000007D164: BF800000
	.long 0xbf800000                                           // 00000007D168: BF800000
	.long 0xbf800000                                           // 00000007D16C: BF800000
	.long 0xbf800000                                           // 00000007D170: BF800000
	.long 0xbf800000                                           // 00000007D174: BF800000
	.long 0xbf800000                                           // 00000007D178: BF800000
	.long 0xbf800000                                           // 00000007D17C: BF800000
	.long 0xbf800000                                           // 00000007D180: BF800000
	.long 0xbf800000                                           // 00000007D184: BF800000
	.long 0xbf800000                                           // 00000007D188: BF800000
	.long 0xbf800000                                           // 00000007D18C: BF800000
	.long 0xbf800000                                           // 00000007D190: BF800000
	.long 0xbf800000                                           // 00000007D194: BF800000
	.long 0xbf800000                                           // 00000007D198: BF800000
	.long 0xbf800000                                           // 00000007D19C: BF800000
	.long 0xbf800000                                           // 00000007D1A0: BF800000
	.long 0xbf800000                                           // 00000007D1A4: BF800000
	.long 0xbf800000                                           // 00000007D1A8: BF800000
	.long 0xbf800000                                           // 00000007D1AC: BF800000
	.long 0xbf800000                                           // 00000007D1B0: BF800000
	.long 0xbf800000                                           // 00000007D1B4: BF800000
	.long 0xbf800000                                           // 00000007D1B8: BF800000
	.long 0xbf800000                                           // 00000007D1BC: BF800000
	.long 0xbf800000                                           // 00000007D1C0: BF800000
	.long 0xbf800000                                           // 00000007D1C4: BF800000
	.long 0xbf800000                                           // 00000007D1C8: BF800000
	.long 0xbf800000                                           // 00000007D1CC: BF800000
	.long 0xbf800000                                           // 00000007D1D0: BF800000
	.long 0xbf800000                                           // 00000007D1D4: BF800000
	.long 0xbf800000                                           // 00000007D1D8: BF800000
	.long 0xbf800000                                           // 00000007D1DC: BF800000
	.long 0xbf800000                                           // 00000007D1E0: BF800000
	.long 0xbf800000                                           // 00000007D1E4: BF800000
	.long 0xbf800000                                           // 00000007D1E8: BF800000
	.long 0xbf800000                                           // 00000007D1EC: BF800000
	.long 0xbf800000                                           // 00000007D1F0: BF800000
	.long 0xbf800000                                           // 00000007D1F4: BF800000
	.long 0xbf800000                                           // 00000007D1F8: BF800000
	.long 0xbf800000                                           // 00000007D1FC: BF800000

	.p2align	8
	.type	mul_char_get_local_id_get_local_size,@function
	.size	mul_char_get_local_id_get_local_size, mul_char_get_local_id_get_local_size_symend-mul_char_get_local_id_get_local_size
mul_char_get_local_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007D200: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007D208: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007D20C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007D210: 820B8001
	s_lshl_b32 s16, s2, 3                                      // 00000007D214: 84108302
	s_lshl_b32 s17, s3, 2                                      // 00000007D218: 84118203
	s_lshl_b32 s18, s4, 1                                      // 00000007D21C: 84128104
	v_mov_b32_e32 v1, 0                                        // 00000007D220: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007D224: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007D22C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007D230: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007D234: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D238: BF870009
	s_add_u32 s6, s5, s2                                       // 00000007D23C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007D240: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007D244: BF0A0903
	global_load_u8 v2, v1, s[6:7]                              // 00000007D248: DC420000 02060001
	s_clause 0x1                                               // 00000007D250: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007D254: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007D25C: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007D264: 9802948E
	s_load_b32 s3, s[0:1], 0x48                                // 00000007D268: F40000C0 F8000048
	s_add_u32 s0, s5, s2                                       // 00000007D270: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007D274: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007D278: BF0A0A04
	s_waitcnt lgkmcnt(0)                                       // 00000007D27C: BF89FC07
	v_add3_u32 v4, s12, s16, v3                                // 00000007D280: D6550004 040C200C
	s_waitcnt vmcnt(0)                                         // 00000007D288: BF8903F7
	v_mul_lo_u16 v2.l, v2.l, v3.l                              // 00000007D28C: D7050002 00020702
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007D294: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D29C: D6100000 02292900
	global_store_b8 v4, v2, s[6:7]                             // 00000007D2A4: DC620000 00060204
	global_load_u8 v2, v1, s[0:1]                              // 00000007D2AC: DC420000 02000001
	v_add3_u32 v4, s14, s17, v3                                // 00000007D2B4: D6550004 040C220E
	s_cselect_b32 s0, 16, 22                                   // 00000007D2BC: 98009690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D2C0: BF870009
	s_add_u32 s0, s5, s0                                       // 00000007D2C4: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007D2C8: 8201800B
	s_waitcnt vmcnt(0)                                         // 00000007D2CC: BF8903F7
	v_mul_lo_u16 v2.l, v2.l, v3.l                              // 00000007D2D0: D7050002 00020702
	global_store_b8 v4, v2, s[6:7]                             // 00000007D2D8: DC620000 00060204
	global_load_u8 v1, v1, s[0:1]                              // 00000007D2E0: DC420000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007D2E8: BF8903F7
	v_mul_lo_u16 v1.l, v1.l, v0.l                              // 00000007D2EC: D7050001 00020101
	v_add3_u32 v0, s3, s18, v0                                 // 00000007D2F4: D6550000 04002403
	global_store_b8 v0, v1, s[6:7]                             // 00000007D2FC: DC620000 00060100
	s_nop 0                                                    // 00000007D304: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D308: BFB60003
	s_endpgm                                                   // 00000007D30C: BFB00000
mul_char_get_local_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000007D310: BF800000
	.long 0xbf800000                                           // 00000007D314: BF800000
	.long 0xbf800000                                           // 00000007D318: BF800000
	.long 0xbf800000                                           // 00000007D31C: BF800000
	.long 0xbf800000                                           // 00000007D320: BF800000
	.long 0xbf800000                                           // 00000007D324: BF800000
	.long 0xbf800000                                           // 00000007D328: BF800000
	.long 0xbf800000                                           // 00000007D32C: BF800000
	.long 0xbf800000                                           // 00000007D330: BF800000
	.long 0xbf800000                                           // 00000007D334: BF800000
	.long 0xbf800000                                           // 00000007D338: BF800000
	.long 0xbf800000                                           // 00000007D33C: BF800000
	.long 0xbf800000                                           // 00000007D340: BF800000
	.long 0xbf800000                                           // 00000007D344: BF800000
	.long 0xbf800000                                           // 00000007D348: BF800000
	.long 0xbf800000                                           // 00000007D34C: BF800000
	.long 0xbf800000                                           // 00000007D350: BF800000
	.long 0xbf800000                                           // 00000007D354: BF800000
	.long 0xbf800000                                           // 00000007D358: BF800000
	.long 0xbf800000                                           // 00000007D35C: BF800000
	.long 0xbf800000                                           // 00000007D360: BF800000
	.long 0xbf800000                                           // 00000007D364: BF800000
	.long 0xbf800000                                           // 00000007D368: BF800000
	.long 0xbf800000                                           // 00000007D36C: BF800000
	.long 0xbf800000                                           // 00000007D370: BF800000
	.long 0xbf800000                                           // 00000007D374: BF800000
	.long 0xbf800000                                           // 00000007D378: BF800000
	.long 0xbf800000                                           // 00000007D37C: BF800000
	.long 0xbf800000                                           // 00000007D380: BF800000
	.long 0xbf800000                                           // 00000007D384: BF800000
	.long 0xbf800000                                           // 00000007D388: BF800000
	.long 0xbf800000                                           // 00000007D38C: BF800000
	.long 0xbf800000                                           // 00000007D390: BF800000
	.long 0xbf800000                                           // 00000007D394: BF800000
	.long 0xbf800000                                           // 00000007D398: BF800000
	.long 0xbf800000                                           // 00000007D39C: BF800000
	.long 0xbf800000                                           // 00000007D3A0: BF800000
	.long 0xbf800000                                           // 00000007D3A4: BF800000
	.long 0xbf800000                                           // 00000007D3A8: BF800000
	.long 0xbf800000                                           // 00000007D3AC: BF800000
	.long 0xbf800000                                           // 00000007D3B0: BF800000
	.long 0xbf800000                                           // 00000007D3B4: BF800000
	.long 0xbf800000                                           // 00000007D3B8: BF800000
	.long 0xbf800000                                           // 00000007D3BC: BF800000
	.long 0xbf800000                                           // 00000007D3C0: BF800000
	.long 0xbf800000                                           // 00000007D3C4: BF800000
	.long 0xbf800000                                           // 00000007D3C8: BF800000
	.long 0xbf800000                                           // 00000007D3CC: BF800000
	.long 0xbf800000                                           // 00000007D3D0: BF800000
	.long 0xbf800000                                           // 00000007D3D4: BF800000
	.long 0xbf800000                                           // 00000007D3D8: BF800000
	.long 0xbf800000                                           // 00000007D3DC: BF800000
	.long 0xbf800000                                           // 00000007D3E0: BF800000
	.long 0xbf800000                                           // 00000007D3E4: BF800000
	.long 0xbf800000                                           // 00000007D3E8: BF800000
	.long 0xbf800000                                           // 00000007D3EC: BF800000
	.long 0xbf800000                                           // 00000007D3F0: BF800000
	.long 0xbf800000                                           // 00000007D3F4: BF800000
	.long 0xbf800000                                           // 00000007D3F8: BF800000
	.long 0xbf800000                                           // 00000007D3FC: BF800000

	.p2align	8
	.type	mul_char_get_group_id_get_local_size,@function
	.size	mul_char_get_group_id_get_local_size, mul_char_get_group_id_get_local_size_symend-mul_char_get_group_id_get_local_size
mul_char_get_group_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007D400: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007D408: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007D40C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007D410: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 00000007D414: 84108102
	s_lshl_b32 s17, s3, 4                                      // 00000007D418: 84118403
	s_lshl_b32 s18, s4, 1                                      // 00000007D41C: 84128104
	v_mov_b32_e32 v1, 0                                        // 00000007D420: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007D424: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007D42C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007D430: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000007D434: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D438: BF870009
	s_add_u32 s6, s5, s6                                       // 00000007D43C: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000007D440: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007D444: BF0A0903
	global_load_u8 v2, v1, s[6:7]                              // 00000007D448: DC420000 02060001
	s_clause 0x2                                               // 00000007D450: BF850002
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007D454: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007D45C: F4040180 F8000008
	s_load_b32 s8, s[0:1], 0x48                                // 00000007D464: F4000200 F8000048
	s_waitcnt lgkmcnt(0)                                       // 00000007D46C: BF89FC07
	v_add3_u32 v3, s12, s16, v3                                // 00000007D470: D6550003 040C200C
	s_waitcnt vmcnt(0)                                         // 00000007D478: BF8903F7
	v_mul_lo_u32 v2, v2, s2                                    // 00000007D47C: D72C0002 00000502
	s_cselect_b32 s2, 14, 20                                   // 00000007D484: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D488: BF870009
	s_add_u32 s0, s5, s2                                       // 00000007D48C: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007D490: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007D494: BF0A0A04
	global_store_b8 v3, v2, s[6:7]                             // 00000007D498: DC620000 00060203
	global_load_u8 v2, v1, s[0:1]                              // 00000007D4A0: DC420000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007D4A8: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007D4B0: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D4B4: D6100000 02292900
	s_add_u32 s0, s5, s0                                       // 00000007D4BC: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007D4C0: 8201800B
	v_add3_u32 v3, s14, s17, v3                                // 00000007D4C4: D6550003 040C220E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007D4CC: BF870002
	v_add3_u32 v0, s8, s18, v0                                 // 00000007D4D0: D6550000 04002408
	s_waitcnt vmcnt(0)                                         // 00000007D4D8: BF8903F7
	v_mul_lo_u32 v2, v2, s3                                    // 00000007D4DC: D72C0002 00000702
	global_store_b8 v3, v2, s[6:7]                             // 00000007D4E4: DC620000 00060203
	global_load_u8 v1, v1, s[0:1]                              // 00000007D4EC: DC420000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007D4F4: BF8903F7
	v_mul_lo_u32 v1, v1, s4                                    // 00000007D4F8: D72C0001 00000901
	global_store_b8 v0, v1, s[6:7]                             // 00000007D500: DC620000 00060100
	s_nop 0                                                    // 00000007D508: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D50C: BFB60003
	s_endpgm                                                   // 00000007D510: BFB00000
mul_char_get_group_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000007D514: BF800000
	.long 0xbf800000                                           // 00000007D518: BF800000
	.long 0xbf800000                                           // 00000007D51C: BF800000
	.long 0xbf800000                                           // 00000007D520: BF800000
	.long 0xbf800000                                           // 00000007D524: BF800000
	.long 0xbf800000                                           // 00000007D528: BF800000
	.long 0xbf800000                                           // 00000007D52C: BF800000
	.long 0xbf800000                                           // 00000007D530: BF800000
	.long 0xbf800000                                           // 00000007D534: BF800000
	.long 0xbf800000                                           // 00000007D538: BF800000
	.long 0xbf800000                                           // 00000007D53C: BF800000
	.long 0xbf800000                                           // 00000007D540: BF800000
	.long 0xbf800000                                           // 00000007D544: BF800000
	.long 0xbf800000                                           // 00000007D548: BF800000
	.long 0xbf800000                                           // 00000007D54C: BF800000
	.long 0xbf800000                                           // 00000007D550: BF800000
	.long 0xbf800000                                           // 00000007D554: BF800000
	.long 0xbf800000                                           // 00000007D558: BF800000
	.long 0xbf800000                                           // 00000007D55C: BF800000
	.long 0xbf800000                                           // 00000007D560: BF800000
	.long 0xbf800000                                           // 00000007D564: BF800000
	.long 0xbf800000                                           // 00000007D568: BF800000
	.long 0xbf800000                                           // 00000007D56C: BF800000
	.long 0xbf800000                                           // 00000007D570: BF800000
	.long 0xbf800000                                           // 00000007D574: BF800000
	.long 0xbf800000                                           // 00000007D578: BF800000
	.long 0xbf800000                                           // 00000007D57C: BF800000
	.long 0xbf800000                                           // 00000007D580: BF800000
	.long 0xbf800000                                           // 00000007D584: BF800000
	.long 0xbf800000                                           // 00000007D588: BF800000
	.long 0xbf800000                                           // 00000007D58C: BF800000
	.long 0xbf800000                                           // 00000007D590: BF800000
	.long 0xbf800000                                           // 00000007D594: BF800000
	.long 0xbf800000                                           // 00000007D598: BF800000
	.long 0xbf800000                                           // 00000007D59C: BF800000
	.long 0xbf800000                                           // 00000007D5A0: BF800000
	.long 0xbf800000                                           // 00000007D5A4: BF800000
	.long 0xbf800000                                           // 00000007D5A8: BF800000
	.long 0xbf800000                                           // 00000007D5AC: BF800000
	.long 0xbf800000                                           // 00000007D5B0: BF800000
	.long 0xbf800000                                           // 00000007D5B4: BF800000
	.long 0xbf800000                                           // 00000007D5B8: BF800000
	.long 0xbf800000                                           // 00000007D5BC: BF800000
	.long 0xbf800000                                           // 00000007D5C0: BF800000
	.long 0xbf800000                                           // 00000007D5C4: BF800000
	.long 0xbf800000                                           // 00000007D5C8: BF800000
	.long 0xbf800000                                           // 00000007D5CC: BF800000
	.long 0xbf800000                                           // 00000007D5D0: BF800000
	.long 0xbf800000                                           // 00000007D5D4: BF800000
	.long 0xbf800000                                           // 00000007D5D8: BF800000
	.long 0xbf800000                                           // 00000007D5DC: BF800000
	.long 0xbf800000                                           // 00000007D5E0: BF800000
	.long 0xbf800000                                           // 00000007D5E4: BF800000
	.long 0xbf800000                                           // 00000007D5E8: BF800000
	.long 0xbf800000                                           // 00000007D5EC: BF800000
	.long 0xbf800000                                           // 00000007D5F0: BF800000
	.long 0xbf800000                                           // 00000007D5F4: BF800000
	.long 0xbf800000                                           // 00000007D5F8: BF800000
	.long 0xbf800000                                           // 00000007D5FC: BF800000

	.p2align	8
	.type	mul_char_get_local_size_get_local_size,@function
	.size	mul_char_get_local_size_get_local_size, mul_char_get_local_size_get_local_size_symend-mul_char_get_local_size_get_local_size
mul_char_get_local_size_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007D600: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007D608: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007D60C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007D610: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000007D614: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000007D618: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000007D61C: 840E8204
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007D620: CA240080 010400FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007D62C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D634: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007D63C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007D640: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007D644: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007D648: BF8704D9
	s_add_u32 s6, s5, s2                                       // 00000007D64C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007D650: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007D654: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 00000007D658: DC4A0000 02060001
	s_cselect_b32 s2, 14, 20                                   // 00000007D660: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000007D664: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000007D668: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007D66C: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000007D670: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D674: BF870009
	s_add_u32 s4, s5, s4                                       // 00000007D678: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000007D67C: 8205800B
	s_clause 0x1                                               // 00000007D680: BF850001
	global_load_u16 v3, v1, s[2:3]                             // 00000007D684: DC4A0000 03020001
	global_load_u16 v1, v1, s[4:5]                             // 00000007D68C: DC4A0000 01040001
	s_clause 0x2                                               // 00000007D694: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007D698: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000007D6A0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007D6A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007D6B0: BF89FC07
	v_add3_u32 v4, s4, s12, v4                                 // 00000007D6B4: D6550004 04101804
	v_add3_u32 v5, s6, s13, v5                                 // 00000007D6BC: D6550005 04141A06
	v_add3_u32 v0, s2, s14, v0                                 // 00000007D6C4: D6550000 04001C02
	s_waitcnt vmcnt(2)                                         // 00000007D6CC: BF890BF7
	v_mul_lo_u32 v2, v2, v2                                    // 00000007D6D0: D72C0002 00020502
	s_waitcnt vmcnt(1)                                         // 00000007D6D8: BF8907F7
	v_mul_lo_u32 v3, v3, v3                                    // 00000007D6DC: D72C0003 00020703
	s_waitcnt vmcnt(0)                                         // 00000007D6E4: BF8903F7
	v_mul_lo_u32 v1, v1, v1                                    // 00000007D6E8: D72C0001 00020301
	s_clause 0x2                                               // 00000007D6F0: BF850002
	global_store_b8 v4, v2, s[0:1]                             // 00000007D6F4: DC620000 00000204
	global_store_b8 v5, v3, s[0:1]                             // 00000007D6FC: DC620000 00000305
	global_store_b8 v0, v1, s[0:1]                             // 00000007D704: DC620000 00000100
	s_nop 0                                                    // 00000007D70C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D710: BFB60003
	s_endpgm                                                   // 00000007D714: BFB00000
mul_char_get_local_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000007D718: BF800000
	.long 0xbf800000                                           // 00000007D71C: BF800000
	.long 0xbf800000                                           // 00000007D720: BF800000
	.long 0xbf800000                                           // 00000007D724: BF800000
	.long 0xbf800000                                           // 00000007D728: BF800000
	.long 0xbf800000                                           // 00000007D72C: BF800000
	.long 0xbf800000                                           // 00000007D730: BF800000
	.long 0xbf800000                                           // 00000007D734: BF800000
	.long 0xbf800000                                           // 00000007D738: BF800000
	.long 0xbf800000                                           // 00000007D73C: BF800000
	.long 0xbf800000                                           // 00000007D740: BF800000
	.long 0xbf800000                                           // 00000007D744: BF800000
	.long 0xbf800000                                           // 00000007D748: BF800000
	.long 0xbf800000                                           // 00000007D74C: BF800000
	.long 0xbf800000                                           // 00000007D750: BF800000
	.long 0xbf800000                                           // 00000007D754: BF800000
	.long 0xbf800000                                           // 00000007D758: BF800000
	.long 0xbf800000                                           // 00000007D75C: BF800000
	.long 0xbf800000                                           // 00000007D760: BF800000
	.long 0xbf800000                                           // 00000007D764: BF800000
	.long 0xbf800000                                           // 00000007D768: BF800000
	.long 0xbf800000                                           // 00000007D76C: BF800000
	.long 0xbf800000                                           // 00000007D770: BF800000
	.long 0xbf800000                                           // 00000007D774: BF800000
	.long 0xbf800000                                           // 00000007D778: BF800000
	.long 0xbf800000                                           // 00000007D77C: BF800000
	.long 0xbf800000                                           // 00000007D780: BF800000
	.long 0xbf800000                                           // 00000007D784: BF800000
	.long 0xbf800000                                           // 00000007D788: BF800000
	.long 0xbf800000                                           // 00000007D78C: BF800000
	.long 0xbf800000                                           // 00000007D790: BF800000
	.long 0xbf800000                                           // 00000007D794: BF800000
	.long 0xbf800000                                           // 00000007D798: BF800000
	.long 0xbf800000                                           // 00000007D79C: BF800000
	.long 0xbf800000                                           // 00000007D7A0: BF800000
	.long 0xbf800000                                           // 00000007D7A4: BF800000
	.long 0xbf800000                                           // 00000007D7A8: BF800000
	.long 0xbf800000                                           // 00000007D7AC: BF800000
	.long 0xbf800000                                           // 00000007D7B0: BF800000
	.long 0xbf800000                                           // 00000007D7B4: BF800000
	.long 0xbf800000                                           // 00000007D7B8: BF800000
	.long 0xbf800000                                           // 00000007D7BC: BF800000
	.long 0xbf800000                                           // 00000007D7C0: BF800000
	.long 0xbf800000                                           // 00000007D7C4: BF800000
	.long 0xbf800000                                           // 00000007D7C8: BF800000
	.long 0xbf800000                                           // 00000007D7CC: BF800000
	.long 0xbf800000                                           // 00000007D7D0: BF800000
	.long 0xbf800000                                           // 00000007D7D4: BF800000
	.long 0xbf800000                                           // 00000007D7D8: BF800000
	.long 0xbf800000                                           // 00000007D7DC: BF800000
	.long 0xbf800000                                           // 00000007D7E0: BF800000
	.long 0xbf800000                                           // 00000007D7E4: BF800000
	.long 0xbf800000                                           // 00000007D7E8: BF800000
	.long 0xbf800000                                           // 00000007D7EC: BF800000
	.long 0xbf800000                                           // 00000007D7F0: BF800000
	.long 0xbf800000                                           // 00000007D7F4: BF800000
	.long 0xbf800000                                           // 00000007D7F8: BF800000
	.long 0xbf800000                                           // 00000007D7FC: BF800000

	.p2align	8
	.type	mul_char_get_global_id_get_local_size,@function
	.size	mul_char_get_global_id_get_local_size, mul_char_get_global_id_get_local_size_symend-mul_char_get_global_id_get_local_size
mul_char_get_global_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007D800: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007D808: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007D80C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007D810: 820B8001
	v_dual_mov_b32 v3, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007D814: CA240080 030200FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007D820: BEA10080
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007D824: F4080300 F8000038
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000007D82C: BF8704C1
	v_lshl_or_b32 v2, s2, 1, v2                                // 00000007D830: D6560002 04090202
	s_cmp_lt_u32 s2, s8                                        // 00000007D838: BF0A0802
	s_load_b32 s8, s[0:1], 0x48                                // 00000007D83C: F4000200 F8000048
	s_cselect_b32 s6, 12, 18                                   // 00000007D844: 9806928C
	s_add_u32 s6, s5, s6                                       // 00000007D848: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000007D84C: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007D850: BF0A0903
	global_load_u16 v1, v3, s[6:7]                             // 00000007D854: DC4A0000 01060003
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007D85C: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007D864: 9802948E
	s_waitcnt lgkmcnt(0)                                       // 00000007D868: BF89FC07
	v_add_nc_u32_e32 v4, s12, v2                               // 00000007D86C: 4A08040C
	s_add_u32 s0, s5, s2                                       // 00000007D870: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007D874: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007D878: BF0A0A04
	s_waitcnt vmcnt(0)                                         // 00000007D87C: BF8903F7
	v_mul_lo_u32 v1, v4, v1                                    // 00000007D880: D72C0001 00020304
	global_store_b8 v2, v1, s[6:7]                             // 00000007D888: DC620000 00060102
	global_load_u16 v1, v3, s[0:1]                             // 00000007D890: DC4A0000 01000003
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D898: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D8A0: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007D8A8: BF870112
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007D8AC: D6560002 04090203
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007D8B4: D6560000 04010404
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007D8BC: BF870112
	v_add_nc_u32_e32 v2, s14, v2                               // 00000007D8C0: 4A04040E
	v_add_nc_u32_e32 v0, s8, v0                                // 00000007D8C4: 4A000008
	s_waitcnt vmcnt(0)                                         // 00000007D8C8: BF8903F7
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007D8CC: BF8700A2
	v_mul_lo_u32 v4, v2, v1                                    // 00000007D8D0: D72C0004 00020302
	v_add_co_u32 v1, s0, s6, v2                                // 00000007D8D8: D7000001 00020406
	v_add_co_ci_u32_e64 v2, null, s7, 0, s0                    // 00000007D8E0: D5207C02 00010007
	s_cselect_b32 s0, 16, 22                                   // 00000007D8E8: 98009690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D8EC: BF870009
	s_add_u32 s0, s5, s0                                       // 00000007D8F0: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007D8F4: 8201800B
	global_store_b8 v[1:2], v4, off                            // 00000007D8F8: DC620000 007C0401
	global_load_u16 v1, v3, s[0:1]                             // 00000007D900: DC4A0000 01000003
	s_waitcnt vmcnt(0)                                         // 00000007D908: BF8903F7
	v_mul_lo_u32 v2, v0, v1                                    // 00000007D90C: D72C0002 00020300
	v_add_co_u32 v0, s0, s6, v0                                // 00000007D914: D7000000 00020006
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007D91C: BF870001
	v_add_co_ci_u32_e64 v1, null, s7, 0, s0                    // 00000007D920: D5207C01 00010007
	global_store_b8 v[0:1], v2, off                            // 00000007D928: DC620000 007C0200
	s_nop 0                                                    // 00000007D930: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D934: BFB60003
	s_endpgm                                                   // 00000007D938: BFB00000
mul_char_get_global_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000007D93C: BF800000
	.long 0xbf800000                                           // 00000007D940: BF800000
	.long 0xbf800000                                           // 00000007D944: BF800000
	.long 0xbf800000                                           // 00000007D948: BF800000
	.long 0xbf800000                                           // 00000007D94C: BF800000
	.long 0xbf800000                                           // 00000007D950: BF800000
	.long 0xbf800000                                           // 00000007D954: BF800000
	.long 0xbf800000                                           // 00000007D958: BF800000
	.long 0xbf800000                                           // 00000007D95C: BF800000
	.long 0xbf800000                                           // 00000007D960: BF800000
	.long 0xbf800000                                           // 00000007D964: BF800000
	.long 0xbf800000                                           // 00000007D968: BF800000
	.long 0xbf800000                                           // 00000007D96C: BF800000
	.long 0xbf800000                                           // 00000007D970: BF800000
	.long 0xbf800000                                           // 00000007D974: BF800000
	.long 0xbf800000                                           // 00000007D978: BF800000
	.long 0xbf800000                                           // 00000007D97C: BF800000
	.long 0xbf800000                                           // 00000007D980: BF800000
	.long 0xbf800000                                           // 00000007D984: BF800000
	.long 0xbf800000                                           // 00000007D988: BF800000
	.long 0xbf800000                                           // 00000007D98C: BF800000
	.long 0xbf800000                                           // 00000007D990: BF800000
	.long 0xbf800000                                           // 00000007D994: BF800000
	.long 0xbf800000                                           // 00000007D998: BF800000
	.long 0xbf800000                                           // 00000007D99C: BF800000
	.long 0xbf800000                                           // 00000007D9A0: BF800000
	.long 0xbf800000                                           // 00000007D9A4: BF800000
	.long 0xbf800000                                           // 00000007D9A8: BF800000
	.long 0xbf800000                                           // 00000007D9AC: BF800000
	.long 0xbf800000                                           // 00000007D9B0: BF800000
	.long 0xbf800000                                           // 00000007D9B4: BF800000
	.long 0xbf800000                                           // 00000007D9B8: BF800000
	.long 0xbf800000                                           // 00000007D9BC: BF800000
	.long 0xbf800000                                           // 00000007D9C0: BF800000
	.long 0xbf800000                                           // 00000007D9C4: BF800000
	.long 0xbf800000                                           // 00000007D9C8: BF800000
	.long 0xbf800000                                           // 00000007D9CC: BF800000
	.long 0xbf800000                                           // 00000007D9D0: BF800000
	.long 0xbf800000                                           // 00000007D9D4: BF800000
	.long 0xbf800000                                           // 00000007D9D8: BF800000
	.long 0xbf800000                                           // 00000007D9DC: BF800000
	.long 0xbf800000                                           // 00000007D9E0: BF800000
	.long 0xbf800000                                           // 00000007D9E4: BF800000
	.long 0xbf800000                                           // 00000007D9E8: BF800000
	.long 0xbf800000                                           // 00000007D9EC: BF800000
	.long 0xbf800000                                           // 00000007D9F0: BF800000
	.long 0xbf800000                                           // 00000007D9F4: BF800000
	.long 0xbf800000                                           // 00000007D9F8: BF800000
	.long 0xbf800000                                           // 00000007D9FC: BF800000

	.p2align	8
	.type	mul_char_get_global_size_get_local_size,@function
	.size	mul_char_get_global_size_get_local_size, mul_char_get_global_size_get_local_size_symend-mul_char_get_global_size_get_local_size
mul_char_get_global_size_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007DA00: F4080200 F8000010
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v6, 0x3ff, v0       // 00000007DA08: CA240080 010600FF 000003FF
	s_add_u32 s5, s0, 16                                       // 00000007DA14: 80059000
	s_mov_b32 s33, 0                                           // 00000007DA18: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007DA1C: DC520022 02000001
	s_waitcnt lgkmcnt(0)                                       // 00000007DA24: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007DA28: 820B8001
	s_lshl_b32 s16, s2, 4                                      // 00000007DA2C: 84108402
	s_lshl_b32 s17, s3, 1                                      // 00000007DA30: 84118103
	s_lshl_b32 s18, s4, 1                                      // 00000007DA34: 84128104
	s_lshl_b32 s19, s8, 4                                      // 00000007DA38: 84138408
	s_lshl_b32 s20, s9, 1                                      // 00000007DA3C: 84148109
	s_lshl_b32 s21, s10, 1                                     // 00000007DA40: 8415810A
	s_cmp_lt_u32 s2, s8                                        // 00000007DA44: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007DA48: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007DA4C: BF870009
	s_add_u32 s6, s5, s2                                       // 00000007DA50: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007DA54: 8207800B
	s_clause 0x1                                               // 00000007DA58: BF850001
	global_load_u8 v3, v1, s[6:7]                              // 00000007DA5C: DC420000 03060001
	global_load_u16 v4, v1, s[0:1] offset:38                   // 00000007DA64: DC4A0026 04000001
	s_clause 0x1                                               // 00000007DA6C: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007DA70: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], null                            // 00000007DA78: F4040180 F8000000
	s_cmp_lt_u32 s3, s9                                        // 00000007DA80: BF0A0903
	s_load_b32 s3, s[0:1], 0x48                                // 00000007DA84: F40000C0 F8000048
	s_cselect_b32 s2, 14, 20                                   // 00000007DA8C: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007DA90: BF870009
	s_add_u32 s0, s5, s2                                       // 00000007DA94: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007DA98: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007DA9C: BF0A0A04
	s_waitcnt vmcnt(2)                                         // 00000007DAA0: BF890BF7
	v_add_nc_u32_e32 v5, s19, v2                               // 00000007DAA4: 4A0A0413
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007DAA8: 32040490
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007DAAC: BF8701A1
	v_add_nc_u32_e32 v2, s20, v2                               // 00000007DAB0: 4A040414
	s_waitcnt vmcnt(1)                                         // 00000007DAB4: BF8907F7
	v_mul_lo_u32 v3, v3, v5                                    // 00000007DAB8: D72C0003 00020B03
	s_waitcnt lgkmcnt(0)                                       // 00000007DAC0: BF89FC07
	v_add3_u32 v5, s12, s16, v6                                // 00000007DAC4: D6550005 0418200C
	global_store_b8 v5, v3, s[6:7]                             // 00000007DACC: DC620000 00060305
	global_load_u8 v3, v1, s[0:1]                              // 00000007DAD4: DC420000 03000001
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007DADC: D6100005 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007DAE4: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DAE8: D6100000 02292900
	s_add_u32 s0, s5, s0                                       // 00000007DAF0: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007DAF4: 8201800B
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007DAF8: BF870001
	v_add3_u32 v0, s3, s18, v0                                 // 00000007DAFC: D6550000 04002403
	s_waitcnt vmcnt(0)                                         // 00000007DB04: BF8903F7
	v_mul_lo_u32 v2, v3, v2                                    // 00000007DB08: D72C0002 00020503
	v_add3_u32 v3, s14, s17, v5                                // 00000007DB10: D6550003 0414220E
	global_store_b8 v3, v2, s[6:7]                             // 00000007DB18: DC620000 00060203
	global_load_u8 v1, v1, s[0:1]                              // 00000007DB20: DC420000 01000001
	v_add_nc_u32_e32 v2, s21, v4                               // 00000007DB28: 4A040815
	s_waitcnt vmcnt(0)                                         // 00000007DB2C: BF8903F7
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007DB30: BF870001
	v_mul_lo_u32 v1, v1, v2                                    // 00000007DB34: D72C0001 00020501
	global_store_b8 v0, v1, s[6:7]                             // 00000007DB3C: DC620000 00060100
	s_nop 0                                                    // 00000007DB44: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DB48: BFB60003
	s_endpgm                                                   // 00000007DB4C: BFB00000
mul_char_get_global_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000007DB50: BF800000
	.long 0xbf800000                                           // 00000007DB54: BF800000
	.long 0xbf800000                                           // 00000007DB58: BF800000
	.long 0xbf800000                                           // 00000007DB5C: BF800000
	.long 0xbf800000                                           // 00000007DB60: BF800000
	.long 0xbf800000                                           // 00000007DB64: BF800000
	.long 0xbf800000                                           // 00000007DB68: BF800000
	.long 0xbf800000                                           // 00000007DB6C: BF800000
	.long 0xbf800000                                           // 00000007DB70: BF800000
	.long 0xbf800000                                           // 00000007DB74: BF800000
	.long 0xbf800000                                           // 00000007DB78: BF800000
	.long 0xbf800000                                           // 00000007DB7C: BF800000
	.long 0xbf800000                                           // 00000007DB80: BF800000
	.long 0xbf800000                                           // 00000007DB84: BF800000
	.long 0xbf800000                                           // 00000007DB88: BF800000
	.long 0xbf800000                                           // 00000007DB8C: BF800000
	.long 0xbf800000                                           // 00000007DB90: BF800000
	.long 0xbf800000                                           // 00000007DB94: BF800000
	.long 0xbf800000                                           // 00000007DB98: BF800000
	.long 0xbf800000                                           // 00000007DB9C: BF800000
	.long 0xbf800000                                           // 00000007DBA0: BF800000
	.long 0xbf800000                                           // 00000007DBA4: BF800000
	.long 0xbf800000                                           // 00000007DBA8: BF800000
	.long 0xbf800000                                           // 00000007DBAC: BF800000
	.long 0xbf800000                                           // 00000007DBB0: BF800000
	.long 0xbf800000                                           // 00000007DBB4: BF800000
	.long 0xbf800000                                           // 00000007DBB8: BF800000
	.long 0xbf800000                                           // 00000007DBBC: BF800000
	.long 0xbf800000                                           // 00000007DBC0: BF800000
	.long 0xbf800000                                           // 00000007DBC4: BF800000
	.long 0xbf800000                                           // 00000007DBC8: BF800000
	.long 0xbf800000                                           // 00000007DBCC: BF800000
	.long 0xbf800000                                           // 00000007DBD0: BF800000
	.long 0xbf800000                                           // 00000007DBD4: BF800000
	.long 0xbf800000                                           // 00000007DBD8: BF800000
	.long 0xbf800000                                           // 00000007DBDC: BF800000
	.long 0xbf800000                                           // 00000007DBE0: BF800000
	.long 0xbf800000                                           // 00000007DBE4: BF800000
	.long 0xbf800000                                           // 00000007DBE8: BF800000
	.long 0xbf800000                                           // 00000007DBEC: BF800000
	.long 0xbf800000                                           // 00000007DBF0: BF800000
	.long 0xbf800000                                           // 00000007DBF4: BF800000
	.long 0xbf800000                                           // 00000007DBF8: BF800000
	.long 0xbf800000                                           // 00000007DBFC: BF800000

	.p2align	8
	.type	mul_char_get_num_groups_get_local_size,@function
	.size	mul_char_get_num_groups_get_local_size, mul_char_get_num_groups_get_local_size_symend-mul_char_get_num_groups_get_local_size
mul_char_get_num_groups_get_local_size:
	v_mov_b32_e32 v1, 0                                        // 00000007DC00: 7E020280
	s_mov_b32 s33, 0                                           // 00000007DC04: BEA10080
	s_clause 0x1                                               // 00000007DC08: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007DC0C: DC520022 02000001
	global_load_u16 v3, v1, s[0:1] offset:38                   // 00000007DC14: DC4A0026 03000001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007DC1C: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000007DC24: BF89FC07
	s_add_u32 s11, s0, 16                                      // 00000007DC28: 800B9000
	s_addc_u32 s16, s1, 0                                      // 00000007DC2C: 82108001
	s_lshl_b32 s17, s2, 1                                      // 00000007DC30: 84118102
	s_lshl_b32 s18, s3, 1                                      // 00000007DC34: 84128103
	s_lshl_b32 s19, s4, 2                                      // 00000007DC38: 84138204
	s_waitcnt vmcnt(1)                                         // 00000007DC3C: BF8907F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007DC40: 32080490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007DC44: 7C7A0480
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007DC48: BF870002
	v_cmp_ne_u16_e64 s5, 0, v4.l                               // 00000007DC4C: D43D0005 00020880
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007DC54: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007DC58: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v3.l                           // 00000007DC5C: 7C7A0680
	s_addc_u32 s20, s8, 0                                      // 00000007DC60: 82148008
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007DC64: 360600FF 000003FF
	s_cmp_lg_u32 s5, 0                                         // 00000007DC6C: BF078005
	s_addc_u32 s5, s9, 0                                       // 00000007DC70: 82058009
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007DC74: BF07806A
	s_addc_u32 s21, s10, 0                                     // 00000007DC78: 8215800A
	s_cmp_lt_u32 s2, s8                                        // 00000007DC7C: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007DC80: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007DC84: BF870009
	s_add_u32 s6, s11, s2                                      // 00000007DC88: 8006020B
	s_addc_u32 s7, s16, 0                                      // 00000007DC8C: 82078010
	s_cmp_lt_u32 s3, s9                                        // 00000007DC90: BF0A0903
	global_load_u8 v2, v1, s[6:7]                              // 00000007DC94: DC420000 02060001
	s_clause 0x1                                               // 00000007DC9C: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007DCA0: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007DCA8: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007DCB0: 9802948E
	s_load_b32 s3, s[0:1], 0x48                                // 00000007DCB4: F40000C0 F8000048
	s_add_u32 s0, s11, s2                                      // 00000007DCBC: 8000020B
	s_addc_u32 s1, s16, 0                                      // 00000007DCC0: 82018010
	s_cmp_lt_u32 s4, s10                                       // 00000007DCC4: BF0A0A04
	s_waitcnt lgkmcnt(0)                                       // 00000007DCC8: BF89FC07
	v_add3_u32 v3, s12, s17, v3                                // 00000007DCCC: D6550003 040C220C
	s_waitcnt vmcnt(0)                                         // 00000007DCD4: BF8903F7
	v_mul_lo_u32 v2, v2, s20                                   // 00000007DCD8: D72C0002 00002902
	global_store_b8 v3, v2, s[6:7]                             // 00000007DCE0: DC620000 00060203
	global_load_u8 v2, v1, s[0:1]                              // 00000007DCE8: DC420000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007DCF0: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007DCF8: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DCFC: D6100000 02292900
	s_add_u32 s0, s11, s0                                      // 00000007DD04: 8000000B
	s_addc_u32 s1, s16, 0                                      // 00000007DD08: 82018010
	v_add3_u32 v3, s14, s18, v3                                // 00000007DD0C: D6550003 040C240E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007DD14: BF870002
	v_add3_u32 v0, s3, s19, v0                                 // 00000007DD18: D6550000 04002603
	s_waitcnt vmcnt(0)                                         // 00000007DD20: BF8903F7
	v_mul_lo_u32 v2, v2, s5                                    // 00000007DD24: D72C0002 00000B02
	global_store_b8 v3, v2, s[6:7]                             // 00000007DD2C: DC620000 00060203
	global_load_u8 v1, v1, s[0:1]                              // 00000007DD34: DC420000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007DD3C: BF8903F7
	v_mul_lo_u32 v1, v1, s21                                   // 00000007DD40: D72C0001 00002B01
	global_store_b8 v0, v1, s[6:7]                             // 00000007DD48: DC620000 00060100
	s_nop 0                                                    // 00000007DD50: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DD54: BFB60003
	s_endpgm                                                   // 00000007DD58: BFB00000
mul_char_get_num_groups_get_local_size_symend:
	.long 0xbf800000                                           // 00000007DD5C: BF800000
	.long 0xbf800000                                           // 00000007DD60: BF800000
	.long 0xbf800000                                           // 00000007DD64: BF800000
	.long 0xbf800000                                           // 00000007DD68: BF800000
	.long 0xbf800000                                           // 00000007DD6C: BF800000
	.long 0xbf800000                                           // 00000007DD70: BF800000
	.long 0xbf800000                                           // 00000007DD74: BF800000
	.long 0xbf800000                                           // 00000007DD78: BF800000
	.long 0xbf800000                                           // 00000007DD7C: BF800000
	.long 0xbf800000                                           // 00000007DD80: BF800000
	.long 0xbf800000                                           // 00000007DD84: BF800000
	.long 0xbf800000                                           // 00000007DD88: BF800000
	.long 0xbf800000                                           // 00000007DD8C: BF800000
	.long 0xbf800000                                           // 00000007DD90: BF800000
	.long 0xbf800000                                           // 00000007DD94: BF800000
	.long 0xbf800000                                           // 00000007DD98: BF800000
	.long 0xbf800000                                           // 00000007DD9C: BF800000
	.long 0xbf800000                                           // 00000007DDA0: BF800000
	.long 0xbf800000                                           // 00000007DDA4: BF800000
	.long 0xbf800000                                           // 00000007DDA8: BF800000
	.long 0xbf800000                                           // 00000007DDAC: BF800000
	.long 0xbf800000                                           // 00000007DDB0: BF800000
	.long 0xbf800000                                           // 00000007DDB4: BF800000
	.long 0xbf800000                                           // 00000007DDB8: BF800000
	.long 0xbf800000                                           // 00000007DDBC: BF800000
	.long 0xbf800000                                           // 00000007DDC0: BF800000
	.long 0xbf800000                                           // 00000007DDC4: BF800000
	.long 0xbf800000                                           // 00000007DDC8: BF800000
	.long 0xbf800000                                           // 00000007DDCC: BF800000
	.long 0xbf800000                                           // 00000007DDD0: BF800000
	.long 0xbf800000                                           // 00000007DDD4: BF800000
	.long 0xbf800000                                           // 00000007DDD8: BF800000
	.long 0xbf800000                                           // 00000007DDDC: BF800000
	.long 0xbf800000                                           // 00000007DDE0: BF800000
	.long 0xbf800000                                           // 00000007DDE4: BF800000
	.long 0xbf800000                                           // 00000007DDE8: BF800000
	.long 0xbf800000                                           // 00000007DDEC: BF800000
	.long 0xbf800000                                           // 00000007DDF0: BF800000
	.long 0xbf800000                                           // 00000007DDF4: BF800000
	.long 0xbf800000                                           // 00000007DDF8: BF800000
	.long 0xbf800000                                           // 00000007DDFC: BF800000

	.p2align	8
	.type	mul_char_get_work_dim_get_local_size,@function
	.size	mul_char_get_work_dim_get_local_size, mul_char_get_work_dim_get_local_size_symend-mul_char_get_work_dim_get_local_size
mul_char_get_work_dim_get_local_size:
	s_clause 0x1                                               // 00000007DE00: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 00000007DE04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007DE0C: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000007DE14: BF89FC07
	s_add_u32 s11, s0, 16                                      // 00000007DE18: 800B9000
	s_addc_u32 s16, s1, 0                                      // 00000007DE1C: 82108001
	s_lshl_b32 s17, s2, 1                                      // 00000007DE20: 84118102
	s_lshl_b32 s18, s3, 1                                      // 00000007DE24: 84128103
	s_lshl_b32 s19, s4, 2                                      // 00000007DE28: 84138204
	v_mov_b32_e32 v1, 0                                        // 00000007DE2C: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007DE30: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007DE38: BEA10080
	s_and_b32 s5, s5, 0xffff                                   // 00000007DE3C: 8B05FF05 0000FFFF
	s_cmp_lt_u32 s2, s8                                        // 00000007DE44: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007DE48: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007DE4C: BF870009
	s_add_u32 s6, s11, s2                                      // 00000007DE50: 8006020B
	s_addc_u32 s7, s16, 0                                      // 00000007DE54: 82078010
	s_cmp_lt_u32 s3, s9                                        // 00000007DE58: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 00000007DE5C: DC4A0000 02060001
	s_clause 0x1                                               // 00000007DE64: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007DE68: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007DE70: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007DE78: 9802948E
	s_load_b32 s3, s[0:1], 0x48                                // 00000007DE7C: F40000C0 F8000048
	s_add_u32 s0, s11, s2                                      // 00000007DE84: 8000020B
	s_addc_u32 s1, s16, 0                                      // 00000007DE88: 82018010
	s_cmp_lt_u32 s4, s10                                       // 00000007DE8C: BF0A0A04
	s_waitcnt lgkmcnt(0)                                       // 00000007DE90: BF89FC07
	v_add3_u32 v3, s12, s17, v3                                // 00000007DE94: D6550003 040C220C
	s_waitcnt vmcnt(0)                                         // 00000007DE9C: BF8903F7
	v_mul_lo_u32 v2, v2, s5                                    // 00000007DEA0: D72C0002 00000B02
	global_store_b8 v3, v2, s[6:7]                             // 00000007DEA8: DC620000 00060203
	global_load_u16 v2, v1, s[0:1]                             // 00000007DEB0: DC4A0000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007DEB8: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007DEC0: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DEC4: D6100000 02292900
	s_add_u32 s0, s11, s0                                      // 00000007DECC: 8000000B
	s_addc_u32 s1, s16, 0                                      // 00000007DED0: 82018010
	v_add3_u32 v3, s14, s18, v3                                // 00000007DED4: D6550003 040C240E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007DEDC: BF870002
	v_add3_u32 v0, s3, s19, v0                                 // 00000007DEE0: D6550000 04002603
	s_waitcnt vmcnt(0)                                         // 00000007DEE8: BF8903F7
	v_mul_lo_u32 v2, v2, s5                                    // 00000007DEEC: D72C0002 00000B02
	global_store_b8 v3, v2, s[6:7]                             // 00000007DEF4: DC620000 00060203
	global_load_u8 v1, v1, s[0:1]                              // 00000007DEFC: DC420000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007DF04: BF8903F7
	v_mul_lo_u32 v1, v1, s5                                    // 00000007DF08: D72C0001 00000B01
	global_store_b8 v0, v1, s[6:7]                             // 00000007DF10: DC620000 00060100
	s_nop 0                                                    // 00000007DF18: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DF1C: BFB60003
	s_endpgm                                                   // 00000007DF20: BFB00000
mul_char_get_work_dim_get_local_size_symend:
	.long 0xbf800000                                           // 00000007DF24: BF800000
	.long 0xbf800000                                           // 00000007DF28: BF800000
	.long 0xbf800000                                           // 00000007DF2C: BF800000
	.long 0xbf800000                                           // 00000007DF30: BF800000
	.long 0xbf800000                                           // 00000007DF34: BF800000
	.long 0xbf800000                                           // 00000007DF38: BF800000
	.long 0xbf800000                                           // 00000007DF3C: BF800000
	.long 0xbf800000                                           // 00000007DF40: BF800000
	.long 0xbf800000                                           // 00000007DF44: BF800000
	.long 0xbf800000                                           // 00000007DF48: BF800000
	.long 0xbf800000                                           // 00000007DF4C: BF800000
	.long 0xbf800000                                           // 00000007DF50: BF800000
	.long 0xbf800000                                           // 00000007DF54: BF800000
	.long 0xbf800000                                           // 00000007DF58: BF800000
	.long 0xbf800000                                           // 00000007DF5C: BF800000
	.long 0xbf800000                                           // 00000007DF60: BF800000
	.long 0xbf800000                                           // 00000007DF64: BF800000
	.long 0xbf800000                                           // 00000007DF68: BF800000
	.long 0xbf800000                                           // 00000007DF6C: BF800000
	.long 0xbf800000                                           // 00000007DF70: BF800000
	.long 0xbf800000                                           // 00000007DF74: BF800000
	.long 0xbf800000                                           // 00000007DF78: BF800000
	.long 0xbf800000                                           // 00000007DF7C: BF800000
	.long 0xbf800000                                           // 00000007DF80: BF800000
	.long 0xbf800000                                           // 00000007DF84: BF800000
	.long 0xbf800000                                           // 00000007DF88: BF800000
	.long 0xbf800000                                           // 00000007DF8C: BF800000
	.long 0xbf800000                                           // 00000007DF90: BF800000
	.long 0xbf800000                                           // 00000007DF94: BF800000
	.long 0xbf800000                                           // 00000007DF98: BF800000
	.long 0xbf800000                                           // 00000007DF9C: BF800000
	.long 0xbf800000                                           // 00000007DFA0: BF800000
	.long 0xbf800000                                           // 00000007DFA4: BF800000
	.long 0xbf800000                                           // 00000007DFA8: BF800000
	.long 0xbf800000                                           // 00000007DFAC: BF800000
	.long 0xbf800000                                           // 00000007DFB0: BF800000
	.long 0xbf800000                                           // 00000007DFB4: BF800000
	.long 0xbf800000                                           // 00000007DFB8: BF800000
	.long 0xbf800000                                           // 00000007DFBC: BF800000
	.long 0xbf800000                                           // 00000007DFC0: BF800000
	.long 0xbf800000                                           // 00000007DFC4: BF800000
	.long 0xbf800000                                           // 00000007DFC8: BF800000
	.long 0xbf800000                                           // 00000007DFCC: BF800000
	.long 0xbf800000                                           // 00000007DFD0: BF800000
	.long 0xbf800000                                           // 00000007DFD4: BF800000
	.long 0xbf800000                                           // 00000007DFD8: BF800000
	.long 0xbf800000                                           // 00000007DFDC: BF800000
	.long 0xbf800000                                           // 00000007DFE0: BF800000
	.long 0xbf800000                                           // 00000007DFE4: BF800000
	.long 0xbf800000                                           // 00000007DFE8: BF800000
	.long 0xbf800000                                           // 00000007DFEC: BF800000
	.long 0xbf800000                                           // 00000007DFF0: BF800000
	.long 0xbf800000                                           // 00000007DFF4: BF800000
	.long 0xbf800000                                           // 00000007DFF8: BF800000
	.long 0xbf800000                                           // 00000007DFFC: BF800000

	.p2align	8
	.type	mul_char_x_get_global_id,@function
	.size	mul_char_x_get_global_id, mul_char_x_get_global_id_symend-mul_char_x_get_global_id
mul_char_x_get_global_id:
	s_clause 0x3                                               // 00000007E000: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E004: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007E00C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x8                                 // 00000007E014: F4000180 F8000008
	s_load_b64 s[0:1], s[0:1], null                            // 00000007E01C: F4040000 F8000000
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E024: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E02C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E034: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E03C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E040: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000007E044: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007E04C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007E054: BF8701A3
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007E058: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007E060: BF89FC07
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007E064: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E068: BF870193
	v_add_nc_u32_e32 v2, s10, v2                               // 00000007E06C: 4A04040A
	v_add_nc_u32_e32 v4, s5, v0                                // 00000007E070: 4A080005
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007E074: BF870223
	v_mul_lo_u32 v6, v1, s6                                    // 00000007E078: D72C0006 00000D01
	v_add_co_u32 v0, s2, s0, v1                                // 00000007E080: D7000200 00020200
	v_mul_lo_u32 v7, v2, s6                                    // 00000007E088: D72C0007 00000D02
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007E090: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v2                                // 00000007E098: D7000202 00020400
	v_mul_lo_u32 v8, v4, s6                                    // 00000007E0A0: D72C0008 00000D04
	v_add_co_u32 v4, s0, s0, v4                                // 00000007E0A8: D7000004 00020800
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007E0B0: D5207C03 00090001
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007E0B8: D5207C05 00010001
	s_clause 0x2                                               // 00000007E0C0: BF850002
	global_store_b8 v[0:1], v6, off                            // 00000007E0C4: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007E0CC: DC620000 007C0702
	global_store_b8 v[4:5], v8, off                            // 00000007E0D4: DC620000 007C0804
	s_nop 0                                                    // 00000007E0DC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E0E0: BFB60003
	s_endpgm                                                   // 00000007E0E4: BFB00000
mul_char_x_get_global_id_symend:
	.long 0xbf800000                                           // 00000007E0E8: BF800000
	.long 0xbf800000                                           // 00000007E0EC: BF800000
	.long 0xbf800000                                           // 00000007E0F0: BF800000
	.long 0xbf800000                                           // 00000007E0F4: BF800000
	.long 0xbf800000                                           // 00000007E0F8: BF800000
	.long 0xbf800000                                           // 00000007E0FC: BF800000

	.p2align	8
	.type	mul_char_get_global_offset_get_global_id,@function
	.size	mul_char_get_global_offset_get_global_id, mul_char_get_global_offset_get_global_id_symend-mul_char_get_global_offset_get_global_id
mul_char_get_global_offset_get_global_id:
	s_clause 0x2                                               // 00000007E100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007E10C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007E114: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E11C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E124: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E12C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E134: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E138: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007E13C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007E144: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007E14C: BF8701A3
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007E150: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007E158: BF89FC07
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007E15C: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E160: BF870193
	v_add_nc_u32_e32 v2, s10, v2                               // 00000007E164: 4A04040A
	v_add_nc_u32_e32 v4, s5, v0                                // 00000007E168: 4A080005
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007E16C: BF870223
	v_mul_lo_u32 v6, s8, v1                                    // 00000007E170: D72C0006 00020208
	v_add_co_u32 v0, s2, s0, v1                                // 00000007E178: D7000200 00020200
	v_mul_lo_u32 v7, s10, v2                                   // 00000007E180: D72C0007 0002040A
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007E188: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v2                                // 00000007E190: D7000202 00020400
	v_mul_lo_u32 v8, s5, v4                                    // 00000007E198: D72C0008 00020805
	v_add_co_u32 v4, s0, s0, v4                                // 00000007E1A0: D7000004 00020800
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007E1A8: D5207C03 00090001
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007E1B0: D5207C05 00010001
	s_clause 0x2                                               // 00000007E1B8: BF850002
	global_store_b8 v[0:1], v6, off                            // 00000007E1BC: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007E1C4: DC620000 007C0702
	global_store_b8 v[4:5], v8, off                            // 00000007E1CC: DC620000 007C0804
	s_nop 0                                                    // 00000007E1D4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E1D8: BFB60003
	s_endpgm                                                   // 00000007E1DC: BFB00000
mul_char_get_global_offset_get_global_id_symend:
	.long 0xbf800000                                           // 00000007E1E0: BF800000
	.long 0xbf800000                                           // 00000007E1E4: BF800000
	.long 0xbf800000                                           // 00000007E1E8: BF800000
	.long 0xbf800000                                           // 00000007E1EC: BF800000
	.long 0xbf800000                                           // 00000007E1F0: BF800000
	.long 0xbf800000                                           // 00000007E1F4: BF800000
	.long 0xbf800000                                           // 00000007E1F8: BF800000
	.long 0xbf800000                                           // 00000007E1FC: BF800000

	.p2align	8
	.type	mul_char_get_local_id_get_global_id,@function
	.size	mul_char_get_local_id_get_global_id, mul_char_get_local_id_get_global_id_symend-mul_char_get_local_id_get_global_id
mul_char_get_local_id_get_global_id:
	s_clause 0x2                                               // 00000007E200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007E20C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007E214: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E21C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E224: D6100002 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000007E22C: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000007E234: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E238: BF870193
	v_lshl_or_b32 v0, s2, 3, v1                                // 00000007E23C: D6560000 04050602
	v_lshl_or_b32 v3, s3, 2, v2                                // 00000007E244: D6560003 04090403
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007E24C: BF8701A3
	v_lshl_or_b32 v5, s4, 1, v4                                // 00000007E250: D6560005 04110204
	s_waitcnt lgkmcnt(0)                                       // 00000007E258: BF89FC07
	v_add_nc_u32_e32 v0, s8, v0                                // 00000007E25C: 4A000008
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E260: BF870193
	v_add_nc_u32_e32 v3, s10, v3                               // 00000007E264: 4A06060A
	v_add_nc_u32_e32 v5, s5, v5                                // 00000007E268: 4A0A0A05
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007E26C: BF870223
	v_mul_lo_u32 v6, v0, v1                                    // 00000007E270: D72C0006 00020300
	v_add_co_u32 v0, s2, s0, v0                                // 00000007E278: D7000200 00020000
	v_mul_lo_u32 v7, v3, v2                                    // 00000007E280: D72C0007 00020503
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007E288: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v3                                // 00000007E290: D7000202 00020600
	v_mul_lo_u32 v8, v5, v4                                    // 00000007E298: D72C0008 00020905
	v_add_co_u32 v4, s0, s0, v5                                // 00000007E2A0: D7000004 00020A00
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007E2A8: D5207C03 00090001
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007E2B0: D5207C05 00010001
	s_clause 0x2                                               // 00000007E2B8: BF850002
	global_store_b8 v[0:1], v6, off                            // 00000007E2BC: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007E2C4: DC620000 007C0702
	global_store_b8 v[4:5], v8, off                            // 00000007E2CC: DC620000 007C0804
	s_nop 0                                                    // 00000007E2D4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E2D8: BFB60003
	s_endpgm                                                   // 00000007E2DC: BFB00000
mul_char_get_local_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000007E2E0: BF800000
	.long 0xbf800000                                           // 00000007E2E4: BF800000
	.long 0xbf800000                                           // 00000007E2E8: BF800000
	.long 0xbf800000                                           // 00000007E2EC: BF800000
	.long 0xbf800000                                           // 00000007E2F0: BF800000
	.long 0xbf800000                                           // 00000007E2F4: BF800000
	.long 0xbf800000                                           // 00000007E2F8: BF800000
	.long 0xbf800000                                           // 00000007E2FC: BF800000

	.p2align	8
	.type	mul_char_get_group_id_get_global_id,@function
	.size	mul_char_get_group_id_get_global_id, mul_char_get_group_id_get_global_id_symend-mul_char_get_group_id_get_global_id
mul_char_get_group_id_get_global_id:
	s_clause 0x2                                               // 00000007E300: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007E30C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007E314: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E31C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E324: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E32C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E334: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E338: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007E33C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007E344: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007E34C: BF8701A3
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007E350: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007E358: BF89FC07
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007E35C: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E360: BF870193
	v_add_nc_u32_e32 v2, s10, v2                               // 00000007E364: 4A04040A
	v_add_nc_u32_e32 v4, s5, v0                                // 00000007E368: 4A080005
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007E36C: BF870223
	v_mul_lo_u32 v6, v1, s2                                    // 00000007E370: D72C0006 00000501
	v_add_co_u32 v0, s2, s0, v1                                // 00000007E378: D7000200 00020200
	v_mul_lo_u32 v7, v2, s3                                    // 00000007E380: D72C0007 00000702
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007E388: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v2                                // 00000007E390: D7000202 00020400
	v_mul_lo_u32 v8, v4, s4                                    // 00000007E398: D72C0008 00000904
	v_add_co_u32 v4, s0, s0, v4                                // 00000007E3A0: D7000004 00020800
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007E3A8: D5207C03 00090001
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007E3B0: D5207C05 00010001
	s_clause 0x2                                               // 00000007E3B8: BF850002
	global_store_b8 v[0:1], v6, off                            // 00000007E3BC: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007E3C4: DC620000 007C0702
	global_store_b8 v[4:5], v8, off                            // 00000007E3CC: DC620000 007C0804
	s_nop 0                                                    // 00000007E3D4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E3D8: BFB60003
	s_endpgm                                                   // 00000007E3DC: BFB00000
mul_char_get_group_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000007E3E0: BF800000
	.long 0xbf800000                                           // 00000007E3E4: BF800000
	.long 0xbf800000                                           // 00000007E3E8: BF800000
	.long 0xbf800000                                           // 00000007E3EC: BF800000
	.long 0xbf800000                                           // 00000007E3F0: BF800000
	.long 0xbf800000                                           // 00000007E3F4: BF800000
	.long 0xbf800000                                           // 00000007E3F8: BF800000
	.long 0xbf800000                                           // 00000007E3FC: BF800000

	.p2align	8
	.type	mul_char_get_local_size_get_global_id,@function
	.size	mul_char_get_local_size_get_global_id, mul_char_get_local_size_get_global_id_symend-mul_char_get_local_size_get_global_id
mul_char_get_local_size_get_global_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007E400: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007E408: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007E40C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007E410: 820B8001
	v_dual_mov_b32 v3, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007E414: CA240080 030200FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007E420: BEA10080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 00000007E424: BF8704B1
	v_lshl_or_b32 v2, s2, 1, v2                                // 00000007E428: D6560002 04090202
	s_cmp_lt_u32 s2, s8                                        // 00000007E430: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000007E434: 9806928C
	s_add_u32 s6, s5, s6                                       // 00000007E438: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000007E43C: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007E440: BF0A0903
	global_load_u16 v1, v3, s[6:7]                             // 00000007E444: DC4A0000 01060003
	s_clause 0x2                                               // 00000007E44C: BF850002
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007E450: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007E458: F4040180 F8000008
	s_load_b32 s8, s[0:1], 0x48                                // 00000007E460: F4000200 F8000048
	s_waitcnt lgkmcnt(0)                                       // 00000007E468: BF89FC07
	v_add_nc_u32_e32 v2, s12, v2                               // 00000007E46C: 4A04040C
	s_waitcnt vmcnt(0)                                         // 00000007E470: BF8903F7
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007E474: BF8700A1
	v_mul_lo_u32 v4, v2, v1                                    // 00000007E478: D72C0004 00020302
	v_add_co_u32 v1, s2, s6, v2                                // 00000007E480: D7000201 00020406
	v_add_co_ci_u32_e64 v2, null, s7, 0, s2                    // 00000007E488: D5207C02 00090007
	s_cselect_b32 s2, 14, 20                                   // 00000007E490: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007E494: BF870009
	s_add_u32 s0, s5, s2                                       // 00000007E498: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007E49C: 8201800B
	global_store_b8 v[1:2], v4, off                            // 00000007E4A0: DC620000 007C0401
	global_load_u16 v1, v3, s[0:1]                             // 00000007E4A8: DC4A0000 01000003
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E4B0: D6100002 02291500
	s_cmp_lt_u32 s4, s10                                       // 00000007E4B8: BF0A0A04
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E4BC: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007E4C4: BF870112
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007E4C8: D6560002 04090203
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007E4D0: D6560000 04010404
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007E4D8: BF870112
	v_add_nc_u32_e32 v2, s14, v2                               // 00000007E4DC: 4A04040E
	v_add_nc_u32_e32 v0, s8, v0                                // 00000007E4E0: 4A000008
	s_waitcnt vmcnt(0)                                         // 00000007E4E4: BF8903F7
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007E4E8: BF8700A2
	v_mul_lo_u32 v4, v2, v1                                    // 00000007E4EC: D72C0004 00020302
	v_add_co_u32 v1, s0, s6, v2                                // 00000007E4F4: D7000001 00020406
	v_add_co_ci_u32_e64 v2, null, s7, 0, s0                    // 00000007E4FC: D5207C02 00010007
	s_cselect_b32 s0, 16, 22                                   // 00000007E504: 98009690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007E508: BF870009
	s_add_u32 s0, s5, s0                                       // 00000007E50C: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007E510: 8201800B
	global_store_b8 v[1:2], v4, off                            // 00000007E514: DC620000 007C0401
	global_load_u16 v1, v3, s[0:1]                             // 00000007E51C: DC4A0000 01000003
	s_waitcnt vmcnt(0)                                         // 00000007E524: BF8903F7
	v_mul_lo_u32 v2, v0, v1                                    // 00000007E528: D72C0002 00020300
	v_add_co_u32 v0, s0, s6, v0                                // 00000007E530: D7000000 00020006
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007E538: BF870001
	v_add_co_ci_u32_e64 v1, null, s7, 0, s0                    // 00000007E53C: D5207C01 00010007
	global_store_b8 v[0:1], v2, off                            // 00000007E544: DC620000 007C0200
	s_nop 0                                                    // 00000007E54C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E550: BFB60003
	s_endpgm                                                   // 00000007E554: BFB00000
mul_char_get_local_size_get_global_id_symend:
	.long 0xbf800000                                           // 00000007E558: BF800000
	.long 0xbf800000                                           // 00000007E55C: BF800000
	.long 0xbf800000                                           // 00000007E560: BF800000
	.long 0xbf800000                                           // 00000007E564: BF800000
	.long 0xbf800000                                           // 00000007E568: BF800000
	.long 0xbf800000                                           // 00000007E56C: BF800000
	.long 0xbf800000                                           // 00000007E570: BF800000
	.long 0xbf800000                                           // 00000007E574: BF800000
	.long 0xbf800000                                           // 00000007E578: BF800000
	.long 0xbf800000                                           // 00000007E57C: BF800000
	.long 0xbf800000                                           // 00000007E580: BF800000
	.long 0xbf800000                                           // 00000007E584: BF800000
	.long 0xbf800000                                           // 00000007E588: BF800000
	.long 0xbf800000                                           // 00000007E58C: BF800000
	.long 0xbf800000                                           // 00000007E590: BF800000
	.long 0xbf800000                                           // 00000007E594: BF800000
	.long 0xbf800000                                           // 00000007E598: BF800000
	.long 0xbf800000                                           // 00000007E59C: BF800000
	.long 0xbf800000                                           // 00000007E5A0: BF800000
	.long 0xbf800000                                           // 00000007E5A4: BF800000
	.long 0xbf800000                                           // 00000007E5A8: BF800000
	.long 0xbf800000                                           // 00000007E5AC: BF800000
	.long 0xbf800000                                           // 00000007E5B0: BF800000
	.long 0xbf800000                                           // 00000007E5B4: BF800000
	.long 0xbf800000                                           // 00000007E5B8: BF800000
	.long 0xbf800000                                           // 00000007E5BC: BF800000
	.long 0xbf800000                                           // 00000007E5C0: BF800000
	.long 0xbf800000                                           // 00000007E5C4: BF800000
	.long 0xbf800000                                           // 00000007E5C8: BF800000
	.long 0xbf800000                                           // 00000007E5CC: BF800000
	.long 0xbf800000                                           // 00000007E5D0: BF800000
	.long 0xbf800000                                           // 00000007E5D4: BF800000
	.long 0xbf800000                                           // 00000007E5D8: BF800000
	.long 0xbf800000                                           // 00000007E5DC: BF800000
	.long 0xbf800000                                           // 00000007E5E0: BF800000
	.long 0xbf800000                                           // 00000007E5E4: BF800000
	.long 0xbf800000                                           // 00000007E5E8: BF800000
	.long 0xbf800000                                           // 00000007E5EC: BF800000
	.long 0xbf800000                                           // 00000007E5F0: BF800000
	.long 0xbf800000                                           // 00000007E5F4: BF800000
	.long 0xbf800000                                           // 00000007E5F8: BF800000
	.long 0xbf800000                                           // 00000007E5FC: BF800000

	.p2align	8
	.type	mul_char_get_global_id_get_global_id,@function
	.size	mul_char_get_global_id_get_global_id, mul_char_get_global_id_get_global_id_symend-mul_char_get_global_id_get_global_id
mul_char_get_global_id_get_global_id:
	s_clause 0x2                                               // 00000007E600: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007E60C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007E614: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007E61C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007E624: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E62C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007E634: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E638: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007E63C: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 00000007E644: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007E64C: BF8701A3
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007E650: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007E658: BF89FC07
	v_add_nc_u32_e32 v2, s8, v4                                // 00000007E65C: 4A040808
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E660: BF870193
	v_add_nc_u32_e32 v1, s10, v1                               // 00000007E664: 4A02020A
	v_add_nc_u32_e32 v3, s5, v0                                // 00000007E668: 4A060005
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E66C: BF870193
	v_mul_lo_u32 v5, v2, v2                                    // 00000007E670: D72C0005 00020502
	v_mul_lo_u32 v6, v1, v1                                    // 00000007E678: D72C0006 00020301
	v_add_co_u32 v0, s2, s0, v1                                // 00000007E680: D7000200 00020200
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007E688: BF8700B4
	v_mul_lo_u32 v7, v3, v3                                    // 00000007E68C: D72C0007 00020703
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007E694: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v3                                // 00000007E69C: D7000202 00020600
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007E6A4: D5207C03 00090001
	s_clause 0x2                                               // 00000007E6AC: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 00000007E6B0: DC620000 00000504
	global_store_b8 v[0:1], v6, off                            // 00000007E6B8: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007E6C0: DC620000 007C0702
	s_nop 0                                                    // 00000007E6C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E6CC: BFB60003
	s_endpgm                                                   // 00000007E6D0: BFB00000
mul_char_get_global_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000007E6D4: BF800000
	.long 0xbf800000                                           // 00000007E6D8: BF800000
	.long 0xbf800000                                           // 00000007E6DC: BF800000
	.long 0xbf800000                                           // 00000007E6E0: BF800000
	.long 0xbf800000                                           // 00000007E6E4: BF800000
	.long 0xbf800000                                           // 00000007E6E8: BF800000
	.long 0xbf800000                                           // 00000007E6EC: BF800000
	.long 0xbf800000                                           // 00000007E6F0: BF800000
	.long 0xbf800000                                           // 00000007E6F4: BF800000
	.long 0xbf800000                                           // 00000007E6F8: BF800000
	.long 0xbf800000                                           // 00000007E6FC: BF800000

	.p2align	8
	.type	mul_char_get_global_size_get_global_id,@function
	.size	mul_char_get_global_size_get_global_id, mul_char_get_global_size_get_global_id_symend-mul_char_get_global_size_get_global_id
mul_char_get_global_size_get_global_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007E700: CA240080 010400FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007E70C: BEA10080
	s_clause 0x1                                               // 00000007E710: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007E714: DC520022 02000001
	global_load_u16 v3, v1, s[0:1] offset:38                   // 00000007E71C: DC4A0026 03000001
	s_clause 0x3                                               // 00000007E724: BF850003
	s_load_b32 s5, s[0:1], 0x48                                // 00000007E728: F4000140 F8000048
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007E730: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007E738: F4080300 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 00000007E740: F4040000 F8000000
	v_bfe_u32 v1, v0, 20, 10                                   // 00000007E748: D6100001 02292900
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007E750: D6100000 02291500
	v_lshl_or_b32 v4, s2, 4, v4                                // 00000007E758: D6560004 04110802
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E760: BF870193
	v_lshl_or_b32 v1, s4, 1, v1                                // 00000007E764: D6560001 04050204
	v_lshl_or_b32 v0, s3, 1, v0                                // 00000007E76C: D6560000 04010203
	s_waitcnt lgkmcnt(0)                                       // 00000007E774: BF89FC07
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007E778: BF870002
	v_add_nc_u32_e32 v5, s5, v1                                // 00000007E77C: 4A0A0205
	s_lshl_b32 s2, s8, 4                                       // 00000007E780: 84028408
	s_lshl_b32 s3, s9, 1                                       // 00000007E784: 84038109
	v_add_nc_u32_e32 v4, s12, v4                               // 00000007E788: 4A08080C
	s_lshl_b32 s4, s10, 1                                      // 00000007E78C: 8404810A
	v_add_nc_u32_e32 v6, s14, v0                               // 00000007E790: 4A0C000E
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007E794: BF870092
	v_add_co_u32 v0, s5, s0, v4                                // 00000007E798: D7000500 00020800
	v_add_co_ci_u32_e64 v1, null, s1, 0, s5                    // 00000007E7A0: D5207C01 00150001
	s_waitcnt vmcnt(1)                                         // 00000007E7A8: BF8907F7
	v_lshrrev_b32_e32 v7, 16, v2                               // 00000007E7AC: 320E0490
	v_add_nc_u32_e32 v8, s2, v2                                // 00000007E7B0: 4A100402
	s_waitcnt vmcnt(0)                                         // 00000007E7B4: BF8903F7
	v_add_nc_u32_e32 v9, s4, v3                                // 00000007E7B8: 4A120604
	v_add_co_u32 v2, s2, s0, v6                                // 00000007E7BC: D7000202 00020C00
	v_add_nc_u32_e32 v7, s3, v7                                // 00000007E7C4: 4A0E0E03
	v_mul_lo_u32 v8, v4, v8                                    // 00000007E7C8: D72C0008 00021104
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007E7D0: BF870224
	v_mul_lo_u32 v9, v5, v9                                    // 00000007E7D4: D72C0009 00021305
	v_add_co_u32 v4, s0, s0, v5                                // 00000007E7DC: D7000004 00020A00
	v_mul_lo_u32 v6, v6, v7                                    // 00000007E7E4: D72C0006 00020F06
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007E7EC: D5207C03 00090001
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007E7F4: D5207C05 00010001
	s_clause 0x2                                               // 00000007E7FC: BF850002
	global_store_b8 v[0:1], v8, off                            // 00000007E800: DC620000 007C0800
	global_store_b8 v[2:3], v6, off                            // 00000007E808: DC620000 007C0602
	global_store_b8 v[4:5], v9, off                            // 00000007E810: DC620000 007C0904
	s_nop 0                                                    // 00000007E818: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E81C: BFB60003
	s_endpgm                                                   // 00000007E820: BFB00000
mul_char_get_global_size_get_global_id_symend:
	.long 0xbf800000                                           // 00000007E824: BF800000
	.long 0xbf800000                                           // 00000007E828: BF800000
	.long 0xbf800000                                           // 00000007E82C: BF800000
	.long 0xbf800000                                           // 00000007E830: BF800000
	.long 0xbf800000                                           // 00000007E834: BF800000
	.long 0xbf800000                                           // 00000007E838: BF800000
	.long 0xbf800000                                           // 00000007E83C: BF800000
	.long 0xbf800000                                           // 00000007E840: BF800000
	.long 0xbf800000                                           // 00000007E844: BF800000
	.long 0xbf800000                                           // 00000007E848: BF800000
	.long 0xbf800000                                           // 00000007E84C: BF800000
	.long 0xbf800000                                           // 00000007E850: BF800000
	.long 0xbf800000                                           // 00000007E854: BF800000
	.long 0xbf800000                                           // 00000007E858: BF800000
	.long 0xbf800000                                           // 00000007E85C: BF800000
	.long 0xbf800000                                           // 00000007E860: BF800000
	.long 0xbf800000                                           // 00000007E864: BF800000
	.long 0xbf800000                                           // 00000007E868: BF800000
	.long 0xbf800000                                           // 00000007E86C: BF800000
	.long 0xbf800000                                           // 00000007E870: BF800000
	.long 0xbf800000                                           // 00000007E874: BF800000
	.long 0xbf800000                                           // 00000007E878: BF800000
	.long 0xbf800000                                           // 00000007E87C: BF800000
	.long 0xbf800000                                           // 00000007E880: BF800000
	.long 0xbf800000                                           // 00000007E884: BF800000
	.long 0xbf800000                                           // 00000007E888: BF800000
	.long 0xbf800000                                           // 00000007E88C: BF800000
	.long 0xbf800000                                           // 00000007E890: BF800000
	.long 0xbf800000                                           // 00000007E894: BF800000
	.long 0xbf800000                                           // 00000007E898: BF800000
	.long 0xbf800000                                           // 00000007E89C: BF800000
	.long 0xbf800000                                           // 00000007E8A0: BF800000
	.long 0xbf800000                                           // 00000007E8A4: BF800000
	.long 0xbf800000                                           // 00000007E8A8: BF800000
	.long 0xbf800000                                           // 00000007E8AC: BF800000
	.long 0xbf800000                                           // 00000007E8B0: BF800000
	.long 0xbf800000                                           // 00000007E8B4: BF800000
	.long 0xbf800000                                           // 00000007E8B8: BF800000
	.long 0xbf800000                                           // 00000007E8BC: BF800000
	.long 0xbf800000                                           // 00000007E8C0: BF800000
	.long 0xbf800000                                           // 00000007E8C4: BF800000
	.long 0xbf800000                                           // 00000007E8C8: BF800000
	.long 0xbf800000                                           // 00000007E8CC: BF800000
	.long 0xbf800000                                           // 00000007E8D0: BF800000
	.long 0xbf800000                                           // 00000007E8D4: BF800000
	.long 0xbf800000                                           // 00000007E8D8: BF800000
	.long 0xbf800000                                           // 00000007E8DC: BF800000
	.long 0xbf800000                                           // 00000007E8E0: BF800000
	.long 0xbf800000                                           // 00000007E8E4: BF800000
	.long 0xbf800000                                           // 00000007E8E8: BF800000
	.long 0xbf800000                                           // 00000007E8EC: BF800000
	.long 0xbf800000                                           // 00000007E8F0: BF800000
	.long 0xbf800000                                           // 00000007E8F4: BF800000
	.long 0xbf800000                                           // 00000007E8F8: BF800000
	.long 0xbf800000                                           // 00000007E8FC: BF800000

	.p2align	8
	.type	mul_char_get_num_groups_get_global_id,@function
	.size	mul_char_get_num_groups_get_global_id, mul_char_get_num_groups_get_global_id_symend-mul_char_get_num_groups_get_global_id
mul_char_get_num_groups_get_global_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007E900: CA240080 010400FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007E90C: BEA10080
	s_clause 0x1                                               // 00000007E910: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007E914: DC520022 02000001
	global_load_u16 v3, v1, s[0:1] offset:38                   // 00000007E91C: DC4A0026 03000001
	s_clause 0x3                                               // 00000007E924: BF850003
	s_load_b32 s5, s[0:1], 0x48                                // 00000007E928: F4000140 F8000048
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E930: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007E938: F4040180 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007E940: F4080300 F8000010
	v_bfe_u32 v1, v0, 20, 10                                   // 00000007E948: D6100001 02292900
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007E950: D6100000 02291500
	v_lshl_or_b32 v4, s2, 1, v4                                // 00000007E958: D6560004 04110202
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007E960: BF870193
	v_lshl_or_b32 v1, s4, 2, v1                                // 00000007E964: D6560001 04050404
	v_lshl_or_b32 v0, s3, 1, v0                                // 00000007E96C: D6560000 04010203
	s_waitcnt lgkmcnt(0)                                       // 00000007E974: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007E978: BF8701A2
	v_add_nc_u32_e32 v6, s5, v1                                // 00000007E97C: 4A0C0205
	v_add_nc_u32_e32 v4, s8, v4                                // 00000007E980: 4A080808
	v_add_nc_u32_e32 v7, s10, v0                               // 00000007E984: 4A0E000A
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007E988: BF870092
	v_add_co_u32 v0, s1, s6, v4                                // 00000007E98C: D7000100 00020806
	v_add_co_ci_u32_e64 v1, null, s7, 0, s1                    // 00000007E994: D5207C01 00050007
	s_waitcnt vmcnt(1)                                         // 00000007E99C: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007E9A0: 320A0490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007E9A4: 7C7A0480
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007E9A8: BF8704D2
	v_cmp_ne_u16_e64 s0, 0, v5.l                               // 00000007E9AC: D43D0000 00020A80
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007E9B4: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007E9B8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v3.l                           // 00000007E9BC: 7C7A0680
	s_addc_u32 s1, s12, 0                                      // 00000007E9C0: 8201800C
	v_mul_lo_u32 v8, v4, s1                                    // 00000007E9C4: D72C0008 00000304
	s_cmp_lg_u32 s0, 0                                         // 00000007E9CC: BF078000
	v_add_co_u32 v2, s0, s6, v7                                // 00000007E9D0: D7000002 00020E06
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007E9D8: BF870001
	v_add_co_ci_u32_e64 v3, null, s7, 0, s0                    // 00000007E9DC: D5207C03 00010007
	s_addc_u32 s0, s13, 0                                      // 00000007E9E4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007E9E8: BF07806A
	v_mul_lo_u32 v7, v7, s0                                    // 00000007E9EC: D72C0007 00000107
	s_addc_u32 s1, s14, 0                                      // 00000007E9F4: 8201800E
	v_add_co_u32 v4, s0, s6, v6                                // 00000007E9F8: D7000004 00020C06
	v_mul_lo_u32 v9, v6, s1                                    // 00000007EA00: D72C0009 00000306
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 00000007EA08: D5207C05 00010007
	s_clause 0x2                                               // 00000007EA10: BF850002
	global_store_b8 v[0:1], v8, off                            // 00000007EA14: DC620000 007C0800
	global_store_b8 v[2:3], v7, off                            // 00000007EA1C: DC620000 007C0702
	global_store_b8 v[4:5], v9, off                            // 00000007EA24: DC620000 007C0904
	s_nop 0                                                    // 00000007EA2C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EA30: BFB60003
	s_endpgm                                                   // 00000007EA34: BFB00000
mul_char_get_num_groups_get_global_id_symend:
	.long 0xbf800000                                           // 00000007EA38: BF800000
	.long 0xbf800000                                           // 00000007EA3C: BF800000
	.long 0xbf800000                                           // 00000007EA40: BF800000
	.long 0xbf800000                                           // 00000007EA44: BF800000
	.long 0xbf800000                                           // 00000007EA48: BF800000
	.long 0xbf800000                                           // 00000007EA4C: BF800000
	.long 0xbf800000                                           // 00000007EA50: BF800000
	.long 0xbf800000                                           // 00000007EA54: BF800000
	.long 0xbf800000                                           // 00000007EA58: BF800000
	.long 0xbf800000                                           // 00000007EA5C: BF800000
	.long 0xbf800000                                           // 00000007EA60: BF800000
	.long 0xbf800000                                           // 00000007EA64: BF800000
	.long 0xbf800000                                           // 00000007EA68: BF800000
	.long 0xbf800000                                           // 00000007EA6C: BF800000
	.long 0xbf800000                                           // 00000007EA70: BF800000
	.long 0xbf800000                                           // 00000007EA74: BF800000
	.long 0xbf800000                                           // 00000007EA78: BF800000
	.long 0xbf800000                                           // 00000007EA7C: BF800000
	.long 0xbf800000                                           // 00000007EA80: BF800000
	.long 0xbf800000                                           // 00000007EA84: BF800000
	.long 0xbf800000                                           // 00000007EA88: BF800000
	.long 0xbf800000                                           // 00000007EA8C: BF800000
	.long 0xbf800000                                           // 00000007EA90: BF800000
	.long 0xbf800000                                           // 00000007EA94: BF800000
	.long 0xbf800000                                           // 00000007EA98: BF800000
	.long 0xbf800000                                           // 00000007EA9C: BF800000
	.long 0xbf800000                                           // 00000007EAA0: BF800000
	.long 0xbf800000                                           // 00000007EAA4: BF800000
	.long 0xbf800000                                           // 00000007EAA8: BF800000
	.long 0xbf800000                                           // 00000007EAAC: BF800000
	.long 0xbf800000                                           // 00000007EAB0: BF800000
	.long 0xbf800000                                           // 00000007EAB4: BF800000
	.long 0xbf800000                                           // 00000007EAB8: BF800000
	.long 0xbf800000                                           // 00000007EABC: BF800000
	.long 0xbf800000                                           // 00000007EAC0: BF800000
	.long 0xbf800000                                           // 00000007EAC4: BF800000
	.long 0xbf800000                                           // 00000007EAC8: BF800000
	.long 0xbf800000                                           // 00000007EACC: BF800000
	.long 0xbf800000                                           // 00000007EAD0: BF800000
	.long 0xbf800000                                           // 00000007EAD4: BF800000
	.long 0xbf800000                                           // 00000007EAD8: BF800000
	.long 0xbf800000                                           // 00000007EADC: BF800000
	.long 0xbf800000                                           // 00000007EAE0: BF800000
	.long 0xbf800000                                           // 00000007EAE4: BF800000
	.long 0xbf800000                                           // 00000007EAE8: BF800000
	.long 0xbf800000                                           // 00000007EAEC: BF800000
	.long 0xbf800000                                           // 00000007EAF0: BF800000
	.long 0xbf800000                                           // 00000007EAF4: BF800000
	.long 0xbf800000                                           // 00000007EAF8: BF800000
	.long 0xbf800000                                           // 00000007EAFC: BF800000

	.p2align	8
	.type	mul_char_get_work_dim_get_global_id,@function
	.size	mul_char_get_work_dim_get_global_id, mul_char_get_work_dim_get_global_id_symend-mul_char_get_work_dim_get_global_id
mul_char_get_work_dim_get_global_id:
	s_clause 0x3                                               // 00000007EB00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007EB04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007EB0C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x50                                // 00000007EB14: F4000180 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007EB1C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007EB24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007EB2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EB34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007EB3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007EB40: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007EB44: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007EB4C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007EB54: BF8701A3
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007EB58: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007EB60: BF89FC07
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007EB64: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007EB68: BF870193
	v_add_nc_u32_e32 v2, s10, v2                               // 00000007EB6C: 4A04040A
	v_add_nc_u32_e32 v4, s5, v0                                // 00000007EB70: 4A080005
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007EB74: BF870223
	v_mul_lo_u32 v6, v1, s6                                    // 00000007EB78: D72C0006 00000D01
	v_add_co_u32 v0, s2, s0, v1                                // 00000007EB80: D7000200 00020200
	v_mul_lo_u32 v7, v2, s6                                    // 00000007EB88: D72C0007 00000D02
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007EB90: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v2                                // 00000007EB98: D7000202 00020400
	v_mul_lo_u32 v8, v4, s6                                    // 00000007EBA0: D72C0008 00000D04
	v_add_co_u32 v4, s0, s0, v4                                // 00000007EBA8: D7000004 00020800
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007EBB0: D5207C03 00090001
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007EBB8: D5207C05 00010001
	s_clause 0x2                                               // 00000007EBC0: BF850002
	global_store_b8 v[0:1], v6, off                            // 00000007EBC4: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007EBCC: DC620000 007C0702
	global_store_b8 v[4:5], v8, off                            // 00000007EBD4: DC620000 007C0804
	s_nop 0                                                    // 00000007EBDC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EBE0: BFB60003
	s_endpgm                                                   // 00000007EBE4: BFB00000
mul_char_get_work_dim_get_global_id_symend:
	.long 0xbf800000                                           // 00000007EBE8: BF800000
	.long 0xbf800000                                           // 00000007EBEC: BF800000
	.long 0xbf800000                                           // 00000007EBF0: BF800000
	.long 0xbf800000                                           // 00000007EBF4: BF800000
	.long 0xbf800000                                           // 00000007EBF8: BF800000
	.long 0xbf800000                                           // 00000007EBFC: BF800000

	.p2align	8
	.type	mul_char_x_get_global_size,@function
	.size	mul_char_x_get_global_size, mul_char_x_get_global_size_symend-mul_char_x_get_global_size
mul_char_x_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007EC00: CA240080 010400FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007EC0C: D6100005 02291500
	s_lshl_b32 s2, s2, 4                                       // 00000007EC14: 84028402
	s_lshl_b32 s3, s3, 1                                       // 00000007EC18: 84038103
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007EC1C: DC520022 02000001
	s_clause 0x3                                               // 00000007EC24: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007EC28: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007EC30: F4000140 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007EC38: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], null                            // 00000007EC40: F4040180 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EC48: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007EC50: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007EC54: BF89FC07
	s_lshl_b32 s8, s8, 4                                       // 00000007EC58: 84088408
	s_lshl_b32 s9, s9, 1                                       // 00000007EC5C: 84098109
	v_add3_u32 v4, s12, s2, v4                                 // 00000007EC60: D6550004 0410040C
	v_add3_u32 v5, s14, s3, v5                                 // 00000007EC68: D6550005 0414060E
	s_load_b32 s2, s[0:1], 0x48                                // 00000007EC70: F4000080 F8000048
	s_waitcnt vmcnt(0)                                         // 00000007EC78: BF8903F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 00000007EC7C: 32060490
	v_add_nc_u32_e32 v2, s8, v2                                // 00000007EC80: 4A040408
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007EC84: BF870112
	v_add_nc_u32_e32 v3, s9, v3                                // 00000007EC88: 4A060609
	v_mul_lo_u32 v2, v2, s5                                    // 00000007EC8C: D72C0002 00000B02
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007EC94: BF870002
	v_mul_lo_u32 v3, v3, s5                                    // 00000007EC98: D72C0003 00000B03
	s_clause 0x1                                               // 00000007ECA0: BF850001
	global_store_b8 v4, v2, s[6:7]                             // 00000007ECA4: DC620000 00060204
	global_store_b8 v5, v3, s[6:7]                             // 00000007ECAC: DC620000 00060305
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007ECB4: DC4A0026 01000001
	s_lshl_b32 s0, s10, 1                                      // 00000007ECBC: 8400810A
	s_waitcnt vmcnt(0)                                         // 00000007ECC0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007ECC4: 4A020200
	s_lshl_b32 s0, s4, 1                                       // 00000007ECC8: 84008104
	s_waitcnt lgkmcnt(0)                                       // 00000007ECCC: BF89FC07
	v_add3_u32 v0, s2, s0, v0                                  // 00000007ECD0: D6550000 04000002
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007ECD8: BF870002
	v_mul_lo_u32 v1, v1, s5                                    // 00000007ECDC: D72C0001 00000B01
	global_store_b8 v0, v1, s[6:7]                             // 00000007ECE4: DC620000 00060100
	s_nop 0                                                    // 00000007ECEC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007ECF0: BFB60003
	s_endpgm                                                   // 00000007ECF4: BFB00000
mul_char_x_get_global_size_symend:
	.long 0xbf800000                                           // 00000007ECF8: BF800000
	.long 0xbf800000                                           // 00000007ECFC: BF800000

	.p2align	8
	.type	mul_char_get_global_offset_get_global_size,@function
	.size	mul_char_get_global_offset_get_global_size, mul_char_get_global_offset_get_global_size_symend-mul_char_get_global_offset_get_global_size
mul_char_get_global_offset_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007ED00: CA240080 010400FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007ED0C: D6100005 02291500
	s_lshl_b32 s2, s2, 1                                       // 00000007ED14: 84028102
	s_lshl_b32 s3, s3, 4                                       // 00000007ED18: 84038403
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007ED1C: DC520022 02000001
	s_clause 0x2                                               // 00000007ED24: BF850002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007ED28: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007ED30: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007ED38: F4040180 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007ED40: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007ED48: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007ED4C: BF89FC07
	s_lshl_b32 s5, s8, 1                                       // 00000007ED50: 84058108
	s_lshl_b32 s8, s9, 4                                       // 00000007ED54: 84088409
	v_add3_u32 v4, s12, s2, v4                                 // 00000007ED58: D6550004 0410040C
	v_add3_u32 v5, s14, s3, v5                                 // 00000007ED60: D6550005 0414060E
	s_load_b32 s2, s[0:1], 0x48                                // 00000007ED68: F4000080 F8000048
	s_waitcnt vmcnt(0)                                         // 00000007ED70: BF8903F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 00000007ED74: 32060490
	v_add_nc_u32_e32 v2, s5, v2                                // 00000007ED78: 4A040405
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007ED7C: BF870112
	v_add_nc_u32_e32 v3, s8, v3                                // 00000007ED80: 4A060608
	v_mul_lo_u32 v2, s12, v2                                   // 00000007ED84: D72C0002 0002040C
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007ED8C: BF870002
	v_mul_lo_u32 v3, s14, v3                                   // 00000007ED90: D72C0003 0002060E
	s_clause 0x1                                               // 00000007ED98: BF850001
	global_store_b8 v4, v2, s[6:7]                             // 00000007ED9C: DC620000 00060204
	global_store_b8 v5, v3, s[6:7]                             // 00000007EDA4: DC620000 00060305
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007EDAC: DC4A0026 01000001
	s_lshl_b32 s0, s10, 1                                      // 00000007EDB4: 8400810A
	s_waitcnt vmcnt(0)                                         // 00000007EDB8: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007EDBC: 4A020200
	s_lshl_b32 s0, s4, 1                                       // 00000007EDC0: 84008104
	s_waitcnt lgkmcnt(0)                                       // 00000007EDC4: BF89FC07
	v_add3_u32 v0, s2, s0, v0                                  // 00000007EDC8: D6550000 04000002
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007EDD0: BF870002
	v_mul_lo_u32 v1, s2, v1                                    // 00000007EDD4: D72C0001 00020202
	global_store_b8 v0, v1, s[6:7]                             // 00000007EDDC: DC620000 00060100
	s_nop 0                                                    // 00000007EDE4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EDE8: BFB60003
	s_endpgm                                                   // 00000007EDEC: BFB00000
mul_char_get_global_offset_get_global_size_symend:
	.long 0xbf800000                                           // 00000007EDF0: BF800000
	.long 0xbf800000                                           // 00000007EDF4: BF800000
	.long 0xbf800000                                           // 00000007EDF8: BF800000
	.long 0xbf800000                                           // 00000007EDFC: BF800000

	.p2align	8
	.type	mul_char_get_local_id_get_global_size,@function
	.size	mul_char_get_local_id_get_global_size, mul_char_get_local_id_get_global_size_symend-mul_char_get_local_id_get_global_size
mul_char_get_local_id_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000007EE00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007EE04: 360600FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007EE0C: D6100005 02291500
	s_lshl_b32 s2, s2, 3                                       // 00000007EE14: 84028302
	s_lshl_b32 s3, s3, 2                                       // 00000007EE18: 84038203
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007EE1C: DC520022 02000001
	s_clause 0x2                                               // 00000007EE24: BF850002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007EE28: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007EE30: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007EE38: F4040180 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EE40: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007EE48: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007EE4C: BF89FC07
	s_lshl_b32 s5, s8, 3                                       // 00000007EE50: 84058308
	s_lshl_b32 s8, s9, 2                                       // 00000007EE54: 84088209
	v_add3_u32 v6, s12, s2, v3                                 // 00000007EE58: D6550006 040C040C
	v_add3_u32 v7, s14, s3, v5                                 // 00000007EE60: D6550007 0414060E
	s_load_b32 s2, s[0:1], 0x48                                // 00000007EE68: F4000080 F8000048
	s_waitcnt vmcnt(0)                                         // 00000007EE70: BF8903F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007EE74: 32080490
	v_add_nc_u32_e32 v2, s5, v2                                // 00000007EE78: 4A040405
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007EE7C: BF870112
	v_add_nc_u32_e32 v4, s8, v4                                // 00000007EE80: 4A080808
	v_mul_lo_u16 v2.l, v2.l, v3.l                              // 00000007EE84: D7050002 00020702
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007EE8C: BF870002
	v_mul_lo_u16 v3.l, v4.l, v5.l                              // 00000007EE90: D7050003 00020B04
	s_clause 0x1                                               // 00000007EE98: BF850001
	global_store_b8 v6, v2, s[6:7]                             // 00000007EE9C: DC620000 00060206
	global_store_b8 v7, v3, s[6:7]                             // 00000007EEA4: DC620000 00060307
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007EEAC: DC4A0026 01000001
	s_lshl_b32 s0, s10, 1                                      // 00000007EEB4: 8400810A
	s_waitcnt vmcnt(0)                                         // 00000007EEB8: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007EEBC: 4A020200
	s_lshl_b32 s0, s4, 1                                       // 00000007EEC0: 84008104
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007EEC4: BF870001
	v_mul_lo_u16 v1.l, v1.l, v0.l                              // 00000007EEC8: D7050001 00020101
	s_waitcnt lgkmcnt(0)                                       // 00000007EED0: BF89FC07
	v_add3_u32 v0, s2, s0, v0                                  // 00000007EED4: D6550000 04000002
	global_store_b8 v0, v1, s[6:7]                             // 00000007EEDC: DC620000 00060100
	s_nop 0                                                    // 00000007EEE4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EEE8: BFB60003
	s_endpgm                                                   // 00000007EEEC: BFB00000
mul_char_get_local_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000007EEF0: BF800000
	.long 0xbf800000                                           // 00000007EEF4: BF800000
	.long 0xbf800000                                           // 00000007EEF8: BF800000
	.long 0xbf800000                                           // 00000007EEFC: BF800000

	.p2align	8
	.type	mul_char_get_group_id_get_global_size,@function
	.size	mul_char_get_group_id_get_global_size, mul_char_get_group_id_get_global_size_symend-mul_char_get_group_id_get_global_size
mul_char_get_group_id_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007EF00: CA240080 010400FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007EF0C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EF14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007EF1C: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007EF20: DC520022 02000001
	s_clause 0x2                                               // 00000007EF28: BF850002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007EF2C: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007EF34: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007EF3C: F4040180 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007EF44: BF89FC07
	s_lshl_b32 s5, s8, 1                                       // 00000007EF48: 84058108
	s_lshl_b32 s8, s9, 4                                       // 00000007EF4C: 84088409
	s_waitcnt vmcnt(0)                                         // 00000007EF50: BF8903F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 00000007EF54: 32060490
	v_add_nc_u32_e32 v2, s5, v2                                // 00000007EF58: 4A040405
	s_lshl_b32 s5, s2, 1                                       // 00000007EF5C: 84058102
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007EF60: BF870199
	v_add3_u32 v4, s12, s5, v4                                 // 00000007EF64: D6550004 04100A0C
	v_add_nc_u32_e32 v3, s8, v3                                // 00000007EF6C: 4A060608
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007EF70: BF8704A3
	v_mul_lo_u32 v2, v2, s2                                    // 00000007EF74: D72C0002 00000502
	s_lshl_b32 s2, s3, 4                                       // 00000007EF7C: 84028403
	v_add3_u32 v5, s14, s2, v5                                 // 00000007EF80: D6550005 0414040E
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007EF88: BF870003
	v_mul_lo_u32 v3, v3, s3                                    // 00000007EF8C: D72C0003 00000703
	s_load_b32 s2, s[0:1], 0x48                                // 00000007EF94: F4000080 F8000048
	s_clause 0x1                                               // 00000007EF9C: BF850001
	global_store_b8 v4, v2, s[6:7]                             // 00000007EFA0: DC620000 00060204
	global_store_b8 v5, v3, s[6:7]                             // 00000007EFA8: DC620000 00060305
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007EFB0: DC4A0026 01000001
	s_lshl_b32 s0, s10, 1                                      // 00000007EFB8: 8400810A
	s_waitcnt vmcnt(0)                                         // 00000007EFBC: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007EFC0: 4A020200
	s_lshl_b32 s0, s4, 1                                       // 00000007EFC4: 84008104
	s_waitcnt lgkmcnt(0)                                       // 00000007EFC8: BF89FC07
	v_add3_u32 v0, s2, s0, v0                                  // 00000007EFCC: D6550000 04000002
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007EFD4: BF870002
	v_mul_lo_u32 v1, v1, s4                                    // 00000007EFD8: D72C0001 00000901
	global_store_b8 v0, v1, s[6:7]                             // 00000007EFE0: DC620000 00060100
	s_nop 0                                                    // 00000007EFE8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EFEC: BFB60003
	s_endpgm                                                   // 00000007EFF0: BFB00000
mul_char_get_group_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000007EFF4: BF800000
	.long 0xbf800000                                           // 00000007EFF8: BF800000
	.long 0xbf800000                                           // 00000007EFFC: BF800000

	.p2align	8
	.type	mul_char_get_local_size_get_global_size,@function
	.size	mul_char_get_local_size_get_global_size, mul_char_get_local_size_get_global_size_symend-mul_char_get_local_size_get_global_size
mul_char_get_local_size_get_global_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007F000: F4080200 F8000010
	v_mov_b32_e32 v1, 0                                        // 00000007F008: 7E020280
	s_waitcnt lgkmcnt(0)                                       // 00000007F00C: BF89FC07
	s_add_u32 s11, s0, 16                                      // 00000007F010: 800B9000
	s_addc_u32 s16, s1, 0                                      // 00000007F014: 82108001
	s_lshl_b32 s17, s2, 1                                      // 00000007F018: 84118102
	s_lshl_b32 s18, s3, 1                                      // 00000007F01C: 84128103
	s_lshl_b32 s19, s4, 2                                      // 00000007F020: 84138204
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007F024: DC520022 02000001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007F02C: F4080300 F8000038
	v_and_b32_e32 v5, 0x3ff, v0                                // 00000007F034: 360A00FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007F03C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007F040: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007F044: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007F048: BF8704D9
	s_add_u32 s6, s11, s2                                      // 00000007F04C: 8006020B
	s_addc_u32 s7, s16, 0                                      // 00000007F050: 82078010
	s_cmp_lt_u32 s3, s9                                        // 00000007F054: BF0A0903
	global_load_u8 v3, v1, s[6:7]                              // 00000007F058: DC420000 03060001
	s_cselect_b32 s2, 14, 20                                   // 00000007F060: 9802948E
	s_add_u32 s2, s11, s2                                      // 00000007F064: 8002020B
	s_addc_u32 s3, s16, 0                                      // 00000007F068: 82038010
	s_cmp_lt_u32 s4, s10                                       // 00000007F06C: BF0A0A04
	s_load_b64 s[4:5], s[0:1], 0x8                             // 00000007F070: F4040100 F8000008
	s_cselect_b32 s6, 16, 22                                   // 00000007F078: 98069690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007F07C: BF870009
	s_add_u32 s6, s11, s6                                      // 00000007F080: 8006060B
	s_addc_u32 s7, s16, 0                                      // 00000007F084: 82078010
	s_lshl_b32 s8, s8, 1                                       // 00000007F088: 84088108
	s_waitcnt vmcnt(1)                                         // 00000007F08C: BF8907F7
	v_add_nc_u32_e32 v4, s8, v2                                // 00000007F090: 4A080408
	s_load_b32 s8, s[0:1], 0x48                                // 00000007F094: F4000200 F8000048
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007F09C: 32040490
	s_waitcnt vmcnt(0)                                         // 00000007F0A0: BF8903F7
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007F0A4: BF870002
	v_mul_lo_u32 v3, v4, v3                                    // 00000007F0A8: D72C0003 00020704
	s_waitcnt lgkmcnt(0)                                       // 00000007F0B0: BF89FC07
	v_add3_u32 v4, s12, s17, v5                                // 00000007F0B4: D6550004 0414220C
	global_store_b8 v4, v3, s[4:5]                             // 00000007F0BC: DC620000 00040304
	global_load_u8 v3, v1, s[2:3]                              // 00000007F0C4: DC420000 03020001
	s_lshl_b32 s2, s9, 1                                       // 00000007F0CC: 84028109
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007F0D0: D6100004 02291500
	v_add_nc_u32_e32 v2, s2, v2                                // 00000007F0D8: 4A040402
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F0DC: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007F0E4: BF8701A1
	v_add3_u32 v0, s8, s19, v0                                 // 00000007F0E8: D6550000 04002608
	s_waitcnt vmcnt(0)                                         // 00000007F0F0: BF8903F7
	v_mul_lo_u32 v2, v2, v3                                    // 00000007F0F4: D72C0002 00020702
	v_add3_u32 v3, s14, s18, v4                                // 00000007F0FC: D6550003 0410240E
	global_store_b8 v3, v2, s[4:5]                             // 00000007F104: DC620000 00040203
	s_clause 0x1                                               // 00000007F10C: BF850001
	global_load_u16 v2, v1, s[0:1] offset:38                   // 00000007F110: DC4A0026 02000001
	global_load_u8 v1, v1, s[6:7]                              // 00000007F118: DC420000 01060001
	s_lshl_b32 s0, s10, 2                                      // 00000007F120: 8400820A
	s_waitcnt vmcnt(1)                                         // 00000007F124: BF8907F7
	v_add_nc_u32_e32 v2, s0, v2                                // 00000007F128: 4A040400
	s_waitcnt vmcnt(0)                                         // 00000007F12C: BF8903F7
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007F130: BF870001
	v_mul_lo_u32 v1, v2, v1                                    // 00000007F134: D72C0001 00020302
	global_store_b8 v0, v1, s[4:5]                             // 00000007F13C: DC620000 00040100
	s_nop 0                                                    // 00000007F144: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F148: BFB60003
	s_endpgm                                                   // 00000007F14C: BFB00000
mul_char_get_local_size_get_global_size_symend:
	.long 0xbf800000                                           // 00000007F150: BF800000
	.long 0xbf800000                                           // 00000007F154: BF800000
	.long 0xbf800000                                           // 00000007F158: BF800000
	.long 0xbf800000                                           // 00000007F15C: BF800000
	.long 0xbf800000                                           // 00000007F160: BF800000
	.long 0xbf800000                                           // 00000007F164: BF800000
	.long 0xbf800000                                           // 00000007F168: BF800000
	.long 0xbf800000                                           // 00000007F16C: BF800000
	.long 0xbf800000                                           // 00000007F170: BF800000
	.long 0xbf800000                                           // 00000007F174: BF800000
	.long 0xbf800000                                           // 00000007F178: BF800000
	.long 0xbf800000                                           // 00000007F17C: BF800000
	.long 0xbf800000                                           // 00000007F180: BF800000
	.long 0xbf800000                                           // 00000007F184: BF800000
	.long 0xbf800000                                           // 00000007F188: BF800000
	.long 0xbf800000                                           // 00000007F18C: BF800000
	.long 0xbf800000                                           // 00000007F190: BF800000
	.long 0xbf800000                                           // 00000007F194: BF800000
	.long 0xbf800000                                           // 00000007F198: BF800000
	.long 0xbf800000                                           // 00000007F19C: BF800000
	.long 0xbf800000                                           // 00000007F1A0: BF800000
	.long 0xbf800000                                           // 00000007F1A4: BF800000
	.long 0xbf800000                                           // 00000007F1A8: BF800000
	.long 0xbf800000                                           // 00000007F1AC: BF800000
	.long 0xbf800000                                           // 00000007F1B0: BF800000
	.long 0xbf800000                                           // 00000007F1B4: BF800000
	.long 0xbf800000                                           // 00000007F1B8: BF800000
	.long 0xbf800000                                           // 00000007F1BC: BF800000
	.long 0xbf800000                                           // 00000007F1C0: BF800000
	.long 0xbf800000                                           // 00000007F1C4: BF800000
	.long 0xbf800000                                           // 00000007F1C8: BF800000
	.long 0xbf800000                                           // 00000007F1CC: BF800000
	.long 0xbf800000                                           // 00000007F1D0: BF800000
	.long 0xbf800000                                           // 00000007F1D4: BF800000
	.long 0xbf800000                                           // 00000007F1D8: BF800000
	.long 0xbf800000                                           // 00000007F1DC: BF800000
	.long 0xbf800000                                           // 00000007F1E0: BF800000
	.long 0xbf800000                                           // 00000007F1E4: BF800000
	.long 0xbf800000                                           // 00000007F1E8: BF800000
	.long 0xbf800000                                           // 00000007F1EC: BF800000
	.long 0xbf800000                                           // 00000007F1F0: BF800000
	.long 0xbf800000                                           // 00000007F1F4: BF800000
	.long 0xbf800000                                           // 00000007F1F8: BF800000
	.long 0xbf800000                                           // 00000007F1FC: BF800000

	.p2align	8
	.type	mul_char_get_global_id_get_global_size,@function
	.size	mul_char_get_global_id_get_global_size, mul_char_get_global_id_get_global_size_symend-mul_char_get_global_id_get_global_size
mul_char_get_global_id_get_global_size:
	v_dual_mov_b32 v3, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007F200: CA240080 030200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007F20C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F214: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F21C: BEA10080
	global_load_b32 v1, v3, s[0:1] offset:34                   // 00000007F220: DC520022 01000003
	s_clause 0x2                                               // 00000007F228: BF850002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007F22C: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007F234: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007F23C: F4040180 F8000008
	v_lshl_or_b32 v5, s2, 1, v2                                // 00000007F244: D6560005 04090202
	v_lshl_or_b32 v2, s3, 1, v4                                // 00000007F24C: D6560002 04110203
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007F254: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007F25C: BF89FC07
	s_lshl_b32 s2, s8, 1                                       // 00000007F260: 84028108
	s_lshl_b32 s3, s9, 1                                       // 00000007F264: 84038109
	v_add_nc_u32_e32 v6, s12, v5                               // 00000007F268: 4A0C0A0C
	v_add_nc_u32_e32 v2, s14, v2                               // 00000007F26C: 4A04040E
	s_waitcnt vmcnt(0)                                         // 00000007F270: BF8903F7
	v_lshrrev_b32_e32 v4, 16, v1                               // 00000007F274: 32080290
	v_add_nc_u32_e32 v1, s2, v1                                // 00000007F278: 4A020202
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007F27C: BF870112
	v_add_nc_u32_e32 v4, s3, v4                                // 00000007F280: 4A080803
	v_mul_lo_u32 v6, v6, v1                                    // 00000007F284: D72C0006 00020306
	v_add_co_u32 v1, s2, s6, v2                                // 00000007F28C: D7000201 00020406
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007F294: BF870003
	v_mul_lo_u32 v4, v2, v4                                    // 00000007F298: D72C0004 00020902
	v_add_co_ci_u32_e64 v2, null, s7, 0, s2                    // 00000007F2A0: D5207C02 00090007
	s_load_b32 s2, s[0:1], 0x48                                // 00000007F2A8: F4000080 F8000048
	s_clause 0x1                                               // 00000007F2B0: BF850001
	global_store_b8 v5, v6, s[6:7]                             // 00000007F2B4: DC620000 00060605
	global_store_b8 v[1:2], v4, off                            // 00000007F2BC: DC620000 007C0401
	global_load_u16 v1, v3, s[0:1] offset:38                   // 00000007F2C4: DC4A0026 01000003
	s_lshl_b32 s0, s10, 2                                      // 00000007F2CC: 8400820A
	s_waitcnt lgkmcnt(0)                                       // 00000007F2D0: BF89FC07
	v_add_nc_u32_e32 v0, s2, v0                                // 00000007F2D4: 4A000002
	s_waitcnt vmcnt(0)                                         // 00000007F2D8: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007F2DC: 4A020200
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007F2E0: BF8700A1
	v_mul_lo_u32 v2, v0, v1                                    // 00000007F2E4: D72C0002 00020300
	v_add_co_u32 v0, s0, s6, v0                                // 00000007F2EC: D7000000 00020006
	v_add_co_ci_u32_e64 v1, null, s7, 0, s0                    // 00000007F2F4: D5207C01 00010007
	global_store_b8 v[0:1], v2, off                            // 00000007F2FC: DC620000 007C0200
	s_nop 0                                                    // 00000007F304: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F308: BFB60003
	s_endpgm                                                   // 00000007F30C: BFB00000
mul_char_get_global_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000007F310: BF800000
	.long 0xbf800000                                           // 00000007F314: BF800000
	.long 0xbf800000                                           // 00000007F318: BF800000
	.long 0xbf800000                                           // 00000007F31C: BF800000
	.long 0xbf800000                                           // 00000007F320: BF800000
	.long 0xbf800000                                           // 00000007F324: BF800000
	.long 0xbf800000                                           // 00000007F328: BF800000
	.long 0xbf800000                                           // 00000007F32C: BF800000
	.long 0xbf800000                                           // 00000007F330: BF800000
	.long 0xbf800000                                           // 00000007F334: BF800000
	.long 0xbf800000                                           // 00000007F338: BF800000
	.long 0xbf800000                                           // 00000007F33C: BF800000
	.long 0xbf800000                                           // 00000007F340: BF800000
	.long 0xbf800000                                           // 00000007F344: BF800000
	.long 0xbf800000                                           // 00000007F348: BF800000
	.long 0xbf800000                                           // 00000007F34C: BF800000
	.long 0xbf800000                                           // 00000007F350: BF800000
	.long 0xbf800000                                           // 00000007F354: BF800000
	.long 0xbf800000                                           // 00000007F358: BF800000
	.long 0xbf800000                                           // 00000007F35C: BF800000
	.long 0xbf800000                                           // 00000007F360: BF800000
	.long 0xbf800000                                           // 00000007F364: BF800000
	.long 0xbf800000                                           // 00000007F368: BF800000
	.long 0xbf800000                                           // 00000007F36C: BF800000
	.long 0xbf800000                                           // 00000007F370: BF800000
	.long 0xbf800000                                           // 00000007F374: BF800000
	.long 0xbf800000                                           // 00000007F378: BF800000
	.long 0xbf800000                                           // 00000007F37C: BF800000
	.long 0xbf800000                                           // 00000007F380: BF800000
	.long 0xbf800000                                           // 00000007F384: BF800000
	.long 0xbf800000                                           // 00000007F388: BF800000
	.long 0xbf800000                                           // 00000007F38C: BF800000
	.long 0xbf800000                                           // 00000007F390: BF800000
	.long 0xbf800000                                           // 00000007F394: BF800000
	.long 0xbf800000                                           // 00000007F398: BF800000
	.long 0xbf800000                                           // 00000007F39C: BF800000
	.long 0xbf800000                                           // 00000007F3A0: BF800000
	.long 0xbf800000                                           // 00000007F3A4: BF800000
	.long 0xbf800000                                           // 00000007F3A8: BF800000
	.long 0xbf800000                                           // 00000007F3AC: BF800000
	.long 0xbf800000                                           // 00000007F3B0: BF800000
	.long 0xbf800000                                           // 00000007F3B4: BF800000
	.long 0xbf800000                                           // 00000007F3B8: BF800000
	.long 0xbf800000                                           // 00000007F3BC: BF800000
	.long 0xbf800000                                           // 00000007F3C0: BF800000
	.long 0xbf800000                                           // 00000007F3C4: BF800000
	.long 0xbf800000                                           // 00000007F3C8: BF800000
	.long 0xbf800000                                           // 00000007F3CC: BF800000
	.long 0xbf800000                                           // 00000007F3D0: BF800000
	.long 0xbf800000                                           // 00000007F3D4: BF800000
	.long 0xbf800000                                           // 00000007F3D8: BF800000
	.long 0xbf800000                                           // 00000007F3DC: BF800000
	.long 0xbf800000                                           // 00000007F3E0: BF800000
	.long 0xbf800000                                           // 00000007F3E4: BF800000
	.long 0xbf800000                                           // 00000007F3E8: BF800000
	.long 0xbf800000                                           // 00000007F3EC: BF800000
	.long 0xbf800000                                           // 00000007F3F0: BF800000
	.long 0xbf800000                                           // 00000007F3F4: BF800000
	.long 0xbf800000                                           // 00000007F3F8: BF800000
	.long 0xbf800000                                           // 00000007F3FC: BF800000

	.p2align	8
	.type	mul_char_get_global_size_get_global_size,@function
	.size	mul_char_get_global_size_get_global_size, mul_char_get_global_size_get_global_size_symend-mul_char_get_global_size_get_global_size
mul_char_get_global_size_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000007F400: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007F404: 360600FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007F40C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F414: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 00000007F41C: 84028402
	s_clause 0x1                                               // 00000007F420: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007F424: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007F42C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007F434: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007F438: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007F440: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007F448: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007F450: F4040000 F8000000
	s_lshl_b32 s3, s3, 1                                       // 00000007F458: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000007F45C: 84048104
	s_mov_b32 s33, 0                                           // 00000007F460: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007F464: BF89FC07
	s_lshl_b32 s6, s8, 4                                       // 00000007F468: 84068408
	s_lshl_b32 s7, s9, 1                                       // 00000007F46C: 84078109
	s_lshl_b32 s8, s10, 1                                      // 00000007F470: 8408810A
	v_add3_u32 v3, s12, s2, v3                                 // 00000007F474: D6550003 040C040C
	v_add3_u32 v5, s14, s3, v5                                 // 00000007F47C: D6550005 0414060E
	v_add3_u32 v0, s5, s4, v0                                  // 00000007F484: D6550000 04000805
	s_waitcnt vmcnt(1)                                         // 00000007F48C: BF8907F7
	v_and_b32_e32 v4, 0xffff, v2                               // 00000007F490: 360804FF 0000FFFF
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007F498: 32040490
	s_waitcnt vmcnt(0)                                         // 00000007F49C: BF8903F7
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007F4A0: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F4A4: BF870193
	v_add_nc_u32_e32 v4, s6, v4                                // 00000007F4A8: 4A080806
	v_add_nc_u32_e32 v2, s7, v2                                // 00000007F4AC: 4A040407
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F4B0: BF870193
	v_mul_lo_u32 v1, v1, v1                                    // 00000007F4B4: D72C0001 00020301
	v_mul_lo_u32 v4, v4, v4                                    // 00000007F4BC: D72C0004 00020904
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007F4C4: BF870003
	v_mul_lo_u32 v2, v2, v2                                    // 00000007F4C8: D72C0002 00020502
	s_clause 0x2                                               // 00000007F4D0: BF850002
	global_store_b8 v3, v4, s[0:1]                             // 00000007F4D4: DC620000 00000403
	global_store_b8 v5, v2, s[0:1]                             // 00000007F4DC: DC620000 00000205
	global_store_b8 v0, v1, s[0:1]                             // 00000007F4E4: DC620000 00000100
	s_nop 0                                                    // 00000007F4EC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F4F0: BFB60003
	s_endpgm                                                   // 00000007F4F4: BFB00000
mul_char_get_global_size_get_global_size_symend:
	.long 0xbf800000                                           // 00000007F4F8: BF800000
	.long 0xbf800000                                           // 00000007F4FC: BF800000

	.p2align	8
	.type	mul_char_get_num_groups_get_global_size,@function
	.size	mul_char_get_num_groups_get_global_size, mul_char_get_num_groups_get_global_size_symend-mul_char_get_num_groups_get_global_size
mul_char_get_num_groups_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007F500: CA240080 010400FF 000003FF
	s_lshl_b32 s12, s4, 2                                      // 00000007F50C: 840C8204
	s_lshl_b32 s3, s3, 1                                       // 00000007F510: 84038103
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007F514: D6100005 02291500
	s_clause 0x1                                               // 00000007F51C: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007F520: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007F528: DC4A0026 01000001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007F530: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000007F538: BF89FC07
	s_lshl_b32 s11, s2, 1                                      // 00000007F53C: 840B8102
	s_clause 0x2                                               // 00000007F540: BF850002
	s_load_b32 s13, s[0:1], 0x48                               // 00000007F544: F4000340 F8000048
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007F54C: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007F554: F4040000 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F55C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F564: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007F568: BF89FC07
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007F56C: BF870001
	v_add3_u32 v0, s13, s12, v0                                // 00000007F570: D6550000 0400180D
	v_add3_u32 v4, s4, s11, v4                                 // 00000007F578: D6550004 04101604
	v_add3_u32 v5, s6, s3, v5                                  // 00000007F580: D6550005 04140606
	s_waitcnt vmcnt(1)                                         // 00000007F588: BF8907F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 00000007F58C: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007F590: 7C7A0480
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007F594: BF870002
	v_cmp_ne_u16_e64 s2, 0, v3.l                               // 00000007F598: D43D0002 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007F5A0: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007F5A4: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000007F5A8: 7C7A0280
	s_addc_u32 s5, s8, 0                                       // 00000007F5AC: 82058008
	s_cmp_lg_u32 s2, 0                                         // 00000007F5B0: BF078002
	s_addc_u32 s2, s9, 0                                       // 00000007F5B4: 82028009
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007F5B8: BF07806A
	s_addc_u32 s7, s10, 0                                      // 00000007F5BC: 8207800A
	s_lshl_b32 s8, s8, 1                                       // 00000007F5C0: 84088108
	s_lshl_b32 s9, s9, 1                                       // 00000007F5C4: 84098109
	s_lshl_b32 s10, s10, 2                                     // 00000007F5C8: 840A820A
	v_add_nc_u32_e32 v2, s8, v2                                // 00000007F5CC: 4A040408
	v_add_nc_u32_e32 v3, s9, v3                                // 00000007F5D0: 4A060609
	v_add_nc_u32_e32 v1, s10, v1                               // 00000007F5D4: 4A02020A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F5D8: BF870193
	v_mul_lo_u32 v2, s5, v2                                    // 00000007F5DC: D72C0002 00020405
	v_mul_lo_u32 v3, s2, v3                                    // 00000007F5E4: D72C0003 00020602
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007F5EC: BF870003
	v_mul_lo_u32 v1, s7, v1                                    // 00000007F5F0: D72C0001 00020207
	s_clause 0x2                                               // 00000007F5F8: BF850002
	global_store_b8 v4, v2, s[0:1]                             // 00000007F5FC: DC620000 00000204
	global_store_b8 v5, v3, s[0:1]                             // 00000007F604: DC620000 00000305
	global_store_b8 v0, v1, s[0:1]                             // 00000007F60C: DC620000 00000100
	s_nop 0                                                    // 00000007F614: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F618: BFB60003
	s_endpgm                                                   // 00000007F61C: BFB00000
mul_char_get_num_groups_get_global_size_symend:
	.long 0xbf800000                                           // 00000007F620: BF800000
	.long 0xbf800000                                           // 00000007F624: BF800000
	.long 0xbf800000                                           // 00000007F628: BF800000
	.long 0xbf800000                                           // 00000007F62C: BF800000
	.long 0xbf800000                                           // 00000007F630: BF800000
	.long 0xbf800000                                           // 00000007F634: BF800000
	.long 0xbf800000                                           // 00000007F638: BF800000
	.long 0xbf800000                                           // 00000007F63C: BF800000
	.long 0xbf800000                                           // 00000007F640: BF800000
	.long 0xbf800000                                           // 00000007F644: BF800000
	.long 0xbf800000                                           // 00000007F648: BF800000
	.long 0xbf800000                                           // 00000007F64C: BF800000
	.long 0xbf800000                                           // 00000007F650: BF800000
	.long 0xbf800000                                           // 00000007F654: BF800000
	.long 0xbf800000                                           // 00000007F658: BF800000
	.long 0xbf800000                                           // 00000007F65C: BF800000
	.long 0xbf800000                                           // 00000007F660: BF800000
	.long 0xbf800000                                           // 00000007F664: BF800000
	.long 0xbf800000                                           // 00000007F668: BF800000
	.long 0xbf800000                                           // 00000007F66C: BF800000
	.long 0xbf800000                                           // 00000007F670: BF800000
	.long 0xbf800000                                           // 00000007F674: BF800000
	.long 0xbf800000                                           // 00000007F678: BF800000
	.long 0xbf800000                                           // 00000007F67C: BF800000
	.long 0xbf800000                                           // 00000007F680: BF800000
	.long 0xbf800000                                           // 00000007F684: BF800000
	.long 0xbf800000                                           // 00000007F688: BF800000
	.long 0xbf800000                                           // 00000007F68C: BF800000
	.long 0xbf800000                                           // 00000007F690: BF800000
	.long 0xbf800000                                           // 00000007F694: BF800000
	.long 0xbf800000                                           // 00000007F698: BF800000
	.long 0xbf800000                                           // 00000007F69C: BF800000
	.long 0xbf800000                                           // 00000007F6A0: BF800000
	.long 0xbf800000                                           // 00000007F6A4: BF800000
	.long 0xbf800000                                           // 00000007F6A8: BF800000
	.long 0xbf800000                                           // 00000007F6AC: BF800000
	.long 0xbf800000                                           // 00000007F6B0: BF800000
	.long 0xbf800000                                           // 00000007F6B4: BF800000
	.long 0xbf800000                                           // 00000007F6B8: BF800000
	.long 0xbf800000                                           // 00000007F6BC: BF800000
	.long 0xbf800000                                           // 00000007F6C0: BF800000
	.long 0xbf800000                                           // 00000007F6C4: BF800000
	.long 0xbf800000                                           // 00000007F6C8: BF800000
	.long 0xbf800000                                           // 00000007F6CC: BF800000
	.long 0xbf800000                                           // 00000007F6D0: BF800000
	.long 0xbf800000                                           // 00000007F6D4: BF800000
	.long 0xbf800000                                           // 00000007F6D8: BF800000
	.long 0xbf800000                                           // 00000007F6DC: BF800000
	.long 0xbf800000                                           // 00000007F6E0: BF800000
	.long 0xbf800000                                           // 00000007F6E4: BF800000
	.long 0xbf800000                                           // 00000007F6E8: BF800000
	.long 0xbf800000                                           // 00000007F6EC: BF800000
	.long 0xbf800000                                           // 00000007F6F0: BF800000
	.long 0xbf800000                                           // 00000007F6F4: BF800000
	.long 0xbf800000                                           // 00000007F6F8: BF800000
	.long 0xbf800000                                           // 00000007F6FC: BF800000

	.p2align	8
	.type	mul_char_get_work_dim_get_global_size,@function
	.size	mul_char_get_work_dim_get_global_size, mul_char_get_work_dim_get_global_size_symend-mul_char_get_work_dim_get_global_size
mul_char_get_work_dim_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007F700: CA240080 010400FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007F70C: D6100005 02291500
	s_lshl_b32 s2, s2, 1                                       // 00000007F714: 84028102
	s_lshl_b32 s3, s3, 1                                       // 00000007F718: 84038103
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007F71C: DC520022 02000001
	s_clause 0x3                                               // 00000007F724: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007F728: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x50                                // 00000007F730: F4000140 F8000050
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007F738: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007F740: F4040180 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F748: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F750: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007F754: BF89FC07
	s_lshl_b32 s8, s8, 1                                       // 00000007F758: 84088108
	s_lshl_b32 s9, s9, 1                                       // 00000007F75C: 84098109
	s_and_b32 s5, s5, 0xffff                                   // 00000007F760: 8B05FF05 0000FFFF
	v_add3_u32 v4, s12, s2, v4                                 // 00000007F768: D6550004 0410040C
	v_add3_u32 v5, s14, s3, v5                                 // 00000007F770: D6550005 0414060E
	s_load_b32 s2, s[0:1], 0x48                                // 00000007F778: F4000080 F8000048
	s_waitcnt vmcnt(0)                                         // 00000007F780: BF8903F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 00000007F784: 32060490
	v_add_nc_u32_e32 v2, s8, v2                                // 00000007F788: 4A040408
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007F78C: BF870112
	v_add_nc_u32_e32 v3, s9, v3                                // 00000007F790: 4A060609
	v_mul_lo_u32 v2, v2, s5                                    // 00000007F794: D72C0002 00000B02
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007F79C: BF870002
	v_mul_lo_u32 v3, v3, s5                                    // 00000007F7A0: D72C0003 00000B03
	s_clause 0x1                                               // 00000007F7A8: BF850001
	global_store_b8 v4, v2, s[6:7]                             // 00000007F7AC: DC620000 00060204
	global_store_b8 v5, v3, s[6:7]                             // 00000007F7B4: DC620000 00060305
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007F7BC: DC4A0026 01000001
	s_lshl_b32 s0, s10, 2                                      // 00000007F7C4: 8400820A
	s_waitcnt vmcnt(0)                                         // 00000007F7C8: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007F7CC: 4A020200
	s_lshl_b32 s0, s4, 2                                       // 00000007F7D0: 84008204
	s_waitcnt lgkmcnt(0)                                       // 00000007F7D4: BF89FC07
	v_add3_u32 v0, s2, s0, v0                                  // 00000007F7D8: D6550000 04000002
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007F7E0: BF870002
	v_mul_lo_u32 v1, v1, s5                                    // 00000007F7E4: D72C0001 00000B01
	global_store_b8 v0, v1, s[6:7]                             // 00000007F7EC: DC620000 00060100
	s_nop 0                                                    // 00000007F7F4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F7F8: BFB60003
	s_endpgm                                                   // 00000007F7FC: BFB00000
mul_char_get_work_dim_get_global_size_symend:

	.p2align	8
	.type	mul_char_x_get_num_groups,@function
	.size	mul_char_x_get_num_groups, mul_char_x_get_num_groups_symend-mul_char_x_get_num_groups
mul_char_x_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000007F800: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007F804: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007F80C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F814: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F81C: BEA10080
	s_clause 0x1                                               // 00000007F820: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007F824: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007F82C: DC4A0026 01000001
	s_clause 0x2                                               // 00000007F834: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F838: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007F840: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007F848: F4000140 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007F850: BF89FC07
	s_clause 0x1                                               // 00000007F854: BF850001
	s_load_b32 s9, s[0:1], 0x48                                // 00000007F858: F4000240 F8000048
	s_load_b64 s[6:7], s[0:1], null                            // 00000007F860: F4040180 F8000000
	s_lshl_b32 s0, s2, 4                                       // 00000007F868: 84008402
	s_lshl_b32 s1, s3, 1                                       // 00000007F86C: 84018103
	s_lshl_b32 s2, s4, 1                                       // 00000007F870: 84028104
	s_waitcnt lgkmcnt(0)                                       // 00000007F874: BF89FC07
	v_add3_u32 v0, s9, s2, v0                                  // 00000007F878: D6550000 04000409
	s_waitcnt vmcnt(1)                                         // 00000007F880: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007F884: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007F888: 32040490
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007F88C: BF07806A
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007F890: BF870001
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007F894: 7C7A0480
	v_add3_u32 v2, s8, s0, v3                                  // 00000007F898: D6550002 040C0008
	s_addc_u32 s3, s12, 0                                      // 00000007F8A0: 8203800C
	s_waitcnt vmcnt(0)                                         // 00000007F8A4: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000007F8A8: D43D0000 00020280
	s_mul_i32 s3, s3, s5                                       // 00000007F8B0: 96030503
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007F8B4: BF07806A
	v_mov_b32_e32 v1, s3                                       // 00000007F8B8: 7E020203
	s_addc_u32 s3, s13, 0                                      // 00000007F8BC: 8203800D
	s_cmp_lg_u32 s0, 0                                         // 00000007F8C0: BF078000
	s_mul_i32 s0, s3, s5                                       // 00000007F8C4: 96000503
	v_add3_u32 v3, s10, s1, v4                                 // 00000007F8C8: D6550003 0410020A
	v_mov_b32_e32 v4, s0                                       // 00000007F8D0: 7E080200
	s_addc_u32 s1, s14, 0                                      // 00000007F8D4: 8201800E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 00000007F8D8: BF870499
	s_mul_i32 s0, s1, s5                                       // 00000007F8DC: 96000501
	v_mov_b32_e32 v5, s0                                       // 00000007F8E0: 7E0A0200
	s_clause 0x2                                               // 00000007F8E4: BF850002
	global_store_b8 v2, v1, s[6:7]                             // 00000007F8E8: DC620000 00060102
	global_store_b8 v3, v4, s[6:7]                             // 00000007F8F0: DC620000 00060403
	global_store_b8 v0, v5, s[6:7]                             // 00000007F8F8: DC620000 00060500
	s_nop 0                                                    // 00000007F900: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F904: BFB60003
	s_endpgm                                                   // 00000007F908: BFB00000
mul_char_x_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007F90C: BF800000
	.long 0xbf800000                                           // 00000007F910: BF800000
	.long 0xbf800000                                           // 00000007F914: BF800000
	.long 0xbf800000                                           // 00000007F918: BF800000
	.long 0xbf800000                                           // 00000007F91C: BF800000
	.long 0xbf800000                                           // 00000007F920: BF800000
	.long 0xbf800000                                           // 00000007F924: BF800000
	.long 0xbf800000                                           // 00000007F928: BF800000
	.long 0xbf800000                                           // 00000007F92C: BF800000
	.long 0xbf800000                                           // 00000007F930: BF800000
	.long 0xbf800000                                           // 00000007F934: BF800000
	.long 0xbf800000                                           // 00000007F938: BF800000
	.long 0xbf800000                                           // 00000007F93C: BF800000
	.long 0xbf800000                                           // 00000007F940: BF800000
	.long 0xbf800000                                           // 00000007F944: BF800000
	.long 0xbf800000                                           // 00000007F948: BF800000
	.long 0xbf800000                                           // 00000007F94C: BF800000
	.long 0xbf800000                                           // 00000007F950: BF800000
	.long 0xbf800000                                           // 00000007F954: BF800000
	.long 0xbf800000                                           // 00000007F958: BF800000
	.long 0xbf800000                                           // 00000007F95C: BF800000
	.long 0xbf800000                                           // 00000007F960: BF800000
	.long 0xbf800000                                           // 00000007F964: BF800000
	.long 0xbf800000                                           // 00000007F968: BF800000
	.long 0xbf800000                                           // 00000007F96C: BF800000
	.long 0xbf800000                                           // 00000007F970: BF800000
	.long 0xbf800000                                           // 00000007F974: BF800000
	.long 0xbf800000                                           // 00000007F978: BF800000
	.long 0xbf800000                                           // 00000007F97C: BF800000
	.long 0xbf800000                                           // 00000007F980: BF800000
	.long 0xbf800000                                           // 00000007F984: BF800000
	.long 0xbf800000                                           // 00000007F988: BF800000
	.long 0xbf800000                                           // 00000007F98C: BF800000
	.long 0xbf800000                                           // 00000007F990: BF800000
	.long 0xbf800000                                           // 00000007F994: BF800000
	.long 0xbf800000                                           // 00000007F998: BF800000
	.long 0xbf800000                                           // 00000007F99C: BF800000
	.long 0xbf800000                                           // 00000007F9A0: BF800000
	.long 0xbf800000                                           // 00000007F9A4: BF800000
	.long 0xbf800000                                           // 00000007F9A8: BF800000
	.long 0xbf800000                                           // 00000007F9AC: BF800000
	.long 0xbf800000                                           // 00000007F9B0: BF800000
	.long 0xbf800000                                           // 00000007F9B4: BF800000
	.long 0xbf800000                                           // 00000007F9B8: BF800000
	.long 0xbf800000                                           // 00000007F9BC: BF800000
	.long 0xbf800000                                           // 00000007F9C0: BF800000
	.long 0xbf800000                                           // 00000007F9C4: BF800000
	.long 0xbf800000                                           // 00000007F9C8: BF800000
	.long 0xbf800000                                           // 00000007F9CC: BF800000
	.long 0xbf800000                                           // 00000007F9D0: BF800000
	.long 0xbf800000                                           // 00000007F9D4: BF800000
	.long 0xbf800000                                           // 00000007F9D8: BF800000
	.long 0xbf800000                                           // 00000007F9DC: BF800000
	.long 0xbf800000                                           // 00000007F9E0: BF800000
	.long 0xbf800000                                           // 00000007F9E4: BF800000
	.long 0xbf800000                                           // 00000007F9E8: BF800000
	.long 0xbf800000                                           // 00000007F9EC: BF800000
	.long 0xbf800000                                           // 00000007F9F0: BF800000
	.long 0xbf800000                                           // 00000007F9F4: BF800000
	.long 0xbf800000                                           // 00000007F9F8: BF800000
	.long 0xbf800000                                           // 00000007F9FC: BF800000

	.p2align	8
	.type	mul_char_get_global_offset_get_num_groups,@function
	.size	mul_char_get_global_offset_get_num_groups, mul_char_get_global_offset_get_num_groups_symend-mul_char_get_global_offset_get_num_groups
mul_char_get_global_offset_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000007FA00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007FA04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007FA0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FA14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007FA1C: BEA10080
	s_clause 0x1                                               // 00000007FA20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FA24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007FA2C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007FA34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007FA38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007FA40: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000007FA48: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007FA50: F4040180 F8000008
	s_lshl_b32 s0, s2, 1                                       // 00000007FA58: 84008102
	s_lshl_b32 s1, s3, 4                                       // 00000007FA5C: 84018403
	s_lshl_b32 s2, s4, 1                                       // 00000007FA60: 84028104
	s_waitcnt lgkmcnt(0)                                       // 00000007FA64: BF89FC07
	v_add3_u32 v0, s5, s2, v0                                  // 00000007FA68: D6550000 04000405
	s_waitcnt vmcnt(1)                                         // 00000007FA70: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007FA74: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007FA78: 32040490
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FA7C: BF07806A
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007FA80: BF870001
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007FA84: 7C7A0480
	v_add3_u32 v2, s8, s0, v3                                  // 00000007FA88: D6550002 040C0008
	s_addc_u32 s3, s12, 0                                      // 00000007FA90: 8203800C
	s_waitcnt vmcnt(0)                                         // 00000007FA94: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000007FA98: D43D0000 00020280
	s_mul_i32 s3, s8, s3                                       // 00000007FAA0: 96030308
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FAA4: BF07806A
	v_mov_b32_e32 v1, s3                                       // 00000007FAA8: 7E020203
	s_addc_u32 s3, s13, 0                                      // 00000007FAAC: 8203800D
	s_cmp_lg_u32 s0, 0                                         // 00000007FAB0: BF078000
	s_mul_i32 s0, s10, s3                                      // 00000007FAB4: 9600030A
	v_add3_u32 v3, s10, s1, v4                                 // 00000007FAB8: D6550003 0410020A
	v_mov_b32_e32 v4, s0                                       // 00000007FAC0: 7E080200
	s_addc_u32 s1, s14, 0                                      // 00000007FAC4: 8201800E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 00000007FAC8: BF870499
	s_mul_i32 s0, s5, s1                                       // 00000007FACC: 96000105
	v_mov_b32_e32 v5, s0                                       // 00000007FAD0: 7E0A0200
	s_clause 0x2                                               // 00000007FAD4: BF850002
	global_store_b8 v2, v1, s[6:7]                             // 00000007FAD8: DC620000 00060102
	global_store_b8 v3, v4, s[6:7]                             // 00000007FAE0: DC620000 00060403
	global_store_b8 v0, v5, s[6:7]                             // 00000007FAE8: DC620000 00060500
	s_nop 0                                                    // 00000007FAF0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FAF4: BFB60003
	s_endpgm                                                   // 00000007FAF8: BFB00000
mul_char_get_global_offset_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007FAFC: BF800000

	.p2align	8
	.type	mul_char_get_local_id_get_num_groups,@function
	.size	mul_char_get_local_id_get_num_groups, mul_char_get_local_id_get_num_groups_symend-mul_char_get_local_id_get_num_groups
mul_char_get_local_id_get_num_groups:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007FB00: CA240080 010400FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007FB0C: BEA10080
	s_clause 0x1                                               // 00000007FB10: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FB14: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007FB1C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007FB24: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007FB28: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007FB30: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000007FB38: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007FB40: F4040180 F8000008
	s_lshl_b32 s1, s2, 3                                       // 00000007FB48: 84018302
	s_lshl_b32 s2, s3, 2                                       // 00000007FB4C: 84028203
	s_lshl_b32 s3, s4, 1                                       // 00000007FB50: 84038104
	s_waitcnt vmcnt(1)                                         // 00000007FB54: BF8907F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 00000007FB58: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007FB5C: 7C7A0480
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007FB60: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FB68: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007FB70: BF870004
	v_cmp_ne_u16_e64 s0, 0, v3.l                               // 00000007FB74: D43D0000 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FB7C: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007FB80: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000007FB84: 7C7A0280
	s_waitcnt lgkmcnt(0)                                       // 00000007FB88: BF89FC07
	v_add3_u32 v3, s8, s1, v4                                  // 00000007FB8C: D6550003 04100208
	s_addc_u32 s1, s12, 0                                      // 00000007FB94: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 00000007FB98: BF078000
	v_mul_lo_u16 v4.l, s1, v4.l                                // 00000007FB9C: D7050004 00020801
	s_addc_u32 s0, s13, 0                                      // 00000007FBA4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FBA8: BF07806A
	v_add3_u32 v1, s10, s2, v2                                 // 00000007FBAC: D6550001 0408040A
	s_addc_u32 s1, s14, 0                                      // 00000007FBB4: 8201800E
	v_mul_lo_u16 v2.l, s0, v2.l                                // 00000007FBB8: D7050002 00020400
	v_mul_lo_u16 v5.l, s1, v0.l                                // 00000007FBC0: D7050005 00020001
	v_add3_u32 v0, s5, s3, v0                                  // 00000007FBC8: D6550000 04000605
	s_clause 0x2                                               // 00000007FBD0: BF850002
	global_store_b8 v3, v4, s[6:7]                             // 00000007FBD4: DC620000 00060403
	global_store_b8 v1, v2, s[6:7]                             // 00000007FBDC: DC620000 00060201
	global_store_b8 v0, v5, s[6:7]                             // 00000007FBE4: DC620000 00060500
	s_nop 0                                                    // 00000007FBEC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FBF0: BFB60003
	s_endpgm                                                   // 00000007FBF4: BFB00000
mul_char_get_local_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007FBF8: BF800000
	.long 0xbf800000                                           // 00000007FBFC: BF800000

	.p2align	8
	.type	mul_char_get_group_id_get_num_groups,@function
	.size	mul_char_get_group_id_get_num_groups, mul_char_get_group_id_get_num_groups_symend-mul_char_get_group_id_get_num_groups
mul_char_get_group_id_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 00000007FC00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007FC04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007FC0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FC14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007FC1C: BEA10080
	s_clause 0x1                                               // 00000007FC20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FC24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007FC2C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007FC34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007FC38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007FC40: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000007FC48: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007FC50: F4040180 F8000008
	s_lshl_b32 s0, s2, 1                                       // 00000007FC58: 84008102
	s_lshl_b32 s1, s3, 4                                       // 00000007FC5C: 84018403
	s_waitcnt lgkmcnt(0)                                       // 00000007FC60: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000007FC64: 84098104
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(VALU_DEP_1)// 00000007FC68: BF8700D9
	v_add3_u32 v0, s5, s9, v0                                  // 00000007FC6C: D6550000 04001205
	s_waitcnt vmcnt(1)                                         // 00000007FC74: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007FC78: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007FC7C: 32040490
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FC80: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007FC84: 7C7A0480
	v_add3_u32 v2, s8, s0, v3                                  // 00000007FC88: D6550002 040C0008
	s_addc_u32 s8, s12, 0                                      // 00000007FC90: 8208800C
	s_waitcnt vmcnt(0)                                         // 00000007FC94: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000007FC98: D43D0000 00020280
	s_mul_i32 s2, s8, s2                                       // 00000007FCA0: 96020208
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FCA4: BF07806A
	v_mov_b32_e32 v1, s2                                       // 00000007FCA8: 7E020202
	s_addc_u32 s2, s13, 0                                      // 00000007FCAC: 8202800D
	s_cmp_lg_u32 s0, 0                                         // 00000007FCB0: BF078000
	s_mul_i32 s0, s2, s3                                       // 00000007FCB4: 96000302
	v_add3_u32 v3, s10, s1, v4                                 // 00000007FCB8: D6550003 0410020A
	v_mov_b32_e32 v4, s0                                       // 00000007FCC0: 7E080200
	s_addc_u32 s1, s14, 0                                      // 00000007FCC4: 8201800E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 00000007FCC8: BF870499
	s_mul_i32 s0, s1, s4                                       // 00000007FCCC: 96000401
	v_mov_b32_e32 v5, s0                                       // 00000007FCD0: 7E0A0200
	s_clause 0x2                                               // 00000007FCD4: BF850002
	global_store_b8 v2, v1, s[6:7]                             // 00000007FCD8: DC620000 00060102
	global_store_b8 v3, v4, s[6:7]                             // 00000007FCE0: DC620000 00060403
	global_store_b8 v0, v5, s[6:7]                             // 00000007FCE8: DC620000 00060500
	s_nop 0                                                    // 00000007FCF0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FCF4: BFB60003
	s_endpgm                                                   // 00000007FCF8: BFB00000
mul_char_get_group_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007FCFC: BF800000

	.p2align	8
	.type	mul_char_get_local_size_get_num_groups,@function
	.size	mul_char_get_local_size_get_num_groups, mul_char_get_local_size_get_num_groups_symend-mul_char_get_local_size_get_num_groups
mul_char_get_local_size_get_num_groups:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007FD00: F4080200 F8000010
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007FD08: CA240080 010400FF 000003FF
	s_add_u32 s5, s0, 16                                       // 00000007FD14: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007FD18: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007FD1C: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 00000007FD20: 84108102
	s_clause 0x1                                               // 00000007FD24: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FD28: DC520022 02000001
	global_load_u16 v5, v1, s[0:1] offset:38                   // 00000007FD30: DC4A0026 05000001
	s_lshl_b32 s17, s3, 1                                      // 00000007FD38: 84118103
	s_lshl_b32 s18, s4, 2                                      // 00000007FD3C: 84128204
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007FD40: F4080300 F8000038
	s_mov_b32 s33, 0                                           // 00000007FD48: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007FD4C: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007FD50: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007FD54: BF870009
	s_add_u32 s6, s5, s2                                       // 00000007FD58: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007FD5C: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007FD60: BF0A0903
	s_load_b64 s[2:3], s[0:1], 0x8                             // 00000007FD64: F4040080 F8000008
	global_load_u8 v3, v1, s[6:7]                              // 00000007FD6C: DC420000 03060001
	s_cselect_b32 s6, 14, 20                                   // 00000007FD74: 9806948E
	s_waitcnt lgkmcnt(0)                                       // 00000007FD78: BF89FC07
	v_add3_u32 v4, s12, s16, v4                                // 00000007FD7C: D6550004 0410200C
	s_add_u32 s6, s5, s6                                       // 00000007FD84: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000007FD88: 8207800B
	s_cmp_lt_u32 s4, s10                                       // 00000007FD8C: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000007FD90: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007FD94: BF870009
	s_add_u32 s4, s5, s4                                       // 00000007FD98: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000007FD9C: 8205800B
	s_waitcnt vmcnt(2)                                         // 00000007FDA0: BF890BF7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007FDA4: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007FDA8: 32040490
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FDAC: BF07806A
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007FDB0: BF870001
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007FDB4: 7C7A0480
	s_addc_u32 s8, s8, 0                                       // 00000007FDB8: 82088008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007FDBC: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FDC4: D6100000 02292900
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FDCC: BF07806A
	s_waitcnt vmcnt(1)                                         // 00000007FDD0: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v5.l                           // 00000007FDD4: 7C7A0A80
	v_add3_u32 v2, s14, s17, v2                                // 00000007FDD8: D6550002 0408220E
	s_waitcnt vmcnt(0)                                         // 00000007FDE0: BF8903F7
	v_mul_lo_u32 v3, s8, v3                                    // 00000007FDE4: D72C0003 00020608
	s_load_b32 s8, s[0:1], 0x48                                // 00000007FDEC: F4000200 F8000048
	s_addc_u32 s0, s9, 0                                       // 00000007FDF4: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FDF8: BF07806A
	global_store_b8 v4, v3, s[2:3]                             // 00000007FDFC: DC620000 00020304
	global_load_u8 v3, v1, s[6:7]                              // 00000007FE04: DC420000 03060001
	s_waitcnt lgkmcnt(0)                                       // 00000007FE0C: BF89FC07
	v_add3_u32 v0, s8, s18, v0                                 // 00000007FE10: D6550000 04002408
	s_waitcnt vmcnt(0)                                         // 00000007FE18: BF8903F7
	v_mul_lo_u32 v3, s0, v3                                    // 00000007FE1C: D72C0003 00020600
	s_addc_u32 s0, s10, 0                                      // 00000007FE24: 8200800A
	global_store_b8 v2, v3, s[2:3]                             // 00000007FE28: DC620000 00020302
	global_load_u8 v1, v1, s[4:5]                              // 00000007FE30: DC420000 01040001
	s_waitcnt vmcnt(0)                                         // 00000007FE38: BF8903F7
	v_mul_lo_u32 v1, s0, v1                                    // 00000007FE3C: D72C0001 00020200
	global_store_b8 v0, v1, s[2:3]                             // 00000007FE44: DC620000 00020100
	s_nop 0                                                    // 00000007FE4C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FE50: BFB60003
	s_endpgm                                                   // 00000007FE54: BFB00000
mul_char_get_local_size_get_num_groups_symend:
	.long 0xbf800000                                           // 00000007FE58: BF800000
	.long 0xbf800000                                           // 00000007FE5C: BF800000
	.long 0xbf800000                                           // 00000007FE60: BF800000
	.long 0xbf800000                                           // 00000007FE64: BF800000
	.long 0xbf800000                                           // 00000007FE68: BF800000
	.long 0xbf800000                                           // 00000007FE6C: BF800000
	.long 0xbf800000                                           // 00000007FE70: BF800000
	.long 0xbf800000                                           // 00000007FE74: BF800000
	.long 0xbf800000                                           // 00000007FE78: BF800000
	.long 0xbf800000                                           // 00000007FE7C: BF800000
	.long 0xbf800000                                           // 00000007FE80: BF800000
	.long 0xbf800000                                           // 00000007FE84: BF800000
	.long 0xbf800000                                           // 00000007FE88: BF800000
	.long 0xbf800000                                           // 00000007FE8C: BF800000
	.long 0xbf800000                                           // 00000007FE90: BF800000
	.long 0xbf800000                                           // 00000007FE94: BF800000
	.long 0xbf800000                                           // 00000007FE98: BF800000
	.long 0xbf800000                                           // 00000007FE9C: BF800000
	.long 0xbf800000                                           // 00000007FEA0: BF800000
	.long 0xbf800000                                           // 00000007FEA4: BF800000
	.long 0xbf800000                                           // 00000007FEA8: BF800000
	.long 0xbf800000                                           // 00000007FEAC: BF800000
	.long 0xbf800000                                           // 00000007FEB0: BF800000
	.long 0xbf800000                                           // 00000007FEB4: BF800000
	.long 0xbf800000                                           // 00000007FEB8: BF800000
	.long 0xbf800000                                           // 00000007FEBC: BF800000
	.long 0xbf800000                                           // 00000007FEC0: BF800000
	.long 0xbf800000                                           // 00000007FEC4: BF800000
	.long 0xbf800000                                           // 00000007FEC8: BF800000
	.long 0xbf800000                                           // 00000007FECC: BF800000
	.long 0xbf800000                                           // 00000007FED0: BF800000
	.long 0xbf800000                                           // 00000007FED4: BF800000
	.long 0xbf800000                                           // 00000007FED8: BF800000
	.long 0xbf800000                                           // 00000007FEDC: BF800000
	.long 0xbf800000                                           // 00000007FEE0: BF800000
	.long 0xbf800000                                           // 00000007FEE4: BF800000
	.long 0xbf800000                                           // 00000007FEE8: BF800000
	.long 0xbf800000                                           // 00000007FEEC: BF800000
	.long 0xbf800000                                           // 00000007FEF0: BF800000
	.long 0xbf800000                                           // 00000007FEF4: BF800000
	.long 0xbf800000                                           // 00000007FEF8: BF800000
	.long 0xbf800000                                           // 00000007FEFC: BF800000

	.p2align	8
	.type	mul_char_get_global_id_get_num_groups,@function
	.size	mul_char_get_global_id_get_num_groups, mul_char_get_global_id_get_num_groups_symend-mul_char_get_global_id_get_num_groups
mul_char_get_global_id_get_num_groups:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007FF00: CA240080 010400FF 000003FF
	v_bfe_u32 v3, v0, 20, 10                                   // 00000007FF0C: D6100003 02292900
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007FF14: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000007FF1C: BEA10080
	s_clause 0x1                                               // 00000007FF20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FF24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007FF2C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007FF34: BF850003
	s_load_b32 s5, s[0:1], 0x48                                // 00000007FF38: F4000140 F8000048
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007FF40: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007FF48: F4080300 F8000010
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007FF50: F4040180 F8000008
	v_lshl_or_b32 v3, s4, 2, v3                                // 00000007FF58: D6560003 040D0404
	v_lshl_or_b32 v0, s3, 1, v0                                // 00000007FF60: D6560000 04010203
	v_lshl_or_b32 v4, s2, 1, v4                                // 00000007FF68: D6560004 04110202
	s_waitcnt vmcnt(1)                                         // 00000007FF70: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007FF74: 320A0490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007FF78: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 00000007FF7C: BF89FC07
	v_add_nc_u32_e32 v2, s5, v3                                // 00000007FF80: 4A040605
	v_add_nc_u32_e32 v3, s8, v4                                // 00000007FF84: 4A060808
	v_cmp_ne_u16_e64 s0, 0, v5.l                               // 00000007FF88: D43D0000 00020A80
	v_add_nc_u32_e32 v5, s10, v0                               // 00000007FF90: 4A0A000A
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FF94: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007FF98: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000007FF9C: 7C7A0280
	s_addc_u32 s1, s12, 0                                      // 00000007FFA0: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 00000007FFA4: BF078000
	v_add_co_u32 v0, s0, s6, v5                                // 00000007FFA8: D7000000 00020A06
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007FFB0: BF870001
	v_add_co_ci_u32_e64 v1, null, s7, 0, s0                    // 00000007FFB4: D5207C01 00010007
	s_addc_u32 s0, s13, 0                                      // 00000007FFBC: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007FFC0: BF07806A
	v_mul_lo_u32 v6, v3, s1                                    // 00000007FFC4: D72C0006 00000303
	s_addc_u32 s1, s14, 0                                      // 00000007FFCC: 8201800E
	v_mul_lo_u32 v5, v5, s0                                    // 00000007FFD0: D72C0005 00000105
	v_mul_lo_u32 v7, v2, s1                                    // 00000007FFD8: D72C0007 00000302
	v_add_co_u32 v2, s0, s6, v2                                // 00000007FFE0: D7000002 00020406
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007FFE8: BF870001
	v_add_co_ci_u32_e64 v3, null, s7, 0, s0                    // 00000007FFEC: D5207C03 00010007
	s_clause 0x2                                               // 00000007FFF4: BF850002
	global_store_b8 v4, v6, s[6:7]                             // 00000007FFF8: DC620000 00060604
	global_store_b8 v[0:1], v5, off                            // 000000080000: DC620000 007C0500
	global_store_b8 v[2:3], v7, off                            // 000000080008: DC620000 007C0702
	s_nop 0                                                    // 000000080010: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080014: BFB60003
	s_endpgm                                                   // 000000080018: BFB00000
mul_char_get_global_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000008001C: BF800000
	.long 0xbf800000                                           // 000000080020: BF800000
	.long 0xbf800000                                           // 000000080024: BF800000
	.long 0xbf800000                                           // 000000080028: BF800000
	.long 0xbf800000                                           // 00000008002C: BF800000
	.long 0xbf800000                                           // 000000080030: BF800000
	.long 0xbf800000                                           // 000000080034: BF800000
	.long 0xbf800000                                           // 000000080038: BF800000
	.long 0xbf800000                                           // 00000008003C: BF800000
	.long 0xbf800000                                           // 000000080040: BF800000
	.long 0xbf800000                                           // 000000080044: BF800000
	.long 0xbf800000                                           // 000000080048: BF800000
	.long 0xbf800000                                           // 00000008004C: BF800000
	.long 0xbf800000                                           // 000000080050: BF800000
	.long 0xbf800000                                           // 000000080054: BF800000
	.long 0xbf800000                                           // 000000080058: BF800000
	.long 0xbf800000                                           // 00000008005C: BF800000
	.long 0xbf800000                                           // 000000080060: BF800000
	.long 0xbf800000                                           // 000000080064: BF800000
	.long 0xbf800000                                           // 000000080068: BF800000
	.long 0xbf800000                                           // 00000008006C: BF800000
	.long 0xbf800000                                           // 000000080070: BF800000
	.long 0xbf800000                                           // 000000080074: BF800000
	.long 0xbf800000                                           // 000000080078: BF800000
	.long 0xbf800000                                           // 00000008007C: BF800000
	.long 0xbf800000                                           // 000000080080: BF800000
	.long 0xbf800000                                           // 000000080084: BF800000
	.long 0xbf800000                                           // 000000080088: BF800000
	.long 0xbf800000                                           // 00000008008C: BF800000
	.long 0xbf800000                                           // 000000080090: BF800000
	.long 0xbf800000                                           // 000000080094: BF800000
	.long 0xbf800000                                           // 000000080098: BF800000
	.long 0xbf800000                                           // 00000008009C: BF800000
	.long 0xbf800000                                           // 0000000800A0: BF800000
	.long 0xbf800000                                           // 0000000800A4: BF800000
	.long 0xbf800000                                           // 0000000800A8: BF800000
	.long 0xbf800000                                           // 0000000800AC: BF800000
	.long 0xbf800000                                           // 0000000800B0: BF800000
	.long 0xbf800000                                           // 0000000800B4: BF800000
	.long 0xbf800000                                           // 0000000800B8: BF800000
	.long 0xbf800000                                           // 0000000800BC: BF800000
	.long 0xbf800000                                           // 0000000800C0: BF800000
	.long 0xbf800000                                           // 0000000800C4: BF800000
	.long 0xbf800000                                           // 0000000800C8: BF800000
	.long 0xbf800000                                           // 0000000800CC: BF800000
	.long 0xbf800000                                           // 0000000800D0: BF800000
	.long 0xbf800000                                           // 0000000800D4: BF800000
	.long 0xbf800000                                           // 0000000800D8: BF800000
	.long 0xbf800000                                           // 0000000800DC: BF800000
	.long 0xbf800000                                           // 0000000800E0: BF800000
	.long 0xbf800000                                           // 0000000800E4: BF800000
	.long 0xbf800000                                           // 0000000800E8: BF800000
	.long 0xbf800000                                           // 0000000800EC: BF800000
	.long 0xbf800000                                           // 0000000800F0: BF800000
	.long 0xbf800000                                           // 0000000800F4: BF800000
	.long 0xbf800000                                           // 0000000800F8: BF800000
	.long 0xbf800000                                           // 0000000800FC: BF800000

	.p2align	8
	.type	mul_char_get_global_size_get_num_groups,@function
	.size	mul_char_get_global_size_get_num_groups, mul_char_get_global_size_get_num_groups_symend-mul_char_get_global_size_get_num_groups
mul_char_get_global_size_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000080100: 7E020280
	s_lshl_b32 s2, s2, 4                                       // 000000080104: 84028402
	s_lshl_b32 s3, s3, 1                                       // 000000080108: 84038103
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000008010C: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000080114: D6100004 02291500
	s_clause 0x1                                               // 00000008011C: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080120: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000080128: DC4A0026 01000001
	s_clause 0x1                                               // 000000080130: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000080134: F4080200 F8000010
	s_load_b64 s[12:13], s[0:1], null                          // 00000008013C: F4040300 F8000000
	s_waitcnt lgkmcnt(0)                                       // 000000080144: BF89FC07
	s_lshl_b32 s11, s4, 1                                      // 000000080148: 840B8104
	s_clause 0x1                                               // 00000008014C: BF850001
	s_load_b32 s14, s[0:1], 0x48                               // 000000080150: F4000380 F8000048
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000080158: F4080100 F8000038
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080160: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000080168: BEA10080
	s_lshl_b32 s0, s8, 4                                       // 00000008016C: 84008408
	s_lshl_b32 s1, s9, 1                                       // 000000080170: 84018109
	s_waitcnt lgkmcnt(0)                                       // 000000080174: BF89FC07
	s_lshl_b32 s5, s10, 1                                      // 000000080178: 8405810A
	v_add3_u32 v3, s4, s2, v3                                  // 00000008017C: D6550003 040C0404
	v_add3_u32 v4, s6, s3, v4                                  // 000000080184: D6550004 04100606
	v_add3_u32 v0, s14, s11, v0                                // 00000008018C: D6550000 0400160E
	s_waitcnt vmcnt(1)                                         // 000000080194: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000080198: 320A0490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000008019C: 7C7A0480
	v_add_nc_u32_e32 v2, s0, v2                                // 0000000801A0: 4A040400
	s_waitcnt vmcnt(0)                                         // 0000000801A4: BF8903F7
	v_add_nc_u32_e32 v6, s5, v1                                // 0000000801A8: 4A0C0205
	v_cmp_ne_u16_e64 s0, 0, v5.l                               // 0000000801AC: D43D0000 00020A80
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000801B4: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 0000000801B8: 7C7A0280
	s_addc_u32 s5, s8, 0                                       // 0000000801BC: 82058008
	v_add_nc_u32_e32 v1, s1, v5                                // 0000000801C0: 4A020A01
	s_cmp_lg_u32 s0, 0                                         // 0000000801C4: BF078000
	v_mul_lo_u32 v2, s5, v2                                    // 0000000801C8: D72C0002 00020405
	s_addc_u32 s0, s9, 0                                       // 0000000801D0: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000801D4: BF07806A
	v_mul_lo_u32 v1, s0, v1                                    // 0000000801D8: D72C0001 00020200
	s_addc_u32 s1, s10, 0                                      // 0000000801E0: 8201800A
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000801E4: BF870009
	v_mul_lo_u32 v5, s1, v6                                    // 0000000801E8: D72C0005 00020C01
	s_clause 0x2                                               // 0000000801F0: BF850002
	global_store_b8 v3, v2, s[12:13]                           // 0000000801F4: DC620000 000C0203
	global_store_b8 v4, v1, s[12:13]                           // 0000000801FC: DC620000 000C0104
	global_store_b8 v0, v5, s[12:13]                           // 000000080204: DC620000 000C0500
	s_nop 0                                                    // 00000008020C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080210: BFB60003
	s_endpgm                                                   // 000000080214: BFB00000
mul_char_get_global_size_get_num_groups_symend:
	.long 0xbf800000                                           // 000000080218: BF800000
	.long 0xbf800000                                           // 00000008021C: BF800000
	.long 0xbf800000                                           // 000000080220: BF800000
	.long 0xbf800000                                           // 000000080224: BF800000
	.long 0xbf800000                                           // 000000080228: BF800000
	.long 0xbf800000                                           // 00000008022C: BF800000
	.long 0xbf800000                                           // 000000080230: BF800000
	.long 0xbf800000                                           // 000000080234: BF800000
	.long 0xbf800000                                           // 000000080238: BF800000
	.long 0xbf800000                                           // 00000008023C: BF800000
	.long 0xbf800000                                           // 000000080240: BF800000
	.long 0xbf800000                                           // 000000080244: BF800000
	.long 0xbf800000                                           // 000000080248: BF800000
	.long 0xbf800000                                           // 00000008024C: BF800000
	.long 0xbf800000                                           // 000000080250: BF800000
	.long 0xbf800000                                           // 000000080254: BF800000
	.long 0xbf800000                                           // 000000080258: BF800000
	.long 0xbf800000                                           // 00000008025C: BF800000
	.long 0xbf800000                                           // 000000080260: BF800000
	.long 0xbf800000                                           // 000000080264: BF800000
	.long 0xbf800000                                           // 000000080268: BF800000
	.long 0xbf800000                                           // 00000008026C: BF800000
	.long 0xbf800000                                           // 000000080270: BF800000
	.long 0xbf800000                                           // 000000080274: BF800000
	.long 0xbf800000                                           // 000000080278: BF800000
	.long 0xbf800000                                           // 00000008027C: BF800000
	.long 0xbf800000                                           // 000000080280: BF800000
	.long 0xbf800000                                           // 000000080284: BF800000
	.long 0xbf800000                                           // 000000080288: BF800000
	.long 0xbf800000                                           // 00000008028C: BF800000
	.long 0xbf800000                                           // 000000080290: BF800000
	.long 0xbf800000                                           // 000000080294: BF800000
	.long 0xbf800000                                           // 000000080298: BF800000
	.long 0xbf800000                                           // 00000008029C: BF800000
	.long 0xbf800000                                           // 0000000802A0: BF800000
	.long 0xbf800000                                           // 0000000802A4: BF800000
	.long 0xbf800000                                           // 0000000802A8: BF800000
	.long 0xbf800000                                           // 0000000802AC: BF800000
	.long 0xbf800000                                           // 0000000802B0: BF800000
	.long 0xbf800000                                           // 0000000802B4: BF800000
	.long 0xbf800000                                           // 0000000802B8: BF800000
	.long 0xbf800000                                           // 0000000802BC: BF800000
	.long 0xbf800000                                           // 0000000802C0: BF800000
	.long 0xbf800000                                           // 0000000802C4: BF800000
	.long 0xbf800000                                           // 0000000802C8: BF800000
	.long 0xbf800000                                           // 0000000802CC: BF800000
	.long 0xbf800000                                           // 0000000802D0: BF800000
	.long 0xbf800000                                           // 0000000802D4: BF800000
	.long 0xbf800000                                           // 0000000802D8: BF800000
	.long 0xbf800000                                           // 0000000802DC: BF800000
	.long 0xbf800000                                           // 0000000802E0: BF800000
	.long 0xbf800000                                           // 0000000802E4: BF800000
	.long 0xbf800000                                           // 0000000802E8: BF800000
	.long 0xbf800000                                           // 0000000802EC: BF800000
	.long 0xbf800000                                           // 0000000802F0: BF800000
	.long 0xbf800000                                           // 0000000802F4: BF800000
	.long 0xbf800000                                           // 0000000802F8: BF800000
	.long 0xbf800000                                           // 0000000802FC: BF800000

	.p2align	8
	.type	mul_char_get_num_groups_get_num_groups,@function
	.size	mul_char_get_num_groups_get_num_groups, mul_char_get_num_groups_get_num_groups_symend-mul_char_get_num_groups_get_num_groups
mul_char_get_num_groups_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000080300: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080304: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008030C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080314: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008031C: BEA10080
	s_clause 0x1                                               // 000000080320: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080324: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008032C: DC4A0026 01000001
	s_clause 0x3                                               // 000000080334: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080338: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000080340: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000080348: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000080350: F4040180 F8000008
	s_lshl_b32 s0, s2, 1                                       // 000000080358: 84008102
	s_lshl_b32 s1, s3, 1                                       // 00000008035C: 84018103
	s_lshl_b32 s2, s4, 2                                       // 000000080360: 84028204
	s_waitcnt lgkmcnt(0)                                       // 000000080364: BF89FC07
	v_add3_u32 v0, s5, s2, v0                                  // 000000080368: D6550000 04000405
	s_waitcnt vmcnt(1)                                         // 000000080370: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080374: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000080378: 32040490
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000008037C: BF07806A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000080380: BF870001
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080384: 7C7A0480
	v_add3_u32 v2, s8, s0, v3                                  // 000000080388: D6550002 040C0008
	s_addc_u32 s3, s12, 0                                      // 000000080390: 8203800C
	s_waitcnt vmcnt(0)                                         // 000000080394: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000080398: D43D0000 00020280
	s_mul_i32 s3, s3, s3                                       // 0000000803A0: 96030303
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000803A4: BF07806A
	v_mov_b32_e32 v1, s3                                       // 0000000803A8: 7E020203
	s_addc_u32 s3, s13, 0                                      // 0000000803AC: 8203800D
	s_cmp_lg_u32 s0, 0                                         // 0000000803B0: BF078000
	s_mul_i32 s0, s3, s3                                       // 0000000803B4: 96000303
	s_addc_u32 s3, s14, 0                                      // 0000000803B8: 8203800E
	v_add3_u32 v3, s10, s1, v4                                 // 0000000803BC: D6550003 0410020A
	v_mov_b32_e32 v4, s0                                       // 0000000803C4: 7E080200
	s_mul_i32 s0, s3, s3                                       // 0000000803C8: 96000303
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000803CC: BF870009
	v_mov_b32_e32 v5, s0                                       // 0000000803D0: 7E0A0200
	s_clause 0x2                                               // 0000000803D4: BF850002
	global_store_b8 v2, v1, s[6:7]                             // 0000000803D8: DC620000 00060102
	global_store_b8 v3, v4, s[6:7]                             // 0000000803E0: DC620000 00060403
	global_store_b8 v0, v5, s[6:7]                             // 0000000803E8: DC620000 00060500
	s_nop 0                                                    // 0000000803F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000803F4: BFB60003
	s_endpgm                                                   // 0000000803F8: BFB00000
mul_char_get_num_groups_get_num_groups_symend:
	.long 0xbf800000                                           // 0000000803FC: BF800000

	.p2align	8
	.type	mul_char_get_work_dim_get_num_groups,@function
	.size	mul_char_get_work_dim_get_num_groups, mul_char_get_work_dim_get_num_groups_symend-mul_char_get_work_dim_get_num_groups
mul_char_get_work_dim_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000080400: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080404: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008040C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080414: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008041C: BEA10080
	s_clause 0x1                                               // 000000080420: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080424: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008042C: DC4A0026 01000001
	s_clause 0x2                                               // 000000080434: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 000000080438: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080440: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000080448: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 000000080450: BF89FC07
	s_clause 0x1                                               // 000000080454: BF850001
	s_load_b32 s9, s[0:1], 0x48                                // 000000080458: F4000240 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000080460: F4040180 F8000008
	s_lshl_b32 s0, s2, 1                                       // 000000080468: 84008102
	s_lshl_b32 s1, s3, 1                                       // 00000008046C: 84018103
	s_lshl_b32 s2, s4, 2                                       // 000000080470: 84028204
	s_and_b32 s3, s5, 0xffff                                   // 000000080474: 8B03FF05 0000FFFF
	s_waitcnt lgkmcnt(0)                                       // 00000008047C: BF89FC07
	v_add3_u32 v0, s9, s2, v0                                  // 000000080480: D6550000 04000409
	s_waitcnt vmcnt(1)                                         // 000000080488: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000008048C: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000080490: 32040490
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080494: BF07806A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000080498: BF870001
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000008049C: 7C7A0480
	v_add3_u32 v2, s8, s0, v3                                  // 0000000804A0: D6550002 040C0008
	s_addc_u32 s4, s12, 0                                      // 0000000804A8: 8204800C
	s_waitcnt vmcnt(0)                                         // 0000000804AC: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 0000000804B0: D43D0000 00020280
	s_mul_i32 s4, s3, s4                                       // 0000000804B8: 96040403
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000804BC: BF07806A
	v_mov_b32_e32 v1, s4                                       // 0000000804C0: 7E020204
	s_addc_u32 s4, s13, 0                                      // 0000000804C4: 8204800D
	s_cmp_lg_u32 s0, 0                                         // 0000000804C8: BF078000
	s_mul_i32 s0, s3, s4                                       // 0000000804CC: 96000403
	v_add3_u32 v3, s10, s1, v4                                 // 0000000804D0: D6550003 0410020A
	v_mov_b32_e32 v4, s0                                       // 0000000804D8: 7E080200
	s_addc_u32 s1, s14, 0                                      // 0000000804DC: 8201800E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 0000000804E0: BF870499
	s_mul_i32 s0, s1, s3                                       // 0000000804E4: 96000301
	v_mov_b32_e32 v5, s0                                       // 0000000804E8: 7E0A0200
	s_clause 0x2                                               // 0000000804EC: BF850002
	global_store_b8 v2, v1, s[6:7]                             // 0000000804F0: DC620000 00060102
	global_store_b8 v3, v4, s[6:7]                             // 0000000804F8: DC620000 00060403
	global_store_b8 v0, v5, s[6:7]                             // 000000080500: DC620000 00060500
	s_nop 0                                                    // 000000080508: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008050C: BFB60003
	s_endpgm                                                   // 000000080510: BFB00000
mul_char_get_work_dim_get_num_groups_symend:
	.long 0xbf800000                                           // 000000080514: BF800000
	.long 0xbf800000                                           // 000000080518: BF800000
	.long 0xbf800000                                           // 00000008051C: BF800000
	.long 0xbf800000                                           // 000000080520: BF800000
	.long 0xbf800000                                           // 000000080524: BF800000
	.long 0xbf800000                                           // 000000080528: BF800000
	.long 0xbf800000                                           // 00000008052C: BF800000
	.long 0xbf800000                                           // 000000080530: BF800000
	.long 0xbf800000                                           // 000000080534: BF800000
	.long 0xbf800000                                           // 000000080538: BF800000
	.long 0xbf800000                                           // 00000008053C: BF800000
	.long 0xbf800000                                           // 000000080540: BF800000
	.long 0xbf800000                                           // 000000080544: BF800000
	.long 0xbf800000                                           // 000000080548: BF800000
	.long 0xbf800000                                           // 00000008054C: BF800000
	.long 0xbf800000                                           // 000000080550: BF800000
	.long 0xbf800000                                           // 000000080554: BF800000
	.long 0xbf800000                                           // 000000080558: BF800000
	.long 0xbf800000                                           // 00000008055C: BF800000
	.long 0xbf800000                                           // 000000080560: BF800000
	.long 0xbf800000                                           // 000000080564: BF800000
	.long 0xbf800000                                           // 000000080568: BF800000
	.long 0xbf800000                                           // 00000008056C: BF800000
	.long 0xbf800000                                           // 000000080570: BF800000
	.long 0xbf800000                                           // 000000080574: BF800000
	.long 0xbf800000                                           // 000000080578: BF800000
	.long 0xbf800000                                           // 00000008057C: BF800000
	.long 0xbf800000                                           // 000000080580: BF800000
	.long 0xbf800000                                           // 000000080584: BF800000
	.long 0xbf800000                                           // 000000080588: BF800000
	.long 0xbf800000                                           // 00000008058C: BF800000
	.long 0xbf800000                                           // 000000080590: BF800000
	.long 0xbf800000                                           // 000000080594: BF800000
	.long 0xbf800000                                           // 000000080598: BF800000
	.long 0xbf800000                                           // 00000008059C: BF800000
	.long 0xbf800000                                           // 0000000805A0: BF800000
	.long 0xbf800000                                           // 0000000805A4: BF800000
	.long 0xbf800000                                           // 0000000805A8: BF800000
	.long 0xbf800000                                           // 0000000805AC: BF800000
	.long 0xbf800000                                           // 0000000805B0: BF800000
	.long 0xbf800000                                           // 0000000805B4: BF800000
	.long 0xbf800000                                           // 0000000805B8: BF800000
	.long 0xbf800000                                           // 0000000805BC: BF800000
	.long 0xbf800000                                           // 0000000805C0: BF800000
	.long 0xbf800000                                           // 0000000805C4: BF800000
	.long 0xbf800000                                           // 0000000805C8: BF800000
	.long 0xbf800000                                           // 0000000805CC: BF800000
	.long 0xbf800000                                           // 0000000805D0: BF800000
	.long 0xbf800000                                           // 0000000805D4: BF800000
	.long 0xbf800000                                           // 0000000805D8: BF800000
	.long 0xbf800000                                           // 0000000805DC: BF800000
	.long 0xbf800000                                           // 0000000805E0: BF800000
	.long 0xbf800000                                           // 0000000805E4: BF800000
	.long 0xbf800000                                           // 0000000805E8: BF800000
	.long 0xbf800000                                           // 0000000805EC: BF800000
	.long 0xbf800000                                           // 0000000805F0: BF800000
	.long 0xbf800000                                           // 0000000805F4: BF800000
	.long 0xbf800000                                           // 0000000805F8: BF800000
	.long 0xbf800000                                           // 0000000805FC: BF800000

	.p2align	8
	.type	mul_char_x_get_work_dim,@function
	.size	mul_char_x_get_work_dim, mul_char_x_get_work_dim_symend-mul_char_x_get_work_dim
mul_char_x_get_work_dim:
	s_clause 0x4                                               // 000000080600: BF850004
	s_load_b32 s5, s[0:1], 0x8                                 // 000000080604: F4000140 F8000008
	s_load_b32 s6, s[0:1], 0x50                                // 00000008060C: F4000180 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080614: F4080200 F8000038
	s_load_b32 s7, s[0:1], 0x48                                // 00000008061C: F40001C0 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000080624: F4040000 F8000000
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000008062C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080634: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000008063C: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 000000080644: 84028402
	s_lshl_b32 s3, s3, 1                                       // 000000080648: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000008064C: 84048104
	s_mov_b32 s33, 0                                           // 000000080650: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000080654: BF89FC07
	s_mul_i32 s5, s6, s5                                       // 000000080658: 96050506
	v_add3_u32 v1, s8, s2, v1                                  // 00000008065C: D6550001 04040408
	v_mov_b32_e32 v3, s5                                       // 000000080664: 7E060205
	v_add3_u32 v2, s10, s3, v2                                 // 000000080668: D6550002 0408060A
	v_add3_u32 v0, s7, s4, v0                                  // 000000080670: D6550000 04000807
	s_clause 0x2                                               // 000000080678: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000008067C: DC620000 00000301
	global_store_b8 v2, v3, s[0:1]                             // 000000080684: DC620000 00000302
	global_store_b8 v0, v3, s[0:1]                             // 00000008068C: DC620000 00000300
	s_nop 0                                                    // 000000080694: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080698: BFB60003
	s_endpgm                                                   // 00000008069C: BFB00000
mul_char_x_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000806A0: BF800000
	.long 0xbf800000                                           // 0000000806A4: BF800000
	.long 0xbf800000                                           // 0000000806A8: BF800000
	.long 0xbf800000                                           // 0000000806AC: BF800000
	.long 0xbf800000                                           // 0000000806B0: BF800000
	.long 0xbf800000                                           // 0000000806B4: BF800000
	.long 0xbf800000                                           // 0000000806B8: BF800000
	.long 0xbf800000                                           // 0000000806BC: BF800000
	.long 0xbf800000                                           // 0000000806C0: BF800000
	.long 0xbf800000                                           // 0000000806C4: BF800000
	.long 0xbf800000                                           // 0000000806C8: BF800000
	.long 0xbf800000                                           // 0000000806CC: BF800000
	.long 0xbf800000                                           // 0000000806D0: BF800000
	.long 0xbf800000                                           // 0000000806D4: BF800000
	.long 0xbf800000                                           // 0000000806D8: BF800000
	.long 0xbf800000                                           // 0000000806DC: BF800000
	.long 0xbf800000                                           // 0000000806E0: BF800000
	.long 0xbf800000                                           // 0000000806E4: BF800000
	.long 0xbf800000                                           // 0000000806E8: BF800000
	.long 0xbf800000                                           // 0000000806EC: BF800000
	.long 0xbf800000                                           // 0000000806F0: BF800000
	.long 0xbf800000                                           // 0000000806F4: BF800000
	.long 0xbf800000                                           // 0000000806F8: BF800000
	.long 0xbf800000                                           // 0000000806FC: BF800000

	.p2align	8
	.type	mul_char_get_global_offset_get_work_dim,@function
	.size	mul_char_get_global_offset_get_work_dim, mul_char_get_global_offset_get_work_dim_symend-mul_char_get_global_offset_get_work_dim
mul_char_get_global_offset_get_work_dim:
	s_clause 0x3                                               // 000000080700: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000080704: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000008070C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 000000080714: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008071C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080724: D6100002 02291500
	s_lshl_b32 s3, s3, 4                                       // 00000008072C: 84038403
	s_lshl_b32 s2, s2, 1                                       // 000000080730: 84028102
	s_lshl_b32 s4, s4, 1                                       // 000000080734: 84048104
	s_mov_b32 s33, 0                                           // 000000080738: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000008073C: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 000000080740: 8B05FF05 0000FFFF
	v_add3_u32 v2, s10, s3, v2                                 // 000000080748: D6550002 0408060A
	s_mul_i32 s3, s5, s10                                      // 000000080750: 96030A05
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000080754: BF870129
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 000000080758: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080764: D6100000 02292900
	v_add3_u32 v1, s8, s2, v1                                  // 00000008076C: D6550001 04040408
	s_mul_i32 s2, s5, s8                                       // 000000080774: 96020805
	s_delay_alu instid0(VALU_DEP_2)                            // 000000080778: BF870002
	v_add3_u32 v0, s6, s4, v0                                  // 00000008077C: D6550000 04000806
	s_mul_i32 s4, s5, s6                                       // 000000080784: 96040605
	v_mov_b32_e32 v3, s2                                       // 000000080788: 7E060202
	v_mov_b32_e32 v5, s4                                       // 00000008078C: 7E0A0204
	s_clause 0x2                                               // 000000080790: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 000000080794: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000008079C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 0000000807A4: DC620000 00000500
	s_nop 0                                                    // 0000000807AC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000807B0: BFB60003
	s_endpgm                                                   // 0000000807B4: BFB00000
mul_char_get_global_offset_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000807B8: BF800000
	.long 0xbf800000                                           // 0000000807BC: BF800000
	.long 0xbf800000                                           // 0000000807C0: BF800000
	.long 0xbf800000                                           // 0000000807C4: BF800000
	.long 0xbf800000                                           // 0000000807C8: BF800000
	.long 0xbf800000                                           // 0000000807CC: BF800000
	.long 0xbf800000                                           // 0000000807D0: BF800000
	.long 0xbf800000                                           // 0000000807D4: BF800000
	.long 0xbf800000                                           // 0000000807D8: BF800000
	.long 0xbf800000                                           // 0000000807DC: BF800000
	.long 0xbf800000                                           // 0000000807E0: BF800000
	.long 0xbf800000                                           // 0000000807E4: BF800000
	.long 0xbf800000                                           // 0000000807E8: BF800000
	.long 0xbf800000                                           // 0000000807EC: BF800000
	.long 0xbf800000                                           // 0000000807F0: BF800000
	.long 0xbf800000                                           // 0000000807F4: BF800000
	.long 0xbf800000                                           // 0000000807F8: BF800000
	.long 0xbf800000                                           // 0000000807FC: BF800000

	.p2align	8
	.type	mul_char_get_local_id_get_work_dim,@function
	.size	mul_char_get_local_id_get_work_dim, mul_char_get_local_id_get_work_dim_symend-mul_char_get_local_id_get_work_dim
mul_char_get_local_id_get_work_dim:
	s_clause 0x3                                               // 000000080800: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000080804: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000008080C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 000000080814: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008081C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000080824: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008082C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080834: D6100000 02292900
	s_lshl_b32 s2, s2, 3                                       // 00000008083C: 84028302
	s_lshl_b32 s3, s3, 2                                       // 000000080840: 84038203
	s_lshl_b32 s4, s4, 1                                       // 000000080844: 84048104
	s_mov_b32 s33, 0                                           // 000000080848: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000008084C: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 000000080850: 8B05FF05 0000FFFF
	v_add3_u32 v3, s8, s2, v1                                  // 000000080858: D6550003 04040408
	v_mul_u32_u24_e32 v1, s5, v1                               // 000000080860: 16020205
	v_add3_u32 v4, s10, s3, v2                                 // 000000080864: D6550004 0408060A
	v_mul_u32_u24_e32 v2, s5, v2                               // 00000008086C: 16040405
	v_add3_u32 v5, s6, s4, v0                                  // 000000080870: D6550005 04000806
	v_mul_u32_u24_e32 v0, s5, v0                               // 000000080878: 16000005
	s_clause 0x2                                               // 00000008087C: BF850002
	global_store_b8 v3, v1, s[0:1]                             // 000000080880: DC620000 00000103
	global_store_b8 v4, v2, s[0:1]                             // 000000080888: DC620000 00000204
	global_store_b8 v5, v0, s[0:1]                             // 000000080890: DC620000 00000005
	s_nop 0                                                    // 000000080898: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008089C: BFB60003
	s_endpgm                                                   // 0000000808A0: BFB00000
mul_char_get_local_id_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000808A4: BF800000
	.long 0xbf800000                                           // 0000000808A8: BF800000
	.long 0xbf800000                                           // 0000000808AC: BF800000
	.long 0xbf800000                                           // 0000000808B0: BF800000
	.long 0xbf800000                                           // 0000000808B4: BF800000
	.long 0xbf800000                                           // 0000000808B8: BF800000
	.long 0xbf800000                                           // 0000000808BC: BF800000
	.long 0xbf800000                                           // 0000000808C0: BF800000
	.long 0xbf800000                                           // 0000000808C4: BF800000
	.long 0xbf800000                                           // 0000000808C8: BF800000
	.long 0xbf800000                                           // 0000000808CC: BF800000
	.long 0xbf800000                                           // 0000000808D0: BF800000
	.long 0xbf800000                                           // 0000000808D4: BF800000
	.long 0xbf800000                                           // 0000000808D8: BF800000
	.long 0xbf800000                                           // 0000000808DC: BF800000
	.long 0xbf800000                                           // 0000000808E0: BF800000
	.long 0xbf800000                                           // 0000000808E4: BF800000
	.long 0xbf800000                                           // 0000000808E8: BF800000
	.long 0xbf800000                                           // 0000000808EC: BF800000
	.long 0xbf800000                                           // 0000000808F0: BF800000
	.long 0xbf800000                                           // 0000000808F4: BF800000
	.long 0xbf800000                                           // 0000000808F8: BF800000
	.long 0xbf800000                                           // 0000000808FC: BF800000

	.p2align	8
	.type	mul_char_get_group_id_get_work_dim,@function
	.size	mul_char_get_group_id_get_work_dim, mul_char_get_group_id_get_work_dim_symend-mul_char_get_group_id_get_work_dim
mul_char_get_group_id_get_work_dim:
	s_clause 0x3                                               // 000000080900: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000080904: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000008090C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 000000080914: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008091C: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000080924: BF89FC07
	s_lshl_b32 s9, s3, 4                                       // 000000080928: 84098403
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008092C: D6100002 02291500
	s_lshl_b32 s7, s2, 1                                       // 000000080934: 84078102
	s_lshl_b32 s11, s4, 1                                      // 000000080938: 840B8104
	s_mov_b32 s33, 0                                           // 00000008093C: BEA10080
	s_and_b32 s5, s5, 0xffff                                   // 000000080940: 8B05FF05 0000FFFF
	v_add3_u32 v2, s10, s9, v2                                 // 000000080948: D6550002 0408120A
	s_mul_i32 s3, s3, s5                                       // 000000080950: 96030503
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000080954: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 000000080958: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080964: D6100000 02292900
	s_mul_i32 s2, s2, s5                                       // 00000008096C: 96020502
	s_mul_i32 s4, s4, s5                                       // 000000080970: 96040504
	v_add3_u32 v1, s8, s7, v1                                  // 000000080974: D6550001 04040E08
	v_mov_b32_e32 v3, s2                                       // 00000008097C: 7E060202
	v_add3_u32 v0, s6, s11, v0                                 // 000000080980: D6550000 04001606
	v_mov_b32_e32 v5, s4                                       // 000000080988: 7E0A0204
	s_clause 0x2                                               // 00000008098C: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 000000080990: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 000000080998: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 0000000809A0: DC620000 00000500
	s_nop 0                                                    // 0000000809A8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000809AC: BFB60003
	s_endpgm                                                   // 0000000809B0: BFB00000
mul_char_get_group_id_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000809B4: BF800000
	.long 0xbf800000                                           // 0000000809B8: BF800000
	.long 0xbf800000                                           // 0000000809BC: BF800000
	.long 0xbf800000                                           // 0000000809C0: BF800000
	.long 0xbf800000                                           // 0000000809C4: BF800000
	.long 0xbf800000                                           // 0000000809C8: BF800000
	.long 0xbf800000                                           // 0000000809CC: BF800000
	.long 0xbf800000                                           // 0000000809D0: BF800000
	.long 0xbf800000                                           // 0000000809D4: BF800000
	.long 0xbf800000                                           // 0000000809D8: BF800000
	.long 0xbf800000                                           // 0000000809DC: BF800000
	.long 0xbf800000                                           // 0000000809E0: BF800000
	.long 0xbf800000                                           // 0000000809E4: BF800000
	.long 0xbf800000                                           // 0000000809E8: BF800000
	.long 0xbf800000                                           // 0000000809EC: BF800000
	.long 0xbf800000                                           // 0000000809F0: BF800000
	.long 0xbf800000                                           // 0000000809F4: BF800000
	.long 0xbf800000                                           // 0000000809F8: BF800000
	.long 0xbf800000                                           // 0000000809FC: BF800000

	.p2align	8
	.type	mul_char_get_local_size_get_work_dim,@function
	.size	mul_char_get_local_size_get_work_dim, mul_char_get_local_size_get_work_dim_symend-mul_char_get_local_size_get_work_dim
mul_char_get_local_size_get_work_dim:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000080A00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000080A08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000080A0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000080A10: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 000000080A14: 84108102
	s_lshl_b32 s17, s3, 1                                      // 000000080A18: 84118103
	s_lshl_b32 s18, s4, 2                                      // 000000080A1C: 84128204
	v_mov_b32_e32 v1, 0                                        // 000000080A20: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080A24: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 000000080A2C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000080A30: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000080A34: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000080A38: BF870009
	s_add_u32 s6, s5, s2                                       // 000000080A3C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000080A40: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000080A44: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 000000080A48: DC4A0000 02060001
	s_clause 0x2                                               // 000000080A50: BF850002
	s_load_b32 s8, s[0:1], 0x50                                // 000000080A54: F4000200 F8000050
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080A5C: F4080300 F8000038
	s_load_b64 s[2:3], s[0:1], 0x8                             // 000000080A64: F4040080 F8000008
	s_cselect_b32 s6, 14, 20                                   // 000000080A6C: 9806948E
	s_load_b32 s0, s[0:1], 0x48                                // 000000080A70: F4000000 F8000048
	s_add_u32 s6, s5, s6                                       // 000000080A78: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000080A7C: 8207800B
	s_cmp_lt_u32 s4, s10                                       // 000000080A80: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 000000080A84: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000080A88: BF870009
	s_add_u32 s4, s5, s4                                       // 000000080A8C: 80040405
	s_addc_u32 s5, s11, 0                                      // 000000080A90: 8205800B
	s_waitcnt lgkmcnt(0)                                       // 000000080A94: BF89FC07
	s_and_b32 s8, s8, 0xffff                                   // 000000080A98: 8B08FF08 0000FFFF
	v_add3_u32 v3, s12, s16, v3                                // 000000080AA0: D6550003 040C200C
	s_waitcnt vmcnt(0)                                         // 000000080AA8: BF8903F7
	v_mul_lo_u32 v2, s8, v2                                    // 000000080AAC: D72C0002 00020408
	global_store_b8 v3, v2, s[2:3]                             // 000000080AB4: DC620000 00020203
	global_load_u16 v2, v1, s[6:7]                             // 000000080ABC: DC4A0000 02060001
	v_bfe_u32 v3, v0, 10, 10                                   // 000000080AC4: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080ACC: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000080AD4: BF870112
	v_add3_u32 v3, s14, s17, v3                                // 000000080AD8: D6550003 040C220E
	v_add3_u32 v0, s0, s18, v0                                 // 000000080AE0: D6550000 04002400
	s_waitcnt vmcnt(0)                                         // 000000080AE8: BF8903F7
	v_mul_lo_u32 v2, s8, v2                                    // 000000080AEC: D72C0002 00020408
	global_store_b8 v3, v2, s[2:3]                             // 000000080AF4: DC620000 00020203
	global_load_u8 v1, v1, s[4:5]                              // 000000080AFC: DC420000 01040001
	s_waitcnt vmcnt(0)                                         // 000000080B04: BF8903F7
	v_mul_lo_u32 v1, s8, v1                                    // 000000080B08: D72C0001 00020208
	global_store_b8 v0, v1, s[2:3]                             // 000000080B10: DC620000 00020100
	s_nop 0                                                    // 000000080B18: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080B1C: BFB60003
	s_endpgm                                                   // 000000080B20: BFB00000
mul_char_get_local_size_get_work_dim_symend:
	.long 0xbf800000                                           // 000000080B24: BF800000
	.long 0xbf800000                                           // 000000080B28: BF800000
	.long 0xbf800000                                           // 000000080B2C: BF800000
	.long 0xbf800000                                           // 000000080B30: BF800000
	.long 0xbf800000                                           // 000000080B34: BF800000
	.long 0xbf800000                                           // 000000080B38: BF800000
	.long 0xbf800000                                           // 000000080B3C: BF800000
	.long 0xbf800000                                           // 000000080B40: BF800000
	.long 0xbf800000                                           // 000000080B44: BF800000
	.long 0xbf800000                                           // 000000080B48: BF800000
	.long 0xbf800000                                           // 000000080B4C: BF800000
	.long 0xbf800000                                           // 000000080B50: BF800000
	.long 0xbf800000                                           // 000000080B54: BF800000
	.long 0xbf800000                                           // 000000080B58: BF800000
	.long 0xbf800000                                           // 000000080B5C: BF800000
	.long 0xbf800000                                           // 000000080B60: BF800000
	.long 0xbf800000                                           // 000000080B64: BF800000
	.long 0xbf800000                                           // 000000080B68: BF800000
	.long 0xbf800000                                           // 000000080B6C: BF800000
	.long 0xbf800000                                           // 000000080B70: BF800000
	.long 0xbf800000                                           // 000000080B74: BF800000
	.long 0xbf800000                                           // 000000080B78: BF800000
	.long 0xbf800000                                           // 000000080B7C: BF800000
	.long 0xbf800000                                           // 000000080B80: BF800000
	.long 0xbf800000                                           // 000000080B84: BF800000
	.long 0xbf800000                                           // 000000080B88: BF800000
	.long 0xbf800000                                           // 000000080B8C: BF800000
	.long 0xbf800000                                           // 000000080B90: BF800000
	.long 0xbf800000                                           // 000000080B94: BF800000
	.long 0xbf800000                                           // 000000080B98: BF800000
	.long 0xbf800000                                           // 000000080B9C: BF800000
	.long 0xbf800000                                           // 000000080BA0: BF800000
	.long 0xbf800000                                           // 000000080BA4: BF800000
	.long 0xbf800000                                           // 000000080BA8: BF800000
	.long 0xbf800000                                           // 000000080BAC: BF800000
	.long 0xbf800000                                           // 000000080BB0: BF800000
	.long 0xbf800000                                           // 000000080BB4: BF800000
	.long 0xbf800000                                           // 000000080BB8: BF800000
	.long 0xbf800000                                           // 000000080BBC: BF800000
	.long 0xbf800000                                           // 000000080BC0: BF800000
	.long 0xbf800000                                           // 000000080BC4: BF800000
	.long 0xbf800000                                           // 000000080BC8: BF800000
	.long 0xbf800000                                           // 000000080BCC: BF800000
	.long 0xbf800000                                           // 000000080BD0: BF800000
	.long 0xbf800000                                           // 000000080BD4: BF800000
	.long 0xbf800000                                           // 000000080BD8: BF800000
	.long 0xbf800000                                           // 000000080BDC: BF800000
	.long 0xbf800000                                           // 000000080BE0: BF800000
	.long 0xbf800000                                           // 000000080BE4: BF800000
	.long 0xbf800000                                           // 000000080BE8: BF800000
	.long 0xbf800000                                           // 000000080BEC: BF800000
	.long 0xbf800000                                           // 000000080BF0: BF800000
	.long 0xbf800000                                           // 000000080BF4: BF800000
	.long 0xbf800000                                           // 000000080BF8: BF800000
	.long 0xbf800000                                           // 000000080BFC: BF800000

	.p2align	8
	.type	mul_char_get_global_id_get_work_dim,@function
	.size	mul_char_get_global_id_get_work_dim, mul_char_get_global_id_get_work_dim_symend-mul_char_get_global_id_get_work_dim
mul_char_get_global_id_get_work_dim:
	s_clause 0x3                                               // 000000080C00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080C04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000080C0C: F4040180 F8000048
	s_load_b32 s5, s[0:1], 0x50                                // 000000080C14: F4000140 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000080C1C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000080C24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080C2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080C34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000080C3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000080C40: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 000000080C44: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 000000080C4C: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000080C54: BF870123
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000080C58: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000080C60: BF89FC07
	v_add_co_u32 v1, null, s10, v1                             // 000000080C64: D7007C01 0002020A
	v_add_nc_u32_e32 v2, s8, v4                                // 000000080C6C: 4A040808
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000080C70: BF870193
	v_add_co_u32 v3, null, s6, v0                              // 000000080C74: D7007C03 00020006
	v_add_co_u32 v0, s2, s0, v1                                // 000000080C7C: D7000200 00020200
	s_delay_alu instid0(VALU_DEP_3)                            // 000000080C84: BF870003
	v_mul_lo_u16 v5.l, s5, v2.l                                // 000000080C88: D7050005 00020405
	v_mul_lo_u16 v6.l, s5, v1.l                                // 000000080C90: D7050006 00020205
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 000000080C98: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v3                                // 000000080CA0: D7000202 00020600
	v_mul_lo_u16 v7.l, s5, v3.l                                // 000000080CA8: D7050007 00020605
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 000000080CB0: D5207C03 00090001
	s_clause 0x2                                               // 000000080CB8: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 000000080CBC: DC620000 00000504
	global_store_b8 v[0:1], v6, off                            // 000000080CC4: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 000000080CCC: DC620000 007C0702
	s_nop 0                                                    // 000000080CD4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080CD8: BFB60003
	s_endpgm                                                   // 000000080CDC: BFB00000
mul_char_get_global_id_get_work_dim_symend:
	.long 0xbf800000                                           // 000000080CE0: BF800000
	.long 0xbf800000                                           // 000000080CE4: BF800000
	.long 0xbf800000                                           // 000000080CE8: BF800000
	.long 0xbf800000                                           // 000000080CEC: BF800000
	.long 0xbf800000                                           // 000000080CF0: BF800000
	.long 0xbf800000                                           // 000000080CF4: BF800000
	.long 0xbf800000                                           // 000000080CF8: BF800000
	.long 0xbf800000                                           // 000000080CFC: BF800000

	.p2align	8
	.type	mul_char_get_global_size_get_work_dim,@function
	.size	mul_char_get_global_size_get_work_dim, mul_char_get_global_size_get_work_dim_symend-mul_char_get_global_size_get_work_dim
mul_char_get_global_size_get_work_dim:
	v_mov_b32_e32 v1, 0                                        // 000000080D00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080D04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000080D0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080D14: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 000000080D1C: 84028402
	s_clause 0x1                                               // 000000080D20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080D24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000080D2C: DC4A0026 01000001
	s_clause 0x4                                               // 000000080D34: BF850004
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000080D38: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x50                                // 000000080D40: F4000140 F8000050
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080D48: F4080300 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 000000080D50: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000080D58: F4040000 F8000000
	s_lshl_b32 s3, s3, 1                                       // 000000080D60: 84038103
	s_lshl_b32 s4, s4, 1                                       // 000000080D64: 84048104
	s_mov_b32 s33, 0                                           // 000000080D68: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000080D6C: BF89FC07
	s_lshl_b32 s7, s8, 4                                       // 000000080D70: 84078408
	s_lshl_b32 s8, s9, 1                                       // 000000080D74: 84088109
	s_lshl_b32 s9, s10, 1                                      // 000000080D78: 8409810A
	s_and_b32 s5, s5, 0xffff                                   // 000000080D7C: 8B05FF05 0000FFFF
	v_add3_u32 v3, s12, s2, v3                                 // 000000080D84: D6550003 040C040C
	v_add3_u32 v4, s14, s3, v4                                 // 000000080D8C: D6550004 0410060E
	v_add3_u32 v0, s6, s4, v0                                  // 000000080D94: D6550000 04000806
	s_waitcnt vmcnt(1)                                         // 000000080D9C: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000080DA0: 320A0490
	v_add_nc_u32_e32 v2, s7, v2                                // 000000080DA4: 4A040407
	s_waitcnt vmcnt(0)                                         // 000000080DA8: BF8903F7
	v_add_nc_u32_e32 v1, s9, v1                                // 000000080DAC: 4A020209
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000080DB0: BF870193
	v_add_nc_u32_e32 v5, s8, v5                                // 000000080DB4: 4A0A0A08
	v_mul_lo_u32 v2, v2, s5                                    // 000000080DB8: D72C0002 00000B02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000080DC0: BF870193
	v_mul_lo_u32 v1, v1, s5                                    // 000000080DC4: D72C0001 00000B01
	v_mul_lo_u32 v5, v5, s5                                    // 000000080DCC: D72C0005 00000B05
	s_clause 0x2                                               // 000000080DD4: BF850002
	global_store_b8 v3, v2, s[0:1]                             // 000000080DD8: DC620000 00000203
	global_store_b8 v4, v5, s[0:1]                             // 000000080DE0: DC620000 00000504
	global_store_b8 v0, v1, s[0:1]                             // 000000080DE8: DC620000 00000100
	s_nop 0                                                    // 000000080DF0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080DF4: BFB60003
	s_endpgm                                                   // 000000080DF8: BFB00000
mul_char_get_global_size_get_work_dim_symend:
	.long 0xbf800000                                           // 000000080DFC: BF800000

	.p2align	8
	.type	mul_char_get_num_groups_get_work_dim,@function
	.size	mul_char_get_num_groups_get_work_dim, mul_char_get_num_groups_get_work_dim_symend-mul_char_get_num_groups_get_work_dim
mul_char_get_num_groups_get_work_dim:
	v_mov_b32_e32 v1, 0                                        // 000000080E00: 7E020280
	v_bfe_u32 v4, v0, 10, 10                                   // 000000080E04: D6100004 02291500
	s_mov_b32 s33, 0                                           // 000000080E0C: BEA10080
	s_clause 0x1                                               // 000000080E10: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080E14: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000080E1C: DC4A0026 01000001
	s_clause 0x1                                               // 000000080E24: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000080E28: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000080E30: F4000140 F8000048
	s_waitcnt lgkmcnt(0)                                       // 000000080E38: BF89FC07
	s_clause 0x2                                               // 000000080E3C: BF850002
	s_load_b32 s11, s[0:1], 0x50                               // 000000080E40: F40002C0 F8000050
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080E48: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000080E50: F4040180 F8000008
	s_lshl_b32 s1, s2, 1                                       // 000000080E58: 84018102
	s_lshl_b32 s2, s3, 1                                       // 000000080E5C: 84028103
	s_lshl_b32 s3, s4, 2                                       // 000000080E60: 84038204
	s_waitcnt vmcnt(1)                                         // 000000080E64: BF8907F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 000000080E68: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080E6C: 7C7A0480
	v_and_b32_e32 v2, 0x3ff, v0                                // 000000080E70: 360400FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080E78: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 000000080E80: BF870004
	v_cmp_ne_u16_e64 s0, 0, v3.l                               // 000000080E84: D43D0000 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080E8C: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000080E90: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 000000080E94: 7C7A0280
	s_addc_u32 s4, s8, 0                                       // 000000080E98: 82048008
	v_add3_u32 v0, s5, s3, v0                                  // 000000080E9C: D6550000 04000605
	s_cmp_lg_u32 s0, 0                                         // 000000080EA4: BF078000
	s_waitcnt lgkmcnt(0)                                       // 000000080EA8: BF89FC07
	v_add3_u32 v1, s12, s1, v2                                 // 000000080EAC: D6550001 0408020C
	s_addc_u32 s0, s9, 0                                       // 000000080EB4: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080EB8: BF07806A
	v_add3_u32 v2, s14, s2, v4                                 // 000000080EBC: D6550002 0410040E
	s_addc_u32 s1, s10, 0                                      // 000000080EC4: 8201800A
	s_and_b32 s3, s11, 0xffff                                  // 000000080EC8: 8B03FF0B 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000080ED0: BF870009
	s_mul_i32 s2, s4, s3                                       // 000000080ED4: 96020304
	s_mul_i32 s0, s0, s3                                       // 000000080ED8: 96000300
	s_mul_i32 s1, s1, s3                                       // 000000080EDC: 96010301
	v_dual_mov_b32 v3, s2 :: v_dual_mov_b32 v4, s0             // 000000080EE0: CA100002 03040000
	v_mov_b32_e32 v5, s1                                       // 000000080EE8: 7E0A0201
	s_clause 0x2                                               // 000000080EEC: BF850002
	global_store_b8 v1, v3, s[6:7]                             // 000000080EF0: DC620000 00060301
	global_store_b8 v2, v4, s[6:7]                             // 000000080EF8: DC620000 00060402
	global_store_b8 v0, v5, s[6:7]                             // 000000080F00: DC620000 00060500
	s_nop 0                                                    // 000000080F08: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080F0C: BFB60003
	s_endpgm                                                   // 000000080F10: BFB00000
mul_char_get_num_groups_get_work_dim_symend:
	.long 0xbf800000                                           // 000000080F14: BF800000
	.long 0xbf800000                                           // 000000080F18: BF800000
	.long 0xbf800000                                           // 000000080F1C: BF800000
	.long 0xbf800000                                           // 000000080F20: BF800000
	.long 0xbf800000                                           // 000000080F24: BF800000
	.long 0xbf800000                                           // 000000080F28: BF800000
	.long 0xbf800000                                           // 000000080F2C: BF800000
	.long 0xbf800000                                           // 000000080F30: BF800000
	.long 0xbf800000                                           // 000000080F34: BF800000
	.long 0xbf800000                                           // 000000080F38: BF800000
	.long 0xbf800000                                           // 000000080F3C: BF800000
	.long 0xbf800000                                           // 000000080F40: BF800000
	.long 0xbf800000                                           // 000000080F44: BF800000
	.long 0xbf800000                                           // 000000080F48: BF800000
	.long 0xbf800000                                           // 000000080F4C: BF800000
	.long 0xbf800000                                           // 000000080F50: BF800000
	.long 0xbf800000                                           // 000000080F54: BF800000
	.long 0xbf800000                                           // 000000080F58: BF800000
	.long 0xbf800000                                           // 000000080F5C: BF800000
	.long 0xbf800000                                           // 000000080F60: BF800000
	.long 0xbf800000                                           // 000000080F64: BF800000
	.long 0xbf800000                                           // 000000080F68: BF800000
	.long 0xbf800000                                           // 000000080F6C: BF800000
	.long 0xbf800000                                           // 000000080F70: BF800000
	.long 0xbf800000                                           // 000000080F74: BF800000
	.long 0xbf800000                                           // 000000080F78: BF800000
	.long 0xbf800000                                           // 000000080F7C: BF800000
	.long 0xbf800000                                           // 000000080F80: BF800000
	.long 0xbf800000                                           // 000000080F84: BF800000
	.long 0xbf800000                                           // 000000080F88: BF800000
	.long 0xbf800000                                           // 000000080F8C: BF800000
	.long 0xbf800000                                           // 000000080F90: BF800000
	.long 0xbf800000                                           // 000000080F94: BF800000
	.long 0xbf800000                                           // 000000080F98: BF800000
	.long 0xbf800000                                           // 000000080F9C: BF800000
	.long 0xbf800000                                           // 000000080FA0: BF800000
	.long 0xbf800000                                           // 000000080FA4: BF800000
	.long 0xbf800000                                           // 000000080FA8: BF800000
	.long 0xbf800000                                           // 000000080FAC: BF800000
	.long 0xbf800000                                           // 000000080FB0: BF800000
	.long 0xbf800000                                           // 000000080FB4: BF800000
	.long 0xbf800000                                           // 000000080FB8: BF800000
	.long 0xbf800000                                           // 000000080FBC: BF800000
	.long 0xbf800000                                           // 000000080FC0: BF800000
	.long 0xbf800000                                           // 000000080FC4: BF800000
	.long 0xbf800000                                           // 000000080FC8: BF800000
	.long 0xbf800000                                           // 000000080FCC: BF800000
	.long 0xbf800000                                           // 000000080FD0: BF800000
	.long 0xbf800000                                           // 000000080FD4: BF800000
	.long 0xbf800000                                           // 000000080FD8: BF800000
	.long 0xbf800000                                           // 000000080FDC: BF800000
	.long 0xbf800000                                           // 000000080FE0: BF800000
	.long 0xbf800000                                           // 000000080FE4: BF800000
	.long 0xbf800000                                           // 000000080FE8: BF800000
	.long 0xbf800000                                           // 000000080FEC: BF800000
	.long 0xbf800000                                           // 000000080FF0: BF800000
	.long 0xbf800000                                           // 000000080FF4: BF800000
	.long 0xbf800000                                           // 000000080FF8: BF800000
	.long 0xbf800000                                           // 000000080FFC: BF800000

	.p2align	8
	.type	mul_char_get_work_dim_get_work_dim,@function
	.size	mul_char_get_work_dim_get_work_dim, mul_char_get_work_dim_get_work_dim_symend-mul_char_get_work_dim_get_work_dim
mul_char_get_work_dim_get_work_dim:
	s_clause 0x3                                               // 000000081000: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000081004: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000008100C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 000000081014: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008101C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000081024: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008102C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081034: D6100000 02292900
	s_lshl_b32 s2, s2, 1                                       // 00000008103C: 84028102
	s_lshl_b32 s3, s3, 1                                       // 000000081040: 84038103
	s_lshl_b32 s4, s4, 2                                       // 000000081044: 84048204
	s_mov_b32 s33, 0                                           // 000000081048: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000008104C: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 000000081050: 8B05FF05 0000FFFF
	v_add3_u32 v1, s8, s2, v1                                  // 000000081058: D6550001 04040408
	s_mul_i32 s5, s5, s5                                       // 000000081060: 96050505
	v_add3_u32 v2, s10, s3, v2                                 // 000000081064: D6550002 0408060A
	v_mov_b32_e32 v3, s5                                       // 00000008106C: 7E060205
	v_add3_u32 v0, s6, s4, v0                                  // 000000081070: D6550000 04000806
	s_clause 0x2                                               // 000000081078: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000008107C: DC620000 00000301
	global_store_b8 v2, v3, s[0:1]                             // 000000081084: DC620000 00000302
	global_store_b8 v0, v3, s[0:1]                             // 00000008108C: DC620000 00000300
	s_nop 0                                                    // 000000081094: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081098: BFB60003
	s_endpgm                                                   // 00000008109C: BFB00000
mul_char_get_work_dim_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000810A0: BF800000
	.long 0xbf800000                                           // 0000000810A4: BF800000
	.long 0xbf800000                                           // 0000000810A8: BF800000
	.long 0xbf800000                                           // 0000000810AC: BF800000
	.long 0xbf800000                                           // 0000000810B0: BF800000
	.long 0xbf800000                                           // 0000000810B4: BF800000
	.long 0xbf800000                                           // 0000000810B8: BF800000
	.long 0xbf800000                                           // 0000000810BC: BF800000
	.long 0xbf800000                                           // 0000000810C0: BF800000
	.long 0xbf800000                                           // 0000000810C4: BF800000
	.long 0xbf800000                                           // 0000000810C8: BF800000
	.long 0xbf800000                                           // 0000000810CC: BF800000
	.long 0xbf800000                                           // 0000000810D0: BF800000
	.long 0xbf800000                                           // 0000000810D4: BF800000
	.long 0xbf800000                                           // 0000000810D8: BF800000
	.long 0xbf800000                                           // 0000000810DC: BF800000
	.long 0xbf800000                                           // 0000000810E0: BF800000
	.long 0xbf800000                                           // 0000000810E4: BF800000
	.long 0xbf800000                                           // 0000000810E8: BF800000
	.long 0xbf800000                                           // 0000000810EC: BF800000
	.long 0xbf800000                                           // 0000000810F0: BF800000
	.long 0xbf800000                                           // 0000000810F4: BF800000
	.long 0xbf800000                                           // 0000000810F8: BF800000
	.long 0xbf800000                                           // 0000000810FC: BF800000

	.p2align	8
	.type	mul_char_x_64,@function
	.size	mul_char_x_64, mul_char_x_64_symend-mul_char_x_64
mul_char_x_64:
	s_clause 0x2                                               // 000000081100: BF850002
	s_load_b32 s3, s[0:1], null                                // 000000081104: F40000C0 F8000000
	s_load_b32 s4, s[0:1], 0x38                                // 00000008110C: F4000100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000081114: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 00000008111C: 84028602
	s_mov_b32 s33, 0                                           // 000000081120: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000081124: BF89FC07
	s_mul_i32 s3, s3, s3                                       // 000000081128: 96030303
	v_add3_u32 v0, s4, s2, v0                                  // 00000008112C: D6550000 04000404
	v_mov_b32_e32 v1, s3                                       // 000000081134: 7E020203
	global_store_b8 v0, v1, s[0:1]                             // 000000081138: DC620000 00000100
	s_nop 0                                                    // 000000081140: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081144: BFB60003
	s_endpgm                                                   // 000000081148: BFB00000
mul_char_x_64_symend:
	.long 0xbf800000                                           // 00000008114C: BF800000
	.long 0xbf800000                                           // 000000081150: BF800000
	.long 0xbf800000                                           // 000000081154: BF800000
	.long 0xbf800000                                           // 000000081158: BF800000
	.long 0xbf800000                                           // 00000008115C: BF800000
	.long 0xbf800000                                           // 000000081160: BF800000
	.long 0xbf800000                                           // 000000081164: BF800000
	.long 0xbf800000                                           // 000000081168: BF800000
	.long 0xbf800000                                           // 00000008116C: BF800000
	.long 0xbf800000                                           // 000000081170: BF800000
	.long 0xbf800000                                           // 000000081174: BF800000
	.long 0xbf800000                                           // 000000081178: BF800000
	.long 0xbf800000                                           // 00000008117C: BF800000
	.long 0xbf800000                                           // 000000081180: BF800000
	.long 0xbf800000                                           // 000000081184: BF800000
	.long 0xbf800000                                           // 000000081188: BF800000
	.long 0xbf800000                                           // 00000008118C: BF800000
	.long 0xbf800000                                           // 000000081190: BF800000
	.long 0xbf800000                                           // 000000081194: BF800000
	.long 0xbf800000                                           // 000000081198: BF800000
	.long 0xbf800000                                           // 00000008119C: BF800000
	.long 0xbf800000                                           // 0000000811A0: BF800000
	.long 0xbf800000                                           // 0000000811A4: BF800000
	.long 0xbf800000                                           // 0000000811A8: BF800000
	.long 0xbf800000                                           // 0000000811AC: BF800000
	.long 0xbf800000                                           // 0000000811B0: BF800000
	.long 0xbf800000                                           // 0000000811B4: BF800000
	.long 0xbf800000                                           // 0000000811B8: BF800000
	.long 0xbf800000                                           // 0000000811BC: BF800000
	.long 0xbf800000                                           // 0000000811C0: BF800000
	.long 0xbf800000                                           // 0000000811C4: BF800000
	.long 0xbf800000                                           // 0000000811C8: BF800000
	.long 0xbf800000                                           // 0000000811CC: BF800000
	.long 0xbf800000                                           // 0000000811D0: BF800000
	.long 0xbf800000                                           // 0000000811D4: BF800000
	.long 0xbf800000                                           // 0000000811D8: BF800000
	.long 0xbf800000                                           // 0000000811DC: BF800000
	.long 0xbf800000                                           // 0000000811E0: BF800000
	.long 0xbf800000                                           // 0000000811E4: BF800000
	.long 0xbf800000                                           // 0000000811E8: BF800000
	.long 0xbf800000                                           // 0000000811EC: BF800000
	.long 0xbf800000                                           // 0000000811F0: BF800000
	.long 0xbf800000                                           // 0000000811F4: BF800000
	.long 0xbf800000                                           // 0000000811F8: BF800000
	.long 0xbf800000                                           // 0000000811FC: BF800000

	.p2align	8
	.type	mul_char_get_global_offset_64,@function
	.size	mul_char_get_global_offset_64, mul_char_get_global_offset_64_symend-mul_char_get_global_offset_64
mul_char_get_global_offset_64:
	s_clause 0x1                                               // 000000081200: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000081204: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008120C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 000000081214: 84028602
	s_mov_b32 s33, 0                                           // 000000081218: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000008121C: BF89FC07
	s_mul_i32 s4, s3, s3                                       // 000000081220: 96040303
	v_add3_u32 v0, s3, s2, v0                                  // 000000081224: D6550000 04000403
	v_mov_b32_e32 v1, s4                                       // 00000008122C: 7E020204
	global_store_b8 v0, v1, s[0:1]                             // 000000081230: DC620000 00000100
	s_nop 0                                                    // 000000081238: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008123C: BFB60003
	s_endpgm                                                   // 000000081240: BFB00000
mul_char_get_global_offset_64_symend:
	.long 0xbf800000                                           // 000000081244: BF800000
	.long 0xbf800000                                           // 000000081248: BF800000
	.long 0xbf800000                                           // 00000008124C: BF800000
	.long 0xbf800000                                           // 000000081250: BF800000
	.long 0xbf800000                                           // 000000081254: BF800000
	.long 0xbf800000                                           // 000000081258: BF800000
	.long 0xbf800000                                           // 00000008125C: BF800000
	.long 0xbf800000                                           // 000000081260: BF800000
	.long 0xbf800000                                           // 000000081264: BF800000
	.long 0xbf800000                                           // 000000081268: BF800000
	.long 0xbf800000                                           // 00000008126C: BF800000
	.long 0xbf800000                                           // 000000081270: BF800000
	.long 0xbf800000                                           // 000000081274: BF800000
	.long 0xbf800000                                           // 000000081278: BF800000
	.long 0xbf800000                                           // 00000008127C: BF800000
	.long 0xbf800000                                           // 000000081280: BF800000
	.long 0xbf800000                                           // 000000081284: BF800000
	.long 0xbf800000                                           // 000000081288: BF800000
	.long 0xbf800000                                           // 00000008128C: BF800000
	.long 0xbf800000                                           // 000000081290: BF800000
	.long 0xbf800000                                           // 000000081294: BF800000
	.long 0xbf800000                                           // 000000081298: BF800000
	.long 0xbf800000                                           // 00000008129C: BF800000
	.long 0xbf800000                                           // 0000000812A0: BF800000
	.long 0xbf800000                                           // 0000000812A4: BF800000
	.long 0xbf800000                                           // 0000000812A8: BF800000
	.long 0xbf800000                                           // 0000000812AC: BF800000
	.long 0xbf800000                                           // 0000000812B0: BF800000
	.long 0xbf800000                                           // 0000000812B4: BF800000
	.long 0xbf800000                                           // 0000000812B8: BF800000
	.long 0xbf800000                                           // 0000000812BC: BF800000
	.long 0xbf800000                                           // 0000000812C0: BF800000
	.long 0xbf800000                                           // 0000000812C4: BF800000
	.long 0xbf800000                                           // 0000000812C8: BF800000
	.long 0xbf800000                                           // 0000000812CC: BF800000
	.long 0xbf800000                                           // 0000000812D0: BF800000
	.long 0xbf800000                                           // 0000000812D4: BF800000
	.long 0xbf800000                                           // 0000000812D8: BF800000
	.long 0xbf800000                                           // 0000000812DC: BF800000
	.long 0xbf800000                                           // 0000000812E0: BF800000
	.long 0xbf800000                                           // 0000000812E4: BF800000
	.long 0xbf800000                                           // 0000000812E8: BF800000
	.long 0xbf800000                                           // 0000000812EC: BF800000
	.long 0xbf800000                                           // 0000000812F0: BF800000
	.long 0xbf800000                                           // 0000000812F4: BF800000
	.long 0xbf800000                                           // 0000000812F8: BF800000
	.long 0xbf800000                                           // 0000000812FC: BF800000

	.p2align	8
	.type	mul_char_get_local_id_64,@function
	.size	mul_char_get_local_id_64, mul_char_get_local_id_64_symend-mul_char_get_local_id_64
mul_char_get_local_id_64:
	s_clause 0x1                                               // 000000081300: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000081304: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008130C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 000000081314: 84028602
	v_mul_u32_u24_e32 v1, v0, v0                               // 000000081318: 16020100
	s_mov_b32 s33, 0                                           // 00000008131C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000081320: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 000000081324: D6550000 04000403
	global_store_b8 v0, v1, s[0:1]                             // 00000008132C: DC620000 00000100
	s_nop 0                                                    // 000000081334: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081338: BFB60003
	s_endpgm                                                   // 00000008133C: BFB00000
mul_char_get_local_id_64_symend:
	.long 0xbf800000                                           // 000000081340: BF800000
	.long 0xbf800000                                           // 000000081344: BF800000
	.long 0xbf800000                                           // 000000081348: BF800000
	.long 0xbf800000                                           // 00000008134C: BF800000
	.long 0xbf800000                                           // 000000081350: BF800000
	.long 0xbf800000                                           // 000000081354: BF800000
	.long 0xbf800000                                           // 000000081358: BF800000
	.long 0xbf800000                                           // 00000008135C: BF800000
	.long 0xbf800000                                           // 000000081360: BF800000
	.long 0xbf800000                                           // 000000081364: BF800000
	.long 0xbf800000                                           // 000000081368: BF800000
	.long 0xbf800000                                           // 00000008136C: BF800000
	.long 0xbf800000                                           // 000000081370: BF800000
	.long 0xbf800000                                           // 000000081374: BF800000
	.long 0xbf800000                                           // 000000081378: BF800000
	.long 0xbf800000                                           // 00000008137C: BF800000
	.long 0xbf800000                                           // 000000081380: BF800000
	.long 0xbf800000                                           // 000000081384: BF800000
	.long 0xbf800000                                           // 000000081388: BF800000
	.long 0xbf800000                                           // 00000008138C: BF800000
	.long 0xbf800000                                           // 000000081390: BF800000
	.long 0xbf800000                                           // 000000081394: BF800000
	.long 0xbf800000                                           // 000000081398: BF800000
	.long 0xbf800000                                           // 00000008139C: BF800000
	.long 0xbf800000                                           // 0000000813A0: BF800000
	.long 0xbf800000                                           // 0000000813A4: BF800000
	.long 0xbf800000                                           // 0000000813A8: BF800000
	.long 0xbf800000                                           // 0000000813AC: BF800000
	.long 0xbf800000                                           // 0000000813B0: BF800000
	.long 0xbf800000                                           // 0000000813B4: BF800000
	.long 0xbf800000                                           // 0000000813B8: BF800000
	.long 0xbf800000                                           // 0000000813BC: BF800000
	.long 0xbf800000                                           // 0000000813C0: BF800000
	.long 0xbf800000                                           // 0000000813C4: BF800000
	.long 0xbf800000                                           // 0000000813C8: BF800000
	.long 0xbf800000                                           // 0000000813CC: BF800000
	.long 0xbf800000                                           // 0000000813D0: BF800000
	.long 0xbf800000                                           // 0000000813D4: BF800000
	.long 0xbf800000                                           // 0000000813D8: BF800000
	.long 0xbf800000                                           // 0000000813DC: BF800000
	.long 0xbf800000                                           // 0000000813E0: BF800000
	.long 0xbf800000                                           // 0000000813E4: BF800000
	.long 0xbf800000                                           // 0000000813E8: BF800000
	.long 0xbf800000                                           // 0000000813EC: BF800000
	.long 0xbf800000                                           // 0000000813F0: BF800000
	.long 0xbf800000                                           // 0000000813F4: BF800000
	.long 0xbf800000                                           // 0000000813F8: BF800000
	.long 0xbf800000                                           // 0000000813FC: BF800000

	.p2align	8
	.type	mul_char_get_group_id_64,@function
	.size	mul_char_get_group_id_64, mul_char_get_group_id_64_symend-mul_char_get_group_id_64
mul_char_get_group_id_64:
	s_clause 0x1                                               // 000000081400: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000081404: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008140C: F4040000 F8000008
	s_lshl_b32 s4, s2, 6                                       // 000000081414: 84048602
	s_mul_i32 s2, s2, s2                                       // 000000081418: 96020202
	s_mov_b32 s33, 0                                           // 00000008141C: BEA10080
	v_mov_b32_e32 v1, s2                                       // 000000081420: 7E020202
	s_waitcnt lgkmcnt(0)                                       // 000000081424: BF89FC07
	v_add3_u32 v0, s3, s4, v0                                  // 000000081428: D6550000 04000803
	global_store_b8 v0, v1, s[0:1]                             // 000000081430: DC620000 00000100
	s_nop 0                                                    // 000000081438: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008143C: BFB60003
	s_endpgm                                                   // 000000081440: BFB00000
mul_char_get_group_id_64_symend:
	.long 0xbf800000                                           // 000000081444: BF800000
	.long 0xbf800000                                           // 000000081448: BF800000
	.long 0xbf800000                                           // 00000008144C: BF800000
	.long 0xbf800000                                           // 000000081450: BF800000
	.long 0xbf800000                                           // 000000081454: BF800000
	.long 0xbf800000                                           // 000000081458: BF800000
	.long 0xbf800000                                           // 00000008145C: BF800000
	.long 0xbf800000                                           // 000000081460: BF800000
	.long 0xbf800000                                           // 000000081464: BF800000
	.long 0xbf800000                                           // 000000081468: BF800000
	.long 0xbf800000                                           // 00000008146C: BF800000
	.long 0xbf800000                                           // 000000081470: BF800000
	.long 0xbf800000                                           // 000000081474: BF800000
	.long 0xbf800000                                           // 000000081478: BF800000
	.long 0xbf800000                                           // 00000008147C: BF800000
	.long 0xbf800000                                           // 000000081480: BF800000
	.long 0xbf800000                                           // 000000081484: BF800000
	.long 0xbf800000                                           // 000000081488: BF800000
	.long 0xbf800000                                           // 00000008148C: BF800000
	.long 0xbf800000                                           // 000000081490: BF800000
	.long 0xbf800000                                           // 000000081494: BF800000
	.long 0xbf800000                                           // 000000081498: BF800000
	.long 0xbf800000                                           // 00000008149C: BF800000
	.long 0xbf800000                                           // 0000000814A0: BF800000
	.long 0xbf800000                                           // 0000000814A4: BF800000
	.long 0xbf800000                                           // 0000000814A8: BF800000
	.long 0xbf800000                                           // 0000000814AC: BF800000
	.long 0xbf800000                                           // 0000000814B0: BF800000
	.long 0xbf800000                                           // 0000000814B4: BF800000
	.long 0xbf800000                                           // 0000000814B8: BF800000
	.long 0xbf800000                                           // 0000000814BC: BF800000
	.long 0xbf800000                                           // 0000000814C0: BF800000
	.long 0xbf800000                                           // 0000000814C4: BF800000
	.long 0xbf800000                                           // 0000000814C8: BF800000
	.long 0xbf800000                                           // 0000000814CC: BF800000
	.long 0xbf800000                                           // 0000000814D0: BF800000
	.long 0xbf800000                                           // 0000000814D4: BF800000
	.long 0xbf800000                                           // 0000000814D8: BF800000
	.long 0xbf800000                                           // 0000000814DC: BF800000
	.long 0xbf800000                                           // 0000000814E0: BF800000
	.long 0xbf800000                                           // 0000000814E4: BF800000
	.long 0xbf800000                                           // 0000000814E8: BF800000
	.long 0xbf800000                                           // 0000000814EC: BF800000
	.long 0xbf800000                                           // 0000000814F0: BF800000
	.long 0xbf800000                                           // 0000000814F4: BF800000
	.long 0xbf800000                                           // 0000000814F8: BF800000
	.long 0xbf800000                                           // 0000000814FC: BF800000

	.p2align	8
	.type	mul_char_get_local_size_64,@function
	.size	mul_char_get_local_size_64, mul_char_get_local_size_64_symend-mul_char_get_local_size_64
mul_char_get_local_size_64:
	s_clause 0x1                                               // 000000081500: BF850001
	s_load_b32 s3, s[0:1], 0x10                                // 000000081504: F40000C0 F8000010
	s_load_b32 s5, s[0:1], 0x38                                // 00000008150C: F4000140 F8000038
	s_add_u32 s4, s0, 16                                       // 000000081514: 80049000
	s_addc_u32 s6, s1, 0                                       // 000000081518: 82068001
	s_lshl_b32 s7, s2, 6                                       // 00000008151C: 84078602
	v_mov_b32_e32 v1, 0                                        // 000000081520: 7E020280
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000081524: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000008152C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000081530: BF89FC07
	s_cmp_lt_u32 s2, s3                                        // 000000081534: BF0A0302
	v_add3_u32 v0, s5, s7, v0                                  // 000000081538: D6550000 04000E05
	s_cselect_b32 s2, 12, 18                                   // 000000081540: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000081544: BF870009
	s_add_u32 s2, s4, s2                                       // 000000081548: 80020204
	s_addc_u32 s3, s6, 0                                       // 00000008154C: 82038006
	global_load_u16 v1, v1, s[2:3]                             // 000000081550: DC4A0000 01020001
	s_waitcnt vmcnt(0)                                         // 000000081558: BF8903F7
	v_mul_lo_u32 v1, v1, v1                                    // 00000008155C: D72C0001 00020301
	global_store_b8 v0, v1, s[0:1]                             // 000000081564: DC620000 00000100
	s_nop 0                                                    // 00000008156C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081570: BFB60003
	s_endpgm                                                   // 000000081574: BFB00000
mul_char_get_local_size_64_symend:
	.long 0xbf800000                                           // 000000081578: BF800000
	.long 0xbf800000                                           // 00000008157C: BF800000
	.long 0xbf800000                                           // 000000081580: BF800000
	.long 0xbf800000                                           // 000000081584: BF800000
	.long 0xbf800000                                           // 000000081588: BF800000
	.long 0xbf800000                                           // 00000008158C: BF800000
	.long 0xbf800000                                           // 000000081590: BF800000
	.long 0xbf800000                                           // 000000081594: BF800000
	.long 0xbf800000                                           // 000000081598: BF800000
	.long 0xbf800000                                           // 00000008159C: BF800000
	.long 0xbf800000                                           // 0000000815A0: BF800000
	.long 0xbf800000                                           // 0000000815A4: BF800000
	.long 0xbf800000                                           // 0000000815A8: BF800000
	.long 0xbf800000                                           // 0000000815AC: BF800000
	.long 0xbf800000                                           // 0000000815B0: BF800000
	.long 0xbf800000                                           // 0000000815B4: BF800000
	.long 0xbf800000                                           // 0000000815B8: BF800000
	.long 0xbf800000                                           // 0000000815BC: BF800000
	.long 0xbf800000                                           // 0000000815C0: BF800000
	.long 0xbf800000                                           // 0000000815C4: BF800000
	.long 0xbf800000                                           // 0000000815C8: BF800000
	.long 0xbf800000                                           // 0000000815CC: BF800000
	.long 0xbf800000                                           // 0000000815D0: BF800000
	.long 0xbf800000                                           // 0000000815D4: BF800000
	.long 0xbf800000                                           // 0000000815D8: BF800000
	.long 0xbf800000                                           // 0000000815DC: BF800000
	.long 0xbf800000                                           // 0000000815E0: BF800000
	.long 0xbf800000                                           // 0000000815E4: BF800000
	.long 0xbf800000                                           // 0000000815E8: BF800000
	.long 0xbf800000                                           // 0000000815EC: BF800000
	.long 0xbf800000                                           // 0000000815F0: BF800000
	.long 0xbf800000                                           // 0000000815F4: BF800000
	.long 0xbf800000                                           // 0000000815F8: BF800000
	.long 0xbf800000                                           // 0000000815FC: BF800000

	.p2align	8
	.type	mul_char_get_global_id_64,@function
	.size	mul_char_get_global_id_64, mul_char_get_global_id_64_symend-mul_char_get_global_id_64
mul_char_get_global_id_64:
	s_clause 0x1                                               // 000000081600: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000081604: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008160C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000081614: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000008161C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000081620: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000081624: BF870091
	v_add_nc_u32_e32 v0, s3, v0                                // 000000081628: 4A000003
	v_mul_lo_u32 v2, v0, v0                                    // 00000008162C: D72C0002 00020100
	v_add_co_u32 v0, s0, s0, v0                                // 000000081634: D7000000 00020000
	s_delay_alu instid0(VALU_DEP_1)                            // 00000008163C: BF870001
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 000000081640: D5207C01 00010001
	global_store_b8 v[0:1], v2, off                            // 000000081648: DC620000 007C0200
	s_nop 0                                                    // 000000081650: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081654: BFB60003
	s_endpgm                                                   // 000000081658: BFB00000
mul_char_get_global_id_64_symend:
	.long 0xbf800000                                           // 00000008165C: BF800000
	.long 0xbf800000                                           // 000000081660: BF800000
	.long 0xbf800000                                           // 000000081664: BF800000
	.long 0xbf800000                                           // 000000081668: BF800000
	.long 0xbf800000                                           // 00000008166C: BF800000
	.long 0xbf800000                                           // 000000081670: BF800000
	.long 0xbf800000                                           // 000000081674: BF800000
	.long 0xbf800000                                           // 000000081678: BF800000
	.long 0xbf800000                                           // 00000008167C: BF800000
	.long 0xbf800000                                           // 000000081680: BF800000
	.long 0xbf800000                                           // 000000081684: BF800000
	.long 0xbf800000                                           // 000000081688: BF800000
	.long 0xbf800000                                           // 00000008168C: BF800000
	.long 0xbf800000                                           // 000000081690: BF800000
	.long 0xbf800000                                           // 000000081694: BF800000
	.long 0xbf800000                                           // 000000081698: BF800000
	.long 0xbf800000                                           // 00000008169C: BF800000
	.long 0xbf800000                                           // 0000000816A0: BF800000
	.long 0xbf800000                                           // 0000000816A4: BF800000
	.long 0xbf800000                                           // 0000000816A8: BF800000
	.long 0xbf800000                                           // 0000000816AC: BF800000
	.long 0xbf800000                                           // 0000000816B0: BF800000
	.long 0xbf800000                                           // 0000000816B4: BF800000
	.long 0xbf800000                                           // 0000000816B8: BF800000
	.long 0xbf800000                                           // 0000000816BC: BF800000
	.long 0xbf800000                                           // 0000000816C0: BF800000
	.long 0xbf800000                                           // 0000000816C4: BF800000
	.long 0xbf800000                                           // 0000000816C8: BF800000
	.long 0xbf800000                                           // 0000000816CC: BF800000
	.long 0xbf800000                                           // 0000000816D0: BF800000
	.long 0xbf800000                                           // 0000000816D4: BF800000
	.long 0xbf800000                                           // 0000000816D8: BF800000
	.long 0xbf800000                                           // 0000000816DC: BF800000
	.long 0xbf800000                                           // 0000000816E0: BF800000
	.long 0xbf800000                                           // 0000000816E4: BF800000
	.long 0xbf800000                                           // 0000000816E8: BF800000
	.long 0xbf800000                                           // 0000000816EC: BF800000
	.long 0xbf800000                                           // 0000000816F0: BF800000
	.long 0xbf800000                                           // 0000000816F4: BF800000
	.long 0xbf800000                                           // 0000000816F8: BF800000
	.long 0xbf800000                                           // 0000000816FC: BF800000

	.p2align	8
	.type	mul_char_get_global_size_64,@function
	.size	mul_char_get_global_size_64, mul_char_get_global_size_64_symend-mul_char_get_global_size_64
mul_char_get_global_size_64:
	s_clause 0x3                                               // 000000081700: BF850003
	s_load_b32 s3, s[0:1], 0x10                                // 000000081704: F40000C0 F8000010
	s_load_b32 s4, s[0:1], 0x20                                // 00000008170C: F4000100 F8000020
	s_load_b32 s5, s[0:1], 0x38                                // 000000081714: F4000140 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008171C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 000000081724: 84028602
	s_mov_b32 s33, 0                                           // 000000081728: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000008172C: BF89FC07
	s_lshl_b32 s3, s3, 6                                       // 000000081730: 84038603
	s_lshr_b32 s4, s4, 16                                      // 000000081734: 85049004
	v_add3_u32 v0, s5, s2, v0                                  // 000000081738: D6550000 04000405
	s_add_i32 s3, s3, s4                                       // 000000081740: 81030403
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 000000081744: BF870499
	s_mul_i32 s3, s3, s3                                       // 000000081748: 96030303
	v_mov_b32_e32 v1, s3                                       // 00000008174C: 7E020203
	global_store_b8 v0, v1, s[0:1]                             // 000000081750: DC620000 00000100
	s_nop 0                                                    // 000000081758: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008175C: BFB60003
	s_endpgm                                                   // 000000081760: BFB00000
mul_char_get_global_size_64_symend:
	.long 0xbf800000                                           // 000000081764: BF800000
	.long 0xbf800000                                           // 000000081768: BF800000
	.long 0xbf800000                                           // 00000008176C: BF800000
	.long 0xbf800000                                           // 000000081770: BF800000
	.long 0xbf800000                                           // 000000081774: BF800000
	.long 0xbf800000                                           // 000000081778: BF800000
	.long 0xbf800000                                           // 00000008177C: BF800000
	.long 0xbf800000                                           // 000000081780: BF800000
	.long 0xbf800000                                           // 000000081784: BF800000
	.long 0xbf800000                                           // 000000081788: BF800000
	.long 0xbf800000                                           // 00000008178C: BF800000
	.long 0xbf800000                                           // 000000081790: BF800000
	.long 0xbf800000                                           // 000000081794: BF800000
	.long 0xbf800000                                           // 000000081798: BF800000
	.long 0xbf800000                                           // 00000008179C: BF800000
	.long 0xbf800000                                           // 0000000817A0: BF800000
	.long 0xbf800000                                           // 0000000817A4: BF800000
	.long 0xbf800000                                           // 0000000817A8: BF800000
	.long 0xbf800000                                           // 0000000817AC: BF800000
	.long 0xbf800000                                           // 0000000817B0: BF800000
	.long 0xbf800000                                           // 0000000817B4: BF800000
	.long 0xbf800000                                           // 0000000817B8: BF800000
	.long 0xbf800000                                           // 0000000817BC: BF800000
	.long 0xbf800000                                           // 0000000817C0: BF800000
	.long 0xbf800000                                           // 0000000817C4: BF800000
	.long 0xbf800000                                           // 0000000817C8: BF800000
	.long 0xbf800000                                           // 0000000817CC: BF800000
	.long 0xbf800000                                           // 0000000817D0: BF800000
	.long 0xbf800000                                           // 0000000817D4: BF800000
	.long 0xbf800000                                           // 0000000817D8: BF800000
	.long 0xbf800000                                           // 0000000817DC: BF800000
	.long 0xbf800000                                           // 0000000817E0: BF800000
	.long 0xbf800000                                           // 0000000817E4: BF800000
	.long 0xbf800000                                           // 0000000817E8: BF800000
	.long 0xbf800000                                           // 0000000817EC: BF800000
	.long 0xbf800000                                           // 0000000817F0: BF800000
	.long 0xbf800000                                           // 0000000817F4: BF800000
	.long 0xbf800000                                           // 0000000817F8: BF800000
	.long 0xbf800000                                           // 0000000817FC: BF800000

	.p2align	8
	.type	mul_char_get_num_groups_64,@function
	.size	mul_char_get_num_groups_64, mul_char_get_num_groups_64_symend-mul_char_get_num_groups_64
mul_char_get_num_groups_64:
	s_clause 0x3                                               // 000000081800: BF850003
	s_load_b32 s3, s[0:1], 0x20                                // 000000081804: F40000C0 F8000020
	s_load_b32 s4, s[0:1], 0x10                                // 00000008180C: F4000100 F8000010
	s_load_b32 s5, s[0:1], 0x38                                // 000000081814: F4000140 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008181C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 000000081824: 84028602
	s_mov_b32 s33, 0                                           // 000000081828: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000008182C: BF89FC07
	s_lshr_b32 s3, s3, 16                                      // 000000081830: 85039003
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000081834: BF870129
	v_cmp_ne_u16_e64 s3, s3, 0                                 // 000000081838: D43D0003 00010003
	v_add3_u32 v0, s5, s2, v0                                  // 000000081840: D6550000 04000405
	s_cmp_lg_u32 s3, 0                                         // 000000081848: BF078003
	s_addc_u32 s3, s4, 0                                       // 00000008184C: 82038004
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 000000081850: BF870499
	s_mul_i32 s3, s3, s3                                       // 000000081854: 96030303
	v_mov_b32_e32 v1, s3                                       // 000000081858: 7E020203
	global_store_b8 v0, v1, s[0:1]                             // 00000008185C: DC620000 00000100
	s_nop 0                                                    // 000000081864: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081868: BFB60003
	s_endpgm                                                   // 00000008186C: BFB00000
mul_char_get_num_groups_64_symend:
	.long 0xbf800000                                           // 000000081870: BF800000
	.long 0xbf800000                                           // 000000081874: BF800000
	.long 0xbf800000                                           // 000000081878: BF800000
	.long 0xbf800000                                           // 00000008187C: BF800000
	.long 0xbf800000                                           // 000000081880: BF800000
	.long 0xbf800000                                           // 000000081884: BF800000
	.long 0xbf800000                                           // 000000081888: BF800000
	.long 0xbf800000                                           // 00000008188C: BF800000
	.long 0xbf800000                                           // 000000081890: BF800000
	.long 0xbf800000                                           // 000000081894: BF800000
	.long 0xbf800000                                           // 000000081898: BF800000
	.long 0xbf800000                                           // 00000008189C: BF800000
	.long 0xbf800000                                           // 0000000818A0: BF800000
	.long 0xbf800000                                           // 0000000818A4: BF800000
	.long 0xbf800000                                           // 0000000818A8: BF800000
	.long 0xbf800000                                           // 0000000818AC: BF800000
	.long 0xbf800000                                           // 0000000818B0: BF800000
	.long 0xbf800000                                           // 0000000818B4: BF800000
	.long 0xbf800000                                           // 0000000818B8: BF800000
	.long 0xbf800000                                           // 0000000818BC: BF800000
	.long 0xbf800000                                           // 0000000818C0: BF800000
	.long 0xbf800000                                           // 0000000818C4: BF800000
	.long 0xbf800000                                           // 0000000818C8: BF800000
	.long 0xbf800000                                           // 0000000818CC: BF800000
	.long 0xbf800000                                           // 0000000818D0: BF800000
	.long 0xbf800000                                           // 0000000818D4: BF800000
	.long 0xbf800000                                           // 0000000818D8: BF800000
	.long 0xbf800000                                           // 0000000818DC: BF800000
	.long 0xbf800000                                           // 0000000818E0: BF800000
	.long 0xbf800000                                           // 0000000818E4: BF800000
	.long 0xbf800000                                           // 0000000818E8: BF800000
	.long 0xbf800000                                           // 0000000818EC: BF800000
	.long 0xbf800000                                           // 0000000818F0: BF800000
	.long 0xbf800000                                           // 0000000818F4: BF800000
	.long 0xbf800000                                           // 0000000818F8: BF800000
	.long 0xbf800000                                           // 0000000818FC: BF800000

	.p2align	8
	.type	mul_char_get_work_dim,@function
	.size	mul_char_get_work_dim, mul_char_get_work_dim_symend-mul_char_get_work_dim
mul_char_get_work_dim:
	s_clause 0x2                                               // 000000081900: BF850002
	s_load_b32 s3, s[0:1], 0x50                                // 000000081904: F40000C0 F8000050
	s_load_b32 s4, s[0:1], 0x38                                // 00000008190C: F4000100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000081914: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 00000008191C: 84028602
	s_mov_b32 s33, 0                                           // 000000081920: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000081924: BF89FC07
	s_and_b32 s3, s3, 0xffff                                   // 000000081928: 8B03FF03 0000FFFF
	v_add3_u32 v0, s4, s2, v0                                  // 000000081930: D6550000 04000404
	s_mul_i32 s3, s3, s3                                       // 000000081938: 96030303
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000008193C: BF870009
	v_mov_b32_e32 v1, s3                                       // 000000081940: 7E020203
	global_store_b8 v0, v1, s[0:1]                             // 000000081944: DC620000 00000100
	s_nop 0                                                    // 00000008194C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081950: BFB60003
	s_endpgm                                                   // 000000081954: BFB00000
mul_char_get_work_dim_symend:
	.long 0xbf800000                                           // 000000081958: BF800000
	.long 0xbf800000                                           // 00000008195C: BF800000
	.long 0xbf800000                                           // 000000081960: BF800000
	.long 0xbf800000                                           // 000000081964: BF800000
	.long 0xbf800000                                           // 000000081968: BF800000
	.long 0xbf800000                                           // 00000008196C: BF800000
	.long 0xbf800000                                           // 000000081970: BF800000
	.long 0xbf800000                                           // 000000081974: BF800000
	.long 0xbf800000                                           // 000000081978: BF800000
	.long 0xbf800000                                           // 00000008197C: BF800000
	.long 0xbf800000                                           // 000000081980: BF800000
	.long 0xbf800000                                           // 000000081984: BF800000
	.long 0xbf800000                                           // 000000081988: BF800000
	.long 0xbf800000                                           // 00000008198C: BF800000
	.long 0xbf800000                                           // 000000081990: BF800000
	.long 0xbf800000                                           // 000000081994: BF800000
	.long 0xbf800000                                           // 000000081998: BF800000
	.long 0xbf800000                                           // 00000008199C: BF800000
	.long 0xbf800000                                           // 0000000819A0: BF800000
	.long 0xbf800000                                           // 0000000819A4: BF800000
	.long 0xbf800000                                           // 0000000819A8: BF800000
	.long 0xbf800000                                           // 0000000819AC: BF800000
	.long 0xbf800000                                           // 0000000819B0: BF800000
	.long 0xbf800000                                           // 0000000819B4: BF800000
	.long 0xbf800000                                           // 0000000819B8: BF800000
	.long 0xbf800000                                           // 0000000819BC: BF800000
	.long 0xbf800000                                           // 0000000819C0: BF800000
	.long 0xbf800000                                           // 0000000819C4: BF800000
	.long 0xbf800000                                           // 0000000819C8: BF800000
	.long 0xbf800000                                           // 0000000819CC: BF800000
	.long 0xbf800000                                           // 0000000819D0: BF800000
	.long 0xbf800000                                           // 0000000819D4: BF800000
	.long 0xbf800000                                           // 0000000819D8: BF800000
	.long 0xbf800000                                           // 0000000819DC: BF800000
	.long 0xbf800000                                           // 0000000819E0: BF800000
	.long 0xbf800000                                           // 0000000819E4: BF800000
	.long 0xbf800000                                           // 0000000819E8: BF800000
	.long 0xbf800000                                           // 0000000819EC: BF800000
	.long 0xbf800000                                           // 0000000819F0: BF800000
	.long 0xbf800000                                           // 0000000819F4: BF800000
	.long 0xbf800000                                           // 0000000819F8: BF800000
	.long 0xbf800000                                           // 0000000819FC: BF800000

	.p2align	8
	.type	mul_char_x_8_8,@function
	.size	mul_char_x_8_8, mul_char_x_8_8_symend-mul_char_x_8_8
mul_char_x_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000081A00: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000081A08: BF89FC07
	s_clause 0x1                                               // 000000081A0C: BF850001
	s_load_b32 s5, s[0:1], null                                // 000000081A10: F4000140 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000081A18: F4040000 F8000008
	v_bfe_u32 v1, v0, 10, 8                                    // 000000081A20: D6100001 02211500
	s_lshl_b32 s3, s3, 3                                       // 000000081A28: 84038303
	v_and_b32_e32 v0, 0x3ff, v0                                // 000000081A2C: 360000FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000081A34: 84028302
	s_mov_b32 s33, 0                                           // 000000081A38: BEA10080
	v_add3_u32 v1, s6, s3, v1                                  // 000000081A3C: D6550001 04040606
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000081A44: BF870122
	v_add3_u32 v0, s4, s2, v0                                  // 000000081A48: D6550000 04000404
	s_waitcnt lgkmcnt(0)                                       // 000000081A50: BF89FC07
	v_mul_lo_u32 v1, v1, s5                                    // 000000081A54: D72C0001 00000B01
	global_store_b8 v0, v1, s[0:1]                             // 000000081A5C: DC620000 00000100
	s_nop 0                                                    // 000000081A64: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081A68: BFB60003
	s_endpgm                                                   // 000000081A6C: BFB00000
mul_char_x_8_8_symend:
	.long 0xbf800000                                           // 000000081A70: BF800000
	.long 0xbf800000                                           // 000000081A74: BF800000
	.long 0xbf800000                                           // 000000081A78: BF800000
	.long 0xbf800000                                           // 000000081A7C: BF800000
	.long 0xbf800000                                           // 000000081A80: BF800000
	.long 0xbf800000                                           // 000000081A84: BF800000
	.long 0xbf800000                                           // 000000081A88: BF800000
	.long 0xbf800000                                           // 000000081A8C: BF800000
	.long 0xbf800000                                           // 000000081A90: BF800000
	.long 0xbf800000                                           // 000000081A94: BF800000
	.long 0xbf800000                                           // 000000081A98: BF800000
	.long 0xbf800000                                           // 000000081A9C: BF800000
	.long 0xbf800000                                           // 000000081AA0: BF800000
	.long 0xbf800000                                           // 000000081AA4: BF800000
	.long 0xbf800000                                           // 000000081AA8: BF800000
	.long 0xbf800000                                           // 000000081AAC: BF800000
	.long 0xbf800000                                           // 000000081AB0: BF800000
	.long 0xbf800000                                           // 000000081AB4: BF800000
	.long 0xbf800000                                           // 000000081AB8: BF800000
	.long 0xbf800000                                           // 000000081ABC: BF800000
	.long 0xbf800000                                           // 000000081AC0: BF800000
	.long 0xbf800000                                           // 000000081AC4: BF800000
	.long 0xbf800000                                           // 000000081AC8: BF800000
	.long 0xbf800000                                           // 000000081ACC: BF800000
	.long 0xbf800000                                           // 000000081AD0: BF800000
	.long 0xbf800000                                           // 000000081AD4: BF800000
	.long 0xbf800000                                           // 000000081AD8: BF800000
	.long 0xbf800000                                           // 000000081ADC: BF800000
	.long 0xbf800000                                           // 000000081AE0: BF800000
	.long 0xbf800000                                           // 000000081AE4: BF800000
	.long 0xbf800000                                           // 000000081AE8: BF800000
	.long 0xbf800000                                           // 000000081AEC: BF800000
	.long 0xbf800000                                           // 000000081AF0: BF800000
	.long 0xbf800000                                           // 000000081AF4: BF800000
	.long 0xbf800000                                           // 000000081AF8: BF800000
	.long 0xbf800000                                           // 000000081AFC: BF800000

	.p2align	8
	.type	mul_char_get_global_offset_8_8,@function
	.size	mul_char_get_global_offset_8_8, mul_char_get_global_offset_8_8_symend-mul_char_get_global_offset_8_8
mul_char_get_global_offset_8_8:
	s_clause 0x1                                               // 000000081B00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000081B04: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000081B0C: F4040000 F8000008
	s_lshl_b32 s2, s2, 3                                       // 000000081B14: 84028302
	s_mov_b32 s33, 0                                           // 000000081B18: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000081B1C: BF89FC07
	s_mul_i32 s3, s6, s4                                       // 000000081B20: 96030406
	v_add3_u32 v0, s4, s2, v0                                  // 000000081B24: D6550000 04000404
	v_mov_b32_e32 v1, s3                                       // 000000081B2C: 7E020203
	global_store_b8 v0, v1, s[0:1]                             // 000000081B30: DC620000 00000100
	s_nop 0                                                    // 000000081B38: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081B3C: BFB60003
	s_endpgm                                                   // 000000081B40: BFB00000
mul_char_get_global_offset_8_8_symend:
	.long 0xbf800000                                           // 000000081B44: BF800000
	.long 0xbf800000                                           // 000000081B48: BF800000
	.long 0xbf800000                                           // 000000081B4C: BF800000
	.long 0xbf800000                                           // 000000081B50: BF800000
	.long 0xbf800000                                           // 000000081B54: BF800000
	.long 0xbf800000                                           // 000000081B58: BF800000
	.long 0xbf800000                                           // 000000081B5C: BF800000
	.long 0xbf800000                                           // 000000081B60: BF800000
	.long 0xbf800000                                           // 000000081B64: BF800000
	.long 0xbf800000                                           // 000000081B68: BF800000
	.long 0xbf800000                                           // 000000081B6C: BF800000
	.long 0xbf800000                                           // 000000081B70: BF800000
	.long 0xbf800000                                           // 000000081B74: BF800000
	.long 0xbf800000                                           // 000000081B78: BF800000
	.long 0xbf800000                                           // 000000081B7C: BF800000
	.long 0xbf800000                                           // 000000081B80: BF800000
	.long 0xbf800000                                           // 000000081B84: BF800000
	.long 0xbf800000                                           // 000000081B88: BF800000
	.long 0xbf800000                                           // 000000081B8C: BF800000
	.long 0xbf800000                                           // 000000081B90: BF800000
	.long 0xbf800000                                           // 000000081B94: BF800000
	.long 0xbf800000                                           // 000000081B98: BF800000
	.long 0xbf800000                                           // 000000081B9C: BF800000
	.long 0xbf800000                                           // 000000081BA0: BF800000
	.long 0xbf800000                                           // 000000081BA4: BF800000
	.long 0xbf800000                                           // 000000081BA8: BF800000
	.long 0xbf800000                                           // 000000081BAC: BF800000
	.long 0xbf800000                                           // 000000081BB0: BF800000
	.long 0xbf800000                                           // 000000081BB4: BF800000
	.long 0xbf800000                                           // 000000081BB8: BF800000
	.long 0xbf800000                                           // 000000081BBC: BF800000
	.long 0xbf800000                                           // 000000081BC0: BF800000
	.long 0xbf800000                                           // 000000081BC4: BF800000
	.long 0xbf800000                                           // 000000081BC8: BF800000
	.long 0xbf800000                                           // 000000081BCC: BF800000
	.long 0xbf800000                                           // 000000081BD0: BF800000
	.long 0xbf800000                                           // 000000081BD4: BF800000
	.long 0xbf800000                                           // 000000081BD8: BF800000
	.long 0xbf800000                                           // 000000081BDC: BF800000
	.long 0xbf800000                                           // 000000081BE0: BF800000
	.long 0xbf800000                                           // 000000081BE4: BF800000
	.long 0xbf800000                                           // 000000081BE8: BF800000
	.long 0xbf800000                                           // 000000081BEC: BF800000
	.long 0xbf800000                                           // 000000081BF0: BF800000
	.long 0xbf800000                                           // 000000081BF4: BF800000
	.long 0xbf800000                                           // 000000081BF8: BF800000
	.long 0xbf800000                                           // 000000081BFC: BF800000

	.p2align	8
	.type	mul_char_get_local_id_8_8,@function
	.size	mul_char_get_local_id_8_8, mul_char_get_local_id_8_8_symend-mul_char_get_local_id_8_8
mul_char_get_local_id_8_8:
	s_clause 0x1                                               // 000000081C00: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000081C04: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000081C0C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000081C14: 360200FF 000003FF
	v_bfe_u32 v0, v0, 10, 8                                    // 000000081C1C: D6100000 02211500
	s_lshl_b32 s2, s2, 3                                       // 000000081C24: 84028302
	s_mov_b32 s33, 0                                           // 000000081C28: BEA10080
	s_delay_alu instid0(VALU_DEP_1)                            // 000000081C2C: BF870001
	v_mul_lo_u16 v0.l, v1.l, v0.l                              // 000000081C30: D7050000 00020101
	s_waitcnt lgkmcnt(0)                                       // 000000081C38: BF89FC07
	v_add3_u32 v1, s3, s2, v1                                  // 000000081C3C: D6550001 04040403
	global_store_b8 v1, v0, s[0:1]                             // 000000081C44: DC620000 00000001
	s_nop 0                                                    // 000000081C4C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081C50: BFB60003
	s_endpgm                                                   // 000000081C54: BFB00000
mul_char_get_local_id_8_8_symend:
	.long 0xbf800000                                           // 000000081C58: BF800000
	.long 0xbf800000                                           // 000000081C5C: BF800000
	.long 0xbf800000                                           // 000000081C60: BF800000
	.long 0xbf800000                                           // 000000081C64: BF800000
	.long 0xbf800000                                           // 000000081C68: BF800000
	.long 0xbf800000                                           // 000000081C6C: BF800000
	.long 0xbf800000                                           // 000000081C70: BF800000
	.long 0xbf800000                                           // 000000081C74: BF800000
	.long 0xbf800000                                           // 000000081C78: BF800000
	.long 0xbf800000                                           // 000000081C7C: BF800000
	.long 0xbf800000                                           // 000000081C80: BF800000
	.long 0xbf800000                                           // 000000081C84: BF800000
	.long 0xbf800000                                           // 000000081C88: BF800000
	.long 0xbf800000                                           // 000000081C8C: BF800000
	.long 0xbf800000                                           // 000000081C90: BF800000
	.long 0xbf800000                                           // 000000081C94: BF800000
	.long 0xbf800000                                           // 000000081C98: BF800000
	.long 0xbf800000                                           // 000000081C9C: BF800000
	.long 0xbf800000                                           // 000000081CA0: BF800000
	.long 0xbf800000                                           // 000000081CA4: BF800000
	.long 0xbf800000                                           // 000000081CA8: BF800000
	.long 0xbf800000                                           // 000000081CAC: BF800000
	.long 0xbf800000                                           // 000000081CB0: BF800000
	.long 0xbf800000                                           // 000000081CB4: BF800000
	.long 0xbf800000                                           // 000000081CB8: BF800000
	.long 0xbf800000                                           // 000000081CBC: BF800000
	.long 0xbf800000                                           // 000000081CC0: BF800000
	.long 0xbf800000                                           // 000000081CC4: BF800000
	.long 0xbf800000                                           // 000000081CC8: BF800000
	.long 0xbf800000                                           // 000000081CCC: BF800000
	.long 0xbf800000                                           // 000000081CD0: BF800000
	.long 0xbf800000                                           // 000000081CD4: BF800000
	.long 0xbf800000                                           // 000000081CD8: BF800000
	.long 0xbf800000                                           // 000000081CDC: BF800000
	.long 0xbf800000                                           // 000000081CE0: BF800000
	.long 0xbf800000                                           // 000000081CE4: BF800000
	.long 0xbf800000                                           // 000000081CE8: BF800000
	.long 0xbf800000                                           // 000000081CEC: BF800000
	.long 0xbf800000                                           // 000000081CF0: BF800000
	.long 0xbf800000                                           // 000000081CF4: BF800000
	.long 0xbf800000                                           // 000000081CF8: BF800000
	.long 0xbf800000                                           // 000000081CFC: BF800000

	.p2align	8
	.type	mul_char_get_group_id_8_8,@function
	.size	mul_char_get_group_id_8_8, mul_char_get_group_id_8_8_symend-mul_char_get_group_id_8_8
mul_char_get_group_id_8_8:
	s_clause 0x1                                               // 000000081D00: BF850001
	s_load_b32 s4, s[0:1], 0x38                                // 000000081D04: F4000100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000081D0C: F4040000 F8000008
	s_lshl_b32 s5, s2, 3                                       // 000000081D14: 84058302
	s_mul_i32 s2, s2, s3                                       // 000000081D18: 96020302
	s_mov_b32 s33, 0                                           // 000000081D1C: BEA10080
	v_mov_b32_e32 v1, s2                                       // 000000081D20: 7E020202
	s_waitcnt lgkmcnt(0)                                       // 000000081D24: BF89FC07
	v_add3_u32 v0, s4, s5, v0                                  // 000000081D28: D6550000 04000A04
	global_store_b8 v0, v1, s[0:1]                             // 000000081D30: DC620000 00000100
	s_nop 0                                                    // 000000081D38: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081D3C: BFB60003
	s_endpgm                                                   // 000000081D40: BFB00000
mul_char_get_group_id_8_8_symend:
	.long 0xbf800000                                           // 000000081D44: BF800000
	.long 0xbf800000                                           // 000000081D48: BF800000
	.long 0xbf800000                                           // 000000081D4C: BF800000
	.long 0xbf800000                                           // 000000081D50: BF800000
	.long 0xbf800000                                           // 000000081D54: BF800000
	.long 0xbf800000                                           // 000000081D58: BF800000
	.long 0xbf800000                                           // 000000081D5C: BF800000
	.long 0xbf800000                                           // 000000081D60: BF800000
	.long 0xbf800000                                           // 000000081D64: BF800000
	.long 0xbf800000                                           // 000000081D68: BF800000
	.long 0xbf800000                                           // 000000081D6C: BF800000
	.long 0xbf800000                                           // 000000081D70: BF800000
	.long 0xbf800000                                           // 000000081D74: BF800000
	.long 0xbf800000                                           // 000000081D78: BF800000
	.long 0xbf800000                                           // 000000081D7C: BF800000
	.long 0xbf800000                                           // 000000081D80: BF800000
	.long 0xbf800000                                           // 000000081D84: BF800000
	.long 0xbf800000                                           // 000000081D88: BF800000
	.long 0xbf800000                                           // 000000081D8C: BF800000
	.long 0xbf800000                                           // 000000081D90: BF800000
	.long 0xbf800000                                           // 000000081D94: BF800000
	.long 0xbf800000                                           // 000000081D98: BF800000
	.long 0xbf800000                                           // 000000081D9C: BF800000
	.long 0xbf800000                                           // 000000081DA0: BF800000
	.long 0xbf800000                                           // 000000081DA4: BF800000
	.long 0xbf800000                                           // 000000081DA8: BF800000
	.long 0xbf800000                                           // 000000081DAC: BF800000
	.long 0xbf800000                                           // 000000081DB0: BF800000
	.long 0xbf800000                                           // 000000081DB4: BF800000
	.long 0xbf800000                                           // 000000081DB8: BF800000
	.long 0xbf800000                                           // 000000081DBC: BF800000
	.long 0xbf800000                                           // 000000081DC0: BF800000
	.long 0xbf800000                                           // 000000081DC4: BF800000
	.long 0xbf800000                                           // 000000081DC8: BF800000
	.long 0xbf800000                                           // 000000081DCC: BF800000
	.long 0xbf800000                                           // 000000081DD0: BF800000
	.long 0xbf800000                                           // 000000081DD4: BF800000
	.long 0xbf800000                                           // 000000081DD8: BF800000
	.long 0xbf800000                                           // 000000081DDC: BF800000
	.long 0xbf800000                                           // 000000081DE0: BF800000
	.long 0xbf800000                                           // 000000081DE4: BF800000
	.long 0xbf800000                                           // 000000081DE8: BF800000
	.long 0xbf800000                                           // 000000081DEC: BF800000
	.long 0xbf800000                                           // 000000081DF0: BF800000
	.long 0xbf800000                                           // 000000081DF4: BF800000
	.long 0xbf800000                                           // 000000081DF8: BF800000
	.long 0xbf800000                                           // 000000081DFC: BF800000

	.p2align	8
	.type	mul_char_get_local_size_8_8,@function
	.size	mul_char_get_local_size_8_8, mul_char_get_local_size_8_8_symend-mul_char_get_local_size_8_8
mul_char_get_local_size_8_8:
	s_clause 0x1                                               // 000000081E00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 000000081E04: F4080100 F8000008
	s_load_b32 s9, s[0:1], 0x38                                // 000000081E0C: F4000240 F8000038
	s_add_u32 s8, s0, 16                                       // 000000081E14: 80089000
	s_addc_u32 s10, s1, 0                                      // 000000081E18: 820A8001
	s_lshl_b32 s11, s2, 3                                      // 000000081E1C: 840B8302
	v_mov_b32_e32 v1, 0                                        // 000000081E20: 7E020280
	s_mov_b32 s33, 0                                           // 000000081E24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000081E28: BF89FC07
	s_cmp_lt_u32 s2, s6                                        // 000000081E2C: BF0A0602
	v_add3_u32 v0, s9, s11, v0                                 // 000000081E30: D6550000 04001609
	s_cselect_b32 s0, 12, 18                                   // 000000081E38: 9800928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000081E3C: BF8704C9
	s_add_u32 s0, s8, s0                                       // 000000081E40: 80000008
	s_addc_u32 s1, s10, 0                                      // 000000081E44: 8201800A
	s_cmp_lt_u32 s3, s7                                        // 000000081E48: BF0A0703
	s_cselect_b32 s2, 14, 20                                   // 000000081E4C: 9802948E
	s_add_u32 s2, s8, s2                                       // 000000081E50: 80020208
	s_addc_u32 s3, s10, 0                                      // 000000081E54: 8203800A
	s_clause 0x1                                               // 000000081E58: BF850001
	global_load_u8 v2, v1, s[2:3]                              // 000000081E5C: DC420000 02020001
	global_load_u8 v1, v1, s[0:1]                              // 000000081E64: DC420000 01000001
	s_waitcnt vmcnt(0)                                         // 000000081E6C: BF8903F7
	v_mul_lo_u32 v1, v2, v1                                    // 000000081E70: D72C0001 00020302
	global_store_b8 v0, v1, s[4:5]                             // 000000081E78: DC620000 00040100
	s_nop 0                                                    // 000000081E80: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081E84: BFB60003
	s_endpgm                                                   // 000000081E88: BFB00000
mul_char_get_local_size_8_8_symend:
	.long 0xbf800000                                           // 000000081E8C: BF800000
	.long 0xbf800000                                           // 000000081E90: BF800000
	.long 0xbf800000                                           // 000000081E94: BF800000
	.long 0xbf800000                                           // 000000081E98: BF800000
	.long 0xbf800000                                           // 000000081E9C: BF800000
	.long 0xbf800000                                           // 000000081EA0: BF800000
	.long 0xbf800000                                           // 000000081EA4: BF800000
	.long 0xbf800000                                           // 000000081EA8: BF800000
	.long 0xbf800000                                           // 000000081EAC: BF800000
	.long 0xbf800000                                           // 000000081EB0: BF800000
	.long 0xbf800000                                           // 000000081EB4: BF800000
	.long 0xbf800000                                           // 000000081EB8: BF800000
	.long 0xbf800000                                           // 000000081EBC: BF800000
	.long 0xbf800000                                           // 000000081EC0: BF800000
	.long 0xbf800000                                           // 000000081EC4: BF800000
	.long 0xbf800000                                           // 000000081EC8: BF800000
	.long 0xbf800000                                           // 000000081ECC: BF800000
	.long 0xbf800000                                           // 000000081ED0: BF800000
	.long 0xbf800000                                           // 000000081ED4: BF800000
	.long 0xbf800000                                           // 000000081ED8: BF800000
	.long 0xbf800000                                           // 000000081EDC: BF800000
	.long 0xbf800000                                           // 000000081EE0: BF800000
	.long 0xbf800000                                           // 000000081EE4: BF800000
	.long 0xbf800000                                           // 000000081EE8: BF800000
	.long 0xbf800000                                           // 000000081EEC: BF800000
	.long 0xbf800000                                           // 000000081EF0: BF800000
	.long 0xbf800000                                           // 000000081EF4: BF800000
	.long 0xbf800000                                           // 000000081EF8: BF800000
	.long 0xbf800000                                           // 000000081EFC: BF800000

	.p2align	8
	.type	mul_char_get_global_id_8_8,@function
	.size	mul_char_get_global_id_8_8, mul_char_get_global_id_8_8_symend-mul_char_get_global_id_8_8
mul_char_get_global_id_8_8:
	s_clause 0x1                                               // 000000081F00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000081F04: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000081F0C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000081F14: 360200FF 000003FF
	v_bfe_u32 v0, v0, 10, 8                                    // 000000081F1C: D6100000 02211500
	s_mov_b32 s33, 0                                           // 000000081F24: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000081F28: BF8700B2
	v_lshl_or_b32 v1, s2, 3, v1                                // 000000081F2C: D6560001 04050602
	s_lshl_b32 s2, s3, 3                                       // 000000081F34: 84028303
	s_waitcnt lgkmcnt(0)                                       // 000000081F38: BF89FC07
	v_add_nc_u32_e32 v1, s4, v1                                // 000000081F3C: 4A020204
	v_add3_u32 v0, s6, s2, v0                                  // 000000081F40: D6550000 04000406
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000081F48: BF8700A1
	v_mul_lo_u32 v2, v0, v1                                    // 000000081F4C: D72C0002 00020300
	v_add_co_u32 v0, s0, s0, v1                                // 000000081F54: D7000000 00020200
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 000000081F5C: D5207C01 00010001
	global_store_b8 v[0:1], v2, off                            // 000000081F64: DC620000 007C0200
	s_nop 0                                                    // 000000081F6C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081F70: BFB60003
	s_endpgm                                                   // 000000081F74: BFB00000
mul_char_get_global_id_8_8_symend:
	.long 0xbf800000                                           // 000000081F78: BF800000
	.long 0xbf800000                                           // 000000081F7C: BF800000
	.long 0xbf800000                                           // 000000081F80: BF800000
	.long 0xbf800000                                           // 000000081F84: BF800000
	.long 0xbf800000                                           // 000000081F88: BF800000
	.long 0xbf800000                                           // 000000081F8C: BF800000
	.long 0xbf800000                                           // 000000081F90: BF800000
	.long 0xbf800000                                           // 000000081F94: BF800000
	.long 0xbf800000                                           // 000000081F98: BF800000
	.long 0xbf800000                                           // 000000081F9C: BF800000
	.long 0xbf800000                                           // 000000081FA0: BF800000
	.long 0xbf800000                                           // 000000081FA4: BF800000
	.long 0xbf800000                                           // 000000081FA8: BF800000
	.long 0xbf800000                                           // 000000081FAC: BF800000
	.long 0xbf800000                                           // 000000081FB0: BF800000
	.long 0xbf800000                                           // 000000081FB4: BF800000
	.long 0xbf800000                                           // 000000081FB8: BF800000
	.long 0xbf800000                                           // 000000081FBC: BF800000
	.long 0xbf800000                                           // 000000081FC0: BF800000
	.long 0xbf800000                                           // 000000081FC4: BF800000
	.long 0xbf800000                                           // 000000081FC8: BF800000
	.long 0xbf800000                                           // 000000081FCC: BF800000
	.long 0xbf800000                                           // 000000081FD0: BF800000
	.long 0xbf800000                                           // 000000081FD4: BF800000
	.long 0xbf800000                                           // 000000081FD8: BF800000
	.long 0xbf800000                                           // 000000081FDC: BF800000
	.long 0xbf800000                                           // 000000081FE0: BF800000
	.long 0xbf800000                                           // 000000081FE4: BF800000
	.long 0xbf800000                                           // 000000081FE8: BF800000
	.long 0xbf800000                                           // 000000081FEC: BF800000
	.long 0xbf800000                                           // 000000081FF0: BF800000
	.long 0xbf800000                                           // 000000081FF4: BF800000
	.long 0xbf800000                                           // 000000081FF8: BF800000
	.long 0xbf800000                                           // 000000081FFC: BF800000

	.p2align	8
	.type	mul_char_get_global_size_8_8,@function
	.size	mul_char_get_global_size_8_8, mul_char_get_global_size_8_8_symend-mul_char_get_global_size_8_8
mul_char_get_global_size_8_8:
	v_mov_b32_e32 v1, 0                                        // 000000082000: 7E020280
	s_mov_b32 s33, 0                                           // 000000082004: BEA10080
	global_load_b32 v1, v1, s[0:1] offset:34                   // 000000082008: DC520022 01000001
	s_clause 0x1                                               // 000000082010: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 000000082014: F4080100 F8000008
	s_load_b32 s0, s[0:1], 0x38                                // 00000008201C: F4000000 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000082024: BF89FC07
	s_lshl_b32 s1, s6, 3                                       // 000000082028: 84018306
	s_lshl_b32 s3, s7, 3                                       // 00000008202C: 84038307
	s_waitcnt vmcnt(0)                                         // 000000082030: BF8903F7
	v_lshrrev_b32_e32 v2, 16, v1                               // 000000082034: 32040290
	v_add_nc_u32_e32 v1, s1, v1                                // 000000082038: 4A020201
	s_lshl_b32 s1, s2, 3                                       // 00000008203C: 84018302
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000082040: BF870199
	v_add3_u32 v0, s0, s1, v0                                  // 000000082044: D6550000 04000200
	v_add_nc_u32_e32 v2, s3, v2                                // 00000008204C: 4A040403
	s_delay_alu instid0(VALU_DEP_1)                            // 000000082050: BF870001
	v_mul_lo_u32 v1, v2, v1                                    // 000000082054: D72C0001 00020302
	global_store_b8 v0, v1, s[4:5]                             // 00000008205C: DC620000 00040100
	s_nop 0                                                    // 000000082064: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082068: BFB60003
	s_endpgm                                                   // 00000008206C: BFB00000
mul_char_get_global_size_8_8_symend:
	.long 0xbf800000                                           // 000000082070: BF800000
	.long 0xbf800000                                           // 000000082074: BF800000
	.long 0xbf800000                                           // 000000082078: BF800000
	.long 0xbf800000                                           // 00000008207C: BF800000
	.long 0xbf800000                                           // 000000082080: BF800000
	.long 0xbf800000                                           // 000000082084: BF800000
	.long 0xbf800000                                           // 000000082088: BF800000
	.long 0xbf800000                                           // 00000008208C: BF800000
	.long 0xbf800000                                           // 000000082090: BF800000
	.long 0xbf800000                                           // 000000082094: BF800000
	.long 0xbf800000                                           // 000000082098: BF800000
	.long 0xbf800000                                           // 00000008209C: BF800000
	.long 0xbf800000                                           // 0000000820A0: BF800000
	.long 0xbf800000                                           // 0000000820A4: BF800000
	.long 0xbf800000                                           // 0000000820A8: BF800000
	.long 0xbf800000                                           // 0000000820AC: BF800000
	.long 0xbf800000                                           // 0000000820B0: BF800000
	.long 0xbf800000                                           // 0000000820B4: BF800000
	.long 0xbf800000                                           // 0000000820B8: BF800000
	.long 0xbf800000                                           // 0000000820BC: BF800000
	.long 0xbf800000                                           // 0000000820C0: BF800000
	.long 0xbf800000                                           // 0000000820C4: BF800000
	.long 0xbf800000                                           // 0000000820C8: BF800000
	.long 0xbf800000                                           // 0000000820CC: BF800000
	.long 0xbf800000                                           // 0000000820D0: BF800000
	.long 0xbf800000                                           // 0000000820D4: BF800000
	.long 0xbf800000                                           // 0000000820D8: BF800000
	.long 0xbf800000                                           // 0000000820DC: BF800000
	.long 0xbf800000                                           // 0000000820E0: BF800000
	.long 0xbf800000                                           // 0000000820E4: BF800000
	.long 0xbf800000                                           // 0000000820E8: BF800000
	.long 0xbf800000                                           // 0000000820EC: BF800000
	.long 0xbf800000                                           // 0000000820F0: BF800000
	.long 0xbf800000                                           // 0000000820F4: BF800000
	.long 0xbf800000                                           // 0000000820F8: BF800000
	.long 0xbf800000                                           // 0000000820FC: BF800000

	.p2align	8
	.type	mul_char_get_num_groups_8_8,@function
	.size	mul_char_get_num_groups_8_8, mul_char_get_num_groups_8_8_symend-mul_char_get_num_groups_8_8
mul_char_get_num_groups_8_8:
	v_mov_b32_e32 v1, 0                                        // 000000082100: 7E020280
	s_lshl_b32 s2, s2, 3                                       // 000000082104: 84028302
	s_mov_b32 s33, 0                                           // 000000082108: BEA10080
	global_load_b32 v1, v1, s[0:1] offset:34                   // 00000008210C: DC520022 01000001
	s_clause 0x1                                               // 000000082114: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 000000082118: F4080100 F8000008
	s_load_b32 s1, s[0:1], 0x38                                // 000000082120: F4000040 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000082128: BF89FC07
	v_add3_u32 v0, s1, s2, v0                                  // 00000008212C: D6550000 04000401
	s_waitcnt vmcnt(0)                                         // 000000082134: BF8903F7
	v_lshrrev_b32_e32 v2, 16, v1                               // 000000082138: 32040290
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000008213C: 7C7A0280
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000082140: BF8700B2
	v_cmp_ne_u16_e64 s0, 0, v2.l                               // 000000082144: D43D0000 00020480
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000008214C: BF07806A
	s_addc_u32 s3, s6, 0                                       // 000000082150: 82038006
	s_cmp_lg_u32 s0, 0                                         // 000000082154: BF078000
	s_addc_u32 s0, s7, 0                                       // 000000082158: 82008007
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 00000008215C: BF870499
	s_mul_i32 s0, s0, s3                                       // 000000082160: 96000300
	v_mov_b32_e32 v1, s0                                       // 000000082164: 7E020200
	global_store_b8 v0, v1, s[4:5]                             // 000000082168: DC620000 00040100
	s_nop 0                                                    // 000000082170: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082174: BFB60003
	s_endpgm                                                   // 000000082178: BFB00000
mul_char_get_num_groups_8_8_symend:
	.long 0xbf800000                                           // 00000008217C: BF800000
	.long 0xbf800000                                           // 000000082180: BF800000
	.long 0xbf800000                                           // 000000082184: BF800000
	.long 0xbf800000                                           // 000000082188: BF800000
	.long 0xbf800000                                           // 00000008218C: BF800000
	.long 0xbf800000                                           // 000000082190: BF800000
	.long 0xbf800000                                           // 000000082194: BF800000
	.long 0xbf800000                                           // 000000082198: BF800000
	.long 0xbf800000                                           // 00000008219C: BF800000
	.long 0xbf800000                                           // 0000000821A0: BF800000
	.long 0xbf800000                                           // 0000000821A4: BF800000
	.long 0xbf800000                                           // 0000000821A8: BF800000
	.long 0xbf800000                                           // 0000000821AC: BF800000
	.long 0xbf800000                                           // 0000000821B0: BF800000
	.long 0xbf800000                                           // 0000000821B4: BF800000
	.long 0xbf800000                                           // 0000000821B8: BF800000
	.long 0xbf800000                                           // 0000000821BC: BF800000
	.long 0xbf800000                                           // 0000000821C0: BF800000
	.long 0xbf800000                                           // 0000000821C4: BF800000
	.long 0xbf800000                                           // 0000000821C8: BF800000
	.long 0xbf800000                                           // 0000000821CC: BF800000
	.long 0xbf800000                                           // 0000000821D0: BF800000
	.long 0xbf800000                                           // 0000000821D4: BF800000
	.long 0xbf800000                                           // 0000000821D8: BF800000
	.long 0xbf800000                                           // 0000000821DC: BF800000
	.long 0xbf800000                                           // 0000000821E0: BF800000
	.long 0xbf800000                                           // 0000000821E4: BF800000
	.long 0xbf800000                                           // 0000000821E8: BF800000
	.long 0xbf800000                                           // 0000000821EC: BF800000
	.long 0xbf800000                                           // 0000000821F0: BF800000
	.long 0xbf800000                                           // 0000000821F4: BF800000
	.long 0xbf800000                                           // 0000000821F8: BF800000
	.long 0xbf800000                                           // 0000000821FC: BF800000

	.p2align	8
	.type	mul_char_get_work_dim_8_8,@function
	.size	mul_char_get_work_dim_8_8, mul_char_get_work_dim_8_8_symend-mul_char_get_work_dim_8_8
mul_char_get_work_dim_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000082200: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000082208: BF89FC07
	s_clause 0x1                                               // 00000008220C: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 000000082210: F4000140 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000082218: F4040000 F8000008
	v_bfe_u32 v1, v0, 10, 8                                    // 000000082220: D6100001 02211500
	s_lshl_b32 s3, s3, 3                                       // 000000082228: 84038303
	v_and_b32_e32 v0, 0x3ff, v0                                // 00000008222C: 360000FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000082234: 84028302
	s_mov_b32 s33, 0                                           // 000000082238: BEA10080
	v_add3_u32 v1, s6, s3, v1                                  // 00000008223C: D6550001 04040606
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000082244: BF870122
	v_add3_u32 v0, s4, s2, v0                                  // 000000082248: D6550000 04000404
	s_waitcnt lgkmcnt(0)                                       // 000000082250: BF89FC07
	v_mul_lo_u32 v1, v1, s5                                    // 000000082254: D72C0001 00000B01
	global_store_b8 v0, v1, s[0:1]                             // 00000008225C: DC620000 00000100
	s_nop 0                                                    // 000000082264: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082268: BFB60003
	s_endpgm                                                   // 00000008226C: BFB00000
mul_char_get_work_dim_8_8_symend:
	.long 0xbf9f0000                                           // 000000082270: BF9F0000
	.long 0xbf9f0000                                           // 000000082274: BF9F0000
	.long 0xbf9f0000                                           // 000000082278: BF9F0000
	.long 0xbf9f0000                                           // 00000008227C: BF9F0000
	.long 0xbf9f0000                                           // 000000082280: BF9F0000
	.long 0xbf9f0000                                           // 000000082284: BF9F0000
	.long 0xbf9f0000                                           // 000000082288: BF9F0000
	.long 0xbf9f0000                                           // 00000008228C: BF9F0000
	.long 0xbf9f0000                                           // 000000082290: BF9F0000
	.long 0xbf9f0000                                           // 000000082294: BF9F0000
	.long 0xbf9f0000                                           // 000000082298: BF9F0000
	.long 0xbf9f0000                                           // 00000008229C: BF9F0000
	.long 0xbf9f0000                                           // 0000000822A0: BF9F0000
	.long 0xbf9f0000                                           // 0000000822A4: BF9F0000
	.long 0xbf9f0000                                           // 0000000822A8: BF9F0000
	.long 0xbf9f0000                                           // 0000000822AC: BF9F0000
	.long 0xbf9f0000                                           // 0000000822B0: BF9F0000
	.long 0xbf9f0000                                           // 0000000822B4: BF9F0000
	.long 0xbf9f0000                                           // 0000000822B8: BF9F0000
	.long 0xbf9f0000                                           // 0000000822BC: BF9F0000
	.long 0xbf9f0000                                           // 0000000822C0: BF9F0000
	.long 0xbf9f0000                                           // 0000000822C4: BF9F0000
	.long 0xbf9f0000                                           // 0000000822C8: BF9F0000
	.long 0xbf9f0000                                           // 0000000822CC: BF9F0000
	.long 0xbf9f0000                                           // 0000000822D0: BF9F0000
	.long 0xbf9f0000                                           // 0000000822D4: BF9F0000
	.long 0xbf9f0000                                           // 0000000822D8: BF9F0000
	.long 0xbf9f0000                                           // 0000000822DC: BF9F0000
	.long 0xbf9f0000                                           // 0000000822E0: BF9F0000
	.long 0xbf9f0000                                           // 0000000822E4: BF9F0000
	.long 0xbf9f0000                                           // 0000000822E8: BF9F0000
	.long 0xbf9f0000                                           // 0000000822EC: BF9F0000
	.long 0xbf9f0000                                           // 0000000822F0: BF9F0000
	.long 0xbf9f0000                                           // 0000000822F4: BF9F0000
	.long 0xbf9f0000                                           // 0000000822F8: BF9F0000
	.long 0xbf9f0000                                           // 0000000822FC: BF9F0000
	.long 0xbf9f0000                                           // 000000082300: BF9F0000
	.long 0xbf9f0000                                           // 000000082304: BF9F0000
	.long 0xbf9f0000                                           // 000000082308: BF9F0000
	.long 0xbf9f0000                                           // 00000008230C: BF9F0000
	.long 0xbf9f0000                                           // 000000082310: BF9F0000
	.long 0xbf9f0000                                           // 000000082314: BF9F0000
	.long 0xbf9f0000                                           // 000000082318: BF9F0000
	.long 0xbf9f0000                                           // 00000008231C: BF9F0000
	.long 0xbf9f0000                                           // 000000082320: BF9F0000
	.long 0xbf9f0000                                           // 000000082324: BF9F0000
	.long 0xbf9f0000                                           // 000000082328: BF9F0000
	.long 0xbf9f0000                                           // 00000008232C: BF9F0000
	.long 0xbf9f0000                                           // 000000082330: BF9F0000
	.long 0xbf9f0000                                           // 000000082334: BF9F0000
	.long 0xbf9f0000                                           // 000000082338: BF9F0000
	.long 0xbf9f0000                                           // 00000008233C: BF9F0000
	.long 0xbf9f0000                                           // 000000082340: BF9F0000
	.long 0xbf9f0000                                           // 000000082344: BF9F0000
	.long 0xbf9f0000                                           // 000000082348: BF9F0000
	.long 0xbf9f0000                                           // 00000008234C: BF9F0000
	.long 0xbf9f0000                                           // 000000082350: BF9F0000
	.long 0xbf9f0000                                           // 000000082354: BF9F0000
	.long 0xbf9f0000                                           // 000000082358: BF9F0000
	.long 0xbf9f0000                                           // 00000008235C: BF9F0000
	.long 0xbf9f0000                                           // 000000082360: BF9F0000
	.long 0xbf9f0000                                           // 000000082364: BF9F0000
	.long 0xbf9f0000                                           // 000000082368: BF9F0000
	.long 0xbf9f0000                                           // 00000008236C: BF9F0000
	.long 0xbf9f0000                                           // 000000082370: BF9F0000
	.long 0xbf9f0000                                           // 000000082374: BF9F0000
	.long 0xbf9f0000                                           // 000000082378: BF9F0000
	.long 0xbf9f0000                                           // 00000008237C: BF9F0000
	.long 0xbf9f0000                                           // 000000082380: BF9F0000
	.long 0xbf9f0000                                           // 000000082384: BF9F0000
	.long 0xbf9f0000                                           // 000000082388: BF9F0000
	.long 0xbf9f0000                                           // 00000008238C: BF9F0000
	.long 0xbf9f0000                                           // 000000082390: BF9F0000
	.long 0xbf9f0000                                           // 000000082394: BF9F0000
	.long 0xbf9f0000                                           // 000000082398: BF9F0000
	.long 0xbf9f0000                                           // 00000008239C: BF9F0000
	.long 0xbf9f0000                                           // 0000000823A0: BF9F0000
	.long 0xbf9f0000                                           // 0000000823A4: BF9F0000
	.long 0xbf9f0000                                           // 0000000823A8: BF9F0000
	.long 0xbf9f0000                                           // 0000000823AC: BF9F0000
	.long 0xbf9f0000                                           // 0000000823B0: BF9F0000
	.long 0xbf9f0000                                           // 0000000823B4: BF9F0000
	.long 0xbf9f0000                                           // 0000000823B8: BF9F0000
	.long 0xbf9f0000                                           // 0000000823BC: BF9F0000
	.long 0xbf9f0000                                           // 0000000823C0: BF9F0000
	.long 0xbf9f0000                                           // 0000000823C4: BF9F0000
	.long 0xbf9f0000                                           // 0000000823C8: BF9F0000
	.long 0xbf9f0000                                           // 0000000823CC: BF9F0000
	.long 0xbf9f0000                                           // 0000000823D0: BF9F0000
	.long 0xbf9f0000                                           // 0000000823D4: BF9F0000
	.long 0xbf9f0000                                           // 0000000823D8: BF9F0000
	.long 0xbf9f0000                                           // 0000000823DC: BF9F0000
	.long 0xbf9f0000                                           // 0000000823E0: BF9F0000
	.long 0xbf9f0000                                           // 0000000823E4: BF9F0000
	.long 0xbf9f0000                                           // 0000000823E8: BF9F0000
	.long 0xbf9f0000                                           // 0000000823EC: BF9F0000
	.long 0xbf9f0000                                           // 0000000823F0: BF9F0000
	.long 0xbf9f0000                                           // 0000000823F4: BF9F0000
	.long 0xbf9f0000                                           // 0000000823F8: BF9F0000
	.long 0xbf9f0000                                           // 0000000823FC: BF9F0000

	.section	.dynamic,#alloc,#write
_DYNAMIC:
	.long 0x6                                                  // 000000083400: 00000006
	.long 0                                                    // 000000083404: 00000000
	.ascii "8m"                                                // 000000083408: 6D38
	.short 0x5                                                 // 00000008340A: 0005
	.long 0                                                    // 00000008340C: 00000000
	.long 0xb                                                  // 000000083410: 0000000B
	.long 0                                                    // 000000083414: 00000000
	.long 0x18                                                 // 000000083418: 00000018
	.long 0                                                    // 00000008341C: 00000000
	.long 0x5                                                  // 000000083420: 00000005
	.long 0                                                    // 000000083424: 00000000
	.ascii "H"                                                 // 000000083428: 48
	.byte 0xc7                                                 // 000000083429: C7
	.short 0x5                                                 // 00000008342A: 0005
	.long 0                                                    // 00000008342C: 00000000
	.ascii "\n"                                                // 000000083430: 0A
	.byte 0                                                    // 000000083431: 00
	.short 0                                                   // 000000083432: 0000
	.long 0                                                    // 000000083434: 00000000
	.long 0x4db0                                               // 000000083438: 00004DB0
	.long 0                                                    // 00000008343C: 00000000
	.long 0x6ffffef5                                           // 000000083440: 6FFFFEF5
	.long 0                                                    // 000000083444: 00000000
	.long 0x5a500                                              // 000000083448: 0005A500
	.long 0                                                    // 00000008344C: 00000000
	.long 0x4                                                  // 000000083450: 00000004
	.long 0                                                    // 000000083454: 00000000
	.long 0x5b4a8                                              // 000000083458: 0005B4A8
	.long 0                                                    // 00000008345C: 00000000
	.long 0                                                    // 000000083460: 00000000
	.long 0                                                    // 000000083464: 00000000
	.long 0                                                    // 000000083468: 00000000
	.long 0                                                    // 00000008346C: 00000000

	.section	.comment,"MS",@progbits
	.long 0x616c6300                                           // 000000000000: 616C6300
	.ascii "ng version 18.0.0 (ssh://gerritgit/lightning/ec/llvm-project 12ba2f50c2cd6ac494748370b29a8838deb2fb39)"// 000000000004: 7620676E 69737265 31206E6F 2E302E38 73282030 2F3A6873 7265672F 67746972 6C2F7469 74686769 676E696E 2F63652F 6D766C6C 6F72702D 7463656A 62323120 35663261 63326330 63613664 37343934 37333834 39326230 33383861 62656438 33626632 2939
	.short 0x4c00                                              // 00000000006A: 4C00
	.ascii "inker: LLD 18.0.0"                                 // 00000000006C: 656B6E69 4C203A72 3120444C 2E302E38 30
	.byte 0                                                    // 00000000007D: 00

	.amdgpu_pal_metadata
---
amdhsa.kernels:
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_x_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_x_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_offset_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_offset_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_group_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_group_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_local_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_global_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_num_groups_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_num_groups_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_work_dim_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_work_dim_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_x_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_x_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_offset_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_offset_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_group_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_group_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_local_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_global_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_num_groups_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_num_groups_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_work_dim_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_work_dim_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_x_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_x_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_offset_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_offset_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_group_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_group_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_local_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_global_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_num_groups_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_num_groups_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_work_dim_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_work_dim_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_x_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_x_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_offset_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_offset_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_group_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_group_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_local_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_global_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_num_groups_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_num_groups_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_work_dim_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_work_dim_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_x_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_x_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_offset_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_offset_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_group_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_group_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_local_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_global_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_num_groups_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_num_groups_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_work_dim_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_work_dim_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_x_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_x_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_offset_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_offset_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_group_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_group_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_local_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_global_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_num_groups_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_num_groups_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_work_dim_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_work_dim_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_x_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_x_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_offset_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_offset_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_group_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_group_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_local_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_global_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_num_groups_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_num_groups_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_work_dim_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_work_dim_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_x_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_x_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_offset_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_offset_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_group_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_group_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_local_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_global_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_num_groups_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_num_groups_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_work_dim_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_work_dim_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_x_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_x_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_offset_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_offset_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_group_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_group_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_local_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_global_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_num_groups_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_num_groups_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_get_work_dim_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_work_dim_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_x_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_x_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_offset_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_offset_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_group_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_group_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_num_groups_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_num_groups_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_x_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_x_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_offset_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_offset_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_group_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_group_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_local_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_local_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_global_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_global_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_num_groups_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_num_groups_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_get_work_dim_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_get_work_dim_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_x_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_x_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_offset_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_offset_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_group_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_group_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_local_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_global_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_num_groups_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_num_groups_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_work_dim_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_work_dim_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_x_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_x_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_offset_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_offset_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x11
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_group_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_group_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_local_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x10
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_global_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x10
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_num_groups_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_num_groups_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_work_dim_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_work_dim_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_x_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_x_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_offset_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_offset_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_group_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_group_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_local_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_global_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_num_groups_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_num_groups_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_work_dim_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_work_dim_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_x_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_x_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_offset_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_offset_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_group_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_group_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_local_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_global_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_num_groups_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_num_groups_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_work_dim_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_work_dim_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_x_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_x_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_offset_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_offset_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_group_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_group_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_local_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_global_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x10
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_num_groups_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_num_groups_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_work_dim_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_work_dim_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_x_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_x_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x12
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_offset_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_offset_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x11
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x14
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_group_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_group_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x11
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_local_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x14
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_global_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x13
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x16
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_num_groups_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_num_groups_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x11
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_work_dim_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_work_dim_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x11
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_x_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_x_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_offset_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_offset_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_group_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_group_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_local_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_global_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_num_groups_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_num_groups_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_work_dim_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_work_dim_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_x_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_x_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_offset_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_offset_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_group_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_group_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_local_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_global_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_num_groups_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_num_groups_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_work_dim_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_work_dim_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_x_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_x_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_offset_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_offset_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_group_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_group_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_local_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_global_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_num_groups_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_num_groups_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_long_get_work_dim_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_work_dim_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_x_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_x_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_offset_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_offset_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_group_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_group_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_num_groups_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_num_groups_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_x_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_x_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_offset_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_offset_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_group_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_group_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_local_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_local_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_global_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_global_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_num_groups_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_num_groups_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_long_get_work_dim_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_long_get_work_dim_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_x_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_x_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_offset_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_offset_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_group_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_group_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_local_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_global_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_num_groups_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_num_groups_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_work_dim_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_work_dim_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_x_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_x_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_offset_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_offset_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_group_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_group_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_local_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_global_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_num_groups_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_num_groups_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_work_dim_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_work_dim_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_x_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_x_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_offset_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_offset_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_group_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_group_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_local_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_global_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_num_groups_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_num_groups_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_work_dim_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_work_dim_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_x_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_x_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_offset_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_offset_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_group_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_group_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_local_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_global_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_num_groups_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_num_groups_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_work_dim_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_work_dim_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_x_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_x_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_offset_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_offset_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_group_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_group_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_local_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_global_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_num_groups_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_num_groups_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_work_dim_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_work_dim_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_x_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_x_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_offset_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_offset_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_group_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_group_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_local_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_global_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_num_groups_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_num_groups_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_work_dim_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_work_dim_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_x_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_x_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_offset_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_offset_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_group_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_group_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_local_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_global_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_num_groups_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_num_groups_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_work_dim_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_work_dim_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_x_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_x_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_offset_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_offset_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_group_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_group_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_local_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_global_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_num_groups_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_num_groups_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_work_dim_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_work_dim_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_x_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_x_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_offset_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_offset_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_group_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_group_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_local_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_global_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_num_groups_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_num_groups_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           mul_char_get_work_dim_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_work_dim_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_x_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_x_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_offset_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_offset_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_group_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_group_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_num_groups_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_num_groups_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_x_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_x_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_offset_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_offset_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_group_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_group_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_local_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_local_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_global_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_global_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_num_groups_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_num_groups_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           mul_char_get_work_dim_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         mul_char_get_work_dim_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
amdhsa.target:   amdgcn-amd-amdhsa--gfx1103
amdhsa.version:
  - 0x1
  - 0x2
amdpal.pipelines:
  - .registers:      {}
...
	.end_amdgpu_pal_metadata
