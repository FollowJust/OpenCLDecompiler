// llvm-mc -triple=amdgcn--amdhsa -mcpu=gfx1103 -mattr=+wavefrontsize32,+wavefrontsize64

	.section	.note,#alloc
	.section	.dynsym,#alloc
	.long 0                                                    // 000000002198: 00000000
	.long 0                                                    // 00000000219C: 00000000
	.long 0                                                    // 0000000021A0: 00000000
	.long 0                                                    // 0000000021A4: 00000000
	.long 0                                                    // 0000000021A8: 00000000
	.long 0                                                    // 0000000021AC: 00000000
	.long 0x1                                                  // 0000000021B0: 00000001
	.long 0x70312                                              // 0000000021B4: 00070312
	.long 0x3700                                               // 0000000021B8: 00003700
	.long 0                                                    // 0000000021BC: 00000000
	.ascii "h"                                                 // 0000000021C0: 68
	.byte 0                                                    // 0000000021C1: 00
	.short 0                                                   // 0000000021C2: 0000
	.long 0                                                    // 0000000021C4: 00000000
	.long 0x6                                                  // 0000000021C8: 00000006
	.long 0x60311                                              // 0000000021CC: 00060311
	.long 0x2480                                               // 0000000021D0: 00002480
	.long 0                                                    // 0000000021D4: 00000000
	.ascii "@"                                                 // 0000000021D8: 40
	.byte 0                                                    // 0000000021D9: 00
	.short 0                                                   // 0000000021DA: 0000
	.long 0                                                    // 0000000021DC: 00000000
	.ascii ","                                                 // 0000000021E0: 2C
	.byte 0                                                    // 0000000021E1: 00
	.short 0                                                   // 0000000021E2: 0000
	.long 0x70312                                              // 0000000021E4: 00070312
	.long 0x3a00                                               // 0000000021E8: 00003A00
	.long 0                                                    // 0000000021EC: 00000000
	.ascii "h"                                                 // 0000000021F0: 68
	.byte 0                                                    // 0000000021F1: 00
	.short 0                                                   // 0000000021F2: 0000
	.long 0                                                    // 0000000021F4: 00000000
	.long 0xe                                                  // 0000000021F8: 0000000E
	.long 0x70312                                              // 0000000021FC: 00070312
	.long 0x3800                                               // 000000002200: 00003800
	.long 0                                                    // 000000002204: 00000000
	.ascii "h"                                                 // 000000002208: 68
	.byte 0                                                    // 000000002209: 00
	.short 0                                                   // 00000000220A: 0000
	.long 0                                                    // 00000000220C: 00000000
	.long 0x14                                                 // 000000002210: 00000014
	.long 0x60311                                              // 000000002214: 00060311
	.long 0x24c0                                               // 000000002218: 000024C0
	.long 0                                                    // 00000000221C: 00000000
	.ascii "@"                                                 // 000000002220: 40
	.byte 0                                                    // 000000002221: 00
	.short 0                                                   // 000000002222: 0000
	.long 0                                                    // 000000002224: 00000000
	.ascii "#"                                                 // 000000002228: 23
	.byte 0                                                    // 000000002229: 00
	.short 0                                                   // 00000000222A: 0000
	.long 0x60311                                              // 00000000222C: 00060311
	.long 0x2500                                               // 000000002230: 00002500
	.long 0                                                    // 000000002234: 00000000
	.ascii "@"                                                 // 000000002238: 40
	.byte 0                                                    // 000000002239: 00
	.short 0                                                   // 00000000223A: 0000
	.long 0                                                    // 00000000223C: 00000000
	.ascii "2"                                                 // 000000002240: 32
	.byte 0                                                    // 000000002241: 00
	.short 0                                                   // 000000002242: 0000
	.long 0x60311                                              // 000000002244: 00060311
	.ascii "@%"                                                // 000000002248: 2540
	.short 0                                                   // 00000000224A: 0000
	.long 0                                                    // 00000000224C: 00000000
	.ascii "@"                                                 // 000000002250: 40
	.byte 0                                                    // 000000002251: 00
	.short 0                                                   // 000000002252: 0000
	.long 0                                                    // 000000002254: 00000000
	.ascii ";"                                                 // 000000002258: 3B
	.byte 0                                                    // 000000002259: 00
	.short 0                                                   // 00000000225A: 0000
	.long 0x70312                                              // 00000000225C: 00070312
	.long 0x3b00                                               // 000000002260: 00003B00
	.long 0                                                    // 000000002264: 00000000
	.long 0x98                                                 // 000000002268: 00000098
	.long 0                                                    // 00000000226C: 00000000
	.ascii "A"                                                 // 000000002270: 41
	.byte 0                                                    // 000000002271: 00
	.short 0                                                   // 000000002272: 0000
	.long 0x60311                                              // 000000002274: 00060311
	.long 0x2580                                               // 000000002278: 00002580
	.long 0                                                    // 00000000227C: 00000000
	.ascii "@"                                                 // 000000002280: 40
	.byte 0                                                    // 000000002281: 00
	.short 0                                                   // 000000002282: 0000
	.long 0                                                    // 000000002284: 00000000
	.ascii "P"                                                 // 000000002288: 50
	.byte 0                                                    // 000000002289: 00
	.short 0                                                   // 00000000228A: 0000
	.long 0x60311                                              // 00000000228C: 00060311
	.long 0x25c0                                               // 000000002290: 000025C0
	.long 0                                                    // 000000002294: 00000000
	.ascii "@"                                                 // 000000002298: 40
	.byte 0                                                    // 000000002299: 00
	.short 0                                                   // 00000000229A: 0000
	.long 0                                                    // 00000000229C: 00000000
	.ascii "`"                                                 // 0000000022A0: 60
	.byte 0                                                    // 0000000022A1: 00
	.short 0                                                   // 0000000022A2: 0000
	.long 0x60311                                              // 0000000022A4: 00060311
	.long 0x2600                                               // 0000000022A8: 00002600
	.long 0                                                    // 0000000022AC: 00000000
	.ascii "@"                                                 // 0000000022B0: 40
	.byte 0                                                    // 0000000022B1: 00
	.short 0                                                   // 0000000022B2: 0000
	.long 0                                                    // 0000000022B4: 00000000
	.long 0x1d                                                 // 0000000022B8: 0000001D
	.long 0x70312                                              // 0000000022BC: 00070312
	.long 0x3900                                               // 0000000022C0: 00003900
	.long 0                                                    // 0000000022C4: 00000000
	.ascii "x"                                                 // 0000000022C8: 78
	.byte 0                                                    // 0000000022C9: 00
	.short 0                                                   // 0000000022CA: 0000
	.long 0                                                    // 0000000022CC: 00000000
	.ascii "J"                                                 // 0000000022D0: 4A
	.byte 0                                                    // 0000000022D1: 00
	.short 0                                                   // 0000000022D2: 0000
	.long 0x70312                                              // 0000000022D4: 00070312
	.long 0x3c00                                               // 0000000022D8: 00003C00
	.long 0                                                    // 0000000022DC: 00000000
	.long 0x8c                                                 // 0000000022E0: 0000008C
	.long 0                                                    // 0000000022E4: 00000000
	.ascii "Y"                                                 // 0000000022E8: 59
	.byte 0                                                    // 0000000022E9: 00
	.short 0                                                   // 0000000022EA: 0000
	.long 0x70312                                              // 0000000022EC: 00070312
	.long 0x3d00                                               // 0000000022F0: 00003D00
	.long 0                                                    // 0000000022F4: 00000000
	.ascii "d"                                                 // 0000000022F8: 64
	.byte 0                                                    // 0000000022F9: 00
	.short 0                                                   // 0000000022FA: 0000
	.long 0                                                    // 0000000022FC: 00000000

	.section	.gnu.hash,#alloc
	.long 0x3                                                  // 000000002300: 00000003
	.long 0x1                                                  // 000000002304: 00000001
	.long 0x4                                                  // 000000002308: 00000004
	.long 0x1a                                                 // 00000000230C: 0000001A
	.long 0x80060000                                           // 000000002310: 80060000
	.long 0x1                                                  // 000000002314: 00000001
	.long 0x7f0008                                             // 000000002318: 007F0008
	.long 0x20080080                                           // 00000000231C: 20080080
	.long 0x20000                                              // 000000002320: 00020000
	.long 0x20000                                              // 000000002324: 00020000
	.long 0x20001                                              // 000000002328: 00020001
	.long 0x20108010                                           // 00000000232C: 20108010
	.long 0x1                                                  // 000000002330: 00000001
	.long 0x4                                                  // 000000002334: 00000004
	.long 0xc                                                  // 000000002338: 0000000C
	.ascii " @"                                                // 00000000233C: 4020
	.short 0x7c95                                              // 00000000233E: 7C95
	.long 0xd39f9dfc                                           // 000000002340: D39F9DFC
	.ascii "UD="                                               // 000000002344: 3D4455
	.byte 0xf                                                  // 000000002347: 0F
	.ascii "RD="                                               // 000000002348: 3D4452
	.byte 0xf                                                  // 00000000234B: 0F
	.long 0x47948cee                                           // 00000000234C: 47948CEE
	.ascii "P"                                                 // 000000002350: 50
	.byte 0x19                                                 // 000000002351: 19
	.short 0x4795                                              // 000000002352: 4795
	.long 0x4795a5b0                                           // 000000002354: 4795A5B0
	.ascii "TD="                                               // 000000002358: 3D4454
	.byte 0xf                                                  // 00000000235B: 0F
	.long 0x47963212                                           // 00000000235C: 47963212
	.ascii "r"                                                 // 000000002360: 72
	.byte 0xbe                                                 // 000000002361: BE
	.short 0x4796                                              // 000000002362: 4796
	.long 0x3f85fe5                                            // 000000002364: 03F85FE5
	.ascii "RD="                                               // 000000002368: 3D4452
	.byte 0xf                                                  // 00000000236B: 0F
	.ascii "VD="                                               // 00000000236C: 3D4456
	.byte 0xf                                                  // 00000000236F: 0F
	.ascii "g"                                                 // 000000002370: 67
	.byte 0xf3                                                 // 000000002371: F3
	.short 0xf6df                                              // 000000002372: F6DF

	.section	.hash,#alloc
	.long 0xf                                                  // 000000002374: 0000000F
	.long 0xf                                                  // 000000002378: 0000000F
	.long 0x3                                                  // 00000000237C: 00000003
	.long 0x8                                                  // 000000002380: 00000008
	.long 0xe                                                  // 000000002384: 0000000E
	.long 0xb                                                  // 000000002388: 0000000B
	.long 0x6                                                  // 00000000238C: 00000006
	.long 0x7                                                  // 000000002390: 00000007
	.ascii "	"                                                 // 000000002394: 09
	.byte 0                                                    // 000000002395: 00
	.short 0                                                   // 000000002396: 0000
	.ascii "\n"                                                // 000000002398: 0A
	.byte 0                                                    // 000000002399: 00
	.short 0                                                   // 00000000239A: 0000
	.long 0x1                                                  // 00000000239C: 00000001
	.long 0                                                    // 0000000023A0: 00000000
	.long 0                                                    // 0000000023A4: 00000000
	.long 0                                                    // 0000000023A8: 00000000
	.long 0                                                    // 0000000023AC: 00000000
	.long 0x4                                                  // 0000000023B0: 00000004
	.long 0xc                                                  // 0000000023B4: 0000000C
	.long 0                                                    // 0000000023B8: 00000000
	.long 0                                                    // 0000000023BC: 00000000
	.long 0                                                    // 0000000023C0: 00000000
	.long 0                                                    // 0000000023C4: 00000000
	.long 0                                                    // 0000000023C8: 00000000
	.long 0                                                    // 0000000023CC: 00000000
	.long 0                                                    // 0000000023D0: 00000000
	.long 0                                                    // 0000000023D4: 00000000
	.long 0                                                    // 0000000023D8: 00000000
	.long 0x2                                                  // 0000000023DC: 00000002
	.long 0                                                    // 0000000023E0: 00000000
	.long 0x5                                                  // 0000000023E4: 00000005
	.long 0                                                    // 0000000023E8: 00000000
	.long 0                                                    // 0000000023EC: 00000000
	.long 0xd                                                  // 0000000023F0: 0000000D

	.section	.rodata,#alloc
	.type	copy.kd,@object
copy.kd:
	.long 0                                                    // 000000002480: 00000000
	.long 0                                                    // 000000002484: 00000000
	.long 0x110                                                // 000000002488: 00000110
	.long 0                                                    // 00000000248C: 00000000
	.long 0x1280                                               // 000000002490: 00001280
	.long 0                                                    // 000000002494: 00000000
	.long 0                                                    // 000000002498: 00000000
	.long 0                                                    // 00000000249C: 00000000
	.long 0                                                    // 0000000024A0: 00000000
	.long 0                                                    // 0000000024A4: 00000000
	.long 0                                                    // 0000000024A8: 00000000
	.long 0                                                    // 0000000024AC: 00000000
	.long 0x60af0100                                           // 0000000024B0: 60AF0100
	.long 0x84                                                 // 0000000024B4: 00000084
	.long 0x408                                                // 0000000024B8: 00000408
	.long 0                                                    // 0000000024BC: 00000000
	.type	copy2.kd,@object
copy2.kd:
	.long 0                                                    // 0000000024C0: 00000000
	.long 0                                                    // 0000000024C4: 00000000
	.long 0x110                                                // 0000000024C8: 00000110
	.long 0                                                    // 0000000024CC: 00000000
	.ascii "@"                                                 // 0000000024D0: 40
	.byte 0x13                                                 // 0000000024D1: 13
	.short 0                                                   // 0000000024D2: 0000
	.long 0                                                    // 0000000024D4: 00000000
	.long 0                                                    // 0000000024D8: 00000000
	.long 0                                                    // 0000000024DC: 00000000
	.long 0                                                    // 0000000024E0: 00000000
	.long 0                                                    // 0000000024E4: 00000000
	.long 0                                                    // 0000000024E8: 00000000
	.long 0                                                    // 0000000024EC: 00000000
	.long 0x60af0100                                           // 0000000024F0: 60AF0100
	.long 0x84                                                 // 0000000024F4: 00000084
	.long 0x408                                                // 0000000024F8: 00000408
	.long 0                                                    // 0000000024FC: 00000000
	.type	copy3.kd,@object
copy3.kd:
	.long 0                                                    // 000000002500: 00000000
	.long 0                                                    // 000000002504: 00000000
	.long 0x110                                                // 000000002508: 00000110
	.long 0                                                    // 00000000250C: 00000000
	.long 0x1400                                               // 000000002510: 00001400
	.long 0                                                    // 000000002514: 00000000
	.long 0                                                    // 000000002518: 00000000
	.long 0                                                    // 00000000251C: 00000000
	.long 0                                                    // 000000002520: 00000000
	.long 0                                                    // 000000002524: 00000000
	.long 0                                                    // 000000002528: 00000000
	.long 0                                                    // 00000000252C: 00000000
	.long 0x60af0100                                           // 000000002530: 60AF0100
	.long 0x984                                                // 000000002534: 00000984
	.long 0x408                                                // 000000002538: 00000408
	.long 0                                                    // 00000000253C: 00000000
	.type	copy4.kd,@object
copy4.kd:
	.long 0                                                    // 000000002540: 00000000
	.long 0                                                    // 000000002544: 00000000
	.long 0x110                                                // 000000002548: 00000110
	.long 0                                                    // 00000000254C: 00000000
	.long 0x14c0                                               // 000000002550: 000014C0
	.long 0                                                    // 000000002554: 00000000
	.long 0                                                    // 000000002558: 00000000
	.long 0                                                    // 00000000255C: 00000000
	.long 0                                                    // 000000002560: 00000000
	.long 0                                                    // 000000002564: 00000000
	.long 0                                                    // 000000002568: 00000000
	.long 0                                                    // 00000000256C: 00000000
	.long 0x60af0100                                           // 000000002570: 60AF0100
	.long 0x84                                                 // 000000002574: 00000084
	.long 0x408                                                // 000000002578: 00000408
	.long 0                                                    // 00000000257C: 00000000
	.type	copy5.kd,@object
copy5.kd:
	.long 0                                                    // 000000002580: 00000000
	.long 0                                                    // 000000002584: 00000000
	.long 0x110                                                // 000000002588: 00000110
	.long 0                                                    // 00000000258C: 00000000
	.long 0x1580                                               // 000000002590: 00001580
	.long 0                                                    // 000000002594: 00000000
	.long 0                                                    // 000000002598: 00000000
	.long 0                                                    // 00000000259C: 00000000
	.long 0                                                    // 0000000025A0: 00000000
	.long 0                                                    // 0000000025A4: 00000000
	.long 0                                                    // 0000000025A8: 00000000
	.long 0                                                    // 0000000025AC: 00000000
	.long 0x60af0100                                           // 0000000025B0: 60AF0100
	.long 0x1384                                               // 0000000025B4: 00001384
	.long 0x408                                                // 0000000025B8: 00000408
	.long 0                                                    // 0000000025BC: 00000000
	.type	copy6.kd,@object
copy6.kd:
	.long 0                                                    // 0000000025C0: 00000000
	.long 0                                                    // 0000000025C4: 00000000
	.long 0x110                                                // 0000000025C8: 00000110
	.long 0                                                    // 0000000025CC: 00000000
	.ascii "@"                                                 // 0000000025D0: 40
	.byte 0x16                                                 // 0000000025D1: 16
	.short 0                                                   // 0000000025D2: 0000
	.long 0                                                    // 0000000025D4: 00000000
	.long 0                                                    // 0000000025D8: 00000000
	.long 0                                                    // 0000000025DC: 00000000
	.long 0                                                    // 0000000025E0: 00000000
	.long 0                                                    // 0000000025E4: 00000000
	.long 0                                                    // 0000000025E8: 00000000
	.long 0                                                    // 0000000025EC: 00000000
	.long 0x60af0100                                           // 0000000025F0: 60AF0100
	.long 0x1384                                               // 0000000025F4: 00001384
	.long 0x408                                                // 0000000025F8: 00000408
	.long 0                                                    // 0000000025FC: 00000000
	.type	cpFACE.kd,@object
cpFACE.kd:
	.long 0                                                    // 000000002600: 00000000
	.long 0                                                    // 000000002604: 00000000
	.long 0x110                                                // 000000002608: 00000110
	.long 0                                                    // 00000000260C: 00000000
	.long 0x1700                                               // 000000002610: 00001700
	.long 0                                                    // 000000002614: 00000000
	.long 0                                                    // 000000002618: 00000000
	.long 0                                                    // 00000000261C: 00000000
	.long 0                                                    // 000000002620: 00000000
	.long 0                                                    // 000000002624: 00000000
	.long 0                                                    // 000000002628: 00000000
	.long 0                                                    // 00000000262C: 00000000
	.long 0x60af0100                                           // 000000002630: 60AF0100
	.long 0x84                                                 // 000000002634: 00000084
	.long 0x408                                                // 000000002638: 00000408
	.long 0                                                    // 00000000263C: 00000000

	.text

	.p2align	8
	.type	copy,@function
	.size	copy, copy_symend-copy
copy:
	s_clause 0x2                                               // 000000003700: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 000000003704: F40000C0 F8000038
	s_load_b64 s[4:5], s[0:1], null                            // 00000000370C: F4040100 F8000000
	s_load_b32 s0, s[0:1], 0x8                                 // 000000003714: F4000000 F8000008
	s_lshl_b32 s1, s2, 6                                       // 00000000371C: 84018602
	v_mov_b32_e32 v1, 0                                        // 000000003720: 7E020280
	s_mov_b32 s33, 0                                           // 000000003724: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000003728: BF89FC07
	v_add3_u32 v0, s3, s1, v0                                  // 00000000372C: D6550000 04000203
	v_mov_b32_e32 v2, s0                                       // 000000003734: 7E040200
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000003738: BF870092
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000000373C: D73C0000 00020082
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 000000003744: D7006A00 00020004
	s_delay_alu instid0(VALU_DEP_2)                            // 00000000374C: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 000000003750: 40020205
	global_store_b32 v[0:1], v2, off                           // 000000003754: DC6A0000 007C0200
	s_nop 0                                                    // 00000000375C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000003760: BFB60003
	s_endpgm                                                   // 000000003764: BFB00000
copy_symend:
	.long 0xbf800000                                           // 000000003768: BF800000
	.long 0xbf800000                                           // 00000000376C: BF800000
	.long 0xbf800000                                           // 000000003770: BF800000
	.long 0xbf800000                                           // 000000003774: BF800000
	.long 0xbf800000                                           // 000000003778: BF800000
	.long 0xbf800000                                           // 00000000377C: BF800000
	.long 0xbf800000                                           // 000000003780: BF800000
	.long 0xbf800000                                           // 000000003784: BF800000
	.long 0xbf800000                                           // 000000003788: BF800000
	.long 0xbf800000                                           // 00000000378C: BF800000
	.long 0xbf800000                                           // 000000003790: BF800000
	.long 0xbf800000                                           // 000000003794: BF800000
	.long 0xbf800000                                           // 000000003798: BF800000
	.long 0xbf800000                                           // 00000000379C: BF800000
	.long 0xbf800000                                           // 0000000037A0: BF800000
	.long 0xbf800000                                           // 0000000037A4: BF800000
	.long 0xbf800000                                           // 0000000037A8: BF800000
	.long 0xbf800000                                           // 0000000037AC: BF800000
	.long 0xbf800000                                           // 0000000037B0: BF800000
	.long 0xbf800000                                           // 0000000037B4: BF800000
	.long 0xbf800000                                           // 0000000037B8: BF800000
	.long 0xbf800000                                           // 0000000037BC: BF800000
	.long 0xbf800000                                           // 0000000037C0: BF800000
	.long 0xbf800000                                           // 0000000037C4: BF800000
	.long 0xbf800000                                           // 0000000037C8: BF800000
	.long 0xbf800000                                           // 0000000037CC: BF800000
	.long 0xbf800000                                           // 0000000037D0: BF800000
	.long 0xbf800000                                           // 0000000037D4: BF800000
	.long 0xbf800000                                           // 0000000037D8: BF800000
	.long 0xbf800000                                           // 0000000037DC: BF800000
	.long 0xbf800000                                           // 0000000037E0: BF800000
	.long 0xbf800000                                           // 0000000037E4: BF800000
	.long 0xbf800000                                           // 0000000037E8: BF800000
	.long 0xbf800000                                           // 0000000037EC: BF800000
	.long 0xbf800000                                           // 0000000037F0: BF800000
	.long 0xbf800000                                           // 0000000037F4: BF800000
	.long 0xbf800000                                           // 0000000037F8: BF800000
	.long 0xbf800000                                           // 0000000037FC: BF800000

	.p2align	8
	.type	copy2,@function
	.size	copy2, copy2_symend-copy2
copy2:
	s_clause 0x2                                               // 000000003800: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 000000003804: F40000C0 F8000038
	s_load_b64 s[4:5], s[0:1], 0x8                             // 00000000380C: F4040100 F8000008
	s_load_b32 s0, s[0:1], null                                // 000000003814: F4000000 F8000000
	s_lshl_b32 s1, s2, 6                                       // 00000000381C: 84018602
	v_mov_b32_e32 v1, 0                                        // 000000003820: 7E020280
	s_mov_b32 s33, 0                                           // 000000003824: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000003828: BF89FC07
	v_add3_u32 v0, s3, s1, v0                                  // 00000000382C: D6550000 04000203
	v_mov_b32_e32 v2, s0                                       // 000000003834: 7E040200
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000003838: BF870092
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000000383C: D73C0000 00020082
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 000000003844: D7006A00 00020004
	s_delay_alu instid0(VALU_DEP_2)                            // 00000000384C: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 000000003850: 40020205
	global_store_b32 v[0:1], v2, off                           // 000000003854: DC6A0000 007C0200
	s_nop 0                                                    // 00000000385C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000003860: BFB60003
	s_endpgm                                                   // 000000003864: BFB00000
copy2_symend:
	.long 0xbf800000                                           // 000000003868: BF800000
	.long 0xbf800000                                           // 00000000386C: BF800000
	.long 0xbf800000                                           // 000000003870: BF800000
	.long 0xbf800000                                           // 000000003874: BF800000
	.long 0xbf800000                                           // 000000003878: BF800000
	.long 0xbf800000                                           // 00000000387C: BF800000
	.long 0xbf800000                                           // 000000003880: BF800000
	.long 0xbf800000                                           // 000000003884: BF800000
	.long 0xbf800000                                           // 000000003888: BF800000
	.long 0xbf800000                                           // 00000000388C: BF800000
	.long 0xbf800000                                           // 000000003890: BF800000
	.long 0xbf800000                                           // 000000003894: BF800000
	.long 0xbf800000                                           // 000000003898: BF800000
	.long 0xbf800000                                           // 00000000389C: BF800000
	.long 0xbf800000                                           // 0000000038A0: BF800000
	.long 0xbf800000                                           // 0000000038A4: BF800000
	.long 0xbf800000                                           // 0000000038A8: BF800000
	.long 0xbf800000                                           // 0000000038AC: BF800000
	.long 0xbf800000                                           // 0000000038B0: BF800000
	.long 0xbf800000                                           // 0000000038B4: BF800000
	.long 0xbf800000                                           // 0000000038B8: BF800000
	.long 0xbf800000                                           // 0000000038BC: BF800000
	.long 0xbf800000                                           // 0000000038C0: BF800000
	.long 0xbf800000                                           // 0000000038C4: BF800000
	.long 0xbf800000                                           // 0000000038C8: BF800000
	.long 0xbf800000                                           // 0000000038CC: BF800000
	.long 0xbf800000                                           // 0000000038D0: BF800000
	.long 0xbf800000                                           // 0000000038D4: BF800000
	.long 0xbf800000                                           // 0000000038D8: BF800000
	.long 0xbf800000                                           // 0000000038DC: BF800000
	.long 0xbf800000                                           // 0000000038E0: BF800000
	.long 0xbf800000                                           // 0000000038E4: BF800000
	.long 0xbf800000                                           // 0000000038E8: BF800000
	.long 0xbf800000                                           // 0000000038EC: BF800000
	.long 0xbf800000                                           // 0000000038F0: BF800000
	.long 0xbf800000                                           // 0000000038F4: BF800000
	.long 0xbf800000                                           // 0000000038F8: BF800000
	.long 0xbf800000                                           // 0000000038FC: BF800000

	.p2align	8
	.type	copy3,@function
	.size	copy3, copy3_symend-copy3
copy3:
	s_clause 0x1                                               // 000000003900: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000003904: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000000390C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000003914: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000003920: 84028302
	v_bfe_u32 v3, v0, 10, 10                                   // 000000003924: D6100003 02291500
	s_mov_b32 s33, 0                                           // 00000000392C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000003930: BF89FC07
	v_add3_u32 v1, s4, s2, v1                                  // 000000003934: D6550001 04040404
	s_lshl_b32 s2, s3, 3                                       // 00000000393C: 84028303
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000003940: BF870121
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000003944: D73C0000 00020282
	v_add3_u32 v2, s6, s2, v3                                  // 00000000394C: D6550002 040C0406
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000003954: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3)                            // 00000000395C: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000003960: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000003964: DC6A0000 007C0200
	s_nop 0                                                    // 00000000396C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000003970: BFB60003
	s_endpgm                                                   // 000000003974: BFB00000
copy3_symend:
	.long 0xbf800000                                           // 000000003978: BF800000
	.long 0xbf800000                                           // 00000000397C: BF800000
	.long 0xbf800000                                           // 000000003980: BF800000
	.long 0xbf800000                                           // 000000003984: BF800000
	.long 0xbf800000                                           // 000000003988: BF800000
	.long 0xbf800000                                           // 00000000398C: BF800000
	.long 0xbf800000                                           // 000000003990: BF800000
	.long 0xbf800000                                           // 000000003994: BF800000
	.long 0xbf800000                                           // 000000003998: BF800000
	.long 0xbf800000                                           // 00000000399C: BF800000
	.long 0xbf800000                                           // 0000000039A0: BF800000
	.long 0xbf800000                                           // 0000000039A4: BF800000
	.long 0xbf800000                                           // 0000000039A8: BF800000
	.long 0xbf800000                                           // 0000000039AC: BF800000
	.long 0xbf800000                                           // 0000000039B0: BF800000
	.long 0xbf800000                                           // 0000000039B4: BF800000
	.long 0xbf800000                                           // 0000000039B8: BF800000
	.long 0xbf800000                                           // 0000000039BC: BF800000
	.long 0xbf800000                                           // 0000000039C0: BF800000
	.long 0xbf800000                                           // 0000000039C4: BF800000
	.long 0xbf800000                                           // 0000000039C8: BF800000
	.long 0xbf800000                                           // 0000000039CC: BF800000
	.long 0xbf800000                                           // 0000000039D0: BF800000
	.long 0xbf800000                                           // 0000000039D4: BF800000
	.long 0xbf800000                                           // 0000000039D8: BF800000
	.long 0xbf800000                                           // 0000000039DC: BF800000
	.long 0xbf800000                                           // 0000000039E0: BF800000
	.long 0xbf800000                                           // 0000000039E4: BF800000
	.long 0xbf800000                                           // 0000000039E8: BF800000
	.long 0xbf800000                                           // 0000000039EC: BF800000
	.long 0xbf800000                                           // 0000000039F0: BF800000
	.long 0xbf800000                                           // 0000000039F4: BF800000
	.long 0xbf800000                                           // 0000000039F8: BF800000
	.long 0xbf800000                                           // 0000000039FC: BF800000

	.p2align	8
	.type	copy4,@function
	.size	copy4, copy4_symend-copy4
copy4:
	s_clause 0x2                                               // 000000003A00: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 000000003A04: F40000C0 F8000038
	s_load_b64 s[4:5], s[0:1], 0x8                             // 000000003A0C: F4040100 F8000008
	s_load_b32 s0, s[0:1], null                                // 000000003A14: F4000000 F8000000
	s_lshl_b32 s1, s2, 6                                       // 000000003A1C: 84018602
	v_mov_b32_e32 v1, 0                                        // 000000003A20: 7E020280
	s_mov_b32 s33, 0                                           // 000000003A24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000003A28: BF89FC07
	v_add3_u32 v0, s3, s1, v0                                  // 000000003A2C: D6550000 04000203
	v_mov_b32_e32 v2, s0                                       // 000000003A34: 7E040200
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000003A38: BF870092
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000003A3C: D73C0000 00020082
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 000000003A44: D7006A00 00020004
	s_delay_alu instid0(VALU_DEP_2)                            // 000000003A4C: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 000000003A50: 40020205
	global_store_b32 v[0:1], v2, off                           // 000000003A54: DC6A0000 007C0200
	s_nop 0                                                    // 000000003A5C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000003A60: BFB60003
	s_endpgm                                                   // 000000003A64: BFB00000
copy4_symend:
	.long 0xbf800000                                           // 000000003A68: BF800000
	.long 0xbf800000                                           // 000000003A6C: BF800000
	.long 0xbf800000                                           // 000000003A70: BF800000
	.long 0xbf800000                                           // 000000003A74: BF800000
	.long 0xbf800000                                           // 000000003A78: BF800000
	.long 0xbf800000                                           // 000000003A7C: BF800000
	.long 0xbf800000                                           // 000000003A80: BF800000
	.long 0xbf800000                                           // 000000003A84: BF800000
	.long 0xbf800000                                           // 000000003A88: BF800000
	.long 0xbf800000                                           // 000000003A8C: BF800000
	.long 0xbf800000                                           // 000000003A90: BF800000
	.long 0xbf800000                                           // 000000003A94: BF800000
	.long 0xbf800000                                           // 000000003A98: BF800000
	.long 0xbf800000                                           // 000000003A9C: BF800000
	.long 0xbf800000                                           // 000000003AA0: BF800000
	.long 0xbf800000                                           // 000000003AA4: BF800000
	.long 0xbf800000                                           // 000000003AA8: BF800000
	.long 0xbf800000                                           // 000000003AAC: BF800000
	.long 0xbf800000                                           // 000000003AB0: BF800000
	.long 0xbf800000                                           // 000000003AB4: BF800000
	.long 0xbf800000                                           // 000000003AB8: BF800000
	.long 0xbf800000                                           // 000000003ABC: BF800000
	.long 0xbf800000                                           // 000000003AC0: BF800000
	.long 0xbf800000                                           // 000000003AC4: BF800000
	.long 0xbf800000                                           // 000000003AC8: BF800000
	.long 0xbf800000                                           // 000000003ACC: BF800000
	.long 0xbf800000                                           // 000000003AD0: BF800000
	.long 0xbf800000                                           // 000000003AD4: BF800000
	.long 0xbf800000                                           // 000000003AD8: BF800000
	.long 0xbf800000                                           // 000000003ADC: BF800000
	.long 0xbf800000                                           // 000000003AE0: BF800000
	.long 0xbf800000                                           // 000000003AE4: BF800000
	.long 0xbf800000                                           // 000000003AE8: BF800000
	.long 0xbf800000                                           // 000000003AEC: BF800000
	.long 0xbf800000                                           // 000000003AF0: BF800000
	.long 0xbf800000                                           // 000000003AF4: BF800000
	.long 0xbf800000                                           // 000000003AF8: BF800000
	.long 0xbf800000                                           // 000000003AFC: BF800000

	.p2align	8
	.type	copy5,@function
	.size	copy5, copy5_symend-copy5
copy5:
	s_clause 0x2                                               // 000000003B00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000003B04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000003B0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000003B14: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000003B1C: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000003B28: 84028102
	v_bfe_u32 v3, v0, 10, 10                                   // 000000003B2C: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 000000003B34: D6100004 02292900
	s_lshl_b32 s3, s3, 1                                       // 000000003B3C: 84038103
	s_mov_b32 s33, 0                                           // 000000003B40: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000003B44: BF89FC07
	v_add3_u32 v0, s8, s2, v2                                  // 000000003B48: D6550000 04080408
	v_add_nc_u32_e32 v2, v4, v3                                // 000000003B50: 4A040704
	s_lshl_b32 s2, s4, 2                                       // 000000003B54: 84028204
	s_add_i32 s4, s5, s10                                      // 000000003B58: 81040A05
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000003B5C: BF870139
	s_add_i32 s4, s4, s2                                       // 000000003B60: 81040204
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000003B64: D73C0000 00020082
	v_add3_u32 v2, s4, s3, v2                                  // 000000003B6C: D6550002 04080604
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000003B74: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3)                            // 000000003B7C: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000003B80: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000003B84: DC6A0000 007C0200
	s_nop 0                                                    // 000000003B8C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000003B90: BFB60003
	s_endpgm                                                   // 000000003B94: BFB00000
copy5_symend:
	.long 0xbf800000                                           // 000000003B98: BF800000
	.long 0xbf800000                                           // 000000003B9C: BF800000
	.long 0xbf800000                                           // 000000003BA0: BF800000
	.long 0xbf800000                                           // 000000003BA4: BF800000
	.long 0xbf800000                                           // 000000003BA8: BF800000
	.long 0xbf800000                                           // 000000003BAC: BF800000
	.long 0xbf800000                                           // 000000003BB0: BF800000
	.long 0xbf800000                                           // 000000003BB4: BF800000
	.long 0xbf800000                                           // 000000003BB8: BF800000
	.long 0xbf800000                                           // 000000003BBC: BF800000
	.long 0xbf800000                                           // 000000003BC0: BF800000
	.long 0xbf800000                                           // 000000003BC4: BF800000
	.long 0xbf800000                                           // 000000003BC8: BF800000
	.long 0xbf800000                                           // 000000003BCC: BF800000
	.long 0xbf800000                                           // 000000003BD0: BF800000
	.long 0xbf800000                                           // 000000003BD4: BF800000
	.long 0xbf800000                                           // 000000003BD8: BF800000
	.long 0xbf800000                                           // 000000003BDC: BF800000
	.long 0xbf800000                                           // 000000003BE0: BF800000
	.long 0xbf800000                                           // 000000003BE4: BF800000
	.long 0xbf800000                                           // 000000003BE8: BF800000
	.long 0xbf800000                                           // 000000003BEC: BF800000
	.long 0xbf800000                                           // 000000003BF0: BF800000
	.long 0xbf800000                                           // 000000003BF4: BF800000
	.long 0xbf800000                                           // 000000003BF8: BF800000
	.long 0xbf800000                                           // 000000003BFC: BF800000

	.p2align	8
	.type	copy6,@function
	.size	copy6, copy6_symend-copy6
copy6:
	s_clause 0x1                                               // 000000003C00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x40                          // 000000003C04: F4080200 F8000040
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000003C0C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000003C14: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 000000003C20: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 000000003C28: D6100004 02292900
	s_lshl_b32 s3, s3, 1                                       // 000000003C30: 84038103
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000003C34: BF870143
	v_lshl_or_b32 v0, s2, 1, v2                                // 000000003C38: D6560000 04090202
	s_lshl_b32 s2, s4, 2                                       // 000000003C40: 84028204
	s_mov_b32 s33, 0                                           // 000000003C44: BEA10080
	v_add_nc_u32_e32 v2, v4, v3                                // 000000003C48: 4A040704
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000003C4C: D73C0000 00020082
	s_waitcnt lgkmcnt(0)                                       // 000000003C54: BF89FC07
	s_add_i32 s4, s10, s8                                      // 000000003C58: 8104080A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000003C5C: BF870121
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000003C60: D7006A00 00020000
	s_add_i32 s4, s4, s2                                       // 000000003C68: 81040204
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000003C6C: 40020201
	v_add3_u32 v2, s4, s3, v2                                  // 000000003C70: D6550002 04080604
	global_store_b32 v[0:1], v2, off                           // 000000003C78: DC6A0000 007C0200
	s_nop 0                                                    // 000000003C80: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000003C84: BFB60003
	s_endpgm                                                   // 000000003C88: BFB00000
copy6_symend:
	.long 0xbf800000                                           // 000000003C8C: BF800000
	.long 0xbf800000                                           // 000000003C90: BF800000
	.long 0xbf800000                                           // 000000003C94: BF800000
	.long 0xbf800000                                           // 000000003C98: BF800000
	.long 0xbf800000                                           // 000000003C9C: BF800000
	.long 0xbf800000                                           // 000000003CA0: BF800000
	.long 0xbf800000                                           // 000000003CA4: BF800000
	.long 0xbf800000                                           // 000000003CA8: BF800000
	.long 0xbf800000                                           // 000000003CAC: BF800000
	.long 0xbf800000                                           // 000000003CB0: BF800000
	.long 0xbf800000                                           // 000000003CB4: BF800000
	.long 0xbf800000                                           // 000000003CB8: BF800000
	.long 0xbf800000                                           // 000000003CBC: BF800000
	.long 0xbf800000                                           // 000000003CC0: BF800000
	.long 0xbf800000                                           // 000000003CC4: BF800000
	.long 0xbf800000                                           // 000000003CC8: BF800000
	.long 0xbf800000                                           // 000000003CCC: BF800000
	.long 0xbf800000                                           // 000000003CD0: BF800000
	.long 0xbf800000                                           // 000000003CD4: BF800000
	.long 0xbf800000                                           // 000000003CD8: BF800000
	.long 0xbf800000                                           // 000000003CDC: BF800000
	.long 0xbf800000                                           // 000000003CE0: BF800000
	.long 0xbf800000                                           // 000000003CE4: BF800000
	.long 0xbf800000                                           // 000000003CE8: BF800000
	.long 0xbf800000                                           // 000000003CEC: BF800000
	.long 0xbf800000                                           // 000000003CF0: BF800000
	.long 0xbf800000                                           // 000000003CF4: BF800000
	.long 0xbf800000                                           // 000000003CF8: BF800000
	.long 0xbf800000                                           // 000000003CFC: BF800000

	.p2align	8
	.type	cpFACE,@function
	.size	cpFACE, cpFACE_symend-cpFACE
cpFACE:
	s_clause 0x1                                               // 000000003D00: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000003D04: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 000000003D0C: F4040000 F8000000
	s_lshl_b32 s2, s2, 6                                       // 000000003D14: 84028602
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, 0xface          // 000000003D18: CA100080 010200FF 0000FACE
	s_mov_b32 s33, 0                                           // 000000003D24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000003D28: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 000000003D2C: D6550000 04000403
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000003D34: BF870091
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000003D38: D73C0000 00020082
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000003D40: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 000000003D48: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000003D4C: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000003D50: DC6A0000 007C0200
	s_nop 0                                                    // 000000003D58: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000003D5C: BFB60003
	s_endpgm                                                   // 000000003D60: BFB00000
cpFACE_symend:
	.long 0xbf9f0000                                           // 000000003D64: BF9F0000
	.long 0xbf9f0000                                           // 000000003D68: BF9F0000
	.long 0xbf9f0000                                           // 000000003D6C: BF9F0000
	.long 0xbf9f0000                                           // 000000003D70: BF9F0000
	.long 0xbf9f0000                                           // 000000003D74: BF9F0000
	.long 0xbf9f0000                                           // 000000003D78: BF9F0000
	.long 0xbf9f0000                                           // 000000003D7C: BF9F0000
	.long 0xbf9f0000                                           // 000000003D80: BF9F0000
	.long 0xbf9f0000                                           // 000000003D84: BF9F0000
	.long 0xbf9f0000                                           // 000000003D88: BF9F0000
	.long 0xbf9f0000                                           // 000000003D8C: BF9F0000
	.long 0xbf9f0000                                           // 000000003D90: BF9F0000
	.long 0xbf9f0000                                           // 000000003D94: BF9F0000
	.long 0xbf9f0000                                           // 000000003D98: BF9F0000
	.long 0xbf9f0000                                           // 000000003D9C: BF9F0000
	.long 0xbf9f0000                                           // 000000003DA0: BF9F0000
	.long 0xbf9f0000                                           // 000000003DA4: BF9F0000
	.long 0xbf9f0000                                           // 000000003DA8: BF9F0000
	.long 0xbf9f0000                                           // 000000003DAC: BF9F0000
	.long 0xbf9f0000                                           // 000000003DB0: BF9F0000
	.long 0xbf9f0000                                           // 000000003DB4: BF9F0000
	.long 0xbf9f0000                                           // 000000003DB8: BF9F0000
	.long 0xbf9f0000                                           // 000000003DBC: BF9F0000
	.long 0xbf9f0000                                           // 000000003DC0: BF9F0000
	.long 0xbf9f0000                                           // 000000003DC4: BF9F0000
	.long 0xbf9f0000                                           // 000000003DC8: BF9F0000
	.long 0xbf9f0000                                           // 000000003DCC: BF9F0000
	.long 0xbf9f0000                                           // 000000003DD0: BF9F0000
	.long 0xbf9f0000                                           // 000000003DD4: BF9F0000
	.long 0xbf9f0000                                           // 000000003DD8: BF9F0000
	.long 0xbf9f0000                                           // 000000003DDC: BF9F0000
	.long 0xbf9f0000                                           // 000000003DE0: BF9F0000
	.long 0xbf9f0000                                           // 000000003DE4: BF9F0000
	.long 0xbf9f0000                                           // 000000003DE8: BF9F0000
	.long 0xbf9f0000                                           // 000000003DEC: BF9F0000
	.long 0xbf9f0000                                           // 000000003DF0: BF9F0000
	.long 0xbf9f0000                                           // 000000003DF4: BF9F0000
	.long 0xbf9f0000                                           // 000000003DF8: BF9F0000
	.long 0xbf9f0000                                           // 000000003DFC: BF9F0000
	.long 0xbf9f0000                                           // 000000003E00: BF9F0000
	.long 0xbf9f0000                                           // 000000003E04: BF9F0000
	.long 0xbf9f0000                                           // 000000003E08: BF9F0000
	.long 0xbf9f0000                                           // 000000003E0C: BF9F0000
	.long 0xbf9f0000                                           // 000000003E10: BF9F0000
	.long 0xbf9f0000                                           // 000000003E14: BF9F0000
	.long 0xbf9f0000                                           // 000000003E18: BF9F0000
	.long 0xbf9f0000                                           // 000000003E1C: BF9F0000
	.long 0xbf9f0000                                           // 000000003E20: BF9F0000
	.long 0xbf9f0000                                           // 000000003E24: BF9F0000
	.long 0xbf9f0000                                           // 000000003E28: BF9F0000
	.long 0xbf9f0000                                           // 000000003E2C: BF9F0000
	.long 0xbf9f0000                                           // 000000003E30: BF9F0000
	.long 0xbf9f0000                                           // 000000003E34: BF9F0000
	.long 0xbf9f0000                                           // 000000003E38: BF9F0000
	.long 0xbf9f0000                                           // 000000003E3C: BF9F0000
	.long 0xbf9f0000                                           // 000000003E40: BF9F0000
	.long 0xbf9f0000                                           // 000000003E44: BF9F0000
	.long 0xbf9f0000                                           // 000000003E48: BF9F0000
	.long 0xbf9f0000                                           // 000000003E4C: BF9F0000
	.long 0xbf9f0000                                           // 000000003E50: BF9F0000
	.long 0xbf9f0000                                           // 000000003E54: BF9F0000
	.long 0xbf9f0000                                           // 000000003E58: BF9F0000
	.long 0xbf9f0000                                           // 000000003E5C: BF9F0000
	.long 0xbf9f0000                                           // 000000003E60: BF9F0000
	.long 0xbf9f0000                                           // 000000003E64: BF9F0000
	.long 0xbf9f0000                                           // 000000003E68: BF9F0000
	.long 0xbf9f0000                                           // 000000003E6C: BF9F0000
	.long 0xbf9f0000                                           // 000000003E70: BF9F0000
	.long 0xbf9f0000                                           // 000000003E74: BF9F0000
	.long 0xbf9f0000                                           // 000000003E78: BF9F0000
	.long 0xbf9f0000                                           // 000000003E7C: BF9F0000
	.long 0xbf9f0000                                           // 000000003E80: BF9F0000
	.long 0xbf9f0000                                           // 000000003E84: BF9F0000
	.long 0xbf9f0000                                           // 000000003E88: BF9F0000
	.long 0xbf9f0000                                           // 000000003E8C: BF9F0000
	.long 0xbf9f0000                                           // 000000003E90: BF9F0000
	.long 0xbf9f0000                                           // 000000003E94: BF9F0000
	.long 0xbf9f0000                                           // 000000003E98: BF9F0000
	.long 0xbf9f0000                                           // 000000003E9C: BF9F0000
	.long 0xbf9f0000                                           // 000000003EA0: BF9F0000
	.long 0xbf9f0000                                           // 000000003EA4: BF9F0000
	.long 0xbf9f0000                                           // 000000003EA8: BF9F0000
	.long 0xbf9f0000                                           // 000000003EAC: BF9F0000
	.long 0xbf9f0000                                           // 000000003EB0: BF9F0000
	.long 0xbf9f0000                                           // 000000003EB4: BF9F0000
	.long 0xbf9f0000                                           // 000000003EB8: BF9F0000
	.long 0xbf9f0000                                           // 000000003EBC: BF9F0000
	.long 0xbf9f0000                                           // 000000003EC0: BF9F0000
	.long 0xbf9f0000                                           // 000000003EC4: BF9F0000
	.long 0xbf9f0000                                           // 000000003EC8: BF9F0000
	.long 0xbf9f0000                                           // 000000003ECC: BF9F0000
	.long 0xbf9f0000                                           // 000000003ED0: BF9F0000
	.long 0xbf9f0000                                           // 000000003ED4: BF9F0000
	.long 0xbf9f0000                                           // 000000003ED8: BF9F0000
	.long 0xbf9f0000                                           // 000000003EDC: BF9F0000
	.long 0xbf9f0000                                           // 000000003EE0: BF9F0000
	.long 0xbf9f0000                                           // 000000003EE4: BF9F0000
	.long 0xbf9f0000                                           // 000000003EE8: BF9F0000
	.long 0xbf9f0000                                           // 000000003EEC: BF9F0000
	.long 0xbf9f0000                                           // 000000003EF0: BF9F0000
	.long 0xbf9f0000                                           // 000000003EF4: BF9F0000
	.long 0xbf9f0000                                           // 000000003EF8: BF9F0000
	.long 0xbf9f0000                                           // 000000003EFC: BF9F0000

	.section	.dynamic,#alloc,#write
_DYNAMIC:
	.long 0x6                                                  // 000000004F00: 00000006
	.long 0                                                    // 000000004F04: 00000000
	.long 0x2198                                               // 000000004F08: 00002198
	.long 0                                                    // 000000004F0C: 00000000
	.long 0xb                                                  // 000000004F10: 0000000B
	.long 0                                                    // 000000004F14: 00000000
	.long 0x18                                                 // 000000004F18: 00000018
	.long 0                                                    // 000000004F1C: 00000000
	.long 0x5                                                  // 000000004F20: 00000005
	.long 0                                                    // 000000004F24: 00000000
	.long 0x23f4                                               // 000000004F28: 000023F4
	.long 0                                                    // 000000004F2C: 00000000
	.ascii "\n"                                                // 000000004F30: 0A
	.byte 0                                                    // 000000004F31: 00
	.short 0                                                   // 000000004F32: 0000
	.long 0                                                    // 000000004F34: 00000000
	.ascii "j"                                                 // 000000004F38: 6A
	.byte 0                                                    // 000000004F39: 00
	.short 0                                                   // 000000004F3A: 0000
	.long 0                                                    // 000000004F3C: 00000000
	.long 0x6ffffef5                                           // 000000004F40: 6FFFFEF5
	.long 0                                                    // 000000004F44: 00000000
	.long 0x2300                                               // 000000004F48: 00002300
	.long 0                                                    // 000000004F4C: 00000000
	.long 0x4                                                  // 000000004F50: 00000004
	.long 0                                                    // 000000004F54: 00000000
	.ascii "t#"                                                // 000000004F58: 2374
	.short 0                                                   // 000000004F5A: 0000
	.long 0                                                    // 000000004F5C: 00000000
	.long 0                                                    // 000000004F60: 00000000
	.long 0                                                    // 000000004F64: 00000000
	.long 0                                                    // 000000004F68: 00000000
	.long 0                                                    // 000000004F6C: 00000000

	.section	.comment,"MS",@progbits
	.long 0x616c6300                                           // 000000000000: 616C6300
	.ascii "ng version 18.0.0 (ssh://gerritgit/lightning/ec/llvm-project 12ba2f50c2cd6ac494748370b29a8838deb2fb39)"// 000000000004: 7620676E 69737265 31206E6F 2E302E38 73282030 2F3A6873 7265672F 67746972 6C2F7469 74686769 676E696E 2F63652F 6D766C6C 6F72702D 7463656A 62323120 35663261 63326330 63613664 37343934 37333834 39326230 33383861 62656438 33626632 2939
	.short 0x4c00                                              // 00000000006A: 4C00
	.ascii "inker: LLD 18.0.0"                                 // 00000000006C: 656B6E69 4C203A72 3120444C 2E302E38 30
	.byte 0                                                    // 00000000007D: 00

	.amdgpu_pal_metadata
---
amdhsa.kernels:
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           copy
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         copy.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           copy2
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         copy2.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           copy3
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         copy3.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           copy4
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         copy4.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           copy5
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         copy5.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           copy6
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         copy6.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           cpFACE
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         cpFACE.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
amdhsa.target:   amdgcn-amd-amdhsa--gfx1103
amdhsa.version:
  - 0x1
  - 0x2
amdpal.pipelines:
  - .registers:      {}
...
	.end_amdgpu_pal_metadata
