// llvm-mc -triple=amdgcn--amdhsa -mcpu=gfx1103 -mattr=+wavefrontsize32,+wavefrontsize64

	.section	.note,#alloc
	.section	.dynsym,#alloc
	.long 0                                                    // 000000057930: 00000000
	.long 0                                                    // 000000057934: 00000000
	.long 0                                                    // 000000057938: 00000000
	.long 0                                                    // 00000005793C: 00000000
	.long 0                                                    // 000000057940: 00000000
	.long 0                                                    // 000000057944: 00000000
	.ascii "l"                                                 // 000000057948: 6C
	.byte 0x4                                                  // 000000057949: 04
	.short 0                                                   // 00000005794A: 0000
	.long 0x70312                                              // 00000005794C: 00070312
	.long 0x69e00                                              // 000000057950: 00069E00
	.long 0                                                    // 000000057954: 00000000
	.long 0xfc                                                 // 000000057958: 000000FC
	.long 0                                                    // 00000005795C: 00000000
	.ascii "r "                                                // 000000057960: 2072
	.short 0                                                   // 000000057962: 0000
	.long 0x60311                                              // 000000057964: 00060311
	.long 0x649c0                                              // 000000057968: 000649C0
	.long 0                                                    // 00000005796C: 00000000
	.ascii "@"                                                 // 000000057970: 40
	.byte 0                                                    // 000000057971: 00
	.short 0                                                   // 000000057972: 0000
	.long 0                                                    // 000000057974: 00000000
	.long 0x2be6                                               // 000000057978: 00002BE6
	.long 0x70312                                              // 00000005797C: 00070312
	.long 0x76e00                                              // 000000057980: 00076E00
	.long 0                                                    // 000000057984: 00000000
	.long 0x184                                                // 000000057988: 00000184
	.long 0                                                    // 00000005798C: 00000000
	.long 0x2f8b                                               // 000000057990: 00002F8B
	.long 0x60311                                              // 000000057994: 00060311
	.long 0x65500                                              // 000000057998: 00065500
	.long 0                                                    // 00000005799C: 00000000
	.ascii "@"                                                 // 0000000579A0: 40
	.byte 0                                                    // 0000000579A1: 00
	.short 0                                                   // 0000000579A2: 0000
	.long 0                                                    // 0000000579A4: 00000000
	.ascii "H"                                                 // 0000000579A8: 48
	.byte 0x6                                                  // 0000000579A9: 06
	.short 0                                                   // 0000000579AA: 0000
	.long 0x60311                                              // 0000000579AC: 00060311
	.long 0x63280                                              // 0000000579B0: 00063280
	.long 0                                                    // 0000000579B4: 00000000
	.ascii "@"                                                 // 0000000579B8: 40
	.byte 0                                                    // 0000000579B9: 00
	.short 0                                                   // 0000000579BA: 0000
	.long 0                                                    // 0000000579BC: 00000000
	.ascii "*	"                                                // 0000000579C0: 092A
	.short 0                                                   // 0000000579C2: 0000
	.long 0x60311                                              // 0000000579C4: 00060311
	.long 0x63500                                              // 0000000579C8: 00063500
	.long 0                                                    // 0000000579CC: 00000000
	.ascii "@"                                                 // 0000000579D0: 40
	.byte 0                                                    // 0000000579D1: 00
	.short 0                                                   // 0000000579D2: 0000
	.long 0                                                    // 0000000579D4: 00000000
	.long 0xd00                                                // 0000000579D8: 00000D00
	.long 0x60311                                              // 0000000579DC: 00060311
	.ascii "@8"                                                // 0000000579E0: 3840
	.short 0x6                                                 // 0000000579E2: 0006
	.long 0                                                    // 0000000579E4: 00000000
	.ascii "@"                                                 // 0000000579E8: 40
	.byte 0                                                    // 0000000579E9: 00
	.short 0                                                   // 0000000579EA: 0000
	.long 0                                                    // 0000000579EC: 00000000
	.long 0x228e                                               // 0000000579F0: 0000228E
	.long 0x70312                                              // 0000000579F4: 00070312
	.long 0x73900                                              // 0000000579F8: 00073900
	.long 0                                                    // 0000000579FC: 00000000
	.ascii "\\"                                                // 000000057A00: 5C
	.byte 0x1                                                  // 000000057A01: 01
	.short 0                                                   // 000000057A02: 0000
	.long 0                                                    // 000000057A04: 00000000
	.long 0x24d1                                               // 000000057A08: 000024D1
	.long 0x70312                                              // 000000057A0C: 00070312
	.long 0x74500                                              // 000000057A10: 00074500
	.long 0                                                    // 000000057A14: 00000000
	.long 0x19c                                                // 000000057A18: 0000019C
	.long 0                                                    // 000000057A1C: 00000000
	.long 0x13dc                                               // 000000057A20: 000013DC
	.long 0x70312                                              // 000000057A24: 00070312
	.long 0x6f100                                              // 000000057A28: 0006F100
	.long 0                                                    // 000000057A2C: 00000000
	.ascii "4"                                                 // 000000057A30: 34
	.byte 0x1                                                  // 000000057A31: 01
	.short 0                                                   // 000000057A32: 0000
	.long 0                                                    // 000000057A34: 00000000
	.long 0x210c                                               // 000000057A38: 0000210C
	.long 0x60311                                              // 000000057A3C: 00060311
	.ascii "@J"                                                // 000000057A40: 4A40
	.short 0x6                                                 // 000000057A42: 0006
	.long 0                                                    // 000000057A44: 00000000
	.ascii "@"                                                 // 000000057A48: 40
	.byte 0                                                    // 000000057A49: 00
	.short 0                                                   // 000000057A4A: 0000
	.long 0                                                    // 000000057A4C: 00000000
	.ascii "f3"                                                // 000000057A50: 3366
	.short 0                                                   // 000000057A52: 0000
	.long 0x70312                                              // 000000057A54: 00070312
	.long 0x79800                                              // 000000057A58: 00079800
	.long 0                                                    // 000000057A5C: 00000000
	.long 0xf8                                                 // 000000057A60: 000000F8
	.long 0                                                    // 000000057A64: 00000000
	.long 0xcbb                                                // 000000057A68: 00000CBB
	.long 0x60311                                              // 000000057A6C: 00060311
	.long 0x63800                                              // 000000057A70: 00063800
	.long 0                                                    // 000000057A74: 00000000
	.ascii "@"                                                 // 000000057A78: 40
	.byte 0                                                    // 000000057A79: 00
	.short 0                                                   // 000000057A7A: 0000
	.long 0                                                    // 000000057A7C: 00000000
	.long 0x36ab                                               // 000000057A80: 000036AB
	.long 0x70312                                              // 000000057A84: 00070312
	.long 0x7a700                                              // 000000057A88: 0007A700
	.long 0                                                    // 000000057A8C: 00000000
	.long 0x8c                                                 // 000000057A90: 0000008C
	.long 0                                                    // 000000057A94: 00000000
	.long 0x2dbe                                               // 000000057A98: 00002DBE
	.long 0x60311                                              // 000000057A9C: 00060311
	.long 0x653c0                                              // 000000057AA0: 000653C0
	.long 0                                                    // 000000057AA4: 00000000
	.ascii "@"                                                 // 000000057AA8: 40
	.byte 0                                                    // 000000057AA9: 00
	.short 0                                                   // 000000057AAA: 0000
	.long 0                                                    // 000000057AAC: 00000000
	.long 0x35ce                                               // 000000057AB0: 000035CE
	.long 0x60311                                              // 000000057AB4: 00060311
	.long 0x659c0                                              // 000000057AB8: 000659C0
	.long 0                                                    // 000000057ABC: 00000000
	.ascii "@"                                                 // 000000057AC0: 40
	.byte 0                                                    // 000000057AC1: 00
	.short 0                                                   // 000000057AC2: 0000
	.long 0                                                    // 000000057AC4: 00000000
	.long 0x3a1b                                               // 000000057AC8: 00003A1B
	.long 0x60311                                              // 000000057ACC: 00060311
	.long 0x65e00                                              // 000000057AD0: 00065E00
	.long 0                                                    // 000000057AD4: 00000000
	.ascii "@"                                                 // 000000057AD8: 40
	.byte 0                                                    // 000000057AD9: 00
	.short 0                                                   // 000000057ADA: 0000
	.long 0                                                    // 000000057ADC: 00000000
	.long 0x5216                                               // 000000057AE0: 00005216
	.long 0x70312                                              // 000000057AE4: 00070312
	.long 0x81600                                              // 000000057AE8: 00081600
	.long 0                                                    // 000000057AEC: 00000000
	.long 0xb8                                                 // 000000057AF0: 000000B8
	.long 0                                                    // 000000057AF4: 00000000
	.ascii "~$"                                                // 000000057AF8: 247E
	.short 0                                                   // 000000057AFA: 0000
	.long 0x70312                                              // 000000057AFC: 00070312
	.long 0x74400                                              // 000000057B00: 00074400
	.long 0                                                    // 000000057B04: 00000000
	.long 0xe4                                                 // 000000057B08: 000000E4
	.long 0                                                    // 000000057B0C: 00000000
	.long 0x4791                                               // 000000057B10: 00004791
	.long 0x70312                                              // 000000057B14: 00070312
	.long 0x7e900                                              // 000000057B18: 0007E900
	.long 0                                                    // 000000057B1C: 00000000
	.ascii "@"                                                 // 000000057B20: 40
	.byte 0x1                                                  // 000000057B21: 01
	.short 0                                                   // 000000057B22: 0000
	.long 0                                                    // 000000057B24: 00000000
	.ascii "/"                                                 // 000000057B28: 2F
	.byte 0x14                                                 // 000000057B29: 14
	.short 0                                                   // 000000057B2A: 0000
	.long 0x70312                                              // 000000057B2C: 00070312
	.long 0x6f300                                              // 000000057B30: 0006F300
	.long 0                                                    // 000000057B34: 00000000
	.long 0xd4                                                 // 000000057B38: 000000D4
	.long 0                                                    // 000000057B3C: 00000000
	.ascii "c"                                                 // 000000057B40: 63
	.byte 0x1a                                                 // 000000057B41: 1A
	.short 0                                                   // 000000057B42: 0000
	.long 0x60311                                              // 000000057B44: 00060311
	.long 0x64480                                              // 000000057B48: 00064480
	.long 0                                                    // 000000057B4C: 00000000
	.ascii "@"                                                 // 000000057B50: 40
	.byte 0                                                    // 000000057B51: 00
	.short 0                                                   // 000000057B52: 0000
	.long 0                                                    // 000000057B54: 00000000
	.ascii "^+"                                                // 000000057B58: 2B5E
	.short 0                                                   // 000000057B5A: 0000
	.long 0x60311                                              // 000000057B5C: 00060311
	.long 0x65200                                              // 000000057B60: 00065200
	.long 0                                                    // 000000057B64: 00000000
	.ascii "@"                                                 // 000000057B68: 40
	.byte 0                                                    // 000000057B69: 00
	.short 0                                                   // 000000057B6A: 0000
	.long 0                                                    // 000000057B6C: 00000000
	.long 0x4b1e                                               // 000000057B70: 00004B1E
	.long 0x60311                                              // 000000057B74: 00060311
	.ascii "@k"                                                // 000000057B78: 6B40
	.short 0x6                                                 // 000000057B7A: 0006
	.long 0                                                    // 000000057B7C: 00000000
	.ascii "@"                                                 // 000000057B80: 40
	.byte 0                                                    // 000000057B81: 00
	.short 0                                                   // 000000057B82: 0000
	.long 0                                                    // 000000057B84: 00000000
	.long 0x57f5                                               // 000000057B88: 000057F5
	.long 0x70312                                              // 000000057B8C: 00070312
	.long 0x82d00                                              // 000000057B90: 00082D00
	.long 0                                                    // 000000057B94: 00000000
	.long 0x88                                                 // 000000057B98: 00000088
	.long 0                                                    // 000000057B9C: 00000000
	.long 0x1001                                               // 000000057BA0: 00001001
	.long 0x60311                                              // 000000057BA4: 00060311
	.long 0x63ac0                                              // 000000057BA8: 00063AC0
	.long 0                                                    // 000000057BAC: 00000000
	.ascii "@"                                                 // 000000057BB0: 40
	.byte 0                                                    // 000000057BB1: 00
	.short 0                                                   // 000000057BB2: 0000
	.long 0                                                    // 000000057BB4: 00000000
	.long 0x20a2                                               // 000000057BB8: 000020A2
	.long 0x70312                                              // 000000057BBC: 00070312
	.long 0x72f00                                              // 000000057BC0: 00072F00
	.long 0                                                    // 000000057BC4: 00000000
	.long 0x110                                                // 000000057BC8: 00000110
	.long 0                                                    // 000000057BCC: 00000000
	.ascii ";5"                                                // 000000057BD0: 353B
	.short 0                                                   // 000000057BD2: 0000
	.long 0x60311                                              // 000000057BD4: 00060311
	.ascii "@Y"                                                // 000000057BD8: 5940
	.short 0x6                                                 // 000000057BDA: 0006
	.long 0                                                    // 000000057BDC: 00000000
	.ascii "@"                                                 // 000000057BE0: 40
	.byte 0                                                    // 000000057BE1: 00
	.short 0                                                   // 000000057BE2: 0000
	.long 0                                                    // 000000057BE4: 00000000
	.ascii "?8"                                                // 000000057BE8: 383F
	.short 0                                                   // 000000057BEA: 0000
	.long 0x60311                                              // 000000057BEC: 00060311
	.ascii "@\\"                                               // 000000057BF0: 5C40
	.short 0x6                                                 // 000000057BF2: 0006
	.long 0                                                    // 000000057BF4: 00000000
	.ascii "@"                                                 // 000000057BF8: 40
	.byte 0                                                    // 000000057BF9: 00
	.short 0                                                   // 000000057BFA: 0000
	.long 0                                                    // 000000057BFC: 00000000
	.long 0x3ae8                                               // 000000057C00: 00003AE8
	.long 0x70312                                              // 000000057C04: 00070312
	.long 0x7b800                                              // 000000057C08: 0007B800
	.long 0                                                    // 000000057C0C: 00000000
	.long 0xac                                                 // 000000057C10: 000000AC
	.long 0                                                    // 000000057C14: 00000000
	.long 0x4e10                                               // 000000057C18: 00004E10
	.long 0x70312                                              // 000000057C1C: 00070312
	.long 0x80400                                              // 000000057C20: 00080400
	.long 0                                                    // 000000057C24: 00000000
	.long 0x10c                                                // 000000057C28: 0000010C
	.long 0                                                    // 000000057C2C: 00000000
	.ascii "["                                                 // 000000057C30: 5B
	.byte 0                                                    // 000000057C31: 00
	.short 0                                                   // 000000057C32: 0000
	.long 0x70312                                              // 000000057C34: 00070312
	.long 0x68900                                              // 000000057C38: 00068900
	.long 0                                                    // 000000057C3C: 00000000
	.long 0xe8                                                 // 000000057C40: 000000E8
	.long 0                                                    // 000000057C44: 00000000
	.ascii "*"                                                 // 000000057C48: 2A
	.byte 0x18                                                 // 000000057C49: 18
	.short 0                                                   // 000000057C4A: 0000
	.long 0x70312                                              // 000000057C4C: 00070312
	.long 0x70600                                              // 000000057C50: 00070600
	.long 0                                                    // 000000057C54: 00000000
	.long 0x8c                                                 // 000000057C58: 0000008C
	.long 0                                                    // 000000057C5C: 00000000
	.long 0x2c11                                               // 000000057C60: 00002C11
	.long 0x60311                                              // 000000057C64: 00060311
	.long 0x65280                                              // 000000057C68: 00065280
	.long 0                                                    // 000000057C6C: 00000000
	.ascii "@"                                                 // 000000057C70: 40
	.byte 0                                                    // 000000057C71: 00
	.short 0                                                   // 000000057C72: 0000
	.long 0                                                    // 000000057C74: 00000000
	.long 0xbd9                                                // 000000057C78: 00000BD9
	.long 0x60311                                              // 000000057C7C: 00060311
	.ascii "@7"                                                // 000000057C80: 3740
	.short 0x6                                                 // 000000057C82: 0006
	.long 0                                                    // 000000057C84: 00000000
	.ascii "@"                                                 // 000000057C88: 40
	.byte 0                                                    // 000000057C89: 00
	.short 0                                                   // 000000057C8A: 0000
	.long 0                                                    // 000000057C8C: 00000000
	.long 0x37b7                                               // 000000057C90: 000037B7
	.long 0x70312                                              // 000000057C94: 00070312
	.long 0x7ab00                                              // 000000057C98: 0007AB00
	.long 0                                                    // 000000057C9C: 00000000
	.ascii "|"                                                 // 000000057CA0: 7C
	.byte 0                                                    // 000000057CA1: 00
	.short 0                                                   // 000000057CA2: 0000
	.long 0                                                    // 000000057CA4: 00000000
	.long 0x4a98                                               // 000000057CA8: 00004A98
	.long 0x70312                                              // 000000057CAC: 00070312
	.long 0x7f600                                              // 000000057CB0: 0007F600
	.long 0                                                    // 000000057CB4: 00000000
	.long 0x118                                                // 000000057CB8: 00000118
	.long 0                                                    // 000000057CBC: 00000000
	.long 0x40c4                                               // 000000057CC0: 000040C4
	.long 0x60311                                              // 000000057CC4: 00060311
	.long 0x66380                                              // 000000057CC8: 00066380
	.long 0                                                    // 000000057CCC: 00000000
	.ascii "@"                                                 // 000000057CD0: 40
	.byte 0                                                    // 000000057CD1: 00
	.short 0                                                   // 000000057CD2: 0000
	.long 0                                                    // 000000057CD4: 00000000
	.long 0x292                                                // 000000057CD8: 00000292
	.long 0x60311                                              // 000000057CDC: 00060311
	.long 0x62f80                                              // 000000057CE0: 00062F80
	.long 0                                                    // 000000057CE4: 00000000
	.ascii "@"                                                 // 000000057CE8: 40
	.byte 0                                                    // 000000057CE9: 00
	.short 0                                                   // 000000057CEA: 0000
	.long 0                                                    // 000000057CEC: 00000000
	.long 0xfad                                                // 000000057CF0: 00000FAD
	.long 0x60311                                              // 000000057CF4: 00060311
	.long 0x63a80                                              // 000000057CF8: 00063A80
	.long 0                                                    // 000000057CFC: 00000000
	.ascii "@"                                                 // 000000057D00: 40
	.byte 0                                                    // 000000057D01: 00
	.short 0                                                   // 000000057D02: 0000
	.long 0                                                    // 000000057D04: 00000000
	.ascii "V"                                                 // 000000057D08: 56
	.byte 0x14                                                 // 000000057D09: 14
	.short 0                                                   // 000000057D0A: 0000
	.long 0x60311                                              // 000000057D0C: 00060311
	.ascii "@>"                                                // 000000057D10: 3E40
	.short 0x6                                                 // 000000057D12: 0006
	.long 0                                                    // 000000057D14: 00000000
	.ascii "@"                                                 // 000000057D18: 40
	.byte 0                                                    // 000000057D19: 00
	.short 0                                                   // 000000057D1A: 0000
	.long 0                                                    // 000000057D1C: 00000000
	.long 0x16cc                                               // 000000057D20: 000016CC
	.long 0x70312                                              // 000000057D24: 00070312
	.long 0x6ff00                                              // 000000057D28: 0006FF00
	.long 0                                                    // 000000057D2C: 00000000
	.ascii "T"                                                 // 000000057D30: 54
	.byte 0x1                                                  // 000000057D31: 01
	.short 0                                                   // 000000057D32: 0000
	.long 0                                                    // 000000057D34: 00000000
	.long 0x23ce                                               // 000000057D38: 000023CE
	.long 0x70312                                              // 000000057D3C: 00070312
	.long 0x74100                                              // 000000057D40: 00074100
	.long 0                                                    // 000000057D44: 00000000
	.long 0x100                                                // 000000057D48: 00000100
	.long 0                                                    // 000000057D4C: 00000000
	.long 0x50ca                                               // 000000057D50: 000050CA
	.long 0x70312                                              // 000000057D54: 00070312
	.long 0x81000                                              // 000000057D58: 00081000
	.long 0                                                    // 000000057D5C: 00000000
	.long 0x104                                                // 000000057D60: 00000104
	.long 0                                                    // 000000057D64: 00000000
	.long 0x5399                                               // 000000057D68: 00005399
	.long 0x60311                                              // 000000057D6C: 00060311
	.long 0x67180                                              // 000000057D70: 00067180
	.long 0                                                    // 000000057D74: 00000000
	.ascii "@"                                                 // 000000057D78: 40
	.byte 0                                                    // 000000057D79: 00
	.short 0                                                   // 000000057D7A: 0000
	.long 0                                                    // 000000057D7C: 00000000
	.ascii "*"                                                 // 000000057D80: 2A
	.byte 0x10                                                 // 000000057D81: 10
	.short 0                                                   // 000000057D82: 0000
	.long 0x70312                                              // 000000057D84: 00070312
	.long 0x6da00                                              // 000000057D88: 0006DA00
	.long 0                                                    // 000000057D8C: 00000000
	.ascii "4"                                                 // 000000057D90: 34
	.byte 0x1                                                  // 000000057D91: 01
	.short 0                                                   // 000000057D92: 0000
	.long 0                                                    // 000000057D94: 00000000
	.ascii "y"                                                 // 000000057D98: 79
	.byte 0x1b                                                 // 000000057D99: 1B
	.short 0                                                   // 000000057D9A: 0000
	.long 0x60311                                              // 000000057D9C: 00060311
	.long 0x645c0                                              // 000000057DA0: 000645C0
	.long 0                                                    // 000000057DA4: 00000000
	.ascii "@"                                                 // 000000057DA8: 40
	.byte 0                                                    // 000000057DA9: 00
	.short 0                                                   // 000000057DAA: 0000
	.long 0                                                    // 000000057DAC: 00000000
	.long 0x220c                                               // 000000057DB0: 0000220C
	.long 0x60311                                              // 000000057DB4: 00060311
	.long 0x64b00                                              // 000000057DB8: 00064B00
	.long 0                                                    // 000000057DBC: 00000000
	.ascii "@"                                                 // 000000057DC0: 40
	.byte 0                                                    // 000000057DC1: 00
	.short 0                                                   // 000000057DC2: 0000
	.long 0                                                    // 000000057DC4: 00000000
	.long 0x49bc                                               // 000000057DC8: 000049BC
	.long 0x60311                                              // 000000057DCC: 00060311
	.ascii "@j"                                                // 000000057DD0: 6A40
	.short 0x6                                                 // 000000057DD2: 0006
	.long 0                                                    // 000000057DD4: 00000000
	.ascii "@"                                                 // 000000057DD8: 40
	.byte 0                                                    // 000000057DD9: 00
	.short 0                                                   // 000000057DDA: 0000
	.long 0                                                    // 000000057DDC: 00000000
	.ascii "(W"                                                // 000000057DE0: 5728
	.short 0                                                   // 000000057DE2: 0000
	.long 0x70312                                              // 000000057DE4: 00070312
	.long 0x82a00                                              // 000000057DE8: 00082A00
	.long 0                                                    // 000000057DEC: 00000000
	.ascii "D"                                                 // 000000057DF0: 44
	.byte 0                                                    // 000000057DF1: 00
	.short 0                                                   // 000000057DF2: 0000
	.long 0                                                    // 000000057DF4: 00000000
	.ascii ";"                                                 // 000000057DF8: 3B
	.byte 0                                                    // 000000057DF9: 00
	.short 0                                                   // 000000057DFA: 0000
	.long 0x60311                                              // 000000057DFC: 00060311
	.long 0x62d00                                              // 000000057E00: 00062D00
	.long 0                                                    // 000000057E04: 00000000
	.ascii "@"                                                 // 000000057E08: 40
	.byte 0                                                    // 000000057E09: 00
	.short 0                                                   // 000000057E0A: 0000
	.long 0                                                    // 000000057E0C: 00000000
	.ascii "2"                                                 // 000000057E10: 32
	.byte 0x16                                                 // 000000057E11: 16
	.short 0                                                   // 000000057E12: 0000
	.long 0x70312                                              // 000000057E14: 00070312
	.long 0x6fc00                                              // 000000057E18: 0006FC00
	.long 0                                                    // 000000057E1C: 00000000
	.long 0xf8                                                 // 000000057E20: 000000F8
	.long 0                                                    // 000000057E24: 00000000
	.ascii "f)"                                                // 000000057E28: 2966
	.short 0                                                   // 000000057E2A: 0000
	.long 0x60311                                              // 000000057E2C: 00060311
	.long 0x65080                                              // 000000057E30: 00065080
	.long 0                                                    // 000000057E34: 00000000
	.ascii "@"                                                 // 000000057E38: 40
	.byte 0                                                    // 000000057E39: 00
	.short 0                                                   // 000000057E3A: 0000
	.long 0                                                    // 000000057E3C: 00000000
	.long 0x38c6                                               // 000000057E40: 000038C6
	.long 0x60311                                              // 000000057E44: 00060311
	.long 0x65cc0                                              // 000000057E48: 00065CC0
	.long 0                                                    // 000000057E4C: 00000000
	.ascii "@"                                                 // 000000057E50: 40
	.byte 0                                                    // 000000057E51: 00
	.short 0                                                   // 000000057E52: 0000
	.long 0                                                    // 000000057E54: 00000000
	.long 0x44e3                                               // 000000057E58: 000044E3
	.long 0x70312                                              // 000000057E5C: 00070312
	.long 0x7dc00                                              // 000000057E60: 0007DC00
	.long 0                                                    // 000000057E64: 00000000
	.long 0xfc                                                 // 000000057E68: 000000FC
	.long 0                                                    // 000000057E6C: 00000000
	.ascii "E"                                                 // 000000057E70: 45
	.byte 0x5                                                  // 000000057E71: 05
	.short 0                                                   // 000000057E72: 0000
	.long 0x70312                                              // 000000057E74: 00070312
	.long 0x6a100                                              // 000000057E78: 0006A100
	.long 0                                                    // 000000057E7C: 00000000
	.long 0xd4                                                 // 000000057E80: 000000D4
	.long 0                                                    // 000000057E84: 00000000
	.ascii "l"                                                 // 000000057E88: 6C
	.byte 0x8                                                  // 000000057E89: 08
	.short 0                                                   // 000000057E8A: 0000
	.long 0x70312                                              // 000000057E8C: 00070312
	.long 0x6af00                                              // 000000057E90: 0006AF00
	.long 0                                                    // 000000057E94: 00000000
	.ascii "T"                                                 // 000000057E98: 54
	.byte 0x1                                                  // 000000057E99: 01
	.short 0                                                   // 000000057E9A: 0000
	.long 0                                                    // 000000057E9C: 00000000
	.long 0x4308                                               // 000000057EA0: 00004308
	.long 0x60311                                              // 000000057EA4: 00060311
	.ascii "@e"                                                // 000000057EA8: 6540
	.short 0x6                                                 // 000000057EAA: 0006
	.long 0                                                    // 000000057EAC: 00000000
	.ascii "@"                                                 // 000000057EB0: 40
	.byte 0                                                    // 000000057EB1: 00
	.short 0                                                   // 000000057EB2: 0000
	.long 0                                                    // 000000057EB4: 00000000
	.long 0x56fd                                               // 000000057EB8: 000056FD
	.long 0x70312                                              // 000000057EBC: 00070312
	.long 0x82900                                              // 000000057EC0: 00082900
	.long 0                                                    // 000000057EC4: 00000000
	.ascii "l"                                                 // 000000057EC8: 6C
	.byte 0                                                    // 000000057EC9: 00
	.short 0                                                   // 000000057ECA: 0000
	.long 0                                                    // 000000057ECC: 00000000
	.ascii "l6"                                                // 000000057ED0: 366C
	.short 0                                                   // 000000057ED2: 0000
	.long 0x70312                                              // 000000057ED4: 00070312
	.long 0x7a600                                              // 000000057ED8: 0007A600
	.long 0                                                    // 000000057EDC: 00000000
	.ascii "h"                                                 // 000000057EE0: 68
	.byte 0                                                    // 000000057EE1: 00
	.short 0                                                   // 000000057EE2: 0000
	.long 0                                                    // 000000057EE4: 00000000
	.long 0x419b                                               // 000000057EE8: 0000419B
	.long 0x70312                                              // 000000057EEC: 00070312
	.long 0x7d100                                              // 000000057EF0: 0007D100
	.long 0                                                    // 000000057EF4: 00000000
	.long 0xec                                                 // 000000057EF8: 000000EC
	.long 0                                                    // 000000057EFC: 00000000
	.long 0x1e91                                               // 000000057F00: 00001E91
	.long 0x60311                                              // 000000057F04: 00060311
	.long 0x64880                                              // 000000057F08: 00064880
	.long 0                                                    // 000000057F0C: 00000000
	.ascii "@"                                                 // 000000057F10: 40
	.byte 0                                                    // 000000057F11: 00
	.short 0                                                   // 000000057F12: 0000
	.long 0                                                    // 000000057F14: 00000000
	.ascii "c4"                                                // 000000057F18: 3463
	.short 0                                                   // 000000057F1A: 0000
	.long 0x70312                                              // 000000057F1C: 00070312
	.long 0x79d00                                              // 000000057F20: 00079D00
	.long 0                                                    // 000000057F24: 00000000
	.long 0xfc                                                 // 000000057F28: 000000FC
	.long 0                                                    // 000000057F2C: 00000000
	.ascii "p"                                                 // 000000057F30: 70
	.byte 0x17                                                 // 000000057F31: 17
	.short 0                                                   // 000000057F32: 0000
	.long 0x60311                                              // 000000057F34: 00060311
	.long 0x64100                                              // 000000057F38: 00064100
	.long 0                                                    // 000000057F3C: 00000000
	.ascii "@"                                                 // 000000057F40: 40
	.byte 0                                                    // 000000057F41: 00
	.short 0                                                   // 000000057F42: 0000
	.long 0                                                    // 000000057F44: 00000000
	.ascii "/>"                                                // 000000057F48: 3E2F
	.short 0                                                   // 000000057F4A: 0000
	.long 0x70312                                              // 000000057F4C: 00070312
	.long 0x7c600                                              // 000000057F50: 0007C600
	.long 0                                                    // 000000057F54: 00000000
	.long 0x88                                                 // 000000057F58: 00000088
	.long 0                                                    // 000000057F5C: 00000000
	.long 0x3f7f                                               // 000000057F60: 00003F7F
	.long 0x60311                                              // 000000057F64: 00060311
	.long 0x66280                                              // 000000057F68: 00066280
	.long 0                                                    // 000000057F6C: 00000000
	.ascii "@"                                                 // 000000057F70: 40
	.byte 0                                                    // 000000057F71: 00
	.short 0                                                   // 000000057F72: 0000
	.long 0                                                    // 000000057F74: 00000000
	.long 0x3faf                                               // 000000057F78: 00003FAF
	.long 0x70312                                              // 000000057F7C: 00070312
	.long 0x7ca00                                              // 000000057F80: 0007CA00
	.long 0                                                    // 000000057F84: 00000000
	.long 0x9c                                                 // 000000057F88: 0000009C
	.long 0                                                    // 000000057F8C: 00000000
	.ascii "/F"                                                // 000000057F90: 462F
	.short 0                                                   // 000000057F92: 0000
	.long 0x70312                                              // 000000057F94: 00070312
	.long 0x7e200                                              // 000000057F98: 0007E200
	.long 0                                                    // 000000057F9C: 00000000
	.long 0x110                                                // 000000057FA0: 00000110
	.long 0                                                    // 000000057FA4: 00000000
	.long 0x55fb                                               // 000000057FA8: 000055FB
	.long 0x70312                                              // 000000057FAC: 00070312
	.long 0x82500                                              // 000000057FB0: 00082500
	.long 0                                                    // 000000057FB4: 00000000
	.ascii "@"                                                 // 000000057FB8: 40
	.byte 0                                                    // 000000057FB9: 00
	.short 0                                                   // 000000057FBA: 0000
	.long 0                                                    // 000000057FBC: 00000000
	.ascii "	Y"                                                // 000000057FC0: 5909
	.short 0                                                   // 000000057FC2: 0000
	.long 0x70312                                              // 000000057FC4: 00070312
	.long 0x83100                                              // 000000057FC8: 00083100
	.long 0                                                    // 000000057FCC: 00000000
	.ascii "l"                                                 // 000000057FD0: 6C
	.byte 0                                                    // 000000057FD1: 00
	.short 0                                                   // 000000057FD2: 0000
	.long 0                                                    // 000000057FD4: 00000000
	.long 0xf82                                                // 000000057FD8: 00000F82
	.long 0x70312                                              // 000000057FDC: 00070312
	.long 0x6d600                                              // 000000057FE0: 0006D600
	.long 0                                                    // 000000057FE4: 00000000
	.ascii "4"                                                 // 000000057FE8: 34
	.byte 0x1                                                  // 000000057FE9: 01
	.short 0                                                   // 000000057FEA: 0000
	.long 0                                                    // 000000057FEC: 00000000
	.long 0x1781                                               // 000000057FF0: 00001781
	.long 0x70312                                              // 000000057FF4: 00070312
	.long 0x70300                                              // 000000057FF8: 00070300
	.long 0                                                    // 000000057FFC: 00000000
	.ascii "`"                                                 // 000000058000: 60
	.byte 0                                                    // 000000058001: 00
	.short 0                                                   // 000000058002: 0000
	.long 0                                                    // 000000058004: 00000000
	.long 0x22b9                                               // 000000058008: 000022B9
	.long 0x60311                                              // 00000005800C: 00060311
	.long 0x64b80                                              // 000000058010: 00064B80
	.long 0                                                    // 000000058014: 00000000
	.ascii "@"                                                 // 000000058018: 40
	.byte 0                                                    // 000000058019: 00
	.short 0                                                   // 00000005801A: 0000
	.long 0                                                    // 00000005801C: 00000000
	.long 0x27fc                                               // 000000058020: 000027FC
	.long 0x60311                                              // 000000058024: 00060311
	.long 0x64f80                                              // 000000058028: 00064F80
	.long 0                                                    // 00000005802C: 00000000
	.ascii "@"                                                 // 000000058030: 40
	.byte 0                                                    // 000000058031: 00
	.short 0                                                   // 000000058032: 0000
	.long 0                                                    // 000000058034: 00000000
	.ascii "e-"                                                // 000000058038: 2D65
	.short 0                                                   // 00000005803A: 0000
	.long 0x60311                                              // 00000005803C: 00060311
	.long 0x65380                                              // 000000058040: 00065380
	.long 0                                                    // 000000058044: 00000000
	.ascii "@"                                                 // 000000058048: 40
	.byte 0                                                    // 000000058049: 00
	.short 0                                                   // 00000005804A: 0000
	.long 0                                                    // 00000005804C: 00000000
	.long 0x45fd                                               // 000000058050: 000045FD
	.long 0x60311                                              // 000000058054: 00060311
	.long 0x66780                                              // 000000058058: 00066780
	.long 0                                                    // 00000005805C: 00000000
	.ascii "@"                                                 // 000000058060: 40
	.byte 0                                                    // 000000058061: 00
	.short 0                                                   // 000000058062: 0000
	.long 0                                                    // 000000058064: 00000000
	.ascii ":"                                                 // 000000058068: 3A
	.byte 0x2                                                  // 000000058069: 02
	.short 0                                                   // 00000005806A: 0000
	.long 0x60311                                              // 00000005806C: 00060311
	.ascii "@/"                                                // 000000058070: 2F40
	.short 0x6                                                 // 000000058072: 0006
	.long 0                                                    // 000000058074: 00000000
	.ascii "@"                                                 // 000000058078: 40
	.byte 0                                                    // 000000058079: 00
	.short 0                                                   // 00000005807A: 0000
	.long 0                                                    // 00000005807C: 00000000
	.long 0x4019                                               // 000000058080: 00004019
	.long 0x60311                                              // 000000058084: 00060311
	.long 0x66300                                              // 000000058088: 00066300
	.long 0                                                    // 00000005808C: 00000000
	.ascii "@"                                                 // 000000058090: 40
	.byte 0                                                    // 000000058091: 00
	.short 0                                                   // 000000058092: 0000
	.long 0                                                    // 000000058094: 00000000
	.long 0x4a13                                               // 000000058098: 00004A13
	.long 0x60311                                              // 00000005809C: 00060311
	.long 0x66a80                                              // 0000000580A0: 00066A80
	.long 0                                                    // 0000000580A4: 00000000
	.ascii "@"                                                 // 0000000580A8: 40
	.byte 0                                                    // 0000000580A9: 00
	.short 0                                                   // 0000000580AA: 0000
	.long 0                                                    // 0000000580AC: 00000000
	.ascii "mN"                                                // 0000000580B0: 4E6D
	.short 0                                                   // 0000000580B2: 0000
	.long 0x70312                                              // 0000000580B4: 00070312
	.long 0x80600                                              // 0000000580B8: 00080600
	.long 0                                                    // 0000000580BC: 00000000
	.long 0xf4                                                 // 0000000580C0: 000000F4
	.long 0                                                    // 0000000580C4: 00000000
	.ascii "J\n"                                               // 0000000580C8: 0A4A
	.short 0                                                   // 0000000580CA: 0000
	.long 0x60311                                              // 0000000580CC: 00060311
	.long 0x63600                                              // 0000000580D0: 00063600
	.long 0                                                    // 0000000580D4: 00000000
	.ascii "@"                                                 // 0000000580D8: 40
	.byte 0                                                    // 0000000580D9: 00
	.short 0                                                   // 0000000580DA: 0000
	.long 0                                                    // 0000000580DC: 00000000
	.long 0x14cd                                               // 0000000580E0: 000014CD
	.long 0x70312                                              // 0000000580E4: 00070312
	.long 0x6f600                                              // 0000000580E8: 0006F600
	.long 0                                                    // 0000000580EC: 00000000
	.long 0xf4                                                 // 0000000580F0: 000000F4
	.long 0                                                    // 0000000580F4: 00000000
	.long 0x3804                                               // 0000000580F8: 00003804
	.long 0x60311                                              // 0000000580FC: 00060311
	.long 0x65c00                                              // 000000058100: 00065C00
	.long 0                                                    // 000000058104: 00000000
	.ascii "@"                                                 // 000000058108: 40
	.byte 0                                                    // 000000058109: 00
	.short 0                                                   // 00000005810A: 0000
	.long 0                                                    // 00000005810C: 00000000
	.long 0x47ee                                               // 000000058110: 000047EE
	.long 0x70312                                              // 000000058114: 00070312
	.long 0x7eb00                                              // 000000058118: 0007EB00
	.long 0                                                    // 00000005811C: 00000000
	.ascii "P"                                                 // 000000058120: 50
	.byte 0x1                                                  // 000000058121: 01
	.short 0                                                   // 000000058122: 0000
	.long 0                                                    // 000000058124: 00000000
	.ascii "HT"                                                // 000000058128: 5448
	.short 0                                                   // 00000005812A: 0000
	.long 0x60311                                              // 00000005812C: 00060311
	.long 0x67200                                              // 000000058130: 00067200
	.long 0                                                    // 000000058134: 00000000
	.ascii "@"                                                 // 000000058138: 40
	.byte 0                                                    // 000000058139: 00
	.short 0                                                   // 00000005813A: 0000
	.long 0                                                    // 00000005813C: 00000000
	.long 0xdc2                                                // 000000058140: 00000DC2
	.long 0x70312                                              // 000000058144: 00070312
	.long 0x6cc00                                              // 000000058148: 0006CC00
	.long 0                                                    // 00000005814C: 00000000
	.ascii "`"                                                 // 000000058150: 60
	.byte 0x1                                                  // 000000058151: 01
	.short 0                                                   // 000000058152: 0000
	.long 0                                                    // 000000058154: 00000000
	.ascii "f8"                                                // 000000058158: 3866
	.short 0                                                   // 00000005815A: 0000
	.long 0x70312                                              // 00000005815C: 00070312
	.long 0x7ae00                                              // 000000058160: 0007AE00
	.long 0                                                    // 000000058164: 00000000
	.ascii "x"                                                 // 000000058168: 78
	.byte 0                                                    // 000000058169: 00
	.short 0                                                   // 00000005816A: 0000
	.long 0                                                    // 00000005816C: 00000000
	.ascii "p9"                                                // 000000058170: 3970
	.short 0                                                   // 000000058172: 0000
	.long 0x70312                                              // 000000058174: 00070312
	.long 0x7b200                                              // 000000058178: 0007B200
	.long 0                                                    // 00000005817C: 00000000
	.long 0x8c                                                 // 000000058180: 0000008C
	.long 0                                                    // 000000058184: 00000000
	.ascii "IH"                                                // 000000058188: 4849
	.short 0                                                   // 00000005818A: 0000
	.long 0x70312                                              // 00000005818C: 00070312
	.long 0x7ed00                                              // 000000058190: 0007ED00
	.long 0                                                    // 000000058194: 00000000
	.long 0x118                                                // 000000058198: 00000118
	.long 0                                                    // 00000005819C: 00000000
	.long 0x3e7                                                // 0000000581A0: 000003E7
	.long 0x60311                                              // 0000000581A4: 00060311
	.long 0x63080                                              // 0000000581A8: 00063080
	.long 0                                                    // 0000000581AC: 00000000
	.ascii "@"                                                 // 0000000581B0: 40
	.byte 0                                                    // 0000000581B1: 00
	.short 0                                                   // 0000000581B2: 0000
	.long 0                                                    // 0000000581B4: 00000000
	.long 0x6e3                                                // 0000000581B8: 000006E3
	.long 0x60311                                              // 0000000581BC: 00060311
	.long 0x63300                                              // 0000000581C0: 00063300
	.long 0                                                    // 0000000581C4: 00000000
	.ascii "@"                                                 // 0000000581C8: 40
	.byte 0                                                    // 0000000581C9: 00
	.short 0                                                   // 0000000581CA: 0000
	.long 0                                                    // 0000000581CC: 00000000
	.ascii "}%"                                                // 0000000581D0: 257D
	.short 0                                                   // 0000000581D2: 0000
	.long 0x70312                                              // 0000000581D4: 00070312
	.long 0x74900                                              // 0000000581D8: 00074900
	.long 0                                                    // 0000000581DC: 00000000
	.ascii "`"                                                 // 0000000581E0: 60
	.byte 0x1                                                  // 0000000581E1: 01
	.short 0                                                   // 0000000581E2: 0000
	.long 0                                                    // 0000000581E4: 00000000
	.long 0x2b8b                                               // 0000000581E8: 00002B8B
	.long 0x70312                                              // 0000000581EC: 00070312
	.long 0x76c00                                              // 0000000581F0: 00076C00
	.long 0                                                    // 0000000581F4: 00000000
	.ascii "t"                                                 // 0000000581F8: 74
	.byte 0x1                                                  // 0000000581F9: 01
	.short 0                                                   // 0000000581FA: 0000
	.long 0                                                    // 0000000581FC: 00000000
	.ascii "AJ"                                                // 000000058200: 4A41
	.short 0                                                   // 000000058202: 0000
	.long 0x70312                                              // 000000058204: 00070312
	.long 0x7f500                                              // 000000058208: 0007F500
	.long 0                                                    // 00000005820C: 00000000
	.long 0x80                                                 // 000000058210: 00000080
	.long 0                                                    // 000000058214: 00000000
	.ascii "c"                                                 // 000000058218: 63
	.byte 0x18                                                 // 000000058219: 18
	.short 0                                                   // 00000005821A: 0000
	.long 0x70312                                              // 00000005821C: 00070312
	.long 0x70700                                              // 000000058220: 00070700
	.long 0                                                    // 000000058224: 00000000
	.ascii "\\"                                                // 000000058228: 5C
	.byte 0                                                    // 000000058229: 00
	.short 0                                                   // 00000005822A: 0000
	.long 0                                                    // 00000005822C: 00000000
	.long 0x340c                                               // 000000058230: 0000340C
	.long 0x70312                                              // 000000058234: 00070312
	.long 0x79b00                                              // 000000058238: 00079B00
	.long 0                                                    // 00000005823C: 00000000
	.ascii "l"                                                 // 000000058240: 6C
	.byte 0x1                                                  // 000000058241: 01
	.short 0                                                   // 000000058242: 0000
	.long 0                                                    // 000000058244: 00000000
	.long 0x15bf                                               // 000000058248: 000015BF
	.long 0x60311                                              // 00000005824C: 00060311
	.long 0x63f80                                              // 000000058250: 00063F80
	.long 0                                                    // 000000058254: 00000000
	.ascii "@"                                                 // 000000058258: 40
	.byte 0                                                    // 000000058259: 00
	.short 0                                                   // 00000005825A: 0000
	.long 0                                                    // 00000005825C: 00000000
	.ascii ")"                                                 // 000000058260: 29
	.byte 0x1a                                                 // 000000058261: 1A
	.short 0                                                   // 000000058262: 0000
	.long 0x60311                                              // 000000058264: 00060311
	.ascii "@D"                                                // 000000058268: 4440
	.short 0x6                                                 // 00000005826A: 0006
	.long 0                                                    // 00000005826C: 00000000
	.ascii "@"                                                 // 000000058270: 40
	.byte 0                                                    // 000000058271: 00
	.short 0                                                   // 000000058272: 0000
	.long 0                                                    // 000000058274: 00000000
	.long 0x2aaf                                               // 000000058278: 00002AAF
	.long 0x60311                                              // 00000005827C: 00060311
	.long 0x65180                                              // 000000058280: 00065180
	.long 0                                                    // 000000058284: 00000000
	.ascii "@"                                                 // 000000058288: 40
	.byte 0                                                    // 000000058289: 00
	.short 0                                                   // 00000005828A: 0000
	.long 0                                                    // 00000005828C: 00000000
	.long 0x381b                                               // 000000058290: 0000381B
	.long 0x70312                                              // 000000058294: 00070312
	.long 0x7ad00                                              // 000000058298: 0007AD00
	.long 0                                                    // 00000005829C: 00000000
	.ascii "l"                                                 // 0000000582A0: 6C
	.byte 0                                                    // 0000000582A1: 00
	.short 0                                                   // 0000000582A2: 0000
	.long 0                                                    // 0000000582A4: 00000000
	.long 0x3c07                                               // 0000000582A8: 00003C07
	.long 0x60311                                              // 0000000582AC: 00060311
	.long 0x66000                                              // 0000000582B0: 00066000
	.long 0                                                    // 0000000582B4: 00000000
	.ascii "@"                                                 // 0000000582B8: 40
	.byte 0                                                    // 0000000582B9: 00
	.short 0                                                   // 0000000582BA: 0000
	.long 0                                                    // 0000000582BC: 00000000
	.long 0x450d                                               // 0000000582C0: 0000450D
	.long 0x60311                                              // 0000000582C4: 00060311
	.long 0x666c0                                              // 0000000582C8: 000666C0
	.long 0                                                    // 0000000582CC: 00000000
	.ascii "@"                                                 // 0000000582D0: 40
	.byte 0                                                    // 0000000582D1: 00
	.short 0                                                   // 0000000582D2: 0000
	.long 0                                                    // 0000000582D4: 00000000
	.long 0x481a                                               // 0000000582D8: 0000481A
	.long 0x60311                                              // 0000000582DC: 00060311
	.long 0x66900                                              // 0000000582E0: 00066900
	.long 0                                                    // 0000000582E4: 00000000
	.ascii "@"                                                 // 0000000582E8: 40
	.byte 0                                                    // 0000000582E9: 00
	.short 0                                                   // 0000000582EA: 0000
	.long 0                                                    // 0000000582EC: 00000000
	.long 0xb88                                                // 0000000582F0: 00000B88
	.long 0x60311                                              // 0000000582F4: 00060311
	.long 0x63700                                              // 0000000582F8: 00063700
	.long 0                                                    // 0000000582FC: 00000000
	.ascii "@"                                                 // 000000058300: 40
	.byte 0                                                    // 000000058301: 00
	.short 0                                                   // 000000058302: 0000
	.long 0                                                    // 000000058304: 00000000
	.long 0x3d14                                               // 000000058308: 00003D14
	.long 0x70312                                              // 00000005830C: 00070312
	.long 0x7c200                                              // 000000058310: 0007C200
	.long 0                                                    // 000000058314: 00000000
	.long 0x94                                                 // 000000058318: 00000094
	.long 0                                                    // 00000005831C: 00000000
	.ascii "GL"                                                // 000000058320: 4C47
	.short 0                                                   // 000000058322: 0000
	.long 0x70312                                              // 000000058324: 00070312
	.long 0x7fd00                                              // 000000058328: 0007FD00
	.long 0                                                    // 00000005832C: 00000000
	.long 0xf0                                                 // 000000058330: 000000F0
	.long 0                                                    // 000000058334: 00000000
	.long 0x1d1c                                               // 000000058338: 00001D1C
	.long 0x70312                                              // 00000005833C: 00070312
	.long 0x71f00                                              // 000000058340: 00071F00
	.long 0                                                    // 000000058344: 00000000
	.long 0x84                                                 // 000000058348: 00000084
	.long 0                                                    // 00000005834C: 00000000
	.long 0x2e19                                               // 000000058350: 00002E19
	.long 0x60311                                              // 000000058354: 00060311
	.long 0x65400                                              // 000000058358: 00065400
	.long 0                                                    // 00000005835C: 00000000
	.ascii "@"                                                 // 000000058360: 40
	.byte 0                                                    // 000000058361: 00
	.short 0                                                   // 000000058362: 0000
	.long 0                                                    // 000000058364: 00000000
	.long 0x33b9                                               // 000000058368: 000033B9
	.long 0x70312                                              // 00000005836C: 00070312
	.long 0x79900                                              // 000000058370: 00079900
	.long 0                                                    // 000000058374: 00000000
	.long 0x108                                                // 000000058378: 00000108
	.long 0                                                    // 00000005837C: 00000000
	.ascii "O:"                                                // 000000058380: 3A4F
	.short 0                                                   // 000000058382: 0000
	.long 0x60311                                              // 000000058384: 00060311
	.ascii "@^"                                                // 000000058388: 5E40
	.short 0x6                                                 // 00000005838A: 0006
	.long 0                                                    // 00000005838C: 00000000
	.ascii "@"                                                 // 000000058390: 40
	.byte 0                                                    // 000000058391: 00
	.short 0                                                   // 000000058392: 0000
	.long 0                                                    // 000000058394: 00000000
	.ascii "D;"                                                // 000000058398: 3B44
	.short 0                                                   // 00000005839A: 0000
	.long 0x60311                                              // 00000005839C: 00060311
	.ascii "@_"                                                // 0000000583A0: 5F40
	.short 0x6                                                 // 0000000583A2: 0006
	.long 0                                                    // 0000000583A4: 00000000
	.ascii "@"                                                 // 0000000583A8: 40
	.byte 0                                                    // 0000000583A9: 00
	.short 0                                                   // 0000000583AA: 0000
	.long 0                                                    // 0000000583AC: 00000000
	.long 0x5182                                               // 0000000583B0: 00005182
	.long 0x70312                                              // 0000000583B4: 00070312
	.long 0x81300                                              // 0000000583B8: 00081300
	.long 0                                                    // 0000000583BC: 00000000
	.long 0x110                                                // 0000000583C0: 00000110
	.long 0                                                    // 0000000583C4: 00000000
	.long 0x390                                                // 0000000583C8: 00000390
	.long 0x60311                                              // 0000000583CC: 00060311
	.ascii "@0"                                                // 0000000583D0: 3040
	.short 0x6                                                 // 0000000583D2: 0006
	.long 0                                                    // 0000000583D4: 00000000
	.ascii "@"                                                 // 0000000583D8: 40
	.byte 0                                                    // 0000000583D9: 00
	.short 0                                                   // 0000000583DA: 0000
	.long 0                                                    // 0000000583DC: 00000000
	.long 0x2391                                               // 0000000583E0: 00002391
	.long 0x70312                                              // 0000000583E4: 00070312
	.long 0x73f00                                              // 0000000583E8: 00073F00
	.long 0                                                    // 0000000583EC: 00000000
	.long 0x110                                                // 0000000583F0: 00000110
	.long 0                                                    // 0000000583F4: 00000000
	.ascii "[0"                                                // 0000000583F8: 305B
	.short 0                                                   // 0000000583FA: 0000
	.long 0x70312                                              // 0000000583FC: 00070312
	.long 0x78700                                              // 000000058400: 00078700
	.long 0                                                    // 000000058404: 00000000
	.ascii "h"                                                 // 000000058408: 68
	.byte 0x1                                                  // 000000058409: 01
	.short 0                                                   // 00000005840A: 0000
	.long 0                                                    // 00000005840C: 00000000
	.ascii "8C"                                                // 000000058410: 4338
	.short 0                                                   // 000000058412: 0000
	.long 0x70312                                              // 000000058414: 00070312
	.long 0x7d600                                              // 000000058418: 0007D600
	.long 0                                                    // 00000005841C: 00000000
	.long 0xa0                                                 // 000000058420: 000000A0
	.long 0                                                    // 000000058424: 00000000
	.long 0x1                                                  // 000000058428: 00000001
	.long 0x70312                                              // 00000005842C: 00070312
	.long 0x68700                                              // 000000058430: 00068700
	.long 0                                                    // 000000058434: 00000000
	.ascii "\\"                                                // 000000058438: 5C
	.byte 0                                                    // 000000058439: 00
	.short 0                                                   // 00000005843A: 0000
	.long 0                                                    // 00000005843C: 00000000
	.long 0x4ac4                                               // 000000058440: 00004AC4
	.long 0x60311                                              // 000000058444: 00060311
	.long 0x66b00                                              // 000000058448: 00066B00
	.long 0                                                    // 00000005844C: 00000000
	.ascii "@"                                                 // 000000058450: 40
	.byte 0                                                    // 000000058451: 00
	.short 0                                                   // 000000058452: 0000
	.long 0                                                    // 000000058454: 00000000
	.long 0x509c                                               // 000000058458: 0000509C
	.long 0x60311                                              // 00000005845C: 00060311
	.ascii "@o"                                                // 000000058460: 6F40
	.short 0x6                                                 // 000000058462: 0006
	.long 0                                                    // 000000058464: 00000000
	.ascii "@"                                                 // 000000058468: 40
	.byte 0                                                    // 000000058469: 00
	.short 0                                                   // 00000005846A: 0000
	.long 0                                                    // 00000005846C: 00000000
	.ascii "F"                                                 // 000000058470: 46
	.byte 0x8                                                  // 000000058471: 08
	.short 0                                                   // 000000058472: 0000
	.long 0x60311                                              // 000000058474: 00060311
	.ascii "@4"                                                // 000000058478: 3440
	.short 0x6                                                 // 00000005847A: 0006
	.long 0                                                    // 00000005847C: 00000000
	.ascii "@"                                                 // 000000058480: 40
	.byte 0                                                    // 000000058481: 00
	.short 0                                                   // 000000058482: 0000
	.long 0                                                    // 000000058484: 00000000
	.ascii "8"                                                 // 000000058488: 38
	.byte 0xb                                                  // 000000058489: 0B
	.short 0                                                   // 00000005848A: 0000
	.long 0x60311                                              // 00000005848C: 00060311
	.long 0x636c0                                              // 000000058490: 000636C0
	.long 0                                                    // 000000058494: 00000000
	.ascii "@"                                                 // 000000058498: 40
	.byte 0                                                    // 000000058499: 00
	.short 0                                                   // 00000005849A: 0000
	.long 0                                                    // 00000005849C: 00000000
	.ascii "Y"                                                 // 0000000584A0: 59
	.byte 0x1d                                                 // 0000000584A1: 1D
	.short 0                                                   // 0000000584A2: 0000
	.long 0x70312                                              // 0000000584A4: 00070312
	.long 0x72000                                              // 0000000584A8: 00072000
	.long 0                                                    // 0000000584AC: 00000000
	.long 0x108                                                // 0000000584B0: 00000108
	.long 0                                                    // 0000000584B4: 00000000
	.ascii "f#"                                                // 0000000584B8: 2366
	.short 0                                                   // 0000000584BA: 0000
	.long 0x60311                                              // 0000000584BC: 00060311
	.long 0x64c00                                              // 0000000584C0: 00064C00
	.long 0                                                    // 0000000584C4: 00000000
	.ascii "@"                                                 // 0000000584C8: 40
	.byte 0                                                    // 0000000584C9: 00
	.short 0                                                   // 0000000584CA: 0000
	.long 0                                                    // 0000000584CC: 00000000
	.long 0x4686                                               // 0000000584D0: 00004686
	.long 0x70312                                              // 0000000584D4: 00070312
	.long 0x7e400                                              // 0000000584D8: 0007E400
	.long 0                                                    // 0000000584DC: 00000000
	.long 0x108                                                // 0000000584E0: 00000108
	.long 0                                                    // 0000000584E4: 00000000
	.ascii ":U"                                                // 0000000584E8: 553A
	.short 0                                                   // 0000000584EA: 0000
	.long 0x70312                                              // 0000000584EC: 00070312
	.long 0x82200                                              // 0000000584F0: 00082200
	.long 0                                                    // 0000000584F4: 00000000
	.ascii "X"                                                 // 0000000584F8: 58
	.byte 0                                                    // 0000000584F9: 00
	.short 0                                                   // 0000000584FA: 0000
	.long 0                                                    // 0000000584FC: 00000000
	.long 0x56c4                                               // 000000058500: 000056C4
	.long 0x70312                                              // 000000058504: 00070312
	.long 0x82800                                              // 000000058508: 00082800
	.long 0                                                    // 00000005850C: 00000000
	.ascii "h"                                                 // 000000058510: 68
	.byte 0                                                    // 000000058511: 00
	.short 0                                                   // 000000058512: 0000
	.long 0                                                    // 000000058514: 00000000
	.long 0x11eb                                               // 000000058518: 000011EB
	.long 0x60311                                              // 00000005851C: 00060311
	.ascii "@<"                                                // 000000058520: 3C40
	.short 0x6                                                 // 000000058522: 0006
	.long 0                                                    // 000000058524: 00000000
	.ascii "@"                                                 // 000000058528: 40
	.byte 0                                                    // 000000058529: 00
	.short 0                                                   // 00000005852A: 0000
	.long 0                                                    // 00000005852C: 00000000
	.long 0x3b05                                               // 000000058530: 00003B05
	.long 0x60311                                              // 000000058534: 00060311
	.long 0x65f00                                              // 000000058538: 00065F00
	.long 0                                                    // 00000005853C: 00000000
	.ascii "@"                                                 // 000000058540: 40
	.byte 0                                                    // 000000058541: 00
	.short 0                                                   // 000000058542: 0000
	.long 0                                                    // 000000058544: 00000000
	.long 0x421e                                               // 000000058548: 0000421E
	.long 0x60311                                              // 00000005854C: 00060311
	.long 0x66480                                              // 000000058550: 00066480
	.long 0                                                    // 000000058554: 00000000
	.ascii "@"                                                 // 000000058558: 40
	.byte 0                                                    // 000000058559: 00
	.short 0                                                   // 00000005855A: 0000
	.long 0                                                    // 00000005855C: 00000000
	.long 0x45ac                                               // 000000058560: 000045AC
	.long 0x60311                                              // 000000058564: 00060311
	.ascii "@g"                                                // 000000058568: 6740
	.short 0x6                                                 // 00000005856A: 0006
	.long 0                                                    // 00000005856C: 00000000
	.ascii "@"                                                 // 000000058570: 40
	.byte 0                                                    // 000000058571: 00
	.short 0                                                   // 000000058572: 0000
	.long 0                                                    // 000000058574: 00000000
	.ascii "XU"                                                // 000000058578: 5558
	.short 0                                                   // 00000005857A: 0000
	.long 0x60311                                              // 00000005857C: 00060311
	.long 0x67300                                              // 000000058580: 00067300
	.long 0                                                    // 000000058584: 00000000
	.ascii "@"                                                 // 000000058588: 40
	.byte 0                                                    // 000000058589: 00
	.short 0                                                   // 00000005858A: 0000
	.long 0                                                    // 00000005858C: 00000000
	.long 0x10f3                                               // 000000058590: 000010F3
	.long 0x60311                                              // 000000058594: 00060311
	.long 0x63b80                                              // 000000058598: 00063B80
	.long 0                                                    // 00000005859C: 00000000
	.ascii "@"                                                 // 0000000585A0: 40
	.byte 0                                                    // 0000000585A1: 00
	.short 0                                                   // 0000000585A2: 0000
	.long 0                                                    // 0000000585A4: 00000000
	.long 0x5792                                               // 0000000585A8: 00005792
	.long 0x60311                                              // 0000000585AC: 00060311
	.ascii "@u"                                                // 0000000585B0: 7540
	.short 0x6                                                 // 0000000585B2: 0006
	.long 0                                                    // 0000000585B4: 00000000
	.ascii "@"                                                 // 0000000585B8: 40
	.byte 0                                                    // 0000000585B9: 00
	.short 0                                                   // 0000000585BA: 0000
	.long 0                                                    // 0000000585BC: 00000000
	.long 0x1dd2                                               // 0000000585C0: 00001DD2
	.long 0x60311                                              // 0000000585C4: 00060311
	.long 0x64800                                              // 0000000585C8: 00064800
	.long 0                                                    // 0000000585CC: 00000000
	.ascii "@"                                                 // 0000000585D0: 40
	.byte 0                                                    // 0000000585D1: 00
	.short 0                                                   // 0000000585D2: 0000
	.long 0                                                    // 0000000585D4: 00000000
	.ascii "u2"                                                // 0000000585D8: 3275
	.short 0                                                   // 0000000585DA: 0000
	.long 0x70312                                              // 0000000585DC: 00070312
	.long 0x79200                                              // 0000000585E0: 00079200
	.long 0                                                    // 0000000585E4: 00000000
	.ascii "h"                                                 // 0000000585E8: 68
	.byte 0x1                                                  // 0000000585E9: 01
	.short 0                                                   // 0000000585EA: 0000
	.long 0                                                    // 0000000585EC: 00000000
	.ascii "	3"                                                // 0000000585F0: 3309
	.short 0                                                   // 0000000585F2: 0000
	.long 0x70312                                              // 0000000585F4: 00070312
	.long 0x79600                                              // 0000000585F8: 00079600
	.long 0                                                    // 0000000585FC: 00000000
	.long 0x104                                                // 000000058600: 00000104
	.long 0                                                    // 000000058604: 00000000
	.long 0x3d9e                                               // 000000058608: 00003D9E
	.long 0x60311                                              // 00000005860C: 00060311
	.ascii "@a"                                                // 000000058610: 6140
	.short 0x6                                                 // 000000058612: 0006
	.long 0                                                    // 000000058614: 00000000
	.ascii "@"                                                 // 000000058618: 40
	.byte 0                                                    // 000000058619: 00
	.short 0                                                   // 00000005861A: 0000
	.long 0                                                    // 00000005861C: 00000000
	.long 0x7da                                                // 000000058620: 000007DA
	.long 0x70312                                              // 000000058624: 00070312
	.long 0x6ad00                                              // 000000058628: 0006AD00
	.long 0                                                    // 00000005862C: 00000000
	.long 0xe8                                                 // 000000058630: 000000E8
	.long 0                                                    // 000000058634: 00000000
	.ascii "w\n"                                               // 000000058638: 0A77
	.short 0                                                   // 00000005863A: 0000
	.long 0x70312                                              // 00000005863C: 00070312
	.long 0x6bb00                                              // 000000058640: 0006BB00
	.long 0                                                    // 000000058644: 00000000
	.ascii "T"                                                 // 000000058648: 54
	.byte 0x1                                                  // 000000058649: 01
	.short 0                                                   // 00000005864A: 0000
	.long 0                                                    // 00000005864C: 00000000
	.long 0x17f5                                               // 000000058650: 000017F5
	.long 0x70312                                              // 000000058654: 00070312
	.long 0x70500                                              // 000000058658: 00070500
	.long 0                                                    // 00000005865C: 00000000
	.ascii "`"                                                 // 000000058660: 60
	.byte 0                                                    // 000000058661: 00
	.short 0                                                   // 000000058662: 0000
	.long 0                                                    // 000000058664: 00000000
	.long 0x3cdf                                               // 000000058668: 00003CDF
	.long 0x60311                                              // 00000005866C: 00060311
	.long 0x660c0                                              // 000000058670: 000660C0
	.long 0                                                    // 000000058674: 00000000
	.ascii "@"                                                 // 000000058678: 40
	.byte 0                                                    // 000000058679: 00
	.short 0                                                   // 00000005867A: 0000
	.long 0                                                    // 00000005867C: 00000000
	.long 0x541e                                               // 000000058680: 0000541E
	.long 0x70312                                              // 000000058684: 00070312
	.long 0x81d00                                              // 000000058688: 00081D00
	.long 0                                                    // 00000005868C: 00000000
	.long 0x114                                                // 000000058690: 00000114
	.long 0                                                    // 000000058694: 00000000
	.long 0x7af                                                // 000000058698: 000007AF
	.long 0x60311                                              // 00000005869C: 00060311
	.long 0x633c0                                              // 0000000586A0: 000633C0
	.long 0                                                    // 0000000586A4: 00000000
	.ascii "@"                                                 // 0000000586A8: 40
	.byte 0                                                    // 0000000586A9: 00
	.short 0                                                   // 0000000586AA: 0000
	.long 0                                                    // 0000000586AC: 00000000
	.ascii "P"                                                 // 0000000586B0: 50
	.byte 0x10                                                 // 0000000586B1: 10
	.short 0                                                   // 0000000586B2: 0000
	.long 0x60311                                              // 0000000586B4: 00060311
	.long 0x63b00                                              // 0000000586B8: 00063B00
	.long 0                                                    // 0000000586BC: 00000000
	.ascii "@"                                                 // 0000000586C0: 40
	.byte 0                                                    // 0000000586C1: 00
	.short 0                                                   // 0000000586C2: 0000
	.long 0                                                    // 0000000586C4: 00000000
	.long 0x1f81                                               // 0000000586C8: 00001F81
	.long 0x70312                                              // 0000000586CC: 00070312
	.long 0x72900                                              // 0000000586D0: 00072900
	.long 0                                                    // 0000000586D4: 00000000
	.ascii "\\"                                                // 0000000586D8: 5C
	.byte 0x1                                                  // 0000000586D9: 01
	.short 0                                                   // 0000000586DA: 0000
	.long 0                                                    // 0000000586DC: 00000000
	.long 0x2f03                                               // 0000000586E0: 00002F03
	.long 0x70312                                              // 0000000586E4: 00070312
	.long 0x77f00                                              // 0000000586E8: 00077F00
	.long 0                                                    // 0000000586EC: 00000000
	.long 0x180                                                // 0000000586F0: 00000180
	.long 0                                                    // 0000000586F4: 00000000
	.long 0x3be8                                               // 0000000586F8: 00003BE8
	.long 0x70312                                              // 0000000586FC: 00070312
	.long 0x7bd00                                              // 000000058700: 0007BD00
	.long 0                                                    // 000000058704: 00000000
	.long 0x10c                                                // 000000058708: 0000010C
	.long 0                                                    // 00000005870C: 00000000
	.ascii "FA"                                                // 000000058710: 4146
	.short 0                                                   // 000000058712: 0000
	.long 0x70312                                              // 000000058714: 00070312
	.long 0x7d000                                              // 000000058718: 0007D000
	.long 0                                                    // 00000005871C: 00000000
	.long 0xbc                                                 // 000000058720: 000000BC
	.long 0                                                    // 000000058724: 00000000
	.ascii "K"                                                 // 000000058728: 4B
	.byte 0x12                                                 // 000000058729: 12
	.short 0                                                   // 00000005872A: 0000
	.long 0x70312                                              // 00000005872C: 00070312
	.long 0x6e700                                              // 000000058730: 0006E700
	.long 0                                                    // 000000058734: 00000000
	.ascii "8"                                                 // 000000058738: 38
	.byte 0x1                                                  // 000000058739: 01
	.short 0                                                   // 00000005873A: 0000
	.long 0                                                    // 00000005873C: 00000000
	.long 0x2013                                               // 000000058740: 00002013
	.long 0x60311                                              // 000000058744: 00060311
	.long 0x64980                                              // 000000058748: 00064980
	.long 0                                                    // 00000005874C: 00000000
	.ascii "@"                                                 // 000000058750: 40
	.byte 0                                                    // 000000058751: 00
	.short 0                                                   // 000000058752: 0000
	.long 0                                                    // 000000058754: 00000000
	.ascii "d!"                                                // 000000058758: 2164
	.short 0                                                   // 00000005875A: 0000
	.long 0x60311                                              // 00000005875C: 00060311
	.long 0x64a80                                              // 000000058760: 00064A80
	.long 0                                                    // 000000058764: 00000000
	.ascii "@"                                                 // 000000058768: 40
	.byte 0                                                    // 000000058769: 00
	.short 0                                                   // 00000005876A: 0000
	.long 0                                                    // 00000005876C: 00000000
	.long 0x2ed2                                               // 000000058770: 00002ED2
	.long 0x60311                                              // 000000058774: 00060311
	.long 0x65480                                              // 000000058778: 00065480
	.long 0                                                    // 00000005877C: 00000000
	.ascii "@"                                                 // 000000058780: 40
	.byte 0                                                    // 000000058781: 00
	.short 0                                                   // 000000058782: 0000
	.long 0                                                    // 000000058784: 00000000
	.ascii ")<"                                                // 000000058788: 3C29
	.short 0                                                   // 00000005878A: 0000
	.long 0x70312                                              // 00000005878C: 00070312
	.long 0x7bf00                                              // 000000058790: 0007BF00
	.long 0                                                    // 000000058794: 00000000
	.ascii "T"                                                 // 000000058798: 54
	.byte 0                                                    // 000000058799: 00
	.short 0                                                   // 00000005879A: 0000
	.long 0                                                    // 00000005879C: 00000000
	.long 0x2fb9                                               // 0000000587A0: 00002FB9
	.long 0x70312                                              // 0000000587A4: 00070312
	.long 0x78300                                              // 0000000587A8: 00078300
	.long 0                                                    // 0000000587AC: 00000000
	.ascii "d"                                                 // 0000000587B0: 64
	.byte 0x1                                                  // 0000000587B1: 01
	.short 0                                                   // 0000000587B2: 0000
	.long 0                                                    // 0000000587B4: 00000000
	.long 0x35bb                                               // 0000000587B8: 000035BB
	.long 0x70312                                              // 0000000587BC: 00070312
	.long 0x7a300                                              // 0000000587C0: 0007A300
	.long 0                                                    // 0000000587C4: 00000000
	.ascii "p"                                                 // 0000000587C8: 70
	.byte 0                                                    // 0000000587C9: 00
	.short 0                                                   // 0000000587CA: 0000
	.long 0                                                    // 0000000587CC: 00000000
	.long 0x43de                                               // 0000000587D0: 000043DE
	.long 0x70312                                              // 0000000587D4: 00070312
	.long 0x7d800                                              // 0000000587D8: 0007D800
	.long 0                                                    // 0000000587DC: 00000000
	.long 0x108                                                // 0000000587E0: 00000108
	.long 0                                                    // 0000000587E4: 00000000
	.ascii "bE"                                                // 0000000587E8: 4562
	.short 0                                                   // 0000000587EA: 0000
	.long 0x60311                                              // 0000000587EC: 00060311
	.long 0x66700                                              // 0000000587F0: 00066700
	.long 0                                                    // 0000000587F4: 00000000
	.ascii "@"                                                 // 0000000587F8: 40
	.byte 0                                                    // 0000000587F9: 00
	.short 0                                                   // 0000000587FA: 0000
	.long 0                                                    // 0000000587FC: 00000000
	.long 0x458d                                               // 000000058800: 0000458D
	.long 0x70312                                              // 000000058804: 00070312
	.long 0x7de00                                              // 000000058808: 0007DE00
	.long 0                                                    // 00000005880C: 00000000
	.long 0x10c                                                // 000000058810: 0000010C
	.long 0                                                    // 000000058814: 00000000
	.long 0x494                                                // 000000058818: 00000494
	.long 0x60311                                              // 00000005881C: 00060311
	.long 0x63100                                              // 000000058820: 00063100
	.long 0                                                    // 000000058824: 00000000
	.ascii "@"                                                 // 000000058828: 40
	.byte 0                                                    // 000000058829: 00
	.short 0                                                   // 00000005882A: 0000
	.long 0                                                    // 00000005882C: 00000000
	.long 0x58e                                                // 000000058830: 0000058E
	.long 0x70312                                              // 000000058834: 00070312
	.long 0x6a200                                              // 000000058838: 0006A200
	.long 0                                                    // 00000005883C: 00000000
	.long 0xe8                                                 // 000000058840: 000000E8
	.long 0                                                    // 000000058844: 00000000
	.long 0x38e8                                               // 000000058848: 000038E8
	.long 0x70312                                              // 00000005884C: 00070312
	.long 0x7b000                                              // 000000058850: 0007B000
	.long 0                                                    // 000000058854: 00000000
	.long 0xa4                                                 // 000000058858: 000000A4
	.long 0                                                    // 00000005885C: 00000000
	.long 0x46b0                                               // 000000058860: 000046B0
	.long 0x60311                                              // 000000058864: 00060311
	.long 0x66800                                              // 000000058868: 00066800
	.long 0                                                    // 00000005886C: 00000000
	.ascii "@"                                                 // 000000058870: 40
	.byte 0                                                    // 000000058871: 00
	.short 0                                                   // 000000058872: 0000
	.long 0                                                    // 000000058874: 00000000
	.long 0x4f92                                               // 000000058878: 00004F92
	.long 0x60311                                              // 00000005887C: 00060311
	.long 0x66e80                                              // 000000058880: 00066E80
	.long 0                                                    // 000000058884: 00000000
	.ascii "@"                                                 // 000000058888: 40
	.byte 0                                                    // 000000058889: 00
	.short 0                                                   // 00000005888A: 0000
	.long 0                                                    // 00000005888C: 00000000
	.long 0xed5                                                // 000000058890: 00000ED5
	.long 0x60311                                              // 000000058894: 00060311
	.long 0x639c0                                              // 000000058898: 000639C0
	.long 0                                                    // 00000005889C: 00000000
	.ascii "@"                                                 // 0000000588A0: 40
	.byte 0                                                    // 0000000588A1: 00
	.short 0                                                   // 0000000588A2: 0000
	.long 0                                                    // 0000000588A4: 00000000
	.long 0x31bd                                               // 0000000588A8: 000031BD
	.long 0x70312                                              // 0000000588AC: 00070312
	.long 0x78f00                                              // 0000000588B0: 00078F00
	.long 0                                                    // 0000000588B4: 00000000
	.long 0x180                                                // 0000000588B8: 00000180
	.long 0                                                    // 0000000588BC: 00000000
	.ascii "VM"                                                // 0000000588C0: 4D56
	.short 0                                                   // 0000000588C2: 0000
	.long 0x70312                                              // 0000000588C4: 00070312
	.long 0x80100                                              // 0000000588C8: 00080100
	.long 0                                                    // 0000000588CC: 00000000
	.long 0x104                                                // 0000000588D0: 00000104
	.long 0                                                    // 0000000588D4: 00000000
	.long 0xe11                                                // 0000000588D8: 00000E11
	.long 0x70312                                              // 0000000588DC: 00070312
	.long 0x6ce00                                              // 0000000588E0: 0006CE00
	.long 0                                                    // 0000000588E4: 00000000
	.long 0xd0                                                 // 0000000588E8: 000000D0
	.long 0                                                    // 0000000588EC: 00000000
	.long 0x12a2                                               // 0000000588F0: 000012A2
	.long 0x70312                                              // 0000000588F4: 00070312
	.long 0x6e900                                              // 0000000588F8: 0006E900
	.long 0                                                    // 0000000588FC: 00000000
	.long 0x118                                                // 000000058900: 00000118
	.long 0                                                    // 000000058904: 00000000
	.long 0x1bf8                                               // 000000058908: 00001BF8
	.long 0x60311                                              // 00000005890C: 00060311
	.ascii "@F"                                                // 000000058910: 4640
	.short 0x6                                                 // 000000058912: 0006
	.long 0                                                    // 000000058914: 00000000
	.ascii "@"                                                 // 000000058918: 40
	.byte 0                                                    // 000000058919: 00
	.short 0                                                   // 00000005891A: 0000
	.long 0                                                    // 00000005891C: 00000000
	.long 0x3794                                               // 000000058920: 00003794
	.long 0x60311                                              // 000000058924: 00060311
	.long 0x65b80                                              // 000000058928: 00065B80
	.long 0                                                    // 00000005892C: 00000000
	.ascii "@"                                                 // 000000058930: 40
	.byte 0                                                    // 000000058931: 00
	.short 0                                                   // 000000058932: 0000
	.long 0                                                    // 000000058934: 00000000
	.long 0x51a                                                // 000000058938: 0000051A
	.long 0x60311                                              // 00000005893C: 00060311
	.long 0x63180                                              // 000000058940: 00063180
	.long 0                                                    // 000000058944: 00000000
	.ascii "@"                                                 // 000000058948: 40
	.byte 0                                                    // 000000058949: 00
	.short 0                                                   // 00000005894A: 0000
	.long 0                                                    // 00000005894C: 00000000
	.ascii "W"                                                 // 000000058950: 57
	.byte 0x1b                                                 // 000000058951: 1B
	.short 0                                                   // 000000058952: 0000
	.long 0x70312                                              // 000000058954: 00070312
	.long 0x71500                                              // 000000058958: 00071500
	.long 0                                                    // 00000005895C: 00000000
	.long 0xfc                                                 // 000000058960: 000000FC
	.long 0                                                    // 000000058964: 00000000
	.long 0x30b2                                               // 000000058968: 000030B2
	.long 0x70312                                              // 00000005896C: 00070312
	.long 0x78900                                              // 000000058970: 00078900
	.long 0                                                    // 000000058974: 00000000
	.ascii "X"                                                 // 000000058978: 58
	.byte 0x1                                                  // 000000058979: 01
	.short 0                                                   // 00000005897A: 0000
	.long 0                                                    // 00000005897C: 00000000
	.long 0x5816                                               // 000000058980: 00005816
	.long 0x60311                                              // 000000058984: 00060311
	.long 0x675c0                                              // 000000058988: 000675C0
	.long 0                                                    // 00000005898C: 00000000
	.ascii "@"                                                 // 000000058990: 40
	.byte 0                                                    // 000000058991: 00
	.short 0                                                   // 000000058992: 0000
	.long 0                                                    // 000000058994: 00000000
	.long 0x2fd8                                               // 000000058998: 00002FD8
	.long 0x60311                                              // 00000005899C: 00060311
	.ascii "@U"                                                // 0000000589A0: 5540
	.short 0x6                                                 // 0000000589A2: 0006
	.long 0                                                    // 0000000589A4: 00000000
	.ascii "@"                                                 // 0000000589A8: 40
	.byte 0                                                    // 0000000589A9: 00
	.short 0                                                   // 0000000589AA: 0000
	.long 0                                                    // 0000000589AC: 00000000
	.long 0x37f0                                               // 0000000589B0: 000037F0
	.long 0x70312                                              // 0000000589B4: 00070312
	.long 0x7ac00                                              // 0000000589B8: 0007AC00
	.long 0                                                    // 0000000589BC: 00000000
	.long 0x90                                                 // 0000000589C0: 00000090
	.long 0                                                    // 0000000589C4: 00000000
	.ascii "KB"                                                // 0000000589C8: 424B
	.short 0                                                   // 0000000589CA: 0000
	.long 0x70312                                              // 0000000589CC: 00070312
	.long 0x7d300                                              // 0000000589D0: 0007D300
	.long 0                                                    // 0000000589D4: 00000000
	.long 0xa8                                                 // 0000000589D8: 000000A8
	.long 0                                                    // 0000000589DC: 00000000
	.ascii "+("                                                // 0000000589E0: 282B
	.short 0                                                   // 0000000589E2: 0000
	.long 0x70312                                              // 0000000589E4: 00070312
	.long 0x75800                                              // 0000000589E8: 00075800
	.long 0                                                    // 0000000589EC: 00000000
	.long 0x198                                                // 0000000589F0: 00000198
	.long 0                                                    // 0000000589F4: 00000000
	.long 0x3ba5                                               // 0000000589F8: 00003BA5
	.long 0x70312                                              // 0000000589FC: 00070312
	.long 0x7bc00                                              // 000000058A00: 0007BC00
	.long 0                                                    // 000000058A04: 00000000
	.long 0xe4                                                 // 000000058A08: 000000E4
	.long 0                                                    // 000000058A0C: 00000000
	.ascii "sB"                                                // 000000058A10: 4273
	.short 0                                                   // 000000058A12: 0000
	.long 0x60311                                              // 000000058A14: 00060311
	.long 0x664c0                                              // 000000058A18: 000664C0
	.long 0                                                    // 000000058A1C: 00000000
	.ascii "@"                                                 // 000000058A20: 40
	.byte 0                                                    // 000000058A21: 00
	.short 0                                                   // 000000058A22: 0000
	.long 0                                                    // 000000058A24: 00000000
	.long 0x3bc5                                               // 000000058A28: 00003BC5
	.long 0x60311                                              // 000000058A2C: 00060311
	.long 0x65fc0                                              // 000000058A30: 00065FC0
	.long 0                                                    // 000000058A34: 00000000
	.ascii "@"                                                 // 000000058A38: 40
	.byte 0                                                    // 000000058A39: 00
	.short 0                                                   // 000000058A3A: 0000
	.long 0                                                    // 000000058A3C: 00000000
	.long 0x3c88                                               // 000000058A40: 00003C88
	.long 0x60311                                              // 000000058A44: 00060311
	.long 0x66080                                              // 000000058A48: 00066080
	.long 0                                                    // 000000058A4C: 00000000
	.ascii "@"                                                 // 000000058A50: 40
	.byte 0                                                    // 000000058A51: 00
	.short 0                                                   // 000000058A52: 0000
	.long 0                                                    // 000000058A54: 00000000
	.ascii "`C"                                                // 000000058A58: 4360
	.short 0                                                   // 000000058A5A: 0000
	.long 0x60311                                              // 000000058A5C: 00060311
	.long 0x66580                                              // 000000058A60: 00066580
	.long 0                                                    // 000000058A64: 00000000
	.ascii "@"                                                 // 000000058A68: 40
	.byte 0                                                    // 000000058A69: 00
	.short 0                                                   // 000000058A6A: 0000
	.long 0                                                    // 000000058A6C: 00000000
	.ascii "&M"                                                // 000000058A70: 4D26
	.short 0                                                   // 000000058A72: 0000
	.long 0x60311                                              // 000000058A74: 00060311
	.long 0x66cc0                                              // 000000058A78: 00066CC0
	.long 0                                                    // 000000058A7C: 00000000
	.ascii "@"                                                 // 000000058A80: 40
	.byte 0                                                    // 000000058A81: 00
	.short 0                                                   // 000000058A82: 0000
	.long 0                                                    // 000000058A84: 00000000
	.long 0xa6                                                 // 000000058A88: 000000A6
	.long 0x60311                                              // 000000058A8C: 00060311
	.long 0x62d80                                              // 000000058A90: 00062D80
	.long 0                                                    // 000000058A94: 00000000
	.ascii "@"                                                 // 000000058A98: 40
	.byte 0                                                    // 000000058A99: 00
	.short 0                                                   // 000000058A9A: 0000
	.long 0                                                    // 000000058A9C: 00000000
	.long 0xdb                                                 // 000000058AA0: 000000DB
	.long 0x60311                                              // 000000058AA4: 00060311
	.long 0x62dc0                                              // 000000058AA8: 00062DC0
	.long 0                                                    // 000000058AAC: 00000000
	.ascii "@"                                                 // 000000058AB0: 40
	.byte 0                                                    // 000000058AB1: 00
	.short 0                                                   // 000000058AB2: 0000
	.long 0                                                    // 000000058AB4: 00000000
	.long 0x11c5                                               // 000000058AB8: 000011C5
	.long 0x70312                                              // 000000058ABC: 00070312
	.long 0x6e300                                              // 000000058AC0: 0006E300
	.long 0                                                    // 000000058AC4: 00000000
	.ascii "@"                                                 // 000000058AC8: 40
	.byte 0x1                                                  // 000000058AC9: 01
	.short 0                                                   // 000000058ACA: 0000
	.long 0                                                    // 000000058ACC: 00000000
	.long 0x1480                                               // 000000058AD0: 00001480
	.long 0x70312                                              // 000000058AD4: 00070312
	.long 0x6f400                                              // 000000058AD8: 0006F400
	.long 0                                                    // 000000058ADC: 00000000
	.ascii "L"                                                 // 000000058AE0: 4C
	.byte 0x1                                                  // 000000058AE1: 01
	.short 0                                                   // 000000058AE2: 0000
	.long 0                                                    // 000000058AE4: 00000000
	.ascii "%;"                                                // 000000058AE8: 3B25
	.short 0                                                   // 000000058AEA: 0000
	.long 0x70312                                              // 000000058AEC: 00070312
	.long 0x7b900                                              // 000000058AF0: 0007B900
	.long 0                                                    // 000000058AF4: 00000000
	.long 0x114                                                // 000000058AF8: 00000114
	.long 0                                                    // 000000058AFC: 00000000
	.ascii "^"                                                 // 000000058B00: 5E
	.byte 0xe                                                  // 000000058B01: 0E
	.short 0                                                   // 000000058B02: 0000
	.long 0x70312                                              // 000000058B04: 00070312
	.long 0x6cf00                                              // 000000058B08: 0006CF00
	.long 0                                                    // 000000058B0C: 00000000
	.ascii ","                                                 // 000000058B10: 2C
	.byte 0x1                                                  // 000000058B11: 01
	.short 0                                                   // 000000058B12: 0000
	.long 0                                                    // 000000058B14: 00000000
	.ascii "<"                                                 // 000000058B18: 3C
	.byte 0x13                                                 // 000000058B19: 13
	.short 0                                                   // 000000058B1A: 0000
	.long 0x70312                                              // 000000058B1C: 00070312
	.long 0x6ed00                                              // 000000058B20: 0006ED00
	.long 0                                                    // 000000058B24: 00000000
	.ascii "|"                                                 // 000000058B28: 7C
	.byte 0x1                                                  // 000000058B29: 01
	.short 0                                                   // 000000058B2A: 0000
	.long 0                                                    // 000000058B2C: 00000000
	.long 0x370d                                               // 000000058B30: 0000370D
	.long 0x60311                                              // 000000058B34: 00060311
	.long 0x65b00                                              // 000000058B38: 00065B00
	.long 0                                                    // 000000058B3C: 00000000
	.ascii "@"                                                 // 000000058B40: 40
	.byte 0                                                    // 000000058B41: 00
	.short 0                                                   // 000000058B42: 0000
	.long 0                                                    // 000000058B44: 00000000
	.ascii "0"                                                 // 000000058B48: 30
	.byte 0x1b                                                 // 000000058B49: 1B
	.short 0                                                   // 000000058B4A: 0000
	.long 0x70312                                              // 000000058B4C: 00070312
	.long 0x71400                                              // 000000058B50: 00071400
	.long 0                                                    // 000000058B54: 00000000
	.ascii "`"                                                 // 000000058B58: 60
	.byte 0                                                    // 000000058B59: 00
	.short 0                                                   // 000000058B5A: 0000
	.long 0                                                    // 000000058B5C: 00000000
	.long 0x3dce                                               // 000000058B60: 00003DCE
	.long 0x70312                                              // 000000058B64: 00070312
	.long 0x7c400                                              // 000000058B68: 0007C400
	.long 0                                                    // 000000058B6C: 00000000
	.long 0x104                                                // 000000058B70: 00000104
	.long 0                                                    // 000000058B74: 00000000
	.long 0xac4                                                // 000000058B78: 00000AC4
	.long 0x70312                                              // 000000058B7C: 00070312
	.long 0x6bd00                                              // 000000058B80: 0006BD00
	.long 0                                                    // 000000058B84: 00000000
	.ascii "T"                                                 // 000000058B88: 54
	.byte 0x1                                                  // 000000058B89: 01
	.short 0                                                   // 000000058B8A: 0000
	.long 0                                                    // 000000058B8C: 00000000
	.long 0x31ea                                               // 000000058B90: 000031EA
	.long 0x60311                                              // 000000058B94: 00060311
	.long 0x656c0                                              // 000000058B98: 000656C0
	.long 0                                                    // 000000058B9C: 00000000
	.ascii "@"                                                 // 000000058BA0: 40
	.byte 0                                                    // 000000058BA1: 00
	.short 0                                                   // 000000058BA2: 0000
	.long 0                                                    // 000000058BA4: 00000000
	.long 0x3607                                               // 000000058BA8: 00003607
	.long 0x60311                                              // 000000058BAC: 00060311
	.long 0x65a00                                              // 000000058BB0: 00065A00
	.long 0                                                    // 000000058BB4: 00000000
	.ascii "@"                                                 // 000000058BB8: 40
	.byte 0                                                    // 000000058BB9: 00
	.short 0                                                   // 000000058BBA: 0000
	.long 0                                                    // 000000058BBC: 00000000
	.long 0x695                                                // 000000058BC0: 00000695
	.long 0x60311                                              // 000000058BC4: 00060311
	.long 0x632c0                                              // 000000058BC8: 000632C0
	.long 0                                                    // 000000058BCC: 00000000
	.ascii "@"                                                 // 000000058BD0: 40
	.byte 0                                                    // 000000058BD1: 00
	.short 0                                                   // 000000058BD2: 0000
	.long 0                                                    // 000000058BD4: 00000000
	.long 0xa03                                                // 000000058BD8: 00000A03
	.long 0x60311                                              // 000000058BDC: 00060311
	.long 0x635c0                                              // 000000058BE0: 000635C0
	.long 0                                                    // 000000058BE4: 00000000
	.ascii "@"                                                 // 000000058BE8: 40
	.byte 0                                                    // 000000058BE9: 00
	.short 0                                                   // 000000058BEA: 0000
	.long 0                                                    // 000000058BEC: 00000000
	.ascii "d1"                                                // 000000058BF0: 3164
	.short 0                                                   // 000000058BF2: 0000
	.long 0x70312                                              // 000000058BF4: 00070312
	.long 0x78d00                                              // 000000058BF8: 00078D00
	.long 0                                                    // 000000058BFC: 00000000
	.ascii "l"                                                 // 000000058C00: 6C
	.byte 0x1                                                  // 000000058C01: 01
	.short 0                                                   // 000000058C02: 0000
	.long 0                                                    // 000000058C04: 00000000
	.long 0x3ef1                                               // 000000058C08: 00003EF1
	.long 0x70312                                              // 000000058C0C: 00070312
	.long 0x7c800                                              // 000000058C10: 0007C800
	.long 0                                                    // 000000058C14: 00000000
	.long 0xfc                                                 // 000000058C18: 000000FC
	.long 0                                                    // 000000058C1C: 00000000
	.long 0x4db1                                               // 000000058C20: 00004DB1
	.long 0x70312                                              // 000000058C24: 00070312
	.long 0x80300                                              // 000000058C28: 00080300
	.long 0                                                    // 000000058C2C: 00000000
	.long 0x8c                                                 // 000000058C30: 0000008C
	.long 0                                                    // 000000058C34: 00000000
	.ascii "ZX"                                                // 000000058C38: 585A
	.short 0                                                   // 000000058C3A: 0000
	.long 0x60311                                              // 000000058C3C: 00060311
	.long 0x67600                                              // 000000058C40: 00067600
	.long 0                                                    // 000000058C44: 00000000
	.ascii "@"                                                 // 000000058C48: 40
	.byte 0                                                    // 000000058C49: 00
	.short 0                                                   // 000000058C4A: 0000
	.long 0                                                    // 000000058C4C: 00000000
	.ascii "y"                                                 // 000000058C50: 79
	.byte 0x10                                                 // 000000058C51: 10
	.short 0                                                   // 000000058C52: 0000
	.long 0x70312                                              // 000000058C54: 00070312
	.long 0x6dc00                                              // 000000058C58: 0006DC00
	.long 0                                                    // 000000058C5C: 00000000
	.long 0x19c                                                // 000000058C60: 0000019C
	.long 0                                                    // 000000058C64: 00000000
	.long 0x32cc                                               // 000000058C68: 000032CC
	.long 0x70312                                              // 000000058C6C: 00070312
	.long 0x79400                                              // 000000058C70: 00079400
	.long 0                                                    // 000000058C74: 00000000
	.long 0x104                                                // 000000058C78: 00000104
	.long 0                                                    // 000000058C7C: 00000000
	.long 0x368a                                               // 000000058C80: 0000368A
	.long 0x60311                                              // 000000058C84: 00060311
	.long 0x65a80                                              // 000000058C88: 00065A80
	.long 0                                                    // 000000058C8C: 00000000
	.ascii "@"                                                 // 000000058C90: 40
	.byte 0                                                    // 000000058C91: 00
	.short 0                                                   // 000000058C92: 0000
	.long 0                                                    // 000000058C94: 00000000
	.ascii "R?"                                                // 000000058C98: 3F52
	.short 0                                                   // 000000058C9A: 0000
	.long 0x70312                                              // 000000058C9C: 00070312
	.long 0x7c900                                              // 000000058CA0: 0007C900
	.long 0                                                    // 000000058CA4: 00000000
	.long 0xa8                                                 // 000000058CA8: 000000A8
	.long 0                                                    // 000000058CAC: 00000000
	.ascii "q@"                                                // 000000058CB0: 4071
	.short 0                                                   // 000000058CB2: 0000
	.long 0x60311                                              // 000000058CB4: 00060311
	.ascii "@c"                                                // 000000058CB8: 6340
	.short 0x6                                                 // 000000058CBA: 0006
	.long 0                                                    // 000000058CBC: 00000000
	.ascii "@"                                                 // 000000058CC0: 40
	.byte 0                                                    // 000000058CC1: 00
	.short 0                                                   // 000000058CC2: 0000
	.long 0                                                    // 000000058CC4: 00000000
	.ascii "sR"                                                // 000000058CC8: 5273
	.short 0                                                   // 000000058CCA: 0000
	.long 0x70312                                              // 000000058CCC: 00070312
	.long 0x81700                                              // 000000058CD0: 00081700
	.long 0                                                    // 000000058CD4: 00000000
	.long 0xa4                                                 // 000000058CD8: 000000A4
	.long 0                                                    // 000000058CDC: 00000000
	.long 0x4ba1                                               // 000000058CE0: 00004BA1
	.long 0x70312                                              // 000000058CE4: 00070312
	.long 0x7fb00                                              // 000000058CE8: 0007FB00
	.long 0                                                    // 000000058CEC: 00000000
	.long 0xec                                                 // 000000058CF0: 000000EC
	.long 0                                                    // 000000058CF4: 00000000
	.long 0x4f2                                                // 000000058CF8: 000004F2
	.long 0x70312                                              // 000000058CFC: 00070312
	.long 0x6a000                                              // 000000058D00: 0006A000
	.long 0                                                    // 000000058D04: 00000000
	.long 0xe0                                                 // 000000058D08: 000000E0
	.long 0                                                    // 000000058D0C: 00000000
	.long 0xfdb                                                // 000000058D10: 00000FDB
	.long 0x70312                                              // 000000058D14: 00070312
	.long 0x6d800                                              // 000000058D18: 0006D800
	.long 0                                                    // 000000058D1C: 00000000
	.ascii "4"                                                 // 000000058D20: 34
	.byte 0x1                                                  // 000000058D21: 01
	.short 0                                                   // 000000058D22: 0000
	.long 0                                                    // 000000058D24: 00000000
	.long 0x39b7                                               // 000000058D28: 000039B7
	.long 0x70312                                              // 000000058D2C: 00070312
	.long 0x7b300                                              // 000000058D30: 0007B300
	.long 0                                                    // 000000058D34: 00000000
	.long 0x94                                                 // 000000058D38: 00000094
	.long 0                                                    // 000000058D3C: 00000000
	.long 0x18b6                                               // 000000058D40: 000018B6
	.long 0x60311                                              // 000000058D44: 00060311
	.long 0x64280                                              // 000000058D48: 00064280
	.long 0                                                    // 000000058D4C: 00000000
	.ascii "@"                                                 // 000000058D50: 40
	.byte 0                                                    // 000000058D51: 00
	.short 0                                                   // 000000058D52: 0000
	.long 0                                                    // 000000058D54: 00000000
	.long 0x1c98                                               // 000000058D58: 00001C98
	.long 0x70312                                              // 000000058D5C: 00070312
	.long 0x71b00                                              // 000000058D60: 00071B00
	.long 0                                                    // 000000058D64: 00000000
	.ascii "8"                                                 // 000000058D68: 38
	.byte 0x1                                                  // 000000058D69: 01
	.short 0                                                   // 000000058D6A: 0000
	.long 0                                                    // 000000058D6C: 00000000
	.ascii "I."                                                // 000000058D70: 2E49
	.short 0                                                   // 000000058D72: 0000
	.long 0x70312                                              // 000000058D74: 00070312
	.long 0x77c00                                              // 000000058D78: 00077C00
	.long 0                                                    // 000000058D7C: 00000000
	.ascii "\\"                                                // 000000058D80: 5C
	.byte 0x1                                                  // 000000058D81: 01
	.short 0                                                   // 000000058D82: 0000
	.long 0                                                    // 000000058D84: 00000000
	.long 0x3e8e                                               // 000000058D88: 00003E8E
	.long 0x70312                                              // 000000058D8C: 00070312
	.long 0x7c700                                              // 000000058D90: 0007C700
	.long 0                                                    // 000000058D94: 00000000
	.long 0xe0                                                 // 000000058D98: 000000E0
	.long 0                                                    // 000000058D9C: 00000000
	.long 0x438b                                               // 000000058DA0: 0000438B
	.long 0x70312                                              // 000000058DA4: 00070312
	.long 0x7d700                                              // 000000058DA8: 0007D700
	.long 0                                                    // 000000058DAC: 00000000
	.long 0x8c                                                 // 000000058DB0: 0000008C
	.long 0                                                    // 000000058DB4: 00000000
	.long 0x2bd                                                // 000000058DB8: 000002BD
	.long 0x70312                                              // 000000058DBC: 00070312
	.long 0x69600                                              // 000000058DC0: 00069600
	.long 0                                                    // 000000058DC4: 00000000
	.long 0xe8                                                 // 000000058DC8: 000000E8
	.long 0                                                    // 000000058DCC: 00000000
	.long 0x12ef                                               // 000000058DD0: 000012EF
	.long 0x70312                                              // 000000058DD4: 00070312
	.long 0x6eb00                                              // 000000058DD8: 0006EB00
	.long 0                                                    // 000000058DDC: 00000000
	.ascii "8"                                                 // 000000058DE0: 38
	.byte 0x1                                                  // 000000058DE1: 01
	.short 0                                                   // 000000058DE2: 0000
	.long 0                                                    // 000000058DE4: 00000000
	.long 0x14a5                                               // 000000058DE8: 000014A5
	.long 0x60311                                              // 000000058DEC: 00060311
	.long 0x63e80                                              // 000000058DF0: 00063E80
	.long 0                                                    // 000000058DF4: 00000000
	.ascii "@"                                                 // 000000058DF8: 40
	.byte 0                                                    // 000000058DF9: 00
	.short 0                                                   // 000000058DFA: 0000
	.long 0                                                    // 000000058DFC: 00000000
	.long 0x2600                                               // 000000058E00: 00002600
	.long 0x60311                                              // 000000058E04: 00060311
	.long 0x64e00                                              // 000000058E08: 00064E00
	.long 0                                                    // 000000058E0C: 00000000
	.ascii "@"                                                 // 000000058E10: 40
	.byte 0                                                    // 000000058E11: 00
	.short 0                                                   // 000000058E12: 0000
	.long 0                                                    // 000000058E14: 00000000
	.long 0x2a00                                               // 000000058E18: 00002A00
	.long 0x60311                                              // 000000058E1C: 00060311
	.long 0x65100                                              // 000000058E20: 00065100
	.long 0                                                    // 000000058E24: 00000000
	.ascii "@"                                                 // 000000058E28: 40
	.byte 0                                                    // 000000058E29: 00
	.short 0                                                   // 000000058E2A: 0000
	.long 0                                                    // 000000058E2C: 00000000
	.long 0x36cb                                               // 000000058E30: 000036CB
	.long 0x60311                                              // 000000058E34: 00060311
	.long 0x65ac0                                              // 000000058E38: 00065AC0
	.long 0                                                    // 000000058E3C: 00000000
	.ascii "@"                                                 // 000000058E40: 40
	.byte 0                                                    // 000000058E41: 00
	.short 0                                                   // 000000058E42: 0000
	.long 0                                                    // 000000058E44: 00000000
	.long 0x1e07                                               // 000000058E48: 00001E07
	.long 0x70312                                              // 000000058E4C: 00070312
	.long 0x72300                                              // 000000058E50: 00072300
	.long 0                                                    // 000000058E54: 00000000
	.long 0x100                                                // 000000058E58: 00000100
	.long 0                                                    // 000000058E5C: 00000000
	.long 0x22e7                                               // 000000058E60: 000022E7
	.long 0x70312                                              // 000000058E64: 00070312
	.long 0x73b00                                              // 000000058E68: 00073B00
	.long 0                                                    // 000000058E6C: 00000000
	.ascii "d"                                                 // 000000058E70: 64
	.byte 0x1                                                  // 000000058E71: 01
	.short 0                                                   // 000000058E72: 0000
	.long 0                                                    // 000000058E74: 00000000
	.ascii "	9"                                                // 000000058E78: 3909
	.short 0                                                   // 000000058E7A: 0000
	.long 0x60311                                              // 000000058E7C: 00060311
	.long 0x65d00                                              // 000000058E80: 00065D00
	.long 0                                                    // 000000058E84: 00000000
	.ascii "@"                                                 // 000000058E88: 40
	.byte 0                                                    // 000000058E89: 00
	.short 0                                                   // 000000058E8A: 0000
	.long 0                                                    // 000000058E8C: 00000000
	.long 0x4af3                                               // 000000058E90: 00004AF3
	.long 0x70312                                              // 000000058E94: 00070312
	.long 0x7f800                                              // 000000058E98: 0007F800
	.long 0                                                    // 000000058E9C: 00000000
	.ascii ","                                                 // 000000058EA0: 2C
	.byte 0x1                                                  // 000000058EA1: 01
	.short 0                                                   // 000000058EA2: 0000
	.long 0                                                    // 000000058EA4: 00000000
	.ascii "w"                                                 // 000000058EA8: 77
	.byte 0x1c                                                 // 000000058EA9: 1C
	.short 0                                                   // 000000058EAA: 0000
	.long 0x60311                                              // 000000058EAC: 00060311
	.long 0x646c0                                              // 000000058EB0: 000646C0
	.long 0                                                    // 000000058EB4: 00000000
	.ascii "@"                                                 // 000000058EB8: 40
	.byte 0                                                    // 000000058EB9: 00
	.short 0                                                   // 000000058EBA: 0000
	.long 0                                                    // 000000058EBC: 00000000
	.long 0x2d07                                               // 000000058EC0: 00002D07
	.long 0x60311                                              // 000000058EC4: 00060311
	.ascii "@S"                                                // 000000058EC8: 5340
	.short 0x6                                                 // 000000058ECA: 0006
	.long 0                                                    // 000000058ECC: 00000000
	.ascii "@"                                                 // 000000058ED0: 40
	.byte 0                                                    // 000000058ED1: 00
	.short 0                                                   // 000000058ED2: 0000
	.long 0                                                    // 000000058ED4: 00000000
	.ascii "0/"                                                // 000000058ED8: 2F30
	.short 0                                                   // 000000058EDA: 0000
	.long 0x60311                                              // 000000058EDC: 00060311
	.long 0x654c0                                              // 000000058EE0: 000654C0
	.long 0                                                    // 000000058EE4: 00000000
	.ascii "@"                                                 // 000000058EE8: 40
	.byte 0                                                    // 000000058EE9: 00
	.short 0                                                   // 000000058EEA: 0000
	.long 0                                                    // 000000058EEC: 00000000
	.ascii "S"                                                 // 000000058EF0: 53
	.byte 0x15                                                 // 000000058EF1: 15
	.short 0                                                   // 000000058EF2: 0000
	.long 0x70312                                              // 000000058EF4: 00070312
	.long 0x6f800                                              // 000000058EF8: 0006F800
	.long 0                                                    // 000000058EFC: 00000000
	.long 0xf0                                                 // 000000058F00: 000000F0
	.long 0                                                    // 000000058F04: 00000000
	.long 0x179f                                               // 000000058F08: 0000179F
	.long 0x60311                                              // 000000058F0C: 00060311
	.ascii "@A"                                                // 000000058F10: 4140
	.short 0x6                                                 // 000000058F12: 0006
	.long 0                                                    // 000000058F14: 00000000
	.ascii "@"                                                 // 000000058F18: 40
	.byte 0                                                    // 000000058F19: 00
	.short 0                                                   // 000000058F1A: 0000
	.long 0                                                    // 000000058F1C: 00000000
	.ascii "8G"                                                // 000000058F20: 4738
	.short 0                                                   // 000000058F22: 0000
	.long 0x70312                                              // 000000058F24: 00070312
	.long 0x7e700                                              // 000000058F28: 0007E700
	.long 0                                                    // 000000058F2C: 00000000
	.ascii "4"                                                 // 000000058F30: 34
	.byte 0x1                                                  // 000000058F31: 01
	.short 0                                                   // 000000058F32: 0000
	.long 0                                                    // 000000058F34: 00000000
	.ascii "-"                                                 // 000000058F38: 2D
	.byte 0x1                                                  // 000000058F39: 01
	.short 0                                                   // 000000058F3A: 0000
	.long 0x70312                                              // 000000058F3C: 00070312
	.long 0x68e00                                              // 000000058F40: 00068E00
	.long 0                                                    // 000000058F44: 00000000
	.ascii "4"                                                 // 000000058F48: 34
	.byte 0x1                                                  // 000000058F49: 01
	.short 0                                                   // 000000058F4A: 0000
	.long 0                                                    // 000000058F4C: 00000000
	.ascii "-&"                                                // 000000058F50: 262D
	.short 0                                                   // 000000058F52: 0000
	.long 0x70312                                              // 000000058F54: 00070312
	.long 0x74d00                                              // 000000058F58: 00074D00
	.long 0                                                    // 000000058F5C: 00000000
	.long 0x114                                                // 000000058F60: 00000114
	.long 0                                                    // 000000058F64: 00000000
	.ascii "^D"                                                // 000000058F68: 445E
	.short 0                                                   // 000000058F6A: 0000
	.long 0x60311                                              // 000000058F6C: 00060311
	.ascii "@f"                                                // 000000058F70: 6640
	.short 0x6                                                 // 000000058F72: 0006
	.long 0                                                    // 000000058F74: 00000000
	.ascii "@"                                                 // 000000058F78: 40
	.byte 0                                                    // 000000058F79: 00
	.short 0                                                   // 000000058F7A: 0000
	.long 0                                                    // 000000058F7C: 00000000
	.ascii "<"                                                 // 000000058F80: 3C
	.byte 0x17                                                 // 000000058F81: 17
	.short 0                                                   // 000000058F82: 0000
	.long 0x60311                                              // 000000058F84: 00060311
	.long 0x640c0                                              // 000000058F88: 000640C0
	.long 0                                                    // 000000058F8C: 00000000
	.ascii "@"                                                 // 000000058F90: 40
	.byte 0                                                    // 000000058F91: 00
	.short 0                                                   // 000000058F92: 0000
	.long 0                                                    // 000000058F94: 00000000
	.long 0x1a0d                                               // 000000058F98: 00001A0D
	.long 0x70312                                              // 000000058F9C: 00070312
	.long 0x70f00                                              // 000000058FA0: 00070F00
	.long 0                                                    // 000000058FA4: 00000000
	.long 0xa0                                                 // 000000058FA8: 000000A0
	.long 0                                                    // 000000058FAC: 00000000
	.long 0x1da0                                               // 000000058FB0: 00001DA0
	.long 0x70312                                              // 000000058FB4: 00070312
	.long 0x72200                                              // 000000058FB8: 00072200
	.long 0                                                    // 000000058FBC: 00000000
	.long 0x100                                                // 000000058FC0: 00000100
	.long 0                                                    // 000000058FC4: 00000000
	.ascii "<!"                                                // 000000058FC8: 213C
	.short 0                                                   // 000000058FCA: 0000
	.long 0x70312                                              // 000000058FCC: 00070312
	.long 0x73200                                              // 000000058FD0: 00073200
	.long 0                                                    // 000000058FD4: 00000000
	.long 0xe4                                                 // 000000058FD8: 000000E4
	.long 0                                                    // 000000058FDC: 00000000
	.long 0x4cf9                                               // 000000058FE0: 00004CF9
	.long 0x70312                                              // 000000058FE4: 00070312
	.long 0x7ff00                                              // 000000058FE8: 0007FF00
	.long 0                                                    // 000000058FEC: 00000000
	.ascii "H"                                                 // 000000058FF0: 48
	.byte 0x1                                                  // 000000058FF1: 01
	.short 0                                                   // 000000058FF2: 0000
	.long 0                                                    // 000000058FF4: 00000000
	.long 0x589f                                               // 000000058FF8: 0000589F
	.long 0x60311                                              // 000000058FFC: 00060311
	.ascii "@v"                                                // 000000059000: 7640
	.short 0x6                                                 // 000000059002: 0006
	.long 0                                                    // 000000059004: 00000000
	.ascii "@"                                                 // 000000059008: 40
	.byte 0                                                    // 000000059009: 00
	.short 0                                                   // 00000005900A: 0000
	.long 0                                                    // 00000005900C: 00000000
	.ascii "#"                                                 // 000000059010: 23
	.byte 0x8                                                  // 000000059011: 08
	.short 0                                                   // 000000059012: 0000
	.long 0x70312                                              // 000000059014: 00070312
	.long 0x6ae00                                              // 000000059018: 0006AE00
	.long 0                                                    // 00000005901C: 00000000
	.long 0xd4                                                 // 000000059020: 000000D4
	.long 0                                                    // 000000059024: 00000000
	.ascii "7"                                                 // 000000059028: 37
	.byte 0x1c                                                 // 000000059029: 1C
	.short 0                                                   // 00000005902A: 0000
	.long 0x60311                                              // 00000005902C: 00060311
	.long 0x64680                                              // 000000059030: 00064680
	.long 0                                                    // 000000059034: 00000000
	.ascii "@"                                                 // 000000059038: 40
	.byte 0                                                    // 000000059039: 00
	.short 0                                                   // 00000005903A: 0000
	.long 0                                                    // 00000005903C: 00000000
	.long 0x2311                                               // 000000059040: 00002311
	.long 0x60311                                              // 000000059044: 00060311
	.long 0x64bc0                                              // 000000059048: 00064BC0
	.long 0                                                    // 00000005904C: 00000000
	.ascii "@"                                                 // 000000059050: 40
	.byte 0                                                    // 000000059051: 00
	.short 0                                                   // 000000059052: 0000
	.long 0                                                    // 000000059054: 00000000
	.ascii "BP"                                                // 000000059058: 5042
	.short 0                                                   // 00000005905A: 0000
	.long 0x60311                                              // 00000005905C: 00060311
	.long 0x66f00                                              // 000000059060: 00066F00
	.long 0                                                    // 000000059064: 00000000
	.ascii "@"                                                 // 000000059068: 40
	.byte 0                                                    // 000000059069: 00
	.short 0                                                   // 00000005906A: 0000
	.long 0                                                    // 00000005906C: 00000000
	.long 0x5319                                               // 000000059070: 00005319
	.long 0x70312                                              // 000000059074: 00070312
	.long 0x81900                                              // 000000059078: 00081900
	.long 0                                                    // 00000005907C: 00000000
	.long 0x118                                                // 000000059080: 00000118
	.long 0                                                    // 000000059084: 00000000
	.long 0x5597                                               // 000000059088: 00005597
	.long 0x60311                                              // 00000005908C: 00060311
	.ascii "@s"                                                // 000000059090: 7340
	.short 0x6                                                 // 000000059092: 0006
	.long 0                                                    // 000000059094: 00000000
	.ascii "@"                                                 // 000000059098: 40
	.byte 0                                                    // 000000059099: 00
	.short 0                                                   // 00000005909A: 0000
	.long 0                                                    // 00000005909C: 00000000
	.ascii "\""                                                // 0000000590A0: 22
	.byte 0x1f                                                 // 0000000590A1: 1F
	.short 0                                                   // 0000000590A2: 0000
	.long 0x70312                                              // 0000000590A4: 00070312
	.long 0x72700                                              // 0000000590A8: 00072700
	.long 0                                                    // 0000000590AC: 00000000
	.long 0x10c                                                // 0000000590B0: 0000010C
	.long 0                                                    // 0000000590B4: 00000000
	.long 0x2c94                                               // 0000000590B8: 00002C94
	.long 0x70312                                              // 0000000590BC: 00070312
	.long 0x77200                                              // 0000000590C0: 00077200
	.long 0                                                    // 0000000590C4: 00000000
	.ascii "d"                                                 // 0000000590C8: 64
	.byte 0x1                                                  // 0000000590C9: 01
	.short 0                                                   // 0000000590CA: 0000
	.long 0                                                    // 0000000590CC: 00000000
	.long 0x3fec                                               // 0000000590D0: 00003FEC
	.long 0x70312                                              // 0000000590D4: 00070312
	.long 0x7cb00                                              // 0000000590D8: 0007CB00
	.long 0                                                    // 0000000590DC: 00000000
	.long 0x94                                                 // 0000000590E0: 00000094
	.long 0                                                    // 0000000590E4: 00000000
	.long 0x46dd                                               // 0000000590E8: 000046DD
	.long 0x70312                                              // 0000000590EC: 00070312
	.long 0x7e600                                              // 0000000590F0: 0007E600
	.long 0                                                    // 0000000590F4: 00000000
	.long 0x8c                                                 // 0000000590F8: 0000008C
	.long 0                                                    // 0000000590FC: 00000000
	.long 0x4993                                               // 000000059100: 00004993
	.long 0x70312                                              // 000000059104: 00070312
	.long 0x7f200                                              // 000000059108: 0007F200
	.long 0                                                    // 00000005910C: 00000000
	.long 0xd4                                                 // 000000059110: 000000D4
	.long 0                                                    // 000000059114: 00000000
	.long 0x54f1                                               // 000000059118: 000054F1
	.long 0x70312                                              // 00000005911C: 00070312
	.long 0x82100                                              // 000000059120: 00082100
	.long 0                                                    // 000000059124: 00000000
	.ascii "`"                                                 // 000000059128: 60
	.byte 0                                                    // 000000059129: 00
	.short 0                                                   // 00000005912A: 0000
	.long 0                                                    // 00000005912C: 00000000
	.long 0x290d                                               // 000000059130: 0000290D
	.long 0x60311                                              // 000000059134: 00060311
	.ascii "@P"                                                // 000000059138: 5040
	.short 0x6                                                 // 00000005913A: 0006
	.long 0                                                    // 00000005913C: 00000000
	.ascii "@"                                                 // 000000059140: 40
	.byte 0                                                    // 000000059141: 00
	.short 0                                                   // 000000059142: 0000
	.long 0                                                    // 000000059144: 00000000
	.long 0x2cb4                                               // 000000059148: 00002CB4
	.long 0x60311                                              // 00000005914C: 00060311
	.long 0x65300                                              // 000000059150: 00065300
	.long 0                                                    // 000000059154: 00000000
	.ascii "@"                                                 // 000000059158: 40
	.byte 0                                                    // 000000059159: 00
	.short 0                                                   // 00000005915A: 0000
	.long 0                                                    // 00000005915C: 00000000
	.ascii " ?"                                                // 000000059160: 3F20
	.short 0                                                   // 000000059162: 0000
	.long 0x60311                                              // 000000059164: 00060311
	.ascii "@b"                                                // 000000059168: 6240
	.short 0x6                                                 // 00000005916A: 0006
	.long 0                                                    // 00000005916C: 00000000
	.ascii "@"                                                 // 000000059170: 40
	.byte 0                                                    // 000000059171: 00
	.short 0                                                   // 000000059172: 0000
	.long 0                                                    // 000000059174: 00000000
	.long 0x56df                                               // 000000059178: 000056DF
	.long 0x60311                                              // 00000005917C: 00060311
	.long 0x67480                                              // 000000059180: 00067480
	.long 0                                                    // 000000059184: 00000000
	.ascii "@"                                                 // 000000059188: 40
	.byte 0                                                    // 000000059189: 00
	.short 0                                                   // 00000005918A: 0000
	.long 0                                                    // 00000005918C: 00000000
	.long 0x58c4                                               // 000000059190: 000058C4
	.long 0x70312                                              // 000000059194: 00070312
	.long 0x83000                                              // 000000059198: 00083000
	.long 0                                                    // 00000005919C: 00000000
	.ascii "|"                                                 // 0000000591A0: 7C
	.byte 0                                                    // 0000000591A1: 00
	.short 0                                                   // 0000000591A2: 0000
	.long 0                                                    // 0000000591A4: 00000000
	.ascii "-6"                                                // 0000000591A8: 362D
	.short 0                                                   // 0000000591AA: 0000
	.long 0x70312                                              // 0000000591AC: 00070312
	.long 0x7a500                                              // 0000000591B0: 0007A500
	.long 0                                                    // 0000000591B4: 00000000
	.ascii "h"                                                 // 0000000591B8: 68
	.byte 0                                                    // 0000000591B9: 00
	.short 0                                                   // 0000000591BA: 0000
	.long 0                                                    // 0000000591BC: 00000000
	.ascii "qP"                                                // 0000000591C0: 5071
	.short 0                                                   // 0000000591C2: 0000
	.long 0x70312                                              // 0000000591C4: 00070312
	.long 0x80e00                                              // 0000000591C8: 00080E00
	.long 0                                                    // 0000000591CC: 00000000
	.long 0x110                                                // 0000000591D0: 00000110
	.long 0                                                    // 0000000591D4: 00000000
	.long 0x51ac                                               // 0000000591D8: 000051AC
	.long 0x60311                                              // 0000000591DC: 00060311
	.long 0x67000                                              // 0000000591E0: 00067000
	.long 0                                                    // 0000000591E4: 00000000
	.ascii "@"                                                 // 0000000591E8: 40
	.byte 0                                                    // 0000000591E9: 00
	.short 0                                                   // 0000000591EA: 0000
	.long 0                                                    // 0000000591EC: 00000000
	.long 0x53f0                                               // 0000000591F0: 000053F0
	.long 0x60311                                              // 0000000591F4: 00060311
	.long 0x671c0                                              // 0000000591F8: 000671C0
	.long 0                                                    // 0000000591FC: 00000000
	.ascii "@"                                                 // 000000059200: 40
	.byte 0                                                    // 000000059201: 00
	.short 0                                                   // 000000059202: 0000
	.long 0                                                    // 000000059204: 00000000
	.long 0x9c3                                                // 000000059208: 000009C3
	.long 0x60311                                              // 00000005920C: 00060311
	.long 0x63580                                              // 000000059210: 00063580
	.long 0                                                    // 000000059214: 00000000
	.ascii "@"                                                 // 000000059218: 40
	.byte 0                                                    // 000000059219: 00
	.short 0                                                   // 00000005921A: 0000
	.long 0                                                    // 00000005921C: 00000000
	.ascii "\n"                                                // 000000059220: 0A
	.byte 0x16                                                 // 000000059221: 16
	.short 0                                                   // 000000059222: 0000
	.long 0x60311                                              // 000000059224: 00060311
	.long 0x63fc0                                              // 000000059228: 00063FC0
	.long 0                                                    // 00000005922C: 00000000
	.ascii "@"                                                 // 000000059230: 40
	.byte 0                                                    // 000000059231: 00
	.short 0                                                   // 000000059232: 0000
	.long 0                                                    // 000000059234: 00000000
	.long 0x2b06                                               // 000000059238: 00002B06
	.long 0x60311                                              // 00000005923C: 00060311
	.long 0x651c0                                              // 000000059240: 000651C0
	.long 0                                                    // 000000059244: 00000000
	.ascii "@"                                                 // 000000059248: 40
	.byte 0                                                    // 000000059249: 00
	.short 0                                                   // 00000005924A: 0000
	.long 0                                                    // 00000005924C: 00000000
	.ascii "K6"                                                // 000000059250: 364B
	.short 0                                                   // 000000059252: 0000
	.long 0x60311                                              // 000000059254: 00060311
	.ascii "@Z"                                                // 000000059258: 5A40
	.short 0x6                                                 // 00000005925A: 0006
	.long 0                                                    // 00000005925C: 00000000
	.ascii "@"                                                 // 000000059260: 40
	.byte 0                                                    // 000000059261: 00
	.short 0                                                   // 000000059262: 0000
	.long 0                                                    // 000000059264: 00000000
	.ascii "oA"                                                // 000000059268: 416F
	.short 0                                                   // 00000005926A: 0000
	.long 0x60311                                              // 00000005926C: 00060311
	.long 0x66400                                              // 000000059270: 00066400
	.long 0                                                    // 000000059274: 00000000
	.ascii "@"                                                 // 000000059278: 40
	.byte 0                                                    // 000000059279: 00
	.short 0                                                   // 00000005927A: 0000
	.long 0                                                    // 00000005927C: 00000000
	.long 0xe                                                  // 000000059280: 0000000E
	.long 0x60311                                              // 000000059284: 00060311
	.long 0x62cc0                                              // 000000059288: 00062CC0
	.long 0                                                    // 00000005928C: 00000000
	.ascii "@"                                                 // 000000059290: 40
	.byte 0                                                    // 000000059291: 00
	.short 0                                                   // 000000059292: 0000
	.long 0                                                    // 000000059294: 00000000
	.ascii "?"                                                 // 000000059298: 3F
	.byte 0x4                                                  // 000000059299: 04
	.short 0                                                   // 00000005929A: 0000
	.long 0x60311                                              // 00000005929C: 00060311
	.long 0x630c0                                              // 0000000592A0: 000630C0
	.long 0                                                    // 0000000592A4: 00000000
	.ascii "@"                                                 // 0000000592A8: 40
	.byte 0                                                    // 0000000592A9: 00
	.short 0                                                   // 0000000592AA: 0000
	.long 0                                                    // 0000000592AC: 00000000
	.ascii "=:"                                                // 0000000592B0: 3A3D
	.short 0                                                   // 0000000592B2: 0000
	.long 0x70312                                              // 0000000592B4: 00070312
	.long 0x7b500                                              // 0000000592B8: 0007B500
	.long 0                                                    // 0000000592BC: 00000000
	.ascii "@"                                                 // 0000000592C0: 40
	.byte 0                                                    // 0000000592C1: 00
	.short 0                                                   // 0000000592C2: 0000
	.long 0                                                    // 0000000592C4: 00000000
	.ascii "hO"                                                // 0000000592C8: 4F68
	.short 0                                                   // 0000000592CA: 0000
	.long 0x70312                                              // 0000000592CC: 00070312
	.long 0x80a00                                              // 0000000592D0: 00080A00
	.long 0                                                    // 0000000592D4: 00000000
	.long 0xf8                                                 // 0000000592D8: 000000F8
	.long 0                                                    // 0000000592DC: 00000000
	.long 0x51f6                                               // 0000000592E0: 000051F6
	.long 0x60311                                              // 0000000592E4: 00060311
	.ascii "@p"                                                // 0000000592E8: 7040
	.short 0x6                                                 // 0000000592EA: 0006
	.long 0                                                    // 0000000592EC: 00000000
	.ascii "@"                                                 // 0000000592F0: 40
	.byte 0                                                    // 0000000592F1: 00
	.short 0                                                   // 0000000592F2: 0000
	.long 0                                                    // 0000000592F4: 00000000
	.ascii "I"                                                 // 0000000592F8: 49
	.byte 0xf                                                  // 0000000592F9: 0F
	.short 0                                                   // 0000000592FA: 0000
	.long 0x70312                                              // 0000000592FC: 00070312
	.long 0x6d400                                              // 000000059300: 0006D400
	.long 0                                                    // 000000059304: 00000000
	.ascii "<"                                                 // 000000059308: 3C
	.byte 0x1                                                  // 000000059309: 01
	.short 0                                                   // 00000005930A: 0000
	.long 0                                                    // 00000005930C: 00000000
	.ascii "v"                                                 // 000000059310: 76
	.byte 0x15                                                 // 000000059311: 15
	.short 0                                                   // 000000059312: 0000
	.long 0x60311                                              // 000000059314: 00060311
	.ascii "@?"                                                // 000000059318: 3F40
	.short 0x6                                                 // 00000005931A: 0006
	.long 0                                                    // 00000005931C: 00000000
	.ascii "@"                                                 // 000000059320: 40
	.byte 0                                                    // 000000059321: 00
	.short 0                                                   // 000000059322: 0000
	.long 0                                                    // 000000059324: 00000000
	.long 0x1af9                                               // 000000059328: 00001AF9
	.long 0x70312                                              // 00000005932C: 00070312
	.long 0x71300                                              // 000000059330: 00071300
	.long 0                                                    // 000000059334: 00000000
	.long 0x98                                                 // 000000059338: 00000098
	.long 0                                                    // 00000005933C: 00000000
	.long 0x2bb7                                               // 000000059340: 00002BB7
	.long 0x60311                                              // 000000059344: 00060311
	.ascii "@R"                                                // 000000059348: 5240
	.short 0x6                                                 // 00000005934A: 0006
	.long 0                                                    // 00000005934C: 00000000
	.ascii "@"                                                 // 000000059350: 40
	.byte 0                                                    // 000000059351: 00
	.short 0                                                   // 000000059352: 0000
	.long 0                                                    // 000000059354: 00000000
	.long 0x38a7                                               // 000000059358: 000038A7
	.long 0x70312                                              // 00000005935C: 00070312
	.long 0x7af00                                              // 000000059360: 0007AF00
	.long 0                                                    // 000000059364: 00000000
	.ascii "h"                                                 // 000000059368: 68
	.byte 0                                                    // 000000059369: 00
	.short 0                                                   // 00000005936A: 0000
	.long 0                                                    // 00000005936C: 00000000
	.long 0x3b84                                               // 000000059370: 00003B84
	.long 0x60311                                              // 000000059374: 00060311
	.long 0x65f80                                              // 000000059378: 00065F80
	.long 0                                                    // 00000005937C: 00000000
	.ascii "@"                                                 // 000000059380: 40
	.byte 0                                                    // 000000059381: 00
	.short 0                                                   // 000000059382: 0000
	.long 0                                                    // 000000059384: 00000000
	.long 0x50f7                                               // 000000059388: 000050F7
	.long 0x60311                                              // 00000005938C: 00060311
	.long 0x66f80                                              // 000000059390: 00066F80
	.long 0                                                    // 000000059394: 00000000
	.ascii "@"                                                 // 000000059398: 40
	.byte 0                                                    // 000000059399: 00
	.short 0                                                   // 00000005939A: 0000
	.long 0                                                    // 00000005939C: 00000000
	.long 0x10a1                                               // 0000000593A0: 000010A1
	.long 0x60311                                              // 0000000593A4: 00060311
	.ascii "@;"                                                // 0000000593A8: 3B40
	.short 0x6                                                 // 0000000593AA: 0006
	.long 0                                                    // 0000000593AC: 00000000
	.ascii "@"                                                 // 0000000593B0: 40
	.byte 0                                                    // 0000000593B1: 00
	.short 0                                                   // 0000000593B2: 0000
	.long 0                                                    // 0000000593B4: 00000000
	.long 0x1314                                               // 0000000593B8: 00001314
	.long 0x60311                                              // 0000000593BC: 00060311
	.ascii "@="                                                // 0000000593C0: 3D40
	.short 0x6                                                 // 0000000593C2: 0006
	.long 0                                                    // 0000000593C4: 00000000
	.ascii "@"                                                 // 0000000593C8: 40
	.byte 0                                                    // 0000000593C9: 00
	.short 0                                                   // 0000000593CA: 0000
	.long 0                                                    // 0000000593CC: 00000000
	.long 0x348c                                               // 0000000593D0: 0000348C
	.long 0x60311                                              // 0000000593D4: 00060311
	.long 0x658c0                                              // 0000000593D8: 000658C0
	.long 0                                                    // 0000000593DC: 00000000
	.ascii "@"                                                 // 0000000593E0: 40
	.byte 0                                                    // 0000000593E1: 00
	.short 0                                                   // 0000000593E2: 0000
	.long 0                                                    // 0000000593E4: 00000000
	.long 0x8e                                                 // 0000000593E8: 0000008E
	.long 0x70312                                              // 0000000593EC: 00070312
	.long 0x68a00                                              // 0000000593F0: 00068A00
	.long 0                                                    // 0000000593F4: 00000000
	.long 0xf0                                                 // 0000000593F8: 000000F0
	.long 0                                                    // 0000000593FC: 00000000
	.long 0x1fb1                                               // 000000059400: 00001FB1
	.long 0x60311                                              // 000000059404: 00060311
	.ascii "@I"                                                // 000000059408: 4940
	.short 0x6                                                 // 00000005940A: 0006
	.long 0                                                    // 00000005940C: 00000000
	.ascii "@"                                                 // 000000059410: 40
	.byte 0                                                    // 000000059411: 00
	.short 0                                                   // 000000059412: 0000
	.long 0                                                    // 000000059414: 00000000
	.long 0x27a3                                               // 000000059418: 000027A3
	.long 0x60311                                              // 00000005941C: 00060311
	.ascii "@O"                                                // 000000059420: 4F40
	.short 0x6                                                 // 000000059422: 0006
	.long 0                                                    // 000000059424: 00000000
	.ascii "@"                                                 // 000000059428: 40
	.byte 0                                                    // 000000059429: 00
	.short 0                                                   // 00000005942A: 0000
	.long 0                                                    // 00000005942C: 00000000
	.long 0x3085                                               // 000000059430: 00003085
	.long 0x60311                                              // 000000059434: 00060311
	.long 0x655c0                                              // 000000059438: 000655C0
	.long 0                                                    // 00000005943C: 00000000
	.ascii "@"                                                 // 000000059440: 40
	.byte 0                                                    // 000000059441: 00
	.short 0                                                   // 000000059442: 0000
	.long 0                                                    // 000000059444: 00000000
	.ascii "]>"                                                // 000000059448: 3E5D
	.short 0                                                   // 00000005944A: 0000
	.long 0x60311                                              // 00000005944C: 00060311
	.long 0x661c0                                              // 000000059450: 000661C0
	.long 0                                                    // 000000059454: 00000000
	.ascii "@"                                                 // 000000059458: 40
	.byte 0                                                    // 000000059459: 00
	.short 0                                                   // 00000005945A: 0000
	.long 0                                                    // 00000005945C: 00000000
	.long 0x44b5                                               // 000000059460: 000044B5
	.long 0x60311                                              // 000000059464: 00060311
	.long 0x66680                                              // 000000059468: 00066680
	.long 0                                                    // 00000005946C: 00000000
	.ascii "@"                                                 // 000000059470: 40
	.byte 0                                                    // 000000059471: 00
	.short 0                                                   // 000000059472: 0000
	.long 0                                                    // 000000059474: 00000000
	.ascii ":X"                                                // 000000059478: 583A
	.short 0                                                   // 00000005947A: 0000
	.long 0x70312                                              // 00000005947C: 00070312
	.long 0x82e00                                              // 000000059480: 00082E00
	.long 0                                                    // 000000059484: 00000000
	.ascii "x"                                                 // 000000059488: 78
	.byte 0                                                    // 000000059489: 00
	.short 0                                                   // 00000005948A: 0000
	.long 0                                                    // 00000005948C: 00000000
	.long 0x891                                                // 000000059490: 00000891
	.long 0x60311                                              // 000000059494: 00060311
	.long 0x63480                                              // 000000059498: 00063480
	.long 0                                                    // 00000005949C: 00000000
	.ascii "@"                                                 // 0000000594A0: 40
	.byte 0                                                    // 0000000594A1: 00
	.short 0                                                   // 0000000594A2: 0000
	.long 0                                                    // 0000000594A4: 00000000
	.ascii "6"                                                 // 0000000594A8: 36
	.byte 0xe                                                  // 0000000594A9: 0E
	.short 0                                                   // 0000000594AA: 0000
	.long 0x60311                                              // 0000000594AC: 00060311
	.ascii "@9"                                                // 0000000594B0: 3940
	.short 0x6                                                 // 0000000594B2: 0006
	.long 0                                                    // 0000000594B4: 00000000
	.ascii "@"                                                 // 0000000594B8: 40
	.byte 0                                                    // 0000000594B9: 00
	.short 0                                                   // 0000000594BA: 0000
	.long 0                                                    // 0000000594BC: 00000000
	.long 0x18f0                                               // 0000000594C0: 000018F0
	.long 0x60311                                              // 0000000594C4: 00060311
	.long 0x642c0                                              // 0000000594C8: 000642C0
	.long 0                                                    // 0000000594CC: 00000000
	.ascii "@"                                                 // 0000000594D0: 40
	.byte 0                                                    // 0000000594D1: 00
	.short 0                                                   // 0000000594D2: 0000
	.long 0                                                    // 0000000594D4: 00000000
	.long 0x36ee                                               // 0000000594D8: 000036EE
	.long 0x70312                                              // 0000000594DC: 00070312
	.long 0x7a800                                              // 0000000594E0: 0007A800
	.long 0                                                    // 0000000594E4: 00000000
	.ascii "`"                                                 // 0000000594E8: 60
	.byte 0                                                    // 0000000594E9: 00
	.short 0                                                   // 0000000594EA: 0000
	.long 0                                                    // 0000000594EC: 00000000
	.ascii "f;"                                                // 0000000594F0: 3B66
	.short 0                                                   // 0000000594F2: 0000
	.long 0x70312                                              // 0000000594F4: 00070312
	.long 0x7bb00                                              // 0000000594F8: 0007BB00
	.long 0                                                    // 0000000594FC: 00000000
	.long 0xcc                                                 // 000000059500: 000000CC
	.long 0                                                    // 000000059504: 00000000
	.ascii "F<"                                                // 000000059508: 3C46
	.short 0                                                   // 00000005950A: 0000
	.long 0x60311                                              // 00000005950C: 00060311
	.ascii "@`"                                                // 000000059510: 6040
	.short 0x6                                                 // 000000059512: 0006
	.long 0                                                    // 000000059514: 00000000
	.ascii "@"                                                 // 000000059518: 40
	.byte 0                                                    // 000000059519: 00
	.short 0                                                   // 00000005951A: 0000
	.long 0                                                    // 00000005951C: 00000000
	.ascii "'Q"                                                // 000000059520: 5127
	.short 0                                                   // 000000059522: 0000
	.long 0x70312                                              // 000000059524: 00070312
	.long 0x81200                                              // 000000059528: 00081200
	.long 0                                                    // 00000005952C: 00000000
	.long 0x8c                                                 // 000000059530: 0000008C
	.long 0                                                    // 000000059534: 00000000
	.ascii "$"                                                 // 000000059538: 24
	.byte 0x6                                                  // 000000059539: 06
	.short 0                                                   // 00000005953A: 0000
	.long 0x70312                                              // 00000005953C: 00070312
	.long 0x6a500                                              // 000000059540: 0006A500
	.long 0                                                    // 000000059544: 00000000
	.long 0xe8                                                 // 000000059548: 000000E8
	.long 0                                                    // 00000005954C: 00000000
	.long 0x42bb                                               // 000000059550: 000042BB
	.long 0x60311                                              // 000000059554: 00060311
	.long 0x66500                                              // 000000059558: 00066500
	.long 0                                                    // 00000005955C: 00000000
	.ascii "@"                                                 // 000000059560: 40
	.byte 0                                                    // 000000059561: 00
	.short 0                                                   // 000000059562: 0000
	.long 0                                                    // 000000059564: 00000000
	.ascii "sW"                                                // 000000059568: 5773
	.short 0                                                   // 00000005956A: 0000
	.long 0x70312                                              // 00000005956C: 00070312
	.long 0x82b00                                              // 000000059570: 00082B00
	.long 0                                                    // 000000059574: 00000000
	.ascii "X"                                                 // 000000059578: 58
	.byte 0                                                    // 000000059579: 00
	.short 0                                                   // 00000005957A: 0000
	.long 0                                                    // 00000005957C: 00000000
	.long 0x7fd                                                // 000000059580: 000007FD
	.long 0x60311                                              // 000000059584: 00060311
	.long 0x63400                                              // 000000059588: 00063400
	.long 0                                                    // 00000005958C: 00000000
	.ascii "@"                                                 // 000000059590: 40
	.byte 0                                                    // 000000059591: 00
	.short 0                                                   // 000000059592: 0000
	.long 0                                                    // 000000059594: 00000000
	.long 0x180e                                               // 000000059598: 0000180E
	.long 0x60311                                              // 00000005959C: 00060311
	.long 0x641c0                                              // 0000000595A0: 000641C0
	.long 0                                                    // 0000000595A4: 00000000
	.ascii "@"                                                 // 0000000595A8: 40
	.byte 0                                                    // 0000000595A9: 00
	.short 0                                                   // 0000000595AA: 0000
	.long 0                                                    // 0000000595AC: 00000000
	.ascii "Q%"                                                // 0000000595B0: 2551
	.short 0                                                   // 0000000595B2: 0000
	.long 0x60311                                              // 0000000595B4: 00060311
	.long 0x64d80                                              // 0000000595B8: 00064D80
	.long 0                                                    // 0000000595BC: 00000000
	.ascii "@"                                                 // 0000000595C0: 40
	.byte 0                                                    // 0000000595C1: 00
	.short 0                                                   // 0000000595C2: 0000
	.long 0                                                    // 0000000595C4: 00000000
	.ascii ")0"                                                // 0000000595C8: 3029
	.short 0                                                   // 0000000595CA: 0000
	.long 0x60311                                              // 0000000595CC: 00060311
	.long 0x65580                                              // 0000000595D0: 00065580
	.long 0                                                    // 0000000595D4: 00000000
	.ascii "@"                                                 // 0000000595D8: 40
	.byte 0                                                    // 0000000595D9: 00
	.short 0                                                   // 0000000595DA: 0000
	.long 0                                                    // 0000000595DC: 00000000
	.ascii "(Y"                                                // 0000000595E0: 5928
	.short 0                                                   // 0000000595E2: 0000
	.long 0x60311                                              // 0000000595E4: 00060311
	.long 0x676c0                                              // 0000000595E8: 000676C0
	.long 0                                                    // 0000000595EC: 00000000
	.ascii "@"                                                 // 0000000595F0: 40
	.byte 0                                                    // 0000000595F1: 00
	.short 0                                                   // 0000000595F2: 0000
	.long 0                                                    // 0000000595F4: 00000000
	.long 0x1abe                                               // 0000000595F8: 00001ABE
	.long 0x70312                                              // 0000000595FC: 00070312
	.long 0x71200                                              // 000000059600: 00071200
	.long 0                                                    // 000000059604: 00000000
	.long 0x90                                                 // 000000059608: 00000090
	.long 0                                                    // 00000005960C: 00000000
	.ascii "9\""                                               // 000000059610: 2239
	.short 0                                                   // 000000059612: 0000
	.long 0x70312                                              // 000000059614: 00070312
	.long 0x73700                                              // 000000059618: 00073700
	.long 0                                                    // 00000005961C: 00000000
	.long 0x10c                                                // 000000059620: 0000010C
	.long 0                                                    // 000000059624: 00000000
	.long 0x2d93                                               // 000000059628: 00002D93
	.long 0x70312                                              // 00000005962C: 00070312
	.long 0x77800                                              // 000000059630: 00077800
	.long 0                                                    // 000000059634: 00000000
	.ascii "\\"                                                // 000000059638: 5C
	.byte 0x1                                                  // 000000059639: 01
	.short 0                                                   // 00000005963A: 0000
	.long 0                                                    // 00000005963C: 00000000
	.ascii "CS"                                                // 000000059640: 5343
	.short 0                                                   // 000000059642: 0000
	.long 0x60311                                              // 000000059644: 00060311
	.ascii "@q"                                                // 000000059648: 7140
	.short 0x6                                                 // 00000005964A: 0006
	.long 0                                                    // 00000005964C: 00000000
	.ascii "@"                                                 // 000000059650: 40
	.byte 0                                                    // 000000059651: 00
	.short 0                                                   // 000000059652: 0000
	.long 0                                                    // 000000059654: 00000000
	.ascii "<V"                                                // 000000059658: 563C
	.short 0                                                   // 00000005965A: 0000
	.long 0x70312                                              // 00000005965C: 00070312
	.long 0x82600                                              // 000000059660: 00082600
	.long 0                                                    // 000000059664: 00000000
	.ascii "x"                                                 // 000000059668: 78
	.byte 0                                                    // 000000059669: 00
	.short 0                                                   // 00000005966A: 0000
	.long 0                                                    // 00000005966C: 00000000
	.long 0x5681                                               // 000000059670: 00005681
	.long 0x70312                                              // 000000059674: 00070312
	.long 0x82700                                              // 000000059678: 00082700
	.long 0                                                    // 00000005967C: 00000000
	.ascii "x"                                                 // 000000059680: 78
	.byte 0                                                    // 000000059681: 00
	.short 0                                                   // 000000059682: 0000
	.long 0                                                    // 000000059684: 00000000
	.long 0x787                                                // 000000059688: 00000787
	.long 0x70312                                              // 00000005968C: 00070312
	.long 0x6ac00                                              // 000000059690: 0006AC00
	.long 0                                                    // 000000059694: 00000000
	.long 0xe8                                                 // 000000059698: 000000E8
	.long 0                                                    // 00000005969C: 00000000
	.long 0x318f                                               // 0000000596A0: 0000318F
	.long 0x60311                                              // 0000000596A4: 00060311
	.long 0x65680                                              // 0000000596A8: 00065680
	.long 0                                                    // 0000000596AC: 00000000
	.ascii "@"                                                 // 0000000596B0: 40
	.byte 0                                                    // 0000000596B1: 00
	.short 0                                                   // 0000000596B2: 0000
	.long 0                                                    // 0000000596B4: 00000000
	.ascii "=N"                                                // 0000000596B8: 4E3D
	.short 0                                                   // 0000000596BA: 0000
	.long 0x60311                                              // 0000000596BC: 00060311
	.long 0x66d80                                              // 0000000596C0: 00066D80
	.long 0                                                    // 0000000596C4: 00000000
	.ascii "@"                                                 // 0000000596C8: 40
	.byte 0                                                    // 0000000596C9: 00
	.short 0                                                   // 0000000596CA: 0000
	.long 0                                                    // 0000000596CC: 00000000
	.long 0x5fc                                                // 0000000596D0: 000005FC
	.long 0x60311                                              // 0000000596D4: 00060311
	.ascii "@2"                                                // 0000000596D8: 3240
	.short 0x6                                                 // 0000000596DA: 0006
	.long 0                                                    // 0000000596DC: 00000000
	.ascii "@"                                                 // 0000000596E0: 40
	.byte 0                                                    // 0000000596E1: 00
	.short 0                                                   // 0000000596E2: 0000
	.long 0                                                    // 0000000596E4: 00000000
	.ascii "+"                                                 // 0000000596E8: 2B
	.byte 0xc                                                  // 0000000596E9: 0C
	.short 0                                                   // 0000000596EA: 0000
	.long 0x60311                                              // 0000000596EC: 00060311
	.long 0x63780                                              // 0000000596F0: 00063780
	.long 0                                                    // 0000000596F4: 00000000
	.ascii "@"                                                 // 0000000596F8: 40
	.byte 0                                                    // 0000000596F9: 00
	.short 0                                                   // 0000000596FA: 0000
	.long 0                                                    // 0000000596FC: 00000000
	.long 0x32e9                                               // 000000059700: 000032E9
	.long 0x60311                                              // 000000059704: 00060311
	.long 0x65780                                              // 000000059708: 00065780
	.long 0                                                    // 00000005970C: 00000000
	.ascii "@"                                                 // 000000059710: 40
	.byte 0                                                    // 000000059711: 00
	.short 0                                                   // 000000059712: 0000
	.long 0                                                    // 000000059714: 00000000
	.long 0x3bc                                                // 000000059718: 000003BC
	.long 0x70312                                              // 00000005971C: 00070312
	.long 0x69a00                                              // 000000059720: 00069A00
	.long 0                                                    // 000000059724: 00000000
	.ascii "4"                                                 // 000000059728: 34
	.byte 0x1                                                  // 000000059729: 01
	.short 0                                                   // 00000005972A: 0000
	.long 0                                                    // 00000005972C: 00000000
	.ascii "gI"                                                // 000000059730: 4967
	.short 0                                                   // 000000059732: 0000
	.long 0x60311                                              // 000000059734: 00060311
	.long 0x66a00                                              // 000000059738: 00066A00
	.long 0                                                    // 00000005973C: 00000000
	.ascii "@"                                                 // 000000059740: 40
	.byte 0                                                    // 000000059741: 00
	.short 0                                                   // 000000059742: 0000
	.long 0                                                    // 000000059744: 00000000
	.long 0x52c6                                               // 000000059748: 000052C6
	.long 0x70312                                              // 00000005974C: 00070312
	.long 0x81800                                              // 000000059750: 00081800
	.long 0                                                    // 000000059754: 00000000
	.long 0xb4                                                 // 000000059758: 000000B4
	.long 0                                                    // 00000005975C: 00000000
	.long 0x111                                                // 000000059760: 00000111
	.long 0x60311                                              // 000000059764: 00060311
	.long 0x62e00                                              // 000000059768: 00062E00
	.long 0                                                    // 00000005976C: 00000000
	.ascii "@"                                                 // 000000059770: 40
	.byte 0                                                    // 000000059771: 00
	.short 0                                                   // 000000059772: 0000
	.long 0                                                    // 000000059774: 00000000
	.long 0x28e1                                               // 000000059778: 000028E1
	.long 0x70312                                              // 00000005977C: 00070312
	.long 0x75c00                                              // 000000059780: 00075C00
	.long 0                                                    // 000000059784: 00000000
	.long 0x1e4                                                // 000000059788: 000001E4
	.long 0                                                    // 00000005978C: 00000000
	.long 0x4bf                                                // 000000059790: 000004BF
	.long 0x70312                                              // 000000059794: 00070312
	.long 0x69f00                                              // 000000059798: 00069F00
	.long 0                                                    // 00000005979C: 00000000
	.long 0xe8                                                 // 0000000597A0: 000000E8
	.long 0                                                    // 0000000597A4: 00000000
	.long 0x10cc                                               // 0000000597A8: 000010CC
	.long 0x70312                                              // 0000000597AC: 00070312
	.long 0x6de00                                              // 0000000597B0: 0006DE00
	.long 0                                                    // 0000000597B4: 00000000
	.ascii "4"                                                 // 0000000597B8: 34
	.byte 0x1                                                  // 0000000597B9: 01
	.short 0                                                   // 0000000597BA: 0000
	.long 0                                                    // 0000000597BC: 00000000
	.ascii "b\""                                               // 0000000597C0: 2262
	.short 0                                                   // 0000000597C2: 0000
	.long 0x60311                                              // 0000000597C4: 00060311
	.ascii "@K"                                                // 0000000597C8: 4B40
	.short 0x6                                                 // 0000000597CA: 0006
	.long 0                                                    // 0000000597CC: 00000000
	.ascii "@"                                                 // 0000000597D0: 40
	.byte 0                                                    // 0000000597D1: 00
	.short 0                                                   // 0000000597D2: 0000
	.long 0                                                    // 0000000597D4: 00000000
	.ascii "-9"                                                // 0000000597D8: 392D
	.short 0                                                   // 0000000597DA: 0000
	.long 0x70312                                              // 0000000597DC: 00070312
	.long 0x7b100                                              // 0000000597E0: 0007B100
	.long 0                                                    // 0000000597E4: 00000000
	.long 0x80                                                 // 0000000597E8: 00000080
	.long 0                                                    // 0000000597EC: 00000000
	.long 0x4408                                               // 0000000597F0: 00004408
	.long 0x60311                                              // 0000000597F4: 00060311
	.long 0x66600                                              // 0000000597F8: 00066600
	.long 0                                                    // 0000000597FC: 00000000
	.ascii "@"                                                 // 000000059800: 40
	.byte 0                                                    // 000000059801: 00
	.short 0                                                   // 000000059802: 0000
	.long 0                                                    // 000000059804: 00000000
	.long 0x5b1                                                // 000000059808: 000005B1
	.long 0x60311                                              // 00000005980C: 00060311
	.long 0x63200                                              // 000000059810: 00063200
	.long 0                                                    // 000000059814: 00000000
	.ascii "@"                                                 // 000000059818: 40
	.byte 0                                                    // 000000059819: 00
	.short 0                                                   // 00000005981A: 0000
	.long 0                                                    // 00000005981C: 00000000
	.long 0xe85                                                // 000000059820: 00000E85
	.long 0x60311                                              // 000000059824: 00060311
	.long 0x63980                                              // 000000059828: 00063980
	.long 0                                                    // 00000005982C: 00000000
	.ascii "@"                                                 // 000000059830: 40
	.byte 0                                                    // 000000059831: 00
	.short 0                                                   // 000000059832: 0000
	.long 0                                                    // 000000059834: 00000000
	.long 0x15e5                                               // 000000059838: 000015E5
	.long 0x70312                                              // 00000005983C: 00070312
	.long 0x6fa00                                              // 000000059840: 0006FA00
	.long 0                                                    // 000000059844: 00000000
	.ascii "d"                                                 // 000000059848: 64
	.byte 0x1                                                  // 000000059849: 01
	.short 0                                                   // 00000005984A: 0000
	.long 0                                                    // 00000005984C: 00000000
	.ascii "9"                                                 // 000000059850: 39
	.byte 0x1d                                                 // 000000059851: 1D
	.short 0                                                   // 000000059852: 0000
	.long 0x60311                                              // 000000059854: 00060311
	.long 0x64780                                              // 000000059858: 00064780
	.long 0                                                    // 00000005985C: 00000000
	.ascii "@"                                                 // 000000059860: 40
	.byte 0                                                    // 000000059861: 00
	.short 0                                                   // 000000059862: 0000
	.long 0                                                    // 000000059864: 00000000
	.long 0x448a                                               // 000000059868: 0000448A
	.long 0x70312                                              // 00000005986C: 00070312
	.long 0x7db00                                              // 000000059870: 0007DB00
	.long 0                                                    // 000000059874: 00000000
	.long 0xe0                                                 // 000000059878: 000000E0
	.long 0                                                    // 00000005987C: 00000000
	.long 0x48df                                               // 000000059880: 000048DF
	.long 0x70312                                              // 000000059884: 00070312
	.long 0x7f000                                              // 000000059888: 0007F000
	.long 0                                                    // 00000005988C: 00000000
	.long 0xac                                                 // 000000059890: 000000AC
	.long 0                                                    // 000000059894: 00000000
	.long 0x4fbf                                               // 000000059898: 00004FBF
	.long 0x70312                                              // 00000005989C: 00070312
	.long 0x80b00                                              // 0000000598A0: 00080B00
	.long 0                                                    // 0000000598A4: 00000000
	.long 0xf8                                                 // 0000000598A8: 000000F8
	.long 0                                                    // 0000000598AC: 00000000
	.long 0x14e5                                               // 0000000598B0: 000014E5
	.long 0x60311                                              // 0000000598B4: 00060311
	.long 0x63ec0                                              // 0000000598B8: 00063EC0
	.long 0                                                    // 0000000598BC: 00000000
	.ascii "@"                                                 // 0000000598C0: 40
	.byte 0                                                    // 0000000598C1: 00
	.short 0                                                   // 0000000598C2: 0000
	.long 0                                                    // 0000000598C4: 00000000
	.ascii "E "                                                // 0000000598C8: 2045
	.short 0                                                   // 0000000598CA: 0000
	.long 0x70312                                              // 0000000598CC: 00070312
	.long 0x72d00                                              // 0000000598D0: 00072D00
	.long 0                                                    // 0000000598D4: 00000000
	.long 0x110                                                // 0000000598D8: 00000110
	.long 0                                                    // 0000000598DC: 00000000
	.long 0x23ae                                               // 0000000598E0: 000023AE
	.long 0x60311                                              // 0000000598E4: 00060311
	.ascii "@L"                                                // 0000000598E8: 4C40
	.short 0x6                                                 // 0000000598EA: 0006
	.long 0                                                    // 0000000598EC: 00000000
	.ascii "@"                                                 // 0000000598F0: 40
	.byte 0                                                    // 0000000598F1: 00
	.short 0                                                   // 0000000598F2: 0000
	.long 0                                                    // 0000000598F4: 00000000
	.long 0x1b9e                                               // 0000000598F8: 00001B9E
	.long 0x70312                                              // 0000000598FC: 00070312
	.long 0x71600                                              // 000000059900: 00071600
	.long 0                                                    // 000000059904: 00000000
	.long 0xf0                                                 // 000000059908: 000000F0
	.long 0                                                    // 00000005990C: 00000000
	.ascii "h5"                                                // 000000059910: 3568
	.short 0                                                   // 000000059912: 0000
	.long 0x70312                                              // 000000059914: 00070312
	.long 0x7a200                                              // 000000059918: 0007A200
	.long 0                                                    // 00000005991C: 00000000
	.long 0xe4                                                 // 000000059920: 000000E4
	.long 0                                                    // 000000059924: 00000000
	.long 0x429e                                               // 000000059928: 0000429E
	.long 0x70312                                              // 00000005992C: 00070312
	.long 0x7d400                                              // 000000059930: 0007D400
	.long 0                                                    // 000000059934: 00000000
	.long 0xac                                                 // 000000059938: 000000AC
	.long 0                                                    // 00000005993C: 00000000
	.long 0x57d3                                               // 000000059940: 000057D3
	.long 0x60311                                              // 000000059944: 00060311
	.long 0x67580                                              // 000000059948: 00067580
	.long 0                                                    // 00000005994C: 00000000
	.ascii "@"                                                 // 000000059950: 40
	.byte 0                                                    // 000000059951: 00
	.short 0                                                   // 000000059952: 0000
	.long 0                                                    // 000000059954: 00000000
	.long 0xeaf                                                // 000000059958: 00000EAF
	.long 0x70312                                              // 00000005995C: 00070312
	.long 0x6d100                                              // 000000059960: 0006D100
	.long 0                                                    // 000000059964: 00000000
	.ascii ","                                                 // 000000059968: 2C
	.byte 0x1                                                  // 000000059969: 01
	.short 0                                                   // 00000005996A: 0000
	.long 0                                                    // 00000005996C: 00000000
	.long 0x159c                                               // 000000059970: 0000159C
	.long 0x70312                                              // 000000059974: 00070312
	.long 0x6f900                                              // 000000059978: 0006F900
	.long 0                                                    // 00000005997C: 00000000
	.long 0xfc                                                 // 000000059980: 000000FC
	.long 0                                                    // 000000059984: 00000000
	.ascii "E"                                                 // 000000059988: 45
	.byte 0x18                                                 // 000000059989: 18
	.short 0                                                   // 00000005998A: 0000
	.long 0x60311                                              // 00000005998C: 00060311
	.long 0x64200                                              // 000000059990: 00064200
	.long 0                                                    // 000000059994: 00000000
	.ascii "@"                                                 // 000000059998: 40
	.byte 0                                                    // 000000059999: 00
	.short 0                                                   // 00000005999A: 0000
	.long 0                                                    // 00000005999C: 00000000
	.ascii "H"                                                 // 0000000599A0: 48
	.byte 0x1a                                                 // 0000000599A1: 1A
	.short 0                                                   // 0000000599A2: 0000
	.long 0x70312                                              // 0000000599A4: 00070312
	.long 0x71000                                              // 0000000599A8: 00071000
	.long 0                                                    // 0000000599AC: 00000000
	.ascii "|"                                                 // 0000000599B0: 7C
	.byte 0                                                    // 0000000599B1: 00
	.short 0                                                   // 0000000599B2: 0000
	.long 0                                                    // 0000000599B4: 00000000
	.long 0x2adb                                               // 0000000599B8: 00002ADB
	.long 0x70312                                              // 0000000599BC: 00070312
	.long 0x76800                                              // 0000000599C0: 00076800
	.long 0                                                    // 0000000599C4: 00000000
	.long 0x1b8                                                // 0000000599C8: 000001B8
	.long 0                                                    // 0000000599CC: 00000000
	.long 0x321a                                               // 0000000599D0: 0000321A
	.long 0x70312                                              // 0000000599D4: 00070312
	.long 0x79100                                              // 0000000599D8: 00079100
	.long 0                                                    // 0000000599DC: 00000000
	.long 0xe4                                                 // 0000000599E0: 000000E4
	.long 0                                                    // 0000000599E4: 00000000
	.ascii "t7"                                                // 0000000599E8: 3774
	.short 0                                                   // 0000000599EA: 0000
	.long 0x70312                                              // 0000000599EC: 00070312
	.long 0x7aa00                                              // 0000000599F0: 0007AA00
	.long 0                                                    // 0000000599F4: 00000000
	.long 0x8c                                                 // 0000000599F8: 0000008C
	.long 0                                                    // 0000000599FC: 00000000
	.long 0x45ce                                               // 000000059A00: 000045CE
	.long 0x70312                                              // 000000059A04: 00070312
	.long 0x7e000                                              // 000000059A08: 0007E000
	.long 0                                                    // 000000059A0C: 00000000
	.long 0x104                                                // 000000059A10: 00000104
	.long 0                                                    // 000000059A14: 00000000
	.long 0x1b5                                                // 000000059A18: 000001B5
	.long 0x60311                                              // 000000059A1C: 00060311
	.long 0x62ec0                                              // 000000059A20: 00062EC0
	.long 0                                                    // 000000059A24: 00000000
	.ascii "@"                                                 // 000000059A28: 40
	.byte 0                                                    // 000000059A29: 00
	.short 0                                                   // 000000059A2A: 0000
	.long 0                                                    // 000000059A2C: 00000000
	.ascii "o"                                                 // 000000059A30: 6F
	.byte 0x6                                                  // 000000059A31: 06
	.short 0                                                   // 000000059A32: 0000
	.long 0x70312                                              // 000000059A34: 00070312
	.long 0x6a600                                              // 000000059A38: 0006A600
	.long 0                                                    // 000000059A3C: 00000000
	.ascii ","                                                 // 000000059A40: 2C
	.byte 0x1                                                  // 000000059A41: 01
	.short 0                                                   // 000000059A42: 0000
	.long 0                                                    // 000000059A44: 00000000
	.ascii "b"                                                 // 000000059A48: 62
	.byte 0xb                                                  // 000000059A49: 0B
	.short 0                                                   // 000000059A4A: 0000
	.long 0x70312                                              // 000000059A4C: 00070312
	.long 0x6c000                                              // 000000059A50: 0006C000
	.long 0                                                    // 000000059A54: 00000000
	.ascii "`"                                                 // 000000059A58: 60
	.byte 0x1                                                  // 000000059A59: 01
	.short 0                                                   // 000000059A5A: 0000
	.long 0                                                    // 000000059A5C: 00000000
	.long 0x17c0                                               // 000000059A60: 000017C0
	.long 0x70312                                              // 000000059A64: 00070312
	.long 0x70400                                              // 000000059A68: 00070400
	.long 0                                                    // 000000059A6C: 00000000
	.ascii "`"                                                 // 000000059A70: 60
	.byte 0                                                    // 000000059A71: 00
	.short 0                                                   // 000000059A72: 0000
	.long 0                                                    // 000000059A74: 00000000
	.ascii "B"                                                 // 000000059A78: 42
	.byte 0x1b                                                 // 000000059A79: 1B
	.short 0                                                   // 000000059A7A: 0000
	.long 0x60311                                              // 000000059A7C: 00060311
	.long 0x64580                                              // 000000059A80: 00064580
	.long 0                                                    // 000000059A84: 00000000
	.ascii "@"                                                 // 000000059A88: 40
	.byte 0                                                    // 000000059A89: 00
	.short 0                                                   // 000000059A8A: 0000
	.long 0                                                    // 000000059A8C: 00000000
	.ascii "P7"                                                // 000000059A90: 3750
	.short 0                                                   // 000000059A92: 0000
	.long 0x60311                                              // 000000059A94: 00060311
	.ascii "@["                                                // 000000059A98: 5B40
	.short 0x6                                                 // 000000059A9A: 0006
	.long 0                                                    // 000000059A9C: 00000000
	.ascii "@"                                                 // 000000059AA0: 40
	.byte 0                                                    // 000000059AA1: 00
	.short 0                                                   // 000000059AA2: 0000
	.long 0                                                    // 000000059AA4: 00000000
	.long 0x4d82                                               // 000000059AA8: 00004D82
	.long 0x60311                                              // 000000059AAC: 00060311
	.long 0x66d00                                              // 000000059AB0: 00066D00
	.long 0                                                    // 000000059AB4: 00000000
	.ascii "@"                                                 // 000000059AB8: 40
	.byte 0                                                    // 000000059AB9: 00
	.short 0                                                   // 000000059ABA: 0000
	.long 0                                                    // 000000059ABC: 00000000
	.ascii "l"                                                 // 000000059AC0: 6C
	.byte 0x7                                                  // 000000059AC1: 07
	.short 0                                                   // 000000059AC2: 0000
	.long 0x60311                                              // 000000059AC4: 00060311
	.long 0x63380                                              // 000000059AC8: 00063380
	.long 0                                                    // 000000059ACC: 00000000
	.ascii "@"                                                 // 000000059AD0: 40
	.byte 0                                                    // 000000059AD1: 00
	.short 0                                                   // 000000059AD2: 0000
	.long 0                                                    // 000000059AD4: 00000000
	.ascii "F"                                                 // 000000059AD8: 46
	.byte 0x11                                                 // 000000059AD9: 11
	.short 0                                                   // 000000059ADA: 0000
	.long 0x60311                                              // 000000059ADC: 00060311
	.long 0x63bc0                                              // 000000059AE0: 00063BC0
	.long 0                                                    // 000000059AE4: 00000000
	.ascii "@"                                                 // 000000059AE8: 40
	.byte 0                                                    // 000000059AE9: 00
	.short 0                                                   // 000000059AEA: 0000
	.long 0                                                    // 000000059AEC: 00000000
	.long 0x17d9                                               // 000000059AF0: 000017D9
	.long 0x60311                                              // 000000059AF4: 00060311
	.long 0x64180                                              // 000000059AF8: 00064180
	.long 0                                                    // 000000059AFC: 00000000
	.ascii "@"                                                 // 000000059B00: 40
	.byte 0                                                    // 000000059B01: 00
	.short 0                                                   // 000000059B02: 0000
	.long 0                                                    // 000000059B04: 00000000
	.long 0x1ec1                                               // 000000059B08: 00001EC1
	.long 0x70312                                              // 000000059B0C: 00070312
	.long 0x72500                                              // 000000059B10: 00072500
	.long 0                                                    // 000000059B14: 00000000
	.long 0x198                                                // 000000059B18: 00000198
	.long 0                                                    // 000000059B1C: 00000000
	.long 0x218f                                               // 000000059B20: 0000218F
	.long 0x70312                                              // 000000059B24: 00070312
	.long 0x73300                                              // 000000059B28: 00073300
	.long 0                                                    // 000000059B2C: 00000000
	.long 0x108                                                // 000000059B30: 00000108
	.long 0                                                    // 000000059B34: 00000000
	.long 0x3cad                                               // 000000059B38: 00003CAD
	.long 0x70312                                              // 000000059B3C: 00070312
	.long 0x7c100                                              // 000000059B40: 0007C100
	.long 0                                                    // 000000059B44: 00000000
	.long 0x8c                                                 // 000000059B48: 0000008C
	.long 0                                                    // 000000059B4C: 00000000
	.long 0x48a0                                               // 000000059B50: 000048A0
	.long 0x70312                                              // 000000059B54: 00070312
	.long 0x7ef00                                              // 000000059B58: 0007EF00
	.long 0                                                    // 000000059B5C: 00000000
	.long 0xdc                                                 // 000000059B60: 000000DC
	.long 0                                                    // 000000059B64: 00000000
	.ascii "f"                                                 // 000000059B68: 66
	.byte 0x1                                                  // 000000059B69: 01
	.short 0                                                   // 000000059B6A: 0000
	.long 0x70312                                              // 000000059B6C: 00070312
	.long 0x69000                                              // 000000059B70: 00069000
	.long 0                                                    // 000000059B74: 00000000
	.ascii "T"                                                 // 000000059B78: 54
	.byte 0x1                                                  // 000000059B79: 01
	.short 0                                                   // 000000059B7A: 0000
	.long 0                                                    // 000000059B7C: 00000000
	.long 0x180                                                // 000000059B80: 00000180
	.long 0x60311                                              // 000000059B84: 00060311
	.long 0x62e80                                              // 000000059B88: 00062E80
	.long 0                                                    // 000000059B8C: 00000000
	.ascii "@"                                                 // 000000059B90: 40
	.byte 0                                                    // 000000059B91: 00
	.short 0                                                   // 000000059B92: 0000
	.long 0                                                    // 000000059B94: 00000000
	.long 0x1fe4                                               // 000000059B98: 00001FE4
	.long 0x70312                                              // 000000059B9C: 00070312
	.long 0x72b00                                              // 000000059BA0: 00072B00
	.long 0                                                    // 000000059BA4: 00000000
	.ascii "X"                                                 // 000000059BA8: 58
	.byte 0x1                                                  // 000000059BA9: 01
	.short 0                                                   // 000000059BAA: 0000
	.long 0                                                    // 000000059BAC: 00000000
	.long 0x33e1                                               // 000000059BB0: 000033E1
	.long 0x60311                                              // 000000059BB4: 00060311
	.ascii "@X"                                                // 000000059BB8: 5840
	.short 0x6                                                 // 000000059BBA: 0006
	.long 0                                                    // 000000059BBC: 00000000
	.ascii "@"                                                 // 000000059BC0: 40
	.byte 0                                                    // 000000059BC1: 00
	.short 0                                                   // 000000059BC2: 0000
	.long 0                                                    // 000000059BC4: 00000000
	.long 0x4ca0                                               // 000000059BC8: 00004CA0
	.long 0x70312                                              // 000000059BCC: 00070312
	.long 0x7fe00                                              // 000000059BD0: 0007FE00
	.long 0                                                    // 000000059BD4: 00000000
	.long 0xe4                                                 // 000000059BD8: 000000E4
	.long 0                                                    // 000000059BDC: 00000000
	.long 0x4ec6                                               // 000000059BE0: 00004EC6
	.long 0x70312                                              // 000000059BE4: 00070312
	.long 0x80700                                              // 000000059BE8: 00080700
	.long 0                                                    // 000000059BEC: 00000000
	.long 0x108                                                // 000000059BF0: 00000108
	.long 0                                                    // 000000059BF4: 00000000
	.long 0x20d                                                // 000000059BF8: 0000020D
	.long 0x70312                                              // 000000059BFC: 00070312
	.long 0x69400                                              // 000000059C00: 00069400
	.long 0                                                    // 000000059C04: 00000000
	.long 0xd4                                                 // 000000059C08: 000000D4
	.long 0                                                    // 000000059C0C: 00000000
	.long 0x9e9                                                // 000000059C10: 000009E9
	.long 0x70312                                              // 000000059C14: 00070312
	.long 0x6b700                                              // 000000059C18: 0006B700
	.long 0                                                    // 000000059C1C: 00000000
	.ascii "\\"                                                // 000000059C20: 5C
	.byte 0x1                                                  // 000000059C21: 01
	.short 0                                                   // 000000059C22: 0000
	.long 0                                                    // 000000059C24: 00000000
	.long 0x18d5                                               // 000000059C28: 000018D5
	.long 0x70312                                              // 000000059C2C: 00070312
	.long 0x70900                                              // 000000059C30: 00070900
	.long 0                                                    // 000000059C34: 00000000
	.long 0x88                                                 // 000000059C38: 00000088
	.long 0                                                    // 000000059C3C: 00000000
	.long 0x34b8                                               // 000000059C40: 000034B8
	.long 0x70312                                              // 000000059C44: 00070312
	.long 0x79e00                                              // 000000059C48: 00079E00
	.long 0                                                    // 000000059C4C: 00000000
	.ascii "@"                                                 // 000000059C50: 40
	.byte 0x1                                                  // 000000059C51: 01
	.short 0                                                   // 000000059C52: 0000
	.long 0                                                    // 000000059C54: 00000000
	.long 0x1404                                               // 000000059C58: 00001404
	.long 0x60311                                              // 000000059C5C: 00060311
	.long 0x63e00                                              // 000000059C60: 00063E00
	.long 0                                                    // 000000059C64: 00000000
	.ascii "@"                                                 // 000000059C68: 40
	.byte 0                                                    // 000000059C69: 00
	.short 0                                                   // 000000059C6A: 0000
	.long 0                                                    // 000000059C6C: 00000000
	.long 0x2dec                                               // 000000059C70: 00002DEC
	.long 0x70312                                              // 000000059C74: 00070312
	.long 0x77a00                                              // 000000059C78: 00077A00
	.long 0                                                    // 000000059C7C: 00000000
	.long 0x1d8                                                // 000000059C80: 000001D8
	.long 0                                                    // 000000059C84: 00000000
	.ascii "b"                                                 // 000000059C88: 62
	.byte 0x17                                                 // 000000059C89: 17
	.short 0                                                   // 000000059C8A: 0000
	.long 0x70312                                              // 000000059C8C: 00070312
	.long 0x70200                                              // 000000059C90: 00070200
	.long 0                                                    // 000000059C94: 00000000
	.ascii "h"                                                 // 000000059C98: 68
	.byte 0                                                    // 000000059C99: 00
	.short 0                                                   // 000000059C9A: 0000
	.long 0                                                    // 000000059C9C: 00000000
	.ascii "Z*"                                                // 000000059CA0: 2A5A
	.short 0                                                   // 000000059CA2: 0000
	.long 0x60311                                              // 000000059CA4: 00060311
	.ascii "@Q"                                                // 000000059CA8: 5140
	.short 0x6                                                 // 000000059CAA: 0006
	.long 0                                                    // 000000059CAC: 00000000
	.ascii "@"                                                 // 000000059CB0: 40
	.byte 0                                                    // 000000059CB1: 00
	.short 0                                                   // 000000059CB2: 0000
	.long 0                                                    // 000000059CB4: 00000000
	.ascii "}X"                                                // 000000059CB8: 587D
	.short 0                                                   // 000000059CBA: 0000
	.long 0x70312                                              // 000000059CBC: 00070312
	.long 0x82f00                                              // 000000059CC0: 00082F00
	.long 0                                                    // 000000059CC4: 00000000
	.ascii "l"                                                 // 000000059CC8: 6C
	.byte 0                                                    // 000000059CC9: 00
	.short 0                                                   // 000000059CCA: 0000
	.long 0                                                    // 000000059CCC: 00000000
	.long 0xefe                                                // 000000059CD0: 00000EFE
	.long 0x70312                                              // 000000059CD4: 00070312
	.long 0x6d300                                              // 000000059CD8: 0006D300
	.long 0                                                    // 000000059CDC: 00000000
	.long 0xf8                                                 // 000000059CE0: 000000F8
	.long 0                                                    // 000000059CE4: 00000000
	.ascii "d"                                                 // 000000059CE8: 64
	.byte 0xf                                                  // 000000059CE9: 0F
	.short 0                                                   // 000000059CEA: 0000
	.long 0x60311                                              // 000000059CEC: 00060311
	.ascii "@:"                                                // 000000059CF0: 3A40
	.short 0x6                                                 // 000000059CF2: 0006
	.long 0                                                    // 000000059CF4: 00000000
	.ascii "@"                                                 // 000000059CF8: 40
	.byte 0                                                    // 000000059CF9: 00
	.short 0                                                   // 000000059CFA: 0000
	.long 0                                                    // 000000059CFC: 00000000
	.long 0x20df                                               // 000000059D00: 000020DF
	.long 0x70312                                              // 000000059D04: 00070312
	.long 0x73100                                              // 000000059D08: 00073100
	.long 0                                                    // 000000059D0C: 00000000
	.long 0x100                                                // 000000059D10: 00000100
	.long 0                                                    // 000000059D14: 00000000
	.long 0x3aab                                               // 000000059D18: 00003AAB
	.long 0x70312                                              // 000000059D1C: 00070312
	.long 0x7b700                                              // 000000059D20: 0007B700
	.long 0                                                    // 000000059D24: 00000000
	.long 0x9c                                                 // 000000059D28: 0000009C
	.long 0                                                    // 000000059D2C: 00000000
	.ascii ">I"                                                // 000000059D30: 493E
	.short 0                                                   // 000000059D32: 0000
	.long 0x70312                                              // 000000059D34: 00070312
	.long 0x7f100                                              // 000000059D38: 0007F100
	.long 0                                                    // 000000059D3C: 00000000
	.long 0xd4                                                 // 000000059D40: 000000D4
	.long 0                                                    // 000000059D44: 00000000
	.long 0x54c8                                               // 000000059D48: 000054C8
	.long 0x70312                                              // 000000059D4C: 00070312
	.long 0x82000                                              // 000000059D50: 00082000
	.long 0                                                    // 000000059D54: 00000000
	.ascii "`"                                                 // 000000059D58: 60
	.byte 0                                                    // 000000059D59: 00
	.short 0                                                   // 000000059D5A: 0000
	.long 0                                                    // 000000059D5C: 00000000
	.long 0x8b9                                                // 000000059D60: 000008B9
	.long 0x70312                                              // 000000059D64: 00070312
	.long 0x6b100                                              // 000000059D68: 0006B100
	.long 0                                                    // 000000059D6C: 00000000
	.long 0xec                                                 // 000000059D70: 000000EC
	.long 0                                                    // 000000059D74: 00000000
	.ascii "V"                                                 // 000000059D78: 56
	.byte 0x16                                                 // 000000059D79: 16
	.short 0                                                   // 000000059D7A: 0000
	.long 0x60311                                              // 000000059D7C: 00060311
	.long 0x64000                                              // 000000059D80: 00064000
	.long 0                                                    // 000000059D84: 00000000
	.ascii "@"                                                 // 000000059D88: 40
	.byte 0                                                    // 000000059D89: 00
	.short 0                                                   // 000000059D8A: 0000
	.long 0                                                    // 000000059D8C: 00000000
	.ascii "L"                                                 // 000000059D90: 4C
	.byte 0x19                                                 // 000000059D91: 19
	.short 0                                                   // 000000059D92: 0000
	.long 0x60311                                              // 000000059D94: 00060311
	.ascii "@C"                                                // 000000059D98: 4340
	.short 0x6                                                 // 000000059D9A: 0006
	.long 0                                                    // 000000059D9C: 00000000
	.ascii "@"                                                 // 000000059DA0: 40
	.byte 0                                                    // 000000059DA1: 00
	.short 0                                                   // 000000059DA2: 0000
	.long 0                                                    // 000000059DA4: 00000000
	.long 0x24a6                                               // 000000059DA8: 000024A6
	.long 0x60311                                              // 000000059DAC: 00060311
	.long 0x64d00                                              // 000000059DB0: 00064D00
	.long 0                                                    // 000000059DB4: 00000000
	.ascii "@"                                                 // 000000059DB8: 40
	.byte 0                                                    // 000000059DB9: 00
	.short 0                                                   // 000000059DBA: 0000
	.long 0                                                    // 000000059DBC: 00000000
	.long 0x3a86                                               // 000000059DC0: 00003A86
	.long 0x60311                                              // 000000059DC4: 00060311
	.long 0x65e80                                              // 000000059DC8: 00065E80
	.long 0                                                    // 000000059DCC: 00000000
	.ascii "@"                                                 // 000000059DD0: 40
	.byte 0                                                    // 000000059DD1: 00
	.short 0                                                   // 000000059DD2: 0000
	.long 0                                                    // 000000059DD4: 00000000
	.long 0x54db                                               // 000000059DD8: 000054DB
	.long 0x60311                                              // 000000059DDC: 00060311
	.long 0x67280                                              // 000000059DE0: 00067280
	.long 0                                                    // 000000059DE4: 00000000
	.ascii "@"                                                 // 000000059DE8: 40
	.byte 0                                                    // 000000059DE9: 00
	.short 0                                                   // 000000059DEA: 0000
	.long 0                                                    // 000000059DEC: 00000000
	.long 0x70b                                                // 000000059DF0: 0000070B
	.long 0x70312                                              // 000000059DF4: 00070312
	.long 0x6aa00                                              // 000000059DF8: 0006AA00
	.long 0                                                    // 000000059DFC: 00000000
	.long 0xf0                                                 // 000000059E00: 000000F0
	.long 0                                                    // 000000059E04: 00000000
	.long 0xd9b                                                // 000000059E08: 00000D9B
	.long 0x60311                                              // 000000059E0C: 00060311
	.long 0x638c0                                              // 000000059E10: 000638C0
	.long 0                                                    // 000000059E14: 00000000
	.ascii "@"                                                 // 000000059E18: 40
	.byte 0                                                    // 000000059E19: 00
	.short 0                                                   // 000000059E1A: 0000
	.long 0                                                    // 000000059E1C: 00000000
	.ascii "d"                                                 // 000000059E20: 64
	.byte 0x1e                                                 // 000000059E21: 1E
	.short 0                                                   // 000000059E22: 0000
	.long 0x70312                                              // 000000059E24: 00070312
	.long 0x72400                                              // 000000059E28: 00072400
	.long 0                                                    // 000000059E2C: 00000000
	.long 0x100                                                // 000000059E30: 00000100
	.long 0                                                    // 000000059E34: 00000000
	.long 0x329f                                               // 000000059E38: 0000329F
	.long 0x60311                                              // 000000059E3C: 00060311
	.ascii "@W"                                                // 000000059E40: 5740
	.short 0x6                                                 // 000000059E42: 0006
	.long 0                                                    // 000000059E44: 00000000
	.ascii "@"                                                 // 000000059E48: 40
	.byte 0                                                    // 000000059E49: 00
	.short 0                                                   // 000000059E4A: 0000
	.long 0                                                    // 000000059E4C: 00000000
	.ascii "63"                                                // 000000059E50: 3336
	.short 0                                                   // 000000059E52: 0000
	.long 0x60311                                              // 000000059E54: 00060311
	.long 0x657c0                                              // 000000059E58: 000657C0
	.long 0                                                    // 000000059E5C: 00000000
	.ascii "@"                                                 // 000000059E60: 40
	.byte 0                                                    // 000000059E61: 00
	.short 0                                                   // 000000059E62: 0000
	.long 0                                                    // 000000059E64: 00000000
	.long 0x41f4                                               // 000000059E68: 000041F4
	.long 0x70312                                              // 000000059E6C: 00070312
	.long 0x7d200                                              // 000000059E70: 0007D200
	.long 0                                                    // 000000059E74: 00000000
	.long 0xf8                                                 // 000000059E78: 000000F8
	.long 0                                                    // 000000059E7C: 00000000
	.ascii "g"                                                 // 000000059E80: 67
	.byte 0x3                                                  // 000000059E81: 03
	.short 0                                                   // 000000059E82: 0000
	.long 0x70312                                              // 000000059E84: 00070312
	.long 0x69900                                              // 000000059E88: 00069900
	.long 0                                                    // 000000059E8C: 00000000
	.long 0xd4                                                 // 000000059E90: 000000D4
	.long 0                                                    // 000000059E94: 00000000
	.long 0x19b9                                               // 000000059E98: 000019B9
	.long 0x60311                                              // 000000059E9C: 00060311
	.long 0x643c0                                              // 000000059EA0: 000643C0
	.long 0                                                    // 000000059EA4: 00000000
	.ascii "@"                                                 // 000000059EA8: 40
	.byte 0                                                    // 000000059EA9: 00
	.short 0                                                   // 000000059EAA: 0000
	.long 0                                                    // 000000059EAC: 00000000
	.long 0x1ada                                               // 000000059EB0: 00001ADA
	.long 0x60311                                              // 000000059EB4: 00060311
	.long 0x64500                                              // 000000059EB8: 00064500
	.long 0                                                    // 000000059EBC: 00000000
	.ascii "@"                                                 // 000000059EC0: 40
	.byte 0                                                    // 000000059EC1: 00
	.short 0                                                   // 000000059EC2: 0000
	.long 0                                                    // 000000059EC4: 00000000
	.ascii "cG"                                                // 000000059EC8: 4763
	.short 0                                                   // 000000059ECA: 0000
	.long 0x60311                                              // 000000059ECC: 00060311
	.long 0x66880                                              // 000000059ED0: 00066880
	.long 0                                                    // 000000059ED4: 00000000
	.ascii "@"                                                 // 000000059ED8: 40
	.byte 0                                                    // 000000059ED9: 00
	.short 0                                                   // 000000059EDA: 0000
	.long 0                                                    // 000000059EDC: 00000000
	.long 0xa9c                                                // 000000059EE0: 00000A9C
	.long 0x60311                                              // 000000059EE4: 00060311
	.ascii "@6"                                                // 000000059EE8: 3640
	.short 0x6                                                 // 000000059EEA: 0006
	.long 0                                                    // 000000059EEC: 00000000
	.ascii "@"                                                 // 000000059EF0: 40
	.byte 0                                                    // 000000059EF1: 00
	.short 0                                                   // 000000059EF2: 0000
	.long 0                                                    // 000000059EF4: 00000000
	.long 0x2ea4                                               // 000000059EF8: 00002EA4
	.long 0x70312                                              // 000000059EFC: 00070312
	.long 0x77e00                                              // 000000059F00: 00077E00
	.long 0                                                    // 000000059F04: 00000000
	.long 0xe4                                                 // 000000059F08: 000000E4
	.long 0                                                    // 000000059F0C: 00000000
	.long 0xc1                                                 // 000000059F10: 000000C1
	.long 0x70312                                              // 000000059F14: 00070312
	.long 0x68b00                                              // 000000059F18: 00068B00
	.long 0                                                    // 000000059F1C: 00000000
	.ascii "\\"                                                // 000000059F20: 5C
	.byte 0x1                                                  // 000000059F21: 01
	.short 0                                                   // 000000059F22: 0000
	.long 0                                                    // 000000059F24: 00000000
	.ascii "w"                                                 // 000000059F28: 77
	.byte 0xd                                                  // 000000059F29: 0D
	.short 0                                                   // 000000059F2A: 0000
	.long 0x70312                                              // 000000059F2C: 00070312
	.long 0x6cb00                                              // 000000059F30: 0006CB00
	.long 0                                                    // 000000059F34: 00000000
	.long 0xe8                                                 // 000000059F38: 000000E8
	.long 0                                                    // 000000059F3C: 00000000
	.long 0x37d2                                               // 000000059F40: 000037D2
	.long 0x60311                                              // 000000059F44: 00060311
	.long 0x65bc0                                              // 000000059F48: 00065BC0
	.long 0                                                    // 000000059F4C: 00000000
	.ascii "@"                                                 // 000000059F50: 40
	.byte 0                                                    // 000000059F51: 00
	.short 0                                                   // 000000059F52: 0000
	.long 0                                                    // 000000059F54: 00000000
	.long 0x8dd                                                // 000000059F58: 000008DD
	.long 0x60311                                              // 000000059F5C: 00060311
	.long 0x634c0                                              // 000000059F60: 000634C0
	.long 0                                                    // 000000059F64: 00000000
	.ascii "@"                                                 // 000000059F68: 40
	.byte 0                                                    // 000000059F69: 00
	.short 0                                                   // 000000059F6A: 0000
	.long 0                                                    // 000000059F6C: 00000000
	.long 0xde8                                                // 000000059F70: 00000DE8
	.long 0x60311                                              // 000000059F74: 00060311
	.long 0x63900                                              // 000000059F78: 00063900
	.long 0                                                    // 000000059F7C: 00000000
	.ascii "@"                                                 // 000000059F80: 40
	.byte 0                                                    // 000000059F81: 00
	.short 0                                                   // 000000059F82: 0000
	.long 0                                                    // 000000059F84: 00000000
	.long 0x1500                                               // 000000059F88: 00001500
	.long 0x70312                                              // 000000059F8C: 00070312
	.long 0x6f700                                              // 000000059F90: 0006F700
	.long 0                                                    // 000000059F94: 00000000
	.long 0xfc                                                 // 000000059F98: 000000FC
	.long 0                                                    // 000000059F9C: 00000000
	.long 0x49e8                                               // 000000059FA0: 000049E8
	.long 0x70312                                              // 000000059FA4: 00070312
	.long 0x7f300                                              // 000000059FA8: 0007F300
	.long 0                                                    // 000000059FAC: 00000000
	.ascii "H"                                                 // 000000059FB0: 48
	.byte 0x1                                                  // 000000059FB1: 01
	.short 0                                                   // 000000059FB2: 0000
	.long 0                                                    // 000000059FB4: 00000000
	.ascii "uK"                                                // 000000059FB8: 4B75
	.short 0                                                   // 000000059FBA: 0000
	.long 0x60311                                              // 000000059FBC: 00060311
	.long 0x66b80                                              // 000000059FC0: 00066B80
	.long 0                                                    // 000000059FC4: 00000000
	.ascii "@"                                                 // 000000059FC8: 40
	.byte 0                                                    // 000000059FC9: 00
	.short 0                                                   // 000000059FCA: 0000
	.long 0                                                    // 000000059FCC: 00000000
	.long 0x310                                                // 000000059FD0: 00000310
	.long 0x70312                                              // 000000059FD4: 00070312
	.long 0x69700                                              // 000000059FD8: 00069700
	.long 0                                                    // 000000059FDC: 00000000
	.ascii "T"                                                 // 000000059FE0: 54
	.byte 0x1                                                  // 000000059FE1: 01
	.short 0                                                   // 000000059FE2: 0000
	.long 0                                                    // 000000059FE4: 00000000
	.long 0xbb1                                                // 000000059FE8: 00000BB1
	.long 0x70312                                              // 000000059FEC: 00070312
	.long 0x6c200                                              // 000000059FF0: 0006C200
	.long 0                                                    // 000000059FF4: 00000000
	.long 0x19c                                                // 000000059FF8: 0000019C
	.long 0                                                    // 000000059FFC: 00000000
	.long 0x1ef0                                               // 00000005A000: 00001EF0
	.long 0x60311                                              // 00000005A004: 00060311
	.long 0x648c0                                              // 00000005A008: 000648C0
	.long 0                                                    // 00000005A00C: 00000000
	.ascii "@"                                                 // 00000005A010: 40
	.byte 0                                                    // 00000005A011: 00
	.short 0                                                   // 00000005A012: 0000
	.long 0                                                    // 00000005A014: 00000000
	.ascii "51"                                                // 00000005A018: 3135
	.short 0                                                   // 00000005A01A: 0000
	.long 0x60311                                              // 00000005A01C: 00060311
	.ascii "@V"                                                // 00000005A020: 5640
	.short 0x6                                                 // 00000005A022: 0006
	.long 0                                                    // 00000005A024: 00000000
	.ascii "@"                                                 // 00000005A028: 40
	.byte 0                                                    // 00000005A029: 00
	.short 0                                                   // 00000005A02A: 0000
	.long 0                                                    // 00000005A02C: 00000000
	.ascii "6O"                                                // 00000005A030: 4F36
	.short 0                                                   // 00000005A032: 0000
	.long 0x60311                                              // 00000005A034: 00060311
	.ascii "@n"                                                // 00000005A038: 6E40
	.short 0x6                                                 // 00000005A03A: 0006
	.long 0                                                    // 00000005A03C: 00000000
	.ascii "@"                                                 // 00000005A040: 40
	.byte 0                                                    // 00000005A041: 00
	.short 0                                                   // 00000005A042: 0000
	.long 0                                                    // 00000005A044: 00000000
	.long 0x19d                                                // 00000005A048: 0000019D
	.long 0x70312                                              // 00000005A04C: 00070312
	.long 0x69200                                              // 00000005A050: 00069200
	.long 0                                                    // 00000005A054: 00000000
	.long 0x80                                                 // 00000005A058: 00000080
	.long 0                                                    // 00000005A05C: 00000000
	.long 0x2e5                                                // 00000005A060: 000002E5
	.long 0x60311                                              // 00000005A064: 00060311
	.long 0x62fc0                                              // 00000005A068: 00062FC0
	.long 0                                                    // 00000005A06C: 00000000
	.ascii "@"                                                 // 00000005A070: 40
	.byte 0                                                    // 00000005A071: 00
	.short 0                                                   // 00000005A072: 0000
	.long 0                                                    // 00000005A074: 00000000
	.long 0x1bdb                                               // 00000005A078: 00001BDB
	.long 0x70312                                              // 00000005A07C: 00070312
	.long 0x71700                                              // 00000005A080: 00071700
	.long 0                                                    // 00000005A084: 00000000
	.long 0xfc                                                 // 00000005A088: 000000FC
	.long 0                                                    // 00000005A08C: 00000000
	.ascii "f<"                                                // 00000005A090: 3C66
	.short 0                                                   // 00000005A092: 0000
	.long 0x70312                                              // 00000005A094: 00070312
	.long 0x7c000                                              // 00000005A098: 0007C000
	.long 0                                                    // 00000005A09C: 00000000
	.long 0xa8                                                 // 00000005A0A0: 000000A8
	.long 0                                                    // 00000005A0A4: 00000000
	.long 0x4e98                                               // 00000005A0A8: 00004E98
	.long 0x60311                                              // 00000005A0AC: 00060311
	.long 0x66dc0                                              // 00000005A0B0: 00066DC0
	.long 0                                                    // 00000005A0B4: 00000000
	.ascii "@"                                                 // 00000005A0B8: 40
	.byte 0                                                    // 00000005A0B9: 00
	.short 0                                                   // 00000005A0BA: 0000
	.long 0                                                    // 00000005A0BC: 00000000
	.ascii "r"                                                 // 00000005A0C0: 72
	.byte 0x11                                                 // 00000005A0C1: 11
	.short 0                                                   // 00000005A0C2: 0000
	.long 0x70312                                              // 00000005A0C4: 00070312
	.long 0x6e100                                              // 00000005A0C8: 0006E100
	.long 0                                                    // 00000005A0CC: 00000000
	.ascii "T"                                                 // 00000005A0D0: 54
	.byte 0x1                                                  // 00000005A0D1: 01
	.short 0                                                   // 00000005A0D2: 0000
	.long 0                                                    // 00000005A0D4: 00000000
	.ascii "F2"                                                // 00000005A0D8: 3246
	.short 0                                                   // 00000005A0DA: 0000
	.long 0x60311                                              // 00000005A0DC: 00060311
	.long 0x65700                                              // 00000005A0E0: 00065700
	.long 0                                                    // 00000005A0E4: 00000000
	.ascii "@"                                                 // 00000005A0E8: 40
	.byte 0                                                    // 00000005A0E9: 00
	.short 0                                                   // 00000005A0EA: 0000
	.long 0                                                    // 00000005A0EC: 00000000
	.ascii "LK"                                                // 00000005A0F0: 4B4C
	.short 0                                                   // 00000005A0F2: 0000
	.long 0x70312                                              // 00000005A0F4: 00070312
	.long 0x7fa00                                              // 00000005A0F8: 0007FA00
	.long 0                                                    // 00000005A0FC: 00000000
	.long 0xdc                                                 // 00000005A100: 000000DC
	.long 0                                                    // 00000005A104: 00000000
	.ascii "u"                                                 // 00000005A108: 75
	.byte 0x12                                                 // 00000005A109: 12
	.short 0                                                   // 00000005A10A: 0000
	.long 0x60311                                              // 00000005A10C: 00060311
	.long 0x63cc0                                              // 00000005A110: 00063CC0
	.long 0                                                    // 00000005A114: 00000000
	.ascii "@"                                                 // 00000005A118: 40
	.byte 0                                                    // 00000005A119: 00
	.short 0                                                   // 00000005A11A: 0000
	.long 0                                                    // 00000005A11C: 00000000
	.ascii "5D"                                                // 00000005A120: 4435
	.short 0                                                   // 00000005A122: 0000
	.long 0x70312                                              // 00000005A124: 00070312
	.long 0x7da00                                              // 00000005A128: 0007DA00
	.long 0                                                    // 00000005A12C: 00000000
	.long 0xc4                                                 // 00000005A130: 000000C4
	.long 0                                                    // 00000005A134: 00000000
	.long 0x52ee                                               // 00000005A138: 000052EE
	.long 0x60311                                              // 00000005A13C: 00060311
	.long 0x67100                                              // 00000005A140: 00067100
	.long 0                                                    // 00000005A144: 00000000
	.ascii "@"                                                 // 00000005A148: 40
	.byte 0                                                    // 00000005A149: 00
	.short 0                                                   // 00000005A14A: 0000
	.long 0                                                    // 00000005A14C: 00000000
	.long 0xc04                                                // 00000005A150: 00000C04
	.long 0x70312                                              // 00000005A154: 00070312
	.long 0x6c400                                              // 00000005A158: 0006C400
	.long 0                                                    // 00000005A15C: 00000000
	.long 0x1a0                                                // 00000005A160: 000001A0
	.long 0                                                    // 00000005A164: 00000000
	.long 0x1cfa                                               // 00000005A168: 00001CFA
	.long 0x60311                                              // 00000005A16C: 00060311
	.ascii "@G"                                                // 00000005A170: 4740
	.short 0x6                                                 // 00000005A172: 0006
	.long 0                                                    // 00000005A174: 00000000
	.ascii "@"                                                 // 00000005A178: 40
	.byte 0                                                    // 00000005A179: 00
	.short 0                                                   // 00000005A17A: 0000
	.long 0                                                    // 00000005A17C: 00000000
	.long 0x53c5                                               // 00000005A180: 000053C5
	.long 0x70312                                              // 00000005A184: 00070312
	.long 0x81c00                                              // 00000005A188: 00081C00
	.long 0                                                    // 00000005A18C: 00000000
	.long 0xf0                                                 // 00000005A190: 000000F0
	.long 0                                                    // 00000005A194: 00000000
	.ascii "s"                                                 // 00000005A198: 73
	.byte 0                                                    // 00000005A199: 00
	.short 0                                                   // 00000005A19A: 0000
	.long 0x60311                                              // 00000005A19C: 00060311
	.ascii "@-"                                                // 00000005A1A0: 2D40
	.short 0x6                                                 // 00000005A1A2: 0006
	.long 0                                                    // 00000005A1A4: 00000000
	.ascii "@"                                                 // 00000005A1A8: 40
	.byte 0                                                    // 00000005A1A9: 00
	.short 0                                                   // 00000005A1AA: 0000
	.long 0                                                    // 00000005A1AC: 00000000
	.ascii "H"                                                 // 00000005A1B0: 48
	.byte 0x1                                                  // 00000005A1B1: 01
	.short 0                                                   // 00000005A1B2: 0000
	.long 0x60311                                              // 00000005A1B4: 00060311
	.ascii "@."                                                // 00000005A1B8: 2E40
	.short 0x6                                                 // 00000005A1BA: 0006
	.long 0                                                    // 00000005A1BC: 00000000
	.ascii "@"                                                 // 00000005A1C0: 40
	.byte 0                                                    // 00000005A1C1: 00
	.short 0                                                   // 00000005A1C2: 0000
	.long 0                                                    // 00000005A1C4: 00000000
	.ascii "Y"                                                 // 00000005A1C8: 59
	.byte 0x1c                                                 // 00000005A1C9: 1C
	.short 0                                                   // 00000005A1CA: 0000
	.long 0x70312                                              // 00000005A1CC: 00070312
	.long 0x71a00                                              // 00000005A1D0: 00071A00
	.long 0                                                    // 00000005A1D4: 00000000
	.long 0xf4                                                 // 00000005A1D8: 000000F4
	.long 0                                                    // 00000005A1DC: 00000000
	.ascii "64"                                                // 00000005A1E0: 3436
	.short 0                                                   // 00000005A1E2: 0000
	.long 0x60311                                              // 00000005A1E4: 00060311
	.long 0x65880                                              // 00000005A1E8: 00065880
	.long 0                                                    // 00000005A1EC: 00000000
	.ascii "@"                                                 // 00000005A1F0: 40
	.byte 0                                                    // 00000005A1F1: 00
	.short 0                                                   // 00000005A1F2: 0000
	.long 0                                                    // 00000005A1F4: 00000000
	.long 0x190e                                               // 00000005A1F8: 0000190E
	.long 0x70312                                              // 00000005A1FC: 00070312
	.long 0x70a00                                              // 00000005A200: 00070A00
	.long 0                                                    // 00000005A204: 00000000
	.ascii "p"                                                 // 00000005A208: 70
	.byte 0                                                    // 00000005A209: 00
	.short 0                                                   // 00000005A20A: 0000
	.long 0                                                    // 00000005A20C: 00000000
	.ascii "YF"                                                // 00000005A210: 4659
	.short 0                                                   // 00000005A212: 0000
	.long 0x60311                                              // 00000005A214: 00060311
	.long 0x667c0                                              // 00000005A218: 000667C0
	.long 0                                                    // 00000005A21C: 00000000
	.ascii "@"                                                 // 00000005A220: 40
	.byte 0                                                    // 00000005A221: 00
	.short 0                                                   // 00000005A222: 0000
	.long 0                                                    // 00000005A224: 00000000
	.long 0x4ccb                                               // 00000005A228: 00004CCB
	.long 0x60311                                              // 00000005A22C: 00060311
	.long 0x66c80                                              // 00000005A230: 00066C80
	.long 0                                                    // 00000005A234: 00000000
	.ascii "@"                                                 // 00000005A238: 40
	.byte 0                                                    // 00000005A239: 00
	.short 0                                                   // 00000005A23A: 0000
	.long 0                                                    // 00000005A23C: 00000000
	.long 0x51d9                                               // 00000005A240: 000051D9
	.long 0x70312                                              // 00000005A244: 00070312
	.long 0x81500                                              // 00000005A248: 00081500
	.long 0                                                    // 00000005A24C: 00000000
	.long 0xa0                                                 // 00000005A250: 000000A0
	.long 0                                                    // 00000005A254: 00000000
	.long 0x904                                                // 00000005A258: 00000904
	.long 0x70312                                              // 00000005A25C: 00070312
	.long 0x6b200                                              // 00000005A260: 0006B200
	.long 0                                                    // 00000005A264: 00000000
	.ascii ","                                                 // 00000005A268: 2C
	.byte 0x1                                                  // 00000005A269: 01
	.short 0                                                   // 00000005A26A: 0000
	.long 0                                                    // 00000005A26C: 00000000
	.long 0x30dc                                               // 00000005A270: 000030DC
	.long 0x60311                                              // 00000005A274: 00060311
	.long 0x65600                                              // 00000005A278: 00065600
	.long 0                                                    // 00000005A27C: 00000000
	.ascii "@"                                                 // 00000005A280: 40
	.byte 0                                                    // 00000005A281: 00
	.short 0                                                   // 00000005A282: 0000
	.long 0                                                    // 00000005A284: 00000000
	.long 0x43b3                                               // 00000005A288: 000043B3
	.long 0x60311                                              // 00000005A28C: 00060311
	.long 0x665c0                                              // 00000005A290: 000665C0
	.long 0                                                    // 00000005A294: 00000000
	.ascii "@"                                                 // 00000005A298: 40
	.byte 0                                                    // 00000005A299: 00
	.short 0                                                   // 00000005A29A: 0000
	.long 0                                                    // 00000005A29C: 00000000
	.ascii "SQ"                                                // 00000005A2A0: 5153
	.short 0                                                   // 00000005A2A2: 0000
	.long 0x60311                                              // 00000005A2A4: 00060311
	.long 0x66fc0                                              // 00000005A2A8: 00066FC0
	.long 0                                                    // 00000005A2AC: 00000000
	.ascii "@"                                                 // 00000005A2B0: 40
	.byte 0                                                    // 00000005A2B1: 00
	.short 0                                                   // 00000005A2B2: 0000
	.long 0                                                    // 00000005A2B4: 00000000
	.long 0x13b3                                               // 00000005A2B8: 000013B3
	.long 0x60311                                              // 00000005A2BC: 00060311
	.long 0x63dc0                                              // 00000005A2C0: 00063DC0
	.long 0                                                    // 00000005A2C4: 00000000
	.ascii "@"                                                 // 00000005A2C8: 40
	.byte 0                                                    // 00000005A2C9: 00
	.short 0                                                   // 00000005A2CA: 0000
	.long 0                                                    // 00000005A2CC: 00000000
	.ascii "/7"                                                // 00000005A2D0: 372F
	.short 0                                                   // 00000005A2D2: 0000
	.long 0x70312                                              // 00000005A2D4: 00070312
	.long 0x7a900                                              // 00000005A2D8: 0007A900
	.long 0                                                    // 00000005A2DC: 00000000
	.long 0x8c                                                 // 00000005A2E0: 0000008C
	.long 0                                                    // 00000005A2E4: 00000000
	.ascii "q="                                                // 00000005A2E8: 3D71
	.short 0                                                   // 00000005A2EA: 0000
	.long 0x70312                                              // 00000005A2EC: 00070312
	.long 0x7c300                                              // 00000005A2F0: 0007C300
	.long 0                                                    // 00000005A2F4: 00000000
	.long 0xa4                                                 // 00000005A2F8: 000000A4
	.long 0                                                    // 00000005A2FC: 00000000
	.ascii "LW"                                                // 00000005A300: 574C
	.short 0                                                   // 00000005A302: 0000
	.long 0x60311                                              // 00000005A304: 00060311
	.long 0x67500                                              // 00000005A308: 00067500
	.long 0                                                    // 00000005A30C: 00000000
	.ascii "@"                                                 // 00000005A310: 40
	.byte 0                                                    // 00000005A311: 00
	.short 0                                                   // 00000005A312: 0000
	.long 0                                                    // 00000005A314: 00000000
	.long 0x24fb                                               // 00000005A318: 000024FB
	.long 0x60311                                              // 00000005A31C: 00060311
	.ascii "@M"                                                // 00000005A320: 4D40
	.short 0x6                                                 // 00000005A322: 0006
	.long 0                                                    // 00000005A324: 00000000
	.ascii "@"                                                 // 00000005A328: 40
	.byte 0                                                    // 00000005A329: 00
	.short 0                                                   // 00000005A32A: 0000
	.long 0                                                    // 00000005A32C: 00000000
	.long 0x269f                                               // 00000005A330: 0000269F
	.long 0x60311                                              // 00000005A334: 00060311
	.long 0x64e80                                              // 00000005A338: 00064E80
	.long 0                                                    // 00000005A33C: 00000000
	.ascii "@"                                                 // 00000005A340: 40
	.byte 0                                                    // 00000005A341: 00
	.short 0                                                   // 00000005A342: 0000
	.long 0                                                    // 00000005A344: 00000000
	.ascii "`/"                                                // 00000005A348: 2F60
	.short 0                                                   // 00000005A34A: 0000
	.long 0x70312                                              // 00000005A34C: 00070312
	.long 0x78100                                              // 00000005A350: 00078100
	.long 0                                                    // 00000005A354: 00000000
	.ascii "h"                                                 // 00000005A358: 68
	.byte 0x1                                                  // 00000005A359: 01
	.short 0                                                   // 00000005A35A: 0000
	.long 0                                                    // 00000005A35C: 00000000
	.ascii ":E"                                                // 00000005A360: 453A
	.short 0                                                   // 00000005A362: 0000
	.long 0x70312                                              // 00000005A364: 00070312
	.long 0x7dd00                                              // 00000005A368: 0007DD00
	.long 0                                                    // 00000005A36C: 00000000
	.long 0xb4                                                 // 00000005A370: 000000B4
	.long 0                                                    // 00000005A374: 00000000
	.long 0x1a81                                               // 00000005A378: 00001A81
	.long 0x70312                                              // 00000005A37C: 00070312
	.long 0x71100                                              // 00000005A380: 00071100
	.long 0                                                    // 00000005A384: 00000000
	.long 0x88                                                 // 00000005A388: 00000088
	.long 0                                                    // 00000005A38C: 00000000
	.long 0x34e3                                               // 00000005A390: 000034E3
	.long 0x60311                                              // 00000005A394: 00060311
	.long 0x65900                                              // 00000005A398: 00065900
	.long 0                                                    // 00000005A39C: 00000000
	.ascii "@"                                                 // 00000005A3A0: 40
	.byte 0                                                    // 00000005A3A1: 00
	.short 0                                                   // 00000005A3A2: 0000
	.long 0                                                    // 00000005A3A4: 00000000
	.long 0x3885                                               // 00000005A3A8: 00003885
	.long 0x60311                                              // 00000005A3AC: 00060311
	.long 0x65c80                                              // 00000005A3B0: 00065C80
	.long 0                                                    // 00000005A3B4: 00000000
	.ascii "@"                                                 // 00000005A3B8: 40
	.byte 0                                                    // 00000005A3B9: 00
	.short 0                                                   // 00000005A3BA: 0000
	.long 0                                                    // 00000005A3BC: 00000000
	.ascii "I@"                                                // 00000005A3C0: 4049
	.short 0                                                   // 00000005A3C2: 0000
	.long 0x70312                                              // 00000005A3C4: 00070312
	.long 0x7cc00                                              // 00000005A3C8: 0007CC00
	.long 0                                                    // 00000005A3CC: 00000000
	.long 0x8c                                                 // 00000005A3D0: 0000008C
	.long 0                                                    // 00000005A3D4: 00000000
	.ascii "{"                                                 // 00000005A3D8: 7B
	.byte 0x1d                                                 // 00000005A3D9: 1D
	.short 0                                                   // 00000005A3DA: 0000
	.long 0x60311                                              // 00000005A3DC: 00060311
	.long 0x647c0                                              // 00000005A3E0: 000647C0
	.long 0                                                    // 00000005A3E4: 00000000
	.ascii "@"                                                 // 00000005A3E8: 40
	.byte 0                                                    // 00000005A3E9: 00
	.short 0                                                   // 00000005A3EA: 0000
	.long 0                                                    // 00000005A3EC: 00000000
	.long 0x1ed                                                // 00000005A3F0: 000001ED
	.long 0x60311                                              // 00000005A3F4: 00060311
	.long 0x62f00                                              // 00000005A3F8: 00062F00
	.long 0                                                    // 00000005A3FC: 00000000
	.ascii "@"                                                 // 00000005A400: 40
	.byte 0                                                    // 00000005A401: 00
	.short 0                                                   // 00000005A402: 0000
	.long 0                                                    // 00000005A404: 00000000
	.ascii "c"                                                 // 00000005A408: 63
	.byte 0x13                                                 // 00000005A409: 13
	.short 0                                                   // 00000005A40A: 0000
	.long 0x60311                                              // 00000005A40C: 00060311
	.long 0x63d80                                              // 00000005A410: 00063D80
	.long 0                                                    // 00000005A414: 00000000
	.ascii "@"                                                 // 00000005A418: 40
	.byte 0                                                    // 00000005A419: 00
	.short 0                                                   // 00000005A41A: 0000
	.long 0                                                    // 00000005A41C: 00000000
	.ascii "="                                                 // 00000005A420: 3D
	.byte 0x19                                                 // 00000005A421: 19
	.short 0                                                   // 00000005A422: 0000
	.long 0x70312                                              // 00000005A424: 00070312
	.long 0x70b00                                              // 00000005A428: 00070B00
	.long 0                                                    // 00000005A42C: 00000000
	.long 0x90                                                 // 00000005A430: 00000090
	.long 0                                                    // 00000005A434: 00000000
	.ascii "h,"                                                // 00000005A438: 2C68
	.short 0                                                   // 00000005A43A: 0000
	.long 0x60311                                              // 00000005A43C: 00060311
	.long 0x652c0                                              // 00000005A440: 000652C0
	.long 0                                                    // 00000005A444: 00000000
	.ascii "@"                                                 // 00000005A448: 40
	.byte 0                                                    // 00000005A449: 00
	.short 0                                                   // 00000005A44A: 0000
	.long 0                                                    // 00000005A44C: 00000000
	.ascii "d:"                                                // 00000005A450: 3A64
	.short 0                                                   // 00000005A452: 0000
	.long 0x70312                                              // 00000005A454: 00070312
	.long 0x7b600                                              // 00000005A458: 0007B600
	.long 0                                                    // 00000005A45C: 00000000
	.long 0xa8                                                 // 00000005A460: 000000A8
	.long 0                                                    // 00000005A464: 00000000
	.long 0x5016                                               // 00000005A468: 00005016
	.long 0x70312                                              // 00000005A46C: 00070312
	.long 0x80c00                                              // 00000005A470: 00080C00
	.long 0                                                    // 00000005A474: 00000000
	.ascii "L"                                                 // 00000005A478: 4C
	.byte 0x1                                                  // 00000005A479: 01
	.short 0                                                   // 00000005A47A: 0000
	.long 0                                                    // 00000005A47C: 00000000
	.ascii "CR"                                                // 00000005A480: 5243
	.short 0                                                   // 00000005A482: 0000
	.long 0x60311                                              // 00000005A484: 00060311
	.long 0x67080                                              // 00000005A488: 00067080
	.long 0                                                    // 00000005A48C: 00000000
	.ascii "@"                                                 // 00000005A490: 40
	.byte 0                                                    // 00000005A491: 00
	.short 0                                                   // 00000005A492: 0000
	.long 0                                                    // 00000005A494: 00000000
	.long 0x58e5                                               // 00000005A498: 000058E5
	.long 0x60311                                              // 00000005A49C: 00060311
	.long 0x67680                                              // 00000005A4A0: 00067680
	.long 0                                                    // 00000005A4A4: 00000000
	.ascii "@"                                                 // 00000005A4A8: 40
	.byte 0                                                    // 00000005A4A9: 00
	.short 0                                                   // 00000005A4AA: 0000
	.long 0                                                    // 00000005A4AC: 00000000
	.long 0x6be                                                // 00000005A4B0: 000006BE
	.long 0x70312                                              // 00000005A4B4: 00070312
	.long 0x6a800                                              // 00000005A4B8: 0006A800
	.long 0                                                    // 00000005A4BC: 00000000
	.ascii " "                                                 // 00000005A4C0: 20
	.byte 0x1                                                  // 00000005A4C1: 01
	.short 0                                                   // 00000005A4C2: 0000
	.long 0                                                    // 00000005A4C4: 00000000
	.long 0x4ee5                                               // 00000005A4C8: 00004EE5
	.long 0x60311                                              // 00000005A4CC: 00060311
	.long 0x66e00                                              // 00000005A4D0: 00066E00
	.long 0                                                    // 00000005A4D4: 00000000
	.ascii "@"                                                 // 00000005A4D8: 40
	.byte 0                                                    // 00000005A4D9: 00
	.short 0                                                   // 00000005A4DA: 0000
	.long 0                                                    // 00000005A4DC: 00000000
	.long 0x39fc                                               // 00000005A4E0: 000039FC
	.long 0x70312                                              // 00000005A4E4: 00070312
	.long 0x7b400                                              // 00000005A4E8: 0007B400
	.long 0                                                    // 00000005A4EC: 00000000
	.long 0x98                                                 // 00000005A4F0: 00000098
	.long 0                                                    // 00000005A4F4: 00000000
	.ascii "."                                                 // 00000005A4F8: 2E
	.byte 0x7                                                  // 00000005A4F9: 07
	.short 0                                                   // 00000005A4FA: 0000
	.long 0x60311                                              // 00000005A4FC: 00060311
	.ascii "@3"                                                // 00000005A500: 3340
	.short 0x6                                                 // 00000005A502: 0006
	.long 0                                                    // 00000005A504: 00000000
	.ascii "@"                                                 // 00000005A508: 40
	.byte 0                                                    // 00000005A509: 00
	.short 0                                                   // 00000005A50A: 0000
	.long 0                                                    // 00000005A50C: 00000000
	.long 0xcd7                                                // 00000005A510: 00000CD7
	.long 0x70312                                              // 00000005A514: 00070312
	.long 0x6c900                                              // 00000005A518: 0006C900
	.long 0                                                    // 00000005A51C: 00000000
	.long 0xe8                                                 // 00000005A520: 000000E8
	.long 0                                                    // 00000005A524: 00000000
	.long 0x16f1                                               // 00000005A528: 000016F1
	.long 0x60311                                              // 00000005A52C: 00060311
	.long 0x64080                                              // 00000005A530: 00064080
	.long 0                                                    // 00000005A534: 00000000
	.ascii "@"                                                 // 00000005A538: 40
	.byte 0                                                    // 00000005A539: 00
	.short 0                                                   // 00000005A53A: 0000
	.long 0                                                    // 00000005A53C: 00000000
	.long 0x25a8                                               // 00000005A540: 000025A8
	.long 0x60311                                              // 00000005A544: 00060311
	.long 0x64dc0                                              // 00000005A548: 00064DC0
	.long 0                                                    // 00000005A54C: 00000000
	.ascii "@"                                                 // 00000005A550: 40
	.byte 0                                                    // 00000005A551: 00
	.short 0                                                   // 00000005A552: 0000
	.long 0                                                    // 00000005A554: 00000000
	.long 0x28b1                                               // 00000005A558: 000028B1
	.long 0x60311                                              // 00000005A55C: 00060311
	.long 0x65000                                              // 00000005A560: 00065000
	.long 0                                                    // 00000005A564: 00000000
	.ascii "@"                                                 // 00000005A568: 40
	.byte 0                                                    // 00000005A569: 00
	.short 0                                                   // 00000005A56A: 0000
	.long 0                                                    // 00000005A56C: 00000000
	.ascii "]V"                                                // 00000005A570: 565D
	.short 0                                                   // 00000005A572: 0000
	.long 0x60311                                              // 00000005A574: 00060311
	.long 0x67400                                              // 00000005A578: 00067400
	.long 0                                                    // 00000005A57C: 00000000
	.ascii "@"                                                 // 00000005A580: 40
	.byte 0                                                    // 00000005A581: 00
	.short 0                                                   // 00000005A582: 0000
	.long 0                                                    // 00000005A584: 00000000
	.long 0x56a1                                               // 00000005A588: 000056A1
	.long 0x60311                                              // 00000005A58C: 00060311
	.ascii "@t"                                                // 00000005A590: 7440
	.short 0x6                                                 // 00000005A592: 0006
	.long 0                                                    // 00000005A594: 00000000
	.ascii "@"                                                 // 00000005A598: 40
	.byte 0                                                    // 00000005A599: 00
	.short 0                                                   // 00000005A59A: 0000
	.long 0                                                    // 00000005A59C: 00000000
	.long 0x9a0                                                // 00000005A5A0: 000009A0
	.long 0x70312                                              // 00000005A5A4: 00070312
	.long 0x6b600                                              // 00000005A5A8: 0006B600
	.long 0                                                    // 00000005A5AC: 00000000
	.long 0xfc                                                 // 00000005A5B0: 000000FC
	.long 0                                                    // 00000005A5B4: 00000000
	.ascii "P"                                                 // 00000005A5B8: 50
	.byte 0xd                                                  // 00000005A5B9: 0D
	.short 0                                                   // 00000005A5BA: 0000
	.long 0x60311                                              // 00000005A5BC: 00060311
	.long 0x63880                                              // 00000005A5C0: 00063880
	.long 0                                                    // 00000005A5C4: 00000000
	.ascii "@"                                                 // 00000005A5C8: 40
	.byte 0                                                    // 00000005A5C9: 00
	.short 0                                                   // 00000005A5CA: 0000
	.long 0                                                    // 00000005A5CC: 00000000
	.ascii ":-"                                                // 00000005A5D0: 2D3A
	.short 0                                                   // 00000005A5D2: 0000
	.long 0x70312                                              // 00000005A5D4: 00070312
	.long 0x77600                                              // 00000005A5D8: 00077600
	.long 0                                                    // 00000005A5DC: 00000000
	.ascii "\\"                                                // 00000005A5E0: 5C
	.byte 0x1                                                  // 00000005A5E1: 01
	.short 0                                                   // 00000005A5E2: 0000
	.long 0                                                    // 00000005A5E4: 00000000
	.ascii "4"                                                 // 00000005A5E8: 34
	.byte 0x1e                                                 // 00000005A5E9: 1E
	.short 0                                                   // 00000005A5EA: 0000
	.long 0x60311                                              // 00000005A5EC: 00060311
	.ascii "@H"                                                // 00000005A5F0: 4840
	.short 0x6                                                 // 00000005A5F2: 0006
	.long 0                                                    // 00000005A5F4: 00000000
	.ascii "@"                                                 // 00000005A5F8: 40
	.byte 0                                                    // 00000005A5F9: 00
	.short 0                                                   // 00000005A5FA: 0000
	.long 0                                                    // 00000005A5FC: 00000000
	.long 0x561a                                               // 00000005A600: 0000561A
	.long 0x60311                                              // 00000005A604: 00060311
	.long 0x673c0                                              // 00000005A608: 000673C0
	.long 0                                                    // 00000005A60C: 00000000
	.ascii "@"                                                 // 00000005A610: 40
	.byte 0                                                    // 00000005A611: 00
	.short 0                                                   // 00000005A612: 0000
	.long 0                                                    // 00000005A614: 00000000
	.long 0x57b4                                               // 00000005A618: 000057B4
	.long 0x70312                                              // 00000005A61C: 00070312
	.long 0x82c00                                              // 00000005A620: 00082C00
	.long 0                                                    // 00000005A624: 00000000
	.ascii "D"                                                 // 00000005A628: 44
	.byte 0                                                    // 00000005A629: 00
	.short 0                                                   // 00000005A62A: 0000
	.long 0                                                    // 00000005A62C: 00000000
	.ascii "$"                                                 // 00000005A630: 24
	.byte 0x19                                                 // 00000005A631: 19
	.short 0                                                   // 00000005A632: 0000
	.long 0x60311                                              // 00000005A634: 00060311
	.long 0x64300                                              // 00000005A638: 00064300
	.long 0                                                    // 00000005A63C: 00000000
	.ascii "@"                                                 // 00000005A640: 40
	.byte 0                                                    // 00000005A641: 00
	.short 0                                                   // 00000005A642: 0000
	.long 0                                                    // 00000005A644: 00000000
	.long 0x1d0                                                // 00000005A648: 000001D0
	.long 0x70312                                              // 00000005A64C: 00070312
	.long 0x69300                                              // 00000005A650: 00069300
	.long 0                                                    // 00000005A654: 00000000
	.long 0xf0                                                 // 00000005A658: 000000F0
	.long 0                                                    // 00000005A65C: 00000000
	.long 0x1cb8                                               // 00000005A660: 00001CB8
	.long 0x60311                                              // 00000005A664: 00060311
	.long 0x64700                                              // 00000005A668: 00064700
	.long 0                                                    // 00000005A66C: 00000000
	.ascii "@"                                                 // 00000005A670: 40
	.byte 0                                                    // 00000005A671: 00
	.short 0                                                   // 00000005A672: 0000
	.long 0                                                    // 00000005A674: 00000000
	.long 0x41c6                                               // 00000005A678: 000041C6
	.long 0x60311                                              // 00000005A67C: 00060311
	.ascii "@d"                                                // 00000005A680: 6440
	.short 0x6                                                 // 00000005A682: 0006
	.long 0                                                    // 00000005A684: 00000000
	.ascii "@"                                                 // 00000005A688: 40
	.byte 0                                                    // 00000005A689: 00
	.short 0                                                   // 00000005A68A: 0000
	.long 0                                                    // 00000005A68C: 00000000
	.ascii "rL"                                                // 00000005A690: 4C72
	.short 0                                                   // 00000005A692: 0000
	.long 0x60311                                              // 00000005A694: 00060311
	.ascii "@l"                                                // 00000005A698: 6C40
	.short 0x6                                                 // 00000005A69A: 0006
	.long 0                                                    // 00000005A69C: 00000000
	.ascii "@"                                                 // 00000005A6A0: 40
	.byte 0                                                    // 00000005A6A1: 00
	.short 0                                                   // 00000005A6A2: 0000
	.long 0                                                    // 00000005A6A4: 00000000
	.ascii "x	"                                                // 00000005A6A8: 0978
	.short 0                                                   // 00000005A6AA: 0000
	.long 0x60311                                              // 00000005A6AC: 00060311
	.ascii "@5"                                                // 00000005A6B0: 3540
	.short 0x6                                                 // 00000005A6B2: 0006
	.long 0                                                    // 00000005A6B4: 00000000
	.ascii "@"                                                 // 00000005A6B8: 40
	.byte 0                                                    // 00000005A6B9: 00
	.short 0                                                   // 00000005A6BA: 0000
	.long 0                                                    // 00000005A6BC: 00000000
	.long 0x27d0                                               // 00000005A6C0: 000027D0
	.long 0x70312                                              // 00000005A6C4: 00070312
	.long 0x75700                                              // 00000005A6C8: 00075700
	.long 0                                                    // 00000005A6CC: 00000000
	.long 0xe4                                                 // 00000005A6D0: 000000E4
	.long 0                                                    // 00000005A6D4: 00000000
	.long 0x2993                                               // 00000005A6D8: 00002993
	.long 0x70312                                              // 00000005A6DC: 00070312
	.long 0x76000                                              // 00000005A6E0: 00076000
	.long 0                                                    // 00000005A6E4: 00000000
	.ascii "4"                                                 // 00000005A6E8: 34
	.byte 0x1                                                  // 00000005A6E9: 01
	.short 0                                                   // 00000005A6EA: 0000
	.long 0                                                    // 00000005A6EC: 00000000
	.long 0x40ef                                               // 00000005A6F0: 000040EF
	.long 0x70312                                              // 00000005A6F4: 00070312
	.long 0x7ce00                                              // 00000005A6F8: 0007CE00
	.long 0                                                    // 00000005A6FC: 00000000
	.long 0x118                                                // 00000005A700: 00000118
	.long 0                                                    // 00000005A704: 00000000
	.ascii "j"                                                 // 00000005A708: 6A
	.byte 0x2                                                  // 00000005A709: 02
	.short 0                                                   // 00000005A70A: 0000
	.long 0x70312                                              // 00000005A70C: 00070312
	.long 0x69500                                              // 00000005A710: 00069500
	.long 0                                                    // 00000005A714: 00000000
	.long 0xe0                                                 // 00000005A718: 000000E0
	.long 0                                                    // 00000005A71C: 00000000
	.ascii "z"                                                 // 00000005A720: 7A
	.byte 0xc                                                  // 00000005A721: 0C
	.short 0                                                   // 00000005A722: 0000
	.long 0x60311                                              // 00000005A724: 00060311
	.long 0x637c0                                              // 00000005A728: 000637C0
	.long 0                                                    // 00000005A72C: 00000000
	.ascii "@"                                                 // 00000005A730: 40
	.byte 0                                                    // 00000005A731: 00
	.short 0                                                   // 00000005A732: 0000
	.long 0                                                    // 00000005A734: 00000000
	.long 0x3fcc                                               // 00000005A738: 00003FCC
	.long 0x60311                                              // 00000005A73C: 00060311
	.long 0x662c0                                              // 00000005A740: 000662C0
	.long 0                                                    // 00000005A744: 00000000
	.ascii "@"                                                 // 00000005A748: 40
	.byte 0                                                    // 00000005A749: 00
	.short 0                                                   // 00000005A74A: 0000
	.long 0                                                    // 00000005A74C: 00000000
	.long 0x4fe9                                               // 00000005A750: 00004FE9
	.long 0x60311                                              // 00000005A754: 00060311
	.long 0x66ec0                                              // 00000005A758: 00066EC0
	.long 0                                                    // 00000005A75C: 00000000
	.ascii "@"                                                 // 00000005A760: 40
	.byte 0                                                    // 00000005A761: 00
	.short 0                                                   // 00000005A762: 0000
	.long 0                                                    // 00000005A764: 00000000
	.ascii "h"                                                 // 00000005A768: 68
	.byte 0x5                                                  // 00000005A769: 05
	.short 0                                                   // 00000005A76A: 0000
	.long 0x60311                                              // 00000005A76C: 00060311
	.long 0x631c0                                              // 00000005A770: 000631C0
	.long 0                                                    // 00000005A774: 00000000
	.ascii "@"                                                 // 00000005A778: 40
	.byte 0                                                    // 00000005A779: 00
	.short 0                                                   // 00000005A77A: 0000
	.long 0                                                    // 00000005A77C: 00000000
	.long 0x199f                                               // 00000005A780: 0000199F
	.long 0x70312                                              // 00000005A784: 00070312
	.long 0x70d00                                              // 00000005A788: 00070D00
	.long 0                                                    // 00000005A78C: 00000000
	.ascii "p"                                                 // 00000005A790: 70
	.byte 0                                                    // 00000005A791: 00
	.short 0                                                   // 00000005A792: 0000
	.long 0                                                    // 00000005A794: 00000000
	.long 0x25d6                                               // 00000005A798: 000025D6
	.long 0x70312                                              // 00000005A79C: 00070312
	.long 0x74b00                                              // 00000005A7A0: 00074B00
	.long 0                                                    // 00000005A7A4: 00000000
	.ascii "X"                                                 // 00000005A7A8: 58
	.byte 0x1                                                  // 00000005A7A9: 01
	.short 0                                                   // 00000005A7AA: 0000
	.long 0                                                    // 00000005A7AC: 00000000
	.long 0x26c1                                               // 00000005A7B0: 000026C1
	.long 0x70312                                              // 00000005A7B4: 00070312
	.long 0x75100                                              // 00000005A7B8: 00075100
	.long 0                                                    // 00000005A7BC: 00000000
	.long 0x198                                                // 00000005A7C0: 00000198
	.long 0                                                    // 00000005A7C4: 00000000
	.ascii "u."                                                // 00000005A7C8: 2E75
	.short 0                                                   // 00000005A7CA: 0000
	.long 0x60311                                              // 00000005A7CC: 00060311
	.ascii "@T"                                                // 00000005A7D0: 5440
	.short 0x6                                                 // 00000005A7D2: 0006
	.long 0                                                    // 00000005A7D4: 00000000
	.ascii "@"                                                 // 00000005A7D8: 40
	.byte 0                                                    // 00000005A7D9: 00
	.short 0                                                   // 00000005A7DA: 0000
	.long 0                                                    // 00000005A7DC: 00000000
	.long 0x3590                                               // 00000005A7E0: 00003590
	.long 0x60311                                              // 00000005A7E4: 00060311
	.long 0x65980                                              // 00000005A7E8: 00065980
	.long 0                                                    // 00000005A7EC: 00000000
	.ascii "@"                                                 // 00000005A7F0: 40
	.byte 0                                                    // 00000005A7F1: 00
	.short 0                                                   // 00000005A7F2: 0000
	.long 0                                                    // 00000005A7F4: 00000000
	.ascii "kJ"                                                // 00000005A7F8: 4A6B
	.short 0                                                   // 00000005A7FA: 0000
	.long 0x60311                                              // 00000005A7FC: 00060311
	.long 0x66ac0                                              // 00000005A800: 00066AC0
	.long 0                                                    // 00000005A804: 00000000
	.ascii "@"                                                 // 00000005A808: 40
	.byte 0                                                    // 00000005A809: 00
	.short 0                                                   // 00000005A80A: 0000
	.long 0                                                    // 00000005A80C: 00000000
	.long 0x5514                                               // 00000005A810: 00005514
	.long 0x60311                                              // 00000005A814: 00060311
	.long 0x672c0                                              // 00000005A818: 000672C0
	.long 0                                                    // 00000005A81C: 00000000
	.ascii "@"                                                 // 00000005A820: 40
	.byte 0                                                    // 00000005A821: 00
	.short 0                                                   // 00000005A822: 0000
	.long 0                                                    // 00000005A824: 00000000
	.long 0x19d6                                               // 00000005A828: 000019D6
	.long 0x70312                                              // 00000005A82C: 00070312
	.long 0x70e00                                              // 00000005A830: 00070E00
	.long 0                                                    // 00000005A834: 00000000
	.ascii "d"                                                 // 00000005A838: 64
	.byte 0                                                    // 00000005A839: 00
	.short 0                                                   // 00000005A83A: 0000
	.long 0                                                    // 00000005A83C: 00000000
	.long 0x2cd7                                               // 00000005A840: 00002CD7
	.long 0x70312                                              // 00000005A844: 00070312
	.long 0x77400                                              // 00000005A848: 00077400
	.long 0                                                    // 00000005A84C: 00000000
	.ascii "\\"                                                // 00000005A850: 5C
	.byte 0x1                                                  // 00000005A851: 01
	.short 0                                                   // 00000005A852: 0000
	.long 0                                                    // 00000005A854: 00000000
	.ascii "M9"                                                // 00000005A858: 394D
	.short 0                                                   // 00000005A85A: 0000
	.long 0x60311                                              // 00000005A85C: 00060311
	.ascii "@]"                                                // 00000005A860: 5D40
	.short 0x6                                                 // 00000005A862: 0006
	.long 0                                                    // 00000005A864: 00000000
	.ascii "@"                                                 // 00000005A868: 40
	.byte 0                                                    // 00000005A869: 00
	.short 0                                                   // 00000005A86A: 0000
	.long 0                                                    // 00000005A86C: 00000000
	.long 0xf8                                                 // 00000005A870: 000000F8
	.long 0x70312                                              // 00000005A874: 00070312
	.long 0x68d00                                              // 00000005A878: 00068D00
	.long 0                                                    // 00000005A87C: 00000000
	.long 0xe8                                                 // 00000005A880: 000000E8
	.long 0                                                    // 00000005A884: 00000000
	.long 0x3dfd                                               // 00000005A888: 00003DFD
	.long 0x60311                                              // 00000005A88C: 00060311
	.long 0x66180                                              // 00000005A890: 00066180
	.long 0                                                    // 00000005A894: 00000000
	.ascii "@"                                                 // 00000005A898: 40
	.byte 0                                                    // 00000005A899: 00
	.short 0                                                   // 00000005A89A: 0000
	.long 0                                                    // 00000005A89C: 00000000
	.ascii "pS"                                                // 00000005A8A0: 5370
	.short 0                                                   // 00000005A8A2: 0000
	.long 0x70312                                              // 00000005A8A4: 00070312
	.long 0x81b00                                              // 00000005A8A8: 00081B00
	.long 0                                                    // 00000005A8AC: 00000000
	.long 0xe0                                                 // 00000005A8B0: 000000E0
	.long 0                                                    // 00000005A8B4: 00000000
	.long 0x21e2                                               // 00000005A8B8: 000021E2
	.long 0x70312                                              // 00000005A8BC: 00070312
	.long 0x73500                                              // 00000005A8C0: 00073500
	.long 0                                                    // 00000005A8C4: 00000000
	.long 0x190                                                // 00000005A8C8: 00000190
	.long 0                                                    // 00000005A8CC: 00000000
	.ascii "+$"                                                // 00000005A8D0: 242B
	.short 0                                                   // 00000005A8D2: 0000
	.long 0x70312                                              // 00000005A8D4: 00070312
	.long 0x74200                                              // 00000005A8D8: 00074200
	.long 0                                                    // 00000005A8DC: 00000000
	.long 0x10c                                                // 00000005A8E0: 0000010C
	.long 0                                                    // 00000005A8E4: 00000000
	.ascii "\"'"                                               // 00000005A8E8: 2722
	.short 0                                                   // 00000005A8EA: 0000
	.long 0x70312                                              // 00000005A8EC: 00070312
	.long 0x75300                                              // 00000005A8F0: 00075300
	.long 0                                                    // 00000005A8F4: 00000000
	.long 0x190                                                // 00000005A8F8: 00000190
	.long 0                                                    // 00000005A8FC: 00000000
	.long 0x29d2                                               // 00000005A900: 000029D2
	.long 0x70312                                              // 00000005A904: 00070312
	.long 0x76200                                              // 00000005A908: 00076200
	.long 0                                                    // 00000005A90C: 00000000
	.ascii "("                                                 // 00000005A910: 28
	.byte 0x1                                                  // 00000005A911: 01
	.short 0                                                   // 00000005A912: 0000
	.long 0                                                    // 00000005A914: 00000000
	.ascii "	1"                                                // 00000005A918: 3109
	.short 0                                                   // 00000005A91A: 0000
	.long 0x70312                                              // 00000005A91C: 00070312
	.long 0x78b00                                              // 00000005A920: 00078B00
	.long 0                                                    // 00000005A924: 00000000
	.long 0x1e8                                                // 00000005A928: 000001E8
	.long 0                                                    // 00000005A92C: 00000000
	.long 0x3992                                               // 00000005A930: 00003992
	.long 0x60311                                              // 00000005A934: 00060311
	.long 0x65d80                                              // 00000005A938: 00065D80
	.long 0                                                    // 00000005A93C: 00000000
	.ascii "@"                                                 // 00000005A940: 40
	.byte 0                                                    // 00000005A941: 00
	.short 0                                                   // 00000005A942: 0000
	.long 0                                                    // 00000005A944: 00000000
	.long 0x39d8                                               // 00000005A948: 000039D8
	.long 0x60311                                              // 00000005A94C: 00060311
	.long 0x65dc0                                              // 00000005A950: 00065DC0
	.long 0                                                    // 00000005A954: 00000000
	.ascii "@"                                                 // 00000005A958: 40
	.byte 0                                                    // 00000005A959: 00
	.short 0                                                   // 00000005A95A: 0000
	.long 0                                                    // 00000005A95C: 00000000
	.long 0x5711                                               // 00000005A960: 00005711
	.long 0x60311                                              // 00000005A964: 00060311
	.long 0x674c0                                              // 00000005A968: 000674C0
	.long 0                                                    // 00000005A96C: 00000000
	.ascii "@"                                                 // 00000005A970: 40
	.byte 0                                                    // 00000005A971: 00
	.short 0                                                   // 00000005A972: 0000
	.long 0                                                    // 00000005A974: 00000000
	.ascii ","                                                 // 00000005A978: 2C
	.byte 0xd                                                  // 00000005A979: 0D
	.short 0                                                   // 00000005A97A: 0000
	.long 0x70312                                              // 00000005A97C: 00070312
	.long 0x6ca00                                              // 00000005A980: 0006CA00
	.long 0                                                    // 00000005A984: 00000000
	.long 0xe8                                                 // 00000005A988: 000000E8
	.long 0                                                    // 00000005A98C: 00000000
	.long 0x1a9e                                               // 00000005A990: 00001A9E
	.long 0x60311                                              // 00000005A994: 00060311
	.long 0x644c0                                              // 00000005A998: 000644C0
	.long 0                                                    // 00000005A99C: 00000000
	.ascii "@"                                                 // 00000005A9A0: 40
	.byte 0                                                    // 00000005A9A1: 00
	.short 0                                                   // 00000005A9A2: 0000
	.long 0                                                    // 00000005A9A4: 00000000
	.ascii "P"                                                 // 00000005A9A8: 50
	.byte 0x1f                                                 // 00000005A9A9: 1F
	.short 0                                                   // 00000005A9AA: 0000
	.long 0x60311                                              // 00000005A9AC: 00060311
	.long 0x64900                                              // 00000005A9B0: 00064900
	.long 0                                                    // 00000005A9B4: 00000000
	.ascii "@"                                                 // 00000005A9B8: 40
	.byte 0                                                    // 00000005A9B9: 00
	.short 0                                                   // 00000005A9BA: 0000
	.long 0                                                    // 00000005A9BC: 00000000
	.ascii "	G"                                                // 00000005A9C0: 4709
	.short 0                                                   // 00000005A9C2: 0000
	.long 0x60311                                              // 00000005A9C4: 00060311
	.ascii "@h"                                                // 00000005A9C8: 6840
	.short 0x6                                                 // 00000005A9CA: 0006
	.long 0                                                    // 00000005A9CC: 00000000
	.ascii "@"                                                 // 00000005A9D0: 40
	.byte 0                                                    // 00000005A9D1: 00
	.short 0                                                   // 00000005A9D2: 0000
	.long 0                                                    // 00000005A9D4: 00000000
	.long 0x4ddf                                               // 00000005A9D8: 00004DDF
	.long 0x60311                                              // 00000005A9DC: 00060311
	.ascii "@m"                                                // 00000005A9E0: 6D40
	.short 0x6                                                 // 00000005A9E2: 0006
	.long 0                                                    // 00000005A9E4: 00000000
	.ascii "@"                                                 // 00000005A9E8: 40
	.byte 0                                                    // 00000005A9E9: 00
	.short 0                                                   // 00000005A9EA: 0000
	.long 0                                                    // 00000005A9EC: 00000000
	.ascii ":"                                                 // 00000005A9F0: 3A
	.byte 0x3                                                  // 00000005A9F1: 03
	.short 0                                                   // 00000005A9F2: 0000
	.long 0x60311                                              // 00000005A9F4: 00060311
	.long 0x63000                                              // 00000005A9F8: 00063000
	.long 0                                                    // 00000005A9FC: 00000000
	.ascii "@"                                                 // 00000005AA00: 40
	.byte 0                                                    // 00000005AA01: 00
	.short 0                                                   // 00000005AA02: 0000
	.long 0                                                    // 00000005AA04: 00000000
	.ascii "U&"                                                // 00000005AA08: 2655
	.short 0                                                   // 00000005AA0A: 0000
	.long 0x60311                                              // 00000005AA0C: 00060311
	.ascii "@N"                                                // 00000005AA10: 4E40
	.short 0x6                                                 // 00000005AA12: 0006
	.long 0                                                    // 00000005AA14: 00000000
	.ascii "@"                                                 // 00000005AA18: 40
	.byte 0                                                    // 00000005AA19: 00
	.short 0                                                   // 00000005AA1A: 0000
	.long 0                                                    // 00000005AA1C: 00000000
	.long 0x2ffa                                               // 00000005AA20: 00002FFA
	.long 0x70312                                              // 00000005AA24: 00070312
	.long 0x78500                                              // 00000005AA28: 00078500
	.long 0                                                    // 00000005AA2C: 00000000
	.ascii "X"                                                 // 00000005AA30: 58
	.byte 0x1                                                  // 00000005AA31: 01
	.short 0                                                   // 00000005AA32: 0000
	.long 0                                                    // 00000005AA34: 00000000
	.long 0x42db                                               // 00000005AA38: 000042DB
	.long 0x70312                                              // 00000005AA3C: 00070312
	.long 0x7d500                                              // 00000005AA40: 0007D500
	.long 0                                                    // 00000005AA44: 00000000
	.long 0xa4                                                 // 00000005AA48: 000000A4
	.long 0                                                    // 00000005AA4C: 00000000
	.ascii "yU"                                                // 00000005AA50: 5579
	.short 0                                                   // 00000005AA52: 0000
	.long 0x70312                                              // 00000005AA54: 00070312
	.long 0x82300                                              // 00000005AA58: 00082300
	.long 0                                                    // 00000005AA5C: 00000000
	.ascii "X"                                                 // 00000005AA60: 58
	.byte 0                                                    // 00000005AA61: 00
	.short 0                                                   // 00000005AA62: 0000
	.long 0                                                    // 00000005AA64: 00000000
	.long 0x111d                                               // 00000005AA68: 0000111D
	.long 0x70312                                              // 00000005AA6C: 00070312
	.long 0x6e000                                              // 00000005AA70: 0006E000
	.long 0                                                    // 00000005AA74: 00000000
	.long 0xd4                                                 // 00000005AA78: 000000D4
	.long 0                                                    // 00000005AA7C: 00000000
	.long 0x189a                                               // 00000005AA80: 0000189A
	.long 0x70312                                              // 00000005AA84: 00070312
	.long 0x70800                                              // 00000005AA88: 00070800
	.long 0                                                    // 00000005AA8C: 00000000
	.long 0x88                                                 // 00000005AA90: 00000088
	.long 0                                                    // 00000005AA94: 00000000
	.long 0x29b1                                               // 00000005AA98: 000029B1
	.long 0x60311                                              // 00000005AA9C: 00060311
	.long 0x650c0                                              // 00000005AAA0: 000650C0
	.long 0                                                    // 00000005AAA4: 00000000
	.ascii "@"                                                 // 00000005AAA8: 40
	.byte 0                                                    // 00000005AAA9: 00
	.short 0                                                   // 00000005AAAA: 0000
	.long 0                                                    // 00000005AAAC: 00000000
	.long 0x4119                                               // 00000005AAB0: 00004119
	.long 0x60311                                              // 00000005AAB4: 00060311
	.long 0x663c0                                              // 00000005AAB8: 000663C0
	.long 0                                                    // 00000005AABC: 00000000
	.ascii "@"                                                 // 00000005AAC0: 40
	.byte 0                                                    // 00000005AAC1: 00
	.short 0                                                   // 00000005AAC2: 0000
	.long 0                                                    // 00000005AAC4: 00000000
	.long 0x55d8                                               // 00000005AAC8: 000055D8
	.long 0x60311                                              // 00000005AACC: 00060311
	.long 0x67380                                              // 00000005AAD0: 00067380
	.long 0                                                    // 00000005AAD4: 00000000
	.ascii "@"                                                 // 00000005AAD8: 40
	.byte 0                                                    // 00000005AAD9: 00
	.short 0                                                   // 00000005AADA: 0000
	.long 0                                                    // 00000005AADC: 00000000
	.ascii "}"                                                 // 00000005AAE0: 7D
	.byte 0x16                                                 // 00000005AAE1: 16
	.short 0                                                   // 00000005AAE2: 0000
	.long 0x70312                                              // 00000005AAE4: 00070312
	.long 0x6fd00                                              // 00000005AAE8: 0006FD00
	.long 0                                                    // 00000005AAEC: 00000000
	.ascii "D"                                                 // 00000005AAF0: 44
	.byte 0x1                                                  // 00000005AAF1: 01
	.short 0                                                   // 00000005AAF2: 0000
	.long 0                                                    // 00000005AAF4: 00000000
	.ascii "1*"                                                // 00000005AAF8: 2A31
	.short 0                                                   // 00000005AAFA: 0000
	.long 0x70312                                              // 00000005AAFC: 00070312
	.long 0x76400                                              // 00000005AB00: 00076400
	.long 0                                                    // 00000005AB04: 00000000
	.ascii "$"                                                 // 00000005AB08: 24
	.byte 0x1                                                  // 00000005AB09: 01
	.short 0                                                   // 00000005AB0A: 0000
	.long 0                                                    // 00000005AB0C: 00000000
	.long 0x338e                                               // 00000005AB10: 0000338E
	.long 0x60311                                              // 00000005AB14: 00060311
	.long 0x65800                                              // 00000005AB18: 00065800
	.long 0                                                    // 00000005AB1C: 00000000
	.ascii "@"                                                 // 00000005AB20: 40
	.byte 0                                                    // 00000005AB21: 00
	.short 0                                                   // 00000005AB22: 0000
	.long 0                                                    // 00000005AB24: 00000000
	.ascii "sH"                                                // 00000005AB28: 4873
	.short 0                                                   // 00000005AB2A: 0000
	.long 0x60311                                              // 00000005AB2C: 00060311
	.ascii "@i"                                                // 00000005AB30: 6940
	.short 0x6                                                 // 00000005AB32: 0006
	.long 0                                                    // 00000005AB34: 00000000
	.ascii "@"                                                 // 00000005AB38: 40
	.byte 0                                                    // 00000005AB39: 00
	.short 0                                                   // 00000005AB3A: 0000
	.long 0                                                    // 00000005AB3C: 00000000
	.long 0x1e                                                 // 00000005AB40: 0000001E
	.long 0x70312                                              // 00000005AB44: 00070312
	.long 0x68800                                              // 00000005AB48: 00068800
	.long 0                                                    // 00000005AB4C: 00000000
	.long 0xf0                                                 // 00000005AB50: 000000F0
	.long 0                                                    // 00000005AB54: 00000000
	.long 0x20bf                                               // 00000005AB58: 000020BF
	.long 0x60311                                              // 00000005AB5C: 00060311
	.long 0x64a00                                              // 00000005AB60: 00064A00
	.long 0                                                    // 00000005AB64: 00000000
	.ascii "@"                                                 // 00000005AB68: 40
	.byte 0                                                    // 00000005AB69: 00
	.short 0                                                   // 00000005AB6A: 0000
	.long 0                                                    // 00000005AB6C: 00000000
	.ascii "<)"                                                // 00000005AB70: 293C
	.short 0                                                   // 00000005AB72: 0000
	.long 0x70312                                              // 00000005AB74: 00070312
	.long 0x75e00                                              // 00000005AB78: 00075E00
	.long 0                                                    // 00000005AB7C: 00000000
	.long 0x1ac                                                // 00000005AB80: 000001AC
	.long 0                                                    // 00000005AB84: 00000000
	.long 0x4c14                                               // 00000005AB88: 00004C14
	.long 0x60311                                              // 00000005AB8C: 00060311
	.long 0x66c00                                              // 00000005AB90: 00066C00
	.long 0                                                    // 00000005AB94: 00000000
	.ascii "@"                                                 // 00000005AB98: 40
	.byte 0                                                    // 00000005AB99: 00
	.short 0                                                   // 00000005AB9A: 0000
	.long 0                                                    // 00000005AB9C: 00000000
	.ascii "."                                                 // 00000005ABA0: 2E
	.byte 0x12                                                 // 00000005ABA1: 12
	.short 0                                                   // 00000005ABA2: 0000
	.long 0x60311                                              // 00000005ABA4: 00060311
	.long 0x63c80                                              // 00000005ABA8: 00063C80
	.long 0                                                    // 00000005ABAC: 00000000
	.ascii "@"                                                 // 00000005ABB0: 40
	.byte 0                                                    // 00000005ABB1: 00
	.short 0                                                   // 00000005ABB2: 0000
	.long 0                                                    // 00000005ABB4: 00000000
	.ascii "4+"                                                // 00000005ABB8: 2B34
	.short 0                                                   // 00000005ABBA: 0000
	.long 0x70312                                              // 00000005ABBC: 00070312
	.long 0x76a00                                              // 00000005ABC0: 00076A00
	.long 0                                                    // 00000005ABC4: 00000000
	.ascii "("                                                 // 00000005ABC8: 28
	.byte 0x1                                                  // 00000005ABC9: 01
	.short 0                                                   // 00000005ABCA: 0000
	.long 0                                                    // 00000005ABCC: 00000000
	.ascii "uT"                                                // 00000005ABD0: 5475
	.short 0                                                   // 00000005ABD2: 0000
	.long 0x70312                                              // 00000005ABD4: 00070312
	.long 0x81f00                                              // 00000005ABD8: 00081F00
	.long 0                                                    // 00000005ABDC: 00000000
	.long 0x8c                                                 // 00000005ABE0: 0000008C
	.long 0                                                    // 00000005ABE4: 00000000
	.long 0x3ac8                                               // 00000005ABE8: 00003AC8
	.long 0x60311                                              // 00000005ABEC: 00060311
	.long 0x65ec0                                              // 00000005ABF0: 00065EC0
	.long 0                                                    // 00000005ABF4: 00000000
	.ascii "@"                                                 // 00000005ABF8: 40
	.byte 0                                                    // 00000005ABF9: 00
	.short 0                                                   // 00000005ABFA: 0000
	.long 0                                                    // 00000005ABFC: 00000000
	.long 0x47be                                               // 00000005AC00: 000047BE
	.long 0x60311                                              // 00000005AC04: 00060311
	.long 0x668c0                                              // 00000005AC08: 000668C0
	.long 0                                                    // 00000005AC0C: 00000000
	.ascii "@"                                                 // 00000005AC10: 40
	.byte 0                                                    // 00000005AC11: 00
	.short 0                                                   // 00000005AC12: 0000
	.long 0                                                    // 00000005AC14: 00000000
	.long 0xae9                                                // 00000005AC18: 00000AE9
	.long 0x60311                                              // 00000005AC1C: 00060311
	.long 0x63680                                              // 00000005AC20: 00063680
	.long 0                                                    // 00000005AC24: 00000000
	.ascii "@"                                                 // 00000005AC28: 40
	.byte 0                                                    // 00000005AC29: 00
	.short 0                                                   // 00000005AC2A: 0000
	.long 0                                                    // 00000005AC2C: 00000000
	.long 0x12c7                                               // 00000005AC30: 000012C7
	.long 0x60311                                              // 00000005AC34: 00060311
	.long 0x63d00                                              // 00000005AC38: 00063D00
	.long 0                                                    // 00000005AC3C: 00000000
	.ascii "@"                                                 // 00000005AC40: 40
	.byte 0                                                    // 00000005AC41: 00
	.short 0                                                   // 00000005AC42: 0000
	.long 0                                                    // 00000005AC44: 00000000
	.long 0x1cdb                                               // 00000005AC48: 00001CDB
	.long 0x70312                                              // 00000005AC4C: 00070312
	.long 0x71d00                                              // 00000005AC50: 00071D00
	.long 0                                                    // 00000005AC54: 00000000
	.ascii "`"                                                 // 00000005AC58: 60
	.byte 0x1                                                  // 00000005AC59: 01
	.short 0                                                   // 00000005AC5A: 0000
	.long 0                                                    // 00000005AC5C: 00000000
	.long 0x4f07                                               // 00000005AC60: 00004F07
	.long 0x70312                                              // 00000005AC64: 00070312
	.long 0x80900                                              // 00000005AC68: 00080900
	.long 0                                                    // 00000005AC6C: 00000000
	.long 0xf8                                                 // 00000005AC70: 000000F8
	.long 0                                                    // 00000005AC74: 00000000
	.ascii "S	"                                                // 00000005AC78: 0953
	.short 0                                                   // 00000005AC7A: 0000
	.long 0x70312                                              // 00000005AC7C: 00070312
	.long 0x6b400                                              // 00000005AC80: 0006B400
	.long 0                                                    // 00000005AC84: 00000000
	.ascii "D"                                                 // 00000005AC88: 44
	.byte 0x1                                                  // 00000005AC89: 01
	.short 0                                                   // 00000005AC8A: 0000
	.long 0                                                    // 00000005AC8C: 00000000
	.ascii " \n"                                               // 00000005AC90: 0A20
	.short 0                                                   // 00000005AC92: 0000
	.long 0x70312                                              // 00000005AC94: 00070312
	.long 0x6b900                                              // 00000005AC98: 0006B900
	.long 0                                                    // 00000005AC9C: 00000000
	.ascii "T"                                                 // 00000005ACA0: 54
	.byte 0x1                                                  // 00000005ACA1: 01
	.short 0                                                   // 00000005ACA2: 0000
	.long 0                                                    // 00000005ACA4: 00000000
	.long 0x138d                                               // 00000005ACA8: 0000138D
	.long 0x70312                                              // 00000005ACAC: 00070312
	.long 0x6ef00                                              // 00000005ACB0: 0006EF00
	.long 0                                                    // 00000005ACB4: 00000000
	.ascii " "                                                 // 00000005ACB8: 20
	.byte 0x1                                                  // 00000005ACB9: 01
	.short 0                                                   // 00000005ACBA: 0000
	.long 0                                                    // 00000005ACBC: 00000000
	.ascii "("                                                 // 00000005ACC0: 28
	.byte 0x15                                                 // 00000005ACC1: 15
	.short 0                                                   // 00000005ACC2: 0000
	.long 0x60311                                              // 00000005ACC4: 00060311
	.long 0x63f00                                              // 00000005ACC8: 00063F00
	.long 0                                                    // 00000005ACCC: 00000000
	.ascii "@"                                                 // 00000005ACD0: 40
	.byte 0                                                    // 00000005ACD1: 00
	.short 0                                                   // 00000005ACD2: 0000
	.long 0                                                    // 00000005ACD4: 00000000
	.ascii "S$"                                                // 00000005ACD8: 2453
	.short 0                                                   // 00000005ACDA: 0000
	.long 0x60311                                              // 00000005ACDC: 00060311
	.long 0x64cc0                                              // 00000005ACE0: 00064CC0
	.long 0                                                    // 00000005ACE4: 00000000
	.ascii "@"                                                 // 00000005ACE8: 40
	.byte 0                                                    // 00000005ACE9: 00
	.short 0                                                   // 00000005ACEA: 0000
	.long 0                                                    // 00000005ACEC: 00000000
	.ascii "L'"                                                // 00000005ACF0: 274C
	.short 0                                                   // 00000005ACF2: 0000
	.long 0x60311                                              // 00000005ACF4: 00060311
	.long 0x64f00                                              // 00000005ACF8: 00064F00
	.long 0                                                    // 00000005ACFC: 00000000
	.ascii "@"                                                 // 00000005AD00: 40
	.byte 0                                                    // 00000005AD01: 00
	.short 0                                                   // 00000005AD02: 0000
	.long 0                                                    // 00000005AD04: 00000000
	.ascii "A="                                                // 00000005AD08: 3D41
	.short 0                                                   // 00000005AD0A: 0000
	.long 0x60311                                              // 00000005AD0C: 00060311
	.long 0x66100                                              // 00000005AD10: 00066100
	.long 0                                                    // 00000005AD14: 00000000
	.ascii "@"                                                 // 00000005AD18: 40
	.byte 0                                                    // 00000005AD19: 00
	.short 0                                                   // 00000005AD1A: 0000
	.long 0                                                    // 00000005AD1C: 00000000
	.long 0x4d7                                                // 00000005AD20: 000004D7
	.long 0x60311                                              // 00000005AD24: 00060311
	.ascii "@1"                                                // 00000005AD28: 3140
	.short 0x6                                                 // 00000005AD2A: 0006
	.long 0                                                    // 00000005AD2C: 00000000
	.ascii "@"                                                 // 00000005AD30: 40
	.byte 0                                                    // 00000005AD31: 00
	.short 0                                                   // 00000005AD32: 0000
	.long 0                                                    // 00000005AD34: 00000000
	.ascii "}"                                                 // 00000005AD38: 7D
	.byte 0x18                                                 // 00000005AD39: 18
	.short 0                                                   // 00000005AD3A: 0000
	.long 0x60311                                              // 00000005AD3C: 00060311
	.ascii "@B"                                                // 00000005AD40: 4240
	.short 0x6                                                 // 00000005AD42: 0006
	.long 0                                                    // 00000005AD44: 00000000
	.ascii "@"                                                 // 00000005AD48: 40
	.byte 0                                                    // 00000005AD49: 00
	.short 0                                                   // 00000005AD4A: 0000
	.long 0                                                    // 00000005AD4C: 00000000
	.long 0x1b13                                               // 00000005AD50: 00001B13
	.long 0x60311                                              // 00000005AD54: 00060311
	.ascii "@E"                                                // 00000005AD58: 4540
	.short 0x6                                                 // 00000005AD5A: 0006
	.long 0                                                    // 00000005AD5C: 00000000
	.ascii "@"                                                 // 00000005AD60: 40
	.byte 0                                                    // 00000005AD61: 00
	.short 0                                                   // 00000005AD62: 0000
	.long 0                                                    // 00000005AD64: 00000000
	.long 0x2680                                               // 00000005AD68: 00002680
	.long 0x70312                                              // 00000005AD6C: 00070312
	.long 0x74f00                                              // 00000005AD70: 00074F00
	.long 0                                                    // 00000005AD74: 00000000
	.long 0x1a0                                                // 00000005AD78: 000001A0
	.long 0                                                    // 00000005AD7C: 00000000
	.long 0x35e4                                               // 00000005AD80: 000035E4
	.long 0x70312                                              // 00000005AD84: 00070312
	.long 0x7a400                                              // 00000005AD88: 0007A400
	.long 0                                                    // 00000005AD8C: 00000000
	.ascii "d"                                                 // 00000005AD90: 64
	.byte 0                                                    // 00000005AD91: 00
	.short 0                                                   // 00000005AD92: 0000
	.long 0                                                    // 00000005AD94: 00000000
	.long 0x409c                                               // 00000005AD98: 0000409C
	.long 0x70312                                              // 00000005AD9C: 00070312
	.long 0x7cd00                                              // 00000005ADA0: 0007CD00
	.long 0                                                    // 00000005ADA4: 00000000
	.long 0xa0                                                 // 00000005ADA8: 000000A0
	.long 0                                                    // 00000005ADAC: 00000000
	.ascii "\""                                                // 00000005ADB0: 22
	.byte 0xf                                                  // 00000005ADB1: 0F
	.short 0                                                   // 00000005ADB2: 0000
	.long 0x60311                                              // 00000005ADB4: 00060311
	.long 0x63a00                                              // 00000005ADB8: 00063A00
	.long 0                                                    // 00000005ADBC: 00000000
	.ascii "@"                                                 // 00000005ADC0: 40
	.byte 0                                                    // 00000005ADC1: 00
	.short 0                                                   // 00000005ADC2: 0000
	.long 0                                                    // 00000005ADC4: 00000000
	.long 0x4bc1                                               // 00000005ADC8: 00004BC1
	.long 0x60311                                              // 00000005ADCC: 00060311
	.long 0x66bc0                                              // 00000005ADD0: 00066BC0
	.long 0                                                    // 00000005ADD4: 00000000
	.ascii "@"                                                 // 00000005ADD8: 40
	.byte 0                                                    // 00000005ADD9: 00
	.short 0                                                   // 00000005ADDA: 0000
	.long 0                                                    // 00000005ADDC: 00000000
	.long 0x549d                                               // 00000005ADE0: 0000549D
	.long 0x60311                                              // 00000005ADE4: 00060311
	.ascii "@r"                                                // 00000005ADE8: 7240
	.short 0x6                                                 // 00000005ADEA: 0006
	.long 0                                                    // 00000005ADEC: 00000000
	.ascii "@"                                                 // 00000005ADF0: 40
	.byte 0                                                    // 00000005ADF1: 00
	.short 0                                                   // 00000005ADF2: 0000
	.long 0                                                    // 00000005ADF4: 00000000
	.long 0x2884                                               // 00000005ADF8: 00002884
	.long 0x70312                                              // 00000005ADFC: 00070312
	.long 0x75a00                                              // 00000005AE00: 00075A00
	.long 0                                                    // 00000005AE04: 00000000
	.long 0x1d8                                                // 00000005AE08: 000001D8
	.long 0                                                    // 00000005AE0C: 00000000
	.long 0x5d7                                                // 00000005AE10: 000005D7
	.long 0x70312                                              // 00000005AE14: 00070312
	.long 0x6a300                                              // 00000005AE18: 0006A300
	.long 0                                                    // 00000005AE1C: 00000000
	.ascii "T"                                                 // 00000005AE20: 54
	.byte 0x1                                                  // 00000005AE21: 01
	.short 0                                                   // 00000005AE22: 0000
	.long 0                                                    // 00000005AE24: 00000000
	.long 0x1214                                               // 00000005AE28: 00001214
	.long 0x70312                                              // 00000005AE2C: 00070312
	.long 0x6e500                                              // 00000005AE30: 0006E500
	.long 0                                                    // 00000005AE34: 00000000
	.ascii "H"                                                 // 00000005AE38: 48
	.byte 0x1                                                  // 00000005AE39: 01
	.short 0                                                   // 00000005AE3A: 0000
	.long 0                                                    // 00000005AE3C: 00000000
	.long 0x1719                                               // 00000005AE40: 00001719
	.long 0x70312                                              // 00000005AE44: 00070312
	.long 0x70100                                              // 00000005AE48: 00070100
	.long 0                                                    // 00000005AE4C: 00000000
	.long 0xd4                                                 // 00000005AE50: 000000D4
	.long 0                                                    // 00000005AE54: 00000000
	.ascii "}"                                                 // 00000005AE58: 7D
	.byte 0x19                                                 // 00000005AE59: 19
	.short 0                                                   // 00000005AE5A: 0000
	.long 0x60311                                              // 00000005AE5C: 00060311
	.long 0x64380                                              // 00000005AE60: 00064380
	.long 0                                                    // 00000005AE64: 00000000
	.ascii "@"                                                 // 00000005AE68: 40
	.byte 0                                                    // 00000005AE69: 00
	.short 0                                                   // 00000005AE6A: 0000
	.long 0                                                    // 00000005AE6C: 00000000
	.long 0x26f0                                               // 00000005AE70: 000026F0
	.long 0x60311                                              // 00000005AE74: 00060311
	.long 0x64ec0                                              // 00000005AE78: 00064EC0
	.long 0                                                    // 00000005AE7C: 00000000
	.ascii "@"                                                 // 00000005AE80: 40
	.byte 0                                                    // 00000005AE81: 00
	.short 0                                                   // 00000005AE82: 0000
	.long 0                                                    // 00000005AE84: 00000000
	.ascii "?,"                                                // 00000005AE88: 2C3F
	.short 0                                                   // 00000005AE8A: 0000
	.long 0x70312                                              // 00000005AE8C: 00070312
	.long 0x77000                                              // 00000005AE90: 00077000
	.long 0                                                    // 00000005AE94: 00000000
	.ascii "8"                                                 // 00000005AE98: 38
	.byte 0x1                                                  // 00000005AE99: 01
	.short 0                                                   // 00000005AE9A: 0000
	.long 0                                                    // 00000005AE9C: 00000000
	.long 0x48be                                               // 00000005AEA0: 000048BE
	.long 0x60311                                              // 00000005AEA4: 00060311
	.long 0x66980                                              // 00000005AEA8: 00066980
	.long 0                                                    // 00000005AEAC: 00000000
	.ascii "@"                                                 // 00000005AEB0: 40
	.byte 0                                                    // 00000005AEB1: 00
	.short 0                                                   // 00000005AEB2: 0000
	.long 0                                                    // 00000005AEB4: 00000000
	.ascii "(%"                                                // 00000005AEB8: 2528
	.short 0                                                   // 00000005AEBA: 0000
	.long 0x70312                                              // 00000005AEBC: 00070312
	.long 0x74700                                              // 00000005AEC0: 00074700
	.long 0                                                    // 00000005AEC4: 00000000
	.long 0x110                                                // 00000005AEC8: 00000110
	.long 0                                                    // 00000005AECC: 00000000
	.ascii "y'"                                                // 00000005AED0: 2779
	.short 0                                                   // 00000005AED2: 0000
	.long 0x70312                                              // 00000005AED4: 00070312
	.long 0x75500                                              // 00000005AED8: 00075500
	.long 0                                                    // 00000005AEDC: 00000000
	.long 0x198                                                // 00000005AEE0: 00000198
	.long 0                                                    // 00000005AEE4: 00000000
	.long 0x55b8                                               // 00000005AEE8: 000055B8
	.long 0x70312                                              // 00000005AEEC: 00070312
	.long 0x82400                                              // 00000005AEF0: 00082400
	.long 0                                                    // 00000005AEF4: 00000000
	.long 0x94                                                 // 00000005AEF8: 00000094
	.long 0                                                    // 00000005AEFC: 00000000
	.long 0xca2                                                // 00000005AF00: 00000CA2
	.long 0x70312                                              // 00000005AF04: 00070312
	.long 0x6c800                                              // 00000005AF08: 0006C800
	.long 0                                                    // 00000005AF0C: 00000000
	.long 0xf0                                                 // 00000005AF10: 000000F0
	.long 0                                                    // 00000005AF14: 00000000
	.ascii ">#"                                                // 00000005AF18: 233E
	.short 0                                                   // 00000005AF1A: 0000
	.long 0x70312                                              // 00000005AF1C: 00070312
	.long 0x73d00                                              // 00000005AF20: 00073D00
	.long 0                                                    // 00000005AF24: 00000000
	.long 0x114                                                // 00000005AF28: 00000114
	.long 0                                                    // 00000005AF2C: 00000000
	.ascii "V("                                                // 00000005AF30: 2856
	.short 0                                                   // 00000005AF32: 0000
	.long 0x60311                                              // 00000005AF34: 00060311
	.long 0x64fc0                                              // 00000005AF38: 00064FC0
	.long 0                                                    // 00000005AF3C: 00000000
	.ascii "@"                                                 // 00000005AF40: 40
	.byte 0                                                    // 00000005AF41: 00
	.short 0                                                   // 00000005AF42: 0000
	.long 0                                                    // 00000005AF44: 00000000
	.long 0x119a                                               // 00000005AF48: 0000119A
	.long 0x60311                                              // 00000005AF4C: 00060311
	.long 0x63c00                                              // 00000005AF50: 00063C00
	.long 0                                                    // 00000005AF54: 00000000
	.ascii "@"                                                 // 00000005AF58: 40
	.byte 0                                                    // 00000005AF59: 00
	.short 0                                                   // 00000005AF5A: 0000
	.long 0                                                    // 00000005AF5C: 00000000
	.ascii "^"                                                 // 00000005AF60: 5E
	.byte 0x19                                                 // 00000005AF61: 19
	.short 0                                                   // 00000005AF62: 0000
	.long 0x70312                                              // 00000005AF64: 00070312
	.long 0x70c00                                              // 00000005AF68: 00070C00
	.long 0                                                    // 00000005AF6C: 00000000
	.ascii "d"                                                 // 00000005AF70: 64
	.byte 0                                                    // 00000005AF71: 00
	.short 0                                                   // 00000005AF72: 0000
	.long 0                                                    // 00000005AF74: 00000000
	.long 0x4be4                                               // 00000005AF78: 00004BE4
	.long 0x70312                                              // 00000005AF7C: 00070312
	.long 0x7fc00                                              // 00000005AF80: 0007FC00
	.long 0                                                    // 00000005AF84: 00000000
	.long 0xe4                                                 // 00000005AF88: 000000E4
	.long 0                                                    // 00000005AF8C: 00000000
	.long 0x16a3                                               // 00000005AF90: 000016A3
	.long 0x60311                                              // 00000005AF94: 00060311
	.ascii "@@"                                                // 00000005AF98: 4040
	.short 0x6                                                 // 00000005AF9A: 0006
	.long 0                                                    // 00000005AF9C: 00000000
	.ascii "@"                                                 // 00000005AFA0: 40
	.byte 0                                                    // 00000005AFA1: 00
	.short 0                                                   // 00000005AFA2: 0000
	.long 0                                                    // 00000005AFA4: 00000000
	.long 0x1bbb                                               // 00000005AFA8: 00001BBB
	.long 0x60311                                              // 00000005AFAC: 00060311
	.long 0x64600                                              // 00000005AFB0: 00064600
	.long 0                                                    // 00000005AFB4: 00000000
	.ascii "@"                                                 // 00000005AFB8: 40
	.byte 0                                                    // 00000005AFB9: 00
	.short 0                                                   // 00000005AFBA: 0000
	.long 0                                                    // 00000005AFBC: 00000000
	.long 0x21b7                                               // 00000005AFC0: 000021B7
	.long 0x60311                                              // 00000005AFC4: 00060311
	.long 0x64ac0                                              // 00000005AFC8: 00064AC0
	.long 0                                                    // 00000005AFCC: 00000000
	.ascii "@"                                                 // 00000005AFD0: 40
	.byte 0                                                    // 00000005AFD1: 00
	.short 0                                                   // 00000005AFD2: 0000
	.long 0                                                    // 00000005AFD4: 00000000
	.long 0x23fb                                               // 00000005AFD8: 000023FB
	.long 0x60311                                              // 00000005AFDC: 00060311
	.long 0x64c80                                              // 00000005AFE0: 00064C80
	.long 0                                                    // 00000005AFE4: 00000000
	.ascii "@"                                                 // 00000005AFE8: 40
	.byte 0                                                    // 00000005AFE9: 00
	.short 0                                                   // 00000005AFEA: 0000
	.long 0                                                    // 00000005AFEC: 00000000
	.long 0x3ebe                                               // 00000005AFF0: 00003EBE
	.long 0x60311                                              // 00000005AFF4: 00060311
	.long 0x66200                                              // 00000005AFF8: 00066200
	.long 0                                                    // 00000005AFFC: 00000000
	.ascii "@"                                                 // 00000005B000: 40
	.byte 0                                                    // 00000005B001: 00
	.short 0                                                   // 00000005B002: 0000
	.long 0                                                    // 00000005B004: 00000000
	.ascii "U"                                                 // 00000005B008: 55
	.byte 0xc                                                  // 00000005B009: 0C
	.short 0                                                   // 00000005B00A: 0000
	.long 0x70312                                              // 00000005B00C: 00070312
	.long 0x6c600                                              // 00000005B010: 0006C600
	.long 0                                                    // 00000005B014: 00000000
	.ascii "h"                                                 // 00000005B018: 68
	.byte 0x1                                                  // 00000005B019: 01
	.short 0                                                   // 00000005B01A: 0000
	.long 0                                                    // 00000005B01C: 00000000
	.long 0x1c18                                               // 00000005B020: 00001C18
	.long 0x70312                                              // 00000005B024: 00070312
	.long 0x71800                                              // 00000005B028: 00071800
	.long 0                                                    // 00000005B02C: 00000000
	.ascii "X"                                                 // 00000005B030: 58
	.byte 0x1                                                  // 00000005B031: 01
	.short 0                                                   // 00000005B032: 0000
	.long 0                                                    // 00000005B034: 00000000
	.long 0x2a86                                               // 00000005B038: 00002A86
	.long 0x70312                                              // 00000005B03C: 00070312
	.long 0x76600                                              // 00000005B040: 00076600
	.long 0                                                    // 00000005B044: 00000000
	.ascii "("                                                 // 00000005B048: 28
	.byte 0x1                                                  // 00000005B049: 01
	.short 0                                                   // 00000005B04A: 0000
	.long 0                                                    // 00000005B04C: 00000000
	.long 0x529b                                               // 00000005B050: 0000529B
	.long 0x60311                                              // 00000005B054: 00060311
	.long 0x670c0                                              // 00000005B058: 000670C0
	.long 0                                                    // 00000005B05C: 00000000
	.ascii "@"                                                 // 00000005B060: 40
	.byte 0                                                    // 00000005B061: 00
	.short 0                                                   // 00000005B062: 0000
	.long 0                                                    // 00000005B064: 00000000
	.long 0x415                                                // 00000005B068: 00000415
	.long 0x70312                                              // 00000005B06C: 00070312
	.long 0x69c00                                              // 00000005B070: 00069C00
	.long 0                                                    // 00000005B074: 00000000
	.ascii "@"                                                 // 00000005B078: 40
	.byte 0x1                                                  // 00000005B079: 01
	.short 0                                                   // 00000005B07A: 0000
	.long 0                                                    // 00000005B07C: 00000000
	.ascii "T"                                                 // 00000005B080: 54
	.byte 0x7                                                  // 00000005B081: 07
	.short 0                                                   // 00000005B082: 0000
	.long 0x70312                                              // 00000005B084: 00070312
	.long 0x6ab00                                              // 00000005B088: 0006AB00
	.long 0                                                    // 00000005B08C: 00000000
	.long 0xf0                                                 // 00000005B090: 000000F0
	.long 0                                                    // 00000005B094: 00000000
	.long 0xb11                                                // 00000005B098: 00000B11
	.long 0x70312                                              // 00000005B09C: 00070312
	.long 0x6bf00                                              // 00000005B0A0: 0006BF00
	.long 0                                                    // 00000005B0A4: 00000000
	.long 0xd4                                                 // 00000005B0A8: 000000D4
	.long 0                                                    // 00000005B0AC: 00000000
	.long 0x19f0                                               // 00000005B0B0: 000019F0
	.long 0x60311                                              // 00000005B0B4: 00060311
	.long 0x64400                                              // 00000005B0B8: 00064400
	.long 0                                                    // 00000005B0BC: 00000000
	.ascii "@"                                                 // 00000005B0C0: 40
	.byte 0                                                    // 00000005B0C1: 00
	.short 0                                                   // 00000005B0C2: 0000
	.long 0                                                    // 00000005B0C4: 00000000
	.long 0x3511                                               // 00000005B0C8: 00003511
	.long 0x70312                                              // 00000005B0CC: 00070312
	.long 0x7a000                                              // 00000005B0D0: 0007A000
	.long 0                                                    // 00000005B0D4: 00000000
	.ascii "`"                                                 // 00000005B0D8: 60
	.byte 0x1                                                  // 00000005B0D9: 01
	.short 0                                                   // 00000005B0DA: 0000
	.long 0                                                    // 00000005B0DC: 00000000
	.long 0x490d                                               // 00000005B0E0: 0000490D
	.long 0x60311                                              // 00000005B0E4: 00060311
	.long 0x669c0                                              // 00000005B0E8: 000669C0
	.long 0                                                    // 00000005B0EC: 00000000
	.ascii "@"                                                 // 00000005B0F0: 40
	.byte 0                                                    // 00000005B0F1: 00
	.short 0                                                   // 00000005B0F2: 0000
	.long 0                                                    // 00000005B0F4: 00000000

	.section	.gnu.hash,#alloc
	.long 0x94                                                 // 00000005B0F8: 00000094
	.long 0x1                                                  // 00000005B0FC: 00000001
	.long 0x80                                                 // 00000005B100: 00000080
	.long 0x1a                                                 // 00000005B104: 0000001A
	.long 0x2                                                  // 00000005B108: 00000002
	.long 0x20000                                              // 00000005B10C: 00020000
	.long 0x82900001                                           // 00000005B110: 82900001
	.long 0x30810081                                           // 00000005B114: 30810081
	.long 0x43f241cc                                           // 00000005B118: 43F241CC
	.long 0x888481b1                                           // 00000005B11C: 888481B1
	.ascii "0"                                                 // 00000005B120: 30
	.byte 0x8                                                  // 00000005B121: 08
	.ascii "D"                                                 // 00000005B122: 44
	.byte 0x12                                                 // 00000005B123: 12
	.long 0x10040d00                                           // 00000005B124: 10040D00
	.long 0x2080100                                            // 00000005B128: 02080100
	.long 0x8300110                                            // 00000005B12C: 08300110
	.long 0x20010084                                           // 00000005B130: 20010084
	.long 0                                                    // 00000005B134: 00000000
	.ascii " "                                                 // 00000005B138: 20
	.byte 0                                                    // 00000005B139: 00
	.short 0x200                                               // 00000005B13A: 0200
	.long 0x8010                                               // 00000005B13C: 00008010
	.long 0x20012010                                           // 00000005B140: 20012010
	.long 0x40100010                                           // 00000005B144: 40100010
	.ascii "!"                                                 // 00000005B148: 21
	.byte 0                                                    // 00000005B149: 00
	.short 0x1018                                              // 00000005B14A: 1018
	.long 0x88802305                                           // 00000005B14C: 88802305
	.ascii " "                                                 // 00000005B150: 20
	.byte 0                                                    // 00000005B151: 00
	.short 0x80                                                // 00000005B152: 0080
	.long 0x18020000                                           // 00000005B154: 18020000
	.long 0x80000                                              // 00000005B158: 00080000
	.long 0xa1000                                              // 00000005B15C: 000A1000
	.ascii "@Q"                                                // 00000005B160: 5140
	.short 0x8000                                              // 00000005B162: 8000
	.ascii "@@"                                                // 00000005B164: 4040
	.short 0xb202                                              // 00000005B166: B202
	.ascii "!"                                                 // 00000005B168: 21
	.byte 0                                                    // 00000005B169: 00
	.short 0x2c00                                              // 00000005B16A: 2C00
	.ascii "\"@"                                               // 00000005B16C: 4022
	.short 0x3                                                 // 00000005B16E: 0003
	.long 0x80000010                                           // 00000005B170: 80000010
	.long 0x6100004                                            // 00000005B174: 06100004
	.long 0x40802000                                           // 00000005B178: 40802000
	.long 0x40000                                              // 00000005B17C: 00040000
	.long 0x21004900                                           // 00000005B180: 21004900
	.long 0x22038000                                           // 00000005B184: 22038000
	.ascii "	 @("                                              // 00000005B188: 28402009
	.long 0x8824006                                            // 00000005B18C: 08824006
	.long 0x31010e0                                            // 00000005B190: 031010E0
	.long 0x80040400                                           // 00000005B194: 80040400
	.long 0x4010702                                            // 00000005B198: 04010702
	.long 0x100800                                             // 00000005B19C: 00100800
	.long 0x40000084                                           // 00000005B1A0: 40000084
	.long 0x205000                                             // 00000005B1A4: 00205000
	.ascii "@"                                                 // 00000005B1A8: 40
	.byte 0x16                                                 // 00000005B1A9: 16
	.short 0x40d                                               // 00000005B1AA: 040D
	.long 0                                                    // 00000005B1AC: 00000000
	.ascii " "                                                 // 00000005B1B0: 20
	.byte 0x8                                                  // 00000005B1B1: 08
	.ascii "L"                                                 // 00000005B1B2: 4C
	.byte 0                                                    // 00000005B1B3: 00
	.ascii "("                                                 // 00000005B1B4: 28
	.byte 0x3                                                  // 00000005B1B5: 03
	.short 0x610                                               // 00000005B1B6: 0610
	.long 0x880000                                             // 00000005B1B8: 00880000
	.long 0x4c00                                               // 00000005B1BC: 00004C00
	.long 0x12002000                                           // 00000005B1C0: 12002000
	.long 0x2000                                               // 00000005B1C4: 00002000
	.ascii "H"                                                 // 00000005B1C8: 48
	.byte 0xb                                                  // 00000005B1C9: 0B
	.ascii "a"                                                 // 00000005B1CA: 61
	.byte 0x88                                                 // 00000005B1CB: 88
	.ascii ")BH"                                               // 00000005B1CC: 484229
	.byte 0x8                                                  // 00000005B1CF: 08
	.long 0x19c02800                                           // 00000005B1D0: 19C02800
	.long 0x1002000                                            // 00000005B1D4: 01002000
	.long 0x4400010                                            // 00000005B1D8: 04400010
	.long 0x61000000                                           // 00000005B1DC: 61000000
	.long 0x2108002                                            // 00000005B1E0: 02108002
	.ascii "	(("                                               // 00000005B1E4: 282809
	.byte 0                                                    // 00000005B1E7: 00
	.long 0x20001111                                           // 00000005B1E8: 20001111
	.long 0x8000081                                            // 00000005B1EC: 08000081
	.long 0x90209000                                           // 00000005B1F0: 90209000
	.long 0x800900                                             // 00000005B1F4: 00800900
	.long 0x10022000                                           // 00000005B1F8: 10022000
	.long 0x10000                                              // 00000005B1FC: 00010000
	.long 0x8008400                                            // 00000005B200: 08008400
	.long 0x260000                                             // 00000005B204: 00260000
	.long 0x450004                                             // 00000005B208: 00450004
	.long 0x10484000                                           // 00000005B20C: 10484000
	.long 0x202808                                             // 00000005B210: 00202808
	.long 0x50c60000                                           // 00000005B214: 50C60000
	.long 0x90000408                                           // 00000005B218: 90000408
	.long 0xa0007000                                           // 00000005B21C: A0007000
	.long 0x400                                                // 00000005B220: 00000400
	.long 0x2400000                                            // 00000005B224: 02400000
	.long 0x82200                                              // 00000005B228: 00082200
	.long 0x8000018                                            // 00000005B22C: 08000018
	.ascii " "                                                 // 00000005B230: 20
	.byte 0                                                    // 00000005B231: 00
	.short 0x82                                                // 00000005B232: 0082
	.long 0x4440c02                                            // 00000005B234: 04440C02
	.long 0x83508000                                           // 00000005B238: 83508000
	.long 0x3100482                                            // 00000005B23C: 03100482
	.long 0x5c4028b0                                           // 00000005B240: 5C4028B0
	.long 0x200080                                             // 00000005B244: 00200080
	.ascii "A"                                                 // 00000005B248: 41
	.byte 0x80                                                 // 00000005B249: 80
	.ascii "B*H "                                              // 00000005B24A: 20482A42
	.short 0x4089                                              // 00000005B24E: 4089
	.long 0x180406                                             // 00000005B250: 00180406
	.long 0x1001a081                                           // 00000005B254: 1001A081
	.long 0x20100002                                           // 00000005B258: 20100002
	.long 0x8001100                                            // 00000005B25C: 08001100
	.long 0x2440402                                            // 00000005B260: 02440402
	.long 0x4242089c                                           // 00000005B264: 4242089C
	.long 0x801100                                             // 00000005B268: 00801100
	.long 0x600000                                             // 00000005B26C: 00600000
	.long 0x200301                                             // 00000005B270: 00200301
	.long 0x10804103                                           // 00000005B274: 10804103
	.long 0x64114100                                           // 00000005B278: 64114100
	.long 0x23108018                                           // 00000005B27C: 23108018
	.long 0x4000100                                            // 00000005B280: 04000100
	.long 0x20a80210                                           // 00000005B284: 20A80210
	.long 0x20102114                                           // 00000005B288: 20102114
	.long 0x38080606                                           // 00000005B28C: 38080606
	.long 0x1000                                               // 00000005B290: 00001000
	.long 0x8400004                                            // 00000005B294: 08400004
	.ascii "@"                                                 // 00000005B298: 40
	.byte 0                                                    // 00000005B299: 00
	.short 0xa402                                              // 00000005B29A: A402
	.long 0x61020580                                           // 00000005B29C: 61020580
	.long 0x80000004                                           // 00000005B2A0: 80000004
	.ascii "!"                                                 // 00000005B2A4: 21
	.byte 0x1                                                  // 00000005B2A5: 01
	.short 0x20c0                                              // 00000005B2A6: 20C0
	.ascii "@"                                                 // 00000005B2A8: 40
	.byte 0x81                                                 // 00000005B2A9: 81
	.short 0x410                                               // 00000005B2AA: 0410
	.long 0x80882                                              // 00000005B2AC: 00080882
	.long 0x50008108                                           // 00000005B2B0: 50008108
	.long 0x80100400                                           // 00000005B2B4: 80100400
	.ascii "@"                                                 // 00000005B2B8: 40
	.byte 0x2                                                  // 00000005B2B9: 02
	.short 0x200                                               // 00000005B2BA: 0200
	.long 0x80002418                                           // 00000005B2BC: 80002418
	.long 0x18248004                                           // 00000005B2C0: 18248004
	.long 0x30028400                                           // 00000005B2C4: 30028400
	.long 0x4200                                               // 00000005B2C8: 00004200
	.long 0x40000011                                           // 00000005B2CC: 40000011
	.long 0x15000800                                           // 00000005B2D0: 15000800
	.ascii "`"                                                 // 00000005B2D4: 60
	.byte 0x84                                                 // 00000005B2D5: 84
	.short 0x100                                               // 00000005B2D6: 0100
	.long 0x2360080                                            // 00000005B2D8: 02360080
	.ascii " "                                                 // 00000005B2DC: 20
	.byte 0                                                    // 00000005B2DD: 00
	.short 0x800                                               // 00000005B2DE: 0800
	.long 0x40000000                                           // 00000005B2E0: 40000000
	.long 0x2408000                                            // 00000005B2E4: 02408000
	.long 0xa000000                                            // 00000005B2E8: 0A000000
	.ascii "` "                                                // 00000005B2EC: 2060
	.short 0x80                                                // 00000005B2EE: 0080
	.long 0x4828804                                            // 00000005B2F0: 04828804
	.ascii "\n"                                                // 00000005B2F4: 0A
	.byte 0x8                                                  // 00000005B2F5: 08
	.short 0x92                                                // 00000005B2F6: 0092
	.ascii "\""                                                // 00000005B2F8: 22
	.byte 0x5                                                  // 00000005B2F9: 05
	.short 0x4                                                 // 00000005B2FA: 0004
	.long 0x40aa401                                            // 00000005B2FC: 040AA401
	.long 0x841b0408                                           // 00000005B300: 841B0408
	.long 0x20a0da0                                            // 00000005B304: 020A0DA0
	.ascii "J"                                                 // 00000005B308: 4A
	.byte 0                                                    // 00000005B309: 00
	.ascii "0"                                                 // 00000005B30A: 30
	.byte 0x8                                                  // 00000005B30B: 08
	.long 0x884a1                                              // 00000005B30C: 000884A1
	.long 0x20224000                                           // 00000005B310: 20224000
	.ascii "$"                                                 // 00000005B314: 24
	.byte 0x88                                                 // 00000005B315: 88
	.short 0x808                                               // 00000005B316: 0808
	.long 0x42004000                                           // 00000005B318: 42004000
	.long 0x4080014                                            // 00000005B31C: 04080014
	.long 0x10400404                                           // 00000005B320: 10400404
	.long 0                                                    // 00000005B324: 00000000
	.long 0x20102004                                           // 00000005B328: 20102004
	.ascii "8\"@"                                              // 00000005B32C: 402238
	.byte 0                                                    // 00000005B32F: 00
	.long 0x10404089                                           // 00000005B330: 10404089
	.long 0x700021a                                            // 00000005B334: 0700021A
	.ascii " A@"                                               // 00000005B338: 404120
	.byte 0x8                                                  // 00000005B33B: 08
	.ascii " @"                                                // 00000005B33C: 4020
	.short 0x3a8                                               // 00000005B33E: 03A8
	.long 0xa01400a1                                           // 00000005B340: A01400A1
	.long 0x8842200                                            // 00000005B344: 08842200
	.long 0x400001                                             // 00000005B348: 00400001
	.long 0x1001000                                            // 00000005B34C: 01001000
	.long 0x4000                                               // 00000005B350: 00004000
	.long 0x4414                                               // 00000005B354: 00004414
	.long 0x12280000                                           // 00000005B358: 12280000
	.ascii "@"                                                 // 00000005B35C: 40
	.byte 0x10                                                 // 00000005B35D: 10
	.ascii "jQ"                                                // 00000005B35E: 516A
	.long 0xa8e1001                                            // 00000005B360: 0A8E1001
	.long 0x38100b14                                           // 00000005B364: 38100B14
	.ascii " L"                                                // 00000005B368: 4C20
	.short 0x4801                                              // 00000005B36A: 4801
	.long 0x7009101                                            // 00000005B36C: 07009101
	.long 0xc2000200                                           // 00000005B370: C2000200
	.long 0x4022000                                            // 00000005B374: 04022000
	.long 0x12000000                                           // 00000005B378: 12000000
	.long 0x84                                                 // 00000005B37C: 00000084
	.long 0x40001808                                           // 00000005B380: 40001808
	.long 0xa080000                                            // 00000005B384: 0A080000
	.long 0x2                                                  // 00000005B388: 00000002
	.long 0x5                                                  // 00000005B38C: 00000005
	.long 0x1060200                                            // 00000005B390: 01060200
	.ascii " !"                                                // 00000005B394: 2120
	.short 0x90                                                // 00000005B396: 0090
	.long 0x4010                                               // 00000005B398: 00004010
	.long 0x104000b1                                           // 00000005B39C: 104000B1
	.long 0x25400500                                           // 00000005B3A0: 25400500
	.long 0x40280080                                           // 00000005B3A4: 40280080
	.ascii "0"                                                 // 00000005B3A8: 30
	.byte 0xb                                                  // 00000005B3A9: 0B
	.short 0x6202                                              // 00000005B3AA: 6202
	.long 0x8300001b                                           // 00000005B3AC: 8300001B
	.long 0x228200                                             // 00000005B3B0: 00228200
	.long 0x2a100                                              // 00000005B3B4: 0002A100
	.long 0x2001400                                            // 00000005B3B8: 02001400
	.long 0x800e000                                            // 00000005B3BC: 0800E000
	.long 0xb1840000                                           // 00000005B3C0: B1840000
	.ascii "@"                                                 // 00000005B3C4: 40
	.byte 0                                                    // 00000005B3C5: 00
	.short 0x200                                               // 00000005B3C6: 0200
	.long 0x9480810                                            // 00000005B3C8: 09480810
	.long 0x1a040800                                           // 00000005B3CC: 1A040800
	.long 0x100                                                // 00000005B3D0: 00000100
	.ascii "A0B"                                               // 00000005B3D4: 423041
	.byte 0                                                    // 00000005B3D7: 00
	.long 0x44000000                                           // 00000005B3D8: 44000000
	.ascii " "                                                 // 00000005B3DC: 20
	.byte 0x10                                                 // 00000005B3DD: 10
	.short 0                                                   // 00000005B3DE: 0000
	.long 0x40081000                                           // 00000005B3E0: 40081000
	.long 0x80000000                                           // 00000005B3E4: 80000000
	.long 0x92810000                                           // 00000005B3E8: 92810000
	.long 0x200                                                // 00000005B3EC: 00000200
	.long 0x90000008                                           // 00000005B3F0: 90000008
	.long 0x890810                                             // 00000005B3F4: 00890810
	.long 0x10000000                                           // 00000005B3F8: 10000000
	.long 0x10000                                              // 00000005B3FC: 00010000
	.long 0x80000100                                           // 00000005B400: 80000100
	.long 0                                                    // 00000005B404: 00000000
	.long 0x80000000                                           // 00000005B408: 80000000
	.ascii "!"                                                 // 00000005B40C: 21
	.byte 0xc                                                  // 00000005B40D: 0C
	.short 0x4000                                              // 00000005B40E: 4000
	.ascii "$"                                                 // 00000005B410: 24
	.byte 0x4                                                  // 00000005B411: 04
	.short 0                                                   // 00000005B412: 0000
	.ascii " "                                                 // 00000005B414: 20
	.byte 0                                                    // 00000005B415: 00
	.short 0x8000                                              // 00000005B416: 8000
	.long 0x4d0802                                             // 00000005B418: 004D0802
	.long 0x98404001                                           // 00000005B41C: 98404001
	.long 0x20010810                                           // 00000005B420: 20010810
	.long 0x4000100                                            // 00000005B424: 04000100
	.long 0x1010c01c                                           // 00000005B428: 1010C01C
	.long 0x10000000                                           // 00000005B42C: 10000000
	.long 0x2280580                                            // 00000005B430: 02280580
	.long 0x48820804                                           // 00000005B434: 48820804
	.long 0x400010                                             // 00000005B438: 00400010
	.long 0x2000000                                            // 00000005B43C: 02000000
	.long 0x18004112                                           // 00000005B440: 18004112
	.long 0x30809004                                           // 00000005B444: 30809004
	.long 0x41010004                                           // 00000005B448: 41010004
	.long 0xb2006800                                           // 00000005B44C: B2006800
	.ascii "D'"                                                // 00000005B450: 2744
	.short 0x201                                               // 00000005B452: 0201
	.ascii "R"                                                 // 00000005B454: 52
	.byte 0                                                    // 00000005B455: 00
	.short 0x4083                                              // 00000005B456: 4083
	.ascii "(L"                                                // 00000005B458: 4C28
	.short 0xac                                                // 00000005B45A: 00AC
	.long 0x202c84                                             // 00000005B45C: 00202C84
	.long 0x1322a000                                           // 00000005B460: 1322A000
	.long 0x82446004                                           // 00000005B464: 82446004
	.long 0x28a35980                                           // 00000005B468: 28A35980
	.long 0x3302e900                                           // 00000005B46C: 3302E900
	.long 0x8080000                                            // 00000005B470: 08080000
	.long 0                                                    // 00000005B474: 00000000
	.long 0x2800                                               // 00000005B478: 00002800
	.long 0x4103                                               // 00000005B47C: 00004103
	.long 0x24100000                                           // 00000005B480: 24100000
	.ascii "@"                                                 // 00000005B484: 40
	.byte 0x2                                                  // 00000005B485: 02
	.short 0                                                   // 00000005B486: 0000
	.ascii " @@"                                               // 00000005B488: 404020
	.byte 0                                                    // 00000005B48B: 00
	.long 0x88040a80                                           // 00000005B48C: 88040A80
	.ascii "@"                                                 // 00000005B490: 40
	.byte 0x90                                                 // 00000005B491: 90
	.short 0                                                   // 00000005B492: 0000
	.long 0x10009d06                                           // 00000005B494: 10009D06
	.long 0x40c0008                                            // 00000005B498: 040C0008
	.long 0x480080                                             // 00000005B49C: 00480080
	.long 0x9080000                                            // 00000005B4A0: 09080000
	.long 0x608000                                             // 00000005B4A4: 00608000
	.ascii "@"                                                 // 00000005B4A8: 40
	.byte 0x1                                                  // 00000005B4A9: 01
	.short 0x4284                                              // 00000005B4AA: 4284
	.long 0x8004                                               // 00000005B4AC: 00008004
	.ascii "	 @"                                               // 00000005B4B0: 402009
	.byte 0                                                    // 00000005B4B3: 00
	.long 0x4800090                                            // 00000005B4B4: 04800090
	.ascii "0"                                                 // 00000005B4B8: 30
	.byte 0                                                    // 00000005B4B9: 00
	.short 0                                                   // 00000005B4BA: 0000
	.long 0x200                                                // 00000005B4BC: 00000200
	.long 0x4001000                                            // 00000005B4C0: 04001000
	.long 0x400200                                             // 00000005B4C4: 00400200
	.long 0x20005                                              // 00000005B4C8: 00020005
	.long 0x480800                                             // 00000005B4CC: 00480800
	.long 0x1400110                                            // 00000005B4D0: 01400110
	.long 0x990                                                // 00000005B4D4: 00000990
	.ascii "B "                                                // 00000005B4D8: 2042
	.short 0                                                   // 00000005B4DA: 0000
	.long 0x100500                                             // 00000005B4DC: 00100500
	.long 0x14000506                                           // 00000005B4E0: 14000506
	.long 0x21100c80                                           // 00000005B4E4: 21100C80
	.long 0x5208500c                                           // 00000005B4E8: 5208500C
	.long 0x8                                                  // 00000005B4EC: 00000008
	.ascii "1Pi"                                               // 00000005B4F0: 695031
	.byte 0x2                                                  // 00000005B4F3: 02
	.long 0x400190                                             // 00000005B4F4: 00400190
	.ascii "@"                                                 // 00000005B4F8: 40
	.byte 0x82                                                 // 00000005B4F9: 82
	.ascii "`"                                                 // 00000005B4FA: 60
	.byte 0                                                    // 00000005B4FB: 00
	.long 0x4000000                                            // 00000005B4FC: 04000000
	.long 0x1003400                                            // 00000005B500: 01003400
	.ascii " "                                                 // 00000005B504: 20
	.byte 0x4                                                  // 00000005B505: 04
	.short 0x1000                                              // 00000005B506: 1000
	.long 0x1                                                  // 00000005B508: 00000001
	.long 0                                                    // 00000005B50C: 00000000
	.long 0x5                                                  // 00000005B510: 00000005
	.ascii "\n"                                                // 00000005B514: 0A
	.byte 0                                                    // 00000005B515: 00
	.short 0                                                   // 00000005B516: 0000
	.long 0xd                                                  // 00000005B518: 0000000D
	.long 0xf                                                  // 00000005B51C: 0000000F
	.long 0x13                                                 // 00000005B520: 00000013
	.long 0x15                                                 // 00000005B524: 00000015
	.long 0x1a                                                 // 00000005B528: 0000001A
	.ascii " "                                                 // 00000005B52C: 20
	.byte 0                                                    // 00000005B52D: 00
	.short 0                                                   // 00000005B52E: 0000
	.ascii "#"                                                 // 00000005B530: 23
	.byte 0                                                    // 00000005B531: 00
	.short 0                                                   // 00000005B532: 0000
	.ascii "&"                                                 // 00000005B534: 26
	.byte 0                                                    // 00000005B535: 00
	.short 0                                                   // 00000005B536: 0000
	.ascii "'"                                                 // 00000005B538: 27
	.byte 0                                                    // 00000005B539: 00
	.short 0                                                   // 00000005B53A: 0000
	.ascii "."                                                 // 00000005B53C: 2E
	.byte 0                                                    // 00000005B53D: 00
	.short 0                                                   // 00000005B53E: 0000
	.ascii "3"                                                 // 00000005B540: 33
	.byte 0                                                    // 00000005B541: 00
	.short 0                                                   // 00000005B542: 0000
	.ascii "8"                                                 // 00000005B544: 38
	.byte 0                                                    // 00000005B545: 00
	.short 0                                                   // 00000005B546: 0000
	.ascii "<"                                                 // 00000005B548: 3C
	.byte 0                                                    // 00000005B549: 00
	.short 0                                                   // 00000005B54A: 0000
	.ascii ">"                                                 // 00000005B54C: 3E
	.byte 0                                                    // 00000005B54D: 00
	.short 0                                                   // 00000005B54E: 0000
	.ascii "@"                                                 // 00000005B550: 40
	.byte 0                                                    // 00000005B551: 00
	.short 0                                                   // 00000005B552: 0000
	.ascii "G"                                                 // 00000005B554: 47
	.byte 0                                                    // 00000005B555: 00
	.short 0                                                   // 00000005B556: 0000
	.ascii "M"                                                 // 00000005B558: 4D
	.byte 0                                                    // 00000005B559: 00
	.short 0                                                   // 00000005B55A: 0000
	.ascii "N"                                                 // 00000005B55C: 4E
	.byte 0                                                    // 00000005B55D: 00
	.short 0                                                   // 00000005B55E: 0000
	.ascii "Q"                                                 // 00000005B560: 51
	.byte 0                                                    // 00000005B561: 00
	.short 0                                                   // 00000005B562: 0000
	.ascii "V"                                                 // 00000005B564: 56
	.byte 0                                                    // 00000005B565: 00
	.short 0                                                   // 00000005B566: 0000
	.ascii "Z"                                                 // 00000005B568: 5A
	.byte 0                                                    // 00000005B569: 00
	.short 0                                                   // 00000005B56A: 0000
	.ascii "_"                                                 // 00000005B56C: 5F
	.byte 0                                                    // 00000005B56D: 00
	.short 0                                                   // 00000005B56E: 0000
	.long 0                                                    // 00000005B570: 00000000
	.ascii "a"                                                 // 00000005B574: 61
	.byte 0                                                    // 00000005B575: 00
	.short 0                                                   // 00000005B576: 0000
	.ascii "h"                                                 // 00000005B578: 68
	.byte 0                                                    // 00000005B579: 00
	.short 0                                                   // 00000005B57A: 0000
	.ascii "k"                                                 // 00000005B57C: 6B
	.byte 0                                                    // 00000005B57D: 00
	.short 0                                                   // 00000005B57E: 0000
	.ascii "q"                                                 // 00000005B580: 71
	.byte 0                                                    // 00000005B581: 00
	.short 0                                                   // 00000005B582: 0000
	.ascii "u"                                                 // 00000005B584: 75
	.byte 0                                                    // 00000005B585: 00
	.short 0                                                   // 00000005B586: 0000
	.ascii "x"                                                 // 00000005B588: 78
	.byte 0                                                    // 00000005B589: 00
	.short 0                                                   // 00000005B58A: 0000
	.long 0x7f                                                 // 00000005B58C: 0000007F
	.long 0x84                                                 // 00000005B590: 00000084
	.long 0x86                                                 // 00000005B594: 00000086
	.long 0                                                    // 00000005B598: 00000000
	.long 0x8a                                                 // 00000005B59C: 0000008A
	.long 0x8f                                                 // 00000005B5A0: 0000008F
	.long 0x95                                                 // 00000005B5A4: 00000095
	.long 0x9a                                                 // 00000005B5A8: 0000009A
	.long 0x9f                                                 // 00000005B5AC: 0000009F
	.long 0xa4                                                 // 00000005B5B0: 000000A4
	.long 0xa7                                                 // 00000005B5B4: 000000A7
	.long 0xab                                                 // 00000005B5B8: 000000AB
	.long 0xaf                                                 // 00000005B5BC: 000000AF
	.long 0xb2                                                 // 00000005B5C0: 000000B2
	.long 0xb5                                                 // 00000005B5C4: 000000B5
	.long 0xb9                                                 // 00000005B5C8: 000000B9
	.long 0xbe                                                 // 00000005B5CC: 000000BE
	.long 0xc1                                                 // 00000005B5D0: 000000C1
	.long 0xc3                                                 // 00000005B5D4: 000000C3
	.long 0xc6                                                 // 00000005B5D8: 000000C6
	.long 0xcc                                                 // 00000005B5DC: 000000CC
	.long 0xd2                                                 // 00000005B5E0: 000000D2
	.long 0xd3                                                 // 00000005B5E4: 000000D3
	.long 0xd6                                                 // 00000005B5E8: 000000D6
	.long 0xdb                                                 // 00000005B5EC: 000000DB
	.long 0xe1                                                 // 00000005B5F0: 000000E1
	.long 0xe5                                                 // 00000005B5F4: 000000E5
	.long 0xe8                                                 // 00000005B5F8: 000000E8
	.long 0xeb                                                 // 00000005B5FC: 000000EB
	.long 0xee                                                 // 00000005B600: 000000EE
	.long 0xf4                                                 // 00000005B604: 000000F4
	.long 0xfa                                                 // 00000005B608: 000000FA
	.long 0x100                                                // 00000005B60C: 00000100
	.long 0x105                                                // 00000005B610: 00000105
	.ascii "	"                                                 // 00000005B614: 09
	.byte 0x1                                                  // 00000005B615: 01
	.short 0                                                   // 00000005B616: 0000
	.long 0x10e                                                // 00000005B618: 0000010E
	.long 0x113                                                // 00000005B61C: 00000113
	.long 0x11a                                                // 00000005B620: 0000011A
	.long 0x11d                                                // 00000005B624: 0000011D
	.ascii "$"                                                 // 00000005B628: 24
	.byte 0x1                                                  // 00000005B629: 01
	.short 0                                                   // 00000005B62A: 0000
	.ascii "+"                                                 // 00000005B62C: 2B
	.byte 0x1                                                  // 00000005B62D: 01
	.short 0                                                   // 00000005B62E: 0000
	.ascii "."                                                 // 00000005B630: 2E
	.byte 0x1                                                  // 00000005B631: 01
	.short 0                                                   // 00000005B632: 0000
	.ascii "0"                                                 // 00000005B634: 30
	.byte 0x1                                                  // 00000005B635: 01
	.short 0                                                   // 00000005B636: 0000
	.ascii "3"                                                 // 00000005B638: 33
	.byte 0x1                                                  // 00000005B639: 01
	.short 0                                                   // 00000005B63A: 0000
	.ascii "9"                                                 // 00000005B63C: 39
	.byte 0x1                                                  // 00000005B63D: 01
	.short 0                                                   // 00000005B63E: 0000
	.ascii "<"                                                 // 00000005B640: 3C
	.byte 0x1                                                  // 00000005B641: 01
	.short 0                                                   // 00000005B642: 0000
	.ascii "?"                                                 // 00000005B644: 3F
	.byte 0x1                                                  // 00000005B645: 01
	.short 0                                                   // 00000005B646: 0000
	.ascii "B"                                                 // 00000005B648: 42
	.byte 0x1                                                  // 00000005B649: 01
	.short 0                                                   // 00000005B64A: 0000
	.ascii "D"                                                 // 00000005B64C: 44
	.byte 0x1                                                  // 00000005B64D: 01
	.short 0                                                   // 00000005B64E: 0000
	.ascii "I"                                                 // 00000005B650: 49
	.byte 0x1                                                  // 00000005B651: 01
	.short 0                                                   // 00000005B652: 0000
	.ascii "P"                                                 // 00000005B654: 50
	.byte 0x1                                                  // 00000005B655: 01
	.short 0                                                   // 00000005B656: 0000
	.ascii "S"                                                 // 00000005B658: 53
	.byte 0x1                                                  // 00000005B659: 01
	.short 0                                                   // 00000005B65A: 0000
	.ascii "W"                                                 // 00000005B65C: 57
	.byte 0x1                                                  // 00000005B65D: 01
	.short 0                                                   // 00000005B65E: 0000
	.ascii "X"                                                 // 00000005B660: 58
	.byte 0x1                                                  // 00000005B661: 01
	.short 0                                                   // 00000005B662: 0000
	.ascii "_"                                                 // 00000005B664: 5F
	.byte 0x1                                                  // 00000005B665: 01
	.short 0                                                   // 00000005B666: 0000
	.ascii "f"                                                 // 00000005B668: 66
	.byte 0x1                                                  // 00000005B669: 01
	.short 0                                                   // 00000005B66A: 0000
	.ascii "m"                                                 // 00000005B66C: 6D
	.byte 0x1                                                  // 00000005B66D: 01
	.short 0                                                   // 00000005B66E: 0000
	.ascii "n"                                                 // 00000005B670: 6E
	.byte 0x1                                                  // 00000005B671: 01
	.short 0                                                   // 00000005B672: 0000
	.ascii "s"                                                 // 00000005B674: 73
	.byte 0x1                                                  // 00000005B675: 01
	.short 0                                                   // 00000005B676: 0000
	.ascii "w"                                                 // 00000005B678: 77
	.byte 0x1                                                  // 00000005B679: 01
	.short 0                                                   // 00000005B67A: 0000
	.ascii "y"                                                 // 00000005B67C: 79
	.byte 0x1                                                  // 00000005B67D: 01
	.short 0                                                   // 00000005B67E: 0000
	.ascii "|"                                                 // 00000005B680: 7C
	.byte 0x1                                                  // 00000005B681: 01
	.short 0                                                   // 00000005B682: 0000
	.long 0x182                                                // 00000005B684: 00000182
	.long 0x188                                                // 00000005B688: 00000188
	.long 0x18e                                                // 00000005B68C: 0000018E
	.long 0x192                                                // 00000005B690: 00000192
	.long 0x194                                                // 00000005B694: 00000194
	.long 0x197                                                // 00000005B698: 00000197
	.long 0x19c                                                // 00000005B69C: 0000019C
	.long 0x1a1                                                // 00000005B6A0: 000001A1
	.long 0x1a6                                                // 00000005B6A4: 000001A6
	.long 0x1a9                                                // 00000005B6A8: 000001A9
	.long 0x1ac                                                // 00000005B6AC: 000001AC
	.long 0x1af                                                // 00000005B6B0: 000001AF
	.long 0x1b3                                                // 00000005B6B4: 000001B3
	.long 0                                                    // 00000005B6B8: 00000000
	.long 0x1b7                                                // 00000005B6BC: 000001B7
	.long 0x1bb                                                // 00000005B6C0: 000001BB
	.long 0x1bf                                                // 00000005B6C4: 000001BF
	.long 0x1c3                                                // 00000005B6C8: 000001C3
	.long 0x1c7                                                // 00000005B6CC: 000001C7
	.long 0x1c8                                                // 00000005B6D0: 000001C8
	.long 0x1d0                                                // 00000005B6D4: 000001D0
	.long 0x1d2                                                // 00000005B6D8: 000001D2
	.long 0x1d3                                                // 00000005B6DC: 000001D3
	.long 0x1da                                                // 00000005B6E0: 000001DA
	.long 0x1dd                                                // 00000005B6E4: 000001DD
	.long 0x1e0                                                // 00000005B6E8: 000001E0
	.long 0x1e1                                                // 00000005B6EC: 000001E1
	.long 0x1e5                                                // 00000005B6F0: 000001E5
	.long 0x1e9                                                // 00000005B6F4: 000001E9
	.long 0x1ed                                                // 00000005B6F8: 000001ED
	.long 0x1f1                                                // 00000005B6FC: 000001F1
	.long 0x1f5                                                // 00000005B700: 000001F5
	.long 0x1f8                                                // 00000005B704: 000001F8
	.long 0x1fb                                                // 00000005B708: 000001FB
	.long 0x203                                                // 00000005B70C: 00000203
	.long 0x208                                                // 00000005B710: 00000208
	.long 0x20d                                                // 00000005B714: 0000020D
	.long 0x212                                                // 00000005B718: 00000212
	.long 0x216                                                // 00000005B71C: 00000216
	.long 0x21a                                                // 00000005B720: 0000021A
	.long 0x21d                                                // 00000005B724: 0000021D
	.long 0x21f                                                // 00000005B728: 0000021F
	.ascii "#"                                                 // 00000005B72C: 23
	.byte 0x2                                                  // 00000005B72D: 02
	.short 0                                                   // 00000005B72E: 0000
	.ascii "*"                                                 // 00000005B730: 2A
	.byte 0x2                                                  // 00000005B731: 02
	.short 0                                                   // 00000005B732: 0000
	.ascii "0"                                                 // 00000005B734: 30
	.byte 0x2                                                  // 00000005B735: 02
	.short 0                                                   // 00000005B736: 0000
	.ascii "3"                                                 // 00000005B738: 33
	.byte 0x2                                                  // 00000005B739: 02
	.short 0                                                   // 00000005B73A: 0000
	.ascii "4"                                                 // 00000005B73C: 34
	.byte 0x2                                                  // 00000005B73D: 02
	.short 0                                                   // 00000005B73E: 0000
	.ascii ";"                                                 // 00000005B740: 3B
	.byte 0x2                                                  // 00000005B741: 02
	.short 0                                                   // 00000005B742: 0000
	.ascii ">"                                                 // 00000005B744: 3E
	.byte 0x2                                                  // 00000005B745: 02
	.short 0                                                   // 00000005B746: 0000
	.ascii "A"                                                 // 00000005B748: 41
	.byte 0x2                                                  // 00000005B749: 02
	.short 0                                                   // 00000005B74A: 0000
	.ascii "D"                                                 // 00000005B74C: 44
	.byte 0x2                                                  // 00000005B74D: 02
	.short 0                                                   // 00000005B74E: 0000
	.ascii "I"                                                 // 00000005B750: 49
	.byte 0x2                                                  // 00000005B751: 02
	.short 0                                                   // 00000005B752: 0000
	.ascii "M"                                                 // 00000005B754: 4D
	.byte 0x2                                                  // 00000005B755: 02
	.short 0                                                   // 00000005B756: 0000
	.long 0x9f1791c                                            // 00000005B758: 09F1791C
	.long 0xf44dace8                                           // 00000005B75C: F44DACE8
	.long 0x2c28b8c4                                           // 00000005B760: 2C28B8C4
	.ascii "=["                                                // 00000005B764: 5B3D
	.short 0x30fe                                              // 00000005B766: 30FE
	.long 0x9cf53c9a                                           // 00000005B768: 9CF53C9A
	.long 0x67a1b58a                                           // 00000005B76C: 67A1B58A
	.long 0xc79eafba                                           // 00000005B770: C79EAFBA
	.long 0xac14afda                                           // 00000005B774: AC14AFDA
	.long 0x55285f97                                           // 00000005B778: 55285F97
	.long 0x96241002                                           // 00000005B77C: 96241002
	.ascii "\""                                                // 00000005B780: 22
	.byte 0xc6                                                 // 00000005B781: C6
	.short 0x57c4                                              // 00000005B782: 57C4
	.long 0x65906aeb                                           // 00000005B784: 65906AEB
	.long 0x487f0dfc                                           // 00000005B788: 487F0DFC
	.long 0xcf04089                                            // 00000005B78C: 0CF04089
	.long 0x787c2098                                           // 00000005B790: 787C2098
	.long 0xdac0f298                                           // 00000005B794: DAC0F298
	.long 0x897679c0                                           // 00000005B798: 897679C0
	.long 0x99dd15f9                                           // 00000005B79C: 99DD15F9
	.long 0x80b42faa                                           // 00000005B7A0: 80B42FAA
	.long 0xc5f26af7                                           // 00000005B7A4: C5F26AF7
	.ascii "&"                                                 // 00000005B7A8: 26
	.byte 0x9c                                                 // 00000005B7A9: 9C
	.ascii "	"                                                 // 00000005B7AA: 09
	.byte 0xca                                                 // 00000005B7AB: CA
	.long 0x683b8512                                           // 00000005B7AC: 683B8512
	.ascii "."                                                 // 00000005B7B0: 2E
	.byte 0xd0                                                 // 00000005B7B1: D0
	.short 0xcdf0                                              // 00000005B7B2: CDF0
	.ascii "N-"                                                // 00000005B7B4: 2D4E
	.short 0xfffe                                              // 00000005B7B6: FFFE
	.ascii ";"                                                 // 00000005B7B8: 3B
	.byte 0x6                                                  // 00000005B7B9: 06
	.ascii "f&("                                               // 00000005B7BA: 282666
	.byte 0xd3                                                 // 00000005B7BD: D3
	.short 0x43a5                                              // 00000005B7BE: 43A5
	.ascii "H"                                                 // 00000005B7C0: 48
	.byte 0xb9                                                 // 00000005B7C1: B9
	.ascii "L"                                                 // 00000005B7C2: 4C
	.byte 0xec                                                 // 00000005B7C3: EC
	.long 0x3b0360a0                                           // 00000005B7C4: 3B0360A0
	.ascii "|("                                                // 00000005B7C8: 287C
	.short 0x540e                                              // 00000005B7CA: 540E
	.long 0xade57a18                                           // 00000005B7CC: ADE57A18
	.ascii "aV,"                                               // 00000005B7D0: 2C5661
	.byte 0x9b                                                 // 00000005B7D3: 9B
	.ascii "Xy"                                                // 00000005B7D4: 7958
	.short 0x88ee                                              // 00000005B7D6: 88EE
	.long 0x5c089718                                           // 00000005B7D8: 5C089718
	.ascii "!"                                                 // 00000005B7DC: 21
	.byte 0x4                                                  // 00000005B7DD: 04
	.ascii "z"                                                 // 00000005B7DE: 7A
	.byte 0                                                    // 00000005B7DF: 00
	.long 0x80940cf6                                           // 00000005B7E0: 80940CF6
	.long 0x9ea394b6                                           // 00000005B7E4: 9EA394B6
	.long 0xf532e8af                                           // 00000005B7E8: F532E8AF
	.ascii "s"                                                 // 00000005B7EC: 73
	.byte 0xd7                                                 // 00000005B7ED: D7
	.ascii "/"                                                 // 00000005B7EE: 2F
	.byte 0x91                                                 // 00000005B7EF: 91
	.long 0x4eb2cfd4                                           // 00000005B7F0: 4EB2CFD4
	.ascii "h"                                                 // 00000005B7F4: 68
	.byte 0xd5                                                 // 00000005B7F5: D5
	.short 0x3cd4                                              // 00000005B7F6: 3CD4
	.long 0xcf0a50a4                                           // 00000005B7F8: CF0A50A4
	.ascii "t"                                                 // 00000005B7FC: 74
	.byte 0xcd                                                 // 00000005B7FD: CD
	.short 0x21ee                                              // 00000005B7FE: 21EE
	.long 0xf4807b08                                           // 00000005B800: F4807B08
	.ascii "@"                                                 // 00000005B804: 40
	.byte 0x11                                                 // 00000005B805: 11
	.ascii "<"                                                 // 00000005B806: 3C
	.byte 0x1f                                                 // 00000005B807: 1F
	.long 0x2815e89d                                           // 00000005B808: 2815E89D
	.ascii ","                                                 // 00000005B80C: 2C
	.byte 0xe2                                                 // 00000005B80D: E2
	.short 0x7381                                              // 00000005B80E: 7381
	.long 0x215b71a4                                           // 00000005B810: 215B71A4
	.long 0xc86007f0                                           // 00000005B814: C86007F0
	.ascii "X"                                                 // 00000005B818: 58
	.byte 0x80                                                 // 00000005B819: 80
	.ascii "S"                                                 // 00000005B81A: 53
	.byte 0x82                                                 // 00000005B81B: 82
	.long 0x38b0faad                                           // 00000005B81C: 38B0FAAD
	.long 0x8d558ad6                                           // 00000005B820: 8D558AD6
	.ascii "b"                                                 // 00000005B824: 62
	.byte 0x8c                                                 // 00000005B825: 8C
	.ascii "L"                                                 // 00000005B826: 4C
	.byte 0xef                                                 // 00000005B827: EF
	.ascii "6"                                                 // 00000005B828: 36
	.byte 0x6                                                  // 00000005B829: 06
	.ascii "f"                                                 // 00000005B82A: 66
	.byte 0xa5                                                 // 00000005B82B: A5
	.long 0x7ac78b9e                                           // 00000005B82C: 7AC78B9E
	.ascii "O0"                                                // 00000005B830: 304F
	.short 0xbfb3                                              // 00000005B832: BFB3
	.long 0xca9b51f6                                           // 00000005B834: CA9B51F6
	.ascii "f"                                                 // 00000005B838: 66
	.byte 0xdf                                                 // 00000005B839: DF
	.short 0x10a6                                              // 00000005B83A: 10A6
	.long 0xd92afc92                                           // 00000005B83C: D92AFC92
	.long 0x512b6baf                                           // 00000005B840: 512B6BAF
	.long 0x35b1279c                                           // 00000005B844: 35B1279C
	.long 0x7f1fb7c9                                           // 00000005B848: 7F1FB7C9
	.long 0x12523d84                                           // 00000005B84C: 12523D84
	.long 0x4e7742b1                                           // 00000005B850: 4E7742B1
	.long 0xcf33afea                                           // 00000005B854: CF33AFEA
	.long 0x99d0fbda                                           // 00000005B858: 99D0FBDA
	.long 0xe580d996                                           // 00000005B85C: E580D996
	.long 0x433c58b6                                           // 00000005B860: 433C58B6
	.ascii "B"                                                 // 00000005B864: 42
	.byte 0x8f                                                 // 00000005B865: 8F
	.short 0x5ff1                                              // 00000005B866: 5FF1
	.long 0xf1a6990e                                           // 00000005B868: F1A6990E
	.ascii "SE"                                                // 00000005B86C: 4553
	.short 0x8cb5                                              // 00000005B86E: 8CB5
	.ascii "j"                                                 // 00000005B870: 6A
	.byte 0xb7                                                 // 00000005B871: B7
	.ascii "@"                                                 // 00000005B872: 40
	.byte 0xc0                                                 // 00000005B873: C0
	.ascii "j"                                                 // 00000005B874: 6A
	.byte 0x1e                                                 // 00000005B875: 1E
	.short 0xa0b0                                              // 00000005B876: A0B0
	.ascii "v"                                                 // 00000005B878: 76
	.byte 0xab                                                 // 00000005B879: AB
	.short 0x8402                                              // 00000005B87A: 8402
	.ascii "^"                                                 // 00000005B87C: 5E
	.byte 0x17                                                 // 00000005B87D: 17
	.ascii "Ms"                                                // 00000005B87E: 734D
	.long 0xf039d2d6                                           // 00000005B880: F039D2D6
	.ascii "?:"                                                // 00000005B884: 3A3F
	.short 0x798b                                              // 00000005B886: 798B
	.long 0x4fab6215                                           // 00000005B888: 4FAB6215
	.long 0x48f7f2d0                                           // 00000005B88C: 48F7F2D0
	.long 0x9f0de9c4                                           // 00000005B890: 9F0DE9C4
	.long 0xee0af5ad                                           // 00000005B894: EE0AF5AD
	.long 0x9dffeae2                                           // 00000005B898: 9DFFEAE2
	.long 0xd1fca1fe                                           // 00000005B89C: D1FCA1FE
	.ascii ">."                                                // 00000005B8A0: 2E3E
	.short 0x3a98                                              // 00000005B8A2: 3A98
	.ascii "zC"                                                // 00000005B8A4: 437A
	.short 0x100e                                              // 00000005B8A6: 100E
	.long 0xfcf01c0f                                           // 00000005B8A8: FCF01C0F
	.long 0x6e9d52ea                                           // 00000005B8AC: 6E9D52EA
	.ascii "^"                                                 // 00000005B8B0: 5E
	.byte 0xe7                                                 // 00000005B8B1: E7
	.ascii "AUR\n"                                             // 00000005B8B2: 0A525541
	.short 0xc08d                                              // 00000005B8B6: C08D
	.ascii "'"                                                 // 00000005B8B8: 27
	.byte 0xad                                                 // 00000005B8B9: AD
	.short 0xccbf                                              // 00000005B8BA: CCBF
	.long 0x2c6f3ba8                                           // 00000005B8BC: 2C6F3BA8
	.ascii "l"                                                 // 00000005B8C0: 6C
	.byte 0xbc                                                 // 00000005B8C1: BC
	.short 0x8805                                              // 00000005B8C2: 8805
	.long 0x132440dc                                           // 00000005B8C4: 132440DC
	.long 0xc0c6e300                                           // 00000005B8C8: C0C6E300
	.long 0x51c111c1                                           // 00000005B8CC: 51C111C1
	.long 0x4980ae90                                           // 00000005B8D0: 4980AE90
	.long 0x38983f19                                           // 00000005B8D4: 38983F19
	.long 0xd545a7da                                           // 00000005B8D8: D545A7DA
	.long 0xd614719a                                           // 00000005B8DC: D614719A
	.long 0x4de77aaa                                           // 00000005B8E0: 4DE77AAA
	.long 0x7d20c2fe                                           // 00000005B8E4: 7D20C2FE
	.long 0x672840ea                                           // 00000005B8E8: 672840EA
	.ascii "j"                                                 // 00000005B8EC: 6A
	.byte 0xc7                                                 // 00000005B8ED: C7
	.ascii "P"                                                 // 00000005B8EE: 50
	.byte 0xa1                                                 // 00000005B8EF: A1
	.long 0xe24f1b17                                           // 00000005B8F0: E24F1B17
	.ascii "H"                                                 // 00000005B8F4: 48
	.byte 0x1a                                                 // 00000005B8F5: 1A
	.short 0xc202                                              // 00000005B8F6: C202
	.long 0xa096ea94                                           // 00000005B8F8: A096EA94
	.ascii ")"                                                 // 00000005B8FC: 29
	.byte 0x1b                                                 // 00000005B8FD: 1B
	.ascii "y"                                                 // 00000005B8FE: 79
	.byte 0xe7                                                 // 00000005B8FF: E7
	.long 0xd5dba6ec                                           // 00000005B900: D5DBA6EC
	.long 0xbbc79184                                           // 00000005B904: BBC79184
	.ascii ","                                                 // 00000005B908: 2C
	.byte 0xf                                                  // 00000005B909: 0F
	.ascii "$dT0"                                              // 00000005B90A: 30546424
	.short 0x76bb                                              // 00000005B90E: 76BB
	.ascii "`"                                                 // 00000005B910: 60
	.byte 0x1c                                                 // 00000005B911: 1C
	.ascii "I"                                                 // 00000005B912: 49
	.byte 0xf3                                                 // 00000005B913: F3
	.ascii "qS	&"                                              // 00000005B914: 26095371
	.long 0x266b1fba                                           // 00000005B918: 266B1FBA
	.ascii "JJ\\S^s"                                           // 00000005B91C: 535C4A4A 735E
	.short 0x7c88                                              // 00000005B922: 7C88
	.long 0x7540ea17                                           // 00000005B924: 7540EA17
	.long 0xed3d161a                                           // 00000005B928: ED3D161A
	.long 0xbf8a23ca                                           // 00000005B92C: BF8A23CA
	.ascii "/"                                                 // 00000005B930: 2F
	.byte 0xbd                                                 // 00000005B931: BD
	.short 0x89f2                                              // 00000005B932: 89F2
	.ascii "8S"                                                // 00000005B934: 5338
	.short 0x79a6                                              // 00000005B936: 79A6
	.long 0x343921d0                                           // 00000005B938: 343921D0
	.ascii "H"                                                 // 00000005B93C: 48
	.byte 0x8b                                                 // 00000005B93D: 8B
	.short 0xf01a                                              // 00000005B93E: F01A
	.long 0x90f15508                                           // 00000005B940: 90F15508
	.long 0x51ff4c04                                           // 00000005B944: 51FF4C04
	.long 0xda61ab08                                           // 00000005B948: DA61AB08
	.long 0x60a880a5                                           // 00000005B94C: 60A880A5
	.long 0x846a5b8c                                           // 00000005B950: 846A5B8C
	.long 0x62b934f4                                           // 00000005B954: 62B934F4
	.long 0x111dbda8                                           // 00000005B958: 111DBDA8
	.long 0xad8646c0                                           // 00000005B95C: AD8646C0
	.long 0x288affe5                                           // 00000005B960: 288AFFE5
	.long 0xe11cf18e                                           // 00000005B964: E11CF18E
	.long 0x41a3e50b                                           // 00000005B968: 41A3E50B
	.long 0xcceb06e2                                           // 00000005B96C: CCEB06E2
	.ascii "B"                                                 // 00000005B970: 42
	.byte 0x91                                                 // 00000005B971: 91
	.ascii "V"                                                 // 00000005B972: 56
	.byte 0xe9                                                 // 00000005B973: E9
	.long 0xd7f05a8a                                           // 00000005B974: D7F05A8A
	.ascii "3j"                                                // 00000005B978: 6A33
	.short 0x385                                               // 00000005B97A: 0385
	.long 0x31aae2f8                                           // 00000005B97C: 31AAE2F8
	.long 0xdebd4ce4                                           // 00000005B980: DEBD4CE4
	.long 0x36f0a5ec                                           // 00000005B984: 36F0A5EC
	.ascii "PP"                                                // 00000005B988: 5050
	.short 0xaedb                                              // 00000005B98A: AEDB
	.long 0xa3230fd1                                           // 00000005B98C: A3230FD1
	.ascii "v(e"                                               // 00000005B990: 652876
	.byte 0xc6                                                 // 00000005B993: C6
	.long 0xcbe820ea                                           // 00000005B994: CBE820EA
	.long 0xcddd6d1a                                           // 00000005B998: CDDD6D1A
	.long 0xd93f9af2                                           // 00000005B99C: D93F9AF2
	.long 0x10a119ce                                           // 00000005B9A0: 10A119CE
	.long 0x5b24069b                                           // 00000005B9A4: 5B24069B
	.ascii "n"                                                 // 00000005B9A8: 6E
	.byte 0xd5                                                 // 00000005B9A9: D5
	.short 0xc78e                                              // 00000005B9AA: C78E
	.long 0x755891fa                                           // 00000005B9AC: 755891FA
	.long 0x8a5f7a82                                           // 00000005B9B0: 8A5F7A82
	.ascii "J"                                                 // 00000005B9B4: 4A
	.byte 0xcf                                                 // 00000005B9B5: CF
	.short 0xc5d4                                              // 00000005B9B6: C5D4
	.ascii "[F"                                                // 00000005B9B8: 465B
	.short 0x2ccb                                              // 00000005B9BA: 2CCB
	.long 0x8baf72c0                                           // 00000005B9BC: 8BAF72C0
	.ascii "<zY\n"                                             // 00000005B9C0: 0A597A3C
	.long 0x91db21c4                                           // 00000005B9C4: 91DB21C4
	.long 0xf42f66b8                                           // 00000005B9C8: F42F66B8
	.ascii "e"                                                 // 00000005B9CC: 65
	.byte 0xff                                                 // 00000005B9CD: FF
	.short 0x3ba                                               // 00000005B9CE: 03BA
	.ascii "x"                                                 // 00000005B9D0: 78
	.byte 0x5                                                  // 00000005B9D1: 05
	.short 0xd2bb                                              // 00000005B9D2: D2BB
	.ascii "8"                                                 // 00000005B9D4: 38
	.byte 0xf6                                                 // 00000005B9D5: F6
	.ascii "."                                                 // 00000005B9D6: 2E
	.byte 0xc9                                                 // 00000005B9D7: C9
	.long 0xaaf85fcc                                           // 00000005B9D8: AAF85FCC
	.ascii "`"                                                 // 00000005B9DC: 60
	.byte 0xcf                                                 // 00000005B9DD: CF
	.ascii "N"                                                 // 00000005B9DE: 4E
	.byte 0xaf                                                 // 00000005B9DF: AF
	.long 0x90b8abe9                                           // 00000005B9E0: 90B8ABE9
	.ascii "r"                                                 // 00000005B9E4: 72
	.byte 0x4                                                  // 00000005B9E5: 04
	.short 0x53e6                                              // 00000005B9E6: 53E6
	.long 0x5d4f55d2                                           // 00000005B9E8: 5D4F55D2
	.long 0xc65222ef                                           // 00000005B9EC: C65222EF
	.ascii "b"                                                 // 00000005B9F0: 62
	.byte 0xcf                                                 // 00000005B9F1: CF
	.short 0xd08c                                              // 00000005B9F2: D08C
	.ascii "."                                                 // 00000005B9F4: 2E
	.byte 0xf3                                                 // 00000005B9F5: F3
	.short 0x3806                                              // 00000005B9F6: 3806
	.ascii "F"                                                 // 00000005B9F8: 46
	.byte 0xa4                                                 // 00000005B9F9: A4
	.short 0x66bd                                              // 00000005B9FA: 66BD
	.ascii "/["                                                // 00000005B9FC: 5B2F
	.short 0x3a17                                              // 00000005B9FE: 3A17
	.long 0x36321eb4                                           // 00000005BA00: 36321EB4
	.long 0xfaf174c8                                           // 00000005BA04: FAF174C8
	.ascii " 0"                                                // 00000005BA08: 3020
	.short 0x6e96                                              // 00000005BA0A: 6E96
	.ascii "9r"                                                // 00000005BA0C: 7239
	.short 0x5811                                              // 00000005BA0E: 5811
	.long 0xe03c4c9c                                           // 00000005BA10: E03C4C9C
	.long 0x5588d000                                           // 00000005BA14: 5588D000
	.long 0x10a4b9b9                                           // 00000005BA18: 10A4B9B9
	.ascii "Z"                                                 // 00000005BA1C: 5A
	.byte 0xae                                                 // 00000005BA1D: AE
	.ascii ":"                                                 // 00000005BA1E: 3A
	.byte 0xe1                                                 // 00000005BA1F: E1
	.long 0x3e3767ca                                           // 00000005BA20: 3E3767CA
	.long 0x63fc5cf7                                           // 00000005BA24: 63FC5CF7
	.ascii "f"                                                 // 00000005BA28: 66
	.byte 0x9d                                                 // 00000005BA29: 9D
	.short 0xdfc1                                              // 00000005BA2A: DFC1
	.long 0xabd22592                                           // 00000005BA2C: ABD22592
	.ascii "2"                                                 // 00000005BA30: 32
	.byte 0x8c                                                 // 00000005BA31: 8C
	.short 0xed9d                                              // 00000005BA32: ED9D
	.ascii "3"                                                 // 00000005BA34: 33
	.byte 0xbe                                                 // 00000005BA35: BE
	.short 0xacfa                                              // 00000005BA36: ACFA
	.long 0xb5d5fad8                                           // 00000005BA38: B5D5FAD8
	.long 0x80aee704                                           // 00000005BA3C: 80AEE704
	.long 0x464e67b0                                           // 00000005BA40: 464E67B0
	.long 0xa4d51114                                           // 00000005BA44: A4D51114
	.long 0x3e54b905                                           // 00000005BA48: 3E54B905
	.long 0x55e49b10                                           // 00000005BA4C: 55E49B10
	.long 0xc5f3c31c                                           // 00000005BA50: C5F3C31C
	.long 0xc2b203fd                                           // 00000005BA54: C2B203FD
	.ascii "JY"                                                // 00000005BA58: 594A
	.short 0xf88e                                              // 00000005BA5A: F88E
	.long 0x8f0d1f03                                           // 00000005BA5C: 8F0D1F03
	.long 0xd0cb09a6                                           // 00000005BA60: D0CB09A6
	.ascii "n."                                                // 00000005BA64: 2E6E
	.short 0xbdff                                              // 00000005BA66: BDFF
	.long 0x48219d17                                           // 00000005BA68: 48219D17
	.long 0xd76eabc8                                           // 00000005BA6C: D76EABC8
	.ascii "d"                                                 // 00000005BA70: 64
	.byte 0x11                                                 // 00000005BA71: 11
	.short 0x3aec                                              // 00000005BA72: 3AEC
	.long 0x3a8454a4                                           // 00000005BA74: 3A8454A4
	.long 0xe05d3cc                                            // 00000005BA78: 0E05D3CC
	.ascii "\\m"                                               // 00000005BA7C: 6D5C
	.short 0xd95                                               // 00000005BA7E: 0D95
	.long 0x2e1c6611                                           // 00000005BA80: 2E1C6611
	.long 0x8b435ad8                                           // 00000005BA84: 8B435AD8
	.long 0x36cc29cc                                           // 00000005BA88: 36CC29CC
	.long 0x39ca23f8                                           // 00000005BA8C: 39CA23F8
	.ascii "Xz	"                                               // 00000005BA90: 097A58
	.byte 0x93                                                 // 00000005BA93: 93
	.ascii "p"                                                 // 00000005BA94: 70
	.byte 0x82                                                 // 00000005BA95: 82
	.ascii "j]"                                                // 00000005BA96: 5D6A
	.long 0x58b0c999                                           // 00000005BA98: 58B0C999
	.long 0x4708f8b                                            // 00000005BA9C: 04708F8B
	.ascii "6"                                                 // 00000005BAA0: 36
	.byte 0xa4                                                 // 00000005BAA1: A4
	.ascii "E"                                                 // 00000005BAA2: 45
	.byte 0xc6                                                 // 00000005BAA3: C6
	.ascii "*"                                                 // 00000005BAA4: 2A
	.byte 0x8d                                                 // 00000005BAA5: 8D
	.short 0x3fbc                                              // 00000005BAA6: 3FBC
	.long 0x41e01b17                                           // 00000005BAA8: 41E01B17
	.ascii "|@PQ"                                              // 00000005BAAC: 5150407C
	.long 0x423bd71c                                           // 00000005BAB0: 423BD71C
	.ascii "@"                                                 // 00000005BAB4: 40
	.byte 0x1d                                                 // 00000005BAB5: 1D
	.short 0x91e6                                              // 00000005BAB6: 91E6
	.long 0xbf1099c8                                           // 00000005BAB8: BF1099C8
	.ascii "Y"                                                 // 00000005BABC: 59
	.byte 0x8e                                                 // 00000005BABD: 8E
	.short 0x73d4                                              // 00000005BABE: 73D4
	.long 0x51ed86d8                                           // 00000005BAC0: 51ED86D8
	.long 0x2a14aff0                                           // 00000005BAC4: 2A14AFF0
	.ascii "p:"                                                // 00000005BAC8: 3A70
	.short 0xfa13                                              // 00000005BACA: FA13
	.long 0xdf640bfc                                           // 00000005BACC: DF640BFC
	.long 0x1b864508                                           // 00000005BAD0: 1B864508
	.ascii "e"                                                 // 00000005BAD4: 65
	.byte 0xa5                                                 // 00000005BAD5: A5
	.ascii "SJ&/"                                              // 00000005BAD6: 2F264A53
	.short 0xdeaa                                              // 00000005BADA: DEAA
	.long 0x1bf0dd1e                                           // 00000005BADC: 1BF0DD1E
	.long 0x9c813a8a                                           // 00000005BAE0: 9C813A8A
	.long 0xff33c0b3                                           // 00000005BAE4: FF33C0B3
	.long 0x7a6793ca                                           // 00000005BAE8: 7A6793CA
	.ascii "v"                                                 // 00000005BAEC: 76
	.byte 0xfa                                                 // 00000005BAED: FA
	.short 0x28f6                                              // 00000005BAEE: 28F6
	.long 0x19d6df8f                                           // 00000005BAF0: 19D6DF8F
	.ascii "|"                                                 // 00000005BAF4: 7C
	.byte 0xc2                                                 // 00000005BAF5: C2
	.short 0x151a                                              // 00000005BAF6: 151A
	.ascii "h"                                                 // 00000005BAF8: 68
	.byte 0xdc                                                 // 00000005BAF9: DC
	.ascii "^3I"                                               // 00000005BAFA: 49335E
	.byte 0xb6                                                 // 00000005BAFD: B6
	.ascii "E"                                                 // 00000005BAFE: 45
	.byte 0xb4                                                 // 00000005BAFF: B4
	.long 0x91542dac                                           // 00000005BB00: 91542DAC
	.long 0x8493ec0c                                           // 00000005BB04: 8493EC0C
	.long 0xcc7693f9                                           // 00000005BB08: CC7693F9
	.ascii "^-"                                                // 00000005BB0C: 2D5E
	.short 0xa812                                              // 00000005BB0E: A812
	.ascii "~"                                                 // 00000005BB10: 7E
	.byte 0x88                                                 // 00000005BB11: 88
	.short 0xdd1b                                              // 00000005BB12: DD1B
	.long 0x9a90e2c6                                           // 00000005BB14: 9A90E2C6
	.ascii "f"                                                 // 00000005BB18: 66
	.byte 0xfa                                                 // 00000005BB19: FA
	.short 0x1b10                                              // 00000005BB1A: 1B10
	.long 0x145b5c16                                           // 00000005BB1C: 145B5C16
	.long 0x44ae4cbf                                           // 00000005BB20: 44AE4CBF
	.ascii ":"                                                 // 00000005BB24: 3A
	.byte 0x87                                                 // 00000005BB25: 87
	.ascii ">02"                                               // 00000005BB26: 32303E
	.byte 0xa8                                                 // 00000005BB29: A8
	.ascii "&\n"                                               // 00000005BB2A: 0A26
	.ascii ":"                                                 // 00000005BB2C: 3A
	.byte 0x2                                                  // 00000005BB2D: 02
	.ascii "1OV"                                               // 00000005BB2E: 564F31
	.byte 0xe0                                                 // 00000005BB31: E0
	.ascii "."                                                 // 00000005BB32: 2E
	.byte 0x7f                                                 // 00000005BB33: 7F
	.ascii "F"                                                 // 00000005BB34: 46
	.byte 0x1                                                  // 00000005BB35: 01
	.ascii "Kug"                                               // 00000005BB36: 67754B
	.byte 0xca                                                 // 00000005BB39: CA
	.ascii "7"                                                 // 00000005BB3A: 37
	.byte 0xb5                                                 // 00000005BB3B: B5
	.long 0x9a4cd2ac                                           // 00000005BB3C: 9A4CD2AC
	.long 0x874fedc                                            // 00000005BB40: 0874FEDC
	.ascii "t"                                                 // 00000005BB44: 74
	.byte 0xa5                                                 // 00000005BB45: A5
	.ascii "]Opj"                                              // 00000005BB46: 6A704F5D
	.short 0xbf8                                               // 00000005BB4A: 0BF8
	.long 0x3780dffc                                           // 00000005BB4C: 3780DFFC
	.ascii "i"                                                 // 00000005BB50: 69
	.byte 0xff                                                 // 00000005BB51: FF
	.short 0x6690                                              // 00000005BB52: 6690
	.ascii "("                                                 // 00000005BB54: 28
	.byte 0xcc                                                 // 00000005BB55: CC
	.ascii "E"                                                 // 00000005BB56: 45
	.byte 0xf2                                                 // 00000005BB57: F2
	.ascii "8"                                                 // 00000005BB58: 38
	.byte 0xb3                                                 // 00000005BB59: B3
	.short 0x2fb5                                              // 00000005BB5A: 2FB5
	.ascii "("                                                 // 00000005BB5C: 28
	.byte 0xa2                                                 // 00000005BB5D: A2
	.ascii "	"                                                 // 00000005BB5E: 09
	.byte 0x80                                                 // 00000005BB5F: 80
	.long 0xc6334000                                           // 00000005BB60: C6334000
	.long 0xbd4dc185                                           // 00000005BB64: BD4DC185
	.long 0xa57e1dda                                           // 00000005BB68: A57E1DDA
	.long 0xd8f5c92                                            // 00000005BB6C: 0D8F5C92
	.long 0x832b3bae                                           // 00000005BB70: 832B3BAE
	.long 0x6f59330b                                           // 00000005BB74: 6F59330B
	.long 0x4c72d8ba                                           // 00000005BB78: 4C72D8BA
	.long 0xed072086                                           // 00000005BB7C: ED072086
	.long 0x9f89c096                                           // 00000005BB80: 9F89C096
	.ascii "vY"                                                // 00000005BB84: 5976
	.short 0xad1d                                              // 00000005BB86: AD1D
	.ascii "7"                                                 // 00000005BB88: 37
	.byte 0x8a                                                 // 00000005BB89: 8A
	.ascii "C<"                                                // 00000005BB8A: 3C43
	.long 0x4c3cf618                                           // 00000005BB8C: 4C3CF618
	.long 0xa47e52cc                                           // 00000005BB90: A47E52CC
	.ascii "x1"                                                // 00000005BB94: 3178
	.short 0x71da                                              // 00000005BB96: 71DA
	.long 0xb93b358c                                           // 00000005BB98: B93B358C
	.ascii "9U4flU"                                            // 00000005BB9C: 66345539 556C
	.short 0x578d                                              // 00000005BBA2: 578D
	.long 0xa18052d8                                           // 00000005BBA4: A18052D8
	.long 0xe48f5ad4                                           // 00000005BBA8: E48F5AD4
	.long 0xcf80d4dc                                           // 00000005BBAC: CF80D4DC
	.ascii "`)"                                                // 00000005BBB0: 2960
	.short 0xebd6                                              // 00000005BBB2: EBD6
	.ascii "8:"                                                // 00000005BBB4: 3A38
	.short 0xf5d5                                              // 00000005BBB6: F5D5
	.long 0xaf325b1d                                           // 00000005BBB8: AF325B1D
	.long 0x9a34ea16                                           // 00000005BBBC: 9A34EA16
	.ascii ".H"                                                // 00000005BBC0: 482E
	.short 0x420f                                              // 00000005BBC2: 420F
	.long 0xf3a9e2ef                                           // 00000005BBC4: F3A9E2EF
	.long 0xf22652da                                           // 00000005BBC8: F22652DA
	.long 0x189160b6                                           // 00000005BBCC: 189160B6
	.long 0xed6213f2                                           // 00000005BBD0: ED6213F2
	.ascii "z"                                                 // 00000005BBD4: 7A
	.byte 0xf0                                                 // 00000005BBD5: F0
	.short 0xcecb                                              // 00000005BBD6: CECB
	.ascii "vw"                                                // 00000005BBD8: 7776
	.short 0x91eb                                              // 00000005BBDA: 91EB
	.ascii "f"                                                 // 00000005BBDC: 66
	.byte 0xde                                                 // 00000005BBDD: DE
	.short 0x13b9                                              // 00000005BBDE: 13B9
	.long 0x2679c913                                           // 00000005BBE0: 2679C913
	.long 0x9167cbe4                                           // 00000005BBE4: 9167CBE4
	.ascii "`"                                                 // 00000005BBE8: 60
	.byte 0x8a                                                 // 00000005BBE9: 8A
	.short 0x6c5                                               // 00000005BBEA: 06C5
	.ascii " t"                                                // 00000005BBEC: 7420
	.short 0x81a7                                              // 00000005BBEE: 81A7
	.ascii " fQ "                                              // 00000005BBF0: 20516620
	.long 0x6469e5dc                                           // 00000005BBF4: 6469E5DC
	.ascii "X>"                                                // 00000005BBF8: 3E58
	.short 0x2380                                              // 00000005BBFA: 2380
	.long 0x6957e9c5                                           // 00000005BBFC: 6957E9C5
	.long 0xa4cd1bdc                                           // 00000005BC00: A4CD1BDC
	.long 0xa950094                                            // 00000005BC04: 0A950094
	.ascii "M"                                                 // 00000005BC08: 4D
	.byte 0x1a                                                 // 00000005BC09: 1A
	.short 0x2697                                              // 00000005BC0A: 2697
	.ascii "6"                                                 // 00000005BC0C: 36
	.byte 0xfe                                                 // 00000005BC0D: FE
	.short 0x45e0                                              // 00000005BC0E: 45E0
	.long 0x6bed4cab                                           // 00000005BC10: 6BED4CAB
	.ascii "J"                                                 // 00000005BC14: 4A
	.byte 0x8e                                                 // 00000005BC15: 8E
	.ascii "\n"                                                // 00000005BC16: 0A
	.byte 0x98                                                 // 00000005BC17: 98
	.long 0x8ab2a41a                                           // 00000005BC18: 8AB2A41A
	.long 0x7298edef                                           // 00000005BC1C: 7298EDEF
	.long 0x740343c8                                           // 00000005BC20: 740343C8
	.ascii ","                                                 // 00000005BC24: 2C
	.byte 0xd2                                                 // 00000005BC25: D2
	.short 0x3f7                                               // 00000005BC26: 03F7
	.ascii "<h3H"                                              // 00000005BC28: 4833683C
	.long 0x761f21c4                                           // 00000005BC2C: 761F21C4
	.long 0x52458bc                                            // 00000005BC30: 052458BC
	.ascii "AK"                                                // 00000005BC34: 4B41
	.short 0x24c4                                              // 00000005BC36: 24C4
	.ascii "85U-"                                              // 00000005BC38: 2D553538
	.long 0x8a6e9400                                           // 00000005BC3C: 8A6E9400
	.ascii "="                                                 // 00000005BC40: 3D
	.byte 0xc                                                  // 00000005BC41: 0C
	.ascii "\n"                                                // 00000005BC42: 0A
	.byte 0xb                                                  // 00000005BC43: 0B
	.ascii "\""                                                // 00000005BC44: 22
	.byte 0xc2                                                 // 00000005BC45: C2
	.ascii "4"                                                 // 00000005BC46: 34
	.byte 0x1                                                  // 00000005BC47: 01
	.long 0xb331d69a                                           // 00000005BC48: B331D69A
	.long 0x6a38c48b                                           // 00000005BC4C: 6A38C48B
	.long 0xac4ac5aa                                           // 00000005BC50: AC4AC5AA
	.long 0xd5e38b16                                           // 00000005BC54: D5E38B16
	.long 0x57446ddb                                           // 00000005BC58: 57446DDB
	.ascii "|"                                                 // 00000005BC5C: 7C
	.byte 0xbc                                                 // 00000005BC5D: BC
	.short 0xac8a                                              // 00000005BC5E: AC8A
	.long 0xdba23dcd                                           // 00000005BC60: DBA23DCD
	.ascii "x1}"                                               // 00000005BC64: 7D3178
	.byte 0x87                                                 // 00000005BC67: 87
	.ascii "P"                                                 // 00000005BC68: 50
	.byte 0xd5                                                 // 00000005BC69: D5
	.short 0x2703                                              // 00000005BC6A: 2703
	.long 0x7d78488                                            // 00000005BC6C: 07D78488
	.ascii "d8~*!"                                             // 00000005BC70: 2A7E3864 21
	.byte 0xcd                                                 // 00000005BC75: CD
	.short 0x1a7f                                              // 00000005BC76: 1A7F
	.ascii "vIs"                                               // 00000005BC78: 734976
	.byte 0xe9                                                 // 00000005BC7B: E9
	.ascii "N"                                                 // 00000005BC7C: 4E
	.byte 0xdf                                                 // 00000005BC7D: DF
	.ascii "l"                                                 // 00000005BC7E: 6C
	.byte 0x90                                                 // 00000005BC7F: 90
	.long 0xf416beea                                           // 00000005BC80: F416BEEA
	.long 0x2784adaa                                           // 00000005BC84: 2784ADAA
	.long 0xe62f48ca                                           // 00000005BC88: E62F48CA
	.long 0xcd2e8bda                                           // 00000005BC8C: CD2E8BDA
	.ascii "O"                                                 // 00000005BC90: 4F
	.byte 0xf2                                                 // 00000005BC91: F2
	.ascii "H"                                                 // 00000005BC92: 48
	.byte 0xab                                                 // 00000005BC93: AB
	.long 0xb9511b1a                                           // 00000005BC94: B9511B1A
	.long 0xd11cbeea                                           // 00000005BC98: D11CBEEA
	.long 0xe996fe7                                            // 00000005BC9C: 0E996FE7
	.ascii "("                                                 // 00000005BCA0: 28
	.byte 0x1                                                  // 00000005BCA1: 01
	.short 0xedbe                                              // 00000005BCA2: EDBE
	.long 0x6803cb90                                           // 00000005BCA4: 6803CB90
	.long 0xaa4be9b8                                           // 00000005BCA8: AA4BE9B8
	.long 0x63e9ffcd                                           // 00000005BCAC: 63E9FFCD
	.long 0x577732b5                                           // 00000005BCB0: 577732B5
	.long 0x13ae66be                                           // 00000005BCB4: 13AE66BE
	.ascii "V"                                                 // 00000005BCB8: 56
	.byte 0xbe                                                 // 00000005BCB9: BE
	.short 0x91e3                                              // 00000005BCBA: 91E3
	.long 0x79968ef6                                           // 00000005BCBC: 79968EF6
	.long 0x434ed8fa                                           // 00000005BCC0: 434ED8FA
	.long 0x34ebe416                                           // 00000005BCC4: 34EBE416
	.long 0x28c8ba92                                           // 00000005BCC8: 28C8BA92
	.long 0x9d6273a3                                           // 00000005BCCC: 9D6273A3
	.ascii ":"                                                 // 00000005BCD0: 3A
	.byte 0x4                                                  // 00000005BCD1: 04
	.short 0x769d                                              // 00000005BCD2: 769D
	.long 0xd76329ca                                           // 00000005BCD4: D76329CA
	.ascii "J("                                                // 00000005BCD8: 284A
	.short 0xc89                                               // 00000005BCDA: 0C89
	.ascii "*"                                                 // 00000005BCDC: 2A
	.byte 0x9c                                                 // 00000005BCDD: 9C
	.short 0xa6bd                                              // 00000005BCDE: A6BD
	.long 0x6c51ee6                                            // 00000005BCE0: 06C51EE6
	.ascii "j	"                                                // 00000005BCE4: 096A
	.short 0x17bd                                              // 00000005BCE6: 17BD
	.long 0x103a360b                                           // 00000005BCE8: 103A360B
	.ascii "x"                                                 // 00000005BCEC: 78
	.byte 0xc6                                                 // 00000005BCED: C6
	.short 0x5db1                                              // 00000005BCEE: 5DB1
	.long 0x71ed39fc                                           // 00000005BCF0: 71ED39FC
	.ascii "("                                                 // 00000005BCF4: 28
	.byte 0x82                                                 // 00000005BCF5: 82
	.ascii "@"                                                 // 00000005BCF6: 40
	.byte 0xdf                                                 // 00000005BCF7: DF
	.long 0x9f03d014                                           // 00000005BCF8: 9F03D014
	.long 0x19a49ea8                                           // 00000005BCFC: 19A49EA8
	.long 0xa541f2f4                                           // 00000005BD00: A541F2F4
	.ascii "]"                                                 // 00000005BD04: 5D
	.byte 0xa7                                                 // 00000005BD05: A7
	.short 0x3ce3                                              // 00000005BD06: 3CE3
	.ascii "Q/{h"                                              // 00000005BD08: 687B2F51
	.long 0xf48e0b8e                                           // 00000005BD0C: F48E0B8E
	.long 0x1dfc84de                                           // 00000005BD10: 1DFC84DE
	.long 0xa9f72dea                                           // 00000005BD14: A9F72DEA
	.ascii "*p>"                                               // 00000005BD18: 3E702A
	.byte 0x1b                                                 // 00000005BD1B: 1B
	.long 0x5d04a5af                                           // 00000005BD1C: 5D04A5AF
	.long 0xc9b6a396                                           // 00000005BD20: C9B6A396
	.long 0x5b9514e6                                           // 00000005BD24: 5B9514E6
	.ascii "\""                                                // 00000005BD28: 22
	.byte 0x11                                                 // 00000005BD29: 11
	.short 0x77e1                                              // 00000005BD2A: 77E1
	.ascii "_ "                                                // 00000005BD2C: 205F
	.short 0xf694                                              // 00000005BD2E: F694
	.long 0x9c6c8700                                           // 00000005BD30: 9C6C8700
	.long 0x526ea0a9                                           // 00000005BD34: 526EA0A9
	.ascii ","                                                 // 00000005BD38: 2C
	.byte 0xd1                                                 // 00000005BD39: D1
	.short 0x94df                                              // 00000005BD3A: 94DF
	.ascii "h"                                                 // 00000005BD3C: 68
	.byte 0x85                                                 // 00000005BD3D: 85
	.ascii "w"                                                 // 00000005BD3E: 77
	.byte 0xa1                                                 // 00000005BD3F: A1
	.long 0xa9af7e81                                           // 00000005BD40: A9AF7E81
	.long 0x1013e02                                            // 00000005BD44: 01013E02
	.ascii "*"                                                 // 00000005BD48: 2A
	.byte 0xcc                                                 // 00000005BD49: CC
	.ascii "Ew"                                                // 00000005BD4A: 7745
	.long 0x8d70ea06                                           // 00000005BD4C: 8D70EA06
	.long 0x44ada096                                           // 00000005BD50: 44ADA096
	.ascii "z"                                                 // 00000005BD54: 7A
	.byte 0xb3                                                 // 00000005BD55: B3
	.ascii "xf+X "                                             // 00000005BD56: 582B6678 20
	.byte 0xad                                                 // 00000005BD5B: AD
	.long 0xbdcacde                                            // 00000005BD5C: 0BDCACDE
	.long 0x88c79afe                                           // 00000005BD60: 88C79AFE
	.long 0xbd6295ae                                           // 00000005BD64: BD6295AE
	.ascii "F"                                                 // 00000005BD68: 46
	.byte 0xd9                                                 // 00000005BD69: D9
	.ascii "WN"                                                // 00000005BD6A: 4E57
	.long 0x4ef29f12                                           // 00000005BD6C: 4EF29F12
	.long 0x497931c7                                           // 00000005BD70: 497931C7
	.long 0xcd0eb29c                                           // 00000005BD74: CD0EB29C
	.long 0xe30532bc                                           // 00000005BD78: E30532BC
	.long 0x1918cca8                                           // 00000005BD7C: 1918CCA8
	.ascii "@"                                                 // 00000005BD80: 40
	.byte 0x80                                                 // 00000005BD81: 80
	.ascii ">"                                                 // 00000005BD82: 3E
	.byte 0xc1                                                 // 00000005BD83: C1
	.long 0x43972488                                           // 00000005BD84: 43972488
	.ascii "M"                                                 // 00000005BD88: 4D
	.byte 0x9f                                                 // 00000005BD89: 9F
	.short 0x58a3                                              // 00000005BD8A: 58A3
	.long 0xedb8d2fc                                           // 00000005BD8C: EDB8D2FC
	.long 0xcf09afac                                           // 00000005BD90: CF09AFAC
	.long 0xbe4ee0a4                                           // 00000005BD94: BE4EE0A4
	.ascii "%C"                                                // 00000005BD98: 4325
	.short 0x6e1a                                              // 00000005BD9A: 6E1A
	.long 0xebc830a2                                           // 00000005BD9C: EBC830A2
	.ascii "/D"                                                // 00000005BDA0: 442F
	.short 0xe11                                               // 00000005BDA2: 0E11
	.long 0x962ece86                                           // 00000005BDA4: 962ECE86
	.ascii ">"                                                 // 00000005BDA8: 3E
	.byte 0xf5                                                 // 00000005BDA9: F5
	.ascii ")"                                                 // 00000005BDAA: 29
	.byte 0x81                                                 // 00000005BDAB: 81
	.long 0x914fb2d3                                           // 00000005BDAC: 914FB2D3
	.ascii "\\F(-"                                             // 00000005BDB0: 2D28465C
	.long 0xf2f5c0e8                                           // 00000005BDB4: F2F5C0E8
	.long 0x10c514bc                                           // 00000005BDB8: 10C514BC
	.long 0x1659e0e8                                           // 00000005BDBC: 1659E0E8
	.ascii "="                                                 // 00000005BDC0: 3D
	.byte 0xb6                                                 // 00000005BDC1: B6
	.short 0xaeb0                                              // 00000005BDC2: AEB0
	.long 0x5fefda84                                           // 00000005BDC4: 5FEFDA84
	.long 0x3cda69b8                                           // 00000005BDC8: 3CDA69B8
	.ascii "p"                                                 // 00000005BDCC: 70
	.byte 0x99                                                 // 00000005BDCD: 99
	.ascii "=Vh"                                               // 00000005BDCE: 68563D
	.byte 0x91                                                 // 00000005BDD1: 91
	.ascii "%"                                                 // 00000005BDD2: 25
	.byte 0x8f                                                 // 00000005BDD3: 8F
	.ascii "I"                                                 // 00000005BDD4: 49
	.byte 0xb4                                                 // 00000005BDD5: B4
	.ascii "c"                                                 // 00000005BDD6: 63
	.byte 0x95                                                 // 00000005BDD7: 95
	.long 0x710c1f1e                                           // 00000005BDD8: 710C1F1E
	.long 0xf0bf9616                                           // 00000005BDDC: F0BF9616
	.long 0x56f5daaa                                           // 00000005BDE0: 56F5DAAA
	.ascii "v"                                                 // 00000005BDE4: 76
	.byte 0xff                                                 // 00000005BDE5: FF
	.ascii "<"                                                 // 00000005BDE6: 3C
	.byte 0xd9                                                 // 00000005BDE7: D9
	.ascii "k"                                                 // 00000005BDE8: 6B
	.byte 0x84                                                 // 00000005BDE9: 84
	.short 0x3082                                              // 00000005BDEA: 3082
	.ascii "\"U"                                               // 00000005BDEC: 5522
	.short 0x1214                                              // 00000005BDEE: 1214
	.ascii "2F"                                                // 00000005BDF0: 4632
	.short 0xe1e                                               // 00000005BDF2: 0E1E
	.long 0xb75828bf                                           // 00000005BDF4: B75828BF
	.long 0xb9d864ec                                           // 00000005BDF8: B9D864EC
	.long 0xc233979c                                           // 00000005BDFC: C233979C
	.long 0x7d0235d9                                           // 00000005BE00: 7D0235D9
	.long 0x70bff5dc                                           // 00000005BE04: 70BFF5DC
	.long 0x7e05ccbc                                           // 00000005BE08: 7E05CCBC
	.ascii "M("                                                // 00000005BE0C: 284D
	.short 0xc99f                                              // 00000005BE0E: C99F
	.long 0x4cb97896                                           // 00000005BE10: 4CB97896
	.ascii "j"                                                 // 00000005BE14: 6A
	.byte 0xbc                                                 // 00000005BE15: BC
	.short 0x19e0                                              // 00000005BE16: 19E0
	.long 0x2f8658ae                                           // 00000005BE18: 2F8658AE
	.ascii "Wf2"                                               // 00000005BE1C: 326657
	.byte 0xb4                                                 // 00000005BE1F: B4
	.long 0xc6464ca6                                           // 00000005BE20: C6464CA6
	.long 0x74e031de                                           // 00000005BE24: 74E031DE
	.long 0x780049c6                                           // 00000005BE28: 780049C6
	.ascii ";"                                                 // 00000005BE2C: 3B
	.byte 0xc9                                                 // 00000005BE2D: C9
	.short 0x8dbb                                              // 00000005BE2E: 8DBB
	.long 0x3e72bacc                                           // 00000005BE30: 3E72BACC
	.long 0x93a8dfc                                            // 00000005BE34: 093A8DFC
	.ascii "4"                                                 // 00000005BE38: 34
	.byte 0xe1                                                 // 00000005BE39: E1
	.ascii "b!!"                                               // 00000005BE3A: 212162
	.byte 0x95                                                 // 00000005BE3D: 95
	.ascii "'"                                                 // 00000005BE3E: 27
	.byte 0xfe                                                 // 00000005BE3F: FE
	.ascii "R"                                                 // 00000005BE40: 52
	.byte 0x94                                                 // 00000005BE41: 94
	.short 0xddda                                              // 00000005BE42: DDDA
	.ascii "N"                                                 // 00000005BE44: 4E
	.byte 0xb2                                                 // 00000005BE45: B2
	.short 0x89b6                                              // 00000005BE46: 89B6
	.long 0xdb058816                                           // 00000005BE48: DB058816
	.ascii "ki&D"                                              // 00000005BE4C: 4426696B
	.long 0x589311b2                                           // 00000005BE50: 589311B2
	.long 0xc463d292                                           // 00000005BE54: C463D292
	.long 0x1affedbe                                           // 00000005BE58: 1AFFEDBE
	.long 0x77b44abb                                           // 00000005BE5C: 77B44ABB
	.ascii "$I"                                                // 00000005BE60: 4924
	.short 0x3715                                              // 00000005BE62: 3715
	.long 0x6fd509dc                                           // 00000005BE64: 6FD509DC
	.long 0x588170dc                                           // 00000005BE68: 588170DC
	.long 0xe315915                                            // 00000005BE6C: 0E315915
	.ascii "%"                                                 // 00000005BE70: 25
	.byte 0xf8                                                 // 00000005BE71: F8
	.ascii ":~V"                                               // 00000005BE72: 567E3A
	.byte 0x11                                                 // 00000005BE75: 11
	.ascii "5"                                                 // 00000005BE76: 35
	.byte 0xea                                                 // 00000005BE77: EA
	.long 0x50119bda                                           // 00000005BE78: 50119BDA
	.long 0x30da0512                                           // 00000005BE7C: 30DA0512
	.long 0x7a44b08e                                           // 00000005BE80: 7A44B08E
	.long 0xe413e8f6                                           // 00000005BE84: E413E8F6
	.long 0x654210ba                                           // 00000005BE88: 654210BA
	.ascii "6Q"                                                // 00000005BE8C: 5136
	.short 0x34ca                                              // 00000005BE8E: 34CA
	.ascii "C"                                                 // 00000005BE90: 43
	.byte 0xe1                                                 // 00000005BE91: E1
	.ascii "K@"                                                // 00000005BE92: 404B
	.long 0xd76f5cee                                           // 00000005BE94: D76F5CEE
	.long 0xc95ec0cb                                           // 00000005BE98: C95EC0CB
	.ascii "e"                                                 // 00000005BE9C: 65
	.byte 0x12                                                 // 00000005BE9D: 12
	.ascii "`"                                                 // 00000005BE9E: 60
	.byte 0xbb                                                 // 00000005BE9F: BB
	.long 0xbc3fcef8                                           // 00000005BEA0: BC3FCEF8
	.long 0x211662fc                                           // 00000005BEA4: 211662FC
	.long 0x73d81ad0                                           // 00000005BEA8: 73D81AD0
	.ascii "8"                                                 // 00000005BEAC: 38
	.byte 0xb5                                                 // 00000005BEAD: B5
	.ascii "5"                                                 // 00000005BEAE: 35
	.byte 0x14                                                 // 00000005BEAF: 14
	.ascii "d"                                                 // 00000005BEB0: 64
	.byte 0xb4                                                 // 00000005BEB1: B4
	.ascii "&"                                                 // 00000005BEB2: 26
	.byte 0xa2                                                 // 00000005BEB3: A2
	.long 0xd34d4118                                           // 00000005BEB4: D34D4118
	.long 0x4788551d                                           // 00000005BEB8: 4788551D
	.long 0x341e439e                                           // 00000005BEBC: 341E439E
	.ascii "z="                                                // 00000005BEC0: 3D7A
	.short 0x3695                                              // 00000005BEC2: 3695
	.ascii ";"                                                 // 00000005BEC4: 3B
	.byte 0x13                                                 // 00000005BEC5: 13
	.ascii "n"                                                 // 00000005BEC6: 6E
	.byte 0x14                                                 // 00000005BEC7: 14
	.ascii "BwEp*x"                                            // 00000005BEC8: 70457742 782A
	.short 0xabd4                                              // 00000005BECE: ABD4
	.ascii "O\\+"                                              // 00000005BED0: 2B5C4F
	.byte 0xbd                                                 // 00000005BED3: BD
	.ascii "%1"                                                // 00000005BED4: 3125
	.short 0x928f                                              // 00000005BED6: 928F
	.long 0x66a2ca18                                           // 00000005BED8: 66A2CA18
	.ascii "x"                                                 // 00000005BEDC: 78
	.byte 0xa3                                                 // 00000005BEDD: A3
	.ascii "P"                                                 // 00000005BEDE: 50
	.byte 0xd2                                                 // 00000005BEDF: D2
	.long 0x8386d4a4                                           // 00000005BEE0: 8386D4A4
	.long 0xefbdfc05                                           // 00000005BEE4: EFBDFC05
	.ascii "."                                                 // 00000005BEE8: 2E
	.byte 0xc6                                                 // 00000005BEE9: C6
	.ascii "8"                                                 // 00000005BEEA: 38
	.byte 0x18                                                 // 00000005BEEB: 18
	.long 0xd78c64c2                                           // 00000005BEEC: D78C64C2
	.ascii "."                                                 // 00000005BEF0: 2E
	.byte 0x1a                                                 // 00000005BEF1: 1A
	.short 0x800                                               // 00000005BEF2: 0800
	.long 0x2acb90c3                                           // 00000005BEF4: 2ACB90C3
	.ascii "V"                                                 // 00000005BEF8: 56
	.byte 0xe9                                                 // 00000005BEF9: E9
	.ascii "~"                                                 // 00000005BEFA: 7E
	.byte 0x17                                                 // 00000005BEFB: 17
	.ascii "f"                                                 // 00000005BEFC: 66
	.byte 0xc0                                                 // 00000005BEFD: C0
	.ascii ":"                                                 // 00000005BEFE: 3A
	.byte 0xde                                                 // 00000005BEFF: DE
	.long 0x7a61f6d2                                           // 00000005BF00: 7A61F6D2
	.ascii "kI'"                                               // 00000005BF04: 27496B
	.byte 0xcb                                                 // 00000005BF07: CB
	.ascii "t"                                                 // 00000005BF08: 74
	.byte 0xf4                                                 // 00000005BF09: F4
	.short 0xb5ad                                              // 00000005BF0A: B5AD
	.long 0x7e712fd0                                           // 00000005BF0C: 7E712FD0
	.ascii " n"                                                // 00000005BF10: 6E20
	.short 0x8300                                              // 00000005BF12: 8300
	.long 0xad5924b5                                           // 00000005BF14: AD5924B5
	.long 0x2030e71c                                           // 00000005BF18: 2030E71C
	.ascii "l"                                                 // 00000005BF1C: 6C
	.byte 0xb3                                                 // 00000005BF1D: B3
	.short 0x7cc3                                              // 00000005BF1E: 7CC3
	.long 0x8fdd8b9c                                           // 00000005BF20: 8FDD8B9C
	.ascii "Ex"                                                // 00000005BF24: 7845
	.short 0x289e                                              // 00000005BF26: 289E
	.long 0x150571d2                                           // 00000005BF28: 150571D2
	.long 0xe1d35eda                                           // 00000005BF2C: E1D35EDA
	.ascii "#l"                                                // 00000005BF30: 6C23
	.short 0x20ab                                              // 00000005BF32: 20AB
	.long 0x30c5d6fe                                           // 00000005BF34: 30C5D6FE
	.long 0x60eea99e                                           // 00000005BF38: 60EEA99E
	.long 0xa5a3771f                                           // 00000005BF3C: A5A3771F
	.long 0xee18ce94                                           // 00000005BF40: EE18CE94
	.ascii "h"                                                 // 00000005BF44: 68
	.byte 0x8b                                                 // 00000005BF45: 8B
	.ascii " "                                                 // 00000005BF46: 20
	.byte 0x82                                                 // 00000005BF47: 82
	.long 0x233ecd14                                           // 00000005BF48: 233ECD14
	.long 0xcdaa62ac                                           // 00000005BF4C: CDAA62AC
	.long 0x30d60b0c                                           // 00000005BF50: 30D60B0C
	.ascii "P"                                                 // 00000005BF54: 50
	.byte 0x1f                                                 // 00000005BF55: 1F
	.short 0x1717                                              // 00000005BF56: 1717
	.long 0x84bba994                                           // 00000005BF58: 84BBA994
	.ascii "-SX"                                               // 00000005BF5C: 58532D
	.byte 0x80                                                 // 00000005BF5F: 80
	.long 0xb021c8bc                                           // 00000005BF60: B021C8BC
	.long 0x83113880                                           // 00000005BF64: 83113880
	.long 0x7a52b508                                           // 00000005BF68: 7A52B508
	.ascii "LfVc"                                              // 00000005BF6C: 6356664C
	.long 0xdd6d91b9                                           // 00000005BF70: DD6D91B9
	.ascii "BZc"                                               // 00000005BF74: 635A42
	.byte 0x85                                                 // 00000005BF77: 85
	.long 0x21245eca                                           // 00000005BF78: 21245ECA
	.long 0x6a2cafe                                            // 00000005BF7C: 06A2CAFE
	.ascii "v6m"                                               // 00000005BF80: 6D3676
	.byte 0xb6                                                 // 00000005BF83: B6
	.long 0x6a94b4cb                                           // 00000005BF84: 6A94B4CB
	.ascii "~D}a"                                              // 00000005BF88: 617D447E
	.long 0xbbd9dafe                                           // 00000005BF8C: BBD9DAFE
	.ascii "J"                                                 // 00000005BF90: 4A
	.byte 0xe5                                                 // 00000005BF91: E5
	.ascii "["                                                 // 00000005BF92: 5B
	.byte 0x16                                                 // 00000005BF93: 16
	.ascii "^"                                                 // 00000005BF94: 5E
	.byte 0xc3                                                 // 00000005BF95: C3
	.ascii "L"                                                 // 00000005BF96: 4C
	.byte 0x8a                                                 // 00000005BF97: 8A
	.ascii "S"                                                 // 00000005BF98: 53
	.byte 0x9f                                                 // 00000005BF99: 9F
	.short 0x57c4                                              // 00000005BF9A: 57C4
	.ascii "P"                                                 // 00000005BF9C: 50
	.byte 0x9a                                                 // 00000005BF9D: 9A
	.short 0x21e2                                              // 00000005BF9E: 21E2
	.long 0xf4c7f0c                                            // 00000005BFA0: 0F4C7F0C
	.long 0x7631d8e8                                           // 00000005BFA4: 7631D8E8
	.long 0x6752c1a5                                           // 00000005BFA8: 6752C1A5
	.long 0x7179b398                                           // 00000005BFAC: 7179B398
	.ascii "$ff~"                                              // 00000005BFB0: 7E666624
	.long 0x900ceaf8                                           // 00000005BFB4: 900CEAF8
	.ascii "e"                                                 // 00000005BFB8: 65
	.byte 0x10                                                 // 00000005BFB9: 10
	.short 0x89ca                                              // 00000005BFBA: 89CA
	.ascii "n"                                                 // 00000005BFBC: 6E
	.byte 0x8b                                                 // 00000005BFBD: 8B
	.short 0x56c4                                              // 00000005BFBE: 56C4
	.long 0x150e4f92                                           // 00000005BFC0: 150E4F92
	.ascii "?*$["                                              // 00000005BFC4: 5B242A3F
	.long 0xf99cb2b2                                           // 00000005BFC8: F99CB2B2
	.long 0x9359e113                                           // 00000005BFCC: 9359E113
	.ascii "$"                                                 // 00000005BFD0: 24
	.byte 0xce                                                 // 00000005BFD1: CE
	.ascii "6&"                                                // 00000005BFD2: 2636
	.long 0x7a0aaac                                            // 00000005BFD4: 07A0AAAC
	.long 0x3f4be6e0                                           // 00000005BFD8: 3F4BE6E0
	.long 0xf6ac19ed                                           // 00000005BFDC: F6AC19ED
	.long 0x3e7eedf0                                           // 00000005BFE0: 3E7EEDF0
	.ascii "$/En"                                              // 00000005BFE4: 6E452F24
	.long 0x65d2ce94                                           // 00000005BFE8: 65D2CE94
	.long 0x22047d18                                           // 00000005BFEC: 22047D18
	.ascii "D"                                                 // 00000005BFF0: 44
	.byte 0x84                                                 // 00000005BFF1: 84
	.short 0x1a92                                              // 00000005BFF2: 1A92
	.ascii "pv"                                                // 00000005BFF4: 7670
	.short 0xb2f3                                              // 00000005BFF6: B2F3
	.long 0x6178a3f1                                           // 00000005BFF8: 6178A3F1
	.long 0xcd7ebcb6                                           // 00000005BFFC: CD7EBCB6
	.long 0x393a42ce                                           // 00000005C000: 393A42CE
	.long 0xfffeb892                                           // 00000005C004: FFFEB892
	.ascii "v"                                                 // 00000005C008: 76
	.byte 0xcc                                                 // 00000005C009: CC
	.ascii "e2z"                                               // 00000005C00A: 7A3265
	.byte 0x5                                                  // 00000005C00D: 05
	.ascii " YW"                                               // 00000005C00E: 575920
	.byte 0xfd                                                 // 00000005C011: FD
	.short 0xcc4                                               // 00000005C012: 0CC4
	.long 0xf62689e                                            // 00000005C014: 0F62689E
	.ascii "&"                                                 // 00000005C018: 26
	.byte 0xad                                                 // 00000005C019: AD
	.ascii "&=["                                               // 00000005C01A: 5B3D26
	.byte 0xbb                                                 // 00000005C01D: BB
	.short 0x4fce                                              // 00000005C01E: 4FCE
	.long 0x405af89                                            // 00000005C020: 0405AF89
	.ascii "dN"                                                // 00000005C024: 4E64
	.short 0xa997                                              // 00000005C026: A997
	.ascii "0"                                                 // 00000005C028: 30
	.byte 0xbb                                                 // 00000005C029: BB
	.short 0xb4de                                              // 00000005C02A: B4DE
	.ascii " #"                                                // 00000005C02C: 2320
	.short 0x178e                                              // 00000005C02E: 178E
	.long 0xa6f351ec                                           // 00000005C030: A6F351EC
	.long 0x6eda2a10                                           // 00000005C034: 6EDA2A10
	.ascii "P"                                                 // 00000005C038: 50
	.byte 0xf4                                                 // 00000005C039: F4
	.ascii "+`"                                                // 00000005C03A: 602B
	.long 0x91c98bb9                                           // 00000005C03C: 91C98BB9
	.ascii ".c"                                                // 00000005C040: 632E
	.short 0x6b07                                              // 00000005C042: 6B07
	.long 0x154c89d6                                           // 00000005C044: 154C89D6
	.ascii "7"                                                 // 00000005C048: 37
	.byte 0xd1                                                 // 00000005C049: D1
	.short 0x8eb                                               // 00000005C04A: 08EB
	.ascii "~"                                                 // 00000005C04C: 7E
	.byte 0x98                                                 // 00000005C04D: 98
	.ascii "?	\n"                                              // 00000005C04E: 0A093F
	.ascii "["                                                 // 00000005C051: 5B
	.short 0x1d84                                              // 00000005C052: 1D84
	.long 0x6e9619f7                                           // 00000005C054: 6E9619F7
	.ascii " 8D"                                               // 00000005C058: 443820
	.byte 0xf8                                                 // 00000005C05B: F8
	.long 0xb6b3fa10                                           // 00000005C05C: B6B3FA10
	.long 0xd3068b89                                           // 00000005C060: D3068B89
	.ascii ",\n"                                               // 00000005C064: 0A2C
	.ascii "A"                                                 // 00000005C066: 41
	.byte 0xc3                                                 // 00000005C067: C3
	.long 0xfda12204                                           // 00000005C068: FDA12204
	.long 0xbe24cf84                                           // 00000005C06C: BE24CF84
	.long 0xe7f7cfe4                                           // 00000005C070: E7F7CFE4
	.long 0x796476a5                                           // 00000005C074: 796476A5
	.long 0x4b8b6aca                                           // 00000005C078: 4B8B6ACA
	.long 0x6cff8616                                           // 00000005C07C: 6CFF8616
	.long 0xe054ab8e                                           // 00000005C080: E054AB8E
	.long 0x493ce0d7                                           // 00000005C084: 493CE0D7
	.ascii "N"                                                 // 00000005C088: 4E
	.byte 0x8f                                                 // 00000005C089: 8F
	.short 0xdee8                                              // 00000005C08A: DEE8
	.ascii "z"                                                 // 00000005C08C: 7A
	.byte 0xc2                                                 // 00000005C08D: C2
	.short 0xee8c                                              // 00000005C08E: EE8C
	.long 0x6caa1cd2                                           // 00000005C090: 6CAA1CD2
	.ascii "n"                                                 // 00000005C094: 6E
	.byte 0xca                                                 // 00000005C095: CA
	.ascii "O"                                                 // 00000005C096: 4F
	.byte 0xf1                                                 // 00000005C097: F1
	.long 0x66704da2                                           // 00000005C098: 66704DA2
	.ascii "w"                                                 // 00000005C09C: 77
	.byte 0x7                                                  // 00000005C09D: 07
	.short 0x331f                                              // 00000005C09E: 331F

	.section	.hash,#alloc
	.ascii "S"                                                 // 00000005C0A0: 53
	.byte 0x2                                                  // 00000005C0A1: 02
	.short 0                                                   // 00000005C0A2: 0000
	.ascii "S"                                                 // 00000005C0A4: 53
	.byte 0x2                                                  // 00000005C0A5: 02
	.short 0                                                   // 00000005C0A6: 0000
	.ascii "3"                                                 // 00000005C0A8: 33
	.byte 0x2                                                  // 00000005C0A9: 02
	.short 0                                                   // 00000005C0AA: 0000
	.long 0xe6                                                 // 00000005C0AC: 000000E6
	.long 0                                                    // 00000005C0B0: 00000000
	.long 0x208                                                // 00000005C0B4: 00000208
	.ascii "1"                                                 // 00000005C0B8: 31
	.byte 0                                                    // 00000005C0B9: 00
	.short 0                                                   // 00000005C0BA: 0000
	.long 0                                                    // 00000005C0BC: 00000000
	.long 0x1d2                                                // 00000005C0C0: 000001D2
	.long 0x1c9                                                // 00000005C0C4: 000001C9
	.long 0                                                    // 00000005C0C8: 00000000
	.long 0x1ae                                                // 00000005C0CC: 000001AE
	.ascii "{"                                                 // 00000005C0D0: 7B
	.byte 0                                                    // 00000005C0D1: 00
	.short 0                                                   // 00000005C0D2: 0000
	.long 0                                                    // 00000005C0D4: 00000000
	.long 0                                                    // 00000005C0D8: 00000000
	.long 0xd                                                  // 00000005C0DC: 0000000D
	.long 0                                                    // 00000005C0E0: 00000000
	.long 0                                                    // 00000005C0E4: 00000000
	.long 0                                                    // 00000005C0E8: 00000000
	.long 0                                                    // 00000005C0EC: 00000000
	.long 0                                                    // 00000005C0F0: 00000000
	.long 0x1db                                                // 00000005C0F4: 000001DB
	.ascii ">"                                                 // 00000005C0F8: 3E
	.byte 0x2                                                  // 00000005C0F9: 02
	.short 0                                                   // 00000005C0FA: 0000
	.long 0x1d6                                                // 00000005C0FC: 000001D6
	.long 0                                                    // 00000005C100: 00000000
	.ascii "H"                                                 // 00000005C104: 48
	.byte 0x2                                                  // 00000005C105: 02
	.short 0                                                   // 00000005C106: 0000
	.long 0                                                    // 00000005C108: 00000000
	.long 0                                                    // 00000005C10C: 00000000
	.ascii "f"                                                 // 00000005C110: 66
	.byte 0                                                    // 00000005C111: 00
	.short 0                                                   // 00000005C112: 0000
	.long 0x1e                                                 // 00000005C114: 0000001E
	.long 0x1f8                                                // 00000005C118: 000001F8
	.long 0                                                    // 00000005C11C: 00000000
	.ascii "+"                                                 // 00000005C120: 2B
	.byte 0x1                                                  // 00000005C121: 01
	.short 0                                                   // 00000005C122: 0000
	.long 0                                                    // 00000005C124: 00000000
	.long 0x85                                                 // 00000005C128: 00000085
	.ascii "."                                                 // 00000005C12C: 2E
	.byte 0x2                                                  // 00000005C12D: 02
	.short 0                                                   // 00000005C12E: 0000
	.long 0xfc                                                 // 00000005C130: 000000FC
	.ascii "L"                                                 // 00000005C134: 4C
	.byte 0x1                                                  // 00000005C135: 01
	.short 0                                                   // 00000005C136: 0000
	.long 0                                                    // 00000005C138: 00000000
	.ascii "&"                                                 // 00000005C13C: 26
	.byte 0x2                                                  // 00000005C13D: 02
	.short 0                                                   // 00000005C13E: 0000
	.long 0                                                    // 00000005C140: 00000000
	.ascii "o"                                                 // 00000005C144: 6F
	.byte 0x1                                                  // 00000005C145: 01
	.short 0                                                   // 00000005C146: 0000
	.long 0x1ce                                                // 00000005C148: 000001CE
	.long 0x110                                                // 00000005C14C: 00000110
	.ascii "g"                                                 // 00000005C150: 67
	.byte 0                                                    // 00000005C151: 00
	.short 0                                                   // 00000005C152: 0000
	.long 0x21f                                                // 00000005C154: 0000021F
	.ascii "/"                                                 // 00000005C158: 2F
	.byte 0x1                                                  // 00000005C159: 01
	.short 0                                                   // 00000005C15A: 0000
	.long 0x1e9                                                // 00000005C15C: 000001E9
	.ascii "z"                                                 // 00000005C160: 7A
	.byte 0                                                    // 00000005C161: 00
	.short 0                                                   // 00000005C162: 0000
	.long 0                                                    // 00000005C164: 00000000
	.long 0                                                    // 00000005C168: 00000000
	.long 0xdc                                                 // 00000005C16C: 000000DC
	.long 0x1de                                                // 00000005C170: 000001DE
	.long 0x1d0                                                // 00000005C174: 000001D0
	.long 0                                                    // 00000005C178: 00000000
	.long 0                                                    // 00000005C17C: 00000000
	.ascii "X"                                                 // 00000005C180: 58
	.byte 0                                                    // 00000005C181: 00
	.short 0                                                   // 00000005C182: 0000
	.long 0                                                    // 00000005C184: 00000000
	.long 0x107                                                // 00000005C188: 00000107
	.ascii "u"                                                 // 00000005C18C: 75
	.byte 0                                                    // 00000005C18D: 00
	.short 0                                                   // 00000005C18E: 0000
	.long 0                                                    // 00000005C190: 00000000
	.long 0x19f                                                // 00000005C194: 0000019F
	.ascii "j"                                                 // 00000005C198: 6A
	.byte 0x1                                                  // 00000005C199: 01
	.short 0                                                   // 00000005C19A: 0000
	.long 0x1bb                                                // 00000005C19C: 000001BB
	.long 0xd3                                                 // 00000005C1A0: 000000D3
	.ascii "#"                                                 // 00000005C1A4: 23
	.byte 0                                                    // 00000005C1A5: 00
	.short 0                                                   // 00000005C1A6: 0000
	.long 0x1c5                                                // 00000005C1A8: 000001C5
	.ascii "t"                                                 // 00000005C1AC: 74
	.byte 0                                                    // 00000005C1AD: 00
	.short 0                                                   // 00000005C1AE: 0000
	.long 0                                                    // 00000005C1B0: 00000000
	.long 0                                                    // 00000005C1B4: 00000000
	.long 0                                                    // 00000005C1B8: 00000000
	.long 0                                                    // 00000005C1BC: 00000000
	.long 0x3                                                  // 00000005C1C0: 00000003
	.long 0x1ec                                                // 00000005C1C4: 000001EC
	.long 0                                                    // 00000005C1C8: 00000000
	.long 0                                                    // 00000005C1CC: 00000000
	.long 0                                                    // 00000005C1D0: 00000000
	.ascii "W"                                                 // 00000005C1D4: 57
	.byte 0                                                    // 00000005C1D5: 00
	.short 0                                                   // 00000005C1D6: 0000
	.long 0                                                    // 00000005C1D8: 00000000
	.ascii "u"                                                 // 00000005C1DC: 75
	.byte 0x1                                                  // 00000005C1DD: 01
	.short 0                                                   // 00000005C1DE: 0000
	.long 0                                                    // 00000005C1E0: 00000000
	.long 0xf                                                  // 00000005C1E4: 0000000F
	.long 0x211                                                // 00000005C1E8: 00000211
	.long 0                                                    // 00000005C1EC: 00000000
	.long 0xd7                                                 // 00000005C1F0: 000000D7
	.long 0x187                                                // 00000005C1F4: 00000187
	.long 0x218                                                // 00000005C1F8: 00000218
	.long 0                                                    // 00000005C1FC: 00000000
	.long 0x1c2                                                // 00000005C200: 000001C2
	.long 0                                                    // 00000005C204: 00000000
	.long 0                                                    // 00000005C208: 00000000
	.long 0                                                    // 00000005C20C: 00000000
	.long 0                                                    // 00000005C210: 00000000
	.long 0x1e4                                                // 00000005C214: 000001E4
	.long 0x1e8                                                // 00000005C218: 000001E8
	.long 0                                                    // 00000005C21C: 00000000
	.ascii "$"                                                 // 00000005C220: 24
	.byte 0                                                    // 00000005C221: 00
	.short 0                                                   // 00000005C222: 0000
	.long 0                                                    // 00000005C224: 00000000
	.long 0                                                    // 00000005C228: 00000000
	.long 0x1a6                                                // 00000005C22C: 000001A6
	.long 0xad                                                 // 00000005C230: 000000AD
	.ascii "I"                                                 // 00000005C234: 49
	.byte 0x2                                                  // 00000005C235: 02
	.short 0                                                   // 00000005C236: 0000
	.long 0                                                    // 00000005C238: 00000000
	.long 0                                                    // 00000005C23C: 00000000
	.long 0x21b                                                // 00000005C240: 0000021B
	.long 0x10e                                                // 00000005C244: 0000010E
	.long 0x1d7                                                // 00000005C248: 000001D7
	.ascii "'"                                                 // 00000005C24C: 27
	.byte 0                                                    // 00000005C24D: 00
	.short 0                                                   // 00000005C24E: 0000
	.ascii "2"                                                 // 00000005C250: 32
	.byte 0x1                                                  // 00000005C251: 01
	.short 0                                                   // 00000005C252: 0000
	.ascii "s"                                                 // 00000005C254: 73
	.byte 0x1                                                  // 00000005C255: 01
	.short 0                                                   // 00000005C256: 0000
	.long 0                                                    // 00000005C258: 00000000
	.ascii "\""                                                // 00000005C25C: 22
	.byte 0                                                    // 00000005C25D: 00
	.short 0                                                   // 00000005C25E: 0000
	.long 0                                                    // 00000005C260: 00000000
	.long 0x189                                                // 00000005C264: 00000189
	.long 0                                                    // 00000005C268: 00000000
	.long 0x210                                                // 00000005C26C: 00000210
	.long 0x1e5                                                // 00000005C270: 000001E5
	.long 0x194                                                // 00000005C274: 00000194
	.long 0x19e                                                // 00000005C278: 0000019E
	.ascii "r"                                                 // 00000005C27C: 72
	.byte 0                                                    // 00000005C27D: 00
	.short 0                                                   // 00000005C27E: 0000
	.long 0                                                    // 00000005C280: 00000000
	.ascii "k"                                                 // 00000005C284: 6B
	.byte 0                                                    // 00000005C285: 00
	.short 0                                                   // 00000005C286: 0000
	.long 0xac                                                 // 00000005C288: 000000AC
	.long 0xe1                                                 // 00000005C28C: 000000E1
	.long 0x1cb                                                // 00000005C290: 000001CB
	.long 0                                                    // 00000005C294: 00000000
	.long 0                                                    // 00000005C298: 00000000
	.long 0x1                                                  // 00000005C29C: 00000001
	.long 0                                                    // 00000005C2A0: 00000000
	.long 0x10c                                                // 00000005C2A4: 0000010C
	.ascii "j"                                                 // 00000005C2A8: 6A
	.byte 0                                                    // 00000005C2A9: 00
	.short 0                                                   // 00000005C2AA: 0000
	.long 0                                                    // 00000005C2AC: 00000000
	.long 0x1cf                                                // 00000005C2B0: 000001CF
	.long 0x188                                                // 00000005C2B4: 00000188
	.ascii "|"                                                 // 00000005C2B8: 7C
	.byte 0x1                                                  // 00000005C2B9: 01
	.short 0                                                   // 00000005C2BA: 0000
	.ascii "O"                                                 // 00000005C2BC: 4F
	.byte 0                                                    // 00000005C2BD: 00
	.short 0                                                   // 00000005C2BE: 0000
	.long 0xec                                                 // 00000005C2C0: 000000EC
	.long 0                                                    // 00000005C2C4: 00000000
	.long 0x1d9                                                // 00000005C2C8: 000001D9
	.long 0x1f9                                                // 00000005C2CC: 000001F9
	.long 0x95                                                 // 00000005C2D0: 00000095
	.long 0xd1                                                 // 00000005C2D4: 000000D1
	.ascii "c"                                                 // 00000005C2D8: 63
	.byte 0x1                                                  // 00000005C2D9: 01
	.short 0                                                   // 00000005C2DA: 0000
	.ascii "E"                                                 // 00000005C2DC: 45
	.byte 0x2                                                  // 00000005C2DD: 02
	.short 0                                                   // 00000005C2DE: 0000
	.long 0                                                    // 00000005C2E0: 00000000
	.long 0                                                    // 00000005C2E4: 00000000
	.long 0x1dc                                                // 00000005C2E8: 000001DC
	.long 0                                                    // 00000005C2EC: 00000000
	.long 0x1f1                                                // 00000005C2F0: 000001F1
	.long 0                                                    // 00000005C2F4: 00000000
	.long 0x214                                                // 00000005C2F8: 00000214
	.long 0                                                    // 00000005C2FC: 00000000
	.long 0                                                    // 00000005C300: 00000000
	.ascii "["                                                 // 00000005C304: 5B
	.byte 0x1                                                  // 00000005C305: 01
	.short 0                                                   // 00000005C306: 0000
	.long 0                                                    // 00000005C308: 00000000
	.ascii "~"                                                 // 00000005C30C: 7E
	.byte 0x1                                                  // 00000005C30D: 01
	.short 0                                                   // 00000005C30E: 0000
	.long 0x217                                                // 00000005C310: 00000217
	.long 0                                                    // 00000005C314: 00000000
	.ascii "d"                                                 // 00000005C318: 64
	.byte 0x1                                                  // 00000005C319: 01
	.short 0                                                   // 00000005C31A: 0000
	.long 0x207                                                // 00000005C31C: 00000207
	.long 0                                                    // 00000005C320: 00000000
	.long 0                                                    // 00000005C324: 00000000
	.long 0x1dd                                                // 00000005C328: 000001DD
	.ascii "v"                                                 // 00000005C32C: 76
	.byte 0                                                    // 00000005C32D: 00
	.short 0                                                   // 00000005C32E: 0000
	.long 0                                                    // 00000005C330: 00000000
	.long 0                                                    // 00000005C334: 00000000
	.long 0x21e                                                // 00000005C338: 0000021E
	.long 0                                                    // 00000005C33C: 00000000
	.long 0                                                    // 00000005C340: 00000000
	.ascii "+"                                                 // 00000005C344: 2B
	.byte 0                                                    // 00000005C345: 00
	.short 0                                                   // 00000005C346: 0000
	.long 0                                                    // 00000005C348: 00000000
	.long 0                                                    // 00000005C34C: 00000000
	.long 0x1bf                                                // 00000005C350: 000001BF
	.ascii "<"                                                 // 00000005C354: 3C
	.byte 0x2                                                  // 00000005C355: 02
	.short 0                                                   // 00000005C356: 0000
	.long 0x8a                                                 // 00000005C358: 0000008A
	.long 0xa3                                                 // 00000005C35C: 000000A3
	.long 0x21d                                                // 00000005C360: 0000021D
	.long 0xfe                                                 // 00000005C364: 000000FE
	.long 0x13                                                 // 00000005C368: 00000013
	.ascii "m"                                                 // 00000005C36C: 6D
	.byte 0                                                    // 00000005C36D: 00
	.short 0                                                   // 00000005C36E: 0000
	.ascii "D"                                                 // 00000005C370: 44
	.byte 0                                                    // 00000005C371: 00
	.short 0                                                   // 00000005C372: 0000
	.long 0                                                    // 00000005C374: 00000000
	.long 0xf5                                                 // 00000005C378: 000000F5
	.long 0                                                    // 00000005C37C: 00000000
	.long 0                                                    // 00000005C380: 00000000
	.ascii "}"                                                 // 00000005C384: 7D
	.byte 0x1                                                  // 00000005C385: 01
	.short 0                                                   // 00000005C386: 0000
	.long 0                                                    // 00000005C388: 00000000
	.ascii "k"                                                 // 00000005C38C: 6B
	.byte 0x1                                                  // 00000005C38D: 01
	.short 0                                                   // 00000005C38E: 0000
	.long 0xfb                                                 // 00000005C390: 000000FB
	.long 0x9b                                                 // 00000005C394: 0000009B
	.long 0xc4                                                 // 00000005C398: 000000C4
	.ascii "J"                                                 // 00000005C39C: 4A
	.byte 0x1                                                  // 00000005C39D: 01
	.short 0                                                   // 00000005C39E: 0000
	.long 0                                                    // 00000005C3A0: 00000000
	.long 0x18f                                                // 00000005C3A4: 0000018F
	.ascii "v"                                                 // 00000005C3A8: 76
	.byte 0x1                                                  // 00000005C3A9: 01
	.short 0                                                   // 00000005C3AA: 0000
	.long 0x198                                                // 00000005C3AC: 00000198
	.long 0                                                    // 00000005C3B0: 00000000
	.long 0x1c6                                                // 00000005C3B4: 000001C6
	.long 0                                                    // 00000005C3B8: 00000000
	.ascii "N"                                                 // 00000005C3BC: 4E
	.byte 0x2                                                  // 00000005C3BD: 02
	.short 0                                                   // 00000005C3BE: 0000
	.long 0x182                                                // 00000005C3C0: 00000182
	.ascii "x"                                                 // 00000005C3C4: 78
	.byte 0                                                    // 00000005C3C5: 00
	.short 0                                                   // 00000005C3C6: 0000
	.long 0                                                    // 00000005C3C8: 00000000
	.long 0x213                                                // 00000005C3CC: 00000213
	.long 0xc1                                                 // 00000005C3D0: 000000C1
	.long 0                                                    // 00000005C3D4: 00000000
	.long 0x1c                                                 // 00000005C3D8: 0000001C
	.long 0x116                                                // 00000005C3DC: 00000116
	.long 0x1ad                                                // 00000005C3E0: 000001AD
	.ascii "M"                                                 // 00000005C3E4: 4D
	.byte 0x1                                                  // 00000005C3E5: 01
	.short 0                                                   // 00000005C3E6: 0000
	.long 0x1e2                                                // 00000005C3E8: 000001E2
	.long 0                                                    // 00000005C3EC: 00000000
	.long 0                                                    // 00000005C3F0: 00000000
	.long 0x185                                                // 00000005C3F4: 00000185
	.long 0x10f                                                // 00000005C3F8: 0000010F
	.long 0x1e0                                                // 00000005C3FC: 000001E0
	.long 0                                                    // 00000005C400: 00000000
	.long 0x115                                                // 00000005C404: 00000115
	.long 0x94                                                 // 00000005C408: 00000094
	.long 0                                                    // 00000005C40C: 00000000
	.long 0x1cc                                                // 00000005C410: 000001CC
	.long 0                                                    // 00000005C414: 00000000
	.ascii "V"                                                 // 00000005C418: 56
	.byte 0                                                    // 00000005C419: 00
	.short 0                                                   // 00000005C41A: 0000
	.ascii "8"                                                 // 00000005C41C: 38
	.byte 0                                                    // 00000005C41D: 00
	.short 0                                                   // 00000005C41E: 0000
	.long 0                                                    // 00000005C420: 00000000
	.long 0                                                    // 00000005C424: 00000000
	.ascii "$"                                                 // 00000005C428: 24
	.byte 0x1                                                  // 00000005C429: 01
	.short 0                                                   // 00000005C42A: 0000
	.long 0                                                    // 00000005C42C: 00000000
	.long 0x195                                                // 00000005C430: 00000195
	.long 0                                                    // 00000005C434: 00000000
	.ascii "f"                                                 // 00000005C438: 66
	.byte 0x1                                                  // 00000005C439: 01
	.short 0                                                   // 00000005C43A: 0000
	.ascii "D"                                                 // 00000005C43C: 44
	.byte 0x2                                                  // 00000005C43D: 02
	.short 0                                                   // 00000005C43E: 0000
	.long 0                                                    // 00000005C440: 00000000
	.long 0xe9                                                 // 00000005C444: 000000E9
	.long 0                                                    // 00000005C448: 00000000
	.long 0x119                                                // 00000005C44C: 00000119
	.long 0                                                    // 00000005C450: 00000000
	.long 0x1a8                                                // 00000005C454: 000001A8
	.ascii "!"                                                 // 00000005C458: 21
	.byte 0x2                                                  // 00000005C459: 02
	.short 0                                                   // 00000005C45A: 0000
	.long 0x1ee                                                // 00000005C45C: 000001EE
	.long 0                                                    // 00000005C460: 00000000
	.long 0                                                    // 00000005C464: 00000000
	.long 0                                                    // 00000005C468: 00000000
	.long 0x8d                                                 // 00000005C46C: 0000008D
	.ascii "S"                                                 // 00000005C470: 53
	.byte 0x1                                                  // 00000005C471: 01
	.short 0                                                   // 00000005C472: 0000
	.ascii "\""                                                // 00000005C474: 22
	.byte 0x2                                                  // 00000005C475: 02
	.short 0                                                   // 00000005C476: 0000
	.long 0                                                    // 00000005C478: 00000000
	.long 0                                                    // 00000005C47C: 00000000
	.long 0                                                    // 00000005C480: 00000000
	.long 0x1b0                                                // 00000005C484: 000001B0
	.long 0                                                    // 00000005C488: 00000000
	.long 0                                                    // 00000005C48C: 00000000
	.ascii "@"                                                 // 00000005C490: 40
	.byte 0x2                                                  // 00000005C491: 02
	.short 0                                                   // 00000005C492: 0000
	.long 0                                                    // 00000005C494: 00000000
	.long 0x19c                                                // 00000005C498: 0000019C
	.long 0                                                    // 00000005C49C: 00000000
	.long 0x20c                                                // 00000005C4A0: 0000020C
	.long 0                                                    // 00000005C4A4: 00000000
	.ascii "+"                                                 // 00000005C4A8: 2B
	.byte 0x2                                                  // 00000005C4A9: 02
	.short 0                                                   // 00000005C4AA: 0000
	.ascii "^"                                                 // 00000005C4AC: 5E
	.byte 0x1                                                  // 00000005C4AD: 01
	.short 0                                                   // 00000005C4AE: 0000
	.long 0                                                    // 00000005C4B0: 00000000
	.long 0x20e                                                // 00000005C4B4: 0000020E
	.long 0x192                                                // 00000005C4B8: 00000192
	.long 0xd4                                                 // 00000005C4BC: 000000D4
	.ascii "h"                                                 // 00000005C4C0: 68
	.byte 0x1                                                  // 00000005C4C1: 01
	.short 0                                                   // 00000005C4C2: 0000
	.long 0x89                                                 // 00000005C4C4: 00000089
	.long 0x1a1                                                // 00000005C4C8: 000001A1
	.long 0x1fc                                                // 00000005C4CC: 000001FC
	.ascii "6"                                                 // 00000005C4D0: 36
	.byte 0x2                                                  // 00000005C4D1: 02
	.short 0                                                   // 00000005C4D2: 0000
	.ascii "6"                                                 // 00000005C4D4: 36
	.byte 0x1                                                  // 00000005C4D5: 01
	.short 0                                                   // 00000005C4D6: 0000
	.ascii "/"                                                 // 00000005C4D8: 2F
	.byte 0x2                                                  // 00000005C4D9: 02
	.short 0                                                   // 00000005C4DA: 0000
	.ascii "N"                                                 // 00000005C4DC: 4E
	.byte 0                                                    // 00000005C4DD: 00
	.short 0                                                   // 00000005C4DE: 0000
	.long 0xf6                                                 // 00000005C4E0: 000000F6
	.long 0                                                    // 00000005C4E4: 00000000
	.ascii "0"                                                 // 00000005C4E8: 30
	.byte 0x2                                                  // 00000005C4E9: 02
	.short 0                                                   // 00000005C4EA: 0000
	.long 0                                                    // 00000005C4EC: 00000000
	.long 0                                                    // 00000005C4F0: 00000000
	.long 0x1ea                                                // 00000005C4F4: 000001EA
	.long 0x1bc                                                // 00000005C4F8: 000001BC
	.long 0x19d                                                // 00000005C4FC: 0000019D
	.ascii "B"                                                 // 00000005C500: 42
	.byte 0x1                                                  // 00000005C501: 01
	.short 0                                                   // 00000005C502: 0000
	.ascii "Y"                                                 // 00000005C504: 59
	.byte 0                                                    // 00000005C505: 00
	.short 0                                                   // 00000005C506: 0000
	.ascii "t"                                                 // 00000005C508: 74
	.byte 0x1                                                  // 00000005C509: 01
	.short 0                                                   // 00000005C50A: 0000
	.ascii "1"                                                 // 00000005C50C: 31
	.byte 0x1                                                  // 00000005C50D: 01
	.short 0                                                   // 00000005C50E: 0000
	.long 0x206                                                // 00000005C510: 00000206
	.ascii "M"                                                 // 00000005C514: 4D
	.byte 0x2                                                  // 00000005C515: 02
	.short 0                                                   // 00000005C516: 0000
	.long 0                                                    // 00000005C518: 00000000
	.long 0                                                    // 00000005C51C: 00000000
	.long 0                                                    // 00000005C520: 00000000
	.long 0x111                                                // 00000005C524: 00000111
	.long 0                                                    // 00000005C528: 00000000
	.long 0                                                    // 00000005C52C: 00000000
	.long 0x180                                                // 00000005C530: 00000180
	.long 0xe3                                                 // 00000005C534: 000000E3
	.long 0x1f5                                                // 00000005C538: 000001F5
	.long 0                                                    // 00000005C53C: 00000000
	.long 0                                                    // 00000005C540: 00000000
	.long 0xf3                                                 // 00000005C544: 000000F3
	.long 0                                                    // 00000005C548: 00000000
	.long 0xda                                                 // 00000005C54C: 000000DA
	.long 0x11                                                 // 00000005C550: 00000011
	.long 0x1c7                                                // 00000005C554: 000001C7
	.ascii "U"                                                 // 00000005C558: 55
	.byte 0x1                                                  // 00000005C559: 01
	.short 0                                                   // 00000005C55A: 0000
	.ascii "`"                                                 // 00000005C55C: 60
	.byte 0                                                    // 00000005C55D: 00
	.short 0                                                   // 00000005C55E: 0000
	.long 0                                                    // 00000005C560: 00000000
	.long 0                                                    // 00000005C564: 00000000
	.ascii " "                                                 // 00000005C568: 20
	.byte 0x1                                                  // 00000005C569: 01
	.short 0                                                   // 00000005C56A: 0000
	.long 0                                                    // 00000005C56C: 00000000
	.long 0x1fd                                                // 00000005C570: 000001FD
	.long 0                                                    // 00000005C574: 00000000
	.long 0x92                                                 // 00000005C578: 00000092
	.long 0                                                    // 00000005C57C: 00000000
	.long 0x18c                                                // 00000005C580: 0000018C
	.ascii "8"                                                 // 00000005C584: 38
	.byte 0x2                                                  // 00000005C585: 02
	.short 0                                                   // 00000005C586: 0000
	.long 0xbb                                                 // 00000005C588: 000000BB
	.long 0                                                    // 00000005C58C: 00000000
	.long 0                                                    // 00000005C590: 00000000
	.ascii "("                                                 // 00000005C594: 28
	.byte 0x2                                                  // 00000005C595: 02
	.short 0                                                   // 00000005C596: 0000
	.long 0                                                    // 00000005C598: 00000000
	.long 0                                                    // 00000005C59C: 00000000
	.long 0                                                    // 00000005C5A0: 00000000
	.long 0x9c                                                 // 00000005C5A4: 0000009C
	.long 0x1b7                                                // 00000005C5A8: 000001B7
	.ascii "7"                                                 // 00000005C5AC: 37
	.byte 0                                                    // 00000005C5AD: 00
	.short 0                                                   // 00000005C5AE: 0000
	.long 0                                                    // 00000005C5B0: 00000000
	.long 0x200                                                // 00000005C5B4: 00000200
	.long 0x204                                                // 00000005C5B8: 00000204
	.ascii "n"                                                 // 00000005C5BC: 6E
	.byte 0                                                    // 00000005C5BD: 00
	.short 0                                                   // 00000005C5BE: 0000
	.long 0x8e                                                 // 00000005C5C0: 0000008E
	.ascii "O"                                                 // 00000005C5C4: 4F
	.byte 0x2                                                  // 00000005C5C5: 02
	.short 0                                                   // 00000005C5C6: 0000
	.long 0x11d                                                // 00000005C5C8: 0000011D
	.long 0x118                                                // 00000005C5CC: 00000118
	.long 0                                                    // 00000005C5D0: 00000000
	.long 0                                                    // 00000005C5D4: 00000000
	.long 0                                                    // 00000005C5D8: 00000000
	.ascii "2"                                                 // 00000005C5DC: 32
	.byte 0x2                                                  // 00000005C5DD: 02
	.short 0                                                   // 00000005C5DE: 0000
	.long 0                                                    // 00000005C5E0: 00000000
	.long 0                                                    // 00000005C5E4: 00000000
	.ascii "K"                                                 // 00000005C5E8: 4B
	.byte 0x1                                                  // 00000005C5E9: 01
	.short 0                                                   // 00000005C5EA: 0000
	.long 0x17                                                 // 00000005C5EC: 00000017
	.long 0xc3                                                 // 00000005C5F0: 000000C3
	.ascii "R"                                                 // 00000005C5F4: 52
	.byte 0                                                    // 00000005C5F5: 00
	.short 0                                                   // 00000005C5F6: 0000
	.long 0                                                    // 00000005C5F8: 00000000
	.ascii "#"                                                 // 00000005C5FC: 23
	.byte 0x1                                                  // 00000005C5FD: 01
	.short 0                                                   // 00000005C5FE: 0000
	.ascii "Q"                                                 // 00000005C600: 51
	.byte 0x1                                                  // 00000005C601: 01
	.short 0                                                   // 00000005C602: 0000
	.long 0x1d5                                                // 00000005C604: 000001D5
	.long 0x1b8                                                // 00000005C608: 000001B8
	.long 0x1b1                                                // 00000005C60C: 000001B1
	.long 0                                                    // 00000005C610: 00000000
	.ascii "l"                                                 // 00000005C614: 6C
	.byte 0                                                    // 00000005C615: 00
	.short 0                                                   // 00000005C616: 0000
	.long 0x19b                                                // 00000005C618: 0000019B
	.long 0xf2                                                 // 00000005C61C: 000000F2
	.long 0x1d4                                                // 00000005C620: 000001D4
	.long 0x83                                                 // 00000005C624: 00000083
	.long 0xd9                                                 // 00000005C628: 000000D9
	.long 0                                                    // 00000005C62C: 00000000
	.long 0                                                    // 00000005C630: 00000000
	.long 0x16                                                 // 00000005C634: 00000016
	.long 0x108                                                // 00000005C638: 00000108
	.long 0x1ed                                                // 00000005C63C: 000001ED
	.long 0x88                                                 // 00000005C640: 00000088
	.ascii "e"                                                 // 00000005C644: 65
	.byte 0x1                                                  // 00000005C645: 01
	.short 0                                                   // 00000005C646: 0000
	.long 0x1a3                                                // 00000005C648: 000001A3
	.ascii "5"                                                 // 00000005C64C: 35
	.byte 0x2                                                  // 00000005C64D: 02
	.short 0                                                   // 00000005C64E: 0000
	.long 0                                                    // 00000005C650: 00000000
	.ascii "A"                                                 // 00000005C654: 41
	.byte 0x2                                                  // 00000005C655: 02
	.short 0                                                   // 00000005C656: 0000
	.long 0x1b6                                                // 00000005C658: 000001B6
	.long 0                                                    // 00000005C65C: 00000000
	.long 0                                                    // 00000005C660: 00000000
	.ascii "]"                                                 // 00000005C664: 5D
	.byte 0x1                                                  // 00000005C665: 01
	.short 0                                                   // 00000005C666: 0000
	.long 0                                                    // 00000005C668: 00000000
	.long 0                                                    // 00000005C66C: 00000000
	.ascii "G"                                                 // 00000005C670: 47
	.byte 0x1                                                  // 00000005C671: 01
	.short 0                                                   // 00000005C672: 0000
	.ascii "9"                                                 // 00000005C674: 39
	.byte 0x2                                                  // 00000005C675: 02
	.short 0                                                   // 00000005C676: 0000
	.long 0                                                    // 00000005C678: 00000000
	.long 0                                                    // 00000005C67C: 00000000
	.long 0                                                    // 00000005C680: 00000000
	.ascii "X"                                                 // 00000005C684: 58
	.byte 0x1                                                  // 00000005C685: 01
	.short 0                                                   // 00000005C686: 0000
	.long 0x1d8                                                // 00000005C688: 000001D8
	.long 0                                                    // 00000005C68C: 00000000
	.long 0x1be                                                // 00000005C690: 000001BE
	.long 0x1ca                                                // 00000005C694: 000001CA
	.ascii "R"                                                 // 00000005C698: 52
	.byte 0x2                                                  // 00000005C699: 02
	.short 0                                                   // 00000005C69A: 0000
	.long 0                                                    // 00000005C69C: 00000000
	.ascii "K"                                                 // 00000005C6A0: 4B
	.byte 0                                                    // 00000005C6A1: 00
	.short 0                                                   // 00000005C6A2: 0000
	.ascii ">"                                                 // 00000005C6A4: 3E
	.byte 0                                                    // 00000005C6A5: 00
	.short 0                                                   // 00000005C6A6: 0000
	.long 0x1fe                                                // 00000005C6A8: 000001FE
	.ascii "|"                                                 // 00000005C6AC: 7C
	.byte 0                                                    // 00000005C6AD: 00
	.short 0                                                   // 00000005C6AE: 0000
	.ascii "p"                                                 // 00000005C6B0: 70
	.byte 0x1                                                  // 00000005C6B1: 01
	.short 0                                                   // 00000005C6B2: 0000
	.long 0xc8                                                 // 00000005C6B4: 000000C8
	.long 0xb                                                  // 00000005C6B8: 0000000B
	.long 0x1f                                                 // 00000005C6BC: 0000001F
	.long 0xb9                                                 // 00000005C6C0: 000000B9
	.long 0xb4                                                 // 00000005C6C4: 000000B4
	.long 0x1b4                                                // 00000005C6C8: 000001B4
	.long 0                                                    // 00000005C6CC: 00000000
	.long 0x21c                                                // 00000005C6D0: 0000021C
	.long 0x215                                                // 00000005C6D4: 00000215
	.long 0                                                    // 00000005C6D8: 00000000
	.long 0x1e6                                                // 00000005C6DC: 000001E6
	.ascii "\n"                                                // 00000005C6E0: 0A
	.byte 0x2                                                  // 00000005C6E1: 02
	.short 0                                                   // 00000005C6E2: 0000
	.ascii "b"                                                 // 00000005C6E4: 62
	.byte 0x1                                                  // 00000005C6E5: 01
	.short 0                                                   // 00000005C6E6: 0000
	.long 0x20d                                                // 00000005C6E8: 0000020D
	.long 0x219                                                // 00000005C6EC: 00000219
	.long 0x1a                                                 // 00000005C6F0: 0000001A
	.long 0                                                    // 00000005C6F4: 00000000
	.long 0                                                    // 00000005C6F8: 00000000
	.long 0xb5                                                 // 00000005C6FC: 000000B5
	.long 0xaf                                                 // 00000005C700: 000000AF
	.long 0x10d                                                // 00000005C704: 0000010D
	.long 0x9a                                                 // 00000005C708: 0000009A
	.long 0x1e7                                                // 00000005C70C: 000001E7
	.long 0x91                                                 // 00000005C710: 00000091
	.long 0xb7                                                 // 00000005C714: 000000B7
	.long 0x1f0                                                // 00000005C718: 000001F0
	.long 0                                                    // 00000005C71C: 00000000
	.long 0                                                    // 00000005C720: 00000000
	.ascii "\\"                                                // 00000005C724: 5C
	.byte 0x1                                                  // 00000005C725: 01
	.short 0                                                   // 00000005C726: 0000
	.long 0x18d                                                // 00000005C728: 0000018D
	.long 0x11e                                                // 00000005C72C: 0000011E
	.long 0                                                    // 00000005C730: 00000000
	.long 0                                                    // 00000005C734: 00000000
	.ascii ","                                                 // 00000005C738: 2C
	.byte 0x2                                                  // 00000005C739: 02
	.short 0                                                   // 00000005C73A: 0000
	.ascii "&"                                                 // 00000005C73C: 26
	.byte 0                                                    // 00000005C73D: 00
	.short 0                                                   // 00000005C73E: 0000
	.ascii "i"                                                 // 00000005C740: 69
	.byte 0                                                    // 00000005C741: 00
	.short 0                                                   // 00000005C742: 0000
	.ascii "@"                                                 // 00000005C744: 40
	.byte 0x1                                                  // 00000005C745: 01
	.short 0                                                   // 00000005C746: 0000
	.long 0                                                    // 00000005C748: 00000000
	.long 0x18e                                                // 00000005C74C: 0000018E
	.ascii "B"                                                 // 00000005C750: 42
	.byte 0x2                                                  // 00000005C751: 02
	.short 0                                                   // 00000005C752: 0000
	.long 0                                                    // 00000005C754: 00000000
	.long 0xf9                                                 // 00000005C758: 000000F9
	.ascii ")"                                                 // 00000005C75C: 29
	.byte 0                                                    // 00000005C75D: 00
	.short 0                                                   // 00000005C75E: 0000
	.ascii "/"                                                 // 00000005C760: 2F
	.byte 0                                                    // 00000005C761: 00
	.short 0                                                   // 00000005C762: 0000
	.long 0                                                    // 00000005C764: 00000000
	.long 0xbc                                                 // 00000005C768: 000000BC
	.long 0x1a5                                                // 00000005C76C: 000001A5
	.ascii "	"                                                 // 00000005C770: 09
	.byte 0x2                                                  // 00000005C771: 02
	.short 0                                                   // 00000005C772: 0000
	.long 0                                                    // 00000005C774: 00000000
	.long 0                                                    // 00000005C778: 00000000
	.long 0x1d                                                 // 00000005C77C: 0000001D
	.long 0                                                    // 00000005C780: 00000000
	.long 0x1da                                                // 00000005C784: 000001DA
	.long 0x20b                                                // 00000005C788: 0000020B
	.ascii "m"                                                 // 00000005C78C: 6D
	.byte 0x1                                                  // 00000005C78D: 01
	.short 0                                                   // 00000005C78E: 0000
	.ascii "*"                                                 // 00000005C790: 2A
	.byte 0x2                                                  // 00000005C791: 02
	.short 0                                                   // 00000005C792: 0000
	.long 0x20f                                                // 00000005C794: 0000020F
	.long 0x84                                                 // 00000005C798: 00000084
	.ascii "F"                                                 // 00000005C79C: 46
	.byte 0                                                    // 00000005C79D: 00
	.short 0                                                   // 00000005C79E: 0000
	.long 0                                                    // 00000005C7A0: 00000000
	.long 0xd6                                                 // 00000005C7A4: 000000D6
	.ascii "H"                                                 // 00000005C7A8: 48
	.byte 0                                                    // 00000005C7A9: 00
	.short 0                                                   // 00000005C7AA: 0000
	.long 0                                                    // 00000005C7AC: 00000000
	.long 0xcb                                                 // 00000005C7B0: 000000CB
	.long 0x1ab                                                // 00000005C7B4: 000001AB
	.long 0x1c8                                                // 00000005C7B8: 000001C8
	.long 0                                                    // 00000005C7BC: 00000000
	.long 0x21a                                                // 00000005C7C0: 0000021A
	.long 0                                                    // 00000005C7C4: 00000000
	.ascii "^"                                                 // 00000005C7C8: 5E
	.byte 0                                                    // 00000005C7C9: 00
	.short 0                                                   // 00000005C7CA: 0000
	.long 0                                                    // 00000005C7CC: 00000000
	.long 0                                                    // 00000005C7D0: 00000000
	.long 0                                                    // 00000005C7D4: 00000000
	.ascii "L"                                                 // 00000005C7D8: 4C
	.byte 0x2                                                  // 00000005C7D9: 02
	.short 0                                                   // 00000005C7DA: 0000
	.ascii "F"                                                 // 00000005C7DC: 46
	.byte 0x2                                                  // 00000005C7DD: 02
	.short 0                                                   // 00000005C7DE: 0000
	.long 0                                                    // 00000005C7E0: 00000000
	.ascii "\""                                                // 00000005C7E4: 22
	.byte 0x1                                                  // 00000005C7E5: 01
	.short 0                                                   // 00000005C7E6: 0000
	.ascii "_"                                                 // 00000005C7E8: 5F
	.byte 0x1                                                  // 00000005C7E9: 01
	.short 0                                                   // 00000005C7EA: 0000
	.long 0xd0                                                 // 00000005C7EC: 000000D0
	.long 0x1f2                                                // 00000005C7F0: 000001F2
	.long 0                                                    // 00000005C7F4: 00000000
	.ascii "I"                                                 // 00000005C7F8: 49
	.byte 0x1                                                  // 00000005C7F9: 01
	.short 0                                                   // 00000005C7FA: 0000
	.ascii "4"                                                 // 00000005C7FC: 34
	.byte 0x2                                                  // 00000005C7FD: 02
	.short 0                                                   // 00000005C7FE: 0000
	.ascii "H"                                                 // 00000005C800: 48
	.byte 0x1                                                  // 00000005C801: 01
	.short 0                                                   // 00000005C802: 0000
	.ascii "W"                                                 // 00000005C804: 57
	.byte 0x1                                                  // 00000005C805: 01
	.short 0                                                   // 00000005C806: 0000
	.long 0                                                    // 00000005C808: 00000000
	.ascii ")"                                                 // 00000005C80C: 29
	.byte 0x2                                                  // 00000005C80D: 02
	.short 0                                                   // 00000005C80E: 0000
	.long 0x202                                                // 00000005C810: 00000202
	.long 0                                                    // 00000005C814: 00000000
	.long 0                                                    // 00000005C818: 00000000
	.ascii " "                                                 // 00000005C81C: 20
	.byte 0x2                                                  // 00000005C81D: 02
	.short 0                                                   // 00000005C81E: 0000
	.long 0                                                    // 00000005C820: 00000000
	.long 0                                                    // 00000005C824: 00000000
	.long 0                                                    // 00000005C828: 00000000
	.long 0x1aa                                                // 00000005C82C: 000001AA
	.long 0xdf                                                 // 00000005C830: 000000DF
	.long 0x190                                                // 00000005C834: 00000190
	.long 0                                                    // 00000005C838: 00000000
	.long 0                                                    // 00000005C83C: 00000000
	.long 0x1a7                                                // 00000005C840: 000001A7
	.long 0x96                                                 // 00000005C844: 00000096
	.long 0x105                                                // 00000005C848: 00000105
	.long 0                                                    // 00000005C84C: 00000000
	.long 0                                                    // 00000005C850: 00000000
	.long 0                                                    // 00000005C854: 00000000
	.ascii "R"                                                 // 00000005C858: 52
	.byte 0x1                                                  // 00000005C859: 01
	.short 0                                                   // 00000005C85A: 0000
	.ascii ";"                                                 // 00000005C85C: 3B
	.byte 0x2                                                  // 00000005C85D: 02
	.short 0                                                   // 00000005C85E: 0000
	.ascii "w"                                                 // 00000005C860: 77
	.byte 0x1                                                  // 00000005C861: 01
	.short 0                                                   // 00000005C862: 0000
	.long 0                                                    // 00000005C864: 00000000
	.long 0x1df                                                // 00000005C868: 000001DF
	.long 0                                                    // 00000005C86C: 00000000
	.long 0                                                    // 00000005C870: 00000000
	.ascii "M"                                                 // 00000005C874: 4D
	.byte 0                                                    // 00000005C875: 00
	.short 0                                                   // 00000005C876: 0000
	.long 0                                                    // 00000005C878: 00000000
	.long 0x1e1                                                // 00000005C87C: 000001E1
	.long 0x197                                                // 00000005C880: 00000197
	.ascii "7"                                                 // 00000005C884: 37
	.byte 0x2                                                  // 00000005C885: 02
	.short 0                                                   // 00000005C886: 0000
	.ascii "C"                                                 // 00000005C888: 43
	.byte 0                                                    // 00000005C889: 00
	.short 0                                                   // 00000005C88A: 0000
	.long 0                                                    // 00000005C88C: 00000000
	.long 0x203                                                // 00000005C890: 00000203
	.long 0                                                    // 00000005C894: 00000000
	.long 0x1eb                                                // 00000005C898: 000001EB
	.ascii "\n"                                                // 00000005C89C: 0A
	.byte 0x1                                                  // 00000005C89D: 01
	.short 0                                                   // 00000005C89E: 0000
	.long 0x18a                                                // 00000005C8A0: 0000018A
	.long 0x1b9                                                // 00000005C8A4: 000001B9
	.ascii "g"                                                 // 00000005C8A8: 67
	.byte 0x1                                                  // 00000005C8A9: 01
	.short 0                                                   // 00000005C8AA: 0000
	.ascii "G"                                                 // 00000005C8AC: 47
	.byte 0x2                                                  // 00000005C8AD: 02
	.short 0                                                   // 00000005C8AE: 0000
	.ascii "-"                                                 // 00000005C8B0: 2D
	.byte 0x1                                                  // 00000005C8B1: 01
	.short 0                                                   // 00000005C8B2: 0000
	.long 0                                                    // 00000005C8B4: 00000000
	.ascii "r"                                                 // 00000005C8B8: 72
	.byte 0x1                                                  // 00000005C8B9: 01
	.short 0                                                   // 00000005C8BA: 0000
	.long 0                                                    // 00000005C8BC: 00000000
	.long 0                                                    // 00000005C8C0: 00000000
	.long 0xd5                                                 // 00000005C8C4: 000000D5
	.long 0x1f4                                                // 00000005C8C8: 000001F4
	.long 0x1f7                                                // 00000005C8CC: 000001F7
	.ascii "J"                                                 // 00000005C8D0: 4A
	.byte 0x2                                                  // 00000005C8D1: 02
	.short 0                                                   // 00000005C8D2: 0000
	.long 0                                                    // 00000005C8D4: 00000000
	.ascii "?"                                                 // 00000005C8D8: 3F
	.byte 0x2                                                  // 00000005C8D9: 02
	.short 0                                                   // 00000005C8DA: 0000
	.long 0x196                                                // 00000005C8DC: 00000196
	.long 0                                                    // 00000005C8E0: 00000000
	.long 0x1b5                                                // 00000005C8E4: 000001B5
	.long 0                                                    // 00000005C8E8: 00000000
	.ascii ":"                                                 // 00000005C8EC: 3A
	.byte 0x2                                                  // 00000005C8ED: 02
	.short 0                                                   // 00000005C8EE: 0000
	.long 0x11b                                                // 00000005C8F0: 0000011B
	.long 0                                                    // 00000005C8F4: 00000000
	.long 0                                                    // 00000005C8F8: 00000000
	.ascii "	"                                                 // 00000005C8FC: 09
	.byte 0x1                                                  // 00000005C8FD: 01
	.short 0                                                   // 00000005C8FE: 0000
	.ascii "!"                                                 // 00000005C900: 21
	.byte 0x1                                                  // 00000005C901: 01
	.short 0                                                   // 00000005C902: 0000
	.long 0x1b                                                 // 00000005C904: 0000001B
	.ascii "Q"                                                 // 00000005C908: 51
	.byte 0x2                                                  // 00000005C909: 02
	.short 0                                                   // 00000005C90A: 0000
	.long 0x1f3                                                // 00000005C90C: 000001F3
	.ascii ":"                                                 // 00000005C910: 3A
	.byte 0x1                                                  // 00000005C911: 01
	.short 0                                                   // 00000005C912: 0000
	.ascii "Z"                                                 // 00000005C914: 5A
	.byte 0x1                                                  // 00000005C915: 01
	.short 0                                                   // 00000005C916: 0000
	.long 0                                                    // 00000005C918: 00000000
	.long 0x101                                                // 00000005C91C: 00000101
	.ascii "K"                                                 // 00000005C920: 4B
	.byte 0x2                                                  // 00000005C921: 02
	.short 0                                                   // 00000005C922: 0000
	.long 0x1ff                                                // 00000005C924: 000001FF
	.long 0                                                    // 00000005C928: 00000000
	.ascii "*"                                                 // 00000005C92C: 2A
	.byte 0x1                                                  // 00000005C92D: 01
	.short 0                                                   // 00000005C92E: 0000
	.ascii "-"                                                 // 00000005C930: 2D
	.byte 0                                                    // 00000005C931: 00
	.short 0                                                   // 00000005C932: 0000
	.long 0                                                    // 00000005C934: 00000000
	.ascii "P"                                                 // 00000005C938: 50
	.byte 0x2                                                  // 00000005C939: 02
	.short 0                                                   // 00000005C93A: 0000
	.long 0                                                    // 00000005C93C: 00000000
	.long 0                                                    // 00000005C940: 00000000
	.ascii "l"                                                 // 00000005C944: 6C
	.byte 0x1                                                  // 00000005C945: 01
	.short 0                                                   // 00000005C946: 0000
	.long 0                                                    // 00000005C948: 00000000
	.long 0                                                    // 00000005C94C: 00000000
	.long 0x1a4                                                // 00000005C950: 000001A4
	.long 0x216                                                // 00000005C954: 00000216
	.long 0x205                                                // 00000005C958: 00000205
	.long 0x90                                                 // 00000005C95C: 00000090
	.long 0                                                    // 00000005C960: 00000000
	.long 0                                                    // 00000005C964: 00000000
	.ascii "1"                                                 // 00000005C968: 31
	.byte 0x2                                                  // 00000005C969: 02
	.short 0                                                   // 00000005C96A: 0000
	.ascii "$"                                                 // 00000005C96C: 24
	.byte 0x2                                                  // 00000005C96D: 02
	.short 0                                                   // 00000005C96E: 0000
	.long 0                                                    // 00000005C970: 00000000
	.long 0                                                    // 00000005C974: 00000000
	.long 0x1fa                                                // 00000005C978: 000001FA
	.long 0xc6                                                 // 00000005C97C: 000000C6
	.ascii "7"                                                 // 00000005C980: 37
	.byte 0x1                                                  // 00000005C981: 01
	.short 0                                                   // 00000005C982: 0000
	.long 0xa8                                                 // 00000005C984: 000000A8
	.long 0                                                    // 00000005C988: 00000000
	.long 0xf7                                                 // 00000005C98C: 000000F7
	.long 0                                                    // 00000005C990: 00000000
	.long 0                                                    // 00000005C994: 00000000
	.long 0x1ef                                                // 00000005C998: 000001EF
	.long 0                                                    // 00000005C99C: 00000000
	.long 0x1b2                                                // 00000005C9A0: 000001B2
	.long 0xa9                                                 // 00000005C9A4: 000000A9
	.long 0x1c3                                                // 00000005C9A8: 000001C3
	.long 0                                                    // 00000005C9AC: 00000000
	.long 0x104                                                // 00000005C9B0: 00000104
	.long 0                                                    // 00000005C9B4: 00000000
	.long 0                                                    // 00000005C9B8: 00000000
	.long 0                                                    // 00000005C9BC: 00000000
	.long 0                                                    // 00000005C9C0: 00000000
	.ascii "'"                                                 // 00000005C9C4: 27
	.byte 0x2                                                  // 00000005C9C5: 02
	.short 0                                                   // 00000005C9C6: 0000
	.ascii "="                                                 // 00000005C9C8: 3D
	.byte 0x2                                                  // 00000005C9C9: 02
	.short 0                                                   // 00000005C9CA: 0000
	.long 0x1e3                                                // 00000005C9CC: 000001E3
	.long 0                                                    // 00000005C9D0: 00000000
	.long 0                                                    // 00000005C9D4: 00000000
	.ascii "-"                                                 // 00000005C9D8: 2D
	.byte 0x2                                                  // 00000005C9D9: 02
	.short 0                                                   // 00000005C9DA: 0000
	.ascii "F"                                                 // 00000005C9DC: 46
	.byte 0x1                                                  // 00000005C9DD: 01
	.short 0                                                   // 00000005C9DE: 0000
	.long 0                                                    // 00000005C9E0: 00000000
	.long 0                                                    // 00000005C9E4: 00000000
	.ascii "D"                                                 // 00000005C9E8: 44
	.byte 0x1                                                  // 00000005C9E9: 01
	.short 0                                                   // 00000005C9EA: 0000
	.long 0                                                    // 00000005C9EC: 00000000
	.ascii "s"                                                 // 00000005C9F0: 73
	.byte 0                                                    // 00000005C9F1: 00
	.short 0                                                   // 00000005C9F2: 0000
	.long 0                                                    // 00000005C9F4: 00000000
	.long 0                                                    // 00000005C9F8: 00000000
	.long 0                                                    // 00000005C9FC: 00000000
	.long 0                                                    // 00000005CA00: 00000000
	.long 0                                                    // 00000005CA04: 00000000
	.long 0                                                    // 00000005CA08: 00000000
	.long 0                                                    // 00000005CA0C: 00000000
	.long 0                                                    // 00000005CA10: 00000000
	.long 0                                                    // 00000005CA14: 00000000
	.long 0                                                    // 00000005CA18: 00000000
	.long 0                                                    // 00000005CA1C: 00000000
	.long 0                                                    // 00000005CA20: 00000000
	.long 0                                                    // 00000005CA24: 00000000
	.long 0                                                    // 00000005CA28: 00000000
	.long 0                                                    // 00000005CA2C: 00000000
	.long 0                                                    // 00000005CA30: 00000000
	.long 0                                                    // 00000005CA34: 00000000
	.long 0                                                    // 00000005CA38: 00000000
	.long 0                                                    // 00000005CA3C: 00000000
	.long 0xe                                                  // 00000005CA40: 0000000E
	.long 0                                                    // 00000005CA44: 00000000
	.long 0                                                    // 00000005CA48: 00000000
	.long 0                                                    // 00000005CA4C: 00000000
	.long 0                                                    // 00000005CA50: 00000000
	.long 0                                                    // 00000005CA54: 00000000
	.long 0                                                    // 00000005CA58: 00000000
	.long 0                                                    // 00000005CA5C: 00000000
	.long 0                                                    // 00000005CA60: 00000000
	.long 0                                                    // 00000005CA64: 00000000
	.long 0                                                    // 00000005CA68: 00000000
	.long 0                                                    // 00000005CA6C: 00000000
	.long 0                                                    // 00000005CA70: 00000000
	.long 0                                                    // 00000005CA74: 00000000
	.long 0                                                    // 00000005CA78: 00000000
	.long 0                                                    // 00000005CA7C: 00000000
	.long 0                                                    // 00000005CA80: 00000000
	.long 0                                                    // 00000005CA84: 00000000
	.ascii " "                                                 // 00000005CA88: 20
	.byte 0                                                    // 00000005CA89: 00
	.short 0                                                   // 00000005CA8A: 0000
	.long 0x19                                                 // 00000005CA8C: 00000019
	.long 0x4                                                  // 00000005CA90: 00000004
	.long 0                                                    // 00000005CA94: 00000000
	.long 0                                                    // 00000005CA98: 00000000
	.long 0                                                    // 00000005CA9C: 00000000
	.long 0                                                    // 00000005CAA0: 00000000
	.long 0                                                    // 00000005CAA4: 00000000
	.long 0                                                    // 00000005CAA8: 00000000
	.long 0                                                    // 00000005CAAC: 00000000
	.long 0                                                    // 00000005CAB0: 00000000
	.long 0                                                    // 00000005CAB4: 00000000
	.long 0                                                    // 00000005CAB8: 00000000
	.long 0                                                    // 00000005CABC: 00000000
	.long 0                                                    // 00000005CAC0: 00000000
	.long 0                                                    // 00000005CAC4: 00000000
	.long 0                                                    // 00000005CAC8: 00000000
	.long 0                                                    // 00000005CACC: 00000000
	.long 0                                                    // 00000005CAD0: 00000000
	.long 0                                                    // 00000005CAD4: 00000000
	.long 0                                                    // 00000005CAD8: 00000000
	.long 0                                                    // 00000005CADC: 00000000
	.long 0                                                    // 00000005CAE0: 00000000
	.long 0                                                    // 00000005CAE4: 00000000
	.long 0                                                    // 00000005CAE8: 00000000
	.long 0                                                    // 00000005CAEC: 00000000
	.long 0                                                    // 00000005CAF0: 00000000
	.ascii "("                                                 // 00000005CAF4: 28
	.byte 0                                                    // 00000005CAF5: 00
	.short 0                                                   // 00000005CAF6: 0000
	.long 0                                                    // 00000005CAF8: 00000000
	.long 0                                                    // 00000005CAFC: 00000000
	.ascii "!"                                                 // 00000005CB00: 21
	.byte 0                                                    // 00000005CB01: 00
	.short 0                                                   // 00000005CB02: 0000
	.long 0                                                    // 00000005CB04: 00000000
	.long 0                                                    // 00000005CB08: 00000000
	.long 0                                                    // 00000005CB0C: 00000000
	.long 0                                                    // 00000005CB10: 00000000
	.long 0                                                    // 00000005CB14: 00000000
	.long 0                                                    // 00000005CB18: 00000000
	.long 0                                                    // 00000005CB1C: 00000000
	.long 0                                                    // 00000005CB20: 00000000
	.long 0                                                    // 00000005CB24: 00000000
	.long 0                                                    // 00000005CB28: 00000000
	.ascii "@"                                                 // 00000005CB2C: 40
	.byte 0                                                    // 00000005CB2D: 00
	.short 0                                                   // 00000005CB2E: 0000
	.ascii "5"                                                 // 00000005CB30: 35
	.byte 0                                                    // 00000005CB31: 00
	.short 0                                                   // 00000005CB32: 0000
	.long 0                                                    // 00000005CB34: 00000000
	.long 0                                                    // 00000005CB38: 00000000
	.long 0                                                    // 00000005CB3C: 00000000
	.long 0                                                    // 00000005CB40: 00000000
	.long 0x6                                                  // 00000005CB44: 00000006
	.long 0                                                    // 00000005CB48: 00000000
	.ascii "%"                                                 // 00000005CB4C: 25
	.byte 0                                                    // 00000005CB4D: 00
	.short 0                                                   // 00000005CB4E: 0000
	.long 0                                                    // 00000005CB50: 00000000
	.long 0                                                    // 00000005CB54: 00000000
	.long 0                                                    // 00000005CB58: 00000000
	.long 0x12                                                 // 00000005CB5C: 00000012
	.long 0                                                    // 00000005CB60: 00000000
	.long 0                                                    // 00000005CB64: 00000000
	.long 0                                                    // 00000005CB68: 00000000
	.ascii "\n"                                                // 00000005CB6C: 0A
	.byte 0                                                    // 00000005CB6D: 00
	.short 0                                                   // 00000005CB6E: 0000
	.long 0                                                    // 00000005CB70: 00000000
	.ascii "4"                                                 // 00000005CB74: 34
	.byte 0                                                    // 00000005CB75: 00
	.short 0                                                   // 00000005CB76: 0000
	.long 0                                                    // 00000005CB78: 00000000
	.long 0                                                    // 00000005CB7C: 00000000
	.long 0                                                    // 00000005CB80: 00000000
	.long 0                                                    // 00000005CB84: 00000000
	.ascii "c"                                                 // 00000005CB88: 63
	.byte 0                                                    // 00000005CB89: 00
	.short 0                                                   // 00000005CB8A: 0000
	.long 0                                                    // 00000005CB8C: 00000000
	.ascii "S"                                                 // 00000005CB90: 53
	.byte 0                                                    // 00000005CB91: 00
	.short 0                                                   // 00000005CB92: 0000
	.ascii "["                                                 // 00000005CB94: 5B
	.byte 0                                                    // 00000005CB95: 00
	.short 0                                                   // 00000005CB96: 0000
	.long 0                                                    // 00000005CB98: 00000000
	.long 0                                                    // 00000005CB9C: 00000000
	.long 0                                                    // 00000005CBA0: 00000000
	.long 0x10                                                 // 00000005CBA4: 00000010
	.long 0                                                    // 00000005CBA8: 00000000
	.long 0x14                                                 // 00000005CBAC: 00000014
	.ascii "_"                                                 // 00000005CBB0: 5F
	.byte 0                                                    // 00000005CBB1: 00
	.short 0                                                   // 00000005CBB2: 0000
	.long 0                                                    // 00000005CBB4: 00000000
	.long 0                                                    // 00000005CBB8: 00000000
	.long 0                                                    // 00000005CBBC: 00000000
	.ascii "]"                                                 // 00000005CBC0: 5D
	.byte 0                                                    // 00000005CBC1: 00
	.short 0                                                   // 00000005CBC2: 0000
	.long 0                                                    // 00000005CBC4: 00000000
	.long 0                                                    // 00000005CBC8: 00000000
	.long 0                                                    // 00000005CBCC: 00000000
	.long 0                                                    // 00000005CBD0: 00000000
	.ascii "P"                                                 // 00000005CBD4: 50
	.byte 0                                                    // 00000005CBD5: 00
	.short 0                                                   // 00000005CBD6: 0000
	.long 0                                                    // 00000005CBD8: 00000000
	.ascii "o"                                                 // 00000005CBDC: 6F
	.byte 0                                                    // 00000005CBDD: 00
	.short 0                                                   // 00000005CBDE: 0000
	.long 0                                                    // 00000005CBE0: 00000000
	.long 0                                                    // 00000005CBE4: 00000000
	.long 0                                                    // 00000005CBE8: 00000000
	.long 0                                                    // 00000005CBEC: 00000000
	.ascii "?"                                                 // 00000005CBF0: 3F
	.byte 0                                                    // 00000005CBF1: 00
	.short 0                                                   // 00000005CBF2: 0000
	.long 0                                                    // 00000005CBF4: 00000000
	.long 0                                                    // 00000005CBF8: 00000000
	.long 0                                                    // 00000005CBFC: 00000000
	.long 0                                                    // 00000005CC00: 00000000
	.long 0                                                    // 00000005CC04: 00000000
	.ascii "}"                                                 // 00000005CC08: 7D
	.byte 0                                                    // 00000005CC09: 00
	.short 0                                                   // 00000005CC0A: 0000
	.long 0                                                    // 00000005CC0C: 00000000
	.long 0                                                    // 00000005CC10: 00000000
	.long 0                                                    // 00000005CC14: 00000000
	.long 0                                                    // 00000005CC18: 00000000
	.long 0                                                    // 00000005CC1C: 00000000
	.long 0                                                    // 00000005CC20: 00000000
	.long 0                                                    // 00000005CC24: 00000000
	.long 0                                                    // 00000005CC28: 00000000
	.long 0                                                    // 00000005CC2C: 00000000
	.long 0                                                    // 00000005CC30: 00000000
	.long 0                                                    // 00000005CC34: 00000000
	.long 0                                                    // 00000005CC38: 00000000
	.long 0                                                    // 00000005CC3C: 00000000
	.long 0                                                    // 00000005CC40: 00000000
	.long 0                                                    // 00000005CC44: 00000000
	.long 0x5                                                  // 00000005CC48: 00000005
	.long 0x8f                                                 // 00000005CC4C: 0000008F
	.long 0                                                    // 00000005CC50: 00000000
	.ascii "a"                                                 // 00000005CC54: 61
	.byte 0                                                    // 00000005CC55: 00
	.short 0                                                   // 00000005CC56: 0000
	.long 0                                                    // 00000005CC58: 00000000
	.long 0                                                    // 00000005CC5C: 00000000
	.long 0                                                    // 00000005CC60: 00000000
	.long 0                                                    // 00000005CC64: 00000000
	.long 0                                                    // 00000005CC68: 00000000
	.long 0                                                    // 00000005CC6C: 00000000
	.long 0                                                    // 00000005CC70: 00000000
	.ascii "Q"                                                 // 00000005CC74: 51
	.byte 0                                                    // 00000005CC75: 00
	.short 0                                                   // 00000005CC76: 0000
	.long 0x15                                                 // 00000005CC78: 00000015
	.long 0                                                    // 00000005CC7C: 00000000
	.long 0                                                    // 00000005CC80: 00000000
	.long 0                                                    // 00000005CC84: 00000000
	.long 0                                                    // 00000005CC88: 00000000
	.long 0                                                    // 00000005CC8C: 00000000
	.long 0                                                    // 00000005CC90: 00000000
	.long 0                                                    // 00000005CC94: 00000000
	.ascii "E"                                                 // 00000005CC98: 45
	.byte 0                                                    // 00000005CC99: 00
	.short 0                                                   // 00000005CC9A: 0000
	.long 0                                                    // 00000005CC9C: 00000000
	.long 0                                                    // 00000005CCA0: 00000000
	.long 0x9d                                                 // 00000005CCA4: 0000009D
	.long 0                                                    // 00000005CCA8: 00000000
	.ascii "q"                                                 // 00000005CCAC: 71
	.byte 0                                                    // 00000005CCAD: 00
	.short 0                                                   // 00000005CCAE: 0000
	.long 0                                                    // 00000005CCB0: 00000000
	.long 0                                                    // 00000005CCB4: 00000000
	.long 0                                                    // 00000005CCB8: 00000000
	.ascii "p"                                                 // 00000005CCBC: 70
	.byte 0                                                    // 00000005CCBD: 00
	.short 0                                                   // 00000005CCBE: 0000
	.long 0                                                    // 00000005CCC0: 00000000
	.long 0                                                    // 00000005CCC4: 00000000
	.long 0                                                    // 00000005CCC8: 00000000
	.long 0                                                    // 00000005CCCC: 00000000
	.long 0                                                    // 00000005CCD0: 00000000
	.ascii "A"                                                 // 00000005CCD4: 41
	.byte 0                                                    // 00000005CCD5: 00
	.short 0                                                   // 00000005CCD6: 0000
	.long 0                                                    // 00000005CCD8: 00000000
	.long 0                                                    // 00000005CCDC: 00000000
	.long 0                                                    // 00000005CCE0: 00000000
	.long 0                                                    // 00000005CCE4: 00000000
	.ascii "L"                                                 // 00000005CCE8: 4C
	.byte 0                                                    // 00000005CCE9: 00
	.short 0                                                   // 00000005CCEA: 0000
	.long 0                                                    // 00000005CCEC: 00000000
	.long 0                                                    // 00000005CCF0: 00000000
	.long 0                                                    // 00000005CCF4: 00000000
	.long 0                                                    // 00000005CCF8: 00000000
	.long 0                                                    // 00000005CCFC: 00000000
	.long 0                                                    // 00000005CD00: 00000000
	.long 0                                                    // 00000005CD04: 00000000
	.ascii "y"                                                 // 00000005CD08: 79
	.byte 0                                                    // 00000005CD09: 00
	.short 0                                                   // 00000005CD0A: 0000
	.long 0                                                    // 00000005CD0C: 00000000
	.long 0xa1                                                 // 00000005CD10: 000000A1
	.long 0                                                    // 00000005CD14: 00000000
	.long 0                                                    // 00000005CD18: 00000000
	.long 0                                                    // 00000005CD1C: 00000000
	.long 0                                                    // 00000005CD20: 00000000
	.long 0                                                    // 00000005CD24: 00000000
	.long 0xae                                                 // 00000005CD28: 000000AE
	.long 0x87                                                 // 00000005CD2C: 00000087
	.long 0                                                    // 00000005CD30: 00000000
	.ascii "9"                                                 // 00000005CD34: 39
	.byte 0                                                    // 00000005CD35: 00
	.short 0                                                   // 00000005CD36: 0000
	.long 0                                                    // 00000005CD38: 00000000
	.long 0                                                    // 00000005CD3C: 00000000
	.long 0                                                    // 00000005CD40: 00000000
	.long 0xce                                                 // 00000005CD44: 000000CE
	.long 0                                                    // 00000005CD48: 00000000
	.long 0                                                    // 00000005CD4C: 00000000
	.long 0                                                    // 00000005CD50: 00000000
	.long 0                                                    // 00000005CD54: 00000000
	.long 0                                                    // 00000005CD58: 00000000
	.long 0                                                    // 00000005CD5C: 00000000
	.long 0x18                                                 // 00000005CD60: 00000018
	.long 0                                                    // 00000005CD64: 00000000
	.long 0                                                    // 00000005CD68: 00000000
	.long 0                                                    // 00000005CD6C: 00000000
	.long 0                                                    // 00000005CD70: 00000000
	.long 0                                                    // 00000005CD74: 00000000
	.ascii ":"                                                 // 00000005CD78: 3A
	.byte 0                                                    // 00000005CD79: 00
	.short 0                                                   // 00000005CD7A: 0000
	.long 0                                                    // 00000005CD7C: 00000000
	.long 0                                                    // 00000005CD80: 00000000
	.long 0                                                    // 00000005CD84: 00000000
	.long 0                                                    // 00000005CD88: 00000000
	.long 0                                                    // 00000005CD8C: 00000000
	.ascii "U"                                                 // 00000005CD90: 55
	.byte 0                                                    // 00000005CD91: 00
	.short 0                                                   // 00000005CD92: 0000
	.long 0                                                    // 00000005CD94: 00000000
	.long 0                                                    // 00000005CD98: 00000000
	.long 0                                                    // 00000005CD9C: 00000000
	.long 0x99                                                 // 00000005CDA0: 00000099
	.long 0                                                    // 00000005CDA4: 00000000
	.long 0xa5                                                 // 00000005CDA8: 000000A5
	.long 0                                                    // 00000005CDAC: 00000000
	.long 0                                                    // 00000005CDB0: 00000000
	.long 0                                                    // 00000005CDB4: 00000000
	.ascii "."                                                 // 00000005CDB8: 2E
	.byte 0                                                    // 00000005CDB9: 00
	.short 0                                                   // 00000005CDBA: 0000
	.long 0x2                                                  // 00000005CDBC: 00000002
	.long 0                                                    // 00000005CDC0: 00000000
	.long 0xb6                                                 // 00000005CDC4: 000000B6
	.long 0                                                    // 00000005CDC8: 00000000
	.long 0                                                    // 00000005CDCC: 00000000
	.long 0xbf                                                 // 00000005CDD0: 000000BF
	.long 0                                                    // 00000005CDD4: 00000000
	.long 0                                                    // 00000005CDD8: 00000000
	.long 0                                                    // 00000005CDDC: 00000000
	.long 0                                                    // 00000005CDE0: 00000000
	.long 0xab                                                 // 00000005CDE4: 000000AB
	.long 0                                                    // 00000005CDE8: 00000000
	.long 0xc7                                                 // 00000005CDEC: 000000C7
	.ascii ","                                                 // 00000005CDF0: 2C
	.byte 0                                                    // 00000005CDF1: 00
	.short 0                                                   // 00000005CDF2: 0000
	.long 0                                                    // 00000005CDF4: 00000000
	.long 0                                                    // 00000005CDF8: 00000000
	.long 0xff                                                 // 00000005CDFC: 000000FF
	.long 0xc                                                  // 00000005CE00: 0000000C
	.long 0                                                    // 00000005CE04: 00000000
	.long 0                                                    // 00000005CE08: 00000000
	.long 0                                                    // 00000005CE0C: 00000000
	.long 0                                                    // 00000005CE10: 00000000
	.long 0                                                    // 00000005CE14: 00000000
	.long 0                                                    // 00000005CE18: 00000000
	.long 0                                                    // 00000005CE1C: 00000000
	.ascii "I"                                                 // 00000005CE20: 49
	.byte 0                                                    // 00000005CE21: 00
	.short 0                                                   // 00000005CE22: 0000
	.long 0                                                    // 00000005CE24: 00000000
	.long 0                                                    // 00000005CE28: 00000000
	.long 0                                                    // 00000005CE2C: 00000000
	.long 0                                                    // 00000005CE30: 00000000
	.ascii "0"                                                 // 00000005CE34: 30
	.byte 0                                                    // 00000005CE35: 00
	.short 0                                                   // 00000005CE36: 0000
	.long 0                                                    // 00000005CE38: 00000000
	.long 0                                                    // 00000005CE3C: 00000000
	.long 0xe7                                                 // 00000005CE40: 000000E7
	.long 0                                                    // 00000005CE44: 00000000
	.long 0x112                                                // 00000005CE48: 00000112
	.long 0xca                                                 // 00000005CE4C: 000000CA
	.long 0xcf                                                 // 00000005CE50: 000000CF
	.long 0                                                    // 00000005CE54: 00000000
	.long 0                                                    // 00000005CE58: 00000000
	.ascii "B"                                                 // 00000005CE5C: 42
	.byte 0                                                    // 00000005CE5D: 00
	.short 0                                                   // 00000005CE5E: 0000
	.ascii "d"                                                 // 00000005CE60: 64
	.byte 0                                                    // 00000005CE61: 00
	.short 0                                                   // 00000005CE62: 0000
	.long 0                                                    // 00000005CE64: 00000000
	.long 0                                                    // 00000005CE68: 00000000
	.long 0                                                    // 00000005CE6C: 00000000
	.long 0                                                    // 00000005CE70: 00000000
	.long 0                                                    // 00000005CE74: 00000000
	.long 0                                                    // 00000005CE78: 00000000
	.long 0                                                    // 00000005CE7C: 00000000
	.long 0                                                    // 00000005CE80: 00000000
	.long 0x82                                                 // 00000005CE84: 00000082
	.ascii "T"                                                 // 00000005CE88: 54
	.byte 0                                                    // 00000005CE89: 00
	.short 0                                                   // 00000005CE8A: 0000
	.long 0                                                    // 00000005CE8C: 00000000
	.long 0                                                    // 00000005CE90: 00000000
	.long 0x106                                                // 00000005CE94: 00000106
	.long 0xb2                                                 // 00000005CE98: 000000B2
	.ascii "2"                                                 // 00000005CE9C: 32
	.byte 0                                                    // 00000005CE9D: 00
	.short 0                                                   // 00000005CE9E: 0000
	.long 0                                                    // 00000005CEA0: 00000000
	.long 0                                                    // 00000005CEA4: 00000000
	.long 0xc2                                                 // 00000005CEA8: 000000C2
	.ascii "Z"                                                 // 00000005CEAC: 5A
	.byte 0                                                    // 00000005CEAD: 00
	.short 0                                                   // 00000005CEAE: 0000
	.long 0                                                    // 00000005CEB0: 00000000
	.long 0                                                    // 00000005CEB4: 00000000
	.long 0                                                    // 00000005CEB8: 00000000
	.long 0                                                    // 00000005CEBC: 00000000
	.long 0x8                                                  // 00000005CEC0: 00000008
	.long 0                                                    // 00000005CEC4: 00000000
	.long 0                                                    // 00000005CEC8: 00000000
	.long 0xea                                                 // 00000005CECC: 000000EA
	.long 0                                                    // 00000005CED0: 00000000
	.long 0                                                    // 00000005CED4: 00000000
	.long 0                                                    // 00000005CED8: 00000000
	.long 0                                                    // 00000005CEDC: 00000000
	.long 0                                                    // 00000005CEE0: 00000000
	.long 0                                                    // 00000005CEE4: 00000000
	.ascii "J"                                                 // 00000005CEE8: 4A
	.byte 0                                                    // 00000005CEE9: 00
	.short 0                                                   // 00000005CEEA: 0000
	.long 0                                                    // 00000005CEEC: 00000000
	.long 0                                                    // 00000005CEF0: 00000000
	.long 0                                                    // 00000005CEF4: 00000000
	.long 0                                                    // 00000005CEF8: 00000000
	.long 0xed                                                 // 00000005CEFC: 000000ED
	.long 0x11f                                                // 00000005CF00: 0000011F
	.long 0                                                    // 00000005CF04: 00000000
	.ascii "9"                                                 // 00000005CF08: 39
	.byte 0x1                                                  // 00000005CF09: 01
	.short 0                                                   // 00000005CF0A: 0000
	.long 0                                                    // 00000005CF0C: 00000000
	.long 0x103                                                // 00000005CF10: 00000103
	.long 0                                                    // 00000005CF14: 00000000
	.long 0                                                    // 00000005CF18: 00000000
	.long 0                                                    // 00000005CF1C: 00000000
	.long 0                                                    // 00000005CF20: 00000000
	.long 0xba                                                 // 00000005CF24: 000000BA
	.long 0                                                    // 00000005CF28: 00000000
	.long 0                                                    // 00000005CF2C: 00000000
	.long 0                                                    // 00000005CF30: 00000000
	.long 0                                                    // 00000005CF34: 00000000
	.long 0xb3                                                 // 00000005CF38: 000000B3
	.long 0                                                    // 00000005CF3C: 00000000
	.long 0                                                    // 00000005CF40: 00000000
	.long 0x102                                                // 00000005CF44: 00000102
	.long 0                                                    // 00000005CF48: 00000000
	.long 0xd2                                                 // 00000005CF4C: 000000D2
	.long 0                                                    // 00000005CF50: 00000000
	.long 0                                                    // 00000005CF54: 00000000
	.long 0                                                    // 00000005CF58: 00000000
	.long 0                                                    // 00000005CF5C: 00000000
	.ascii "A"                                                 // 00000005CF60: 41
	.byte 0x1                                                  // 00000005CF61: 01
	.short 0                                                   // 00000005CF62: 0000
	.long 0xb0                                                 // 00000005CF64: 000000B0
	.long 0xd8                                                 // 00000005CF68: 000000D8
	.long 0xde                                                 // 00000005CF6C: 000000DE
	.long 0                                                    // 00000005CF70: 00000000
	.ascii "T"                                                 // 00000005CF74: 54
	.byte 0x1                                                  // 00000005CF75: 01
	.short 0                                                   // 00000005CF76: 0000
	.long 0                                                    // 00000005CF78: 00000000
	.long 0                                                    // 00000005CF7C: 00000000
	.long 0                                                    // 00000005CF80: 00000000
	.long 0                                                    // 00000005CF84: 00000000
	.long 0                                                    // 00000005CF88: 00000000
	.long 0                                                    // 00000005CF8C: 00000000
	.long 0                                                    // 00000005CF90: 00000000
	.ascii "="                                                 // 00000005CF94: 3D
	.byte 0x1                                                  // 00000005CF95: 01
	.short 0                                                   // 00000005CF96: 0000
	.long 0                                                    // 00000005CF98: 00000000
	.long 0                                                    // 00000005CF9C: 00000000
	.ascii ";"                                                 // 00000005CFA0: 3B
	.byte 0                                                    // 00000005CFA1: 00
	.short 0                                                   // 00000005CFA2: 0000
	.long 0                                                    // 00000005CFA4: 00000000
	.ascii "3"                                                 // 00000005CFA8: 33
	.byte 0                                                    // 00000005CFA9: 00
	.short 0                                                   // 00000005CFAA: 0000
	.long 0xcd                                                 // 00000005CFAC: 000000CD
	.ascii "E"                                                 // 00000005CFB0: 45
	.byte 0x1                                                  // 00000005CFB1: 01
	.short 0                                                   // 00000005CFB2: 0000
	.long 0x8c                                                 // 00000005CFB4: 0000008C
	.ascii "e"                                                 // 00000005CFB8: 65
	.byte 0                                                    // 00000005CFB9: 00
	.short 0                                                   // 00000005CFBA: 0000
	.long 0xf0                                                 // 00000005CFBC: 000000F0
	.long 0x114                                                // 00000005CFC0: 00000114
	.long 0                                                    // 00000005CFC4: 00000000
	.long 0                                                    // 00000005CFC8: 00000000
	.long 0                                                    // 00000005CFCC: 00000000
	.ascii "\\"                                                // 00000005CFD0: 5C
	.byte 0                                                    // 00000005CFD1: 00
	.short 0                                                   // 00000005CFD2: 0000
	.ascii "a"                                                 // 00000005CFD4: 61
	.byte 0x1                                                  // 00000005CFD5: 01
	.short 0                                                   // 00000005CFD6: 0000
	.long 0x9f                                                 // 00000005CFD8: 0000009F
	.long 0x98                                                 // 00000005CFDC: 00000098
	.long 0                                                    // 00000005CFE0: 00000000
	.long 0xdb                                                 // 00000005CFE4: 000000DB
	.ascii "x"                                                 // 00000005CFE8: 78
	.byte 0x1                                                  // 00000005CFE9: 01
	.short 0                                                   // 00000005CFEA: 0000
	.ascii "4"                                                 // 00000005CFEC: 34
	.byte 0x1                                                  // 00000005CFED: 01
	.short 0                                                   // 00000005CFEE: 0000
	.long 0x8b                                                 // 00000005CFF0: 0000008B
	.long 0                                                    // 00000005CFF4: 00000000
	.ascii "("                                                 // 00000005CFF8: 28
	.byte 0x1                                                  // 00000005CFF9: 01
	.short 0                                                   // 00000005CFFA: 0000
	.long 0xb8                                                 // 00000005CFFC: 000000B8
	.long 0xf1                                                 // 00000005D000: 000000F1
	.ascii "b"                                                 // 00000005D004: 62
	.byte 0                                                    // 00000005D005: 00
	.short 0                                                   // 00000005D006: 0000
	.long 0                                                    // 00000005D008: 00000000
	.long 0                                                    // 00000005D00C: 00000000
	.long 0xa2                                                 // 00000005D010: 000000A2
	.long 0                                                    // 00000005D014: 00000000
	.long 0                                                    // 00000005D018: 00000000
	.long 0                                                    // 00000005D01C: 00000000
	.long 0xfd                                                 // 00000005D020: 000000FD
	.long 0                                                    // 00000005D024: 00000000
	.long 0                                                    // 00000005D028: 00000000
	.ascii "="                                                 // 00000005D02C: 3D
	.byte 0                                                    // 00000005D02D: 00
	.short 0                                                   // 00000005D02E: 0000
	.long 0                                                    // 00000005D030: 00000000
	.long 0x10b                                                // 00000005D034: 0000010B
	.long 0x18b                                                // 00000005D038: 0000018B
	.long 0                                                    // 00000005D03C: 00000000
	.ascii "{"                                                 // 00000005D040: 7B
	.byte 0x1                                                  // 00000005D041: 01
	.short 0                                                   // 00000005D042: 0000
	.long 0                                                    // 00000005D044: 00000000
	.long 0                                                    // 00000005D048: 00000000
	.long 0                                                    // 00000005D04C: 00000000
	.ascii "~"                                                 // 00000005D050: 7E
	.byte 0                                                    // 00000005D051: 00
	.short 0                                                   // 00000005D052: 0000
	.long 0                                                    // 00000005D054: 00000000
	.long 0                                                    // 00000005D058: 00000000
	.long 0xe5                                                 // 00000005D05C: 000000E5
	.ascii "?"                                                 // 00000005D060: 3F
	.byte 0x1                                                  // 00000005D061: 01
	.short 0                                                   // 00000005D062: 0000
	.long 0                                                    // 00000005D064: 00000000
	.ascii "&"                                                 // 00000005D068: 26
	.byte 0x1                                                  // 00000005D069: 01
	.short 0                                                   // 00000005D06A: 0000
	.long 0                                                    // 00000005D06C: 00000000
	.long 0                                                    // 00000005D070: 00000000
	.ascii "q"                                                 // 00000005D074: 71
	.byte 0x1                                                  // 00000005D075: 01
	.short 0                                                   // 00000005D076: 0000
	.long 0xbd                                                 // 00000005D078: 000000BD
	.long 0xe2                                                 // 00000005D07C: 000000E2
	.ascii ","                                                 // 00000005D080: 2C
	.byte 0x1                                                  // 00000005D081: 01
	.short 0                                                   // 00000005D082: 0000
	.long 0                                                    // 00000005D084: 00000000
	.long 0x80                                                 // 00000005D088: 00000080
	.long 0                                                    // 00000005D08C: 00000000
	.long 0                                                    // 00000005D090: 00000000
	.long 0xe0                                                 // 00000005D094: 000000E0
	.long 0xbe                                                 // 00000005D098: 000000BE
	.long 0                                                    // 00000005D09C: 00000000
	.long 0                                                    // 00000005D0A0: 00000000
	.ascii ">"                                                 // 00000005D0A4: 3E
	.byte 0x1                                                  // 00000005D0A5: 01
	.short 0                                                   // 00000005D0A6: 0000
	.long 0                                                    // 00000005D0A8: 00000000
	.ascii "n"                                                 // 00000005D0AC: 6E
	.byte 0x1                                                  // 00000005D0AD: 01
	.short 0                                                   // 00000005D0AE: 0000
	.long 0x19a                                                // 00000005D0B0: 0000019A
	.long 0x181                                                // 00000005D0B4: 00000181
	.ascii "P"                                                 // 00000005D0B8: 50
	.byte 0x1                                                  // 00000005D0B9: 01
	.short 0                                                   // 00000005D0BA: 0000
	.long 0xe4                                                 // 00000005D0BC: 000000E4
	.long 0                                                    // 00000005D0C0: 00000000
	.long 0                                                    // 00000005D0C4: 00000000
	.ascii "5"                                                 // 00000005D0C8: 35
	.byte 0x1                                                  // 00000005D0C9: 01
	.short 0                                                   // 00000005D0CA: 0000
	.long 0                                                    // 00000005D0CC: 00000000
	.ascii "	"                                                 // 00000005D0D0: 09
	.byte 0                                                    // 00000005D0D1: 00
	.short 0                                                   // 00000005D0D2: 0000
	.long 0x9e                                                 // 00000005D0D4: 0000009E
	.long 0                                                    // 00000005D0D8: 00000000
	.long 0xeb                                                 // 00000005D0DC: 000000EB
	.long 0                                                    // 00000005D0E0: 00000000
	.long 0                                                    // 00000005D0E4: 00000000
	.long 0                                                    // 00000005D0E8: 00000000
	.long 0x1ba                                                // 00000005D0EC: 000001BA
	.long 0                                                    // 00000005D0F0: 00000000
	.long 0                                                    // 00000005D0F4: 00000000
	.long 0x1ac                                                // 00000005D0F8: 000001AC
	.long 0x7                                                  // 00000005D0FC: 00000007
	.long 0x183                                                // 00000005D100: 00000183
	.long 0                                                    // 00000005D104: 00000000
	.long 0                                                    // 00000005D108: 00000000
	.long 0                                                    // 00000005D10C: 00000000
	.long 0x11a                                                // 00000005D110: 0000011A
	.long 0                                                    // 00000005D114: 00000000
	.long 0                                                    // 00000005D118: 00000000
	.long 0xa6                                                 // 00000005D11C: 000000A6
	.long 0xb1                                                 // 00000005D120: 000000B1
	.long 0                                                    // 00000005D124: 00000000
	.long 0x191                                                // 00000005D128: 00000191
	.ascii "w"                                                 // 00000005D12C: 77
	.byte 0                                                    // 00000005D12D: 00
	.short 0                                                   // 00000005D12E: 0000
	.long 0                                                    // 00000005D130: 00000000
	.long 0                                                    // 00000005D134: 00000000
	.long 0xfa                                                 // 00000005D138: 000000FA
	.long 0x100                                                // 00000005D13C: 00000100
	.long 0xf4                                                 // 00000005D140: 000000F4
	.ascii "i"                                                 // 00000005D144: 69
	.byte 0x1                                                  // 00000005D145: 01
	.short 0                                                   // 00000005D146: 0000
	.ascii "C"                                                 // 00000005D148: 43
	.byte 0x1                                                  // 00000005D149: 01
	.short 0                                                   // 00000005D14A: 0000
	.ascii "O"                                                 // 00000005D14C: 4F
	.byte 0x1                                                  // 00000005D14D: 01
	.short 0                                                   // 00000005D14E: 0000
	.long 0xc9                                                 // 00000005D150: 000000C9
	.long 0                                                    // 00000005D154: 00000000
	.long 0                                                    // 00000005D158: 00000000
	.long 0                                                    // 00000005D15C: 00000000
	.ascii "'"                                                 // 00000005D160: 27
	.byte 0x1                                                  // 00000005D161: 01
	.short 0                                                   // 00000005D162: 0000
	.long 0                                                    // 00000005D164: 00000000
	.long 0xa7                                                 // 00000005D168: 000000A7
	.long 0x117                                                // 00000005D16C: 00000117
	.long 0x1a9                                                // 00000005D170: 000001A9
	.long 0x186                                                // 00000005D174: 00000186
	.long 0                                                    // 00000005D178: 00000000
	.ascii "G"                                                 // 00000005D17C: 47
	.byte 0                                                    // 00000005D17D: 00
	.short 0                                                   // 00000005D17E: 0000
	.long 0x1d3                                                // 00000005D180: 000001D3
	.long 0x1c0                                                // 00000005D184: 000001C0
	.long 0xc0                                                 // 00000005D188: 000000C0
	.long 0xdd                                                 // 00000005D18C: 000000DD
	.long 0                                                    // 00000005D190: 00000000
	.long 0x11c                                                // 00000005D194: 0000011C
	.ascii "0"                                                 // 00000005D198: 30
	.byte 0x1                                                  // 00000005D199: 01
	.short 0                                                   // 00000005D19A: 0000
	.long 0                                                    // 00000005D19C: 00000000
	.long 0x184                                                // 00000005D1A0: 00000184
	.ascii "V"                                                 // 00000005D1A4: 56
	.byte 0x1                                                  // 00000005D1A5: 01
	.short 0                                                   // 00000005D1A6: 0000
	.ascii ";"                                                 // 00000005D1A8: 3B
	.byte 0x1                                                  // 00000005D1A9: 01
	.short 0                                                   // 00000005D1AA: 0000
	.long 0                                                    // 00000005D1AC: 00000000
	.long 0x1a2                                                // 00000005D1B0: 000001A2
	.long 0                                                    // 00000005D1B4: 00000000
	.long 0                                                    // 00000005D1B8: 00000000
	.long 0                                                    // 00000005D1BC: 00000000
	.long 0                                                    // 00000005D1C0: 00000000
	.long 0x1b3                                                // 00000005D1C4: 000001B3
	.long 0x199                                                // 00000005D1C8: 00000199
	.long 0                                                    // 00000005D1CC: 00000000
	.long 0                                                    // 00000005D1D0: 00000000
	.long 0x113                                                // 00000005D1D4: 00000113
	.long 0                                                    // 00000005D1D8: 00000000
	.long 0x1f6                                                // 00000005D1DC: 000001F6
	.long 0xf8                                                 // 00000005D1E0: 000000F8
	.long 0                                                    // 00000005D1E4: 00000000
	.long 0                                                    // 00000005D1E8: 00000000
	.long 0                                                    // 00000005D1EC: 00000000
	.ascii "."                                                 // 00000005D1F0: 2E
	.byte 0x1                                                  // 00000005D1F1: 01
	.short 0                                                   // 00000005D1F2: 0000
	.ascii "6"                                                 // 00000005D1F4: 36
	.byte 0                                                    // 00000005D1F5: 00
	.short 0                                                   // 00000005D1F6: 0000
	.long 0xe8                                                 // 00000005D1F8: 000000E8
	.ascii "h"                                                 // 00000005D1FC: 68
	.byte 0                                                    // 00000005D1FD: 00
	.short 0                                                   // 00000005D1FE: 0000
	.long 0                                                    // 00000005D200: 00000000
	.long 0x97                                                 // 00000005D204: 00000097
	.ascii "<"                                                 // 00000005D208: 3C
	.byte 0x1                                                  // 00000005D209: 01
	.short 0                                                   // 00000005D20A: 0000
	.ascii "N"                                                 // 00000005D20C: 4E
	.byte 0x1                                                  // 00000005D20D: 01
	.short 0                                                   // 00000005D20E: 0000
	.ascii "Y"                                                 // 00000005D210: 59
	.byte 0x1                                                  // 00000005D211: 01
	.short 0                                                   // 00000005D212: 0000
	.ascii "<"                                                 // 00000005D214: 3C
	.byte 0                                                    // 00000005D215: 00
	.short 0                                                   // 00000005D216: 0000
	.long 0                                                    // 00000005D218: 00000000
	.long 0xaa                                                 // 00000005D21C: 000000AA
	.ascii "3"                                                 // 00000005D220: 33
	.byte 0x1                                                  // 00000005D221: 01
	.short 0                                                   // 00000005D222: 0000
	.long 0                                                    // 00000005D224: 00000000
	.long 0x201                                                // 00000005D228: 00000201
	.long 0                                                    // 00000005D22C: 00000000
	.ascii "`"                                                 // 00000005D230: 60
	.byte 0x1                                                  // 00000005D231: 01
	.short 0                                                   // 00000005D232: 0000
	.long 0                                                    // 00000005D234: 00000000
	.long 0                                                    // 00000005D238: 00000000
	.long 0                                                    // 00000005D23C: 00000000
	.long 0                                                    // 00000005D240: 00000000
	.long 0                                                    // 00000005D244: 00000000
	.long 0xef                                                 // 00000005D248: 000000EF
	.long 0x81                                                 // 00000005D24C: 00000081
	.long 0                                                    // 00000005D250: 00000000
	.long 0                                                    // 00000005D254: 00000000
	.ascii "%"                                                 // 00000005D258: 25
	.byte 0x1                                                  // 00000005D259: 01
	.short 0                                                   // 00000005D25A: 0000
	.long 0                                                    // 00000005D25C: 00000000
	.long 0                                                    // 00000005D260: 00000000
	.long 0                                                    // 00000005D264: 00000000
	.long 0x1fb                                                // 00000005D268: 000001FB
	.ascii "8"                                                 // 00000005D26C: 38
	.byte 0x1                                                  // 00000005D26D: 01
	.short 0                                                   // 00000005D26E: 0000
	.long 0                                                    // 00000005D270: 00000000
	.long 0                                                    // 00000005D274: 00000000
	.long 0                                                    // 00000005D278: 00000000
	.long 0                                                    // 00000005D27C: 00000000
	.long 0                                                    // 00000005D280: 00000000
	.long 0                                                    // 00000005D284: 00000000
	.long 0xa0                                                 // 00000005D288: 000000A0
	.long 0x1bd                                                // 00000005D28C: 000001BD
	.ascii "%"                                                 // 00000005D290: 25
	.byte 0x2                                                  // 00000005D291: 02
	.short 0                                                   // 00000005D292: 0000
	.long 0                                                    // 00000005D294: 00000000
	.long 0                                                    // 00000005D298: 00000000
	.long 0                                                    // 00000005D29C: 00000000
	.long 0x86                                                 // 00000005D2A0: 00000086
	.long 0                                                    // 00000005D2A4: 00000000
	.long 0                                                    // 00000005D2A8: 00000000
	.long 0x1cd                                                // 00000005D2AC: 000001CD
	.long 0                                                    // 00000005D2B0: 00000000
	.long 0                                                    // 00000005D2B4: 00000000
	.long 0                                                    // 00000005D2B8: 00000000
	.ascii ")"                                                 // 00000005D2BC: 29
	.byte 0x1                                                  // 00000005D2BD: 01
	.short 0                                                   // 00000005D2BE: 0000
	.long 0                                                    // 00000005D2C0: 00000000
	.long 0x1d1                                                // 00000005D2C4: 000001D1
	.long 0                                                    // 00000005D2C8: 00000000
	.long 0x1a0                                                // 00000005D2CC: 000001A0
	.ascii "y"                                                 // 00000005D2D0: 79
	.byte 0x1                                                  // 00000005D2D1: 01
	.short 0                                                   // 00000005D2D2: 0000
	.long 0                                                    // 00000005D2D4: 00000000
	.long 0x7f                                                 // 00000005D2D8: 0000007F
	.long 0x17f                                                // 00000005D2DC: 0000017F
	.long 0x1af                                                // 00000005D2E0: 000001AF
	.ascii "*"                                                 // 00000005D2E4: 2A
	.byte 0                                                    // 00000005D2E5: 00
	.short 0                                                   // 00000005D2E6: 0000
	.long 0x1c4                                                // 00000005D2E8: 000001C4
	.long 0                                                    // 00000005D2EC: 00000000
	.long 0xcc                                                 // 00000005D2F0: 000000CC
	.long 0xc5                                                 // 00000005D2F4: 000000C5
	.long 0                                                    // 00000005D2F8: 00000000
	.long 0x212                                                // 00000005D2FC: 00000212
	.long 0xee                                                 // 00000005D300: 000000EE
	.long 0x1c1                                                // 00000005D304: 000001C1
	.long 0                                                    // 00000005D308: 00000000
	.long 0                                                    // 00000005D30C: 00000000
	.long 0                                                    // 00000005D310: 00000000
	.ascii "#"                                                 // 00000005D314: 23
	.byte 0x2                                                  // 00000005D315: 02
	.short 0                                                   // 00000005D316: 0000
	.long 0xa4                                                 // 00000005D318: 000000A4
	.long 0                                                    // 00000005D31C: 00000000
	.long 0x93                                                 // 00000005D320: 00000093
	.ascii "C"                                                 // 00000005D324: 43
	.byte 0x2                                                  // 00000005D325: 02
	.short 0                                                   // 00000005D326: 0000
	.long 0                                                    // 00000005D328: 00000000
	.long 0x193                                                // 00000005D32C: 00000193
	.ascii "z"                                                 // 00000005D330: 7A
	.byte 0x1                                                  // 00000005D331: 01
	.short 0                                                   // 00000005D332: 0000
	.long 0                                                    // 00000005D334: 00000000
	.long 0                                                    // 00000005D338: 00000000
	.long 0                                                    // 00000005D33C: 00000000

	.section	.rodata,#alloc
	.type	subtract_x_x.kd,@object
subtract_x_x.kd:
	.long 0                                                    // 000000062CC0: 00000000
	.long 0                                                    // 000000062CC4: 00000000
	.long 0x110                                                // 000000062CC8: 00000110
	.long 0                                                    // 000000062CCC: 00000000
	.ascii "@Z"                                                // 000000062CD0: 5A40
	.short 0                                                   // 000000062CD2: 0000
	.long 0                                                    // 000000062CD4: 00000000
	.long 0                                                    // 000000062CD8: 00000000
	.long 0                                                    // 000000062CDC: 00000000
	.long 0                                                    // 000000062CE0: 00000000
	.long 0                                                    // 000000062CE4: 00000000
	.long 0                                                    // 000000062CE8: 00000000
	.long 0                                                    // 000000062CEC: 00000000
	.long 0x60af0100                                           // 000000062CF0: 60AF0100
	.long 0x84                                                 // 000000062CF4: 00000084
	.long 0x408                                                // 000000062CF8: 00000408
	.long 0                                                    // 000000062CFC: 00000000
	.type	subtract_get_global_offset_x.kd,@object
subtract_get_global_offset_x.kd:
	.long 0                                                    // 000000062D00: 00000000
	.long 0                                                    // 000000062D04: 00000000
	.long 0x110                                                // 000000062D08: 00000110
	.long 0                                                    // 000000062D0C: 00000000
	.long 0x5b00                                               // 000000062D10: 00005B00
	.long 0                                                    // 000000062D14: 00000000
	.long 0                                                    // 000000062D18: 00000000
	.long 0                                                    // 000000062D1C: 00000000
	.long 0                                                    // 000000062D20: 00000000
	.long 0                                                    // 000000062D24: 00000000
	.long 0                                                    // 000000062D28: 00000000
	.long 0                                                    // 000000062D2C: 00000000
	.long 0x60af0101                                           // 000000062D30: 60AF0101
	.long 0x1384                                               // 000000062D34: 00001384
	.long 0x408                                                // 000000062D38: 00000408
	.long 0                                                    // 000000062D3C: 00000000
	.type	subtract_get_local_id_x.kd,@object
subtract_get_local_id_x.kd:
	.long 0                                                    // 000000062D40: 00000000
	.long 0                                                    // 000000062D44: 00000000
	.long 0x110                                                // 000000062D48: 00000110
	.long 0                                                    // 000000062D4C: 00000000
	.long 0x5bc0                                               // 000000062D50: 00005BC0
	.long 0                                                    // 000000062D54: 00000000
	.long 0                                                    // 000000062D58: 00000000
	.long 0                                                    // 000000062D5C: 00000000
	.long 0                                                    // 000000062D60: 00000000
	.long 0                                                    // 000000062D64: 00000000
	.long 0                                                    // 000000062D68: 00000000
	.long 0                                                    // 000000062D6C: 00000000
	.long 0x60af0101                                           // 000000062D70: 60AF0101
	.long 0x1384                                               // 000000062D74: 00001384
	.long 0x408                                                // 000000062D78: 00000408
	.long 0                                                    // 000000062D7C: 00000000
	.type	subtract_get_group_id_x.kd,@object
subtract_get_group_id_x.kd:
	.long 0                                                    // 000000062D80: 00000000
	.long 0                                                    // 000000062D84: 00000000
	.long 0x110                                                // 000000062D88: 00000110
	.long 0                                                    // 000000062D8C: 00000000
	.long 0x5c80                                               // 000000062D90: 00005C80
	.long 0                                                    // 000000062D94: 00000000
	.long 0                                                    // 000000062D98: 00000000
	.long 0                                                    // 000000062D9C: 00000000
	.long 0                                                    // 000000062DA0: 00000000
	.long 0                                                    // 000000062DA4: 00000000
	.long 0                                                    // 000000062DA8: 00000000
	.long 0                                                    // 000000062DAC: 00000000
	.long 0x60af0101                                           // 000000062DB0: 60AF0101
	.long 0x1384                                               // 000000062DB4: 00001384
	.long 0x408                                                // 000000062DB8: 00000408
	.long 0                                                    // 000000062DBC: 00000000
	.type	subtract_get_local_size_x.kd,@object
subtract_get_local_size_x.kd:
	.long 0                                                    // 000000062DC0: 00000000
	.long 0                                                    // 000000062DC4: 00000000
	.long 0x110                                                // 000000062DC8: 00000110
	.long 0                                                    // 000000062DCC: 00000000
	.ascii "@]"                                                // 000000062DD0: 5D40
	.short 0                                                   // 000000062DD2: 0000
	.long 0                                                    // 000000062DD4: 00000000
	.long 0                                                    // 000000062DD8: 00000000
	.long 0                                                    // 000000062DDC: 00000000
	.long 0                                                    // 000000062DE0: 00000000
	.long 0                                                    // 000000062DE4: 00000000
	.long 0                                                    // 000000062DE8: 00000000
	.long 0                                                    // 000000062DEC: 00000000
	.long 0x60af0101                                           // 000000062DF0: 60AF0101
	.long 0x1384                                               // 000000062DF4: 00001384
	.long 0x408                                                // 000000062DF8: 00000408
	.long 0                                                    // 000000062DFC: 00000000
	.type	subtract_get_global_id_x.kd,@object
subtract_get_global_id_x.kd:
	.long 0                                                    // 000000062E00: 00000000
	.long 0                                                    // 000000062E04: 00000000
	.long 0x110                                                // 000000062E08: 00000110
	.long 0                                                    // 000000062E0C: 00000000
	.long 0x5f00                                               // 000000062E10: 00005F00
	.long 0                                                    // 000000062E14: 00000000
	.long 0                                                    // 000000062E18: 00000000
	.long 0                                                    // 000000062E1C: 00000000
	.long 0                                                    // 000000062E20: 00000000
	.long 0                                                    // 000000062E24: 00000000
	.long 0                                                    // 000000062E28: 00000000
	.long 0                                                    // 000000062E2C: 00000000
	.long 0x60af0101                                           // 000000062E30: 60AF0101
	.long 0x1384                                               // 000000062E34: 00001384
	.long 0x408                                                // 000000062E38: 00000408
	.long 0                                                    // 000000062E3C: 00000000
	.type	subtract_get_global_size_x.kd,@object
subtract_get_global_size_x.kd:
	.long 0                                                    // 000000062E40: 00000000
	.long 0                                                    // 000000062E44: 00000000
	.long 0x110                                                // 000000062E48: 00000110
	.long 0                                                    // 000000062E4C: 00000000
	.long 0x5fc0                                               // 000000062E50: 00005FC0
	.long 0                                                    // 000000062E54: 00000000
	.long 0                                                    // 000000062E58: 00000000
	.long 0                                                    // 000000062E5C: 00000000
	.long 0                                                    // 000000062E60: 00000000
	.long 0                                                    // 000000062E64: 00000000
	.long 0                                                    // 000000062E68: 00000000
	.long 0                                                    // 000000062E6C: 00000000
	.long 0x60af0101                                           // 000000062E70: 60AF0101
	.long 0x1384                                               // 000000062E74: 00001384
	.long 0x408                                                // 000000062E78: 00000408
	.long 0                                                    // 000000062E7C: 00000000
	.type	subtract_get_num_groups_x.kd,@object
subtract_get_num_groups_x.kd:
	.long 0                                                    // 000000062E80: 00000000
	.long 0                                                    // 000000062E84: 00000000
	.long 0x110                                                // 000000062E88: 00000110
	.long 0                                                    // 000000062E8C: 00000000
	.long 0x6180                                               // 000000062E90: 00006180
	.long 0                                                    // 000000062E94: 00000000
	.long 0                                                    // 000000062E98: 00000000
	.long 0                                                    // 000000062E9C: 00000000
	.long 0                                                    // 000000062EA0: 00000000
	.long 0                                                    // 000000062EA4: 00000000
	.long 0                                                    // 000000062EA8: 00000000
	.long 0                                                    // 000000062EAC: 00000000
	.long 0x60af0101                                           // 000000062EB0: 60AF0101
	.long 0x1384                                               // 000000062EB4: 00001384
	.long 0x408                                                // 000000062EB8: 00000408
	.long 0                                                    // 000000062EBC: 00000000
	.type	subtract_get_work_dim_x.kd,@object
subtract_get_work_dim_x.kd:
	.long 0                                                    // 000000062EC0: 00000000
	.long 0                                                    // 000000062EC4: 00000000
	.long 0x110                                                // 000000062EC8: 00000110
	.long 0                                                    // 000000062ECC: 00000000
	.ascii "@c"                                                // 000000062ED0: 6340
	.short 0                                                   // 000000062ED2: 0000
	.long 0                                                    // 000000062ED4: 00000000
	.long 0                                                    // 000000062ED8: 00000000
	.long 0                                                    // 000000062EDC: 00000000
	.long 0                                                    // 000000062EE0: 00000000
	.long 0                                                    // 000000062EE4: 00000000
	.long 0                                                    // 000000062EE8: 00000000
	.long 0                                                    // 000000062EEC: 00000000
	.long 0x60af0100                                           // 000000062EF0: 60AF0100
	.long 0x84                                                 // 000000062EF4: 00000084
	.long 0x408                                                // 000000062EF8: 00000408
	.long 0                                                    // 000000062EFC: 00000000
	.type	subtract_x_get_global_offset.kd,@object
subtract_x_get_global_offset.kd:
	.long 0                                                    // 000000062F00: 00000000
	.long 0                                                    // 000000062F04: 00000000
	.long 0x110                                                // 000000062F08: 00000110
	.long 0                                                    // 000000062F0C: 00000000
	.long 0x6400                                               // 000000062F10: 00006400
	.long 0                                                    // 000000062F14: 00000000
	.long 0                                                    // 000000062F18: 00000000
	.long 0                                                    // 000000062F1C: 00000000
	.long 0                                                    // 000000062F20: 00000000
	.long 0                                                    // 000000062F24: 00000000
	.long 0                                                    // 000000062F28: 00000000
	.long 0                                                    // 000000062F2C: 00000000
	.long 0x60af0101                                           // 000000062F30: 60AF0101
	.long 0x1384                                               // 000000062F34: 00001384
	.long 0x408                                                // 000000062F38: 00000408
	.long 0                                                    // 000000062F3C: 00000000
	.type	subtract_get_global_offset_get_global_offset.kd,@object
subtract_get_global_offset_get_global_offset.kd:
	.long 0                                                    // 000000062F40: 00000000
	.long 0                                                    // 000000062F44: 00000000
	.long 0x110                                                // 000000062F48: 00000110
	.long 0                                                    // 000000062F4C: 00000000
	.long 0x64c0                                               // 000000062F50: 000064C0
	.long 0                                                    // 000000062F54: 00000000
	.long 0                                                    // 000000062F58: 00000000
	.long 0                                                    // 000000062F5C: 00000000
	.long 0                                                    // 000000062F60: 00000000
	.long 0                                                    // 000000062F64: 00000000
	.long 0                                                    // 000000062F68: 00000000
	.long 0                                                    // 000000062F6C: 00000000
	.long 0x60af0100                                           // 000000062F70: 60AF0100
	.long 0x1384                                               // 000000062F74: 00001384
	.long 0x408                                                // 000000062F78: 00000408
	.long 0                                                    // 000000062F7C: 00000000
	.type	subtract_get_local_id_get_global_offset.kd,@object
subtract_get_local_id_get_global_offset.kd:
	.long 0                                                    // 000000062F80: 00000000
	.long 0                                                    // 000000062F84: 00000000
	.long 0x110                                                // 000000062F88: 00000110
	.long 0                                                    // 000000062F8C: 00000000
	.long 0x6580                                               // 000000062F90: 00006580
	.long 0                                                    // 000000062F94: 00000000
	.long 0                                                    // 000000062F98: 00000000
	.long 0                                                    // 000000062F9C: 00000000
	.long 0                                                    // 000000062FA0: 00000000
	.long 0                                                    // 000000062FA4: 00000000
	.long 0                                                    // 000000062FA8: 00000000
	.long 0                                                    // 000000062FAC: 00000000
	.long 0x60af0101                                           // 000000062FB0: 60AF0101
	.long 0x1384                                               // 000000062FB4: 00001384
	.long 0x408                                                // 000000062FB8: 00000408
	.long 0                                                    // 000000062FBC: 00000000
	.type	subtract_get_group_id_get_global_offset.kd,@object
subtract_get_group_id_get_global_offset.kd:
	.long 0                                                    // 000000062FC0: 00000000
	.long 0                                                    // 000000062FC4: 00000000
	.long 0x110                                                // 000000062FC8: 00000110
	.long 0                                                    // 000000062FCC: 00000000
	.ascii "@f"                                                // 000000062FD0: 6640
	.short 0                                                   // 000000062FD2: 0000
	.long 0                                                    // 000000062FD4: 00000000
	.long 0                                                    // 000000062FD8: 00000000
	.long 0                                                    // 000000062FDC: 00000000
	.long 0                                                    // 000000062FE0: 00000000
	.long 0                                                    // 000000062FE4: 00000000
	.long 0                                                    // 000000062FE8: 00000000
	.long 0                                                    // 000000062FEC: 00000000
	.long 0x60af0101                                           // 000000062FF0: 60AF0101
	.long 0x1384                                               // 000000062FF4: 00001384
	.long 0x408                                                // 000000062FF8: 00000408
	.long 0                                                    // 000000062FFC: 00000000
	.type	subtract_get_local_size_get_global_offset.kd,@object
subtract_get_local_size_get_global_offset.kd:
	.long 0                                                    // 000000063000: 00000000
	.long 0                                                    // 000000063004: 00000000
	.long 0x110                                                // 000000063008: 00000110
	.long 0                                                    // 00000006300C: 00000000
	.long 0x6700                                               // 000000063010: 00006700
	.long 0                                                    // 000000063014: 00000000
	.long 0                                                    // 000000063018: 00000000
	.long 0                                                    // 00000006301C: 00000000
	.long 0                                                    // 000000063020: 00000000
	.long 0                                                    // 000000063024: 00000000
	.long 0                                                    // 000000063028: 00000000
	.long 0                                                    // 00000006302C: 00000000
	.long 0x60af0101                                           // 000000063030: 60AF0101
	.long 0x1384                                               // 000000063034: 00001384
	.long 0x408                                                // 000000063038: 00000408
	.long 0                                                    // 00000006303C: 00000000
	.type	subtract_get_global_id_get_global_offset.kd,@object
subtract_get_global_id_get_global_offset.kd:
	.long 0                                                    // 000000063040: 00000000
	.long 0                                                    // 000000063044: 00000000
	.long 0x110                                                // 000000063048: 00000110
	.long 0                                                    // 00000006304C: 00000000
	.long 0x68c0                                               // 000000063050: 000068C0
	.long 0                                                    // 000000063054: 00000000
	.long 0                                                    // 000000063058: 00000000
	.long 0                                                    // 00000006305C: 00000000
	.long 0                                                    // 000000063060: 00000000
	.long 0                                                    // 000000063064: 00000000
	.long 0                                                    // 000000063068: 00000000
	.long 0                                                    // 00000006306C: 00000000
	.long 0x60af0100                                           // 000000063070: 60AF0100
	.long 0x1384                                               // 000000063074: 00001384
	.long 0x408                                                // 000000063078: 00000408
	.long 0                                                    // 00000006307C: 00000000
	.type	subtract_get_global_size_get_global_offset.kd,@object
subtract_get_global_size_get_global_offset.kd:
	.long 0                                                    // 000000063080: 00000000
	.long 0                                                    // 000000063084: 00000000
	.long 0x110                                                // 000000063088: 00000110
	.long 0                                                    // 00000006308C: 00000000
	.long 0x6980                                               // 000000063090: 00006980
	.long 0                                                    // 000000063094: 00000000
	.long 0                                                    // 000000063098: 00000000
	.long 0                                                    // 00000006309C: 00000000
	.long 0                                                    // 0000000630A0: 00000000
	.long 0                                                    // 0000000630A4: 00000000
	.long 0                                                    // 0000000630A8: 00000000
	.long 0                                                    // 0000000630AC: 00000000
	.long 0x60af0101                                           // 0000000630B0: 60AF0101
	.long 0x1384                                               // 0000000630B4: 00001384
	.long 0x408                                                // 0000000630B8: 00000408
	.long 0                                                    // 0000000630BC: 00000000
	.type	subtract_get_num_groups_get_global_offset.kd,@object
subtract_get_num_groups_get_global_offset.kd:
	.long 0                                                    // 0000000630C0: 00000000
	.long 0                                                    // 0000000630C4: 00000000
	.long 0x110                                                // 0000000630C8: 00000110
	.long 0                                                    // 0000000630CC: 00000000
	.ascii "@k"                                                // 0000000630D0: 6B40
	.short 0                                                   // 0000000630D2: 0000
	.long 0                                                    // 0000000630D4: 00000000
	.long 0                                                    // 0000000630D8: 00000000
	.long 0                                                    // 0000000630DC: 00000000
	.long 0                                                    // 0000000630E0: 00000000
	.long 0                                                    // 0000000630E4: 00000000
	.long 0                                                    // 0000000630E8: 00000000
	.long 0                                                    // 0000000630EC: 00000000
	.long 0x60af0101                                           // 0000000630F0: 60AF0101
	.long 0x1384                                               // 0000000630F4: 00001384
	.long 0x408                                                // 0000000630F8: 00000408
	.long 0                                                    // 0000000630FC: 00000000
	.type	subtract_get_work_dim_get_global_offset.kd,@object
subtract_get_work_dim_get_global_offset.kd:
	.long 0                                                    // 000000063100: 00000000
	.long 0                                                    // 000000063104: 00000000
	.long 0x110                                                // 000000063108: 00000110
	.long 0                                                    // 00000006310C: 00000000
	.long 0x6d00                                               // 000000063110: 00006D00
	.long 0                                                    // 000000063114: 00000000
	.long 0                                                    // 000000063118: 00000000
	.long 0                                                    // 00000006311C: 00000000
	.long 0                                                    // 000000063120: 00000000
	.long 0                                                    // 000000063124: 00000000
	.long 0                                                    // 000000063128: 00000000
	.long 0                                                    // 00000006312C: 00000000
	.long 0x60af0101                                           // 000000063130: 60AF0101
	.long 0x1384                                               // 000000063134: 00001384
	.long 0x408                                                // 000000063138: 00000408
	.long 0                                                    // 00000006313C: 00000000
	.type	subtract_x_get_local_id.kd,@object
subtract_x_get_local_id.kd:
	.long 0                                                    // 000000063140: 00000000
	.long 0                                                    // 000000063144: 00000000
	.long 0x110                                                // 000000063148: 00000110
	.long 0                                                    // 00000006314C: 00000000
	.long 0x6dc0                                               // 000000063150: 00006DC0
	.long 0                                                    // 000000063154: 00000000
	.long 0                                                    // 000000063158: 00000000
	.long 0                                                    // 00000006315C: 00000000
	.long 0                                                    // 000000063160: 00000000
	.long 0                                                    // 000000063164: 00000000
	.long 0                                                    // 000000063168: 00000000
	.long 0                                                    // 00000006316C: 00000000
	.long 0x60af0101                                           // 000000063170: 60AF0101
	.long 0x1384                                               // 000000063174: 00001384
	.long 0x408                                                // 000000063178: 00000408
	.long 0                                                    // 00000006317C: 00000000
	.type	subtract_get_global_offset_get_local_id.kd,@object
subtract_get_global_offset_get_local_id.kd:
	.long 0                                                    // 000000063180: 00000000
	.long 0                                                    // 000000063184: 00000000
	.long 0x110                                                // 000000063188: 00000110
	.long 0                                                    // 00000006318C: 00000000
	.long 0x6e80                                               // 000000063190: 00006E80
	.long 0                                                    // 000000063194: 00000000
	.long 0                                                    // 000000063198: 00000000
	.long 0                                                    // 00000006319C: 00000000
	.long 0                                                    // 0000000631A0: 00000000
	.long 0                                                    // 0000000631A4: 00000000
	.long 0                                                    // 0000000631A8: 00000000
	.long 0                                                    // 0000000631AC: 00000000
	.long 0x60af0101                                           // 0000000631B0: 60AF0101
	.long 0x1384                                               // 0000000631B4: 00001384
	.long 0x408                                                // 0000000631B8: 00000408
	.long 0                                                    // 0000000631BC: 00000000
	.type	subtract_get_local_id_get_local_id.kd,@object
subtract_get_local_id_get_local_id.kd:
	.long 0                                                    // 0000000631C0: 00000000
	.long 0                                                    // 0000000631C4: 00000000
	.long 0x110                                                // 0000000631C8: 00000110
	.long 0                                                    // 0000000631CC: 00000000
	.ascii "@o"                                                // 0000000631D0: 6F40
	.short 0                                                   // 0000000631D2: 0000
	.long 0                                                    // 0000000631D4: 00000000
	.long 0                                                    // 0000000631D8: 00000000
	.long 0                                                    // 0000000631DC: 00000000
	.long 0                                                    // 0000000631E0: 00000000
	.long 0                                                    // 0000000631E4: 00000000
	.long 0                                                    // 0000000631E8: 00000000
	.long 0                                                    // 0000000631EC: 00000000
	.long 0x60af0100                                           // 0000000631F0: 60AF0100
	.long 0x1384                                               // 0000000631F4: 00001384
	.long 0x408                                                // 0000000631F8: 00000408
	.long 0                                                    // 0000000631FC: 00000000
	.type	subtract_get_group_id_get_local_id.kd,@object
subtract_get_group_id_get_local_id.kd:
	.long 0                                                    // 000000063200: 00000000
	.long 0                                                    // 000000063204: 00000000
	.long 0x110                                                // 000000063208: 00000110
	.long 0                                                    // 00000006320C: 00000000
	.long 0x7000                                               // 000000063210: 00007000
	.long 0                                                    // 000000063214: 00000000
	.long 0                                                    // 000000063218: 00000000
	.long 0                                                    // 00000006321C: 00000000
	.long 0                                                    // 000000063220: 00000000
	.long 0                                                    // 000000063224: 00000000
	.long 0                                                    // 000000063228: 00000000
	.long 0                                                    // 00000006322C: 00000000
	.long 0x60af0101                                           // 000000063230: 60AF0101
	.long 0x1384                                               // 000000063234: 00001384
	.long 0x408                                                // 000000063238: 00000408
	.long 0                                                    // 00000006323C: 00000000
	.type	subtract_get_local_size_get_local_id.kd,@object
subtract_get_local_size_get_local_id.kd:
	.long 0                                                    // 000000063240: 00000000
	.long 0                                                    // 000000063244: 00000000
	.long 0x110                                                // 000000063248: 00000110
	.long 0                                                    // 00000006324C: 00000000
	.long 0x70c0                                               // 000000063250: 000070C0
	.long 0                                                    // 000000063254: 00000000
	.long 0                                                    // 000000063258: 00000000
	.long 0                                                    // 00000006325C: 00000000
	.long 0                                                    // 000000063260: 00000000
	.long 0                                                    // 000000063264: 00000000
	.long 0                                                    // 000000063268: 00000000
	.long 0                                                    // 00000006326C: 00000000
	.long 0x60af0101                                           // 000000063270: 60AF0101
	.long 0x1384                                               // 000000063274: 00001384
	.long 0x408                                                // 000000063278: 00000408
	.long 0                                                    // 00000006327C: 00000000
	.type	subtract_get_global_id_get_local_id.kd,@object
subtract_get_global_id_get_local_id.kd:
	.long 0                                                    // 000000063280: 00000000
	.long 0                                                    // 000000063284: 00000000
	.long 0x110                                                // 000000063288: 00000110
	.long 0                                                    // 00000006328C: 00000000
	.long 0x7280                                               // 000000063290: 00007280
	.long 0                                                    // 000000063294: 00000000
	.long 0                                                    // 000000063298: 00000000
	.long 0                                                    // 00000006329C: 00000000
	.long 0                                                    // 0000000632A0: 00000000
	.long 0                                                    // 0000000632A4: 00000000
	.long 0                                                    // 0000000632A8: 00000000
	.long 0                                                    // 0000000632AC: 00000000
	.long 0x60af0101                                           // 0000000632B0: 60AF0101
	.long 0x1384                                               // 0000000632B4: 00001384
	.long 0x408                                                // 0000000632B8: 00000408
	.long 0                                                    // 0000000632BC: 00000000
	.type	subtract_get_global_size_get_local_id.kd,@object
subtract_get_global_size_get_local_id.kd:
	.long 0                                                    // 0000000632C0: 00000000
	.long 0                                                    // 0000000632C4: 00000000
	.long 0x110                                                // 0000000632C8: 00000110
	.long 0                                                    // 0000000632CC: 00000000
	.ascii "@s"                                                // 0000000632D0: 7340
	.short 0                                                   // 0000000632D2: 0000
	.long 0                                                    // 0000000632D4: 00000000
	.long 0                                                    // 0000000632D8: 00000000
	.long 0                                                    // 0000000632DC: 00000000
	.long 0                                                    // 0000000632E0: 00000000
	.long 0                                                    // 0000000632E4: 00000000
	.long 0                                                    // 0000000632E8: 00000000
	.long 0                                                    // 0000000632EC: 00000000
	.long 0x60af0101                                           // 0000000632F0: 60AF0101
	.long 0x1384                                               // 0000000632F4: 00001384
	.long 0x408                                                // 0000000632F8: 00000408
	.long 0                                                    // 0000000632FC: 00000000
	.type	subtract_get_num_groups_get_local_id.kd,@object
subtract_get_num_groups_get_local_id.kd:
	.long 0                                                    // 000000063300: 00000000
	.long 0                                                    // 000000063304: 00000000
	.long 0x110                                                // 000000063308: 00000110
	.long 0                                                    // 00000006330C: 00000000
	.long 0x7500                                               // 000000063310: 00007500
	.long 0                                                    // 000000063314: 00000000
	.long 0                                                    // 000000063318: 00000000
	.long 0                                                    // 00000006331C: 00000000
	.long 0                                                    // 000000063320: 00000000
	.long 0                                                    // 000000063324: 00000000
	.long 0                                                    // 000000063328: 00000000
	.long 0                                                    // 00000006332C: 00000000
	.long 0x60af0101                                           // 000000063330: 60AF0101
	.long 0x1384                                               // 000000063334: 00001384
	.long 0x408                                                // 000000063338: 00000408
	.long 0                                                    // 00000006333C: 00000000
	.type	subtract_get_work_dim_get_local_id.kd,@object
subtract_get_work_dim_get_local_id.kd:
	.long 0                                                    // 000000063340: 00000000
	.long 0                                                    // 000000063344: 00000000
	.long 0x110                                                // 000000063348: 00000110
	.long 0                                                    // 00000006334C: 00000000
	.long 0x76c0                                               // 000000063350: 000076C0
	.long 0                                                    // 000000063354: 00000000
	.long 0                                                    // 000000063358: 00000000
	.long 0                                                    // 00000006335C: 00000000
	.long 0                                                    // 000000063360: 00000000
	.long 0                                                    // 000000063364: 00000000
	.long 0                                                    // 000000063368: 00000000
	.long 0                                                    // 00000006336C: 00000000
	.long 0x60af0101                                           // 000000063370: 60AF0101
	.long 0x1384                                               // 000000063374: 00001384
	.long 0x408                                                // 000000063378: 00000408
	.long 0                                                    // 00000006337C: 00000000
	.type	subtract_x_get_group_id.kd,@object
subtract_x_get_group_id.kd:
	.long 0                                                    // 000000063380: 00000000
	.long 0                                                    // 000000063384: 00000000
	.long 0x110                                                // 000000063388: 00000110
	.long 0                                                    // 00000006338C: 00000000
	.long 0x7780                                               // 000000063390: 00007780
	.long 0                                                    // 000000063394: 00000000
	.long 0                                                    // 000000063398: 00000000
	.long 0                                                    // 00000006339C: 00000000
	.long 0                                                    // 0000000633A0: 00000000
	.long 0                                                    // 0000000633A4: 00000000
	.long 0                                                    // 0000000633A8: 00000000
	.long 0                                                    // 0000000633AC: 00000000
	.long 0x60af0101                                           // 0000000633B0: 60AF0101
	.long 0x1384                                               // 0000000633B4: 00001384
	.long 0x408                                                // 0000000633B8: 00000408
	.long 0                                                    // 0000000633BC: 00000000
	.type	subtract_get_global_offset_get_group_id.kd,@object
subtract_get_global_offset_get_group_id.kd:
	.long 0                                                    // 0000000633C0: 00000000
	.long 0                                                    // 0000000633C4: 00000000
	.long 0x110                                                // 0000000633C8: 00000110
	.long 0                                                    // 0000000633CC: 00000000
	.ascii "@x"                                                // 0000000633D0: 7840
	.short 0                                                   // 0000000633D2: 0000
	.long 0                                                    // 0000000633D4: 00000000
	.long 0                                                    // 0000000633D8: 00000000
	.long 0                                                    // 0000000633DC: 00000000
	.long 0                                                    // 0000000633E0: 00000000
	.long 0                                                    // 0000000633E4: 00000000
	.long 0                                                    // 0000000633E8: 00000000
	.long 0                                                    // 0000000633EC: 00000000
	.long 0x60af0101                                           // 0000000633F0: 60AF0101
	.long 0x1384                                               // 0000000633F4: 00001384
	.long 0x408                                                // 0000000633F8: 00000408
	.long 0                                                    // 0000000633FC: 00000000
	.type	subtract_get_local_id_get_group_id.kd,@object
subtract_get_local_id_get_group_id.kd:
	.long 0                                                    // 000000063400: 00000000
	.long 0                                                    // 000000063404: 00000000
	.long 0x110                                                // 000000063408: 00000110
	.long 0                                                    // 00000006340C: 00000000
	.long 0x7900                                               // 000000063410: 00007900
	.long 0                                                    // 000000063414: 00000000
	.long 0                                                    // 000000063418: 00000000
	.long 0                                                    // 00000006341C: 00000000
	.long 0                                                    // 000000063420: 00000000
	.long 0                                                    // 000000063424: 00000000
	.long 0                                                    // 000000063428: 00000000
	.long 0                                                    // 00000006342C: 00000000
	.long 0x60af0101                                           // 000000063430: 60AF0101
	.long 0x1384                                               // 000000063434: 00001384
	.long 0x408                                                // 000000063438: 00000408
	.long 0                                                    // 00000006343C: 00000000
	.type	subtract_get_group_id_get_group_id.kd,@object
subtract_get_group_id_get_group_id.kd:
	.long 0                                                    // 000000063440: 00000000
	.long 0                                                    // 000000063444: 00000000
	.long 0x110                                                // 000000063448: 00000110
	.long 0                                                    // 00000006344C: 00000000
	.long 0x79c0                                               // 000000063450: 000079C0
	.long 0                                                    // 000000063454: 00000000
	.long 0                                                    // 000000063458: 00000000
	.long 0                                                    // 00000006345C: 00000000
	.long 0                                                    // 000000063460: 00000000
	.long 0                                                    // 000000063464: 00000000
	.long 0                                                    // 000000063468: 00000000
	.long 0                                                    // 00000006346C: 00000000
	.long 0x60af0100                                           // 000000063470: 60AF0100
	.long 0x1384                                               // 000000063474: 00001384
	.long 0x408                                                // 000000063478: 00000408
	.long 0                                                    // 00000006347C: 00000000
	.type	subtract_get_local_size_get_group_id.kd,@object
subtract_get_local_size_get_group_id.kd:
	.long 0                                                    // 000000063480: 00000000
	.long 0                                                    // 000000063484: 00000000
	.long 0x110                                                // 000000063488: 00000110
	.long 0                                                    // 00000006348C: 00000000
	.long 0x7a80                                               // 000000063490: 00007A80
	.long 0                                                    // 000000063494: 00000000
	.long 0                                                    // 000000063498: 00000000
	.long 0                                                    // 00000006349C: 00000000
	.long 0                                                    // 0000000634A0: 00000000
	.long 0                                                    // 0000000634A4: 00000000
	.long 0                                                    // 0000000634A8: 00000000
	.long 0                                                    // 0000000634AC: 00000000
	.long 0x60af0101                                           // 0000000634B0: 60AF0101
	.long 0x1384                                               // 0000000634B4: 00001384
	.long 0x408                                                // 0000000634B8: 00000408
	.long 0                                                    // 0000000634BC: 00000000
	.type	subtract_get_global_id_get_group_id.kd,@object
subtract_get_global_id_get_group_id.kd:
	.long 0                                                    // 0000000634C0: 00000000
	.long 0                                                    // 0000000634C4: 00000000
	.long 0x110                                                // 0000000634C8: 00000110
	.long 0                                                    // 0000000634CC: 00000000
	.ascii "@|"                                                // 0000000634D0: 7C40
	.short 0                                                   // 0000000634D2: 0000
	.long 0                                                    // 0000000634D4: 00000000
	.long 0                                                    // 0000000634D8: 00000000
	.long 0                                                    // 0000000634DC: 00000000
	.long 0                                                    // 0000000634E0: 00000000
	.long 0                                                    // 0000000634E4: 00000000
	.long 0                                                    // 0000000634E8: 00000000
	.long 0                                                    // 0000000634EC: 00000000
	.long 0x60af0101                                           // 0000000634F0: 60AF0101
	.long 0x1384                                               // 0000000634F4: 00001384
	.long 0x408                                                // 0000000634F8: 00000408
	.long 0                                                    // 0000000634FC: 00000000
	.type	subtract_get_global_size_get_group_id.kd,@object
subtract_get_global_size_get_group_id.kd:
	.long 0                                                    // 000000063500: 00000000
	.long 0                                                    // 000000063504: 00000000
	.long 0x110                                                // 000000063508: 00000110
	.long 0                                                    // 00000006350C: 00000000
	.long 0x7d00                                               // 000000063510: 00007D00
	.long 0                                                    // 000000063514: 00000000
	.long 0                                                    // 000000063518: 00000000
	.long 0                                                    // 00000006351C: 00000000
	.long 0                                                    // 000000063520: 00000000
	.long 0                                                    // 000000063524: 00000000
	.long 0                                                    // 000000063528: 00000000
	.long 0                                                    // 00000006352C: 00000000
	.long 0x60af0101                                           // 000000063530: 60AF0101
	.long 0x1384                                               // 000000063534: 00001384
	.long 0x408                                                // 000000063538: 00000408
	.long 0                                                    // 00000006353C: 00000000
	.type	subtract_get_num_groups_get_group_id.kd,@object
subtract_get_num_groups_get_group_id.kd:
	.long 0                                                    // 000000063540: 00000000
	.long 0                                                    // 000000063544: 00000000
	.long 0x110                                                // 000000063548: 00000110
	.long 0                                                    // 00000006354C: 00000000
	.long 0x7ec0                                               // 000000063550: 00007EC0
	.long 0                                                    // 000000063554: 00000000
	.long 0                                                    // 000000063558: 00000000
	.long 0                                                    // 00000006355C: 00000000
	.long 0                                                    // 000000063560: 00000000
	.long 0                                                    // 000000063564: 00000000
	.long 0                                                    // 000000063568: 00000000
	.long 0                                                    // 00000006356C: 00000000
	.long 0x60af0101                                           // 000000063570: 60AF0101
	.long 0x1384                                               // 000000063574: 00001384
	.long 0x408                                                // 000000063578: 00000408
	.long 0                                                    // 00000006357C: 00000000
	.type	subtract_get_work_dim_get_group_id.kd,@object
subtract_get_work_dim_get_group_id.kd:
	.long 0                                                    // 000000063580: 00000000
	.long 0                                                    // 000000063584: 00000000
	.long 0x110                                                // 000000063588: 00000110
	.long 0                                                    // 00000006358C: 00000000
	.long 0x8080                                               // 000000063590: 00008080
	.long 0                                                    // 000000063594: 00000000
	.long 0                                                    // 000000063598: 00000000
	.long 0                                                    // 00000006359C: 00000000
	.long 0                                                    // 0000000635A0: 00000000
	.long 0                                                    // 0000000635A4: 00000000
	.long 0                                                    // 0000000635A8: 00000000
	.long 0                                                    // 0000000635AC: 00000000
	.long 0x60af0101                                           // 0000000635B0: 60AF0101
	.long 0x1384                                               // 0000000635B4: 00001384
	.long 0x408                                                // 0000000635B8: 00000408
	.long 0                                                    // 0000000635BC: 00000000
	.type	subtract_x_get_local_size.kd,@object
subtract_x_get_local_size.kd:
	.long 0                                                    // 0000000635C0: 00000000
	.long 0                                                    // 0000000635C4: 00000000
	.long 0x110                                                // 0000000635C8: 00000110
	.long 0                                                    // 0000000635CC: 00000000
	.ascii "@"                                                 // 0000000635D0: 40
	.byte 0x81                                                 // 0000000635D1: 81
	.short 0                                                   // 0000000635D2: 0000
	.long 0                                                    // 0000000635D4: 00000000
	.long 0                                                    // 0000000635D8: 00000000
	.long 0                                                    // 0000000635DC: 00000000
	.long 0                                                    // 0000000635E0: 00000000
	.long 0                                                    // 0000000635E4: 00000000
	.long 0                                                    // 0000000635E8: 00000000
	.long 0                                                    // 0000000635EC: 00000000
	.long 0x60af0101                                           // 0000000635F0: 60AF0101
	.long 0x1384                                               // 0000000635F4: 00001384
	.long 0x408                                                // 0000000635F8: 00000408
	.long 0                                                    // 0000000635FC: 00000000
	.type	subtract_get_global_offset_get_local_size.kd,@object
subtract_get_global_offset_get_local_size.kd:
	.long 0                                                    // 000000063600: 00000000
	.long 0                                                    // 000000063604: 00000000
	.long 0x110                                                // 000000063608: 00000110
	.long 0                                                    // 00000006360C: 00000000
	.long 0x8300                                               // 000000063610: 00008300
	.long 0                                                    // 000000063614: 00000000
	.long 0                                                    // 000000063618: 00000000
	.long 0                                                    // 00000006361C: 00000000
	.long 0                                                    // 000000063620: 00000000
	.long 0                                                    // 000000063624: 00000000
	.long 0                                                    // 000000063628: 00000000
	.long 0                                                    // 00000006362C: 00000000
	.long 0x60af0101                                           // 000000063630: 60AF0101
	.long 0x1384                                               // 000000063634: 00001384
	.long 0x408                                                // 000000063638: 00000408
	.long 0                                                    // 00000006363C: 00000000
	.type	subtract_get_local_id_get_local_size.kd,@object
subtract_get_local_id_get_local_size.kd:
	.long 0                                                    // 000000063640: 00000000
	.long 0                                                    // 000000063644: 00000000
	.long 0x110                                                // 000000063648: 00000110
	.long 0                                                    // 00000006364C: 00000000
	.long 0x84c0                                               // 000000063650: 000084C0
	.long 0                                                    // 000000063654: 00000000
	.long 0                                                    // 000000063658: 00000000
	.long 0                                                    // 00000006365C: 00000000
	.long 0                                                    // 000000063660: 00000000
	.long 0                                                    // 000000063664: 00000000
	.long 0                                                    // 000000063668: 00000000
	.long 0                                                    // 00000006366C: 00000000
	.long 0x60af0101                                           // 000000063670: 60AF0101
	.long 0x1384                                               // 000000063674: 00001384
	.long 0x408                                                // 000000063678: 00000408
	.long 0                                                    // 00000006367C: 00000000
	.type	subtract_get_group_id_get_local_size.kd,@object
subtract_get_group_id_get_local_size.kd:
	.long 0                                                    // 000000063680: 00000000
	.long 0                                                    // 000000063684: 00000000
	.long 0x110                                                // 000000063688: 00000110
	.long 0                                                    // 00000006368C: 00000000
	.long 0x8680                                               // 000000063690: 00008680
	.long 0                                                    // 000000063694: 00000000
	.long 0                                                    // 000000063698: 00000000
	.long 0                                                    // 00000006369C: 00000000
	.long 0                                                    // 0000000636A0: 00000000
	.long 0                                                    // 0000000636A4: 00000000
	.long 0                                                    // 0000000636A8: 00000000
	.long 0                                                    // 0000000636AC: 00000000
	.long 0x60af0101                                           // 0000000636B0: 60AF0101
	.long 0x1384                                               // 0000000636B4: 00001384
	.long 0x408                                                // 0000000636B8: 00000408
	.long 0                                                    // 0000000636BC: 00000000
	.type	subtract_get_local_size_get_local_size.kd,@object
subtract_get_local_size_get_local_size.kd:
	.long 0                                                    // 0000000636C0: 00000000
	.long 0                                                    // 0000000636C4: 00000000
	.long 0x110                                                // 0000000636C8: 00000110
	.long 0                                                    // 0000000636CC: 00000000
	.ascii "@"                                                 // 0000000636D0: 40
	.byte 0x88                                                 // 0000000636D1: 88
	.short 0                                                   // 0000000636D2: 0000
	.long 0                                                    // 0000000636D4: 00000000
	.long 0                                                    // 0000000636D8: 00000000
	.long 0                                                    // 0000000636DC: 00000000
	.long 0                                                    // 0000000636E0: 00000000
	.long 0                                                    // 0000000636E4: 00000000
	.long 0                                                    // 0000000636E8: 00000000
	.long 0                                                    // 0000000636EC: 00000000
	.long 0x60af0100                                           // 0000000636F0: 60AF0100
	.long 0x1384                                               // 0000000636F4: 00001384
	.long 0x408                                                // 0000000636F8: 00000408
	.long 0                                                    // 0000000636FC: 00000000
	.type	subtract_get_global_id_get_local_size.kd,@object
subtract_get_global_id_get_local_size.kd:
	.long 0                                                    // 000000063700: 00000000
	.long 0                                                    // 000000063704: 00000000
	.long 0x110                                                // 000000063708: 00000110
	.long 0                                                    // 00000006370C: 00000000
	.long 0x8900                                               // 000000063710: 00008900
	.long 0                                                    // 000000063714: 00000000
	.long 0                                                    // 000000063718: 00000000
	.long 0                                                    // 00000006371C: 00000000
	.long 0                                                    // 000000063720: 00000000
	.long 0                                                    // 000000063724: 00000000
	.long 0                                                    // 000000063728: 00000000
	.long 0                                                    // 00000006372C: 00000000
	.long 0x60af0101                                           // 000000063730: 60AF0101
	.long 0x1384                                               // 000000063734: 00001384
	.long 0x408                                                // 000000063738: 00000408
	.long 0                                                    // 00000006373C: 00000000
	.type	subtract_get_global_size_get_local_size.kd,@object
subtract_get_global_size_get_local_size.kd:
	.long 0                                                    // 000000063740: 00000000
	.long 0                                                    // 000000063744: 00000000
	.long 0x110                                                // 000000063748: 00000110
	.long 0                                                    // 00000006374C: 00000000
	.long 0x8ac0                                               // 000000063750: 00008AC0
	.long 0                                                    // 000000063754: 00000000
	.long 0                                                    // 000000063758: 00000000
	.long 0                                                    // 00000006375C: 00000000
	.long 0                                                    // 000000063760: 00000000
	.long 0                                                    // 000000063764: 00000000
	.long 0                                                    // 000000063768: 00000000
	.long 0                                                    // 00000006376C: 00000000
	.long 0x60af0101                                           // 000000063770: 60AF0101
	.long 0x1384                                               // 000000063774: 00001384
	.long 0x408                                                // 000000063778: 00000408
	.long 0                                                    // 00000006377C: 00000000
	.type	subtract_get_num_groups_get_local_size.kd,@object
subtract_get_num_groups_get_local_size.kd:
	.long 0                                                    // 000000063780: 00000000
	.long 0                                                    // 000000063784: 00000000
	.long 0x110                                                // 000000063788: 00000110
	.long 0                                                    // 00000006378C: 00000000
	.long 0x8c80                                               // 000000063790: 00008C80
	.long 0                                                    // 000000063794: 00000000
	.long 0                                                    // 000000063798: 00000000
	.long 0                                                    // 00000006379C: 00000000
	.long 0                                                    // 0000000637A0: 00000000
	.long 0                                                    // 0000000637A4: 00000000
	.long 0                                                    // 0000000637A8: 00000000
	.long 0                                                    // 0000000637AC: 00000000
	.long 0x60af0101                                           // 0000000637B0: 60AF0101
	.long 0x1384                                               // 0000000637B4: 00001384
	.long 0x408                                                // 0000000637B8: 00000408
	.long 0                                                    // 0000000637BC: 00000000
	.type	subtract_get_work_dim_get_local_size.kd,@object
subtract_get_work_dim_get_local_size.kd:
	.long 0                                                    // 0000000637C0: 00000000
	.long 0                                                    // 0000000637C4: 00000000
	.long 0x110                                                // 0000000637C8: 00000110
	.long 0                                                    // 0000000637CC: 00000000
	.ascii "@"                                                 // 0000000637D0: 40
	.byte 0x8e                                                 // 0000000637D1: 8E
	.short 0                                                   // 0000000637D2: 0000
	.long 0                                                    // 0000000637D4: 00000000
	.long 0                                                    // 0000000637D8: 00000000
	.long 0                                                    // 0000000637DC: 00000000
	.long 0                                                    // 0000000637E0: 00000000
	.long 0                                                    // 0000000637E4: 00000000
	.long 0                                                    // 0000000637E8: 00000000
	.long 0                                                    // 0000000637EC: 00000000
	.long 0x60af0101                                           // 0000000637F0: 60AF0101
	.long 0x1384                                               // 0000000637F4: 00001384
	.long 0x408                                                // 0000000637F8: 00000408
	.long 0                                                    // 0000000637FC: 00000000
	.type	subtract_x_get_global_id.kd,@object
subtract_x_get_global_id.kd:
	.long 0                                                    // 000000063800: 00000000
	.long 0                                                    // 000000063804: 00000000
	.long 0x110                                                // 000000063808: 00000110
	.long 0                                                    // 00000006380C: 00000000
	.long 0x9000                                               // 000000063810: 00009000
	.long 0                                                    // 000000063814: 00000000
	.long 0                                                    // 000000063818: 00000000
	.long 0                                                    // 00000006381C: 00000000
	.long 0                                                    // 000000063820: 00000000
	.long 0                                                    // 000000063824: 00000000
	.long 0                                                    // 000000063828: 00000000
	.long 0                                                    // 00000006382C: 00000000
	.long 0x60af0101                                           // 000000063830: 60AF0101
	.long 0x1384                                               // 000000063834: 00001384
	.long 0x408                                                // 000000063838: 00000408
	.long 0                                                    // 00000006383C: 00000000
	.type	subtract_get_global_offset_get_global_id.kd,@object
subtract_get_global_offset_get_global_id.kd:
	.long 0                                                    // 000000063840: 00000000
	.long 0                                                    // 000000063844: 00000000
	.long 0x110                                                // 000000063848: 00000110
	.long 0                                                    // 00000006384C: 00000000
	.long 0x90c0                                               // 000000063850: 000090C0
	.long 0                                                    // 000000063854: 00000000
	.long 0                                                    // 000000063858: 00000000
	.long 0                                                    // 00000006385C: 00000000
	.long 0                                                    // 000000063860: 00000000
	.long 0                                                    // 000000063864: 00000000
	.long 0                                                    // 000000063868: 00000000
	.long 0                                                    // 00000006386C: 00000000
	.long 0x60af0101                                           // 000000063870: 60AF0101
	.long 0x1384                                               // 000000063874: 00001384
	.long 0x408                                                // 000000063878: 00000408
	.long 0                                                    // 00000006387C: 00000000
	.type	subtract_get_local_id_get_global_id.kd,@object
subtract_get_local_id_get_global_id.kd:
	.long 0                                                    // 000000063880: 00000000
	.long 0                                                    // 000000063884: 00000000
	.long 0x110                                                // 000000063888: 00000110
	.long 0                                                    // 00000006388C: 00000000
	.long 0x9180                                               // 000000063890: 00009180
	.long 0                                                    // 000000063894: 00000000
	.long 0                                                    // 000000063898: 00000000
	.long 0                                                    // 00000006389C: 00000000
	.long 0                                                    // 0000000638A0: 00000000
	.long 0                                                    // 0000000638A4: 00000000
	.long 0                                                    // 0000000638A8: 00000000
	.long 0                                                    // 0000000638AC: 00000000
	.long 0x60af0101                                           // 0000000638B0: 60AF0101
	.long 0x1384                                               // 0000000638B4: 00001384
	.long 0x408                                                // 0000000638B8: 00000408
	.long 0                                                    // 0000000638BC: 00000000
	.type	subtract_get_group_id_get_global_id.kd,@object
subtract_get_group_id_get_global_id.kd:
	.long 0                                                    // 0000000638C0: 00000000
	.long 0                                                    // 0000000638C4: 00000000
	.long 0x110                                                // 0000000638C8: 00000110
	.long 0                                                    // 0000000638CC: 00000000
	.ascii "@"                                                 // 0000000638D0: 40
	.byte 0x92                                                 // 0000000638D1: 92
	.short 0                                                   // 0000000638D2: 0000
	.long 0                                                    // 0000000638D4: 00000000
	.long 0                                                    // 0000000638D8: 00000000
	.long 0                                                    // 0000000638DC: 00000000
	.long 0                                                    // 0000000638E0: 00000000
	.long 0                                                    // 0000000638E4: 00000000
	.long 0                                                    // 0000000638E8: 00000000
	.long 0                                                    // 0000000638EC: 00000000
	.long 0x60af0101                                           // 0000000638F0: 60AF0101
	.long 0x1384                                               // 0000000638F4: 00001384
	.long 0x408                                                // 0000000638F8: 00000408
	.long 0                                                    // 0000000638FC: 00000000
	.type	subtract_get_local_size_get_global_id.kd,@object
subtract_get_local_size_get_global_id.kd:
	.long 0                                                    // 000000063900: 00000000
	.long 0                                                    // 000000063904: 00000000
	.long 0x110                                                // 000000063908: 00000110
	.long 0                                                    // 00000006390C: 00000000
	.long 0x9300                                               // 000000063910: 00009300
	.long 0                                                    // 000000063914: 00000000
	.long 0                                                    // 000000063918: 00000000
	.long 0                                                    // 00000006391C: 00000000
	.long 0                                                    // 000000063920: 00000000
	.long 0                                                    // 000000063924: 00000000
	.long 0                                                    // 000000063928: 00000000
	.long 0                                                    // 00000006392C: 00000000
	.long 0x60af0101                                           // 000000063930: 60AF0101
	.long 0x1384                                               // 000000063934: 00001384
	.long 0x408                                                // 000000063938: 00000408
	.long 0                                                    // 00000006393C: 00000000
	.type	subtract_get_global_id_get_global_id.kd,@object
subtract_get_global_id_get_global_id.kd:
	.long 0                                                    // 000000063940: 00000000
	.long 0                                                    // 000000063944: 00000000
	.long 0x110                                                // 000000063948: 00000110
	.long 0                                                    // 00000006394C: 00000000
	.long 0x94c0                                               // 000000063950: 000094C0
	.long 0                                                    // 000000063954: 00000000
	.long 0                                                    // 000000063958: 00000000
	.long 0                                                    // 00000006395C: 00000000
	.long 0                                                    // 000000063960: 00000000
	.long 0                                                    // 000000063964: 00000000
	.long 0                                                    // 000000063968: 00000000
	.long 0                                                    // 00000006396C: 00000000
	.long 0x60af0100                                           // 000000063970: 60AF0100
	.long 0x1384                                               // 000000063974: 00001384
	.long 0x408                                                // 000000063978: 00000408
	.long 0                                                    // 00000006397C: 00000000
	.type	subtract_get_global_size_get_global_id.kd,@object
subtract_get_global_size_get_global_id.kd:
	.long 0                                                    // 000000063980: 00000000
	.long 0                                                    // 000000063984: 00000000
	.long 0x110                                                // 000000063988: 00000110
	.long 0                                                    // 00000006398C: 00000000
	.long 0x9580                                               // 000000063990: 00009580
	.long 0                                                    // 000000063994: 00000000
	.long 0                                                    // 000000063998: 00000000
	.long 0                                                    // 00000006399C: 00000000
	.long 0                                                    // 0000000639A0: 00000000
	.long 0                                                    // 0000000639A4: 00000000
	.long 0                                                    // 0000000639A8: 00000000
	.long 0                                                    // 0000000639AC: 00000000
	.long 0x60af0101                                           // 0000000639B0: 60AF0101
	.long 0x1384                                               // 0000000639B4: 00001384
	.long 0x408                                                // 0000000639B8: 00000408
	.long 0                                                    // 0000000639BC: 00000000
	.type	subtract_get_num_groups_get_global_id.kd,@object
subtract_get_num_groups_get_global_id.kd:
	.long 0                                                    // 0000000639C0: 00000000
	.long 0                                                    // 0000000639C4: 00000000
	.long 0x110                                                // 0000000639C8: 00000110
	.long 0                                                    // 0000000639CC: 00000000
	.ascii "@"                                                 // 0000000639D0: 40
	.byte 0x97                                                 // 0000000639D1: 97
	.short 0                                                   // 0000000639D2: 0000
	.long 0                                                    // 0000000639D4: 00000000
	.long 0                                                    // 0000000639D8: 00000000
	.long 0                                                    // 0000000639DC: 00000000
	.long 0                                                    // 0000000639E0: 00000000
	.long 0                                                    // 0000000639E4: 00000000
	.long 0                                                    // 0000000639E8: 00000000
	.long 0                                                    // 0000000639EC: 00000000
	.long 0x60af0101                                           // 0000000639F0: 60AF0101
	.long 0x1384                                               // 0000000639F4: 00001384
	.long 0x408                                                // 0000000639F8: 00000408
	.long 0                                                    // 0000000639FC: 00000000
	.type	subtract_get_work_dim_get_global_id.kd,@object
subtract_get_work_dim_get_global_id.kd:
	.long 0                                                    // 000000063A00: 00000000
	.long 0                                                    // 000000063A04: 00000000
	.long 0x110                                                // 000000063A08: 00000110
	.long 0                                                    // 000000063A0C: 00000000
	.long 0x9900                                               // 000000063A10: 00009900
	.long 0                                                    // 000000063A14: 00000000
	.long 0                                                    // 000000063A18: 00000000
	.long 0                                                    // 000000063A1C: 00000000
	.long 0                                                    // 000000063A20: 00000000
	.long 0                                                    // 000000063A24: 00000000
	.long 0                                                    // 000000063A28: 00000000
	.long 0                                                    // 000000063A2C: 00000000
	.long 0x60af0101                                           // 000000063A30: 60AF0101
	.long 0x1384                                               // 000000063A34: 00001384
	.long 0x408                                                // 000000063A38: 00000408
	.long 0                                                    // 000000063A3C: 00000000
	.type	subtract_x_get_global_size.kd,@object
subtract_x_get_global_size.kd:
	.long 0                                                    // 000000063A40: 00000000
	.long 0                                                    // 000000063A44: 00000000
	.long 0x110                                                // 000000063A48: 00000110
	.long 0                                                    // 000000063A4C: 00000000
	.long 0x99c0                                               // 000000063A50: 000099C0
	.long 0                                                    // 000000063A54: 00000000
	.long 0                                                    // 000000063A58: 00000000
	.long 0                                                    // 000000063A5C: 00000000
	.long 0                                                    // 000000063A60: 00000000
	.long 0                                                    // 000000063A64: 00000000
	.long 0                                                    // 000000063A68: 00000000
	.long 0                                                    // 000000063A6C: 00000000
	.long 0x60af0101                                           // 000000063A70: 60AF0101
	.long 0x1384                                               // 000000063A74: 00001384
	.long 0x408                                                // 000000063A78: 00000408
	.long 0                                                    // 000000063A7C: 00000000
	.type	subtract_get_global_offset_get_global_size.kd,@object
subtract_get_global_offset_get_global_size.kd:
	.long 0                                                    // 000000063A80: 00000000
	.long 0                                                    // 000000063A84: 00000000
	.long 0x110                                                // 000000063A88: 00000110
	.long 0                                                    // 000000063A8C: 00000000
	.long 0x9b80                                               // 000000063A90: 00009B80
	.long 0                                                    // 000000063A94: 00000000
	.long 0                                                    // 000000063A98: 00000000
	.long 0                                                    // 000000063A9C: 00000000
	.long 0                                                    // 000000063AA0: 00000000
	.long 0                                                    // 000000063AA4: 00000000
	.long 0                                                    // 000000063AA8: 00000000
	.long 0                                                    // 000000063AAC: 00000000
	.long 0x60af0101                                           // 000000063AB0: 60AF0101
	.long 0x1384                                               // 000000063AB4: 00001384
	.long 0x408                                                // 000000063AB8: 00000408
	.long 0                                                    // 000000063ABC: 00000000
	.type	subtract_get_local_id_get_global_size.kd,@object
subtract_get_local_id_get_global_size.kd:
	.long 0                                                    // 000000063AC0: 00000000
	.long 0                                                    // 000000063AC4: 00000000
	.long 0x110                                                // 000000063AC8: 00000110
	.long 0                                                    // 000000063ACC: 00000000
	.ascii "@"                                                 // 000000063AD0: 40
	.byte 0x9d                                                 // 000000063AD1: 9D
	.short 0                                                   // 000000063AD2: 0000
	.long 0                                                    // 000000063AD4: 00000000
	.long 0                                                    // 000000063AD8: 00000000
	.long 0                                                    // 000000063ADC: 00000000
	.long 0                                                    // 000000063AE0: 00000000
	.long 0                                                    // 000000063AE4: 00000000
	.long 0                                                    // 000000063AE8: 00000000
	.long 0                                                    // 000000063AEC: 00000000
	.long 0x60af0101                                           // 000000063AF0: 60AF0101
	.long 0x1384                                               // 000000063AF4: 00001384
	.long 0x408                                                // 000000063AF8: 00000408
	.long 0                                                    // 000000063AFC: 00000000
	.type	subtract_get_group_id_get_global_size.kd,@object
subtract_get_group_id_get_global_size.kd:
	.long 0                                                    // 000000063B00: 00000000
	.long 0                                                    // 000000063B04: 00000000
	.long 0x110                                                // 000000063B08: 00000110
	.long 0                                                    // 000000063B0C: 00000000
	.long 0x9f00                                               // 000000063B10: 00009F00
	.long 0                                                    // 000000063B14: 00000000
	.long 0                                                    // 000000063B18: 00000000
	.long 0                                                    // 000000063B1C: 00000000
	.long 0                                                    // 000000063B20: 00000000
	.long 0                                                    // 000000063B24: 00000000
	.long 0                                                    // 000000063B28: 00000000
	.long 0                                                    // 000000063B2C: 00000000
	.long 0x60af0101                                           // 000000063B30: 60AF0101
	.long 0x1384                                               // 000000063B34: 00001384
	.long 0x408                                                // 000000063B38: 00000408
	.long 0                                                    // 000000063B3C: 00000000
	.type	subtract_get_local_size_get_global_size.kd,@object
subtract_get_local_size_get_global_size.kd:
	.long 0                                                    // 000000063B40: 00000000
	.long 0                                                    // 000000063B44: 00000000
	.long 0x110                                                // 000000063B48: 00000110
	.long 0                                                    // 000000063B4C: 00000000
	.long 0xa0c0                                               // 000000063B50: 0000A0C0
	.long 0                                                    // 000000063B54: 00000000
	.long 0                                                    // 000000063B58: 00000000
	.long 0                                                    // 000000063B5C: 00000000
	.long 0                                                    // 000000063B60: 00000000
	.long 0                                                    // 000000063B64: 00000000
	.long 0                                                    // 000000063B68: 00000000
	.long 0                                                    // 000000063B6C: 00000000
	.long 0x60af0101                                           // 000000063B70: 60AF0101
	.long 0x1384                                               // 000000063B74: 00001384
	.long 0x408                                                // 000000063B78: 00000408
	.long 0                                                    // 000000063B7C: 00000000
	.type	subtract_get_global_id_get_global_size.kd,@object
subtract_get_global_id_get_global_size.kd:
	.long 0                                                    // 000000063B80: 00000000
	.long 0                                                    // 000000063B84: 00000000
	.long 0x110                                                // 000000063B88: 00000110
	.long 0                                                    // 000000063B8C: 00000000
	.long 0xa280                                               // 000000063B90: 0000A280
	.long 0                                                    // 000000063B94: 00000000
	.long 0                                                    // 000000063B98: 00000000
	.long 0                                                    // 000000063B9C: 00000000
	.long 0                                                    // 000000063BA0: 00000000
	.long 0                                                    // 000000063BA4: 00000000
	.long 0                                                    // 000000063BA8: 00000000
	.long 0                                                    // 000000063BAC: 00000000
	.long 0x60af0101                                           // 000000063BB0: 60AF0101
	.long 0x1384                                               // 000000063BB4: 00001384
	.long 0x408                                                // 000000063BB8: 00000408
	.long 0                                                    // 000000063BBC: 00000000
	.type	subtract_get_global_size_get_global_size.kd,@object
subtract_get_global_size_get_global_size.kd:
	.long 0                                                    // 000000063BC0: 00000000
	.long 0                                                    // 000000063BC4: 00000000
	.long 0x110                                                // 000000063BC8: 00000110
	.long 0                                                    // 000000063BCC: 00000000
	.ascii "@"                                                 // 000000063BD0: 40
	.byte 0xa4                                                 // 000000063BD1: A4
	.short 0                                                   // 000000063BD2: 0000
	.long 0                                                    // 000000063BD4: 00000000
	.long 0                                                    // 000000063BD8: 00000000
	.long 0                                                    // 000000063BDC: 00000000
	.long 0                                                    // 000000063BE0: 00000000
	.long 0                                                    // 000000063BE4: 00000000
	.long 0                                                    // 000000063BE8: 00000000
	.long 0                                                    // 000000063BEC: 00000000
	.long 0x60af0100                                           // 000000063BF0: 60AF0100
	.long 0x1384                                               // 000000063BF4: 00001384
	.long 0x408                                                // 000000063BF8: 00000408
	.long 0                                                    // 000000063BFC: 00000000
	.type	subtract_get_num_groups_get_global_size.kd,@object
subtract_get_num_groups_get_global_size.kd:
	.long 0                                                    // 000000063C00: 00000000
	.long 0                                                    // 000000063C04: 00000000
	.long 0x110                                                // 000000063C08: 00000110
	.long 0                                                    // 000000063C0C: 00000000
	.long 0xa500                                               // 000000063C10: 0000A500
	.long 0                                                    // 000000063C14: 00000000
	.long 0                                                    // 000000063C18: 00000000
	.long 0                                                    // 000000063C1C: 00000000
	.long 0                                                    // 000000063C20: 00000000
	.long 0                                                    // 000000063C24: 00000000
	.long 0                                                    // 000000063C28: 00000000
	.long 0                                                    // 000000063C2C: 00000000
	.long 0x60af0101                                           // 000000063C30: 60AF0101
	.long 0x1384                                               // 000000063C34: 00001384
	.long 0x408                                                // 000000063C38: 00000408
	.long 0                                                    // 000000063C3C: 00000000
	.type	subtract_get_work_dim_get_global_size.kd,@object
subtract_get_work_dim_get_global_size.kd:
	.long 0                                                    // 000000063C40: 00000000
	.long 0                                                    // 000000063C44: 00000000
	.long 0x110                                                // 000000063C48: 00000110
	.long 0                                                    // 000000063C4C: 00000000
	.long 0xa6c0                                               // 000000063C50: 0000A6C0
	.long 0                                                    // 000000063C54: 00000000
	.long 0                                                    // 000000063C58: 00000000
	.long 0                                                    // 000000063C5C: 00000000
	.long 0                                                    // 000000063C60: 00000000
	.long 0                                                    // 000000063C64: 00000000
	.long 0                                                    // 000000063C68: 00000000
	.long 0                                                    // 000000063C6C: 00000000
	.long 0x60af0101                                           // 000000063C70: 60AF0101
	.long 0x1384                                               // 000000063C74: 00001384
	.long 0x408                                                // 000000063C78: 00000408
	.long 0                                                    // 000000063C7C: 00000000
	.type	subtract_x_get_num_groups.kd,@object
subtract_x_get_num_groups.kd:
	.long 0                                                    // 000000063C80: 00000000
	.long 0                                                    // 000000063C84: 00000000
	.long 0x110                                                // 000000063C88: 00000110
	.long 0                                                    // 000000063C8C: 00000000
	.long 0xa880                                               // 000000063C90: 0000A880
	.long 0                                                    // 000000063C94: 00000000
	.long 0                                                    // 000000063C98: 00000000
	.long 0                                                    // 000000063C9C: 00000000
	.long 0                                                    // 000000063CA0: 00000000
	.long 0                                                    // 000000063CA4: 00000000
	.long 0                                                    // 000000063CA8: 00000000
	.long 0                                                    // 000000063CAC: 00000000
	.long 0x60af0101                                           // 000000063CB0: 60AF0101
	.long 0x1384                                               // 000000063CB4: 00001384
	.long 0x408                                                // 000000063CB8: 00000408
	.long 0                                                    // 000000063CBC: 00000000
	.type	subtract_get_global_offset_get_num_groups.kd,@object
subtract_get_global_offset_get_num_groups.kd:
	.long 0                                                    // 000000063CC0: 00000000
	.long 0                                                    // 000000063CC4: 00000000
	.long 0x110                                                // 000000063CC8: 00000110
	.long 0                                                    // 000000063CCC: 00000000
	.ascii "@"                                                 // 000000063CD0: 40
	.byte 0xaa                                                 // 000000063CD1: AA
	.short 0                                                   // 000000063CD2: 0000
	.long 0                                                    // 000000063CD4: 00000000
	.long 0                                                    // 000000063CD8: 00000000
	.long 0                                                    // 000000063CDC: 00000000
	.long 0                                                    // 000000063CE0: 00000000
	.long 0                                                    // 000000063CE4: 00000000
	.long 0                                                    // 000000063CE8: 00000000
	.long 0                                                    // 000000063CEC: 00000000
	.long 0x60af0101                                           // 000000063CF0: 60AF0101
	.long 0x1384                                               // 000000063CF4: 00001384
	.long 0x408                                                // 000000063CF8: 00000408
	.long 0                                                    // 000000063CFC: 00000000
	.type	subtract_get_local_id_get_num_groups.kd,@object
subtract_get_local_id_get_num_groups.kd:
	.long 0                                                    // 000000063D00: 00000000
	.long 0                                                    // 000000063D04: 00000000
	.long 0x110                                                // 000000063D08: 00000110
	.long 0                                                    // 000000063D0C: 00000000
	.long 0xac00                                               // 000000063D10: 0000AC00
	.long 0                                                    // 000000063D14: 00000000
	.long 0                                                    // 000000063D18: 00000000
	.long 0                                                    // 000000063D1C: 00000000
	.long 0                                                    // 000000063D20: 00000000
	.long 0                                                    // 000000063D24: 00000000
	.long 0                                                    // 000000063D28: 00000000
	.long 0                                                    // 000000063D2C: 00000000
	.long 0x60af0101                                           // 000000063D30: 60AF0101
	.long 0x1384                                               // 000000063D34: 00001384
	.long 0x408                                                // 000000063D38: 00000408
	.long 0                                                    // 000000063D3C: 00000000
	.type	subtract_get_group_id_get_num_groups.kd,@object
subtract_get_group_id_get_num_groups.kd:
	.long 0                                                    // 000000063D40: 00000000
	.long 0                                                    // 000000063D44: 00000000
	.long 0x110                                                // 000000063D48: 00000110
	.long 0                                                    // 000000063D4C: 00000000
	.long 0xadc0                                               // 000000063D50: 0000ADC0
	.long 0                                                    // 000000063D54: 00000000
	.long 0                                                    // 000000063D58: 00000000
	.long 0                                                    // 000000063D5C: 00000000
	.long 0                                                    // 000000063D60: 00000000
	.long 0                                                    // 000000063D64: 00000000
	.long 0                                                    // 000000063D68: 00000000
	.long 0                                                    // 000000063D6C: 00000000
	.long 0x60af0101                                           // 000000063D70: 60AF0101
	.long 0x1384                                               // 000000063D74: 00001384
	.long 0x408                                                // 000000063D78: 00000408
	.long 0                                                    // 000000063D7C: 00000000
	.type	subtract_get_local_size_get_num_groups.kd,@object
subtract_get_local_size_get_num_groups.kd:
	.long 0                                                    // 000000063D80: 00000000
	.long 0                                                    // 000000063D84: 00000000
	.long 0x110                                                // 000000063D88: 00000110
	.long 0                                                    // 000000063D8C: 00000000
	.long 0xaf80                                               // 000000063D90: 0000AF80
	.long 0                                                    // 000000063D94: 00000000
	.long 0                                                    // 000000063D98: 00000000
	.long 0                                                    // 000000063D9C: 00000000
	.long 0                                                    // 000000063DA0: 00000000
	.long 0                                                    // 000000063DA4: 00000000
	.long 0                                                    // 000000063DA8: 00000000
	.long 0                                                    // 000000063DAC: 00000000
	.long 0x60af0101                                           // 000000063DB0: 60AF0101
	.long 0x1384                                               // 000000063DB4: 00001384
	.long 0x408                                                // 000000063DB8: 00000408
	.long 0                                                    // 000000063DBC: 00000000
	.type	subtract_get_global_id_get_num_groups.kd,@object
subtract_get_global_id_get_num_groups.kd:
	.long 0                                                    // 000000063DC0: 00000000
	.long 0                                                    // 000000063DC4: 00000000
	.long 0x110                                                // 000000063DC8: 00000110
	.long 0                                                    // 000000063DCC: 00000000
	.ascii "@"                                                 // 000000063DD0: 40
	.byte 0xb1                                                 // 000000063DD1: B1
	.short 0                                                   // 000000063DD2: 0000
	.long 0                                                    // 000000063DD4: 00000000
	.long 0                                                    // 000000063DD8: 00000000
	.long 0                                                    // 000000063DDC: 00000000
	.long 0                                                    // 000000063DE0: 00000000
	.long 0                                                    // 000000063DE4: 00000000
	.long 0                                                    // 000000063DE8: 00000000
	.long 0                                                    // 000000063DEC: 00000000
	.long 0x60af0101                                           // 000000063DF0: 60AF0101
	.long 0x1384                                               // 000000063DF4: 00001384
	.long 0x408                                                // 000000063DF8: 00000408
	.long 0                                                    // 000000063DFC: 00000000
	.type	subtract_get_global_size_get_num_groups.kd,@object
subtract_get_global_size_get_num_groups.kd:
	.long 0                                                    // 000000063E00: 00000000
	.long 0                                                    // 000000063E04: 00000000
	.long 0x110                                                // 000000063E08: 00000110
	.long 0                                                    // 000000063E0C: 00000000
	.long 0xb300                                               // 000000063E10: 0000B300
	.long 0                                                    // 000000063E14: 00000000
	.long 0                                                    // 000000063E18: 00000000
	.long 0                                                    // 000000063E1C: 00000000
	.long 0                                                    // 000000063E20: 00000000
	.long 0                                                    // 000000063E24: 00000000
	.long 0                                                    // 000000063E28: 00000000
	.long 0                                                    // 000000063E2C: 00000000
	.long 0x60af0101                                           // 000000063E30: 60AF0101
	.long 0x1384                                               // 000000063E34: 00001384
	.long 0x408                                                // 000000063E38: 00000408
	.long 0                                                    // 000000063E3C: 00000000
	.type	subtract_get_num_groups_get_num_groups.kd,@object
subtract_get_num_groups_get_num_groups.kd:
	.long 0                                                    // 000000063E40: 00000000
	.long 0                                                    // 000000063E44: 00000000
	.long 0x110                                                // 000000063E48: 00000110
	.long 0                                                    // 000000063E4C: 00000000
	.long 0xb4c0                                               // 000000063E50: 0000B4C0
	.long 0                                                    // 000000063E54: 00000000
	.long 0                                                    // 000000063E58: 00000000
	.long 0                                                    // 000000063E5C: 00000000
	.long 0                                                    // 000000063E60: 00000000
	.long 0                                                    // 000000063E64: 00000000
	.long 0                                                    // 000000063E68: 00000000
	.long 0                                                    // 000000063E6C: 00000000
	.long 0x60af0100                                           // 000000063E70: 60AF0100
	.long 0x1384                                               // 000000063E74: 00001384
	.long 0x408                                                // 000000063E78: 00000408
	.long 0                                                    // 000000063E7C: 00000000
	.type	subtract_get_work_dim_get_num_groups.kd,@object
subtract_get_work_dim_get_num_groups.kd:
	.long 0                                                    // 000000063E80: 00000000
	.long 0                                                    // 000000063E84: 00000000
	.long 0x110                                                // 000000063E88: 00000110
	.long 0                                                    // 000000063E8C: 00000000
	.long 0xb580                                               // 000000063E90: 0000B580
	.long 0                                                    // 000000063E94: 00000000
	.long 0                                                    // 000000063E98: 00000000
	.long 0                                                    // 000000063E9C: 00000000
	.long 0                                                    // 000000063EA0: 00000000
	.long 0                                                    // 000000063EA4: 00000000
	.long 0                                                    // 000000063EA8: 00000000
	.long 0                                                    // 000000063EAC: 00000000
	.long 0x60af0101                                           // 000000063EB0: 60AF0101
	.long 0x1384                                               // 000000063EB4: 00001384
	.long 0x408                                                // 000000063EB8: 00000408
	.long 0                                                    // 000000063EBC: 00000000
	.type	subtract_x_get_work_dim.kd,@object
subtract_x_get_work_dim.kd:
	.long 0                                                    // 000000063EC0: 00000000
	.long 0                                                    // 000000063EC4: 00000000
	.long 0x110                                                // 000000063EC8: 00000110
	.long 0                                                    // 000000063ECC: 00000000
	.ascii "@"                                                 // 000000063ED0: 40
	.byte 0xb7                                                 // 000000063ED1: B7
	.short 0                                                   // 000000063ED2: 0000
	.long 0                                                    // 000000063ED4: 00000000
	.long 0                                                    // 000000063ED8: 00000000
	.long 0                                                    // 000000063EDC: 00000000
	.long 0                                                    // 000000063EE0: 00000000
	.long 0                                                    // 000000063EE4: 00000000
	.long 0                                                    // 000000063EE8: 00000000
	.long 0                                                    // 000000063EEC: 00000000
	.long 0x60af0100                                           // 000000063EF0: 60AF0100
	.long 0x1384                                               // 000000063EF4: 00001384
	.long 0x408                                                // 000000063EF8: 00000408
	.long 0                                                    // 000000063EFC: 00000000
	.type	subtract_get_global_offset_get_work_dim.kd,@object
subtract_get_global_offset_get_work_dim.kd:
	.long 0                                                    // 000000063F00: 00000000
	.long 0                                                    // 000000063F04: 00000000
	.long 0x110                                                // 000000063F08: 00000110
	.long 0                                                    // 000000063F0C: 00000000
	.long 0xb800                                               // 000000063F10: 0000B800
	.long 0                                                    // 000000063F14: 00000000
	.long 0                                                    // 000000063F18: 00000000
	.long 0                                                    // 000000063F1C: 00000000
	.long 0                                                    // 000000063F20: 00000000
	.long 0                                                    // 000000063F24: 00000000
	.long 0                                                    // 000000063F28: 00000000
	.long 0                                                    // 000000063F2C: 00000000
	.long 0x60af0101                                           // 000000063F30: 60AF0101
	.long 0x1384                                               // 000000063F34: 00001384
	.long 0x408                                                // 000000063F38: 00000408
	.long 0                                                    // 000000063F3C: 00000000
	.type	subtract_get_local_id_get_work_dim.kd,@object
subtract_get_local_id_get_work_dim.kd:
	.long 0                                                    // 000000063F40: 00000000
	.long 0                                                    // 000000063F44: 00000000
	.long 0x110                                                // 000000063F48: 00000110
	.long 0                                                    // 000000063F4C: 00000000
	.long 0xb8c0                                               // 000000063F50: 0000B8C0
	.long 0                                                    // 000000063F54: 00000000
	.long 0                                                    // 000000063F58: 00000000
	.long 0                                                    // 000000063F5C: 00000000
	.long 0                                                    // 000000063F60: 00000000
	.long 0                                                    // 000000063F64: 00000000
	.long 0                                                    // 000000063F68: 00000000
	.long 0                                                    // 000000063F6C: 00000000
	.long 0x60af0101                                           // 000000063F70: 60AF0101
	.long 0x1384                                               // 000000063F74: 00001384
	.long 0x408                                                // 000000063F78: 00000408
	.long 0                                                    // 000000063F7C: 00000000
	.type	subtract_get_group_id_get_work_dim.kd,@object
subtract_get_group_id_get_work_dim.kd:
	.long 0                                                    // 000000063F80: 00000000
	.long 0                                                    // 000000063F84: 00000000
	.long 0x110                                                // 000000063F88: 00000110
	.long 0                                                    // 000000063F8C: 00000000
	.long 0xb980                                               // 000000063F90: 0000B980
	.long 0                                                    // 000000063F94: 00000000
	.long 0                                                    // 000000063F98: 00000000
	.long 0                                                    // 000000063F9C: 00000000
	.long 0                                                    // 000000063FA0: 00000000
	.long 0                                                    // 000000063FA4: 00000000
	.long 0                                                    // 000000063FA8: 00000000
	.long 0                                                    // 000000063FAC: 00000000
	.long 0x60af0101                                           // 000000063FB0: 60AF0101
	.long 0x1384                                               // 000000063FB4: 00001384
	.long 0x408                                                // 000000063FB8: 00000408
	.long 0                                                    // 000000063FBC: 00000000
	.type	subtract_get_local_size_get_work_dim.kd,@object
subtract_get_local_size_get_work_dim.kd:
	.long 0                                                    // 000000063FC0: 00000000
	.long 0                                                    // 000000063FC4: 00000000
	.long 0x110                                                // 000000063FC8: 00000110
	.long 0                                                    // 000000063FCC: 00000000
	.ascii "@"                                                 // 000000063FD0: 40
	.byte 0xba                                                 // 000000063FD1: BA
	.short 0                                                   // 000000063FD2: 0000
	.long 0                                                    // 000000063FD4: 00000000
	.long 0                                                    // 000000063FD8: 00000000
	.long 0                                                    // 000000063FDC: 00000000
	.long 0                                                    // 000000063FE0: 00000000
	.long 0                                                    // 000000063FE4: 00000000
	.long 0                                                    // 000000063FE8: 00000000
	.long 0                                                    // 000000063FEC: 00000000
	.long 0x60af0101                                           // 000000063FF0: 60AF0101
	.long 0x1384                                               // 000000063FF4: 00001384
	.long 0x408                                                // 000000063FF8: 00000408
	.long 0                                                    // 000000063FFC: 00000000
	.type	subtract_get_global_id_get_work_dim.kd,@object
subtract_get_global_id_get_work_dim.kd:
	.long 0                                                    // 000000064000: 00000000
	.long 0                                                    // 000000064004: 00000000
	.long 0x110                                                // 000000064008: 00000110
	.long 0                                                    // 00000006400C: 00000000
	.long 0xbc00                                               // 000000064010: 0000BC00
	.long 0                                                    // 000000064014: 00000000
	.long 0                                                    // 000000064018: 00000000
	.long 0                                                    // 00000006401C: 00000000
	.long 0                                                    // 000000064020: 00000000
	.long 0                                                    // 000000064024: 00000000
	.long 0                                                    // 000000064028: 00000000
	.long 0                                                    // 00000006402C: 00000000
	.long 0x60af0101                                           // 000000064030: 60AF0101
	.long 0x1384                                               // 000000064034: 00001384
	.long 0x408                                                // 000000064038: 00000408
	.long 0                                                    // 00000006403C: 00000000
	.type	subtract_get_global_size_get_work_dim.kd,@object
subtract_get_global_size_get_work_dim.kd:
	.long 0                                                    // 000000064040: 00000000
	.long 0                                                    // 000000064044: 00000000
	.long 0x110                                                // 000000064048: 00000110
	.long 0                                                    // 00000006404C: 00000000
	.long 0xbcc0                                               // 000000064050: 0000BCC0
	.long 0                                                    // 000000064054: 00000000
	.long 0                                                    // 000000064058: 00000000
	.long 0                                                    // 00000006405C: 00000000
	.long 0                                                    // 000000064060: 00000000
	.long 0                                                    // 000000064064: 00000000
	.long 0                                                    // 000000064068: 00000000
	.long 0                                                    // 00000006406C: 00000000
	.long 0x60af0101                                           // 000000064070: 60AF0101
	.long 0x1384                                               // 000000064074: 00001384
	.long 0x408                                                // 000000064078: 00000408
	.long 0                                                    // 00000006407C: 00000000
	.type	subtract_get_num_groups_get_work_dim.kd,@object
subtract_get_num_groups_get_work_dim.kd:
	.long 0                                                    // 000000064080: 00000000
	.long 0                                                    // 000000064084: 00000000
	.long 0x110                                                // 000000064088: 00000110
	.long 0                                                    // 00000006408C: 00000000
	.long 0xbe80                                               // 000000064090: 0000BE80
	.long 0                                                    // 000000064094: 00000000
	.long 0                                                    // 000000064098: 00000000
	.long 0                                                    // 00000006409C: 00000000
	.long 0                                                    // 0000000640A0: 00000000
	.long 0                                                    // 0000000640A4: 00000000
	.long 0                                                    // 0000000640A8: 00000000
	.long 0                                                    // 0000000640AC: 00000000
	.long 0x60af0101                                           // 0000000640B0: 60AF0101
	.long 0x1384                                               // 0000000640B4: 00001384
	.long 0x408                                                // 0000000640B8: 00000408
	.long 0                                                    // 0000000640BC: 00000000
	.type	subtract_get_work_dim_get_work_dim.kd,@object
subtract_get_work_dim_get_work_dim.kd:
	.long 0                                                    // 0000000640C0: 00000000
	.long 0                                                    // 0000000640C4: 00000000
	.long 0x110                                                // 0000000640C8: 00000110
	.long 0                                                    // 0000000640CC: 00000000
	.ascii "@"                                                 // 0000000640D0: 40
	.byte 0xc0                                                 // 0000000640D1: C0
	.short 0                                                   // 0000000640D2: 0000
	.long 0                                                    // 0000000640D4: 00000000
	.long 0                                                    // 0000000640D8: 00000000
	.long 0                                                    // 0000000640DC: 00000000
	.long 0                                                    // 0000000640E0: 00000000
	.long 0                                                    // 0000000640E4: 00000000
	.long 0                                                    // 0000000640E8: 00000000
	.long 0                                                    // 0000000640EC: 00000000
	.long 0x60af0100                                           // 0000000640F0: 60AF0100
	.long 0x1384                                               // 0000000640F4: 00001384
	.long 0x408                                                // 0000000640F8: 00000408
	.long 0                                                    // 0000000640FC: 00000000
	.type	subtract_x_64.kd,@object
subtract_x_64.kd:
	.long 0                                                    // 000000064100: 00000000
	.long 0                                                    // 000000064104: 00000000
	.long 0x110                                                // 000000064108: 00000110
	.long 0                                                    // 00000006410C: 00000000
	.long 0xc100                                               // 000000064110: 0000C100
	.long 0                                                    // 000000064114: 00000000
	.long 0                                                    // 000000064118: 00000000
	.long 0                                                    // 00000006411C: 00000000
	.long 0                                                    // 000000064120: 00000000
	.long 0                                                    // 000000064124: 00000000
	.long 0                                                    // 000000064128: 00000000
	.long 0                                                    // 00000006412C: 00000000
	.long 0x60af0100                                           // 000000064130: 60AF0100
	.long 0x84                                                 // 000000064134: 00000084
	.long 0x408                                                // 000000064138: 00000408
	.long 0                                                    // 00000006413C: 00000000
	.type	subtract_get_global_offset_64.kd,@object
subtract_get_global_offset_64.kd:
	.long 0                                                    // 000000064140: 00000000
	.long 0                                                    // 000000064144: 00000000
	.long 0x110                                                // 000000064148: 00000110
	.long 0                                                    // 00000006414C: 00000000
	.long 0xc1c0                                               // 000000064150: 0000C1C0
	.long 0                                                    // 000000064154: 00000000
	.long 0                                                    // 000000064158: 00000000
	.long 0                                                    // 00000006415C: 00000000
	.long 0                                                    // 000000064160: 00000000
	.long 0                                                    // 000000064164: 00000000
	.long 0                                                    // 000000064168: 00000000
	.long 0                                                    // 00000006416C: 00000000
	.long 0x60af0100                                           // 000000064170: 60AF0100
	.long 0x84                                                 // 000000064174: 00000084
	.long 0x408                                                // 000000064178: 00000408
	.long 0                                                    // 00000006417C: 00000000
	.type	subtract_get_local_id_64.kd,@object
subtract_get_local_id_64.kd:
	.long 0                                                    // 000000064180: 00000000
	.long 0                                                    // 000000064184: 00000000
	.long 0x110                                                // 000000064188: 00000110
	.long 0                                                    // 00000006418C: 00000000
	.long 0xc280                                               // 000000064190: 0000C280
	.long 0                                                    // 000000064194: 00000000
	.long 0                                                    // 000000064198: 00000000
	.long 0                                                    // 00000006419C: 00000000
	.long 0                                                    // 0000000641A0: 00000000
	.long 0                                                    // 0000000641A4: 00000000
	.long 0                                                    // 0000000641A8: 00000000
	.long 0                                                    // 0000000641AC: 00000000
	.long 0x60af0100                                           // 0000000641B0: 60AF0100
	.long 0x84                                                 // 0000000641B4: 00000084
	.long 0x408                                                // 0000000641B8: 00000408
	.long 0                                                    // 0000000641BC: 00000000
	.type	subtract_get_group_id_64.kd,@object
subtract_get_group_id_64.kd:
	.long 0                                                    // 0000000641C0: 00000000
	.long 0                                                    // 0000000641C4: 00000000
	.long 0x110                                                // 0000000641C8: 00000110
	.long 0                                                    // 0000000641CC: 00000000
	.ascii "@"                                                 // 0000000641D0: 40
	.byte 0xc3                                                 // 0000000641D1: C3
	.short 0                                                   // 0000000641D2: 0000
	.long 0                                                    // 0000000641D4: 00000000
	.long 0                                                    // 0000000641D8: 00000000
	.long 0                                                    // 0000000641DC: 00000000
	.long 0                                                    // 0000000641E0: 00000000
	.long 0                                                    // 0000000641E4: 00000000
	.long 0                                                    // 0000000641E8: 00000000
	.long 0                                                    // 0000000641EC: 00000000
	.long 0x60af0100                                           // 0000000641F0: 60AF0100
	.long 0x84                                                 // 0000000641F4: 00000084
	.long 0x408                                                // 0000000641F8: 00000408
	.long 0                                                    // 0000000641FC: 00000000
	.type	subtract_get_local_size_64.kd,@object
subtract_get_local_size_64.kd:
	.long 0                                                    // 000000064200: 00000000
	.long 0                                                    // 000000064204: 00000000
	.long 0x110                                                // 000000064208: 00000110
	.long 0                                                    // 00000006420C: 00000000
	.long 0xc400                                               // 000000064210: 0000C400
	.long 0                                                    // 000000064214: 00000000
	.long 0                                                    // 000000064218: 00000000
	.long 0                                                    // 00000006421C: 00000000
	.long 0                                                    // 000000064220: 00000000
	.long 0                                                    // 000000064224: 00000000
	.long 0                                                    // 000000064228: 00000000
	.long 0                                                    // 00000006422C: 00000000
	.long 0x60af0100                                           // 000000064230: 60AF0100
	.long 0x84                                                 // 000000064234: 00000084
	.long 0x408                                                // 000000064238: 00000408
	.long 0                                                    // 00000006423C: 00000000
	.type	subtract_get_global_id_64.kd,@object
subtract_get_global_id_64.kd:
	.long 0                                                    // 000000064240: 00000000
	.long 0                                                    // 000000064244: 00000000
	.long 0x110                                                // 000000064248: 00000110
	.long 0                                                    // 00000006424C: 00000000
	.long 0xc4c0                                               // 000000064250: 0000C4C0
	.long 0                                                    // 000000064254: 00000000
	.long 0                                                    // 000000064258: 00000000
	.long 0                                                    // 00000006425C: 00000000
	.long 0                                                    // 000000064260: 00000000
	.long 0                                                    // 000000064264: 00000000
	.long 0                                                    // 000000064268: 00000000
	.long 0                                                    // 00000006426C: 00000000
	.long 0x60af0100                                           // 000000064270: 60AF0100
	.long 0x84                                                 // 000000064274: 00000084
	.long 0x408                                                // 000000064278: 00000408
	.long 0                                                    // 00000006427C: 00000000
	.type	subtract_get_global_size_64.kd,@object
subtract_get_global_size_64.kd:
	.long 0                                                    // 000000064280: 00000000
	.long 0                                                    // 000000064284: 00000000
	.long 0x110                                                // 000000064288: 00000110
	.long 0                                                    // 00000006428C: 00000000
	.long 0xc580                                               // 000000064290: 0000C580
	.long 0                                                    // 000000064294: 00000000
	.long 0                                                    // 000000064298: 00000000
	.long 0                                                    // 00000006429C: 00000000
	.long 0                                                    // 0000000642A0: 00000000
	.long 0                                                    // 0000000642A4: 00000000
	.long 0                                                    // 0000000642A8: 00000000
	.long 0                                                    // 0000000642AC: 00000000
	.long 0x60af0100                                           // 0000000642B0: 60AF0100
	.long 0x84                                                 // 0000000642B4: 00000084
	.long 0x408                                                // 0000000642B8: 00000408
	.long 0                                                    // 0000000642BC: 00000000
	.type	subtract_get_num_groups_64.kd,@object
subtract_get_num_groups_64.kd:
	.long 0                                                    // 0000000642C0: 00000000
	.long 0                                                    // 0000000642C4: 00000000
	.long 0x110                                                // 0000000642C8: 00000110
	.long 0                                                    // 0000000642CC: 00000000
	.ascii "@"                                                 // 0000000642D0: 40
	.byte 0xc6                                                 // 0000000642D1: C6
	.short 0                                                   // 0000000642D2: 0000
	.long 0                                                    // 0000000642D4: 00000000
	.long 0                                                    // 0000000642D8: 00000000
	.long 0                                                    // 0000000642DC: 00000000
	.long 0                                                    // 0000000642E0: 00000000
	.long 0                                                    // 0000000642E4: 00000000
	.long 0                                                    // 0000000642E8: 00000000
	.long 0                                                    // 0000000642EC: 00000000
	.long 0x60af0100                                           // 0000000642F0: 60AF0100
	.long 0x84                                                 // 0000000642F4: 00000084
	.long 0x408                                                // 0000000642F8: 00000408
	.long 0                                                    // 0000000642FC: 00000000
	.type	subtract_get_work_dim.kd,@object
subtract_get_work_dim.kd:
	.long 0                                                    // 000000064300: 00000000
	.long 0                                                    // 000000064304: 00000000
	.long 0x110                                                // 000000064308: 00000110
	.long 0                                                    // 00000006430C: 00000000
	.long 0xc700                                               // 000000064310: 0000C700
	.long 0                                                    // 000000064314: 00000000
	.long 0                                                    // 000000064318: 00000000
	.long 0                                                    // 00000006431C: 00000000
	.long 0                                                    // 000000064320: 00000000
	.long 0                                                    // 000000064324: 00000000
	.long 0                                                    // 000000064328: 00000000
	.long 0                                                    // 00000006432C: 00000000
	.long 0x60af0100                                           // 000000064330: 60AF0100
	.long 0x84                                                 // 000000064334: 00000084
	.long 0x408                                                // 000000064338: 00000408
	.long 0                                                    // 00000006433C: 00000000
	.type	subtract_x_8_8.kd,@object
subtract_x_8_8.kd:
	.long 0                                                    // 000000064340: 00000000
	.long 0                                                    // 000000064344: 00000000
	.long 0x110                                                // 000000064348: 00000110
	.long 0                                                    // 00000006434C: 00000000
	.long 0xc7c0                                               // 000000064350: 0000C7C0
	.long 0                                                    // 000000064354: 00000000
	.long 0                                                    // 000000064358: 00000000
	.long 0                                                    // 00000006435C: 00000000
	.long 0                                                    // 000000064360: 00000000
	.long 0                                                    // 000000064364: 00000000
	.long 0                                                    // 000000064368: 00000000
	.long 0                                                    // 00000006436C: 00000000
	.long 0x60af0100                                           // 000000064370: 60AF0100
	.long 0x984                                                // 000000064374: 00000984
	.long 0x408                                                // 000000064378: 00000408
	.long 0                                                    // 00000006437C: 00000000
	.type	subtract_get_global_offset_8_8.kd,@object
subtract_get_global_offset_8_8.kd:
	.long 0                                                    // 000000064380: 00000000
	.long 0                                                    // 000000064384: 00000000
	.long 0x110                                                // 000000064388: 00000110
	.long 0                                                    // 00000006438C: 00000000
	.long 0xc880                                               // 000000064390: 0000C880
	.long 0                                                    // 000000064394: 00000000
	.long 0                                                    // 000000064398: 00000000
	.long 0                                                    // 00000006439C: 00000000
	.long 0                                                    // 0000000643A0: 00000000
	.long 0                                                    // 0000000643A4: 00000000
	.long 0                                                    // 0000000643A8: 00000000
	.long 0                                                    // 0000000643AC: 00000000
	.long 0x60af0100                                           // 0000000643B0: 60AF0100
	.long 0x84                                                 // 0000000643B4: 00000084
	.long 0x408                                                // 0000000643B8: 00000408
	.long 0                                                    // 0000000643BC: 00000000
	.type	subtract_get_local_id_8_8.kd,@object
subtract_get_local_id_8_8.kd:
	.long 0                                                    // 0000000643C0: 00000000
	.long 0                                                    // 0000000643C4: 00000000
	.long 0x110                                                // 0000000643C8: 00000110
	.long 0                                                    // 0000000643CC: 00000000
	.ascii "@"                                                 // 0000000643D0: 40
	.byte 0xc9                                                 // 0000000643D1: C9
	.short 0                                                   // 0000000643D2: 0000
	.long 0                                                    // 0000000643D4: 00000000
	.long 0                                                    // 0000000643D8: 00000000
	.long 0                                                    // 0000000643DC: 00000000
	.long 0                                                    // 0000000643E0: 00000000
	.long 0                                                    // 0000000643E4: 00000000
	.long 0                                                    // 0000000643E8: 00000000
	.long 0                                                    // 0000000643EC: 00000000
	.long 0x60af0100                                           // 0000000643F0: 60AF0100
	.long 0x884                                                // 0000000643F4: 00000884
	.long 0x408                                                // 0000000643F8: 00000408
	.long 0                                                    // 0000000643FC: 00000000
	.type	subtract_get_group_id_8_8.kd,@object
subtract_get_group_id_8_8.kd:
	.long 0                                                    // 000000064400: 00000000
	.long 0                                                    // 000000064404: 00000000
	.long 0x110                                                // 000000064408: 00000110
	.long 0                                                    // 00000006440C: 00000000
	.long 0xca00                                               // 000000064410: 0000CA00
	.long 0                                                    // 000000064414: 00000000
	.long 0                                                    // 000000064418: 00000000
	.long 0                                                    // 00000006441C: 00000000
	.long 0                                                    // 000000064420: 00000000
	.long 0                                                    // 000000064424: 00000000
	.long 0                                                    // 000000064428: 00000000
	.long 0                                                    // 00000006442C: 00000000
	.long 0x60af0100                                           // 000000064430: 60AF0100
	.long 0x184                                                // 000000064434: 00000184
	.long 0x408                                                // 000000064438: 00000408
	.long 0                                                    // 00000006443C: 00000000
	.type	subtract_get_local_size_8_8.kd,@object
subtract_get_local_size_8_8.kd:
	.long 0                                                    // 000000064440: 00000000
	.long 0                                                    // 000000064444: 00000000
	.long 0x110                                                // 000000064448: 00000110
	.long 0                                                    // 00000006444C: 00000000
	.long 0xcac0                                               // 000000064450: 0000CAC0
	.long 0                                                    // 000000064454: 00000000
	.long 0                                                    // 000000064458: 00000000
	.long 0                                                    // 00000006445C: 00000000
	.long 0                                                    // 000000064460: 00000000
	.long 0                                                    // 000000064464: 00000000
	.long 0                                                    // 000000064468: 00000000
	.long 0                                                    // 00000006446C: 00000000
	.long 0x60af0100                                           // 000000064470: 60AF0100
	.long 0x184                                                // 000000064474: 00000184
	.long 0x408                                                // 000000064478: 00000408
	.long 0                                                    // 00000006447C: 00000000
	.type	subtract_get_global_id_8_8.kd,@object
subtract_get_global_id_8_8.kd:
	.long 0                                                    // 000000064480: 00000000
	.long 0                                                    // 000000064484: 00000000
	.long 0x110                                                // 000000064488: 00000110
	.long 0                                                    // 00000006448C: 00000000
	.long 0xcb80                                               // 000000064490: 0000CB80
	.long 0                                                    // 000000064494: 00000000
	.long 0                                                    // 000000064498: 00000000
	.long 0                                                    // 00000006449C: 00000000
	.long 0                                                    // 0000000644A0: 00000000
	.long 0                                                    // 0000000644A4: 00000000
	.long 0                                                    // 0000000644A8: 00000000
	.long 0                                                    // 0000000644AC: 00000000
	.long 0x60af0100                                           // 0000000644B0: 60AF0100
	.long 0x984                                                // 0000000644B4: 00000984
	.long 0x408                                                // 0000000644B8: 00000408
	.long 0                                                    // 0000000644BC: 00000000
	.type	subtract_get_global_size_8_8.kd,@object
subtract_get_global_size_8_8.kd:
	.long 0                                                    // 0000000644C0: 00000000
	.long 0                                                    // 0000000644C4: 00000000
	.long 0x110                                                // 0000000644C8: 00000110
	.long 0                                                    // 0000000644CC: 00000000
	.ascii "@"                                                 // 0000000644D0: 40
	.byte 0xcc                                                 // 0000000644D1: CC
	.short 0                                                   // 0000000644D2: 0000
	.long 0                                                    // 0000000644D4: 00000000
	.long 0                                                    // 0000000644D8: 00000000
	.long 0                                                    // 0000000644DC: 00000000
	.long 0                                                    // 0000000644E0: 00000000
	.long 0                                                    // 0000000644E4: 00000000
	.long 0                                                    // 0000000644E8: 00000000
	.long 0                                                    // 0000000644EC: 00000000
	.long 0x60af0100                                           // 0000000644F0: 60AF0100
	.long 0x84                                                 // 0000000644F4: 00000084
	.long 0x408                                                // 0000000644F8: 00000408
	.long 0                                                    // 0000000644FC: 00000000
	.type	subtract_get_num_groups_8_8.kd,@object
subtract_get_num_groups_8_8.kd:
	.long 0                                                    // 000000064500: 00000000
	.long 0                                                    // 000000064504: 00000000
	.long 0x110                                                // 000000064508: 00000110
	.long 0                                                    // 00000006450C: 00000000
	.long 0xcd00                                               // 000000064510: 0000CD00
	.long 0                                                    // 000000064514: 00000000
	.long 0                                                    // 000000064518: 00000000
	.long 0                                                    // 00000006451C: 00000000
	.long 0                                                    // 000000064520: 00000000
	.long 0                                                    // 000000064524: 00000000
	.long 0                                                    // 000000064528: 00000000
	.long 0                                                    // 00000006452C: 00000000
	.long 0x60af0100                                           // 000000064530: 60AF0100
	.long 0x84                                                 // 000000064534: 00000084
	.long 0x408                                                // 000000064538: 00000408
	.long 0                                                    // 00000006453C: 00000000
	.type	subtract_get_work_dim_8_8.kd,@object
subtract_get_work_dim_8_8.kd:
	.long 0                                                    // 000000064540: 00000000
	.long 0                                                    // 000000064544: 00000000
	.long 0x110                                                // 000000064548: 00000110
	.long 0                                                    // 00000006454C: 00000000
	.long 0xcdc0                                               // 000000064550: 0000CDC0
	.long 0                                                    // 000000064554: 00000000
	.long 0                                                    // 000000064558: 00000000
	.long 0                                                    // 00000006455C: 00000000
	.long 0                                                    // 000000064560: 00000000
	.long 0                                                    // 000000064564: 00000000
	.long 0                                                    // 000000064568: 00000000
	.long 0                                                    // 00000006456C: 00000000
	.long 0x60af0100                                           // 000000064570: 60AF0100
	.long 0x984                                                // 000000064574: 00000984
	.long 0x408                                                // 000000064578: 00000408
	.long 0                                                    // 00000006457C: 00000000
	.type	subtract_long_x_x.kd,@object
subtract_long_x_x.kd:
	.long 0                                                    // 000000064580: 00000000
	.long 0                                                    // 000000064584: 00000000
	.long 0x110                                                // 000000064588: 00000110
	.long 0                                                    // 00000006458C: 00000000
	.long 0xce80                                               // 000000064590: 0000CE80
	.long 0                                                    // 000000064594: 00000000
	.long 0                                                    // 000000064598: 00000000
	.long 0                                                    // 00000006459C: 00000000
	.long 0                                                    // 0000000645A0: 00000000
	.long 0                                                    // 0000000645A4: 00000000
	.long 0                                                    // 0000000645A8: 00000000
	.long 0                                                    // 0000000645AC: 00000000
	.long 0x60af0100                                           // 0000000645B0: 60AF0100
	.long 0x84                                                 // 0000000645B4: 00000084
	.long 0x408                                                // 0000000645B8: 00000408
	.long 0                                                    // 0000000645BC: 00000000
	.type	subtract_long_get_global_offset_x.kd,@object
subtract_long_get_global_offset_x.kd:
	.long 0                                                    // 0000000645C0: 00000000
	.long 0                                                    // 0000000645C4: 00000000
	.long 0x110                                                // 0000000645C8: 00000110
	.long 0                                                    // 0000000645CC: 00000000
	.ascii "@"                                                 // 0000000645D0: 40
	.byte 0xcf                                                 // 0000000645D1: CF
	.short 0                                                   // 0000000645D2: 0000
	.long 0                                                    // 0000000645D4: 00000000
	.long 0                                                    // 0000000645D8: 00000000
	.long 0                                                    // 0000000645DC: 00000000
	.long 0                                                    // 0000000645E0: 00000000
	.long 0                                                    // 0000000645E4: 00000000
	.long 0                                                    // 0000000645E8: 00000000
	.long 0                                                    // 0000000645EC: 00000000
	.long 0x60af0100                                           // 0000000645F0: 60AF0100
	.long 0x1384                                               // 0000000645F4: 00001384
	.long 0x408                                                // 0000000645F8: 00000408
	.long 0                                                    // 0000000645FC: 00000000
	.type	subtract_long_get_local_id_x.kd,@object
subtract_long_get_local_id_x.kd:
	.long 0                                                    // 000000064600: 00000000
	.long 0                                                    // 000000064604: 00000000
	.long 0x110                                                // 000000064608: 00000110
	.long 0                                                    // 00000006460C: 00000000
	.long 0xd000                                               // 000000064610: 0000D000
	.long 0                                                    // 000000064614: 00000000
	.long 0                                                    // 000000064618: 00000000
	.long 0                                                    // 00000006461C: 00000000
	.long 0                                                    // 000000064620: 00000000
	.long 0                                                    // 000000064624: 00000000
	.long 0                                                    // 000000064628: 00000000
	.long 0                                                    // 00000006462C: 00000000
	.long 0x60af0101                                           // 000000064630: 60AF0101
	.long 0x1384                                               // 000000064634: 00001384
	.long 0x408                                                // 000000064638: 00000408
	.long 0                                                    // 00000006463C: 00000000
	.type	subtract_long_get_group_id_x.kd,@object
subtract_long_get_group_id_x.kd:
	.long 0                                                    // 000000064640: 00000000
	.long 0                                                    // 000000064644: 00000000
	.long 0x110                                                // 000000064648: 00000110
	.long 0                                                    // 00000006464C: 00000000
	.long 0xd0c0                                               // 000000064650: 0000D0C0
	.long 0                                                    // 000000064654: 00000000
	.long 0                                                    // 000000064658: 00000000
	.long 0                                                    // 00000006465C: 00000000
	.long 0                                                    // 000000064660: 00000000
	.long 0                                                    // 000000064664: 00000000
	.long 0                                                    // 000000064668: 00000000
	.long 0                                                    // 00000006466C: 00000000
	.long 0x60af0100                                           // 000000064670: 60AF0100
	.long 0x1384                                               // 000000064674: 00001384
	.long 0x408                                                // 000000064678: 00000408
	.long 0                                                    // 00000006467C: 00000000
	.type	subtract_long_get_local_size_x.kd,@object
subtract_long_get_local_size_x.kd:
	.long 0                                                    // 000000064680: 00000000
	.long 0                                                    // 000000064684: 00000000
	.long 0x110                                                // 000000064688: 00000110
	.long 0                                                    // 00000006468C: 00000000
	.long 0xd180                                               // 000000064690: 0000D180
	.long 0                                                    // 000000064694: 00000000
	.long 0                                                    // 000000064698: 00000000
	.long 0                                                    // 00000006469C: 00000000
	.long 0                                                    // 0000000646A0: 00000000
	.long 0                                                    // 0000000646A4: 00000000
	.long 0                                                    // 0000000646A8: 00000000
	.long 0                                                    // 0000000646AC: 00000000
	.long 0x60af0101                                           // 0000000646B0: 60AF0101
	.long 0x1384                                               // 0000000646B4: 00001384
	.long 0x408                                                // 0000000646B8: 00000408
	.long 0                                                    // 0000000646BC: 00000000
	.type	subtract_long_get_global_id_x.kd,@object
subtract_long_get_global_id_x.kd:
	.long 0                                                    // 0000000646C0: 00000000
	.long 0                                                    // 0000000646C4: 00000000
	.long 0x110                                                // 0000000646C8: 00000110
	.long 0                                                    // 0000000646CC: 00000000
	.ascii "@"                                                 // 0000000646D0: 40
	.byte 0xd3                                                 // 0000000646D1: D3
	.short 0                                                   // 0000000646D2: 0000
	.long 0                                                    // 0000000646D4: 00000000
	.long 0                                                    // 0000000646D8: 00000000
	.long 0                                                    // 0000000646DC: 00000000
	.long 0                                                    // 0000000646E0: 00000000
	.long 0                                                    // 0000000646E4: 00000000
	.long 0                                                    // 0000000646E8: 00000000
	.long 0                                                    // 0000000646EC: 00000000
	.long 0x60af0101                                           // 0000000646F0: 60AF0101
	.long 0x1384                                               // 0000000646F4: 00001384
	.long 0x408                                                // 0000000646F8: 00000408
	.long 0                                                    // 0000000646FC: 00000000
	.type	subtract_long_get_global_size_x.kd,@object
subtract_long_get_global_size_x.kd:
	.long 0                                                    // 000000064700: 00000000
	.long 0                                                    // 000000064704: 00000000
	.long 0x110                                                // 000000064708: 00000110
	.long 0                                                    // 00000006470C: 00000000
	.long 0xd400                                               // 000000064710: 0000D400
	.long 0                                                    // 000000064714: 00000000
	.long 0                                                    // 000000064718: 00000000
	.long 0                                                    // 00000006471C: 00000000
	.long 0                                                    // 000000064720: 00000000
	.long 0                                                    // 000000064724: 00000000
	.long 0                                                    // 000000064728: 00000000
	.long 0                                                    // 00000006472C: 00000000
	.long 0x60af0101                                           // 000000064730: 60AF0101
	.long 0x1384                                               // 000000064734: 00001384
	.long 0x408                                                // 000000064738: 00000408
	.long 0                                                    // 00000006473C: 00000000
	.type	subtract_long_get_num_groups_x.kd,@object
subtract_long_get_num_groups_x.kd:
	.long 0                                                    // 000000064740: 00000000
	.long 0                                                    // 000000064744: 00000000
	.long 0x110                                                // 000000064748: 00000110
	.long 0                                                    // 00000006474C: 00000000
	.long 0xd5c0                                               // 000000064750: 0000D5C0
	.long 0                                                    // 000000064754: 00000000
	.long 0                                                    // 000000064758: 00000000
	.long 0                                                    // 00000006475C: 00000000
	.long 0                                                    // 000000064760: 00000000
	.long 0                                                    // 000000064764: 00000000
	.long 0                                                    // 000000064768: 00000000
	.long 0                                                    // 00000006476C: 00000000
	.long 0x60af0101                                           // 000000064770: 60AF0101
	.long 0x1384                                               // 000000064774: 00001384
	.long 0x408                                                // 000000064778: 00000408
	.long 0                                                    // 00000006477C: 00000000
	.type	subtract_long_get_work_dim_x.kd,@object
subtract_long_get_work_dim_x.kd:
	.long 0                                                    // 000000064780: 00000000
	.long 0                                                    // 000000064784: 00000000
	.long 0x110                                                // 000000064788: 00000110
	.long 0                                                    // 00000006478C: 00000000
	.long 0xd780                                               // 000000064790: 0000D780
	.long 0                                                    // 000000064794: 00000000
	.long 0                                                    // 000000064798: 00000000
	.long 0                                                    // 00000006479C: 00000000
	.long 0                                                    // 0000000647A0: 00000000
	.long 0                                                    // 0000000647A4: 00000000
	.long 0                                                    // 0000000647A8: 00000000
	.long 0                                                    // 0000000647AC: 00000000
	.long 0x60af0100                                           // 0000000647B0: 60AF0100
	.long 0x84                                                 // 0000000647B4: 00000084
	.long 0x408                                                // 0000000647B8: 00000408
	.long 0                                                    // 0000000647BC: 00000000
	.type	subtract_long_x_get_global_offset.kd,@object
subtract_long_x_get_global_offset.kd:
	.long 0                                                    // 0000000647C0: 00000000
	.long 0                                                    // 0000000647C4: 00000000
	.long 0x110                                                // 0000000647C8: 00000110
	.long 0                                                    // 0000000647CC: 00000000
	.ascii "@"                                                 // 0000000647D0: 40
	.byte 0xd8                                                 // 0000000647D1: D8
	.short 0                                                   // 0000000647D2: 0000
	.long 0                                                    // 0000000647D4: 00000000
	.long 0                                                    // 0000000647D8: 00000000
	.long 0                                                    // 0000000647DC: 00000000
	.long 0                                                    // 0000000647E0: 00000000
	.long 0                                                    // 0000000647E4: 00000000
	.long 0                                                    // 0000000647E8: 00000000
	.long 0                                                    // 0000000647EC: 00000000
	.long 0x60af0101                                           // 0000000647F0: 60AF0101
	.long 0x1384                                               // 0000000647F4: 00001384
	.long 0x408                                                // 0000000647F8: 00000408
	.long 0                                                    // 0000000647FC: 00000000
	.type	subtract_long_get_global_offset_get_global_offset.kd,@object
subtract_long_get_global_offset_get_global_offset.kd:
	.long 0                                                    // 000000064800: 00000000
	.long 0                                                    // 000000064804: 00000000
	.long 0x110                                                // 000000064808: 00000110
	.long 0                                                    // 00000006480C: 00000000
	.long 0xda00                                               // 000000064810: 0000DA00
	.long 0                                                    // 000000064814: 00000000
	.long 0                                                    // 000000064818: 00000000
	.long 0                                                    // 00000006481C: 00000000
	.long 0                                                    // 000000064820: 00000000
	.long 0                                                    // 000000064824: 00000000
	.long 0                                                    // 000000064828: 00000000
	.long 0                                                    // 00000006482C: 00000000
	.long 0x60af0101                                           // 000000064830: 60AF0101
	.long 0x1384                                               // 000000064834: 00001384
	.long 0x408                                                // 000000064838: 00000408
	.long 0                                                    // 00000006483C: 00000000
	.type	subtract_long_get_local_id_get_global_offset.kd,@object
subtract_long_get_local_id_get_global_offset.kd:
	.long 0                                                    // 000000064840: 00000000
	.long 0                                                    // 000000064844: 00000000
	.long 0x110                                                // 000000064848: 00000110
	.long 0                                                    // 00000006484C: 00000000
	.long 0xdac0                                               // 000000064850: 0000DAC0
	.long 0                                                    // 000000064854: 00000000
	.long 0                                                    // 000000064858: 00000000
	.long 0                                                    // 00000006485C: 00000000
	.long 0                                                    // 000000064860: 00000000
	.long 0                                                    // 000000064864: 00000000
	.long 0                                                    // 000000064868: 00000000
	.long 0                                                    // 00000006486C: 00000000
	.long 0x60af0101                                           // 000000064870: 60AF0101
	.long 0x1384                                               // 000000064874: 00001384
	.long 0x408                                                // 000000064878: 00000408
	.long 0                                                    // 00000006487C: 00000000
	.type	subtract_long_get_group_id_get_global_offset.kd,@object
subtract_long_get_group_id_get_global_offset.kd:
	.long 0                                                    // 000000064880: 00000000
	.long 0                                                    // 000000064884: 00000000
	.long 0x110                                                // 000000064888: 00000110
	.long 0                                                    // 00000006488C: 00000000
	.long 0xdb80                                               // 000000064890: 0000DB80
	.long 0                                                    // 000000064894: 00000000
	.long 0                                                    // 000000064898: 00000000
	.long 0                                                    // 00000006489C: 00000000
	.long 0                                                    // 0000000648A0: 00000000
	.long 0                                                    // 0000000648A4: 00000000
	.long 0                                                    // 0000000648A8: 00000000
	.long 0                                                    // 0000000648AC: 00000000
	.long 0x60af0101                                           // 0000000648B0: 60AF0101
	.long 0x1384                                               // 0000000648B4: 00001384
	.long 0x408                                                // 0000000648B8: 00000408
	.long 0                                                    // 0000000648BC: 00000000
	.type	subtract_long_get_local_size_get_global_offset.kd,@object
subtract_long_get_local_size_get_global_offset.kd:
	.long 0                                                    // 0000000648C0: 00000000
	.long 0                                                    // 0000000648C4: 00000000
	.long 0x110                                                // 0000000648C8: 00000110
	.long 0                                                    // 0000000648CC: 00000000
	.ascii "@"                                                 // 0000000648D0: 40
	.byte 0xdc                                                 // 0000000648D1: DC
	.short 0                                                   // 0000000648D2: 0000
	.long 0                                                    // 0000000648D4: 00000000
	.long 0                                                    // 0000000648D8: 00000000
	.long 0                                                    // 0000000648DC: 00000000
	.long 0                                                    // 0000000648E0: 00000000
	.long 0                                                    // 0000000648E4: 00000000
	.long 0                                                    // 0000000648E8: 00000000
	.long 0                                                    // 0000000648EC: 00000000
	.long 0x60af0101                                           // 0000000648F0: 60AF0101
	.long 0x1384                                               // 0000000648F4: 00001384
	.long 0x408                                                // 0000000648F8: 00000408
	.long 0                                                    // 0000000648FC: 00000000
	.type	subtract_long_get_global_id_get_global_offset.kd,@object
subtract_long_get_global_id_get_global_offset.kd:
	.long 0                                                    // 000000064900: 00000000
	.long 0                                                    // 000000064904: 00000000
	.long 0x110                                                // 000000064908: 00000110
	.long 0                                                    // 00000006490C: 00000000
	.long 0xde00                                               // 000000064910: 0000DE00
	.long 0                                                    // 000000064914: 00000000
	.long 0                                                    // 000000064918: 00000000
	.long 0                                                    // 00000006491C: 00000000
	.long 0                                                    // 000000064920: 00000000
	.long 0                                                    // 000000064924: 00000000
	.long 0                                                    // 000000064928: 00000000
	.long 0                                                    // 00000006492C: 00000000
	.long 0x60af0101                                           // 000000064930: 60AF0101
	.long 0x1384                                               // 000000064934: 00001384
	.long 0x408                                                // 000000064938: 00000408
	.long 0                                                    // 00000006493C: 00000000
	.type	subtract_long_get_global_size_get_global_offset.kd,@object
subtract_long_get_global_size_get_global_offset.kd:
	.long 0                                                    // 000000064940: 00000000
	.long 0                                                    // 000000064944: 00000000
	.long 0x110                                                // 000000064948: 00000110
	.long 0                                                    // 00000006494C: 00000000
	.long 0xdfc0                                               // 000000064950: 0000DFC0
	.long 0                                                    // 000000064954: 00000000
	.long 0                                                    // 000000064958: 00000000
	.long 0                                                    // 00000006495C: 00000000
	.long 0                                                    // 000000064960: 00000000
	.long 0                                                    // 000000064964: 00000000
	.long 0                                                    // 000000064968: 00000000
	.long 0                                                    // 00000006496C: 00000000
	.long 0x60af0101                                           // 000000064970: 60AF0101
	.long 0x1384                                               // 000000064974: 00001384
	.long 0x408                                                // 000000064978: 00000408
	.long 0                                                    // 00000006497C: 00000000
	.type	subtract_long_get_num_groups_get_global_offset.kd,@object
subtract_long_get_num_groups_get_global_offset.kd:
	.long 0                                                    // 000000064980: 00000000
	.long 0                                                    // 000000064984: 00000000
	.long 0x110                                                // 000000064988: 00000110
	.long 0                                                    // 00000006498C: 00000000
	.long 0xe180                                               // 000000064990: 0000E180
	.long 0                                                    // 000000064994: 00000000
	.long 0                                                    // 000000064998: 00000000
	.long 0                                                    // 00000006499C: 00000000
	.long 0                                                    // 0000000649A0: 00000000
	.long 0                                                    // 0000000649A4: 00000000
	.long 0                                                    // 0000000649A8: 00000000
	.long 0                                                    // 0000000649AC: 00000000
	.long 0x60af0101                                           // 0000000649B0: 60AF0101
	.long 0x1384                                               // 0000000649B4: 00001384
	.long 0x408                                                // 0000000649B8: 00000408
	.long 0                                                    // 0000000649BC: 00000000
	.type	subtract_long_get_work_dim_get_global_offset.kd,@object
subtract_long_get_work_dim_get_global_offset.kd:
	.long 0                                                    // 0000000649C0: 00000000
	.long 0                                                    // 0000000649C4: 00000000
	.long 0x110                                                // 0000000649C8: 00000110
	.long 0                                                    // 0000000649CC: 00000000
	.ascii "@"                                                 // 0000000649D0: 40
	.byte 0xe3                                                 // 0000000649D1: E3
	.short 0                                                   // 0000000649D2: 0000
	.long 0                                                    // 0000000649D4: 00000000
	.long 0                                                    // 0000000649D8: 00000000
	.long 0                                                    // 0000000649DC: 00000000
	.long 0                                                    // 0000000649E0: 00000000
	.long 0                                                    // 0000000649E4: 00000000
	.long 0                                                    // 0000000649E8: 00000000
	.long 0                                                    // 0000000649EC: 00000000
	.long 0x60af0101                                           // 0000000649F0: 60AF0101
	.long 0x1384                                               // 0000000649F4: 00001384
	.long 0x408                                                // 0000000649F8: 00000408
	.long 0                                                    // 0000000649FC: 00000000
	.type	subtract_long_x_get_local_id.kd,@object
subtract_long_x_get_local_id.kd:
	.long 0                                                    // 000000064A00: 00000000
	.long 0                                                    // 000000064A04: 00000000
	.long 0x110                                                // 000000064A08: 00000110
	.long 0                                                    // 000000064A0C: 00000000
	.long 0xe500                                               // 000000064A10: 0000E500
	.long 0                                                    // 000000064A14: 00000000
	.long 0                                                    // 000000064A18: 00000000
	.long 0                                                    // 000000064A1C: 00000000
	.long 0                                                    // 000000064A20: 00000000
	.long 0                                                    // 000000064A24: 00000000
	.long 0                                                    // 000000064A28: 00000000
	.long 0                                                    // 000000064A2C: 00000000
	.long 0x60af0101                                           // 000000064A30: 60AF0101
	.long 0x1384                                               // 000000064A34: 00001384
	.long 0x408                                                // 000000064A38: 00000408
	.long 0                                                    // 000000064A3C: 00000000
	.type	subtract_long_get_global_offset_get_local_id.kd,@object
subtract_long_get_global_offset_get_local_id.kd:
	.long 0                                                    // 000000064A40: 00000000
	.long 0                                                    // 000000064A44: 00000000
	.long 0x110                                                // 000000064A48: 00000110
	.long 0                                                    // 000000064A4C: 00000000
	.long 0xe6c0                                               // 000000064A50: 0000E6C0
	.long 0                                                    // 000000064A54: 00000000
	.long 0                                                    // 000000064A58: 00000000
	.long 0                                                    // 000000064A5C: 00000000
	.long 0                                                    // 000000064A60: 00000000
	.long 0                                                    // 000000064A64: 00000000
	.long 0                                                    // 000000064A68: 00000000
	.long 0                                                    // 000000064A6C: 00000000
	.long 0x60af0101                                           // 000000064A70: 60AF0101
	.long 0x1384                                               // 000000064A74: 00001384
	.long 0x408                                                // 000000064A78: 00000408
	.long 0                                                    // 000000064A7C: 00000000
	.type	subtract_long_get_local_id_get_local_id.kd,@object
subtract_long_get_local_id_get_local_id.kd:
	.long 0                                                    // 000000064A80: 00000000
	.long 0                                                    // 000000064A84: 00000000
	.long 0x110                                                // 000000064A88: 00000110
	.long 0                                                    // 000000064A8C: 00000000
	.long 0xe780                                               // 000000064A90: 0000E780
	.long 0                                                    // 000000064A94: 00000000
	.long 0                                                    // 000000064A98: 00000000
	.long 0                                                    // 000000064A9C: 00000000
	.long 0                                                    // 000000064AA0: 00000000
	.long 0                                                    // 000000064AA4: 00000000
	.long 0                                                    // 000000064AA8: 00000000
	.long 0                                                    // 000000064AAC: 00000000
	.long 0x60af0101                                           // 000000064AB0: 60AF0101
	.long 0x1384                                               // 000000064AB4: 00001384
	.long 0x408                                                // 000000064AB8: 00000408
	.long 0                                                    // 000000064ABC: 00000000
	.type	subtract_long_get_group_id_get_local_id.kd,@object
subtract_long_get_group_id_get_local_id.kd:
	.long 0                                                    // 000000064AC0: 00000000
	.long 0                                                    // 000000064AC4: 00000000
	.long 0x110                                                // 000000064AC8: 00000110
	.long 0                                                    // 000000064ACC: 00000000
	.ascii "@"                                                 // 000000064AD0: 40
	.byte 0xe8                                                 // 000000064AD1: E8
	.short 0                                                   // 000000064AD2: 0000
	.long 0                                                    // 000000064AD4: 00000000
	.long 0                                                    // 000000064AD8: 00000000
	.long 0                                                    // 000000064ADC: 00000000
	.long 0                                                    // 000000064AE0: 00000000
	.long 0                                                    // 000000064AE4: 00000000
	.long 0                                                    // 000000064AE8: 00000000
	.long 0                                                    // 000000064AEC: 00000000
	.long 0x60af0101                                           // 000000064AF0: 60AF0101
	.long 0x1384                                               // 000000064AF4: 00001384
	.long 0x408                                                // 000000064AF8: 00000408
	.long 0                                                    // 000000064AFC: 00000000
	.type	subtract_long_get_local_size_get_local_id.kd,@object
subtract_long_get_local_size_get_local_id.kd:
	.long 0                                                    // 000000064B00: 00000000
	.long 0                                                    // 000000064B04: 00000000
	.long 0x110                                                // 000000064B08: 00000110
	.long 0                                                    // 000000064B0C: 00000000
	.long 0xea00                                               // 000000064B10: 0000EA00
	.long 0                                                    // 000000064B14: 00000000
	.long 0                                                    // 000000064B18: 00000000
	.long 0                                                    // 000000064B1C: 00000000
	.long 0                                                    // 000000064B20: 00000000
	.long 0                                                    // 000000064B24: 00000000
	.long 0                                                    // 000000064B28: 00000000
	.long 0                                                    // 000000064B2C: 00000000
	.long 0x60af0101                                           // 000000064B30: 60AF0101
	.long 0x1384                                               // 000000064B34: 00001384
	.long 0x408                                                // 000000064B38: 00000408
	.long 0                                                    // 000000064B3C: 00000000
	.type	subtract_long_get_global_id_get_local_id.kd,@object
subtract_long_get_global_id_get_local_id.kd:
	.long 0                                                    // 000000064B40: 00000000
	.long 0                                                    // 000000064B44: 00000000
	.long 0x110                                                // 000000064B48: 00000110
	.long 0                                                    // 000000064B4C: 00000000
	.long 0xebc0                                               // 000000064B50: 0000EBC0
	.long 0                                                    // 000000064B54: 00000000
	.long 0                                                    // 000000064B58: 00000000
	.long 0                                                    // 000000064B5C: 00000000
	.long 0                                                    // 000000064B60: 00000000
	.long 0                                                    // 000000064B64: 00000000
	.long 0                                                    // 000000064B68: 00000000
	.long 0                                                    // 000000064B6C: 00000000
	.long 0x60af0101                                           // 000000064B70: 60AF0101
	.long 0x1384                                               // 000000064B74: 00001384
	.long 0x408                                                // 000000064B78: 00000408
	.long 0                                                    // 000000064B7C: 00000000
	.type	subtract_long_get_global_size_get_local_id.kd,@object
subtract_long_get_global_size_get_local_id.kd:
	.long 0                                                    // 000000064B80: 00000000
	.long 0                                                    // 000000064B84: 00000000
	.long 0x110                                                // 000000064B88: 00000110
	.long 0                                                    // 000000064B8C: 00000000
	.long 0xed80                                               // 000000064B90: 0000ED80
	.long 0                                                    // 000000064B94: 00000000
	.long 0                                                    // 000000064B98: 00000000
	.long 0                                                    // 000000064B9C: 00000000
	.long 0                                                    // 000000064BA0: 00000000
	.long 0                                                    // 000000064BA4: 00000000
	.long 0                                                    // 000000064BA8: 00000000
	.long 0                                                    // 000000064BAC: 00000000
	.long 0x60af0101                                           // 000000064BB0: 60AF0101
	.long 0x1384                                               // 000000064BB4: 00001384
	.long 0x408                                                // 000000064BB8: 00000408
	.long 0                                                    // 000000064BBC: 00000000
	.type	subtract_long_get_num_groups_get_local_id.kd,@object
subtract_long_get_num_groups_get_local_id.kd:
	.long 0                                                    // 000000064BC0: 00000000
	.long 0                                                    // 000000064BC4: 00000000
	.long 0x110                                                // 000000064BC8: 00000110
	.long 0                                                    // 000000064BCC: 00000000
	.ascii "@"                                                 // 000000064BD0: 40
	.byte 0xef                                                 // 000000064BD1: EF
	.short 0                                                   // 000000064BD2: 0000
	.long 0                                                    // 000000064BD4: 00000000
	.long 0                                                    // 000000064BD8: 00000000
	.long 0                                                    // 000000064BDC: 00000000
	.long 0                                                    // 000000064BE0: 00000000
	.long 0                                                    // 000000064BE4: 00000000
	.long 0                                                    // 000000064BE8: 00000000
	.long 0                                                    // 000000064BEC: 00000000
	.long 0x60af0101                                           // 000000064BF0: 60AF0101
	.long 0x1384                                               // 000000064BF4: 00001384
	.long 0x408                                                // 000000064BF8: 00000408
	.long 0                                                    // 000000064BFC: 00000000
	.type	subtract_long_get_work_dim_get_local_id.kd,@object
subtract_long_get_work_dim_get_local_id.kd:
	.long 0                                                    // 000000064C00: 00000000
	.long 0                                                    // 000000064C04: 00000000
	.long 0x110                                                // 000000064C08: 00000110
	.long 0                                                    // 000000064C0C: 00000000
	.long 0xf100                                               // 000000064C10: 0000F100
	.long 0                                                    // 000000064C14: 00000000
	.long 0                                                    // 000000064C18: 00000000
	.long 0                                                    // 000000064C1C: 00000000
	.long 0                                                    // 000000064C20: 00000000
	.long 0                                                    // 000000064C24: 00000000
	.long 0                                                    // 000000064C28: 00000000
	.long 0                                                    // 000000064C2C: 00000000
	.long 0x60af0101                                           // 000000064C30: 60AF0101
	.long 0x1384                                               // 000000064C34: 00001384
	.long 0x408                                                // 000000064C38: 00000408
	.long 0                                                    // 000000064C3C: 00000000
	.type	subtract_long_x_get_group_id.kd,@object
subtract_long_x_get_group_id.kd:
	.long 0                                                    // 000000064C40: 00000000
	.long 0                                                    // 000000064C44: 00000000
	.long 0x110                                                // 000000064C48: 00000110
	.long 0                                                    // 000000064C4C: 00000000
	.long 0xf2c0                                               // 000000064C50: 0000F2C0
	.long 0                                                    // 000000064C54: 00000000
	.long 0                                                    // 000000064C58: 00000000
	.long 0                                                    // 000000064C5C: 00000000
	.long 0                                                    // 000000064C60: 00000000
	.long 0                                                    // 000000064C64: 00000000
	.long 0                                                    // 000000064C68: 00000000
	.long 0                                                    // 000000064C6C: 00000000
	.long 0x60af0101                                           // 000000064C70: 60AF0101
	.long 0x1384                                               // 000000064C74: 00001384
	.long 0x408                                                // 000000064C78: 00000408
	.long 0                                                    // 000000064C7C: 00000000
	.type	subtract_long_get_global_offset_get_group_id.kd,@object
subtract_long_get_global_offset_get_group_id.kd:
	.long 0                                                    // 000000064C80: 00000000
	.long 0                                                    // 000000064C84: 00000000
	.long 0x110                                                // 000000064C88: 00000110
	.long 0                                                    // 000000064C8C: 00000000
	.long 0xf480                                               // 000000064C90: 0000F480
	.long 0                                                    // 000000064C94: 00000000
	.long 0                                                    // 000000064C98: 00000000
	.long 0                                                    // 000000064C9C: 00000000
	.long 0                                                    // 000000064CA0: 00000000
	.long 0                                                    // 000000064CA4: 00000000
	.long 0                                                    // 000000064CA8: 00000000
	.long 0                                                    // 000000064CAC: 00000000
	.long 0x60af0101                                           // 000000064CB0: 60AF0101
	.long 0x1384                                               // 000000064CB4: 00001384
	.long 0x408                                                // 000000064CB8: 00000408
	.long 0                                                    // 000000064CBC: 00000000
	.type	subtract_long_get_local_id_get_group_id.kd,@object
subtract_long_get_local_id_get_group_id.kd:
	.long 0                                                    // 000000064CC0: 00000000
	.long 0                                                    // 000000064CC4: 00000000
	.long 0x110                                                // 000000064CC8: 00000110
	.long 0                                                    // 000000064CCC: 00000000
	.ascii "@"                                                 // 000000064CD0: 40
	.byte 0xf5                                                 // 000000064CD1: F5
	.short 0                                                   // 000000064CD2: 0000
	.long 0                                                    // 000000064CD4: 00000000
	.long 0                                                    // 000000064CD8: 00000000
	.long 0                                                    // 000000064CDC: 00000000
	.long 0                                                    // 000000064CE0: 00000000
	.long 0                                                    // 000000064CE4: 00000000
	.long 0                                                    // 000000064CE8: 00000000
	.long 0                                                    // 000000064CEC: 00000000
	.long 0x60af0101                                           // 000000064CF0: 60AF0101
	.long 0x1384                                               // 000000064CF4: 00001384
	.long 0x408                                                // 000000064CF8: 00000408
	.long 0                                                    // 000000064CFC: 00000000
	.type	subtract_long_get_group_id_get_group_id.kd,@object
subtract_long_get_group_id_get_group_id.kd:
	.long 0                                                    // 000000064D00: 00000000
	.long 0                                                    // 000000064D04: 00000000
	.long 0x110                                                // 000000064D08: 00000110
	.long 0                                                    // 000000064D0C: 00000000
	.long 0xf700                                               // 000000064D10: 0000F700
	.long 0                                                    // 000000064D14: 00000000
	.long 0                                                    // 000000064D18: 00000000
	.long 0                                                    // 000000064D1C: 00000000
	.long 0                                                    // 000000064D20: 00000000
	.long 0                                                    // 000000064D24: 00000000
	.long 0                                                    // 000000064D28: 00000000
	.long 0                                                    // 000000064D2C: 00000000
	.long 0x60af0101                                           // 000000064D30: 60AF0101
	.long 0x1384                                               // 000000064D34: 00001384
	.long 0x408                                                // 000000064D38: 00000408
	.long 0                                                    // 000000064D3C: 00000000
	.type	subtract_long_get_local_size_get_group_id.kd,@object
subtract_long_get_local_size_get_group_id.kd:
	.long 0                                                    // 000000064D40: 00000000
	.long 0                                                    // 000000064D44: 00000000
	.long 0x110                                                // 000000064D48: 00000110
	.long 0                                                    // 000000064D4C: 00000000
	.long 0xf7c0                                               // 000000064D50: 0000F7C0
	.long 0                                                    // 000000064D54: 00000000
	.long 0                                                    // 000000064D58: 00000000
	.long 0                                                    // 000000064D5C: 00000000
	.long 0                                                    // 000000064D60: 00000000
	.long 0                                                    // 000000064D64: 00000000
	.long 0                                                    // 000000064D68: 00000000
	.long 0                                                    // 000000064D6C: 00000000
	.long 0x60af0101                                           // 000000064D70: 60AF0101
	.long 0x1384                                               // 000000064D74: 00001384
	.long 0x408                                                // 000000064D78: 00000408
	.long 0                                                    // 000000064D7C: 00000000
	.type	subtract_long_get_global_id_get_group_id.kd,@object
subtract_long_get_global_id_get_group_id.kd:
	.long 0                                                    // 000000064D80: 00000000
	.long 0                                                    // 000000064D84: 00000000
	.long 0x110                                                // 000000064D88: 00000110
	.long 0                                                    // 000000064D8C: 00000000
	.long 0xf980                                               // 000000064D90: 0000F980
	.long 0                                                    // 000000064D94: 00000000
	.long 0                                                    // 000000064D98: 00000000
	.long 0                                                    // 000000064D9C: 00000000
	.long 0                                                    // 000000064DA0: 00000000
	.long 0                                                    // 000000064DA4: 00000000
	.long 0                                                    // 000000064DA8: 00000000
	.long 0                                                    // 000000064DAC: 00000000
	.long 0x60af0101                                           // 000000064DB0: 60AF0101
	.long 0x1384                                               // 000000064DB4: 00001384
	.long 0x408                                                // 000000064DB8: 00000408
	.long 0                                                    // 000000064DBC: 00000000
	.type	subtract_long_get_global_size_get_group_id.kd,@object
subtract_long_get_global_size_get_group_id.kd:
	.long 0                                                    // 000000064DC0: 00000000
	.long 0                                                    // 000000064DC4: 00000000
	.long 0x110                                                // 000000064DC8: 00000110
	.long 0                                                    // 000000064DCC: 00000000
	.ascii "@"                                                 // 000000064DD0: 40
	.byte 0xfb                                                 // 000000064DD1: FB
	.short 0                                                   // 000000064DD2: 0000
	.long 0                                                    // 000000064DD4: 00000000
	.long 0                                                    // 000000064DD8: 00000000
	.long 0                                                    // 000000064DDC: 00000000
	.long 0                                                    // 000000064DE0: 00000000
	.long 0                                                    // 000000064DE4: 00000000
	.long 0                                                    // 000000064DE8: 00000000
	.long 0                                                    // 000000064DEC: 00000000
	.long 0x60af0101                                           // 000000064DF0: 60AF0101
	.long 0x1384                                               // 000000064DF4: 00001384
	.long 0x408                                                // 000000064DF8: 00000408
	.long 0                                                    // 000000064DFC: 00000000
	.type	subtract_long_get_num_groups_get_group_id.kd,@object
subtract_long_get_num_groups_get_group_id.kd:
	.long 0                                                    // 000000064E00: 00000000
	.long 0                                                    // 000000064E04: 00000000
	.long 0x110                                                // 000000064E08: 00000110
	.long 0                                                    // 000000064E0C: 00000000
	.long 0xfd00                                               // 000000064E10: 0000FD00
	.long 0                                                    // 000000064E14: 00000000
	.long 0                                                    // 000000064E18: 00000000
	.long 0                                                    // 000000064E1C: 00000000
	.long 0                                                    // 000000064E20: 00000000
	.long 0                                                    // 000000064E24: 00000000
	.long 0                                                    // 000000064E28: 00000000
	.long 0                                                    // 000000064E2C: 00000000
	.long 0x60af0101                                           // 000000064E30: 60AF0101
	.long 0x1384                                               // 000000064E34: 00001384
	.long 0x408                                                // 000000064E38: 00000408
	.long 0                                                    // 000000064E3C: 00000000
	.type	subtract_long_get_work_dim_get_group_id.kd,@object
subtract_long_get_work_dim_get_group_id.kd:
	.long 0                                                    // 000000064E40: 00000000
	.long 0                                                    // 000000064E44: 00000000
	.long 0x110                                                // 000000064E48: 00000110
	.long 0                                                    // 000000064E4C: 00000000
	.long 0xfec0                                               // 000000064E50: 0000FEC0
	.long 0                                                    // 000000064E54: 00000000
	.long 0                                                    // 000000064E58: 00000000
	.long 0                                                    // 000000064E5C: 00000000
	.long 0                                                    // 000000064E60: 00000000
	.long 0                                                    // 000000064E64: 00000000
	.long 0                                                    // 000000064E68: 00000000
	.long 0                                                    // 000000064E6C: 00000000
	.long 0x60af0101                                           // 000000064E70: 60AF0101
	.long 0x1384                                               // 000000064E74: 00001384
	.long 0x408                                                // 000000064E78: 00000408
	.long 0                                                    // 000000064E7C: 00000000
	.type	subtract_long_x_get_local_size.kd,@object
subtract_long_x_get_local_size.kd:
	.long 0                                                    // 000000064E80: 00000000
	.long 0                                                    // 000000064E84: 00000000
	.long 0x110                                                // 000000064E88: 00000110
	.long 0                                                    // 000000064E8C: 00000000
	.long 0x10080                                              // 000000064E90: 00010080
	.long 0                                                    // 000000064E94: 00000000
	.long 0                                                    // 000000064E98: 00000000
	.long 0                                                    // 000000064E9C: 00000000
	.long 0                                                    // 000000064EA0: 00000000
	.long 0                                                    // 000000064EA4: 00000000
	.long 0                                                    // 000000064EA8: 00000000
	.long 0                                                    // 000000064EAC: 00000000
	.long 0x60af0101                                           // 000000064EB0: 60AF0101
	.long 0x1384                                               // 000000064EB4: 00001384
	.long 0x408                                                // 000000064EB8: 00000408
	.long 0                                                    // 000000064EBC: 00000000
	.type	subtract_long_get_global_offset_get_local_size.kd,@object
subtract_long_get_global_offset_get_local_size.kd:
	.long 0                                                    // 000000064EC0: 00000000
	.long 0                                                    // 000000064EC4: 00000000
	.long 0x110                                                // 000000064EC8: 00000110
	.long 0                                                    // 000000064ECC: 00000000
	.ascii "@"                                                 // 000000064ED0: 40
	.byte 0x2                                                  // 000000064ED1: 02
	.short 0x1                                                 // 000000064ED2: 0001
	.long 0                                                    // 000000064ED4: 00000000
	.long 0                                                    // 000000064ED8: 00000000
	.long 0                                                    // 000000064EDC: 00000000
	.long 0                                                    // 000000064EE0: 00000000
	.long 0                                                    // 000000064EE4: 00000000
	.long 0                                                    // 000000064EE8: 00000000
	.long 0                                                    // 000000064EEC: 00000000
	.long 0x60af0101                                           // 000000064EF0: 60AF0101
	.long 0x1384                                               // 000000064EF4: 00001384
	.long 0x408                                                // 000000064EF8: 00000408
	.long 0                                                    // 000000064EFC: 00000000
	.type	subtract_long_get_local_id_get_local_size.kd,@object
subtract_long_get_local_id_get_local_size.kd:
	.long 0                                                    // 000000064F00: 00000000
	.long 0                                                    // 000000064F04: 00000000
	.long 0x110                                                // 000000064F08: 00000110
	.long 0                                                    // 000000064F0C: 00000000
	.long 0x10400                                              // 000000064F10: 00010400
	.long 0                                                    // 000000064F14: 00000000
	.long 0                                                    // 000000064F18: 00000000
	.long 0                                                    // 000000064F1C: 00000000
	.long 0                                                    // 000000064F20: 00000000
	.long 0                                                    // 000000064F24: 00000000
	.long 0                                                    // 000000064F28: 00000000
	.long 0                                                    // 000000064F2C: 00000000
	.long 0x60af0101                                           // 000000064F30: 60AF0101
	.long 0x1384                                               // 000000064F34: 00001384
	.long 0x408                                                // 000000064F38: 00000408
	.long 0                                                    // 000000064F3C: 00000000
	.type	subtract_long_get_group_id_get_local_size.kd,@object
subtract_long_get_group_id_get_local_size.kd:
	.long 0                                                    // 000000064F40: 00000000
	.long 0                                                    // 000000064F44: 00000000
	.long 0x110                                                // 000000064F48: 00000110
	.long 0                                                    // 000000064F4C: 00000000
	.long 0x105c0                                              // 000000064F50: 000105C0
	.long 0                                                    // 000000064F54: 00000000
	.long 0                                                    // 000000064F58: 00000000
	.long 0                                                    // 000000064F5C: 00000000
	.long 0                                                    // 000000064F60: 00000000
	.long 0                                                    // 000000064F64: 00000000
	.long 0                                                    // 000000064F68: 00000000
	.long 0                                                    // 000000064F6C: 00000000
	.long 0x60af0101                                           // 000000064F70: 60AF0101
	.long 0x1384                                               // 000000064F74: 00001384
	.long 0x408                                                // 000000064F78: 00000408
	.long 0                                                    // 000000064F7C: 00000000
	.type	subtract_long_get_local_size_get_local_size.kd,@object
subtract_long_get_local_size_get_local_size.kd:
	.long 0                                                    // 000000064F80: 00000000
	.long 0                                                    // 000000064F84: 00000000
	.long 0x110                                                // 000000064F88: 00000110
	.long 0                                                    // 000000064F8C: 00000000
	.long 0x10780                                              // 000000064F90: 00010780
	.long 0                                                    // 000000064F94: 00000000
	.long 0                                                    // 000000064F98: 00000000
	.long 0                                                    // 000000064F9C: 00000000
	.long 0                                                    // 000000064FA0: 00000000
	.long 0                                                    // 000000064FA4: 00000000
	.long 0                                                    // 000000064FA8: 00000000
	.long 0                                                    // 000000064FAC: 00000000
	.long 0x60af0101                                           // 000000064FB0: 60AF0101
	.long 0x1384                                               // 000000064FB4: 00001384
	.long 0x408                                                // 000000064FB8: 00000408
	.long 0                                                    // 000000064FBC: 00000000
	.type	subtract_long_get_global_id_get_local_size.kd,@object
subtract_long_get_global_id_get_local_size.kd:
	.long 0                                                    // 000000064FC0: 00000000
	.long 0                                                    // 000000064FC4: 00000000
	.long 0x110                                                // 000000064FC8: 00000110
	.long 0                                                    // 000000064FCC: 00000000
	.ascii "@"                                                 // 000000064FD0: 40
	.byte 0x8                                                  // 000000064FD1: 08
	.short 0x1                                                 // 000000064FD2: 0001
	.long 0                                                    // 000000064FD4: 00000000
	.long 0                                                    // 000000064FD8: 00000000
	.long 0                                                    // 000000064FDC: 00000000
	.long 0                                                    // 000000064FE0: 00000000
	.long 0                                                    // 000000064FE4: 00000000
	.long 0                                                    // 000000064FE8: 00000000
	.long 0                                                    // 000000064FEC: 00000000
	.long 0x60af0101                                           // 000000064FF0: 60AF0101
	.long 0x1384                                               // 000000064FF4: 00001384
	.long 0x408                                                // 000000064FF8: 00000408
	.long 0                                                    // 000000064FFC: 00000000
	.type	subtract_long_get_global_size_get_local_size.kd,@object
subtract_long_get_global_size_get_local_size.kd:
	.long 0                                                    // 000000065000: 00000000
	.long 0                                                    // 000000065004: 00000000
	.long 0x110                                                // 000000065008: 00000110
	.long 0                                                    // 00000006500C: 00000000
	.long 0x10a00                                              // 000000065010: 00010A00
	.long 0                                                    // 000000065014: 00000000
	.long 0                                                    // 000000065018: 00000000
	.long 0                                                    // 00000006501C: 00000000
	.long 0                                                    // 000000065020: 00000000
	.long 0                                                    // 000000065024: 00000000
	.long 0                                                    // 000000065028: 00000000
	.long 0                                                    // 00000006502C: 00000000
	.long 0x60af0101                                           // 000000065030: 60AF0101
	.long 0x1384                                               // 000000065034: 00001384
	.long 0x408                                                // 000000065038: 00000408
	.long 0                                                    // 00000006503C: 00000000
	.type	subtract_long_get_num_groups_get_local_size.kd,@object
subtract_long_get_num_groups_get_local_size.kd:
	.long 0                                                    // 000000065040: 00000000
	.long 0                                                    // 000000065044: 00000000
	.long 0x110                                                // 000000065048: 00000110
	.long 0                                                    // 00000006504C: 00000000
	.long 0x10bc0                                              // 000000065050: 00010BC0
	.long 0                                                    // 000000065054: 00000000
	.long 0                                                    // 000000065058: 00000000
	.long 0                                                    // 00000006505C: 00000000
	.long 0                                                    // 000000065060: 00000000
	.long 0                                                    // 000000065064: 00000000
	.long 0                                                    // 000000065068: 00000000
	.long 0                                                    // 00000006506C: 00000000
	.long 0x60af0101                                           // 000000065070: 60AF0101
	.long 0x1384                                               // 000000065074: 00001384
	.long 0x408                                                // 000000065078: 00000408
	.long 0                                                    // 00000006507C: 00000000
	.type	subtract_long_get_work_dim_get_local_size.kd,@object
subtract_long_get_work_dim_get_local_size.kd:
	.long 0                                                    // 000000065080: 00000000
	.long 0                                                    // 000000065084: 00000000
	.long 0x110                                                // 000000065088: 00000110
	.long 0                                                    // 00000006508C: 00000000
	.long 0x10d80                                              // 000000065090: 00010D80
	.long 0                                                    // 000000065094: 00000000
	.long 0                                                    // 000000065098: 00000000
	.long 0                                                    // 00000006509C: 00000000
	.long 0                                                    // 0000000650A0: 00000000
	.long 0                                                    // 0000000650A4: 00000000
	.long 0                                                    // 0000000650A8: 00000000
	.long 0                                                    // 0000000650AC: 00000000
	.long 0x60af0101                                           // 0000000650B0: 60AF0101
	.long 0x1384                                               // 0000000650B4: 00001384
	.long 0x408                                                // 0000000650B8: 00000408
	.long 0                                                    // 0000000650BC: 00000000
	.type	subtract_long_x_get_global_id.kd,@object
subtract_long_x_get_global_id.kd:
	.long 0                                                    // 0000000650C0: 00000000
	.long 0                                                    // 0000000650C4: 00000000
	.long 0x110                                                // 0000000650C8: 00000110
	.long 0                                                    // 0000000650CC: 00000000
	.ascii "@"                                                 // 0000000650D0: 40
	.byte 0xf                                                  // 0000000650D1: 0F
	.short 0x1                                                 // 0000000650D2: 0001
	.long 0                                                    // 0000000650D4: 00000000
	.long 0                                                    // 0000000650D8: 00000000
	.long 0                                                    // 0000000650DC: 00000000
	.long 0                                                    // 0000000650E0: 00000000
	.long 0                                                    // 0000000650E4: 00000000
	.long 0                                                    // 0000000650E8: 00000000
	.long 0                                                    // 0000000650EC: 00000000
	.long 0x60af0101                                           // 0000000650F0: 60AF0101
	.long 0x1384                                               // 0000000650F4: 00001384
	.long 0x408                                                // 0000000650F8: 00000408
	.long 0                                                    // 0000000650FC: 00000000
	.type	subtract_long_get_global_offset_get_global_id.kd,@object
subtract_long_get_global_offset_get_global_id.kd:
	.long 0                                                    // 000000065100: 00000000
	.long 0                                                    // 000000065104: 00000000
	.long 0x110                                                // 000000065108: 00000110
	.long 0                                                    // 00000006510C: 00000000
	.long 0x11100                                              // 000000065110: 00011100
	.long 0                                                    // 000000065114: 00000000
	.long 0                                                    // 000000065118: 00000000
	.long 0                                                    // 00000006511C: 00000000
	.long 0                                                    // 000000065120: 00000000
	.long 0                                                    // 000000065124: 00000000
	.long 0                                                    // 000000065128: 00000000
	.long 0                                                    // 00000006512C: 00000000
	.long 0x60af0101                                           // 000000065130: 60AF0101
	.long 0x1384                                               // 000000065134: 00001384
	.long 0x408                                                // 000000065138: 00000408
	.long 0                                                    // 00000006513C: 00000000
	.type	subtract_long_get_local_id_get_global_id.kd,@object
subtract_long_get_local_id_get_global_id.kd:
	.long 0                                                    // 000000065140: 00000000
	.long 0                                                    // 000000065144: 00000000
	.long 0x110                                                // 000000065148: 00000110
	.long 0                                                    // 00000006514C: 00000000
	.long 0x112c0                                              // 000000065150: 000112C0
	.long 0                                                    // 000000065154: 00000000
	.long 0                                                    // 000000065158: 00000000
	.long 0                                                    // 00000006515C: 00000000
	.long 0                                                    // 000000065160: 00000000
	.long 0                                                    // 000000065164: 00000000
	.long 0                                                    // 000000065168: 00000000
	.long 0                                                    // 00000006516C: 00000000
	.long 0x60af0102                                           // 000000065170: 60AF0102
	.long 0x1384                                               // 000000065174: 00001384
	.long 0x408                                                // 000000065178: 00000408
	.long 0                                                    // 00000006517C: 00000000
	.type	subtract_long_get_group_id_get_global_id.kd,@object
subtract_long_get_group_id_get_global_id.kd:
	.long 0                                                    // 000000065180: 00000000
	.long 0                                                    // 000000065184: 00000000
	.long 0x110                                                // 000000065188: 00000110
	.long 0                                                    // 00000006518C: 00000000
	.long 0x11480                                              // 000000065190: 00011480
	.long 0                                                    // 000000065194: 00000000
	.long 0                                                    // 000000065198: 00000000
	.long 0                                                    // 00000006519C: 00000000
	.long 0                                                    // 0000000651A0: 00000000
	.long 0                                                    // 0000000651A4: 00000000
	.long 0                                                    // 0000000651A8: 00000000
	.long 0                                                    // 0000000651AC: 00000000
	.long 0x60af0101                                           // 0000000651B0: 60AF0101
	.long 0x1384                                               // 0000000651B4: 00001384
	.long 0x408                                                // 0000000651B8: 00000408
	.long 0                                                    // 0000000651BC: 00000000
	.type	subtract_long_get_local_size_get_global_id.kd,@object
subtract_long_get_local_size_get_global_id.kd:
	.long 0                                                    // 0000000651C0: 00000000
	.long 0                                                    // 0000000651C4: 00000000
	.long 0x110                                                // 0000000651C8: 00000110
	.long 0                                                    // 0000000651CC: 00000000
	.ascii "@"                                                 // 0000000651D0: 40
	.byte 0x16                                                 // 0000000651D1: 16
	.short 0x1                                                 // 0000000651D2: 0001
	.long 0                                                    // 0000000651D4: 00000000
	.long 0                                                    // 0000000651D8: 00000000
	.long 0                                                    // 0000000651DC: 00000000
	.long 0                                                    // 0000000651E0: 00000000
	.long 0                                                    // 0000000651E4: 00000000
	.long 0                                                    // 0000000651E8: 00000000
	.long 0                                                    // 0000000651EC: 00000000
	.long 0x60af0102                                           // 0000000651F0: 60AF0102
	.long 0x1384                                               // 0000000651F4: 00001384
	.long 0x408                                                // 0000000651F8: 00000408
	.long 0                                                    // 0000000651FC: 00000000
	.type	subtract_long_get_global_id_get_global_id.kd,@object
subtract_long_get_global_id_get_global_id.kd:
	.long 0                                                    // 000000065200: 00000000
	.long 0                                                    // 000000065204: 00000000
	.long 0x110                                                // 000000065208: 00000110
	.long 0                                                    // 00000006520C: 00000000
	.long 0x11800                                              // 000000065210: 00011800
	.long 0                                                    // 000000065214: 00000000
	.long 0                                                    // 000000065218: 00000000
	.long 0                                                    // 00000006521C: 00000000
	.long 0                                                    // 000000065220: 00000000
	.long 0                                                    // 000000065224: 00000000
	.long 0                                                    // 000000065228: 00000000
	.long 0                                                    // 00000006522C: 00000000
	.long 0x60af0101                                           // 000000065230: 60AF0101
	.long 0x1384                                               // 000000065234: 00001384
	.long 0x408                                                // 000000065238: 00000408
	.long 0                                                    // 00000006523C: 00000000
	.type	subtract_long_get_global_size_get_global_id.kd,@object
subtract_long_get_global_size_get_global_id.kd:
	.long 0                                                    // 000000065240: 00000000
	.long 0                                                    // 000000065244: 00000000
	.long 0x110                                                // 000000065248: 00000110
	.long 0                                                    // 00000006524C: 00000000
	.long 0x119c0                                              // 000000065250: 000119C0
	.long 0                                                    // 000000065254: 00000000
	.long 0                                                    // 000000065258: 00000000
	.long 0                                                    // 00000006525C: 00000000
	.long 0                                                    // 000000065260: 00000000
	.long 0                                                    // 000000065264: 00000000
	.long 0                                                    // 000000065268: 00000000
	.long 0                                                    // 00000006526C: 00000000
	.long 0x60af0102                                           // 000000065270: 60AF0102
	.long 0x1384                                               // 000000065274: 00001384
	.long 0x408                                                // 000000065278: 00000408
	.long 0                                                    // 00000006527C: 00000000
	.type	subtract_long_get_num_groups_get_global_id.kd,@object
subtract_long_get_num_groups_get_global_id.kd:
	.long 0                                                    // 000000065280: 00000000
	.long 0                                                    // 000000065284: 00000000
	.long 0x110                                                // 000000065288: 00000110
	.long 0                                                    // 00000006528C: 00000000
	.long 0x11b80                                              // 000000065290: 00011B80
	.long 0                                                    // 000000065294: 00000000
	.long 0                                                    // 000000065298: 00000000
	.long 0                                                    // 00000006529C: 00000000
	.long 0                                                    // 0000000652A0: 00000000
	.long 0                                                    // 0000000652A4: 00000000
	.long 0                                                    // 0000000652A8: 00000000
	.long 0                                                    // 0000000652AC: 00000000
	.long 0x60af0102                                           // 0000000652B0: 60AF0102
	.long 0x1384                                               // 0000000652B4: 00001384
	.long 0x408                                                // 0000000652B8: 00000408
	.long 0                                                    // 0000000652BC: 00000000
	.type	subtract_long_get_work_dim_get_global_id.kd,@object
subtract_long_get_work_dim_get_global_id.kd:
	.long 0                                                    // 0000000652C0: 00000000
	.long 0                                                    // 0000000652C4: 00000000
	.long 0x110                                                // 0000000652C8: 00000110
	.long 0                                                    // 0000000652CC: 00000000
	.ascii "@"                                                 // 0000000652D0: 40
	.byte 0x1d                                                 // 0000000652D1: 1D
	.short 0x1                                                 // 0000000652D2: 0001
	.long 0                                                    // 0000000652D4: 00000000
	.long 0                                                    // 0000000652D8: 00000000
	.long 0                                                    // 0000000652DC: 00000000
	.long 0                                                    // 0000000652E0: 00000000
	.long 0                                                    // 0000000652E4: 00000000
	.long 0                                                    // 0000000652E8: 00000000
	.long 0                                                    // 0000000652EC: 00000000
	.long 0x60af0101                                           // 0000000652F0: 60AF0101
	.long 0x1384                                               // 0000000652F4: 00001384
	.long 0x408                                                // 0000000652F8: 00000408
	.long 0                                                    // 0000000652FC: 00000000
	.type	subtract_long_x_get_global_size.kd,@object
subtract_long_x_get_global_size.kd:
	.long 0                                                    // 000000065300: 00000000
	.long 0                                                    // 000000065304: 00000000
	.long 0x110                                                // 000000065308: 00000110
	.long 0                                                    // 00000006530C: 00000000
	.long 0x11f00                                              // 000000065310: 00011F00
	.long 0                                                    // 000000065314: 00000000
	.long 0                                                    // 000000065318: 00000000
	.long 0                                                    // 00000006531C: 00000000
	.long 0                                                    // 000000065320: 00000000
	.long 0                                                    // 000000065324: 00000000
	.long 0                                                    // 000000065328: 00000000
	.long 0                                                    // 00000006532C: 00000000
	.long 0x60af0101                                           // 000000065330: 60AF0101
	.long 0x1384                                               // 000000065334: 00001384
	.long 0x408                                                // 000000065338: 00000408
	.long 0                                                    // 00000006533C: 00000000
	.type	subtract_long_get_global_offset_get_global_size.kd,@object
subtract_long_get_global_offset_get_global_size.kd:
	.long 0                                                    // 000000065340: 00000000
	.long 0                                                    // 000000065344: 00000000
	.long 0x110                                                // 000000065348: 00000110
	.long 0                                                    // 00000006534C: 00000000
	.long 0x120c0                                              // 000000065350: 000120C0
	.long 0                                                    // 000000065354: 00000000
	.long 0                                                    // 000000065358: 00000000
	.long 0                                                    // 00000006535C: 00000000
	.long 0                                                    // 000000065360: 00000000
	.long 0                                                    // 000000065364: 00000000
	.long 0                                                    // 000000065368: 00000000
	.long 0                                                    // 00000006536C: 00000000
	.long 0x60af0101                                           // 000000065370: 60AF0101
	.long 0x1384                                               // 000000065374: 00001384
	.long 0x408                                                // 000000065378: 00000408
	.long 0                                                    // 00000006537C: 00000000
	.type	subtract_long_get_local_id_get_global_size.kd,@object
subtract_long_get_local_id_get_global_size.kd:
	.long 0                                                    // 000000065380: 00000000
	.long 0                                                    // 000000065384: 00000000
	.long 0x110                                                // 000000065388: 00000110
	.long 0                                                    // 00000006538C: 00000000
	.long 0x12280                                              // 000000065390: 00012280
	.long 0                                                    // 000000065394: 00000000
	.long 0                                                    // 000000065398: 00000000
	.long 0                                                    // 00000006539C: 00000000
	.long 0                                                    // 0000000653A0: 00000000
	.long 0                                                    // 0000000653A4: 00000000
	.long 0                                                    // 0000000653A8: 00000000
	.long 0                                                    // 0000000653AC: 00000000
	.long 0x60af0101                                           // 0000000653B0: 60AF0101
	.long 0x1384                                               // 0000000653B4: 00001384
	.long 0x408                                                // 0000000653B8: 00000408
	.long 0                                                    // 0000000653BC: 00000000
	.type	subtract_long_get_group_id_get_global_size.kd,@object
subtract_long_get_group_id_get_global_size.kd:
	.long 0                                                    // 0000000653C0: 00000000
	.long 0                                                    // 0000000653C4: 00000000
	.long 0x110                                                // 0000000653C8: 00000110
	.long 0                                                    // 0000000653CC: 00000000
	.ascii "@$"                                                // 0000000653D0: 2440
	.short 0x1                                                 // 0000000653D2: 0001
	.long 0                                                    // 0000000653D4: 00000000
	.long 0                                                    // 0000000653D8: 00000000
	.long 0                                                    // 0000000653DC: 00000000
	.long 0                                                    // 0000000653E0: 00000000
	.long 0                                                    // 0000000653E4: 00000000
	.long 0                                                    // 0000000653E8: 00000000
	.long 0                                                    // 0000000653EC: 00000000
	.long 0x60af0101                                           // 0000000653F0: 60AF0101
	.long 0x1384                                               // 0000000653F4: 00001384
	.long 0x408                                                // 0000000653F8: 00000408
	.long 0                                                    // 0000000653FC: 00000000
	.type	subtract_long_get_local_size_get_global_size.kd,@object
subtract_long_get_local_size_get_global_size.kd:
	.long 0                                                    // 000000065400: 00000000
	.long 0                                                    // 000000065404: 00000000
	.long 0x110                                                // 000000065408: 00000110
	.long 0                                                    // 00000006540C: 00000000
	.long 0x12600                                              // 000000065410: 00012600
	.long 0                                                    // 000000065414: 00000000
	.long 0                                                    // 000000065418: 00000000
	.long 0                                                    // 00000006541C: 00000000
	.long 0                                                    // 000000065420: 00000000
	.long 0                                                    // 000000065424: 00000000
	.long 0                                                    // 000000065428: 00000000
	.long 0                                                    // 00000006542C: 00000000
	.long 0x60af0101                                           // 000000065430: 60AF0101
	.long 0x1384                                               // 000000065434: 00001384
	.long 0x408                                                // 000000065438: 00000408
	.long 0                                                    // 00000006543C: 00000000
	.type	subtract_long_get_global_id_get_global_size.kd,@object
subtract_long_get_global_id_get_global_size.kd:
	.long 0                                                    // 000000065440: 00000000
	.long 0                                                    // 000000065444: 00000000
	.long 0x110                                                // 000000065448: 00000110
	.long 0                                                    // 00000006544C: 00000000
	.long 0x127c0                                              // 000000065450: 000127C0
	.long 0                                                    // 000000065454: 00000000
	.long 0                                                    // 000000065458: 00000000
	.long 0                                                    // 00000006545C: 00000000
	.long 0                                                    // 000000065460: 00000000
	.long 0                                                    // 000000065464: 00000000
	.long 0                                                    // 000000065468: 00000000
	.long 0                                                    // 00000006546C: 00000000
	.long 0x60af0101                                           // 000000065470: 60AF0101
	.long 0x1384                                               // 000000065474: 00001384
	.long 0x408                                                // 000000065478: 00000408
	.long 0                                                    // 00000006547C: 00000000
	.type	subtract_long_get_global_size_get_global_size.kd,@object
subtract_long_get_global_size_get_global_size.kd:
	.long 0                                                    // 000000065480: 00000000
	.long 0                                                    // 000000065484: 00000000
	.long 0x110                                                // 000000065488: 00000110
	.long 0                                                    // 00000006548C: 00000000
	.long 0x12980                                              // 000000065490: 00012980
	.long 0                                                    // 000000065494: 00000000
	.long 0                                                    // 000000065498: 00000000
	.long 0                                                    // 00000006549C: 00000000
	.long 0                                                    // 0000000654A0: 00000000
	.long 0                                                    // 0000000654A4: 00000000
	.long 0                                                    // 0000000654A8: 00000000
	.long 0                                                    // 0000000654AC: 00000000
	.long 0x60af0101                                           // 0000000654B0: 60AF0101
	.long 0x1384                                               // 0000000654B4: 00001384
	.long 0x408                                                // 0000000654B8: 00000408
	.long 0                                                    // 0000000654BC: 00000000
	.type	subtract_long_get_num_groups_get_global_size.kd,@object
subtract_long_get_num_groups_get_global_size.kd:
	.long 0                                                    // 0000000654C0: 00000000
	.long 0                                                    // 0000000654C4: 00000000
	.long 0x110                                                // 0000000654C8: 00000110
	.long 0                                                    // 0000000654CC: 00000000
	.ascii "@*"                                                // 0000000654D0: 2A40
	.short 0x1                                                 // 0000000654D2: 0001
	.long 0                                                    // 0000000654D4: 00000000
	.long 0                                                    // 0000000654D8: 00000000
	.long 0                                                    // 0000000654DC: 00000000
	.long 0                                                    // 0000000654E0: 00000000
	.long 0                                                    // 0000000654E4: 00000000
	.long 0                                                    // 0000000654E8: 00000000
	.long 0                                                    // 0000000654EC: 00000000
	.long 0x60af0101                                           // 0000000654F0: 60AF0101
	.long 0x1384                                               // 0000000654F4: 00001384
	.long 0x408                                                // 0000000654F8: 00000408
	.long 0                                                    // 0000000654FC: 00000000
	.type	subtract_long_get_work_dim_get_global_size.kd,@object
subtract_long_get_work_dim_get_global_size.kd:
	.long 0                                                    // 000000065500: 00000000
	.long 0                                                    // 000000065504: 00000000
	.long 0x110                                                // 000000065508: 00000110
	.long 0                                                    // 00000006550C: 00000000
	.long 0x12c00                                              // 000000065510: 00012C00
	.long 0                                                    // 000000065514: 00000000
	.long 0                                                    // 000000065518: 00000000
	.long 0                                                    // 00000006551C: 00000000
	.long 0                                                    // 000000065520: 00000000
	.long 0                                                    // 000000065524: 00000000
	.long 0                                                    // 000000065528: 00000000
	.long 0                                                    // 00000006552C: 00000000
	.long 0x60af0101                                           // 000000065530: 60AF0101
	.long 0x1384                                               // 000000065534: 00001384
	.long 0x408                                                // 000000065538: 00000408
	.long 0                                                    // 00000006553C: 00000000
	.type	subtract_long_x_get_num_groups.kd,@object
subtract_long_x_get_num_groups.kd:
	.long 0                                                    // 000000065540: 00000000
	.long 0                                                    // 000000065544: 00000000
	.long 0x110                                                // 000000065548: 00000110
	.long 0                                                    // 00000006554C: 00000000
	.long 0x12dc0                                              // 000000065550: 00012DC0
	.long 0                                                    // 000000065554: 00000000
	.long 0                                                    // 000000065558: 00000000
	.long 0                                                    // 00000006555C: 00000000
	.long 0                                                    // 000000065560: 00000000
	.long 0                                                    // 000000065564: 00000000
	.long 0                                                    // 000000065568: 00000000
	.long 0                                                    // 00000006556C: 00000000
	.long 0x60af0101                                           // 000000065570: 60AF0101
	.long 0x1384                                               // 000000065574: 00001384
	.long 0x408                                                // 000000065578: 00000408
	.long 0                                                    // 00000006557C: 00000000
	.type	subtract_long_get_global_offset_get_num_groups.kd,@object
subtract_long_get_global_offset_get_num_groups.kd:
	.long 0                                                    // 000000065580: 00000000
	.long 0                                                    // 000000065584: 00000000
	.long 0x110                                                // 000000065588: 00000110
	.long 0                                                    // 00000006558C: 00000000
	.long 0x12f80                                              // 000000065590: 00012F80
	.long 0                                                    // 000000065594: 00000000
	.long 0                                                    // 000000065598: 00000000
	.long 0                                                    // 00000006559C: 00000000
	.long 0                                                    // 0000000655A0: 00000000
	.long 0                                                    // 0000000655A4: 00000000
	.long 0                                                    // 0000000655A8: 00000000
	.long 0                                                    // 0000000655AC: 00000000
	.long 0x60af0101                                           // 0000000655B0: 60AF0101
	.long 0x1384                                               // 0000000655B4: 00001384
	.long 0x408                                                // 0000000655B8: 00000408
	.long 0                                                    // 0000000655BC: 00000000
	.type	subtract_long_get_local_id_get_num_groups.kd,@object
subtract_long_get_local_id_get_num_groups.kd:
	.long 0                                                    // 0000000655C0: 00000000
	.long 0                                                    // 0000000655C4: 00000000
	.long 0x110                                                // 0000000655C8: 00000110
	.long 0                                                    // 0000000655CC: 00000000
	.ascii "@1"                                                // 0000000655D0: 3140
	.short 0x1                                                 // 0000000655D2: 0001
	.long 0                                                    // 0000000655D4: 00000000
	.long 0                                                    // 0000000655D8: 00000000
	.long 0                                                    // 0000000655DC: 00000000
	.long 0                                                    // 0000000655E0: 00000000
	.long 0                                                    // 0000000655E4: 00000000
	.long 0                                                    // 0000000655E8: 00000000
	.long 0                                                    // 0000000655EC: 00000000
	.long 0x60af0101                                           // 0000000655F0: 60AF0101
	.long 0x1384                                               // 0000000655F4: 00001384
	.long 0x408                                                // 0000000655F8: 00000408
	.long 0                                                    // 0000000655FC: 00000000
	.type	subtract_long_get_group_id_get_num_groups.kd,@object
subtract_long_get_group_id_get_num_groups.kd:
	.long 0                                                    // 000000065600: 00000000
	.long 0                                                    // 000000065604: 00000000
	.long 0x110                                                // 000000065608: 00000110
	.long 0                                                    // 00000006560C: 00000000
	.long 0x13300                                              // 000000065610: 00013300
	.long 0                                                    // 000000065614: 00000000
	.long 0                                                    // 000000065618: 00000000
	.long 0                                                    // 00000006561C: 00000000
	.long 0                                                    // 000000065620: 00000000
	.long 0                                                    // 000000065624: 00000000
	.long 0                                                    // 000000065628: 00000000
	.long 0                                                    // 00000006562C: 00000000
	.long 0x60af0101                                           // 000000065630: 60AF0101
	.long 0x1384                                               // 000000065634: 00001384
	.long 0x408                                                // 000000065638: 00000408
	.long 0                                                    // 00000006563C: 00000000
	.type	subtract_long_get_local_size_get_num_groups.kd,@object
subtract_long_get_local_size_get_num_groups.kd:
	.long 0                                                    // 000000065640: 00000000
	.long 0                                                    // 000000065644: 00000000
	.long 0x110                                                // 000000065648: 00000110
	.long 0                                                    // 00000006564C: 00000000
	.long 0x134c0                                              // 000000065650: 000134C0
	.long 0                                                    // 000000065654: 00000000
	.long 0                                                    // 000000065658: 00000000
	.long 0                                                    // 00000006565C: 00000000
	.long 0                                                    // 000000065660: 00000000
	.long 0                                                    // 000000065664: 00000000
	.long 0                                                    // 000000065668: 00000000
	.long 0                                                    // 00000006566C: 00000000
	.long 0x60af0101                                           // 000000065670: 60AF0101
	.long 0x1384                                               // 000000065674: 00001384
	.long 0x408                                                // 000000065678: 00000408
	.long 0                                                    // 00000006567C: 00000000
	.type	subtract_long_get_global_id_get_num_groups.kd,@object
subtract_long_get_global_id_get_num_groups.kd:
	.long 0                                                    // 000000065680: 00000000
	.long 0                                                    // 000000065684: 00000000
	.long 0x110                                                // 000000065688: 00000110
	.long 0                                                    // 00000006568C: 00000000
	.long 0x13680                                              // 000000065690: 00013680
	.long 0                                                    // 000000065694: 00000000
	.long 0                                                    // 000000065698: 00000000
	.long 0                                                    // 00000006569C: 00000000
	.long 0                                                    // 0000000656A0: 00000000
	.long 0                                                    // 0000000656A4: 00000000
	.long 0                                                    // 0000000656A8: 00000000
	.long 0                                                    // 0000000656AC: 00000000
	.long 0x60af0101                                           // 0000000656B0: 60AF0101
	.long 0x1384                                               // 0000000656B4: 00001384
	.long 0x408                                                // 0000000656B8: 00000408
	.long 0                                                    // 0000000656BC: 00000000
	.type	subtract_long_get_global_size_get_num_groups.kd,@object
subtract_long_get_global_size_get_num_groups.kd:
	.long 0                                                    // 0000000656C0: 00000000
	.long 0                                                    // 0000000656C4: 00000000
	.long 0x110                                                // 0000000656C8: 00000110
	.long 0                                                    // 0000000656CC: 00000000
	.ascii "@8"                                                // 0000000656D0: 3840
	.short 0x1                                                 // 0000000656D2: 0001
	.long 0                                                    // 0000000656D4: 00000000
	.long 0                                                    // 0000000656D8: 00000000
	.long 0                                                    // 0000000656DC: 00000000
	.long 0                                                    // 0000000656E0: 00000000
	.long 0                                                    // 0000000656E4: 00000000
	.long 0                                                    // 0000000656E8: 00000000
	.long 0                                                    // 0000000656EC: 00000000
	.long 0x60af0101                                           // 0000000656F0: 60AF0101
	.long 0x1384                                               // 0000000656F4: 00001384
	.long 0x408                                                // 0000000656F8: 00000408
	.long 0                                                    // 0000000656FC: 00000000
	.type	subtract_long_get_num_groups_get_num_groups.kd,@object
subtract_long_get_num_groups_get_num_groups.kd:
	.long 0                                                    // 000000065700: 00000000
	.long 0                                                    // 000000065704: 00000000
	.long 0x110                                                // 000000065708: 00000110
	.long 0                                                    // 00000006570C: 00000000
	.long 0x13a00                                              // 000000065710: 00013A00
	.long 0                                                    // 000000065714: 00000000
	.long 0                                                    // 000000065718: 00000000
	.long 0                                                    // 00000006571C: 00000000
	.long 0                                                    // 000000065720: 00000000
	.long 0                                                    // 000000065724: 00000000
	.long 0                                                    // 000000065728: 00000000
	.long 0                                                    // 00000006572C: 00000000
	.long 0x60af0101                                           // 000000065730: 60AF0101
	.long 0x1384                                               // 000000065734: 00001384
	.long 0x408                                                // 000000065738: 00000408
	.long 0                                                    // 00000006573C: 00000000
	.type	subtract_long_get_work_dim_get_num_groups.kd,@object
subtract_long_get_work_dim_get_num_groups.kd:
	.long 0                                                    // 000000065740: 00000000
	.long 0                                                    // 000000065744: 00000000
	.long 0x110                                                // 000000065748: 00000110
	.long 0                                                    // 00000006574C: 00000000
	.long 0x13ac0                                              // 000000065750: 00013AC0
	.long 0                                                    // 000000065754: 00000000
	.long 0                                                    // 000000065758: 00000000
	.long 0                                                    // 00000006575C: 00000000
	.long 0                                                    // 000000065760: 00000000
	.long 0                                                    // 000000065764: 00000000
	.long 0                                                    // 000000065768: 00000000
	.long 0                                                    // 00000006576C: 00000000
	.long 0x60af0101                                           // 000000065770: 60AF0101
	.long 0x1384                                               // 000000065774: 00001384
	.long 0x408                                                // 000000065778: 00000408
	.long 0                                                    // 00000006577C: 00000000
	.type	subtract_long_x_get_work_dim.kd,@object
subtract_long_x_get_work_dim.kd:
	.long 0                                                    // 000000065780: 00000000
	.long 0                                                    // 000000065784: 00000000
	.long 0x110                                                // 000000065788: 00000110
	.long 0                                                    // 00000006578C: 00000000
	.long 0x13c80                                              // 000000065790: 00013C80
	.long 0                                                    // 000000065794: 00000000
	.long 0                                                    // 000000065798: 00000000
	.long 0                                                    // 00000006579C: 00000000
	.long 0                                                    // 0000000657A0: 00000000
	.long 0                                                    // 0000000657A4: 00000000
	.long 0                                                    // 0000000657A8: 00000000
	.long 0                                                    // 0000000657AC: 00000000
	.long 0x60af0101                                           // 0000000657B0: 60AF0101
	.long 0x1384                                               // 0000000657B4: 00001384
	.long 0x408                                                // 0000000657B8: 00000408
	.long 0                                                    // 0000000657BC: 00000000
	.type	subtract_long_get_global_offset_get_work_dim.kd,@object
subtract_long_get_global_offset_get_work_dim.kd:
	.long 0                                                    // 0000000657C0: 00000000
	.long 0                                                    // 0000000657C4: 00000000
	.long 0x110                                                // 0000000657C8: 00000110
	.long 0                                                    // 0000000657CC: 00000000
	.ascii "@>"                                                // 0000000657D0: 3E40
	.short 0x1                                                 // 0000000657D2: 0001
	.long 0                                                    // 0000000657D4: 00000000
	.long 0                                                    // 0000000657D8: 00000000
	.long 0                                                    // 0000000657DC: 00000000
	.long 0                                                    // 0000000657E0: 00000000
	.long 0                                                    // 0000000657E4: 00000000
	.long 0                                                    // 0000000657E8: 00000000
	.long 0                                                    // 0000000657EC: 00000000
	.long 0x60af0100                                           // 0000000657F0: 60AF0100
	.long 0x1384                                               // 0000000657F4: 00001384
	.long 0x408                                                // 0000000657F8: 00000408
	.long 0                                                    // 0000000657FC: 00000000
	.type	subtract_long_get_local_id_get_work_dim.kd,@object
subtract_long_get_local_id_get_work_dim.kd:
	.long 0                                                    // 000000065800: 00000000
	.long 0                                                    // 000000065804: 00000000
	.long 0x110                                                // 000000065808: 00000110
	.long 0                                                    // 00000006580C: 00000000
	.long 0x14000                                              // 000000065810: 00014000
	.long 0                                                    // 000000065814: 00000000
	.long 0                                                    // 000000065818: 00000000
	.long 0                                                    // 00000006581C: 00000000
	.long 0                                                    // 000000065820: 00000000
	.long 0                                                    // 000000065824: 00000000
	.long 0                                                    // 000000065828: 00000000
	.long 0                                                    // 00000006582C: 00000000
	.long 0x60af0101                                           // 000000065830: 60AF0101
	.long 0x1384                                               // 000000065834: 00001384
	.long 0x408                                                // 000000065838: 00000408
	.long 0                                                    // 00000006583C: 00000000
	.type	subtract_long_get_group_id_get_work_dim.kd,@object
subtract_long_get_group_id_get_work_dim.kd:
	.long 0                                                    // 000000065840: 00000000
	.long 0                                                    // 000000065844: 00000000
	.long 0x110                                                // 000000065848: 00000110
	.long 0                                                    // 00000006584C: 00000000
	.long 0x140c0                                              // 000000065850: 000140C0
	.long 0                                                    // 000000065854: 00000000
	.long 0                                                    // 000000065858: 00000000
	.long 0                                                    // 00000006585C: 00000000
	.long 0                                                    // 000000065860: 00000000
	.long 0                                                    // 000000065864: 00000000
	.long 0                                                    // 000000065868: 00000000
	.long 0                                                    // 00000006586C: 00000000
	.long 0x60af0100                                           // 000000065870: 60AF0100
	.long 0x1384                                               // 000000065874: 00001384
	.long 0x408                                                // 000000065878: 00000408
	.long 0                                                    // 00000006587C: 00000000
	.type	subtract_long_get_local_size_get_work_dim.kd,@object
subtract_long_get_local_size_get_work_dim.kd:
	.long 0                                                    // 000000065880: 00000000
	.long 0                                                    // 000000065884: 00000000
	.long 0x110                                                // 000000065888: 00000110
	.long 0                                                    // 00000006588C: 00000000
	.long 0x14280                                              // 000000065890: 00014280
	.long 0                                                    // 000000065894: 00000000
	.long 0                                                    // 000000065898: 00000000
	.long 0                                                    // 00000006589C: 00000000
	.long 0                                                    // 0000000658A0: 00000000
	.long 0                                                    // 0000000658A4: 00000000
	.long 0                                                    // 0000000658A8: 00000000
	.long 0                                                    // 0000000658AC: 00000000
	.long 0x60af0101                                           // 0000000658B0: 60AF0101
	.long 0x1384                                               // 0000000658B4: 00001384
	.long 0x408                                                // 0000000658B8: 00000408
	.long 0                                                    // 0000000658BC: 00000000
	.type	subtract_long_get_global_id_get_work_dim.kd,@object
subtract_long_get_global_id_get_work_dim.kd:
	.long 0                                                    // 0000000658C0: 00000000
	.long 0                                                    // 0000000658C4: 00000000
	.long 0x110                                                // 0000000658C8: 00000110
	.long 0                                                    // 0000000658CC: 00000000
	.ascii "@D"                                                // 0000000658D0: 4440
	.short 0x1                                                 // 0000000658D2: 0001
	.long 0                                                    // 0000000658D4: 00000000
	.long 0                                                    // 0000000658D8: 00000000
	.long 0                                                    // 0000000658DC: 00000000
	.long 0                                                    // 0000000658E0: 00000000
	.long 0                                                    // 0000000658E4: 00000000
	.long 0                                                    // 0000000658E8: 00000000
	.long 0                                                    // 0000000658EC: 00000000
	.long 0x60af0101                                           // 0000000658F0: 60AF0101
	.long 0x1384                                               // 0000000658F4: 00001384
	.long 0x408                                                // 0000000658F8: 00000408
	.long 0                                                    // 0000000658FC: 00000000
	.type	subtract_long_get_global_size_get_work_dim.kd,@object
subtract_long_get_global_size_get_work_dim.kd:
	.long 0                                                    // 000000065900: 00000000
	.long 0                                                    // 000000065904: 00000000
	.long 0x110                                                // 000000065908: 00000110
	.long 0                                                    // 00000006590C: 00000000
	.long 0x14500                                              // 000000065910: 00014500
	.long 0                                                    // 000000065914: 00000000
	.long 0                                                    // 000000065918: 00000000
	.long 0                                                    // 00000006591C: 00000000
	.long 0                                                    // 000000065920: 00000000
	.long 0                                                    // 000000065924: 00000000
	.long 0                                                    // 000000065928: 00000000
	.long 0                                                    // 00000006592C: 00000000
	.long 0x60af0101                                           // 000000065930: 60AF0101
	.long 0x1384                                               // 000000065934: 00001384
	.long 0x408                                                // 000000065938: 00000408
	.long 0                                                    // 00000006593C: 00000000
	.type	subtract_long_get_num_groups_get_work_dim.kd,@object
subtract_long_get_num_groups_get_work_dim.kd:
	.long 0                                                    // 000000065940: 00000000
	.long 0                                                    // 000000065944: 00000000
	.long 0x110                                                // 000000065948: 00000110
	.long 0                                                    // 00000006594C: 00000000
	.long 0x146c0                                              // 000000065950: 000146C0
	.long 0                                                    // 000000065954: 00000000
	.long 0                                                    // 000000065958: 00000000
	.long 0                                                    // 00000006595C: 00000000
	.long 0                                                    // 000000065960: 00000000
	.long 0                                                    // 000000065964: 00000000
	.long 0                                                    // 000000065968: 00000000
	.long 0                                                    // 00000006596C: 00000000
	.long 0x60af0101                                           // 000000065970: 60AF0101
	.long 0x1384                                               // 000000065974: 00001384
	.long 0x408                                                // 000000065978: 00000408
	.long 0                                                    // 00000006597C: 00000000
	.type	subtract_long_get_work_dim_get_work_dim.kd,@object
subtract_long_get_work_dim_get_work_dim.kd:
	.long 0                                                    // 000000065980: 00000000
	.long 0                                                    // 000000065984: 00000000
	.long 0x110                                                // 000000065988: 00000110
	.long 0                                                    // 00000006598C: 00000000
	.long 0x14880                                              // 000000065990: 00014880
	.long 0                                                    // 000000065994: 00000000
	.long 0                                                    // 000000065998: 00000000
	.long 0                                                    // 00000006599C: 00000000
	.long 0                                                    // 0000000659A0: 00000000
	.long 0                                                    // 0000000659A4: 00000000
	.long 0                                                    // 0000000659A8: 00000000
	.long 0                                                    // 0000000659AC: 00000000
	.long 0x60af0101                                           // 0000000659B0: 60AF0101
	.long 0x1384                                               // 0000000659B4: 00001384
	.long 0x408                                                // 0000000659B8: 00000408
	.long 0                                                    // 0000000659BC: 00000000
	.type	subtract_long_x_64.kd,@object
subtract_long_x_64.kd:
	.long 0                                                    // 0000000659C0: 00000000
	.long 0                                                    // 0000000659C4: 00000000
	.long 0x110                                                // 0000000659C8: 00000110
	.long 0                                                    // 0000000659CC: 00000000
	.ascii "@I"                                                // 0000000659D0: 4940
	.short 0x1                                                 // 0000000659D2: 0001
	.long 0                                                    // 0000000659D4: 00000000
	.long 0                                                    // 0000000659D8: 00000000
	.long 0                                                    // 0000000659DC: 00000000
	.long 0                                                    // 0000000659E0: 00000000
	.long 0                                                    // 0000000659E4: 00000000
	.long 0                                                    // 0000000659E8: 00000000
	.long 0                                                    // 0000000659EC: 00000000
	.long 0x60af0100                                           // 0000000659F0: 60AF0100
	.long 0x84                                                 // 0000000659F4: 00000084
	.long 0x408                                                // 0000000659F8: 00000408
	.long 0                                                    // 0000000659FC: 00000000
	.type	subtract_long_get_global_offset_64.kd,@object
subtract_long_get_global_offset_64.kd:
	.long 0                                                    // 000000065A00: 00000000
	.long 0                                                    // 000000065A04: 00000000
	.long 0x110                                                // 000000065A08: 00000110
	.long 0                                                    // 000000065A0C: 00000000
	.long 0x14a00                                              // 000000065A10: 00014A00
	.long 0                                                    // 000000065A14: 00000000
	.long 0                                                    // 000000065A18: 00000000
	.long 0                                                    // 000000065A1C: 00000000
	.long 0                                                    // 000000065A20: 00000000
	.long 0                                                    // 000000065A24: 00000000
	.long 0                                                    // 000000065A28: 00000000
	.long 0                                                    // 000000065A2C: 00000000
	.long 0x60af0100                                           // 000000065A30: 60AF0100
	.long 0x84                                                 // 000000065A34: 00000084
	.long 0x408                                                // 000000065A38: 00000408
	.long 0                                                    // 000000065A3C: 00000000
	.type	subtract_long_get_local_id_64.kd,@object
subtract_long_get_local_id_64.kd:
	.long 0                                                    // 000000065A40: 00000000
	.long 0                                                    // 000000065A44: 00000000
	.long 0x110                                                // 000000065A48: 00000110
	.long 0                                                    // 000000065A4C: 00000000
	.long 0x14ac0                                              // 000000065A50: 00014AC0
	.long 0                                                    // 000000065A54: 00000000
	.long 0                                                    // 000000065A58: 00000000
	.long 0                                                    // 000000065A5C: 00000000
	.long 0                                                    // 000000065A60: 00000000
	.long 0                                                    // 000000065A64: 00000000
	.long 0                                                    // 000000065A68: 00000000
	.long 0                                                    // 000000065A6C: 00000000
	.long 0x60af0100                                           // 000000065A70: 60AF0100
	.long 0x84                                                 // 000000065A74: 00000084
	.long 0x408                                                // 000000065A78: 00000408
	.long 0                                                    // 000000065A7C: 00000000
	.type	subtract_long_get_group_id_64.kd,@object
subtract_long_get_group_id_64.kd:
	.long 0                                                    // 000000065A80: 00000000
	.long 0                                                    // 000000065A84: 00000000
	.long 0x110                                                // 000000065A88: 00000110
	.long 0                                                    // 000000065A8C: 00000000
	.long 0x14b80                                              // 000000065A90: 00014B80
	.long 0                                                    // 000000065A94: 00000000
	.long 0                                                    // 000000065A98: 00000000
	.long 0                                                    // 000000065A9C: 00000000
	.long 0                                                    // 000000065AA0: 00000000
	.long 0                                                    // 000000065AA4: 00000000
	.long 0                                                    // 000000065AA8: 00000000
	.long 0                                                    // 000000065AAC: 00000000
	.long 0x60af0100                                           // 000000065AB0: 60AF0100
	.long 0x84                                                 // 000000065AB4: 00000084
	.long 0x408                                                // 000000065AB8: 00000408
	.long 0                                                    // 000000065ABC: 00000000
	.type	subtract_long_get_local_size_64.kd,@object
subtract_long_get_local_size_64.kd:
	.long 0                                                    // 000000065AC0: 00000000
	.long 0                                                    // 000000065AC4: 00000000
	.long 0x110                                                // 000000065AC8: 00000110
	.long 0                                                    // 000000065ACC: 00000000
	.ascii "@L"                                                // 000000065AD0: 4C40
	.short 0x1                                                 // 000000065AD2: 0001
	.long 0                                                    // 000000065AD4: 00000000
	.long 0                                                    // 000000065AD8: 00000000
	.long 0                                                    // 000000065ADC: 00000000
	.long 0                                                    // 000000065AE0: 00000000
	.long 0                                                    // 000000065AE4: 00000000
	.long 0                                                    // 000000065AE8: 00000000
	.long 0                                                    // 000000065AEC: 00000000
	.long 0x60af0100                                           // 000000065AF0: 60AF0100
	.long 0x84                                                 // 000000065AF4: 00000084
	.long 0x408                                                // 000000065AF8: 00000408
	.long 0                                                    // 000000065AFC: 00000000
	.type	subtract_long_get_global_id_64.kd,@object
subtract_long_get_global_id_64.kd:
	.long 0                                                    // 000000065B00: 00000000
	.long 0                                                    // 000000065B04: 00000000
	.long 0x110                                                // 000000065B08: 00000110
	.long 0                                                    // 000000065B0C: 00000000
	.long 0x14d00                                              // 000000065B10: 00014D00
	.long 0                                                    // 000000065B14: 00000000
	.long 0                                                    // 000000065B18: 00000000
	.long 0                                                    // 000000065B1C: 00000000
	.long 0                                                    // 000000065B20: 00000000
	.long 0                                                    // 000000065B24: 00000000
	.long 0                                                    // 000000065B28: 00000000
	.long 0                                                    // 000000065B2C: 00000000
	.long 0x60af0100                                           // 000000065B30: 60AF0100
	.long 0x84                                                 // 000000065B34: 00000084
	.long 0x408                                                // 000000065B38: 00000408
	.long 0                                                    // 000000065B3C: 00000000
	.type	subtract_long_get_global_size_64.kd,@object
subtract_long_get_global_size_64.kd:
	.long 0                                                    // 000000065B40: 00000000
	.long 0                                                    // 000000065B44: 00000000
	.long 0x110                                                // 000000065B48: 00000110
	.long 0                                                    // 000000065B4C: 00000000
	.long 0x14dc0                                              // 000000065B50: 00014DC0
	.long 0                                                    // 000000065B54: 00000000
	.long 0                                                    // 000000065B58: 00000000
	.long 0                                                    // 000000065B5C: 00000000
	.long 0                                                    // 000000065B60: 00000000
	.long 0                                                    // 000000065B64: 00000000
	.long 0                                                    // 000000065B68: 00000000
	.long 0                                                    // 000000065B6C: 00000000
	.long 0x60af0100                                           // 000000065B70: 60AF0100
	.long 0x84                                                 // 000000065B74: 00000084
	.long 0x408                                                // 000000065B78: 00000408
	.long 0                                                    // 000000065B7C: 00000000
	.type	subtract_long_get_num_groups_64.kd,@object
subtract_long_get_num_groups_64.kd:
	.long 0                                                    // 000000065B80: 00000000
	.long 0                                                    // 000000065B84: 00000000
	.long 0x110                                                // 000000065B88: 00000110
	.long 0                                                    // 000000065B8C: 00000000
	.long 0x14e80                                              // 000000065B90: 00014E80
	.long 0                                                    // 000000065B94: 00000000
	.long 0                                                    // 000000065B98: 00000000
	.long 0                                                    // 000000065B9C: 00000000
	.long 0                                                    // 000000065BA0: 00000000
	.long 0                                                    // 000000065BA4: 00000000
	.long 0                                                    // 000000065BA8: 00000000
	.long 0                                                    // 000000065BAC: 00000000
	.long 0x60af0100                                           // 000000065BB0: 60AF0100
	.long 0x84                                                 // 000000065BB4: 00000084
	.long 0x408                                                // 000000065BB8: 00000408
	.long 0                                                    // 000000065BBC: 00000000
	.type	subtract_long_get_work_dim.kd,@object
subtract_long_get_work_dim.kd:
	.long 0                                                    // 000000065BC0: 00000000
	.long 0                                                    // 000000065BC4: 00000000
	.long 0x110                                                // 000000065BC8: 00000110
	.long 0                                                    // 000000065BCC: 00000000
	.ascii "@O"                                                // 000000065BD0: 4F40
	.short 0x1                                                 // 000000065BD2: 0001
	.long 0                                                    // 000000065BD4: 00000000
	.long 0                                                    // 000000065BD8: 00000000
	.long 0                                                    // 000000065BDC: 00000000
	.long 0                                                    // 000000065BE0: 00000000
	.long 0                                                    // 000000065BE4: 00000000
	.long 0                                                    // 000000065BE8: 00000000
	.long 0                                                    // 000000065BEC: 00000000
	.long 0x60af0100                                           // 000000065BF0: 60AF0100
	.long 0x84                                                 // 000000065BF4: 00000084
	.long 0x408                                                // 000000065BF8: 00000408
	.long 0                                                    // 000000065BFC: 00000000
	.type	subtract_long_x_8_8.kd,@object
subtract_long_x_8_8.kd:
	.long 0                                                    // 000000065C00: 00000000
	.long 0                                                    // 000000065C04: 00000000
	.long 0x110                                                // 000000065C08: 00000110
	.long 0                                                    // 000000065C0C: 00000000
	.long 0x15000                                              // 000000065C10: 00015000
	.long 0                                                    // 000000065C14: 00000000
	.long 0                                                    // 000000065C18: 00000000
	.long 0                                                    // 000000065C1C: 00000000
	.long 0                                                    // 000000065C20: 00000000
	.long 0                                                    // 000000065C24: 00000000
	.long 0                                                    // 000000065C28: 00000000
	.long 0                                                    // 000000065C2C: 00000000
	.long 0x60af0100                                           // 000000065C30: 60AF0100
	.long 0x984                                                // 000000065C34: 00000984
	.long 0x408                                                // 000000065C38: 00000408
	.long 0                                                    // 000000065C3C: 00000000
	.type	subtract_long_get_global_offset_8_8.kd,@object
subtract_long_get_global_offset_8_8.kd:
	.long 0                                                    // 000000065C40: 00000000
	.long 0                                                    // 000000065C44: 00000000
	.long 0x110                                                // 000000065C48: 00000110
	.long 0                                                    // 000000065C4C: 00000000
	.long 0x150c0                                              // 000000065C50: 000150C0
	.long 0                                                    // 000000065C54: 00000000
	.long 0                                                    // 000000065C58: 00000000
	.long 0                                                    // 000000065C5C: 00000000
	.long 0                                                    // 000000065C60: 00000000
	.long 0                                                    // 000000065C64: 00000000
	.long 0                                                    // 000000065C68: 00000000
	.long 0                                                    // 000000065C6C: 00000000
	.long 0x60af0100                                           // 000000065C70: 60AF0100
	.long 0x84                                                 // 000000065C74: 00000084
	.long 0x408                                                // 000000065C78: 00000408
	.long 0                                                    // 000000065C7C: 00000000
	.type	subtract_long_get_local_id_8_8.kd,@object
subtract_long_get_local_id_8_8.kd:
	.long 0                                                    // 000000065C80: 00000000
	.long 0                                                    // 000000065C84: 00000000
	.long 0x110                                                // 000000065C88: 00000110
	.long 0                                                    // 000000065C8C: 00000000
	.long 0x15180                                              // 000000065C90: 00015180
	.long 0                                                    // 000000065C94: 00000000
	.long 0                                                    // 000000065C98: 00000000
	.long 0                                                    // 000000065C9C: 00000000
	.long 0                                                    // 000000065CA0: 00000000
	.long 0                                                    // 000000065CA4: 00000000
	.long 0                                                    // 000000065CA8: 00000000
	.long 0                                                    // 000000065CAC: 00000000
	.long 0x60af0100                                           // 000000065CB0: 60AF0100
	.long 0x884                                                // 000000065CB4: 00000884
	.long 0x408                                                // 000000065CB8: 00000408
	.long 0                                                    // 000000065CBC: 00000000
	.type	subtract_long_get_group_id_8_8.kd,@object
subtract_long_get_group_id_8_8.kd:
	.long 0                                                    // 000000065CC0: 00000000
	.long 0                                                    // 000000065CC4: 00000000
	.long 0x110                                                // 000000065CC8: 00000110
	.long 0                                                    // 000000065CCC: 00000000
	.ascii "@R"                                                // 000000065CD0: 5240
	.short 0x1                                                 // 000000065CD2: 0001
	.long 0                                                    // 000000065CD4: 00000000
	.long 0                                                    // 000000065CD8: 00000000
	.long 0                                                    // 000000065CDC: 00000000
	.long 0                                                    // 000000065CE0: 00000000
	.long 0                                                    // 000000065CE4: 00000000
	.long 0                                                    // 000000065CE8: 00000000
	.long 0                                                    // 000000065CEC: 00000000
	.long 0x60af0100                                           // 000000065CF0: 60AF0100
	.long 0x184                                                // 000000065CF4: 00000184
	.long 0x408                                                // 000000065CF8: 00000408
	.long 0                                                    // 000000065CFC: 00000000
	.type	subtract_long_get_local_size_8_8.kd,@object
subtract_long_get_local_size_8_8.kd:
	.long 0                                                    // 000000065D00: 00000000
	.long 0                                                    // 000000065D04: 00000000
	.long 0x110                                                // 000000065D08: 00000110
	.long 0                                                    // 000000065D0C: 00000000
	.long 0x15300                                              // 000000065D10: 00015300
	.long 0                                                    // 000000065D14: 00000000
	.long 0                                                    // 000000065D18: 00000000
	.long 0                                                    // 000000065D1C: 00000000
	.long 0                                                    // 000000065D20: 00000000
	.long 0                                                    // 000000065D24: 00000000
	.long 0                                                    // 000000065D28: 00000000
	.long 0                                                    // 000000065D2C: 00000000
	.long 0x60af0100                                           // 000000065D30: 60AF0100
	.long 0x184                                                // 000000065D34: 00000184
	.long 0x408                                                // 000000065D38: 00000408
	.long 0                                                    // 000000065D3C: 00000000
	.type	subtract_long_get_global_id_8_8.kd,@object
subtract_long_get_global_id_8_8.kd:
	.long 0                                                    // 000000065D40: 00000000
	.long 0                                                    // 000000065D44: 00000000
	.long 0x110                                                // 000000065D48: 00000110
	.long 0                                                    // 000000065D4C: 00000000
	.long 0x153c0                                              // 000000065D50: 000153C0
	.long 0                                                    // 000000065D54: 00000000
	.long 0                                                    // 000000065D58: 00000000
	.long 0                                                    // 000000065D5C: 00000000
	.long 0                                                    // 000000065D60: 00000000
	.long 0                                                    // 000000065D64: 00000000
	.long 0                                                    // 000000065D68: 00000000
	.long 0                                                    // 000000065D6C: 00000000
	.long 0x60af0100                                           // 000000065D70: 60AF0100
	.long 0x984                                                // 000000065D74: 00000984
	.long 0x408                                                // 000000065D78: 00000408
	.long 0                                                    // 000000065D7C: 00000000
	.type	subtract_long_get_global_size_8_8.kd,@object
subtract_long_get_global_size_8_8.kd:
	.long 0                                                    // 000000065D80: 00000000
	.long 0                                                    // 000000065D84: 00000000
	.long 0x110                                                // 000000065D88: 00000110
	.long 0                                                    // 000000065D8C: 00000000
	.long 0x15480                                              // 000000065D90: 00015480
	.long 0                                                    // 000000065D94: 00000000
	.long 0                                                    // 000000065D98: 00000000
	.long 0                                                    // 000000065D9C: 00000000
	.long 0                                                    // 000000065DA0: 00000000
	.long 0                                                    // 000000065DA4: 00000000
	.long 0                                                    // 000000065DA8: 00000000
	.long 0                                                    // 000000065DAC: 00000000
	.long 0x60af0100                                           // 000000065DB0: 60AF0100
	.long 0x84                                                 // 000000065DB4: 00000084
	.long 0x408                                                // 000000065DB8: 00000408
	.long 0                                                    // 000000065DBC: 00000000
	.type	subtract_long_get_num_groups_8_8.kd,@object
subtract_long_get_num_groups_8_8.kd:
	.long 0                                                    // 000000065DC0: 00000000
	.long 0                                                    // 000000065DC4: 00000000
	.long 0x110                                                // 000000065DC8: 00000110
	.long 0                                                    // 000000065DCC: 00000000
	.ascii "@U"                                                // 000000065DD0: 5540
	.short 0x1                                                 // 000000065DD2: 0001
	.long 0                                                    // 000000065DD4: 00000000
	.long 0                                                    // 000000065DD8: 00000000
	.long 0                                                    // 000000065DDC: 00000000
	.long 0                                                    // 000000065DE0: 00000000
	.long 0                                                    // 000000065DE4: 00000000
	.long 0                                                    // 000000065DE8: 00000000
	.long 0                                                    // 000000065DEC: 00000000
	.long 0x60af0100                                           // 000000065DF0: 60AF0100
	.long 0x84                                                 // 000000065DF4: 00000084
	.long 0x408                                                // 000000065DF8: 00000408
	.long 0                                                    // 000000065DFC: 00000000
	.type	subtract_long_get_work_dim_8_8.kd,@object
subtract_long_get_work_dim_8_8.kd:
	.long 0                                                    // 000000065E00: 00000000
	.long 0                                                    // 000000065E04: 00000000
	.long 0x110                                                // 000000065E08: 00000110
	.long 0                                                    // 000000065E0C: 00000000
	.long 0x15600                                              // 000000065E10: 00015600
	.long 0                                                    // 000000065E14: 00000000
	.long 0                                                    // 000000065E18: 00000000
	.long 0                                                    // 000000065E1C: 00000000
	.long 0                                                    // 000000065E20: 00000000
	.long 0                                                    // 000000065E24: 00000000
	.long 0                                                    // 000000065E28: 00000000
	.long 0                                                    // 000000065E2C: 00000000
	.long 0x60af0100                                           // 000000065E30: 60AF0100
	.long 0x984                                                // 000000065E34: 00000984
	.long 0x408                                                // 000000065E38: 00000408
	.long 0                                                    // 000000065E3C: 00000000
	.type	subtract_char_x_x.kd,@object
subtract_char_x_x.kd:
	.long 0                                                    // 000000065E40: 00000000
	.long 0                                                    // 000000065E44: 00000000
	.long 0x110                                                // 000000065E48: 00000110
	.long 0                                                    // 000000065E4C: 00000000
	.long 0x156c0                                              // 000000065E50: 000156C0
	.long 0                                                    // 000000065E54: 00000000
	.long 0                                                    // 000000065E58: 00000000
	.long 0                                                    // 000000065E5C: 00000000
	.long 0                                                    // 000000065E60: 00000000
	.long 0                                                    // 000000065E64: 00000000
	.long 0                                                    // 000000065E68: 00000000
	.long 0                                                    // 000000065E6C: 00000000
	.long 0x60af0100                                           // 000000065E70: 60AF0100
	.long 0x84                                                 // 000000065E74: 00000084
	.long 0x408                                                // 000000065E78: 00000408
	.long 0                                                    // 000000065E7C: 00000000
	.type	subtract_char_get_global_offset_x.kd,@object
subtract_char_get_global_offset_x.kd:
	.long 0                                                    // 000000065E80: 00000000
	.long 0                                                    // 000000065E84: 00000000
	.long 0x110                                                // 000000065E88: 00000110
	.long 0                                                    // 000000065E8C: 00000000
	.long 0x15780                                              // 000000065E90: 00015780
	.long 0                                                    // 000000065E94: 00000000
	.long 0                                                    // 000000065E98: 00000000
	.long 0                                                    // 000000065E9C: 00000000
	.long 0                                                    // 000000065EA0: 00000000
	.long 0                                                    // 000000065EA4: 00000000
	.long 0                                                    // 000000065EA8: 00000000
	.long 0                                                    // 000000065EAC: 00000000
	.long 0x60af0100                                           // 000000065EB0: 60AF0100
	.long 0x1384                                               // 000000065EB4: 00001384
	.long 0x408                                                // 000000065EB8: 00000408
	.long 0                                                    // 000000065EBC: 00000000
	.type	subtract_char_get_local_id_x.kd,@object
subtract_char_get_local_id_x.kd:
	.long 0                                                    // 000000065EC0: 00000000
	.long 0                                                    // 000000065EC4: 00000000
	.long 0x110                                                // 000000065EC8: 00000110
	.long 0                                                    // 000000065ECC: 00000000
	.ascii "@X"                                                // 000000065ED0: 5840
	.short 0x1                                                 // 000000065ED2: 0001
	.long 0                                                    // 000000065ED4: 00000000
	.long 0                                                    // 000000065ED8: 00000000
	.long 0                                                    // 000000065EDC: 00000000
	.long 0                                                    // 000000065EE0: 00000000
	.long 0                                                    // 000000065EE4: 00000000
	.long 0                                                    // 000000065EE8: 00000000
	.long 0                                                    // 000000065EEC: 00000000
	.long 0x60af0100                                           // 000000065EF0: 60AF0100
	.long 0x1384                                               // 000000065EF4: 00001384
	.long 0x408                                                // 000000065EF8: 00000408
	.long 0                                                    // 000000065EFC: 00000000
	.type	subtract_char_get_group_id_x.kd,@object
subtract_char_get_group_id_x.kd:
	.long 0                                                    // 000000065F00: 00000000
	.long 0                                                    // 000000065F04: 00000000
	.long 0x110                                                // 000000065F08: 00000110
	.long 0                                                    // 000000065F0C: 00000000
	.long 0x15900                                              // 000000065F10: 00015900
	.long 0                                                    // 000000065F14: 00000000
	.long 0                                                    // 000000065F18: 00000000
	.long 0                                                    // 000000065F1C: 00000000
	.long 0                                                    // 000000065F20: 00000000
	.long 0                                                    // 000000065F24: 00000000
	.long 0                                                    // 000000065F28: 00000000
	.long 0                                                    // 000000065F2C: 00000000
	.long 0x60af0100                                           // 000000065F30: 60AF0100
	.long 0x1384                                               // 000000065F34: 00001384
	.long 0x408                                                // 000000065F38: 00000408
	.long 0                                                    // 000000065F3C: 00000000
	.type	subtract_char_get_local_size_x.kd,@object
subtract_char_get_local_size_x.kd:
	.long 0                                                    // 000000065F40: 00000000
	.long 0                                                    // 000000065F44: 00000000
	.long 0x110                                                // 000000065F48: 00000110
	.long 0                                                    // 000000065F4C: 00000000
	.long 0x159c0                                              // 000000065F50: 000159C0
	.long 0                                                    // 000000065F54: 00000000
	.long 0                                                    // 000000065F58: 00000000
	.long 0                                                    // 000000065F5C: 00000000
	.long 0                                                    // 000000065F60: 00000000
	.long 0                                                    // 000000065F64: 00000000
	.long 0                                                    // 000000065F68: 00000000
	.long 0                                                    // 000000065F6C: 00000000
	.long 0x60af0100                                           // 000000065F70: 60AF0100
	.long 0x1384                                               // 000000065F74: 00001384
	.long 0x408                                                // 000000065F78: 00000408
	.long 0                                                    // 000000065F7C: 00000000
	.type	subtract_char_get_global_id_x.kd,@object
subtract_char_get_global_id_x.kd:
	.long 0                                                    // 000000065F80: 00000000
	.long 0                                                    // 000000065F84: 00000000
	.long 0x110                                                // 000000065F88: 00000110
	.long 0                                                    // 000000065F8C: 00000000
	.long 0x15b80                                              // 000000065F90: 00015B80
	.long 0                                                    // 000000065F94: 00000000
	.long 0                                                    // 000000065F98: 00000000
	.long 0                                                    // 000000065F9C: 00000000
	.long 0                                                    // 000000065FA0: 00000000
	.long 0                                                    // 000000065FA4: 00000000
	.long 0                                                    // 000000065FA8: 00000000
	.long 0                                                    // 000000065FAC: 00000000
	.long 0x60af0100                                           // 000000065FB0: 60AF0100
	.long 0x1384                                               // 000000065FB4: 00001384
	.long 0x408                                                // 000000065FB8: 00000408
	.long 0                                                    // 000000065FBC: 00000000
	.type	subtract_char_get_global_size_x.kd,@object
subtract_char_get_global_size_x.kd:
	.long 0                                                    // 000000065FC0: 00000000
	.long 0                                                    // 000000065FC4: 00000000
	.long 0x110                                                // 000000065FC8: 00000110
	.long 0                                                    // 000000065FCC: 00000000
	.ascii "@\\"                                               // 000000065FD0: 5C40
	.short 0x1                                                 // 000000065FD2: 0001
	.long 0                                                    // 000000065FD4: 00000000
	.long 0                                                    // 000000065FD8: 00000000
	.long 0                                                    // 000000065FDC: 00000000
	.long 0                                                    // 000000065FE0: 00000000
	.long 0                                                    // 000000065FE4: 00000000
	.long 0                                                    // 000000065FE8: 00000000
	.long 0                                                    // 000000065FEC: 00000000
	.long 0x60af0100                                           // 000000065FF0: 60AF0100
	.long 0x1384                                               // 000000065FF4: 00001384
	.long 0x408                                                // 000000065FF8: 00000408
	.long 0                                                    // 000000065FFC: 00000000
	.type	subtract_char_get_num_groups_x.kd,@object
subtract_char_get_num_groups_x.kd:
	.long 0                                                    // 000000066000: 00000000
	.long 0                                                    // 000000066004: 00000000
	.long 0x110                                                // 000000066008: 00000110
	.long 0                                                    // 00000006600C: 00000000
	.long 0x15d00                                              // 000000066010: 00015D00
	.long 0                                                    // 000000066014: 00000000
	.long 0                                                    // 000000066018: 00000000
	.long 0                                                    // 00000006601C: 00000000
	.long 0                                                    // 000000066020: 00000000
	.long 0                                                    // 000000066024: 00000000
	.long 0                                                    // 000000066028: 00000000
	.long 0                                                    // 00000006602C: 00000000
	.long 0x60af0100                                           // 000000066030: 60AF0100
	.long 0x1384                                               // 000000066034: 00001384
	.long 0x408                                                // 000000066038: 00000408
	.long 0                                                    // 00000006603C: 00000000
	.type	subtract_char_get_work_dim_x.kd,@object
subtract_char_get_work_dim_x.kd:
	.long 0                                                    // 000000066040: 00000000
	.long 0                                                    // 000000066044: 00000000
	.long 0x110                                                // 000000066048: 00000110
	.long 0                                                    // 00000006604C: 00000000
	.long 0x15ec0                                              // 000000066050: 00015EC0
	.long 0                                                    // 000000066054: 00000000
	.long 0                                                    // 000000066058: 00000000
	.long 0                                                    // 00000006605C: 00000000
	.long 0                                                    // 000000066060: 00000000
	.long 0                                                    // 000000066064: 00000000
	.long 0                                                    // 000000066068: 00000000
	.long 0                                                    // 00000006606C: 00000000
	.long 0x60af0100                                           // 000000066070: 60AF0100
	.long 0x84                                                 // 000000066074: 00000084
	.long 0x408                                                // 000000066078: 00000408
	.long 0                                                    // 00000006607C: 00000000
	.type	subtract_char_x_get_global_offset.kd,@object
subtract_char_x_get_global_offset.kd:
	.long 0                                                    // 000000066080: 00000000
	.long 0                                                    // 000000066084: 00000000
	.long 0x110                                                // 000000066088: 00000110
	.long 0                                                    // 00000006608C: 00000000
	.long 0x15f80                                              // 000000066090: 00015F80
	.long 0                                                    // 000000066094: 00000000
	.long 0                                                    // 000000066098: 00000000
	.long 0                                                    // 00000006609C: 00000000
	.long 0                                                    // 0000000660A0: 00000000
	.long 0                                                    // 0000000660A4: 00000000
	.long 0                                                    // 0000000660A8: 00000000
	.long 0                                                    // 0000000660AC: 00000000
	.long 0x60af0100                                           // 0000000660B0: 60AF0100
	.long 0x1384                                               // 0000000660B4: 00001384
	.long 0x408                                                // 0000000660B8: 00000408
	.long 0                                                    // 0000000660BC: 00000000
	.type	subtract_char_get_global_offset_get_global_offset.kd,@object
subtract_char_get_global_offset_get_global_offset.kd:
	.long 0                                                    // 0000000660C0: 00000000
	.long 0                                                    // 0000000660C4: 00000000
	.long 0x110                                                // 0000000660C8: 00000110
	.long 0                                                    // 0000000660CC: 00000000
	.ascii "@`"                                                // 0000000660D0: 6040
	.short 0x1                                                 // 0000000660D2: 0001
	.long 0                                                    // 0000000660D4: 00000000
	.long 0                                                    // 0000000660D8: 00000000
	.long 0                                                    // 0000000660DC: 00000000
	.long 0                                                    // 0000000660E0: 00000000
	.long 0                                                    // 0000000660E4: 00000000
	.long 0                                                    // 0000000660E8: 00000000
	.long 0                                                    // 0000000660EC: 00000000
	.long 0x60af0100                                           // 0000000660F0: 60AF0100
	.long 0x1384                                               // 0000000660F4: 00001384
	.long 0x408                                                // 0000000660F8: 00000408
	.long 0                                                    // 0000000660FC: 00000000
	.type	subtract_char_get_local_id_get_global_offset.kd,@object
subtract_char_get_local_id_get_global_offset.kd:
	.long 0                                                    // 000000066100: 00000000
	.long 0                                                    // 000000066104: 00000000
	.long 0x110                                                // 000000066108: 00000110
	.long 0                                                    // 00000006610C: 00000000
	.long 0x16100                                              // 000000066110: 00016100
	.long 0                                                    // 000000066114: 00000000
	.long 0                                                    // 000000066118: 00000000
	.long 0                                                    // 00000006611C: 00000000
	.long 0                                                    // 000000066120: 00000000
	.long 0                                                    // 000000066124: 00000000
	.long 0                                                    // 000000066128: 00000000
	.long 0                                                    // 00000006612C: 00000000
	.long 0x60af0100                                           // 000000066130: 60AF0100
	.long 0x1384                                               // 000000066134: 00001384
	.long 0x408                                                // 000000066138: 00000408
	.long 0                                                    // 00000006613C: 00000000
	.type	subtract_char_get_group_id_get_global_offset.kd,@object
subtract_char_get_group_id_get_global_offset.kd:
	.long 0                                                    // 000000066140: 00000000
	.long 0                                                    // 000000066144: 00000000
	.long 0x110                                                // 000000066148: 00000110
	.long 0                                                    // 00000006614C: 00000000
	.long 0x161c0                                              // 000000066150: 000161C0
	.long 0                                                    // 000000066154: 00000000
	.long 0                                                    // 000000066158: 00000000
	.long 0                                                    // 00000006615C: 00000000
	.long 0                                                    // 000000066160: 00000000
	.long 0                                                    // 000000066164: 00000000
	.long 0                                                    // 000000066168: 00000000
	.long 0                                                    // 00000006616C: 00000000
	.long 0x60af0100                                           // 000000066170: 60AF0100
	.long 0x1384                                               // 000000066174: 00001384
	.long 0x408                                                // 000000066178: 00000408
	.long 0                                                    // 00000006617C: 00000000
	.type	subtract_char_get_local_size_get_global_offset.kd,@object
subtract_char_get_local_size_get_global_offset.kd:
	.long 0                                                    // 000000066180: 00000000
	.long 0                                                    // 000000066184: 00000000
	.long 0x110                                                // 000000066188: 00000110
	.long 0                                                    // 00000006618C: 00000000
	.long 0x16280                                              // 000000066190: 00016280
	.long 0                                                    // 000000066194: 00000000
	.long 0                                                    // 000000066198: 00000000
	.long 0                                                    // 00000006619C: 00000000
	.long 0                                                    // 0000000661A0: 00000000
	.long 0                                                    // 0000000661A4: 00000000
	.long 0                                                    // 0000000661A8: 00000000
	.long 0                                                    // 0000000661AC: 00000000
	.long 0x60af0100                                           // 0000000661B0: 60AF0100
	.long 0x1384                                               // 0000000661B4: 00001384
	.long 0x408                                                // 0000000661B8: 00000408
	.long 0                                                    // 0000000661BC: 00000000
	.type	subtract_char_get_global_id_get_global_offset.kd,@object
subtract_char_get_global_id_get_global_offset.kd:
	.long 0                                                    // 0000000661C0: 00000000
	.long 0                                                    // 0000000661C4: 00000000
	.long 0x110                                                // 0000000661C8: 00000110
	.long 0                                                    // 0000000661CC: 00000000
	.ascii "@d"                                                // 0000000661D0: 6440
	.short 0x1                                                 // 0000000661D2: 0001
	.long 0                                                    // 0000000661D4: 00000000
	.long 0                                                    // 0000000661D8: 00000000
	.long 0                                                    // 0000000661DC: 00000000
	.long 0                                                    // 0000000661E0: 00000000
	.long 0                                                    // 0000000661E4: 00000000
	.long 0                                                    // 0000000661E8: 00000000
	.long 0                                                    // 0000000661EC: 00000000
	.long 0x60af0100                                           // 0000000661F0: 60AF0100
	.long 0x1384                                               // 0000000661F4: 00001384
	.long 0x408                                                // 0000000661F8: 00000408
	.long 0                                                    // 0000000661FC: 00000000
	.type	subtract_char_get_global_size_get_global_offset.kd,@object
subtract_char_get_global_size_get_global_offset.kd:
	.long 0                                                    // 000000066200: 00000000
	.long 0                                                    // 000000066204: 00000000
	.long 0x110                                                // 000000066208: 00000110
	.long 0                                                    // 00000006620C: 00000000
	.long 0x16500                                              // 000000066210: 00016500
	.long 0                                                    // 000000066214: 00000000
	.long 0                                                    // 000000066218: 00000000
	.long 0                                                    // 00000006621C: 00000000
	.long 0                                                    // 000000066220: 00000000
	.long 0                                                    // 000000066224: 00000000
	.long 0                                                    // 000000066228: 00000000
	.long 0                                                    // 00000006622C: 00000000
	.long 0x60af0100                                           // 000000066230: 60AF0100
	.long 0x1384                                               // 000000066234: 00001384
	.long 0x408                                                // 000000066238: 00000408
	.long 0                                                    // 00000006623C: 00000000
	.type	subtract_char_get_num_groups_get_global_offset.kd,@object
subtract_char_get_num_groups_get_global_offset.kd:
	.long 0                                                    // 000000066240: 00000000
	.long 0                                                    // 000000066244: 00000000
	.long 0x110                                                // 000000066248: 00000110
	.long 0                                                    // 00000006624C: 00000000
	.long 0x165c0                                              // 000000066250: 000165C0
	.long 0                                                    // 000000066254: 00000000
	.long 0                                                    // 000000066258: 00000000
	.long 0                                                    // 00000006625C: 00000000
	.long 0                                                    // 000000066260: 00000000
	.long 0                                                    // 000000066264: 00000000
	.long 0                                                    // 000000066268: 00000000
	.long 0                                                    // 00000006626C: 00000000
	.long 0x60af0100                                           // 000000066270: 60AF0100
	.long 0x1384                                               // 000000066274: 00001384
	.long 0x408                                                // 000000066278: 00000408
	.long 0                                                    // 00000006627C: 00000000
	.type	subtract_char_get_work_dim_get_global_offset.kd,@object
subtract_char_get_work_dim_get_global_offset.kd:
	.long 0                                                    // 000000066280: 00000000
	.long 0                                                    // 000000066284: 00000000
	.long 0x110                                                // 000000066288: 00000110
	.long 0                                                    // 00000006628C: 00000000
	.long 0x16680                                              // 000000066290: 00016680
	.long 0                                                    // 000000066294: 00000000
	.long 0                                                    // 000000066298: 00000000
	.long 0                                                    // 00000006629C: 00000000
	.long 0                                                    // 0000000662A0: 00000000
	.long 0                                                    // 0000000662A4: 00000000
	.long 0                                                    // 0000000662A8: 00000000
	.long 0                                                    // 0000000662AC: 00000000
	.long 0x60af0100                                           // 0000000662B0: 60AF0100
	.long 0x1384                                               // 0000000662B4: 00001384
	.long 0x408                                                // 0000000662B8: 00000408
	.long 0                                                    // 0000000662BC: 00000000
	.type	subtract_char_x_get_local_id.kd,@object
subtract_char_x_get_local_id.kd:
	.long 0                                                    // 0000000662C0: 00000000
	.long 0                                                    // 0000000662C4: 00000000
	.long 0x110                                                // 0000000662C8: 00000110
	.long 0                                                    // 0000000662CC: 00000000
	.ascii "@g"                                                // 0000000662D0: 6740
	.short 0x1                                                 // 0000000662D2: 0001
	.long 0                                                    // 0000000662D4: 00000000
	.long 0                                                    // 0000000662D8: 00000000
	.long 0                                                    // 0000000662DC: 00000000
	.long 0                                                    // 0000000662E0: 00000000
	.long 0                                                    // 0000000662E4: 00000000
	.long 0                                                    // 0000000662E8: 00000000
	.long 0                                                    // 0000000662EC: 00000000
	.long 0x60af0100                                           // 0000000662F0: 60AF0100
	.long 0x1384                                               // 0000000662F4: 00001384
	.long 0x408                                                // 0000000662F8: 00000408
	.long 0                                                    // 0000000662FC: 00000000
	.type	subtract_char_get_global_offset_get_local_id.kd,@object
subtract_char_get_global_offset_get_local_id.kd:
	.long 0                                                    // 000000066300: 00000000
	.long 0                                                    // 000000066304: 00000000
	.long 0x110                                                // 000000066308: 00000110
	.long 0                                                    // 00000006630C: 00000000
	.long 0x16800                                              // 000000066310: 00016800
	.long 0                                                    // 000000066314: 00000000
	.long 0                                                    // 000000066318: 00000000
	.long 0                                                    // 00000006631C: 00000000
	.long 0                                                    // 000000066320: 00000000
	.long 0                                                    // 000000066324: 00000000
	.long 0                                                    // 000000066328: 00000000
	.long 0                                                    // 00000006632C: 00000000
	.long 0x60af0100                                           // 000000066330: 60AF0100
	.long 0x1384                                               // 000000066334: 00001384
	.long 0x408                                                // 000000066338: 00000408
	.long 0                                                    // 00000006633C: 00000000
	.type	subtract_char_get_local_id_get_local_id.kd,@object
subtract_char_get_local_id_get_local_id.kd:
	.long 0                                                    // 000000066340: 00000000
	.long 0                                                    // 000000066344: 00000000
	.long 0x110                                                // 000000066348: 00000110
	.long 0                                                    // 00000006634C: 00000000
	.long 0x168c0                                              // 000000066350: 000168C0
	.long 0                                                    // 000000066354: 00000000
	.long 0                                                    // 000000066358: 00000000
	.long 0                                                    // 00000006635C: 00000000
	.long 0                                                    // 000000066360: 00000000
	.long 0                                                    // 000000066364: 00000000
	.long 0                                                    // 000000066368: 00000000
	.long 0                                                    // 00000006636C: 00000000
	.long 0x60af0100                                           // 000000066370: 60AF0100
	.long 0x1384                                               // 000000066374: 00001384
	.long 0x408                                                // 000000066378: 00000408
	.long 0                                                    // 00000006637C: 00000000
	.type	subtract_char_get_group_id_get_local_id.kd,@object
subtract_char_get_group_id_get_local_id.kd:
	.long 0                                                    // 000000066380: 00000000
	.long 0                                                    // 000000066384: 00000000
	.long 0x110                                                // 000000066388: 00000110
	.long 0                                                    // 00000006638C: 00000000
	.long 0x16980                                              // 000000066390: 00016980
	.long 0                                                    // 000000066394: 00000000
	.long 0                                                    // 000000066398: 00000000
	.long 0                                                    // 00000006639C: 00000000
	.long 0                                                    // 0000000663A0: 00000000
	.long 0                                                    // 0000000663A4: 00000000
	.long 0                                                    // 0000000663A8: 00000000
	.long 0                                                    // 0000000663AC: 00000000
	.long 0x60af0100                                           // 0000000663B0: 60AF0100
	.long 0x1384                                               // 0000000663B4: 00001384
	.long 0x408                                                // 0000000663B8: 00000408
	.long 0                                                    // 0000000663BC: 00000000
	.type	subtract_char_get_local_size_get_local_id.kd,@object
subtract_char_get_local_size_get_local_id.kd:
	.long 0                                                    // 0000000663C0: 00000000
	.long 0                                                    // 0000000663C4: 00000000
	.long 0x110                                                // 0000000663C8: 00000110
	.long 0                                                    // 0000000663CC: 00000000
	.ascii "@j"                                                // 0000000663D0: 6A40
	.short 0x1                                                 // 0000000663D2: 0001
	.long 0                                                    // 0000000663D4: 00000000
	.long 0                                                    // 0000000663D8: 00000000
	.long 0                                                    // 0000000663DC: 00000000
	.long 0                                                    // 0000000663E0: 00000000
	.long 0                                                    // 0000000663E4: 00000000
	.long 0                                                    // 0000000663E8: 00000000
	.long 0                                                    // 0000000663EC: 00000000
	.long 0x60af0100                                           // 0000000663F0: 60AF0100
	.long 0x1384                                               // 0000000663F4: 00001384
	.long 0x408                                                // 0000000663F8: 00000408
	.long 0                                                    // 0000000663FC: 00000000
	.type	subtract_char_get_global_id_get_local_id.kd,@object
subtract_char_get_global_id_get_local_id.kd:
	.long 0                                                    // 000000066400: 00000000
	.long 0                                                    // 000000066404: 00000000
	.long 0x110                                                // 000000066408: 00000110
	.long 0                                                    // 00000006640C: 00000000
	.long 0x16c00                                              // 000000066410: 00016C00
	.long 0                                                    // 000000066414: 00000000
	.long 0                                                    // 000000066418: 00000000
	.long 0                                                    // 00000006641C: 00000000
	.long 0                                                    // 000000066420: 00000000
	.long 0                                                    // 000000066424: 00000000
	.long 0                                                    // 000000066428: 00000000
	.long 0                                                    // 00000006642C: 00000000
	.long 0x60af0101                                           // 000000066430: 60AF0101
	.long 0x1384                                               // 000000066434: 00001384
	.long 0x408                                                // 000000066438: 00000408
	.long 0                                                    // 00000006643C: 00000000
	.type	subtract_char_get_global_size_get_local_id.kd,@object
subtract_char_get_global_size_get_local_id.kd:
	.long 0                                                    // 000000066440: 00000000
	.long 0                                                    // 000000066444: 00000000
	.long 0x110                                                // 000000066448: 00000110
	.long 0                                                    // 00000006644C: 00000000
	.long 0x16cc0                                              // 000000066450: 00016CC0
	.long 0                                                    // 000000066454: 00000000
	.long 0                                                    // 000000066458: 00000000
	.long 0                                                    // 00000006645C: 00000000
	.long 0                                                    // 000000066460: 00000000
	.long 0                                                    // 000000066464: 00000000
	.long 0                                                    // 000000066468: 00000000
	.long 0                                                    // 00000006646C: 00000000
	.long 0x60af0101                                           // 000000066470: 60AF0101
	.long 0x1384                                               // 000000066474: 00001384
	.long 0x408                                                // 000000066478: 00000408
	.long 0                                                    // 00000006647C: 00000000
	.type	subtract_char_get_num_groups_get_local_id.kd,@object
subtract_char_get_num_groups_get_local_id.kd:
	.long 0                                                    // 000000066480: 00000000
	.long 0                                                    // 000000066484: 00000000
	.long 0x110                                                // 000000066488: 00000110
	.long 0                                                    // 00000006648C: 00000000
	.long 0x16d80                                              // 000000066490: 00016D80
	.long 0                                                    // 000000066494: 00000000
	.long 0                                                    // 000000066498: 00000000
	.long 0                                                    // 00000006649C: 00000000
	.long 0                                                    // 0000000664A0: 00000000
	.long 0                                                    // 0000000664A4: 00000000
	.long 0                                                    // 0000000664A8: 00000000
	.long 0                                                    // 0000000664AC: 00000000
	.long 0x60af0100                                           // 0000000664B0: 60AF0100
	.long 0x1384                                               // 0000000664B4: 00001384
	.long 0x408                                                // 0000000664B8: 00000408
	.long 0                                                    // 0000000664BC: 00000000
	.type	subtract_char_get_work_dim_get_local_id.kd,@object
subtract_char_get_work_dim_get_local_id.kd:
	.long 0                                                    // 0000000664C0: 00000000
	.long 0                                                    // 0000000664C4: 00000000
	.long 0x110                                                // 0000000664C8: 00000110
	.long 0                                                    // 0000000664CC: 00000000
	.ascii "@n"                                                // 0000000664D0: 6E40
	.short 0x1                                                 // 0000000664D2: 0001
	.long 0                                                    // 0000000664D4: 00000000
	.long 0                                                    // 0000000664D8: 00000000
	.long 0                                                    // 0000000664DC: 00000000
	.long 0                                                    // 0000000664E0: 00000000
	.long 0                                                    // 0000000664E4: 00000000
	.long 0                                                    // 0000000664E8: 00000000
	.long 0                                                    // 0000000664EC: 00000000
	.long 0x60af0100                                           // 0000000664F0: 60AF0100
	.long 0x1384                                               // 0000000664F4: 00001384
	.long 0x408                                                // 0000000664F8: 00000408
	.long 0                                                    // 0000000664FC: 00000000
	.type	subtract_char_x_get_group_id.kd,@object
subtract_char_x_get_group_id.kd:
	.long 0                                                    // 000000066500: 00000000
	.long 0                                                    // 000000066504: 00000000
	.long 0x110                                                // 000000066508: 00000110
	.long 0                                                    // 00000006650C: 00000000
	.long 0x16f00                                              // 000000066510: 00016F00
	.long 0                                                    // 000000066514: 00000000
	.long 0                                                    // 000000066518: 00000000
	.long 0                                                    // 00000006651C: 00000000
	.long 0                                                    // 000000066520: 00000000
	.long 0                                                    // 000000066524: 00000000
	.long 0                                                    // 000000066528: 00000000
	.long 0                                                    // 00000006652C: 00000000
	.long 0x60af0100                                           // 000000066530: 60AF0100
	.long 0x1384                                               // 000000066534: 00001384
	.long 0x408                                                // 000000066538: 00000408
	.long 0                                                    // 00000006653C: 00000000
	.type	subtract_char_get_global_offset_get_group_id.kd,@object
subtract_char_get_global_offset_get_group_id.kd:
	.long 0                                                    // 000000066540: 00000000
	.long 0                                                    // 000000066544: 00000000
	.long 0x110                                                // 000000066548: 00000110
	.long 0                                                    // 00000006654C: 00000000
	.long 0x16fc0                                              // 000000066550: 00016FC0
	.long 0                                                    // 000000066554: 00000000
	.long 0                                                    // 000000066558: 00000000
	.long 0                                                    // 00000006655C: 00000000
	.long 0                                                    // 000000066560: 00000000
	.long 0                                                    // 000000066564: 00000000
	.long 0                                                    // 000000066568: 00000000
	.long 0                                                    // 00000006656C: 00000000
	.long 0x60af0100                                           // 000000066570: 60AF0100
	.long 0x1384                                               // 000000066574: 00001384
	.long 0x408                                                // 000000066578: 00000408
	.long 0                                                    // 00000006657C: 00000000
	.type	subtract_char_get_local_id_get_group_id.kd,@object
subtract_char_get_local_id_get_group_id.kd:
	.long 0                                                    // 000000066580: 00000000
	.long 0                                                    // 000000066584: 00000000
	.long 0x110                                                // 000000066588: 00000110
	.long 0                                                    // 00000006658C: 00000000
	.long 0x17080                                              // 000000066590: 00017080
	.long 0                                                    // 000000066594: 00000000
	.long 0                                                    // 000000066598: 00000000
	.long 0                                                    // 00000006659C: 00000000
	.long 0                                                    // 0000000665A0: 00000000
	.long 0                                                    // 0000000665A4: 00000000
	.long 0                                                    // 0000000665A8: 00000000
	.long 0                                                    // 0000000665AC: 00000000
	.long 0x60af0100                                           // 0000000665B0: 60AF0100
	.long 0x1384                                               // 0000000665B4: 00001384
	.long 0x408                                                // 0000000665B8: 00000408
	.long 0                                                    // 0000000665BC: 00000000
	.type	subtract_char_get_group_id_get_group_id.kd,@object
subtract_char_get_group_id_get_group_id.kd:
	.long 0                                                    // 0000000665C0: 00000000
	.long 0                                                    // 0000000665C4: 00000000
	.long 0x110                                                // 0000000665C8: 00000110
	.long 0                                                    // 0000000665CC: 00000000
	.ascii "@q"                                                // 0000000665D0: 7140
	.short 0x1                                                 // 0000000665D2: 0001
	.long 0                                                    // 0000000665D4: 00000000
	.long 0                                                    // 0000000665D8: 00000000
	.long 0                                                    // 0000000665DC: 00000000
	.long 0                                                    // 0000000665E0: 00000000
	.long 0                                                    // 0000000665E4: 00000000
	.long 0                                                    // 0000000665E8: 00000000
	.long 0                                                    // 0000000665EC: 00000000
	.long 0x60af0100                                           // 0000000665F0: 60AF0100
	.long 0x1384                                               // 0000000665F4: 00001384
	.long 0x408                                                // 0000000665F8: 00000408
	.long 0                                                    // 0000000665FC: 00000000
	.type	subtract_char_get_local_size_get_group_id.kd,@object
subtract_char_get_local_size_get_group_id.kd:
	.long 0                                                    // 000000066600: 00000000
	.long 0                                                    // 000000066604: 00000000
	.long 0x110                                                // 000000066608: 00000110
	.long 0                                                    // 00000006660C: 00000000
	.long 0x17200                                              // 000000066610: 00017200
	.long 0                                                    // 000000066614: 00000000
	.long 0                                                    // 000000066618: 00000000
	.long 0                                                    // 00000006661C: 00000000
	.long 0                                                    // 000000066620: 00000000
	.long 0                                                    // 000000066624: 00000000
	.long 0                                                    // 000000066628: 00000000
	.long 0                                                    // 00000006662C: 00000000
	.long 0x60af0100                                           // 000000066630: 60AF0100
	.long 0x1384                                               // 000000066634: 00001384
	.long 0x408                                                // 000000066638: 00000408
	.long 0                                                    // 00000006663C: 00000000
	.type	subtract_char_get_global_id_get_group_id.kd,@object
subtract_char_get_global_id_get_group_id.kd:
	.long 0                                                    // 000000066640: 00000000
	.long 0                                                    // 000000066644: 00000000
	.long 0x110                                                // 000000066648: 00000110
	.long 0                                                    // 00000006664C: 00000000
	.long 0x173c0                                              // 000000066650: 000173C0
	.long 0                                                    // 000000066654: 00000000
	.long 0                                                    // 000000066658: 00000000
	.long 0                                                    // 00000006665C: 00000000
	.long 0                                                    // 000000066660: 00000000
	.long 0                                                    // 000000066664: 00000000
	.long 0                                                    // 000000066668: 00000000
	.long 0                                                    // 00000006666C: 00000000
	.long 0x60af0100                                           // 000000066670: 60AF0100
	.long 0x1384                                               // 000000066674: 00001384
	.long 0x408                                                // 000000066678: 00000408
	.long 0                                                    // 00000006667C: 00000000
	.type	subtract_char_get_global_size_get_group_id.kd,@object
subtract_char_get_global_size_get_group_id.kd:
	.long 0                                                    // 000000066680: 00000000
	.long 0                                                    // 000000066684: 00000000
	.long 0x110                                                // 000000066688: 00000110
	.long 0                                                    // 00000006668C: 00000000
	.long 0x17480                                              // 000000066690: 00017480
	.long 0                                                    // 000000066694: 00000000
	.long 0                                                    // 000000066698: 00000000
	.long 0                                                    // 00000006669C: 00000000
	.long 0                                                    // 0000000666A0: 00000000
	.long 0                                                    // 0000000666A4: 00000000
	.long 0                                                    // 0000000666A8: 00000000
	.long 0                                                    // 0000000666AC: 00000000
	.long 0x60af0100                                           // 0000000666B0: 60AF0100
	.long 0x1384                                               // 0000000666B4: 00001384
	.long 0x408                                                // 0000000666B8: 00000408
	.long 0                                                    // 0000000666BC: 00000000
	.type	subtract_char_get_num_groups_get_group_id.kd,@object
subtract_char_get_num_groups_get_group_id.kd:
	.long 0                                                    // 0000000666C0: 00000000
	.long 0                                                    // 0000000666C4: 00000000
	.long 0x110                                                // 0000000666C8: 00000110
	.long 0                                                    // 0000000666CC: 00000000
	.ascii "@u"                                                // 0000000666D0: 7540
	.short 0x1                                                 // 0000000666D2: 0001
	.long 0                                                    // 0000000666D4: 00000000
	.long 0                                                    // 0000000666D8: 00000000
	.long 0                                                    // 0000000666DC: 00000000
	.long 0                                                    // 0000000666E0: 00000000
	.long 0                                                    // 0000000666E4: 00000000
	.long 0                                                    // 0000000666E8: 00000000
	.long 0                                                    // 0000000666EC: 00000000
	.long 0x60af0100                                           // 0000000666F0: 60AF0100
	.long 0x1384                                               // 0000000666F4: 00001384
	.long 0x408                                                // 0000000666F8: 00000408
	.long 0                                                    // 0000000666FC: 00000000
	.type	subtract_char_get_work_dim_get_group_id.kd,@object
subtract_char_get_work_dim_get_group_id.kd:
	.long 0                                                    // 000000066700: 00000000
	.long 0                                                    // 000000066704: 00000000
	.long 0x110                                                // 000000066708: 00000110
	.long 0                                                    // 00000006670C: 00000000
	.long 0x17600                                              // 000000066710: 00017600
	.long 0                                                    // 000000066714: 00000000
	.long 0                                                    // 000000066718: 00000000
	.long 0                                                    // 00000006671C: 00000000
	.long 0                                                    // 000000066720: 00000000
	.long 0                                                    // 000000066724: 00000000
	.long 0                                                    // 000000066728: 00000000
	.long 0                                                    // 00000006672C: 00000000
	.long 0x60af0100                                           // 000000066730: 60AF0100
	.long 0x1384                                               // 000000066734: 00001384
	.long 0x408                                                // 000000066738: 00000408
	.long 0                                                    // 00000006673C: 00000000
	.type	subtract_char_x_get_local_size.kd,@object
subtract_char_x_get_local_size.kd:
	.long 0                                                    // 000000066740: 00000000
	.long 0                                                    // 000000066744: 00000000
	.long 0x110                                                // 000000066748: 00000110
	.long 0                                                    // 00000006674C: 00000000
	.long 0x176c0                                              // 000000066750: 000176C0
	.long 0                                                    // 000000066754: 00000000
	.long 0                                                    // 000000066758: 00000000
	.long 0                                                    // 00000006675C: 00000000
	.long 0                                                    // 000000066760: 00000000
	.long 0                                                    // 000000066764: 00000000
	.long 0                                                    // 000000066768: 00000000
	.long 0                                                    // 00000006676C: 00000000
	.long 0x60af0100                                           // 000000066770: 60AF0100
	.long 0x1384                                               // 000000066774: 00001384
	.long 0x408                                                // 000000066778: 00000408
	.long 0                                                    // 00000006677C: 00000000
	.type	subtract_char_get_global_offset_get_local_size.kd,@object
subtract_char_get_global_offset_get_local_size.kd:
	.long 0                                                    // 000000066780: 00000000
	.long 0                                                    // 000000066784: 00000000
	.long 0x110                                                // 000000066788: 00000110
	.long 0                                                    // 00000006678C: 00000000
	.long 0x17880                                              // 000000066790: 00017880
	.long 0                                                    // 000000066794: 00000000
	.long 0                                                    // 000000066798: 00000000
	.long 0                                                    // 00000006679C: 00000000
	.long 0                                                    // 0000000667A0: 00000000
	.long 0                                                    // 0000000667A4: 00000000
	.long 0                                                    // 0000000667A8: 00000000
	.long 0                                                    // 0000000667AC: 00000000
	.long 0x60af0100                                           // 0000000667B0: 60AF0100
	.long 0x1384                                               // 0000000667B4: 00001384
	.long 0x408                                                // 0000000667B8: 00000408
	.long 0                                                    // 0000000667BC: 00000000
	.type	subtract_char_get_local_id_get_local_size.kd,@object
subtract_char_get_local_id_get_local_size.kd:
	.long 0                                                    // 0000000667C0: 00000000
	.long 0                                                    // 0000000667C4: 00000000
	.long 0x110                                                // 0000000667C8: 00000110
	.long 0                                                    // 0000000667CC: 00000000
	.ascii "@z"                                                // 0000000667D0: 7A40
	.short 0x1                                                 // 0000000667D2: 0001
	.long 0                                                    // 0000000667D4: 00000000
	.long 0                                                    // 0000000667D8: 00000000
	.long 0                                                    // 0000000667DC: 00000000
	.long 0                                                    // 0000000667E0: 00000000
	.long 0                                                    // 0000000667E4: 00000000
	.long 0                                                    // 0000000667E8: 00000000
	.long 0                                                    // 0000000667EC: 00000000
	.long 0x60af0100                                           // 0000000667F0: 60AF0100
	.long 0x1384                                               // 0000000667F4: 00001384
	.long 0x408                                                // 0000000667F8: 00000408
	.long 0                                                    // 0000000667FC: 00000000
	.type	subtract_char_get_group_id_get_local_size.kd,@object
subtract_char_get_group_id_get_local_size.kd:
	.long 0                                                    // 000000066800: 00000000
	.long 0                                                    // 000000066804: 00000000
	.long 0x110                                                // 000000066808: 00000110
	.long 0                                                    // 00000006680C: 00000000
	.long 0x17c00                                              // 000000066810: 00017C00
	.long 0                                                    // 000000066814: 00000000
	.long 0                                                    // 000000066818: 00000000
	.long 0                                                    // 00000006681C: 00000000
	.long 0                                                    // 000000066820: 00000000
	.long 0                                                    // 000000066824: 00000000
	.long 0                                                    // 000000066828: 00000000
	.long 0                                                    // 00000006682C: 00000000
	.long 0x60af0100                                           // 000000066830: 60AF0100
	.long 0x1384                                               // 000000066834: 00001384
	.long 0x408                                                // 000000066838: 00000408
	.long 0                                                    // 00000006683C: 00000000
	.type	subtract_char_get_local_size_get_local_size.kd,@object
subtract_char_get_local_size_get_local_size.kd:
	.long 0                                                    // 000000066840: 00000000
	.long 0                                                    // 000000066844: 00000000
	.long 0x110                                                // 000000066848: 00000110
	.long 0                                                    // 00000006684C: 00000000
	.long 0x17dc0                                              // 000000066850: 00017DC0
	.long 0                                                    // 000000066854: 00000000
	.long 0                                                    // 000000066858: 00000000
	.long 0                                                    // 00000006685C: 00000000
	.long 0                                                    // 000000066860: 00000000
	.long 0                                                    // 000000066864: 00000000
	.long 0                                                    // 000000066868: 00000000
	.long 0                                                    // 00000006686C: 00000000
	.long 0x60af0100                                           // 000000066870: 60AF0100
	.long 0x1384                                               // 000000066874: 00001384
	.long 0x408                                                // 000000066878: 00000408
	.long 0                                                    // 00000006687C: 00000000
	.type	subtract_char_get_global_id_get_local_size.kd,@object
subtract_char_get_global_id_get_local_size.kd:
	.long 0                                                    // 000000066880: 00000000
	.long 0                                                    // 000000066884: 00000000
	.long 0x110                                                // 000000066888: 00000110
	.long 0                                                    // 00000006688C: 00000000
	.long 0x17e80                                              // 000000066890: 00017E80
	.long 0                                                    // 000000066894: 00000000
	.long 0                                                    // 000000066898: 00000000
	.long 0                                                    // 00000006689C: 00000000
	.long 0                                                    // 0000000668A0: 00000000
	.long 0                                                    // 0000000668A4: 00000000
	.long 0                                                    // 0000000668A8: 00000000
	.long 0                                                    // 0000000668AC: 00000000
	.long 0x60af0100                                           // 0000000668B0: 60AF0100
	.long 0x1384                                               // 0000000668B4: 00001384
	.long 0x408                                                // 0000000668B8: 00000408
	.long 0                                                    // 0000000668BC: 00000000
	.type	subtract_char_get_global_size_get_local_size.kd,@object
subtract_char_get_global_size_get_local_size.kd:
	.long 0                                                    // 0000000668C0: 00000000
	.long 0                                                    // 0000000668C4: 00000000
	.long 0x110                                                // 0000000668C8: 00000110
	.long 0                                                    // 0000000668CC: 00000000
	.ascii "@"                                                 // 0000000668D0: 40
	.byte 0x80                                                 // 0000000668D1: 80
	.short 0x1                                                 // 0000000668D2: 0001
	.long 0                                                    // 0000000668D4: 00000000
	.long 0                                                    // 0000000668D8: 00000000
	.long 0                                                    // 0000000668DC: 00000000
	.long 0                                                    // 0000000668E0: 00000000
	.long 0                                                    // 0000000668E4: 00000000
	.long 0                                                    // 0000000668E8: 00000000
	.long 0                                                    // 0000000668EC: 00000000
	.long 0x60af0100                                           // 0000000668F0: 60AF0100
	.long 0x1384                                               // 0000000668F4: 00001384
	.long 0x408                                                // 0000000668F8: 00000408
	.long 0                                                    // 0000000668FC: 00000000
	.type	subtract_char_get_num_groups_get_local_size.kd,@object
subtract_char_get_num_groups_get_local_size.kd:
	.long 0                                                    // 000000066900: 00000000
	.long 0                                                    // 000000066904: 00000000
	.long 0x110                                                // 000000066908: 00000110
	.long 0                                                    // 00000006690C: 00000000
	.long 0x18200                                              // 000000066910: 00018200
	.long 0                                                    // 000000066914: 00000000
	.long 0                                                    // 000000066918: 00000000
	.long 0                                                    // 00000006691C: 00000000
	.long 0                                                    // 000000066920: 00000000
	.long 0                                                    // 000000066924: 00000000
	.long 0                                                    // 000000066928: 00000000
	.long 0                                                    // 00000006692C: 00000000
	.long 0x60af0100                                           // 000000066930: 60AF0100
	.long 0x1384                                               // 000000066934: 00001384
	.long 0x408                                                // 000000066938: 00000408
	.long 0                                                    // 00000006693C: 00000000
	.type	subtract_char_get_work_dim_get_local_size.kd,@object
subtract_char_get_work_dim_get_local_size.kd:
	.long 0                                                    // 000000066940: 00000000
	.long 0                                                    // 000000066944: 00000000
	.long 0x110                                                // 000000066948: 00000110
	.long 0                                                    // 00000006694C: 00000000
	.long 0x183c0                                              // 000000066950: 000183C0
	.long 0                                                    // 000000066954: 00000000
	.long 0                                                    // 000000066958: 00000000
	.long 0                                                    // 00000006695C: 00000000
	.long 0                                                    // 000000066960: 00000000
	.long 0                                                    // 000000066964: 00000000
	.long 0                                                    // 000000066968: 00000000
	.long 0                                                    // 00000006696C: 00000000
	.long 0x60af0100                                           // 000000066970: 60AF0100
	.long 0x1384                                               // 000000066974: 00001384
	.long 0x408                                                // 000000066978: 00000408
	.long 0                                                    // 00000006697C: 00000000
	.type	subtract_char_x_get_global_id.kd,@object
subtract_char_x_get_global_id.kd:
	.long 0                                                    // 000000066980: 00000000
	.long 0                                                    // 000000066984: 00000000
	.long 0x110                                                // 000000066988: 00000110
	.long 0                                                    // 00000006698C: 00000000
	.long 0x18580                                              // 000000066990: 00018580
	.long 0                                                    // 000000066994: 00000000
	.long 0                                                    // 000000066998: 00000000
	.long 0                                                    // 00000006699C: 00000000
	.long 0                                                    // 0000000669A0: 00000000
	.long 0                                                    // 0000000669A4: 00000000
	.long 0                                                    // 0000000669A8: 00000000
	.long 0                                                    // 0000000669AC: 00000000
	.long 0x60af0101                                           // 0000000669B0: 60AF0101
	.long 0x1384                                               // 0000000669B4: 00001384
	.long 0x408                                                // 0000000669B8: 00000408
	.long 0                                                    // 0000000669BC: 00000000
	.type	subtract_char_get_global_offset_get_global_id.kd,@object
subtract_char_get_global_offset_get_global_id.kd:
	.long 0                                                    // 0000000669C0: 00000000
	.long 0                                                    // 0000000669C4: 00000000
	.long 0x110                                                // 0000000669C8: 00000110
	.long 0                                                    // 0000000669CC: 00000000
	.ascii "@"                                                 // 0000000669D0: 40
	.byte 0x86                                                 // 0000000669D1: 86
	.short 0x1                                                 // 0000000669D2: 0001
	.long 0                                                    // 0000000669D4: 00000000
	.long 0                                                    // 0000000669D8: 00000000
	.long 0                                                    // 0000000669DC: 00000000
	.long 0                                                    // 0000000669E0: 00000000
	.long 0                                                    // 0000000669E4: 00000000
	.long 0                                                    // 0000000669E8: 00000000
	.long 0                                                    // 0000000669EC: 00000000
	.long 0x60af0100                                           // 0000000669F0: 60AF0100
	.long 0x1384                                               // 0000000669F4: 00001384
	.long 0x408                                                // 0000000669F8: 00000408
	.long 0                                                    // 0000000669FC: 00000000
	.type	subtract_char_get_local_id_get_global_id.kd,@object
subtract_char_get_local_id_get_global_id.kd:
	.long 0                                                    // 000000066A00: 00000000
	.long 0                                                    // 000000066A04: 00000000
	.long 0x110                                                // 000000066A08: 00000110
	.long 0                                                    // 000000066A0C: 00000000
	.long 0x18700                                              // 000000066A10: 00018700
	.long 0                                                    // 000000066A14: 00000000
	.long 0                                                    // 000000066A18: 00000000
	.long 0                                                    // 000000066A1C: 00000000
	.long 0                                                    // 000000066A20: 00000000
	.long 0                                                    // 000000066A24: 00000000
	.long 0                                                    // 000000066A28: 00000000
	.long 0                                                    // 000000066A2C: 00000000
	.long 0x60af0101                                           // 000000066A30: 60AF0101
	.long 0x1384                                               // 000000066A34: 00001384
	.long 0x408                                                // 000000066A38: 00000408
	.long 0                                                    // 000000066A3C: 00000000
	.type	subtract_char_get_group_id_get_global_id.kd,@object
subtract_char_get_group_id_get_global_id.kd:
	.long 0                                                    // 000000066A40: 00000000
	.long 0                                                    // 000000066A44: 00000000
	.long 0x110                                                // 000000066A48: 00000110
	.long 0                                                    // 000000066A4C: 00000000
	.long 0x187c0                                              // 000000066A50: 000187C0
	.long 0                                                    // 000000066A54: 00000000
	.long 0                                                    // 000000066A58: 00000000
	.long 0                                                    // 000000066A5C: 00000000
	.long 0                                                    // 000000066A60: 00000000
	.long 0                                                    // 000000066A64: 00000000
	.long 0                                                    // 000000066A68: 00000000
	.long 0                                                    // 000000066A6C: 00000000
	.long 0x60af0101                                           // 000000066A70: 60AF0101
	.long 0x1384                                               // 000000066A74: 00001384
	.long 0x408                                                // 000000066A78: 00000408
	.long 0                                                    // 000000066A7C: 00000000
	.type	subtract_char_get_local_size_get_global_id.kd,@object
subtract_char_get_local_size_get_global_id.kd:
	.long 0                                                    // 000000066A80: 00000000
	.long 0                                                    // 000000066A84: 00000000
	.long 0x110                                                // 000000066A88: 00000110
	.long 0                                                    // 000000066A8C: 00000000
	.long 0x18880                                              // 000000066A90: 00018880
	.long 0                                                    // 000000066A94: 00000000
	.long 0                                                    // 000000066A98: 00000000
	.long 0                                                    // 000000066A9C: 00000000
	.long 0                                                    // 000000066AA0: 00000000
	.long 0                                                    // 000000066AA4: 00000000
	.long 0                                                    // 000000066AA8: 00000000
	.long 0                                                    // 000000066AAC: 00000000
	.long 0x60af0100                                           // 000000066AB0: 60AF0100
	.long 0x1384                                               // 000000066AB4: 00001384
	.long 0x408                                                // 000000066AB8: 00000408
	.long 0                                                    // 000000066ABC: 00000000
	.type	subtract_char_get_global_id_get_global_id.kd,@object
subtract_char_get_global_id_get_global_id.kd:
	.long 0                                                    // 000000066AC0: 00000000
	.long 0                                                    // 000000066AC4: 00000000
	.long 0x110                                                // 000000066AC8: 00000110
	.long 0                                                    // 000000066ACC: 00000000
	.ascii "@"                                                 // 000000066AD0: 40
	.byte 0x8a                                                 // 000000066AD1: 8A
	.short 0x1                                                 // 000000066AD2: 0001
	.long 0                                                    // 000000066AD4: 00000000
	.long 0                                                    // 000000066AD8: 00000000
	.long 0                                                    // 000000066ADC: 00000000
	.long 0                                                    // 000000066AE0: 00000000
	.long 0                                                    // 000000066AE4: 00000000
	.long 0                                                    // 000000066AE8: 00000000
	.long 0                                                    // 000000066AEC: 00000000
	.long 0x60af0100                                           // 000000066AF0: 60AF0100
	.long 0x1384                                               // 000000066AF4: 00001384
	.long 0x408                                                // 000000066AF8: 00000408
	.long 0                                                    // 000000066AFC: 00000000
	.type	subtract_char_get_global_size_get_global_id.kd,@object
subtract_char_get_global_size_get_global_id.kd:
	.long 0                                                    // 000000066B00: 00000000
	.long 0                                                    // 000000066B04: 00000000
	.long 0x110                                                // 000000066B08: 00000110
	.long 0                                                    // 000000066B0C: 00000000
	.long 0x18b00                                              // 000000066B10: 00018B00
	.long 0                                                    // 000000066B14: 00000000
	.long 0                                                    // 000000066B18: 00000000
	.long 0                                                    // 000000066B1C: 00000000
	.long 0                                                    // 000000066B20: 00000000
	.long 0                                                    // 000000066B24: 00000000
	.long 0                                                    // 000000066B28: 00000000
	.long 0                                                    // 000000066B2C: 00000000
	.long 0x60af0101                                           // 000000066B30: 60AF0101
	.long 0x1384                                               // 000000066B34: 00001384
	.long 0x408                                                // 000000066B38: 00000408
	.long 0                                                    // 000000066B3C: 00000000
	.type	subtract_char_get_num_groups_get_global_id.kd,@object
subtract_char_get_num_groups_get_global_id.kd:
	.long 0                                                    // 000000066B40: 00000000
	.long 0                                                    // 000000066B44: 00000000
	.long 0x110                                                // 000000066B48: 00000110
	.long 0                                                    // 000000066B4C: 00000000
	.long 0x18cc0                                              // 000000066B50: 00018CC0
	.long 0                                                    // 000000066B54: 00000000
	.long 0                                                    // 000000066B58: 00000000
	.long 0                                                    // 000000066B5C: 00000000
	.long 0                                                    // 000000066B60: 00000000
	.long 0                                                    // 000000066B64: 00000000
	.long 0                                                    // 000000066B68: 00000000
	.long 0                                                    // 000000066B6C: 00000000
	.long 0x60af0101                                           // 000000066B70: 60AF0101
	.long 0x1384                                               // 000000066B74: 00001384
	.long 0x408                                                // 000000066B78: 00000408
	.long 0                                                    // 000000066B7C: 00000000
	.type	subtract_char_get_work_dim_get_global_id.kd,@object
subtract_char_get_work_dim_get_global_id.kd:
	.long 0                                                    // 000000066B80: 00000000
	.long 0                                                    // 000000066B84: 00000000
	.long 0x110                                                // 000000066B88: 00000110
	.long 0                                                    // 000000066B8C: 00000000
	.long 0x18e80                                              // 000000066B90: 00018E80
	.long 0                                                    // 000000066B94: 00000000
	.long 0                                                    // 000000066B98: 00000000
	.long 0                                                    // 000000066B9C: 00000000
	.long 0                                                    // 000000066BA0: 00000000
	.long 0                                                    // 000000066BA4: 00000000
	.long 0                                                    // 000000066BA8: 00000000
	.long 0                                                    // 000000066BAC: 00000000
	.long 0x60af0101                                           // 000000066BB0: 60AF0101
	.long 0x1384                                               // 000000066BB4: 00001384
	.long 0x408                                                // 000000066BB8: 00000408
	.long 0                                                    // 000000066BBC: 00000000
	.type	subtract_char_x_get_global_size.kd,@object
subtract_char_x_get_global_size.kd:
	.long 0                                                    // 000000066BC0: 00000000
	.long 0                                                    // 000000066BC4: 00000000
	.long 0x110                                                // 000000066BC8: 00000110
	.long 0                                                    // 000000066BCC: 00000000
	.ascii "@"                                                 // 000000066BD0: 40
	.byte 0x8f                                                 // 000000066BD1: 8F
	.short 0x1                                                 // 000000066BD2: 0001
	.long 0                                                    // 000000066BD4: 00000000
	.long 0                                                    // 000000066BD8: 00000000
	.long 0                                                    // 000000066BDC: 00000000
	.long 0                                                    // 000000066BE0: 00000000
	.long 0                                                    // 000000066BE4: 00000000
	.long 0                                                    // 000000066BE8: 00000000
	.long 0                                                    // 000000066BEC: 00000000
	.long 0x60af0100                                           // 000000066BF0: 60AF0100
	.long 0x1384                                               // 000000066BF4: 00001384
	.long 0x408                                                // 000000066BF8: 00000408
	.long 0                                                    // 000000066BFC: 00000000
	.type	subtract_char_get_global_offset_get_global_size.kd,@object
subtract_char_get_global_offset_get_global_size.kd:
	.long 0                                                    // 000000066C00: 00000000
	.long 0                                                    // 000000066C04: 00000000
	.long 0x110                                                // 000000066C08: 00000110
	.long 0                                                    // 000000066C0C: 00000000
	.long 0x19000                                              // 000000066C10: 00019000
	.long 0                                                    // 000000066C14: 00000000
	.long 0                                                    // 000000066C18: 00000000
	.long 0                                                    // 000000066C1C: 00000000
	.long 0                                                    // 000000066C20: 00000000
	.long 0                                                    // 000000066C24: 00000000
	.long 0                                                    // 000000066C28: 00000000
	.long 0                                                    // 000000066C2C: 00000000
	.long 0x60af0100                                           // 000000066C30: 60AF0100
	.long 0x1384                                               // 000000066C34: 00001384
	.long 0x408                                                // 000000066C38: 00000408
	.long 0                                                    // 000000066C3C: 00000000
	.type	subtract_char_get_local_id_get_global_size.kd,@object
subtract_char_get_local_id_get_global_size.kd:
	.long 0                                                    // 000000066C40: 00000000
	.long 0                                                    // 000000066C44: 00000000
	.long 0x110                                                // 000000066C48: 00000110
	.long 0                                                    // 000000066C4C: 00000000
	.long 0x190c0                                              // 000000066C50: 000190C0
	.long 0                                                    // 000000066C54: 00000000
	.long 0                                                    // 000000066C58: 00000000
	.long 0                                                    // 000000066C5C: 00000000
	.long 0                                                    // 000000066C60: 00000000
	.long 0                                                    // 000000066C64: 00000000
	.long 0                                                    // 000000066C68: 00000000
	.long 0                                                    // 000000066C6C: 00000000
	.long 0x60af0100                                           // 000000066C70: 60AF0100
	.long 0x1384                                               // 000000066C74: 00001384
	.long 0x408                                                // 000000066C78: 00000408
	.long 0                                                    // 000000066C7C: 00000000
	.type	subtract_char_get_group_id_get_global_size.kd,@object
subtract_char_get_group_id_get_global_size.kd:
	.long 0                                                    // 000000066C80: 00000000
	.long 0                                                    // 000000066C84: 00000000
	.long 0x110                                                // 000000066C88: 00000110
	.long 0                                                    // 000000066C8C: 00000000
	.long 0x19180                                              // 000000066C90: 00019180
	.long 0                                                    // 000000066C94: 00000000
	.long 0                                                    // 000000066C98: 00000000
	.long 0                                                    // 000000066C9C: 00000000
	.long 0                                                    // 000000066CA0: 00000000
	.long 0                                                    // 000000066CA4: 00000000
	.long 0                                                    // 000000066CA8: 00000000
	.long 0                                                    // 000000066CAC: 00000000
	.long 0x60af0100                                           // 000000066CB0: 60AF0100
	.long 0x1384                                               // 000000066CB4: 00001384
	.long 0x408                                                // 000000066CB8: 00000408
	.long 0                                                    // 000000066CBC: 00000000
	.type	subtract_char_get_local_size_get_global_size.kd,@object
subtract_char_get_local_size_get_global_size.kd:
	.long 0                                                    // 000000066CC0: 00000000
	.long 0                                                    // 000000066CC4: 00000000
	.long 0x110                                                // 000000066CC8: 00000110
	.long 0                                                    // 000000066CCC: 00000000
	.ascii "@"                                                 // 000000066CD0: 40
	.byte 0x92                                                 // 000000066CD1: 92
	.short 0x1                                                 // 000000066CD2: 0001
	.long 0                                                    // 000000066CD4: 00000000
	.long 0                                                    // 000000066CD8: 00000000
	.long 0                                                    // 000000066CDC: 00000000
	.long 0                                                    // 000000066CE0: 00000000
	.long 0                                                    // 000000066CE4: 00000000
	.long 0                                                    // 000000066CE8: 00000000
	.long 0                                                    // 000000066CEC: 00000000
	.long 0x60af0100                                           // 000000066CF0: 60AF0100
	.long 0x1384                                               // 000000066CF4: 00001384
	.long 0x408                                                // 000000066CF8: 00000408
	.long 0                                                    // 000000066CFC: 00000000
	.type	subtract_char_get_global_id_get_global_size.kd,@object
subtract_char_get_global_id_get_global_size.kd:
	.long 0                                                    // 000000066D00: 00000000
	.long 0                                                    // 000000066D04: 00000000
	.long 0x110                                                // 000000066D08: 00000110
	.long 0                                                    // 000000066D0C: 00000000
	.long 0x19400                                              // 000000066D10: 00019400
	.long 0                                                    // 000000066D14: 00000000
	.long 0                                                    // 000000066D18: 00000000
	.long 0                                                    // 000000066D1C: 00000000
	.long 0                                                    // 000000066D20: 00000000
	.long 0                                                    // 000000066D24: 00000000
	.long 0                                                    // 000000066D28: 00000000
	.long 0                                                    // 000000066D2C: 00000000
	.long 0x60af0101                                           // 000000066D30: 60AF0101
	.long 0x1384                                               // 000000066D34: 00001384
	.long 0x408                                                // 000000066D38: 00000408
	.long 0                                                    // 000000066D3C: 00000000
	.type	subtract_char_get_global_size_get_global_size.kd,@object
subtract_char_get_global_size_get_global_size.kd:
	.long 0                                                    // 000000066D40: 00000000
	.long 0                                                    // 000000066D44: 00000000
	.long 0x110                                                // 000000066D48: 00000110
	.long 0                                                    // 000000066D4C: 00000000
	.long 0x195c0                                              // 000000066D50: 000195C0
	.long 0                                                    // 000000066D54: 00000000
	.long 0                                                    // 000000066D58: 00000000
	.long 0                                                    // 000000066D5C: 00000000
	.long 0                                                    // 000000066D60: 00000000
	.long 0                                                    // 000000066D64: 00000000
	.long 0                                                    // 000000066D68: 00000000
	.long 0                                                    // 000000066D6C: 00000000
	.long 0x60af0100                                           // 000000066D70: 60AF0100
	.long 0x1384                                               // 000000066D74: 00001384
	.long 0x408                                                // 000000066D78: 00000408
	.long 0                                                    // 000000066D7C: 00000000
	.type	subtract_char_get_num_groups_get_global_size.kd,@object
subtract_char_get_num_groups_get_global_size.kd:
	.long 0                                                    // 000000066D80: 00000000
	.long 0                                                    // 000000066D84: 00000000
	.long 0x110                                                // 000000066D88: 00000110
	.long 0                                                    // 000000066D8C: 00000000
	.long 0x19680                                              // 000000066D90: 00019680
	.long 0                                                    // 000000066D94: 00000000
	.long 0                                                    // 000000066D98: 00000000
	.long 0                                                    // 000000066D9C: 00000000
	.long 0                                                    // 000000066DA0: 00000000
	.long 0                                                    // 000000066DA4: 00000000
	.long 0                                                    // 000000066DA8: 00000000
	.long 0                                                    // 000000066DAC: 00000000
	.long 0x60af0100                                           // 000000066DB0: 60AF0100
	.long 0x1384                                               // 000000066DB4: 00001384
	.long 0x408                                                // 000000066DB8: 00000408
	.long 0                                                    // 000000066DBC: 00000000
	.type	subtract_char_get_work_dim_get_global_size.kd,@object
subtract_char_get_work_dim_get_global_size.kd:
	.long 0                                                    // 000000066DC0: 00000000
	.long 0                                                    // 000000066DC4: 00000000
	.long 0x110                                                // 000000066DC8: 00000110
	.long 0                                                    // 000000066DCC: 00000000
	.ascii "@"                                                 // 000000066DD0: 40
	.byte 0x98                                                 // 000000066DD1: 98
	.short 0x1                                                 // 000000066DD2: 0001
	.long 0                                                    // 000000066DD4: 00000000
	.long 0                                                    // 000000066DD8: 00000000
	.long 0                                                    // 000000066DDC: 00000000
	.long 0                                                    // 000000066DE0: 00000000
	.long 0                                                    // 000000066DE4: 00000000
	.long 0                                                    // 000000066DE8: 00000000
	.long 0                                                    // 000000066DEC: 00000000
	.long 0x60af0100                                           // 000000066DF0: 60AF0100
	.long 0x1384                                               // 000000066DF4: 00001384
	.long 0x408                                                // 000000066DF8: 00000408
	.long 0                                                    // 000000066DFC: 00000000
	.type	subtract_char_x_get_num_groups.kd,@object
subtract_char_x_get_num_groups.kd:
	.long 0                                                    // 000000066E00: 00000000
	.long 0                                                    // 000000066E04: 00000000
	.long 0x110                                                // 000000066E08: 00000110
	.long 0                                                    // 000000066E0C: 00000000
	.long 0x19900                                              // 000000066E10: 00019900
	.long 0                                                    // 000000066E14: 00000000
	.long 0                                                    // 000000066E18: 00000000
	.long 0                                                    // 000000066E1C: 00000000
	.long 0                                                    // 000000066E20: 00000000
	.long 0                                                    // 000000066E24: 00000000
	.long 0                                                    // 000000066E28: 00000000
	.long 0                                                    // 000000066E2C: 00000000
	.long 0x60af0100                                           // 000000066E30: 60AF0100
	.long 0x1384                                               // 000000066E34: 00001384
	.long 0x408                                                // 000000066E38: 00000408
	.long 0                                                    // 000000066E3C: 00000000
	.type	subtract_char_get_global_offset_get_num_groups.kd,@object
subtract_char_get_global_offset_get_num_groups.kd:
	.long 0                                                    // 000000066E40: 00000000
	.long 0                                                    // 000000066E44: 00000000
	.long 0x110                                                // 000000066E48: 00000110
	.long 0                                                    // 000000066E4C: 00000000
	.long 0x19ac0                                              // 000000066E50: 00019AC0
	.long 0                                                    // 000000066E54: 00000000
	.long 0                                                    // 000000066E58: 00000000
	.long 0                                                    // 000000066E5C: 00000000
	.long 0                                                    // 000000066E60: 00000000
	.long 0                                                    // 000000066E64: 00000000
	.long 0                                                    // 000000066E68: 00000000
	.long 0                                                    // 000000066E6C: 00000000
	.long 0x60af0100                                           // 000000066E70: 60AF0100
	.long 0x1384                                               // 000000066E74: 00001384
	.long 0x408                                                // 000000066E78: 00000408
	.long 0                                                    // 000000066E7C: 00000000
	.type	subtract_char_get_local_id_get_num_groups.kd,@object
subtract_char_get_local_id_get_num_groups.kd:
	.long 0                                                    // 000000066E80: 00000000
	.long 0                                                    // 000000066E84: 00000000
	.long 0x110                                                // 000000066E88: 00000110
	.long 0                                                    // 000000066E8C: 00000000
	.long 0x19b80                                              // 000000066E90: 00019B80
	.long 0                                                    // 000000066E94: 00000000
	.long 0                                                    // 000000066E98: 00000000
	.long 0                                                    // 000000066E9C: 00000000
	.long 0                                                    // 000000066EA0: 00000000
	.long 0                                                    // 000000066EA4: 00000000
	.long 0                                                    // 000000066EA8: 00000000
	.long 0                                                    // 000000066EAC: 00000000
	.long 0x60af0100                                           // 000000066EB0: 60AF0100
	.long 0x1384                                               // 000000066EB4: 00001384
	.long 0x408                                                // 000000066EB8: 00000408
	.long 0                                                    // 000000066EBC: 00000000
	.type	subtract_char_get_group_id_get_num_groups.kd,@object
subtract_char_get_group_id_get_num_groups.kd:
	.long 0                                                    // 000000066EC0: 00000000
	.long 0                                                    // 000000066EC4: 00000000
	.long 0x110                                                // 000000066EC8: 00000110
	.long 0                                                    // 000000066ECC: 00000000
	.ascii "@"                                                 // 000000066ED0: 40
	.byte 0x9c                                                 // 000000066ED1: 9C
	.short 0x1                                                 // 000000066ED2: 0001
	.long 0                                                    // 000000066ED4: 00000000
	.long 0                                                    // 000000066ED8: 00000000
	.long 0                                                    // 000000066EDC: 00000000
	.long 0                                                    // 000000066EE0: 00000000
	.long 0                                                    // 000000066EE4: 00000000
	.long 0                                                    // 000000066EE8: 00000000
	.long 0                                                    // 000000066EEC: 00000000
	.long 0x60af0100                                           // 000000066EF0: 60AF0100
	.long 0x1384                                               // 000000066EF4: 00001384
	.long 0x408                                                // 000000066EF8: 00000408
	.long 0                                                    // 000000066EFC: 00000000
	.type	subtract_char_get_local_size_get_num_groups.kd,@object
subtract_char_get_local_size_get_num_groups.kd:
	.long 0                                                    // 000000066F00: 00000000
	.long 0                                                    // 000000066F04: 00000000
	.long 0x110                                                // 000000066F08: 00000110
	.long 0                                                    // 000000066F0C: 00000000
	.long 0x19d00                                              // 000000066F10: 00019D00
	.long 0                                                    // 000000066F14: 00000000
	.long 0                                                    // 000000066F18: 00000000
	.long 0                                                    // 000000066F1C: 00000000
	.long 0                                                    // 000000066F20: 00000000
	.long 0                                                    // 000000066F24: 00000000
	.long 0                                                    // 000000066F28: 00000000
	.long 0                                                    // 000000066F2C: 00000000
	.long 0x60af0100                                           // 000000066F30: 60AF0100
	.long 0x1384                                               // 000000066F34: 00001384
	.long 0x408                                                // 000000066F38: 00000408
	.long 0                                                    // 000000066F3C: 00000000
	.type	subtract_char_get_global_id_get_num_groups.kd,@object
subtract_char_get_global_id_get_num_groups.kd:
	.long 0                                                    // 000000066F40: 00000000
	.long 0                                                    // 000000066F44: 00000000
	.long 0x110                                                // 000000066F48: 00000110
	.long 0                                                    // 000000066F4C: 00000000
	.long 0x19ec0                                              // 000000066F50: 00019EC0
	.long 0                                                    // 000000066F54: 00000000
	.long 0                                                    // 000000066F58: 00000000
	.long 0                                                    // 000000066F5C: 00000000
	.long 0                                                    // 000000066F60: 00000000
	.long 0                                                    // 000000066F64: 00000000
	.long 0                                                    // 000000066F68: 00000000
	.long 0                                                    // 000000066F6C: 00000000
	.long 0x60af0100                                           // 000000066F70: 60AF0100
	.long 0x1384                                               // 000000066F74: 00001384
	.long 0x408                                                // 000000066F78: 00000408
	.long 0                                                    // 000000066F7C: 00000000
	.type	subtract_char_get_global_size_get_num_groups.kd,@object
subtract_char_get_global_size_get_num_groups.kd:
	.long 0                                                    // 000000066F80: 00000000
	.long 0                                                    // 000000066F84: 00000000
	.long 0x110                                                // 000000066F88: 00000110
	.long 0                                                    // 000000066F8C: 00000000
	.long 0x1a080                                              // 000000066F90: 0001A080
	.long 0                                                    // 000000066F94: 00000000
	.long 0                                                    // 000000066F98: 00000000
	.long 0                                                    // 000000066F9C: 00000000
	.long 0                                                    // 000000066FA0: 00000000
	.long 0                                                    // 000000066FA4: 00000000
	.long 0                                                    // 000000066FA8: 00000000
	.long 0                                                    // 000000066FAC: 00000000
	.long 0x60af0100                                           // 000000066FB0: 60AF0100
	.long 0x1384                                               // 000000066FB4: 00001384
	.long 0x408                                                // 000000066FB8: 00000408
	.long 0                                                    // 000000066FBC: 00000000
	.type	subtract_char_get_num_groups_get_num_groups.kd,@object
subtract_char_get_num_groups_get_num_groups.kd:
	.long 0                                                    // 000000066FC0: 00000000
	.long 0                                                    // 000000066FC4: 00000000
	.long 0x110                                                // 000000066FC8: 00000110
	.long 0                                                    // 000000066FCC: 00000000
	.ascii "@"                                                 // 000000066FD0: 40
	.byte 0xa2                                                 // 000000066FD1: A2
	.short 0x1                                                 // 000000066FD2: 0001
	.long 0                                                    // 000000066FD4: 00000000
	.long 0                                                    // 000000066FD8: 00000000
	.long 0                                                    // 000000066FDC: 00000000
	.long 0                                                    // 000000066FE0: 00000000
	.long 0                                                    // 000000066FE4: 00000000
	.long 0                                                    // 000000066FE8: 00000000
	.long 0                                                    // 000000066FEC: 00000000
	.long 0x60af0100                                           // 000000066FF0: 60AF0100
	.long 0x1384                                               // 000000066FF4: 00001384
	.long 0x408                                                // 000000066FF8: 00000408
	.long 0                                                    // 000000066FFC: 00000000
	.type	subtract_char_get_work_dim_get_num_groups.kd,@object
subtract_char_get_work_dim_get_num_groups.kd:
	.long 0                                                    // 000000067000: 00000000
	.long 0                                                    // 000000067004: 00000000
	.long 0x110                                                // 000000067008: 00000110
	.long 0                                                    // 00000006700C: 00000000
	.long 0x1a300                                              // 000000067010: 0001A300
	.long 0                                                    // 000000067014: 00000000
	.long 0                                                    // 000000067018: 00000000
	.long 0                                                    // 00000006701C: 00000000
	.long 0                                                    // 000000067020: 00000000
	.long 0                                                    // 000000067024: 00000000
	.long 0                                                    // 000000067028: 00000000
	.long 0                                                    // 00000006702C: 00000000
	.long 0x60af0100                                           // 000000067030: 60AF0100
	.long 0x1384                                               // 000000067034: 00001384
	.long 0x408                                                // 000000067038: 00000408
	.long 0                                                    // 00000006703C: 00000000
	.type	subtract_char_x_get_work_dim.kd,@object
subtract_char_x_get_work_dim.kd:
	.long 0                                                    // 000000067040: 00000000
	.long 0                                                    // 000000067044: 00000000
	.long 0x110                                                // 000000067048: 00000110
	.long 0                                                    // 00000006704C: 00000000
	.long 0x1a4c0                                              // 000000067050: 0001A4C0
	.long 0                                                    // 000000067054: 00000000
	.long 0                                                    // 000000067058: 00000000
	.long 0                                                    // 00000006705C: 00000000
	.long 0                                                    // 000000067060: 00000000
	.long 0                                                    // 000000067064: 00000000
	.long 0                                                    // 000000067068: 00000000
	.long 0                                                    // 00000006706C: 00000000
	.long 0x60af0100                                           // 000000067070: 60AF0100
	.long 0x1384                                               // 000000067074: 00001384
	.long 0x408                                                // 000000067078: 00000408
	.long 0                                                    // 00000006707C: 00000000
	.type	subtract_char_get_global_offset_get_work_dim.kd,@object
subtract_char_get_global_offset_get_work_dim.kd:
	.long 0                                                    // 000000067080: 00000000
	.long 0                                                    // 000000067084: 00000000
	.long 0x110                                                // 000000067088: 00000110
	.long 0                                                    // 00000006708C: 00000000
	.long 0x1a580                                              // 000000067090: 0001A580
	.long 0                                                    // 000000067094: 00000000
	.long 0                                                    // 000000067098: 00000000
	.long 0                                                    // 00000006709C: 00000000
	.long 0                                                    // 0000000670A0: 00000000
	.long 0                                                    // 0000000670A4: 00000000
	.long 0                                                    // 0000000670A8: 00000000
	.long 0                                                    // 0000000670AC: 00000000
	.long 0x60af0100                                           // 0000000670B0: 60AF0100
	.long 0x1384                                               // 0000000670B4: 00001384
	.long 0x408                                                // 0000000670B8: 00000408
	.long 0                                                    // 0000000670BC: 00000000
	.type	subtract_char_get_local_id_get_work_dim.kd,@object
subtract_char_get_local_id_get_work_dim.kd:
	.long 0                                                    // 0000000670C0: 00000000
	.long 0                                                    // 0000000670C4: 00000000
	.long 0x110                                                // 0000000670C8: 00000110
	.long 0                                                    // 0000000670CC: 00000000
	.ascii "@"                                                 // 0000000670D0: 40
	.byte 0xa6                                                 // 0000000670D1: A6
	.short 0x1                                                 // 0000000670D2: 0001
	.long 0                                                    // 0000000670D4: 00000000
	.long 0                                                    // 0000000670D8: 00000000
	.long 0                                                    // 0000000670DC: 00000000
	.long 0                                                    // 0000000670E0: 00000000
	.long 0                                                    // 0000000670E4: 00000000
	.long 0                                                    // 0000000670E8: 00000000
	.long 0                                                    // 0000000670EC: 00000000
	.long 0x60af0100                                           // 0000000670F0: 60AF0100
	.long 0x1384                                               // 0000000670F4: 00001384
	.long 0x408                                                // 0000000670F8: 00000408
	.long 0                                                    // 0000000670FC: 00000000
	.type	subtract_char_get_group_id_get_work_dim.kd,@object
subtract_char_get_group_id_get_work_dim.kd:
	.long 0                                                    // 000000067100: 00000000
	.long 0                                                    // 000000067104: 00000000
	.long 0x110                                                // 000000067108: 00000110
	.long 0                                                    // 00000006710C: 00000000
	.long 0x1a700                                              // 000000067110: 0001A700
	.long 0                                                    // 000000067114: 00000000
	.long 0                                                    // 000000067118: 00000000
	.long 0                                                    // 00000006711C: 00000000
	.long 0                                                    // 000000067120: 00000000
	.long 0                                                    // 000000067124: 00000000
	.long 0                                                    // 000000067128: 00000000
	.long 0                                                    // 00000006712C: 00000000
	.long 0x60af0100                                           // 000000067130: 60AF0100
	.long 0x1384                                               // 000000067134: 00001384
	.long 0x408                                                // 000000067138: 00000408
	.long 0                                                    // 00000006713C: 00000000
	.type	subtract_char_get_local_size_get_work_dim.kd,@object
subtract_char_get_local_size_get_work_dim.kd:
	.long 0                                                    // 000000067140: 00000000
	.long 0                                                    // 000000067144: 00000000
	.long 0x110                                                // 000000067148: 00000110
	.long 0                                                    // 00000006714C: 00000000
	.long 0x1a7c0                                              // 000000067150: 0001A7C0
	.long 0                                                    // 000000067154: 00000000
	.long 0                                                    // 000000067158: 00000000
	.long 0                                                    // 00000006715C: 00000000
	.long 0                                                    // 000000067160: 00000000
	.long 0                                                    // 000000067164: 00000000
	.long 0                                                    // 000000067168: 00000000
	.long 0                                                    // 00000006716C: 00000000
	.long 0x60af0100                                           // 000000067170: 60AF0100
	.long 0x1384                                               // 000000067174: 00001384
	.long 0x408                                                // 000000067178: 00000408
	.long 0                                                    // 00000006717C: 00000000
	.type	subtract_char_get_global_id_get_work_dim.kd,@object
subtract_char_get_global_id_get_work_dim.kd:
	.long 0                                                    // 000000067180: 00000000
	.long 0                                                    // 000000067184: 00000000
	.long 0x110                                                // 000000067188: 00000110
	.long 0                                                    // 00000006718C: 00000000
	.long 0x1a980                                              // 000000067190: 0001A980
	.long 0                                                    // 000000067194: 00000000
	.long 0                                                    // 000000067198: 00000000
	.long 0                                                    // 00000006719C: 00000000
	.long 0                                                    // 0000000671A0: 00000000
	.long 0                                                    // 0000000671A4: 00000000
	.long 0                                                    // 0000000671A8: 00000000
	.long 0                                                    // 0000000671AC: 00000000
	.long 0x60af0100                                           // 0000000671B0: 60AF0100
	.long 0x1384                                               // 0000000671B4: 00001384
	.long 0x408                                                // 0000000671B8: 00000408
	.long 0                                                    // 0000000671BC: 00000000
	.type	subtract_char_get_global_size_get_work_dim.kd,@object
subtract_char_get_global_size_get_work_dim.kd:
	.long 0                                                    // 0000000671C0: 00000000
	.long 0                                                    // 0000000671C4: 00000000
	.long 0x110                                                // 0000000671C8: 00000110
	.long 0                                                    // 0000000671CC: 00000000
	.ascii "@"                                                 // 0000000671D0: 40
	.byte 0xaa                                                 // 0000000671D1: AA
	.short 0x1                                                 // 0000000671D2: 0001
	.long 0                                                    // 0000000671D4: 00000000
	.long 0                                                    // 0000000671D8: 00000000
	.long 0                                                    // 0000000671DC: 00000000
	.long 0                                                    // 0000000671E0: 00000000
	.long 0                                                    // 0000000671E4: 00000000
	.long 0                                                    // 0000000671E8: 00000000
	.long 0                                                    // 0000000671EC: 00000000
	.long 0x60af0100                                           // 0000000671F0: 60AF0100
	.long 0x1384                                               // 0000000671F4: 00001384
	.long 0x408                                                // 0000000671F8: 00000408
	.long 0                                                    // 0000000671FC: 00000000
	.type	subtract_char_get_num_groups_get_work_dim.kd,@object
subtract_char_get_num_groups_get_work_dim.kd:
	.long 0                                                    // 000000067200: 00000000
	.long 0                                                    // 000000067204: 00000000
	.long 0x110                                                // 000000067208: 00000110
	.long 0                                                    // 00000006720C: 00000000
	.long 0x1ab00                                              // 000000067210: 0001AB00
	.long 0                                                    // 000000067214: 00000000
	.long 0                                                    // 000000067218: 00000000
	.long 0                                                    // 00000006721C: 00000000
	.long 0                                                    // 000000067220: 00000000
	.long 0                                                    // 000000067224: 00000000
	.long 0                                                    // 000000067228: 00000000
	.long 0                                                    // 00000006722C: 00000000
	.long 0x60af0100                                           // 000000067230: 60AF0100
	.long 0x1384                                               // 000000067234: 00001384
	.long 0x408                                                // 000000067238: 00000408
	.long 0                                                    // 00000006723C: 00000000
	.type	subtract_char_get_work_dim_get_work_dim.kd,@object
subtract_char_get_work_dim_get_work_dim.kd:
	.long 0                                                    // 000000067240: 00000000
	.long 0                                                    // 000000067244: 00000000
	.long 0x110                                                // 000000067248: 00000110
	.long 0                                                    // 00000006724C: 00000000
	.long 0x1acc0                                              // 000000067250: 0001ACC0
	.long 0                                                    // 000000067254: 00000000
	.long 0                                                    // 000000067258: 00000000
	.long 0                                                    // 00000006725C: 00000000
	.long 0                                                    // 000000067260: 00000000
	.long 0                                                    // 000000067264: 00000000
	.long 0                                                    // 000000067268: 00000000
	.long 0                                                    // 00000006726C: 00000000
	.long 0x60af0100                                           // 000000067270: 60AF0100
	.long 0x1384                                               // 000000067274: 00001384
	.long 0x408                                                // 000000067278: 00000408
	.long 0                                                    // 00000006727C: 00000000
	.type	subtract_char_x_64.kd,@object
subtract_char_x_64.kd:
	.long 0                                                    // 000000067280: 00000000
	.long 0                                                    // 000000067284: 00000000
	.long 0x110                                                // 000000067288: 00000110
	.long 0                                                    // 00000006728C: 00000000
	.long 0x1ad80                                              // 000000067290: 0001AD80
	.long 0                                                    // 000000067294: 00000000
	.long 0                                                    // 000000067298: 00000000
	.long 0                                                    // 00000006729C: 00000000
	.long 0                                                    // 0000000672A0: 00000000
	.long 0                                                    // 0000000672A4: 00000000
	.long 0                                                    // 0000000672A8: 00000000
	.long 0                                                    // 0000000672AC: 00000000
	.long 0x60af0100                                           // 0000000672B0: 60AF0100
	.long 0x84                                                 // 0000000672B4: 00000084
	.long 0x408                                                // 0000000672B8: 00000408
	.long 0                                                    // 0000000672BC: 00000000
	.type	subtract_char_get_global_offset_64.kd,@object
subtract_char_get_global_offset_64.kd:
	.long 0                                                    // 0000000672C0: 00000000
	.long 0                                                    // 0000000672C4: 00000000
	.long 0x110                                                // 0000000672C8: 00000110
	.long 0                                                    // 0000000672CC: 00000000
	.ascii "@"                                                 // 0000000672D0: 40
	.byte 0xae                                                 // 0000000672D1: AE
	.short 0x1                                                 // 0000000672D2: 0001
	.long 0                                                    // 0000000672D4: 00000000
	.long 0                                                    // 0000000672D8: 00000000
	.long 0                                                    // 0000000672DC: 00000000
	.long 0                                                    // 0000000672E0: 00000000
	.long 0                                                    // 0000000672E4: 00000000
	.long 0                                                    // 0000000672E8: 00000000
	.long 0                                                    // 0000000672EC: 00000000
	.long 0x60af0100                                           // 0000000672F0: 60AF0100
	.long 0x84                                                 // 0000000672F4: 00000084
	.long 0x408                                                // 0000000672F8: 00000408
	.long 0                                                    // 0000000672FC: 00000000
	.type	subtract_char_get_local_id_64.kd,@object
subtract_char_get_local_id_64.kd:
	.long 0                                                    // 000000067300: 00000000
	.long 0                                                    // 000000067304: 00000000
	.long 0x110                                                // 000000067308: 00000110
	.long 0                                                    // 00000006730C: 00000000
	.long 0x1af00                                              // 000000067310: 0001AF00
	.long 0                                                    // 000000067314: 00000000
	.long 0                                                    // 000000067318: 00000000
	.long 0                                                    // 00000006731C: 00000000
	.long 0                                                    // 000000067320: 00000000
	.long 0                                                    // 000000067324: 00000000
	.long 0                                                    // 000000067328: 00000000
	.long 0                                                    // 00000006732C: 00000000
	.long 0x60af0100                                           // 000000067330: 60AF0100
	.long 0x84                                                 // 000000067334: 00000084
	.long 0x408                                                // 000000067338: 00000408
	.long 0                                                    // 00000006733C: 00000000
	.type	subtract_char_get_group_id_64.kd,@object
subtract_char_get_group_id_64.kd:
	.long 0                                                    // 000000067340: 00000000
	.long 0                                                    // 000000067344: 00000000
	.long 0x110                                                // 000000067348: 00000110
	.long 0                                                    // 00000006734C: 00000000
	.long 0x1afc0                                              // 000000067350: 0001AFC0
	.long 0                                                    // 000000067354: 00000000
	.long 0                                                    // 000000067358: 00000000
	.long 0                                                    // 00000006735C: 00000000
	.long 0                                                    // 000000067360: 00000000
	.long 0                                                    // 000000067364: 00000000
	.long 0                                                    // 000000067368: 00000000
	.long 0                                                    // 00000006736C: 00000000
	.long 0x60af0100                                           // 000000067370: 60AF0100
	.long 0x84                                                 // 000000067374: 00000084
	.long 0x408                                                // 000000067378: 00000408
	.long 0                                                    // 00000006737C: 00000000
	.type	subtract_char_get_local_size_64.kd,@object
subtract_char_get_local_size_64.kd:
	.long 0                                                    // 000000067380: 00000000
	.long 0                                                    // 000000067384: 00000000
	.long 0x110                                                // 000000067388: 00000110
	.long 0                                                    // 00000006738C: 00000000
	.long 0x1b080                                              // 000000067390: 0001B080
	.long 0                                                    // 000000067394: 00000000
	.long 0                                                    // 000000067398: 00000000
	.long 0                                                    // 00000006739C: 00000000
	.long 0                                                    // 0000000673A0: 00000000
	.long 0                                                    // 0000000673A4: 00000000
	.long 0                                                    // 0000000673A8: 00000000
	.long 0                                                    // 0000000673AC: 00000000
	.long 0x60af0100                                           // 0000000673B0: 60AF0100
	.long 0x84                                                 // 0000000673B4: 00000084
	.long 0x408                                                // 0000000673B8: 00000408
	.long 0                                                    // 0000000673BC: 00000000
	.type	subtract_char_get_global_id_64.kd,@object
subtract_char_get_global_id_64.kd:
	.long 0                                                    // 0000000673C0: 00000000
	.long 0                                                    // 0000000673C4: 00000000
	.long 0x110                                                // 0000000673C8: 00000110
	.long 0                                                    // 0000000673CC: 00000000
	.ascii "@"                                                 // 0000000673D0: 40
	.byte 0xb1                                                 // 0000000673D1: B1
	.short 0x1                                                 // 0000000673D2: 0001
	.long 0                                                    // 0000000673D4: 00000000
	.long 0                                                    // 0000000673D8: 00000000
	.long 0                                                    // 0000000673DC: 00000000
	.long 0                                                    // 0000000673E0: 00000000
	.long 0                                                    // 0000000673E4: 00000000
	.long 0                                                    // 0000000673E8: 00000000
	.long 0                                                    // 0000000673EC: 00000000
	.long 0x60af0100                                           // 0000000673F0: 60AF0100
	.long 0x84                                                 // 0000000673F4: 00000084
	.long 0x408                                                // 0000000673F8: 00000408
	.long 0                                                    // 0000000673FC: 00000000
	.type	subtract_char_get_global_size_64.kd,@object
subtract_char_get_global_size_64.kd:
	.long 0                                                    // 000000067400: 00000000
	.long 0                                                    // 000000067404: 00000000
	.long 0x110                                                // 000000067408: 00000110
	.long 0                                                    // 00000006740C: 00000000
	.long 0x1b200                                              // 000000067410: 0001B200
	.long 0                                                    // 000000067414: 00000000
	.long 0                                                    // 000000067418: 00000000
	.long 0                                                    // 00000006741C: 00000000
	.long 0                                                    // 000000067420: 00000000
	.long 0                                                    // 000000067424: 00000000
	.long 0                                                    // 000000067428: 00000000
	.long 0                                                    // 00000006742C: 00000000
	.long 0x60af0100                                           // 000000067430: 60AF0100
	.long 0x84                                                 // 000000067434: 00000084
	.long 0x408                                                // 000000067438: 00000408
	.long 0                                                    // 00000006743C: 00000000
	.type	subtract_char_get_num_groups_64.kd,@object
subtract_char_get_num_groups_64.kd:
	.long 0                                                    // 000000067440: 00000000
	.long 0                                                    // 000000067444: 00000000
	.long 0x110                                                // 000000067448: 00000110
	.long 0                                                    // 00000006744C: 00000000
	.long 0x1b2c0                                              // 000000067450: 0001B2C0
	.long 0                                                    // 000000067454: 00000000
	.long 0                                                    // 000000067458: 00000000
	.long 0                                                    // 00000006745C: 00000000
	.long 0                                                    // 000000067460: 00000000
	.long 0                                                    // 000000067464: 00000000
	.long 0                                                    // 000000067468: 00000000
	.long 0                                                    // 00000006746C: 00000000
	.long 0x60af0100                                           // 000000067470: 60AF0100
	.long 0x84                                                 // 000000067474: 00000084
	.long 0x408                                                // 000000067478: 00000408
	.long 0                                                    // 00000006747C: 00000000
	.type	subtract_char_get_work_dim.kd,@object
subtract_char_get_work_dim.kd:
	.long 0                                                    // 000000067480: 00000000
	.long 0                                                    // 000000067484: 00000000
	.long 0x110                                                // 000000067488: 00000110
	.long 0                                                    // 00000006748C: 00000000
	.long 0x1b380                                              // 000000067490: 0001B380
	.long 0                                                    // 000000067494: 00000000
	.long 0                                                    // 000000067498: 00000000
	.long 0                                                    // 00000006749C: 00000000
	.long 0                                                    // 0000000674A0: 00000000
	.long 0                                                    // 0000000674A4: 00000000
	.long 0                                                    // 0000000674A8: 00000000
	.long 0                                                    // 0000000674AC: 00000000
	.long 0x60af0100                                           // 0000000674B0: 60AF0100
	.long 0x84                                                 // 0000000674B4: 00000084
	.long 0x408                                                // 0000000674B8: 00000408
	.long 0                                                    // 0000000674BC: 00000000
	.type	subtract_char_x_8_8.kd,@object
subtract_char_x_8_8.kd:
	.long 0                                                    // 0000000674C0: 00000000
	.long 0                                                    // 0000000674C4: 00000000
	.long 0x110                                                // 0000000674C8: 00000110
	.long 0                                                    // 0000000674CC: 00000000
	.ascii "@"                                                 // 0000000674D0: 40
	.byte 0xb4                                                 // 0000000674D1: B4
	.short 0x1                                                 // 0000000674D2: 0001
	.long 0                                                    // 0000000674D4: 00000000
	.long 0                                                    // 0000000674D8: 00000000
	.long 0                                                    // 0000000674DC: 00000000
	.long 0                                                    // 0000000674E0: 00000000
	.long 0                                                    // 0000000674E4: 00000000
	.long 0                                                    // 0000000674E8: 00000000
	.long 0                                                    // 0000000674EC: 00000000
	.long 0x60af0100                                           // 0000000674F0: 60AF0100
	.long 0x984                                                // 0000000674F4: 00000984
	.long 0x408                                                // 0000000674F8: 00000408
	.long 0                                                    // 0000000674FC: 00000000
	.type	subtract_char_get_global_offset_8_8.kd,@object
subtract_char_get_global_offset_8_8.kd:
	.long 0                                                    // 000000067500: 00000000
	.long 0                                                    // 000000067504: 00000000
	.long 0x110                                                // 000000067508: 00000110
	.long 0                                                    // 00000006750C: 00000000
	.long 0x1b500                                              // 000000067510: 0001B500
	.long 0                                                    // 000000067514: 00000000
	.long 0                                                    // 000000067518: 00000000
	.long 0                                                    // 00000006751C: 00000000
	.long 0                                                    // 000000067520: 00000000
	.long 0                                                    // 000000067524: 00000000
	.long 0                                                    // 000000067528: 00000000
	.long 0                                                    // 00000006752C: 00000000
	.long 0x60af0100                                           // 000000067530: 60AF0100
	.long 0x84                                                 // 000000067534: 00000084
	.long 0x408                                                // 000000067538: 00000408
	.long 0                                                    // 00000006753C: 00000000
	.type	subtract_char_get_local_id_8_8.kd,@object
subtract_char_get_local_id_8_8.kd:
	.long 0                                                    // 000000067540: 00000000
	.long 0                                                    // 000000067544: 00000000
	.long 0x110                                                // 000000067548: 00000110
	.long 0                                                    // 00000006754C: 00000000
	.long 0x1b5c0                                              // 000000067550: 0001B5C0
	.long 0                                                    // 000000067554: 00000000
	.long 0                                                    // 000000067558: 00000000
	.long 0                                                    // 00000006755C: 00000000
	.long 0                                                    // 000000067560: 00000000
	.long 0                                                    // 000000067564: 00000000
	.long 0                                                    // 000000067568: 00000000
	.long 0                                                    // 00000006756C: 00000000
	.long 0x60af0100                                           // 000000067570: 60AF0100
	.long 0x884                                                // 000000067574: 00000884
	.long 0x408                                                // 000000067578: 00000408
	.long 0                                                    // 00000006757C: 00000000
	.type	subtract_char_get_group_id_8_8.kd,@object
subtract_char_get_group_id_8_8.kd:
	.long 0                                                    // 000000067580: 00000000
	.long 0                                                    // 000000067584: 00000000
	.long 0x110                                                // 000000067588: 00000110
	.long 0                                                    // 00000006758C: 00000000
	.long 0x1b680                                              // 000000067590: 0001B680
	.long 0                                                    // 000000067594: 00000000
	.long 0                                                    // 000000067598: 00000000
	.long 0                                                    // 00000006759C: 00000000
	.long 0                                                    // 0000000675A0: 00000000
	.long 0                                                    // 0000000675A4: 00000000
	.long 0                                                    // 0000000675A8: 00000000
	.long 0                                                    // 0000000675AC: 00000000
	.long 0x60af0100                                           // 0000000675B0: 60AF0100
	.long 0x184                                                // 0000000675B4: 00000184
	.long 0x408                                                // 0000000675B8: 00000408
	.long 0                                                    // 0000000675BC: 00000000
	.type	subtract_char_get_local_size_8_8.kd,@object
subtract_char_get_local_size_8_8.kd:
	.long 0                                                    // 0000000675C0: 00000000
	.long 0                                                    // 0000000675C4: 00000000
	.long 0x110                                                // 0000000675C8: 00000110
	.long 0                                                    // 0000000675CC: 00000000
	.ascii "@"                                                 // 0000000675D0: 40
	.byte 0xb7                                                 // 0000000675D1: B7
	.short 0x1                                                 // 0000000675D2: 0001
	.long 0                                                    // 0000000675D4: 00000000
	.long 0                                                    // 0000000675D8: 00000000
	.long 0                                                    // 0000000675DC: 00000000
	.long 0                                                    // 0000000675E0: 00000000
	.long 0                                                    // 0000000675E4: 00000000
	.long 0                                                    // 0000000675E8: 00000000
	.long 0                                                    // 0000000675EC: 00000000
	.long 0x60af0100                                           // 0000000675F0: 60AF0100
	.long 0x184                                                // 0000000675F4: 00000184
	.long 0x408                                                // 0000000675F8: 00000408
	.long 0                                                    // 0000000675FC: 00000000
	.type	subtract_char_get_global_id_8_8.kd,@object
subtract_char_get_global_id_8_8.kd:
	.long 0                                                    // 000000067600: 00000000
	.long 0                                                    // 000000067604: 00000000
	.long 0x110                                                // 000000067608: 00000110
	.long 0                                                    // 00000006760C: 00000000
	.long 0x1b800                                              // 000000067610: 0001B800
	.long 0                                                    // 000000067614: 00000000
	.long 0                                                    // 000000067618: 00000000
	.long 0                                                    // 00000006761C: 00000000
	.long 0                                                    // 000000067620: 00000000
	.long 0                                                    // 000000067624: 00000000
	.long 0                                                    // 000000067628: 00000000
	.long 0                                                    // 00000006762C: 00000000
	.long 0x60af0100                                           // 000000067630: 60AF0100
	.long 0x984                                                // 000000067634: 00000984
	.long 0x408                                                // 000000067638: 00000408
	.long 0                                                    // 00000006763C: 00000000
	.type	subtract_char_get_global_size_8_8.kd,@object
subtract_char_get_global_size_8_8.kd:
	.long 0                                                    // 000000067640: 00000000
	.long 0                                                    // 000000067644: 00000000
	.long 0x110                                                // 000000067648: 00000110
	.long 0                                                    // 00000006764C: 00000000
	.long 0x1b8c0                                              // 000000067650: 0001B8C0
	.long 0                                                    // 000000067654: 00000000
	.long 0                                                    // 000000067658: 00000000
	.long 0                                                    // 00000006765C: 00000000
	.long 0                                                    // 000000067660: 00000000
	.long 0                                                    // 000000067664: 00000000
	.long 0                                                    // 000000067668: 00000000
	.long 0                                                    // 00000006766C: 00000000
	.long 0x60af0100                                           // 000000067670: 60AF0100
	.long 0x84                                                 // 000000067674: 00000084
	.long 0x408                                                // 000000067678: 00000408
	.long 0                                                    // 00000006767C: 00000000
	.type	subtract_char_get_num_groups_8_8.kd,@object
subtract_char_get_num_groups_8_8.kd:
	.long 0                                                    // 000000067680: 00000000
	.long 0                                                    // 000000067684: 00000000
	.long 0x110                                                // 000000067688: 00000110
	.long 0                                                    // 00000006768C: 00000000
	.long 0x1b980                                              // 000000067690: 0001B980
	.long 0                                                    // 000000067694: 00000000
	.long 0                                                    // 000000067698: 00000000
	.long 0                                                    // 00000006769C: 00000000
	.long 0                                                    // 0000000676A0: 00000000
	.long 0                                                    // 0000000676A4: 00000000
	.long 0                                                    // 0000000676A8: 00000000
	.long 0                                                    // 0000000676AC: 00000000
	.long 0x60af0100                                           // 0000000676B0: 60AF0100
	.long 0x84                                                 // 0000000676B4: 00000084
	.long 0x408                                                // 0000000676B8: 00000408
	.long 0                                                    // 0000000676BC: 00000000
	.type	subtract_char_get_work_dim_8_8.kd,@object
subtract_char_get_work_dim_8_8.kd:
	.long 0                                                    // 0000000676C0: 00000000
	.long 0                                                    // 0000000676C4: 00000000
	.long 0x110                                                // 0000000676C8: 00000110
	.long 0                                                    // 0000000676CC: 00000000
	.ascii "@"                                                 // 0000000676D0: 40
	.byte 0xba                                                 // 0000000676D1: BA
	.short 0x1                                                 // 0000000676D2: 0001
	.long 0                                                    // 0000000676D4: 00000000
	.long 0                                                    // 0000000676D8: 00000000
	.long 0                                                    // 0000000676DC: 00000000
	.long 0                                                    // 0000000676E0: 00000000
	.long 0                                                    // 0000000676E4: 00000000
	.long 0                                                    // 0000000676E8: 00000000
	.long 0                                                    // 0000000676EC: 00000000
	.long 0x60af0100                                           // 0000000676F0: 60AF0100
	.long 0x984                                                // 0000000676F4: 00000984
	.long 0x408                                                // 0000000676F8: 00000408
	.long 0                                                    // 0000000676FC: 00000000

	.text

	.p2align	8
	.type	subtract_x_x,@function
	.size	subtract_x_x, subtract_x_x_symend-subtract_x_x
subtract_x_x:
	s_clause 0x1                                               // 000000068700: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000068704: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 00000006870C: F4040000 F8000000
	s_lshl_b32 s2, s2, 6                                       // 000000068714: 84028602
	v_mov_b32_e32 v1, 0                                        // 000000068718: 7E020280
	s_mov_b32 s33, 0                                           // 00000006871C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000068720: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 000000068724: D6550000 04000403
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006872C: BF870091
	v_lshlrev_b64 v[2:3], 2, v[0:1]                            // 000000068730: D73C0002 00020082
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000068738: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 000000068740: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000068744: 40060601
	global_store_b32 v[2:3], v1, off                           // 000000068748: DC6A0000 007C0102
	s_nop 0                                                    // 000000068750: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068754: BFB60003
	s_endpgm                                                   // 000000068758: BFB00000
subtract_x_x_symend:
	.long 0xbf800000                                           // 00000006875C: BF800000
	.long 0xbf800000                                           // 000000068760: BF800000
	.long 0xbf800000                                           // 000000068764: BF800000
	.long 0xbf800000                                           // 000000068768: BF800000
	.long 0xbf800000                                           // 00000006876C: BF800000
	.long 0xbf800000                                           // 000000068770: BF800000
	.long 0xbf800000                                           // 000000068774: BF800000
	.long 0xbf800000                                           // 000000068778: BF800000
	.long 0xbf800000                                           // 00000006877C: BF800000
	.long 0xbf800000                                           // 000000068780: BF800000
	.long 0xbf800000                                           // 000000068784: BF800000
	.long 0xbf800000                                           // 000000068788: BF800000
	.long 0xbf800000                                           // 00000006878C: BF800000
	.long 0xbf800000                                           // 000000068790: BF800000
	.long 0xbf800000                                           // 000000068794: BF800000
	.long 0xbf800000                                           // 000000068798: BF800000
	.long 0xbf800000                                           // 00000006879C: BF800000
	.long 0xbf800000                                           // 0000000687A0: BF800000
	.long 0xbf800000                                           // 0000000687A4: BF800000
	.long 0xbf800000                                           // 0000000687A8: BF800000
	.long 0xbf800000                                           // 0000000687AC: BF800000
	.long 0xbf800000                                           // 0000000687B0: BF800000
	.long 0xbf800000                                           // 0000000687B4: BF800000
	.long 0xbf800000                                           // 0000000687B8: BF800000
	.long 0xbf800000                                           // 0000000687BC: BF800000
	.long 0xbf800000                                           // 0000000687C0: BF800000
	.long 0xbf800000                                           // 0000000687C4: BF800000
	.long 0xbf800000                                           // 0000000687C8: BF800000
	.long 0xbf800000                                           // 0000000687CC: BF800000
	.long 0xbf800000                                           // 0000000687D0: BF800000
	.long 0xbf800000                                           // 0000000687D4: BF800000
	.long 0xbf800000                                           // 0000000687D8: BF800000
	.long 0xbf800000                                           // 0000000687DC: BF800000
	.long 0xbf800000                                           // 0000000687E0: BF800000
	.long 0xbf800000                                           // 0000000687E4: BF800000
	.long 0xbf800000                                           // 0000000687E8: BF800000
	.long 0xbf800000                                           // 0000000687EC: BF800000
	.long 0xbf800000                                           // 0000000687F0: BF800000
	.long 0xbf800000                                           // 0000000687F4: BF800000
	.long 0xbf800000                                           // 0000000687F8: BF800000
	.long 0xbf800000                                           // 0000000687FC: BF800000

	.p2align	8
	.type	subtract_get_global_offset_x,@function
	.size	subtract_get_global_offset_x, subtract_get_global_offset_x_symend-subtract_get_global_offset_x
subtract_get_global_offset_x:
	s_clause 0x3                                               // 000000068800: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068804: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000006880C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 000000068814: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006881C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000068824: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000068830: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000068834: D6100005 02291500
	s_lshl_b32 s3, s3, 4                                       // 00000006883C: 84038403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068840: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000068848: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006884C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000068850: D6550001 04040408
	s_lshl_b32 s2, s4, 1                                       // 000000068858: 84028104
	s_sub_i32 s4, s8, s5                                       // 00000006885C: 81840508
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000068860: BF870151
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068864: D73C0003 00020282
	v_add3_u32 v1, s10, s3, v5                                 // 00000006886C: D6550001 0414060A
	s_sub_i32 s3, s10, s5                                      // 000000068874: 8183050A
	s_sub_i32 s5, s6, s5                                       // 000000068878: 81850506
	v_dual_mov_b32 v7, s4 :: v_dual_mov_b32 v8, s3             // 00000006887C: CA100004 07080003
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068884: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 00000006888C: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000068894: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006889C: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 0000000688A0: BF870243
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000688A4: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000688AC: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000688B4: 400C0C01
	v_mov_b32_e32 v2, s5                                       // 0000000688B8: 7E040205
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000688BC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000688C4: 40020201
	s_clause 0x2                                               // 0000000688C8: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000688CC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000688D4: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 0000000688DC: DC6A0000 007C0200
	s_nop 0                                                    // 0000000688E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000688E8: BFB60003
	s_endpgm                                                   // 0000000688EC: BFB00000
subtract_get_global_offset_x_symend:
	.long 0xbf800000                                           // 0000000688F0: BF800000
	.long 0xbf800000                                           // 0000000688F4: BF800000
	.long 0xbf800000                                           // 0000000688F8: BF800000
	.long 0xbf800000                                           // 0000000688FC: BF800000

	.p2align	8
	.type	subtract_get_local_id_x,@function
	.size	subtract_get_local_id_x, subtract_get_local_id_x_symend-subtract_get_local_id_x
subtract_get_local_id_x:
	s_clause 0x3                                               // 000000068900: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068904: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000006890C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 000000068914: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006891C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 000000068924: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000068930: 84028302
	v_bfe_u32 v6, v0, 10, 10                                   // 000000068934: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006893C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000068944: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000068948: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000006894C: D6550001 04140408
	s_lshl_b32 s2, s3, 2                                       // 000000068954: 84028203
	v_subrev_nc_u32_e32 v7, s5, v5                             // 000000068958: 4E0E0A05
	v_subrev_nc_u32_e32 v8, s5, v6                             // 00000006895C: 4E100C05
	v_subrev_nc_u32_e32 v9, s5, v0                             // 000000068960: 4E120005
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068964: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 00000006896C: D6550001 0418040A
	s_lshl_b32 s2, s4, 1                                       // 000000068974: 84028104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000068978: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006897C: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 000000068984: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006898C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000068994: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000068998: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006899C: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000689A4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000689AC: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000689B0: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000689B8: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000689BC: 40020201
	s_clause 0x2                                               // 0000000689C0: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000689C4: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000689CC: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 0000000689D4: DC6A0000 007C0900
	s_nop 0                                                    // 0000000689DC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000689E0: BFB60003
	s_endpgm                                                   // 0000000689E4: BFB00000
subtract_get_local_id_x_symend:
	.long 0xbf800000                                           // 0000000689E8: BF800000
	.long 0xbf800000                                           // 0000000689EC: BF800000
	.long 0xbf800000                                           // 0000000689F0: BF800000
	.long 0xbf800000                                           // 0000000689F4: BF800000
	.long 0xbf800000                                           // 0000000689F8: BF800000
	.long 0xbf800000                                           // 0000000689FC: BF800000

	.p2align	8
	.type	subtract_get_group_id_x,@function
	.size	subtract_get_group_id_x, subtract_get_group_id_x_symend-subtract_get_group_id_x
subtract_get_group_id_x:
	s_clause 0x3                                               // 000000068A00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068A04: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 000000068A0C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 000000068A14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000068A1C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000068A24: CA240080 020000FF 000003FF
	s_lshl_b32 s7, s2, 1                                       // 000000068A30: 84078102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000068A34: D6100005 02291500
	s_waitcnt lgkmcnt(0)                                       // 000000068A3C: BF89FC07
	s_lshl_b32 s9, s3, 4                                       // 000000068A40: 84098403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068A44: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000068A4C: BEA10080
	v_add3_u32 v1, s8, s7, v1                                  // 000000068A50: D6550001 04040E08
	s_lshl_b32 s7, s4, 1                                       // 000000068A58: 84078104
	s_sub_i32 s2, s2, s5                                       // 000000068A5C: 81820502
	s_sub_i32 s3, s3, s5                                       // 000000068A60: 81830503
	s_sub_i32 s4, s4, s5                                       // 000000068A64: 81840504
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068A68: D73C0003 00020282
	v_add3_u32 v1, s10, s9, v5                                 // 000000068A70: D6550001 0414120A
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 000000068A78: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000068A80: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068A84: D73C0005 00020282
	v_add3_u32 v1, s6, s7, v0                                  // 000000068A8C: D6550001 04000E06
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000068A94: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000068A9C: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000068AA0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000068AA8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000068AB0: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 000000068AB4: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 000000068AB8: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000068ABC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000068AC4: 40020201
	s_clause 0x2                                               // 000000068AC8: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000068ACC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000068AD4: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 000000068ADC: DC6A0000 007C0200
	s_nop 0                                                    // 000000068AE4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068AE8: BFB60003
	s_endpgm                                                   // 000000068AEC: BFB00000
subtract_get_group_id_x_symend:
	.long 0xbf800000                                           // 000000068AF0: BF800000
	.long 0xbf800000                                           // 000000068AF4: BF800000
	.long 0xbf800000                                           // 000000068AF8: BF800000
	.long 0xbf800000                                           // 000000068AFC: BF800000

	.p2align	8
	.type	subtract_get_local_size_x,@function
	.size	subtract_get_local_size_x, subtract_get_local_size_x_symend-subtract_get_local_size_x
subtract_get_local_size_x:
	s_clause 0x1                                               // 000000068B00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000068B04: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000068B0C: F4080300 F8000038
	s_add_u32 s5, s0, 16                                       // 000000068B14: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000068B18: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000068B1C: 820B8001
	s_lshl_b32 s13, s2, 1                                      // 000000068B20: 840D8102
	s_lshl_b32 s15, s3, 1                                      // 000000068B24: 840F8103
	s_lshl_b32 s16, s4, 2                                      // 000000068B28: 84108204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000068B2C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000068B38: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068B40: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000068B48: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000068B4C: BF0A0802
	v_add3_u32 v1, s12, s13, v1                                // 000000068B50: D6550001 04041A0C
	s_cselect_b32 s2, 12, 18                                   // 000000068B58: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000068B5C: BF870009
	s_add_u32 s6, s5, s2                                       // 000000068B60: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000068B64: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000068B68: BF0A0903
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068B6C: D73C0003 00020282
	s_cselect_b32 s2, 14, 20                                   // 000000068B74: 9802948E
	v_add3_u32 v1, s14, s15, v5                                // 000000068B78: D6550001 04141E0E
	s_add_u32 s2, s5, s2                                       // 000000068B80: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000068B84: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000068B88: BF0A0A04
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000068B8C: BF8704A1
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068B90: D73C0005 00020282
	s_cselect_b32 s4, 16, 22                                   // 000000068B98: 98049690
	s_add_u32 s4, s5, s4                                       // 000000068B9C: 80040405
	s_addc_u32 s5, s11, 0                                      // 000000068BA0: 8205800B
	s_clause 0x2                                               // 000000068BA4: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 000000068BA8: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 000000068BB0: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 000000068BB8: DC4A0000 09040002
	s_clause 0x2                                               // 000000068BC0: BF850002
	s_load_b32 s4, s[0:1], 0x48                                // 000000068BC4: F4000100 F8000048
	s_load_b64 s[2:3], s[0:1], 0x8                             // 000000068BCC: F4040080 F8000008
	s_load_b32 s0, s[0:1], null                                // 000000068BD4: F4000000 F8000000
	s_waitcnt lgkmcnt(0)                                       // 000000068BDC: BF89FC07
	v_add3_u32 v1, s4, s16, v0                                 // 000000068BE0: D6550001 04002004
	v_add_co_u32 v3, vcc_lo, s2, v3                            // 000000068BE8: D7006A03 00020602
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo             // 000000068BF0: 40080803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000068BF4: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000068BF8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s2, v5                            // 000000068C00: D7006A05 00020A02
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo             // 000000068C08: 400C0C03
	v_add_co_u32 v0, vcc_lo, s2, v0                            // 000000068C0C: D7006A00 00020002
	s_delay_alu instid0(VALU_DEP_4)                            // 000000068C14: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo             // 000000068C18: 40020203
	s_waitcnt vmcnt(2)                                         // 000000068C1C: BF890BF7
	v_subrev_nc_u32_e32 v2, s0, v7                             // 000000068C20: 4E040E00
	s_waitcnt vmcnt(1)                                         // 000000068C24: BF8907F7
	v_subrev_nc_u32_e32 v7, s0, v8                             // 000000068C28: 4E0E1000
	s_waitcnt vmcnt(0)                                         // 000000068C2C: BF8903F7
	v_subrev_nc_u32_e32 v8, s0, v9                             // 000000068C30: 4E101200
	s_clause 0x2                                               // 000000068C34: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000068C38: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 000000068C40: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 000000068C48: DC6A0000 007C0800
	s_nop 0                                                    // 000000068C50: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068C54: BFB60003
	s_endpgm                                                   // 000000068C58: BFB00000
subtract_get_local_size_x_symend:
	.long 0xbf800000                                           // 000000068C5C: BF800000
	.long 0xbf800000                                           // 000000068C60: BF800000
	.long 0xbf800000                                           // 000000068C64: BF800000
	.long 0xbf800000                                           // 000000068C68: BF800000
	.long 0xbf800000                                           // 000000068C6C: BF800000
	.long 0xbf800000                                           // 000000068C70: BF800000
	.long 0xbf800000                                           // 000000068C74: BF800000
	.long 0xbf800000                                           // 000000068C78: BF800000
	.long 0xbf800000                                           // 000000068C7C: BF800000
	.long 0xbf800000                                           // 000000068C80: BF800000
	.long 0xbf800000                                           // 000000068C84: BF800000
	.long 0xbf800000                                           // 000000068C88: BF800000
	.long 0xbf800000                                           // 000000068C8C: BF800000
	.long 0xbf800000                                           // 000000068C90: BF800000
	.long 0xbf800000                                           // 000000068C94: BF800000
	.long 0xbf800000                                           // 000000068C98: BF800000
	.long 0xbf800000                                           // 000000068C9C: BF800000
	.long 0xbf800000                                           // 000000068CA0: BF800000
	.long 0xbf800000                                           // 000000068CA4: BF800000
	.long 0xbf800000                                           // 000000068CA8: BF800000
	.long 0xbf800000                                           // 000000068CAC: BF800000
	.long 0xbf800000                                           // 000000068CB0: BF800000
	.long 0xbf800000                                           // 000000068CB4: BF800000
	.long 0xbf800000                                           // 000000068CB8: BF800000
	.long 0xbf800000                                           // 000000068CBC: BF800000
	.long 0xbf800000                                           // 000000068CC0: BF800000
	.long 0xbf800000                                           // 000000068CC4: BF800000
	.long 0xbf800000                                           // 000000068CC8: BF800000
	.long 0xbf800000                                           // 000000068CCC: BF800000
	.long 0xbf800000                                           // 000000068CD0: BF800000
	.long 0xbf800000                                           // 000000068CD4: BF800000
	.long 0xbf800000                                           // 000000068CD8: BF800000
	.long 0xbf800000                                           // 000000068CDC: BF800000
	.long 0xbf800000                                           // 000000068CE0: BF800000
	.long 0xbf800000                                           // 000000068CE4: BF800000
	.long 0xbf800000                                           // 000000068CE8: BF800000
	.long 0xbf800000                                           // 000000068CEC: BF800000
	.long 0xbf800000                                           // 000000068CF0: BF800000
	.long 0xbf800000                                           // 000000068CF4: BF800000
	.long 0xbf800000                                           // 000000068CF8: BF800000
	.long 0xbf800000                                           // 000000068CFC: BF800000

	.p2align	8
	.type	subtract_get_global_id_x,@function
	.size	subtract_get_global_id_x, subtract_get_global_id_x_symend-subtract_get_global_id_x
subtract_get_global_id_x:
	s_clause 0x3                                               // 000000068D00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068D04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000068D0C: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000068D14: F4040180 F8000008
	s_load_b32 s0, s[0:1], null                                // 000000068D1C: F4000000 F8000000
	v_bfe_u32 v2, v0, 10, 10                                   // 000000068D24: D6100002 02291500
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000068D2C: 360600FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 000000068D34: D6100004 02292900
	s_mov_b32 s33, 0                                           // 000000068D3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000068D40: BF8701D3
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000068D44: D6560002 04090203
	v_mov_b32_e32 v1, 0                                        // 000000068D4C: 7E020280
	v_lshl_or_b32 v0, s2, 1, v3                                // 000000068D50: D6560000 040D0202
	v_lshl_or_b32 v6, s4, 2, v4                                // 000000068D58: D6560006 04110404
	s_waitcnt lgkmcnt(0)                                       // 000000068D60: BF89FC07
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s10, v2     // 000000068D64: CA200101 0302040A
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 000000068D6C: BF870233
	v_add_nc_u32_e32 v8, s8, v0                                // 000000068D70: 4A100008
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 000000068D74: D73C0004 00020082
	v_add_nc_u32_e32 v0, s5, v6                                // 000000068D7C: 4A000C05
	v_subrev_nc_u32_e32 v9, s0, v2                             // 000000068D80: 4E120400
	v_lshlrev_b64 v[6:7], 2, v[2:3]                            // 000000068D84: D73C0006 00020482
	v_subrev_nc_u32_e32 v8, s0, v8                             // 000000068D8C: 4E101000
	v_add_co_u32 v3, vcc_lo, s6, v4                            // 000000068D90: D7006A03 00020806
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 000000068D98: D73C0001 00020082
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v5, vcc_lo             // 000000068DA0: 40080A07
	v_add_co_u32 v5, vcc_lo, s6, v6                            // 000000068DA4: D7006A05 00020C06
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v7, vcc_lo             // 000000068DAC: 400C0E07
	v_subrev_nc_u32_e32 v7, s0, v0                             // 000000068DB0: 4E0E0000
	v_add_co_u32 v0, vcc_lo, s6, v1                            // 000000068DB4: D7006A00 00020206
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v2, vcc_lo             // 000000068DBC: 40020407
	s_clause 0x2                                               // 000000068DC0: BF850002
	global_store_b32 v[3:4], v8, off                           // 000000068DC4: DC6A0000 007C0803
	global_store_b32 v[5:6], v9, off                           // 000000068DCC: DC6A0000 007C0905
	global_store_b32 v[0:1], v7, off                           // 000000068DD4: DC6A0000 007C0700
	s_nop 0                                                    // 000000068DDC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068DE0: BFB60003
	s_endpgm                                                   // 000000068DE4: BFB00000
subtract_get_global_id_x_symend:
	.long 0xbf800000                                           // 000000068DE8: BF800000
	.long 0xbf800000                                           // 000000068DEC: BF800000
	.long 0xbf800000                                           // 000000068DF0: BF800000
	.long 0xbf800000                                           // 000000068DF4: BF800000
	.long 0xbf800000                                           // 000000068DF8: BF800000
	.long 0xbf800000                                           // 000000068DFC: BF800000

	.p2align	8
	.type	subtract_get_global_size_x,@function
	.size	subtract_get_global_size_x, subtract_get_global_size_x_symend-subtract_get_global_size_x
subtract_get_global_size_x:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000068E00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000068E0C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000068E10: D6100005 02291500
	s_lshl_b32 s3, s3, 1                                       // 000000068E18: 84038103
	s_clause 0x1                                               // 000000068E1C: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000068E20: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000068E28: DC4A0026 08000002
	s_clause 0x4                                               // 000000068E30: BF850004
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000068E34: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000068E3C: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x8                                 // 000000068E44: F4000140 F8000008
	s_load_b32 s6, s[0:1], 0x48                                // 000000068E4C: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000068E54: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 000000068E5C: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000068E64: 84048104
	s_mov_b32 s33, 0                                           // 000000068E68: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000068E6C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000068E70: D6550001 04040408
	s_lshl_b32 s2, s12, 4                                      // 000000068E78: 8402840C
	s_lshl_b32 s7, s13, 1                                      // 000000068E7C: 8407810D
	s_sub_i32 s2, s2, s5                                       // 000000068E80: 81820502
	s_sub_i32 s7, s7, s5                                       // 000000068E84: 81870507
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000068E88: D73C0003 00020282
	v_add3_u32 v1, s10, s3, v5                                 // 000000068E90: D6550001 0414060A
	s_lshl_b32 s3, s14, 1                                      // 000000068E98: 8403810E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000068E9C: BF870099
	s_sub_i32 s3, s3, s5                                       // 000000068EA0: 81830503
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000068EA4: D73C0005 00020282
	v_add3_u32 v1, s6, s4, v0                                  // 000000068EAC: D6550001 04000806
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000068EB4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000068EBC: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000068EC0: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000068EC4: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000068ECC: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000068ED4: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000068ED8: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000068EE0: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000068EE4: 40020201
	s_waitcnt vmcnt(1)                                         // 000000068EE8: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 000000068EEC: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 000000068EF0: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 000000068EF8: BF8903F7
	v_add_nc_u32_e32 v8, s3, v8                                // 000000068EFC: 4A101003
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000068F00: BF870193
	v_add_nc_u32_e32 v2, s7, v2                                // 000000068F04: 4A040407
	v_add_nc_u32_e32 v7, s2, v7                                // 000000068F08: 4A0E0E02
	s_clause 0x2                                               // 000000068F0C: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000068F10: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 000000068F18: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 000000068F20: DC6A0000 007C0800
	s_nop 0                                                    // 000000068F28: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000068F2C: BFB60003
	s_endpgm                                                   // 000000068F30: BFB00000
subtract_get_global_size_x_symend:
	.long 0xbf800000                                           // 000000068F34: BF800000
	.long 0xbf800000                                           // 000000068F38: BF800000
	.long 0xbf800000                                           // 000000068F3C: BF800000
	.long 0xbf800000                                           // 000000068F40: BF800000
	.long 0xbf800000                                           // 000000068F44: BF800000
	.long 0xbf800000                                           // 000000068F48: BF800000
	.long 0xbf800000                                           // 000000068F4C: BF800000
	.long 0xbf800000                                           // 000000068F50: BF800000
	.long 0xbf800000                                           // 000000068F54: BF800000
	.long 0xbf800000                                           // 000000068F58: BF800000
	.long 0xbf800000                                           // 000000068F5C: BF800000
	.long 0xbf800000                                           // 000000068F60: BF800000
	.long 0xbf800000                                           // 000000068F64: BF800000
	.long 0xbf800000                                           // 000000068F68: BF800000
	.long 0xbf800000                                           // 000000068F6C: BF800000
	.long 0xbf800000                                           // 000000068F70: BF800000
	.long 0xbf800000                                           // 000000068F74: BF800000
	.long 0xbf800000                                           // 000000068F78: BF800000
	.long 0xbf800000                                           // 000000068F7C: BF800000
	.long 0xbf800000                                           // 000000068F80: BF800000
	.long 0xbf800000                                           // 000000068F84: BF800000
	.long 0xbf800000                                           // 000000068F88: BF800000
	.long 0xbf800000                                           // 000000068F8C: BF800000
	.long 0xbf800000                                           // 000000068F90: BF800000
	.long 0xbf800000                                           // 000000068F94: BF800000
	.long 0xbf800000                                           // 000000068F98: BF800000
	.long 0xbf800000                                           // 000000068F9C: BF800000
	.long 0xbf800000                                           // 000000068FA0: BF800000
	.long 0xbf800000                                           // 000000068FA4: BF800000
	.long 0xbf800000                                           // 000000068FA8: BF800000
	.long 0xbf800000                                           // 000000068FAC: BF800000
	.long 0xbf800000                                           // 000000068FB0: BF800000
	.long 0xbf800000                                           // 000000068FB4: BF800000
	.long 0xbf800000                                           // 000000068FB8: BF800000
	.long 0xbf800000                                           // 000000068FBC: BF800000
	.long 0xbf800000                                           // 000000068FC0: BF800000
	.long 0xbf800000                                           // 000000068FC4: BF800000
	.long 0xbf800000                                           // 000000068FC8: BF800000
	.long 0xbf800000                                           // 000000068FCC: BF800000
	.long 0xbf800000                                           // 000000068FD0: BF800000
	.long 0xbf800000                                           // 000000068FD4: BF800000
	.long 0xbf800000                                           // 000000068FD8: BF800000
	.long 0xbf800000                                           // 000000068FDC: BF800000
	.long 0xbf800000                                           // 000000068FE0: BF800000
	.long 0xbf800000                                           // 000000068FE4: BF800000
	.long 0xbf800000                                           // 000000068FE8: BF800000
	.long 0xbf800000                                           // 000000068FEC: BF800000
	.long 0xbf800000                                           // 000000068FF0: BF800000
	.long 0xbf800000                                           // 000000068FF4: BF800000
	.long 0xbf800000                                           // 000000068FF8: BF800000
	.long 0xbf800000                                           // 000000068FFC: BF800000

	.p2align	8
	.type	subtract_get_num_groups_x,@function
	.size	subtract_get_num_groups_x, subtract_get_num_groups_x_symend-subtract_get_num_groups_x
subtract_get_num_groups_x:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069000: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006900C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069014: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006901C: BEA10080
	s_clause 0x1                                               // 000000069020: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000069024: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006902C: DC4A0026 08000002
	s_clause 0x2                                               // 000000069034: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069038: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000069040: F4080300 F8000010
	s_load_b32 s5, s[0:1], null                                // 000000069048: F4000140 F8000000
	s_waitcnt lgkmcnt(0)                                       // 000000069050: BF89FC07
	s_clause 0x1                                               // 000000069054: BF850001
	s_load_b32 s9, s[0:1], 0x48                                // 000000069058: F4000240 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000069060: F4040180 F8000008
	s_lshl_b32 s0, s2, 1                                       // 000000069068: 84008102
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006906C: BF8700B9
	v_add3_u32 v1, s8, s0, v1                                  // 000000069070: D6550001 04040008
	s_lshl_b32 s0, s3, 1                                       // 000000069078: 84008103
	s_sub_i32 s1, s12, s5                                      // 00000006907C: 8181050C
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069080: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 000000069088: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000069090: 84008204
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000069094: BF8701D1
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069098: D73C0005 00020282
	s_waitcnt lgkmcnt(0)                                       // 0000000690A0: BF89FC07
	v_add3_u32 v1, s9, s0, v0                                  // 0000000690A4: D6550001 04000009
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 0000000690AC: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 0000000690B4: 40080807
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000690B8: D73C0000 00020282
	v_add_co_u32 v5, s0, s6, v5                                // 0000000690C0: D7000005 00020A06
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 0000000690C8: BF870141
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000690CC: D5200006 00020C07
	s_waitcnt vmcnt(1)                                         // 0000000690D4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 0000000690D8: 32040E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000690DC: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v2.l                               // 0000000690E0: D43D0000 00020480
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000690E8: BF07806A
	s_waitcnt vmcnt(0)                                         // 0000000690EC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 0000000690F0: 7C7A1080
	s_addc_u32 s1, s1, 0                                       // 0000000690F4: 82018001
	s_sub_i32 s2, s13, s5                                      // 0000000690F8: 8182050D
	s_cmp_lg_u32 s0, 0                                         // 0000000690FC: BF078000
	s_addc_u32 s0, s2, 0                                       // 000000069100: 82008002
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000069104: BF870009
	v_dual_mov_b32 v2, s1 :: v_dual_mov_b32 v7, s0             // 000000069108: CA100001 02060000
	s_sub_i32 s1, s14, s5                                      // 000000069110: 8181050E
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000069114: BF07806A
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000069118: D7006A00 00020006
	s_addc_u32 s0, s1, 0                                       // 000000069120: 82008001
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000069124: 40020207
	v_mov_b32_e32 v8, s0                                       // 000000069128: 7E100200
	s_clause 0x2                                               // 00000006912C: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000069130: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 000000069138: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 000000069140: DC6A0000 007C0800
	s_nop 0                                                    // 000000069148: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006914C: BFB60003
	s_endpgm                                                   // 000000069150: BFB00000
subtract_get_num_groups_x_symend:
	.long 0xbf800000                                           // 000000069154: BF800000
	.long 0xbf800000                                           // 000000069158: BF800000
	.long 0xbf800000                                           // 00000006915C: BF800000
	.long 0xbf800000                                           // 000000069160: BF800000
	.long 0xbf800000                                           // 000000069164: BF800000
	.long 0xbf800000                                           // 000000069168: BF800000
	.long 0xbf800000                                           // 00000006916C: BF800000
	.long 0xbf800000                                           // 000000069170: BF800000
	.long 0xbf800000                                           // 000000069174: BF800000
	.long 0xbf800000                                           // 000000069178: BF800000
	.long 0xbf800000                                           // 00000006917C: BF800000
	.long 0xbf800000                                           // 000000069180: BF800000
	.long 0xbf800000                                           // 000000069184: BF800000
	.long 0xbf800000                                           // 000000069188: BF800000
	.long 0xbf800000                                           // 00000006918C: BF800000
	.long 0xbf800000                                           // 000000069190: BF800000
	.long 0xbf800000                                           // 000000069194: BF800000
	.long 0xbf800000                                           // 000000069198: BF800000
	.long 0xbf800000                                           // 00000006919C: BF800000
	.long 0xbf800000                                           // 0000000691A0: BF800000
	.long 0xbf800000                                           // 0000000691A4: BF800000
	.long 0xbf800000                                           // 0000000691A8: BF800000
	.long 0xbf800000                                           // 0000000691AC: BF800000
	.long 0xbf800000                                           // 0000000691B0: BF800000
	.long 0xbf800000                                           // 0000000691B4: BF800000
	.long 0xbf800000                                           // 0000000691B8: BF800000
	.long 0xbf800000                                           // 0000000691BC: BF800000
	.long 0xbf800000                                           // 0000000691C0: BF800000
	.long 0xbf800000                                           // 0000000691C4: BF800000
	.long 0xbf800000                                           // 0000000691C8: BF800000
	.long 0xbf800000                                           // 0000000691CC: BF800000
	.long 0xbf800000                                           // 0000000691D0: BF800000
	.long 0xbf800000                                           // 0000000691D4: BF800000
	.long 0xbf800000                                           // 0000000691D8: BF800000
	.long 0xbf800000                                           // 0000000691DC: BF800000
	.long 0xbf800000                                           // 0000000691E0: BF800000
	.long 0xbf800000                                           // 0000000691E4: BF800000
	.long 0xbf800000                                           // 0000000691E8: BF800000
	.long 0xbf800000                                           // 0000000691EC: BF800000
	.long 0xbf800000                                           // 0000000691F0: BF800000
	.long 0xbf800000                                           // 0000000691F4: BF800000
	.long 0xbf800000                                           // 0000000691F8: BF800000
	.long 0xbf800000                                           // 0000000691FC: BF800000

	.p2align	8
	.type	subtract_get_work_dim_x,@function
	.size	subtract_get_work_dim_x, subtract_get_work_dim_x_symend-subtract_get_work_dim_x
subtract_get_work_dim_x:
	s_clause 0x3                                               // 000000069200: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 000000069204: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x50                                // 00000006920C: F4000100 F8000050
	s_load_b32 s5, s[0:1], null                                // 000000069214: F4000140 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006921C: F4040000 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000069224: 84028102
	s_mov_b32 s33, 0                                           // 000000069228: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006922C: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 000000069230: D6550000 04000403
	s_and_b32 s2, s4, 0xffff                                   // 000000069238: 8B02FF04 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 000000069240: BF870499
	s_sub_i32 s2, s2, s5                                       // 000000069244: 81820502
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 000000069248: CA100080 01020002
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000069250: BF870091
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000069254: D73C0000 00020082
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006925C: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 000000069264: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000069268: 40020201
	global_store_b32 v[0:1], v2, off                           // 00000006926C: DC6A0000 007C0200
	s_nop 0                                                    // 000000069274: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069278: BFB60003
	s_endpgm                                                   // 00000006927C: BFB00000
subtract_get_work_dim_x_symend:
	.long 0xbf800000                                           // 000000069280: BF800000
	.long 0xbf800000                                           // 000000069284: BF800000
	.long 0xbf800000                                           // 000000069288: BF800000
	.long 0xbf800000                                           // 00000006928C: BF800000
	.long 0xbf800000                                           // 000000069290: BF800000
	.long 0xbf800000                                           // 000000069294: BF800000
	.long 0xbf800000                                           // 000000069298: BF800000
	.long 0xbf800000                                           // 00000006929C: BF800000
	.long 0xbf800000                                           // 0000000692A0: BF800000
	.long 0xbf800000                                           // 0000000692A4: BF800000
	.long 0xbf800000                                           // 0000000692A8: BF800000
	.long 0xbf800000                                           // 0000000692AC: BF800000
	.long 0xbf800000                                           // 0000000692B0: BF800000
	.long 0xbf800000                                           // 0000000692B4: BF800000
	.long 0xbf800000                                           // 0000000692B8: BF800000
	.long 0xbf800000                                           // 0000000692BC: BF800000
	.long 0xbf800000                                           // 0000000692C0: BF800000
	.long 0xbf800000                                           // 0000000692C4: BF800000
	.long 0xbf800000                                           // 0000000692C8: BF800000
	.long 0xbf800000                                           // 0000000692CC: BF800000
	.long 0xbf800000                                           // 0000000692D0: BF800000
	.long 0xbf800000                                           // 0000000692D4: BF800000
	.long 0xbf800000                                           // 0000000692D8: BF800000
	.long 0xbf800000                                           // 0000000692DC: BF800000
	.long 0xbf800000                                           // 0000000692E0: BF800000
	.long 0xbf800000                                           // 0000000692E4: BF800000
	.long 0xbf800000                                           // 0000000692E8: BF800000
	.long 0xbf800000                                           // 0000000692EC: BF800000
	.long 0xbf800000                                           // 0000000692F0: BF800000
	.long 0xbf800000                                           // 0000000692F4: BF800000
	.long 0xbf800000                                           // 0000000692F8: BF800000
	.long 0xbf800000                                           // 0000000692FC: BF800000

	.p2align	8
	.type	subtract_x_get_global_offset,@function
	.size	subtract_x_get_global_offset, subtract_x_get_global_offset_symend-subtract_x_get_global_offset
subtract_x_get_global_offset:
	s_clause 0x3                                               // 000000069300: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 00000006930C: F4000140 F8000008
	s_load_b32 s6, s[0:1], 0x48                                // 000000069314: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006931C: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069324: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000069330: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000069334: D6100005 02291500
	s_lshl_b32 s3, s3, 1                                       // 00000006933C: 84038103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069340: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000069348: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006934C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000069350: D6550001 04040408
	s_lshl_b32 s2, s4, 1                                       // 000000069358: 84028104
	s_sub_i32 s4, s5, s8                                       // 00000006935C: 81840805
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000069360: BF870151
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069364: D73C0003 00020282
	v_add3_u32 v1, s10, s3, v5                                 // 00000006936C: D6550001 0414060A
	s_sub_i32 s3, s5, s10                                      // 000000069374: 81830A05
	s_sub_i32 s5, s5, s6                                       // 000000069378: 81850605
	v_dual_mov_b32 v7, s4 :: v_dual_mov_b32 v8, s3             // 00000006937C: CA100004 07080003
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069384: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 00000006938C: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069394: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006939C: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 0000000693A0: BF870243
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000693A4: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000693AC: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000693B4: 400C0C01
	v_mov_b32_e32 v2, s5                                       // 0000000693B8: 7E040205
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000693BC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000693C4: 40020201
	s_clause 0x2                                               // 0000000693C8: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000693CC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000693D4: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 0000000693DC: DC6A0000 007C0200
	s_nop 0                                                    // 0000000693E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000693E8: BFB60003
	s_endpgm                                                   // 0000000693EC: BFB00000
subtract_x_get_global_offset_symend:
	.long 0xbf800000                                           // 0000000693F0: BF800000
	.long 0xbf800000                                           // 0000000693F4: BF800000
	.long 0xbf800000                                           // 0000000693F8: BF800000
	.long 0xbf800000                                           // 0000000693FC: BF800000

	.p2align	8
	.type	subtract_get_global_offset_get_global_offset,@function
	.size	subtract_get_global_offset_get_global_offset, subtract_get_global_offset_get_global_offset_symend-subtract_get_global_offset_get_global_offset
subtract_get_global_offset_get_global_offset:
	s_clause 0x2                                               // 000000069400: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069404: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006940C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069414: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006941C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000069428: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006942C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069434: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006943C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069440: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000069444: D6550001 04040408
	s_lshl_b32 s2, s3, 4                                       // 00000006944C: 84028403
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000069450: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069454: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006945C: D6550001 0414040A
	s_lshl_b32 s2, s4, 1                                       // 000000069464: 84028104
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069468: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 000000069470: D6550001 04000405
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000069478: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006947C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000069484: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000069488: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000069490: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000069498: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006949C: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000694A0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000694A8: 40020201
	s_clause 0x2                                               // 0000000694AC: BF850002
	global_store_b32 v[3:4], v2, off                           // 0000000694B0: DC6A0000 007C0203
	global_store_b32 v[5:6], v2, off                           // 0000000694B8: DC6A0000 007C0205
	global_store_b32 v[0:1], v2, off                           // 0000000694C0: DC6A0000 007C0200
	s_nop 0                                                    // 0000000694C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000694CC: BFB60003
	s_endpgm                                                   // 0000000694D0: BFB00000
subtract_get_global_offset_get_global_offset_symend:
	.long 0xbf800000                                           // 0000000694D4: BF800000
	.long 0xbf800000                                           // 0000000694D8: BF800000
	.long 0xbf800000                                           // 0000000694DC: BF800000
	.long 0xbf800000                                           // 0000000694E0: BF800000
	.long 0xbf800000                                           // 0000000694E4: BF800000
	.long 0xbf800000                                           // 0000000694E8: BF800000
	.long 0xbf800000                                           // 0000000694EC: BF800000
	.long 0xbf800000                                           // 0000000694F0: BF800000
	.long 0xbf800000                                           // 0000000694F4: BF800000
	.long 0xbf800000                                           // 0000000694F8: BF800000
	.long 0xbf800000                                           // 0000000694FC: BF800000

	.p2align	8
	.type	subtract_get_local_id_get_global_offset,@function
	.size	subtract_get_local_id_get_global_offset, subtract_get_local_id_get_global_offset_symend-subtract_get_local_id_get_global_offset
subtract_get_local_id_get_global_offset:
	s_clause 0x2                                               // 000000069500: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069504: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006950C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069514: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000006951C: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000069528: 84028302
	v_bfe_u32 v6, v0, 10, 10                                   // 00000006952C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069534: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006953C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069540: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 000000069544: D6550001 04140408
	s_lshl_b32 s2, s3, 2                                       // 00000006954C: 84028203
	v_subrev_nc_u32_e32 v7, s8, v5                             // 000000069550: 4E0E0A08
	v_subrev_nc_u32_e32 v8, s10, v6                            // 000000069554: 4E100C0A
	v_subrev_nc_u32_e32 v9, s5, v0                             // 000000069558: 4E120005
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006955C: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 000000069564: D6550001 0418040A
	s_lshl_b32 s2, s4, 1                                       // 00000006956C: 84028104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000069570: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069574: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 00000006957C: D6550001 04000405
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069584: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006958C: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000069590: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000069594: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006959C: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000695A4: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000695A8: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000695B0: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000695B4: 40020201
	s_clause 0x2                                               // 0000000695B8: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000695BC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000695C4: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 0000000695CC: DC6A0000 007C0900
	s_nop 0                                                    // 0000000695D4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000695D8: BFB60003
	s_endpgm                                                   // 0000000695DC: BFB00000
subtract_get_local_id_get_global_offset_symend:
	.long 0xbf800000                                           // 0000000695E0: BF800000
	.long 0xbf800000                                           // 0000000695E4: BF800000
	.long 0xbf800000                                           // 0000000695E8: BF800000
	.long 0xbf800000                                           // 0000000695EC: BF800000
	.long 0xbf800000                                           // 0000000695F0: BF800000
	.long 0xbf800000                                           // 0000000695F4: BF800000
	.long 0xbf800000                                           // 0000000695F8: BF800000
	.long 0xbf800000                                           // 0000000695FC: BF800000

	.p2align	8
	.type	subtract_get_group_id_get_global_offset,@function
	.size	subtract_get_group_id_get_global_offset, subtract_get_group_id_get_global_offset_symend-subtract_get_group_id_get_global_offset
subtract_get_group_id_get_global_offset:
	s_clause 0x2                                               // 000000069600: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006960C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069614: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006961C: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 000000069628: 84068102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006962C: D6100005 02291500
	s_lshl_b32 s7, s3, 4                                       // 000000069634: 84078403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069638: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000069640: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069644: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 000000069648: D6550001 04040C08
	s_lshl_b32 s6, s4, 1                                       // 000000069650: 84068104
	s_sub_i32 s2, s2, s8                                       // 000000069654: 81820802
	s_sub_i32 s3, s3, s10                                      // 000000069658: 81830A03
	s_sub_i32 s4, s4, s5                                       // 00000006965C: 81840504
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069660: D73C0003 00020282
	v_add3_u32 v1, s10, s7, v5                                 // 000000069668: D6550001 04140E0A
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 000000069670: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000069678: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006967C: D73C0005 00020282
	v_add3_u32 v1, s5, s6, v0                                  // 000000069684: D6550001 04000C05
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006968C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000069694: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000069698: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000696A0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000696A8: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 0000000696AC: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000696B0: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000696B4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000696BC: 40020201
	s_clause 0x2                                               // 0000000696C0: BF850002
	global_store_b32 v[3:4], v7, off                           // 0000000696C4: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 0000000696CC: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 0000000696D4: DC6A0000 007C0200
	s_nop 0                                                    // 0000000696DC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000696E0: BFB60003
	s_endpgm                                                   // 0000000696E4: BFB00000
subtract_get_group_id_get_global_offset_symend:
	.long 0xbf800000                                           // 0000000696E8: BF800000
	.long 0xbf800000                                           // 0000000696EC: BF800000
	.long 0xbf800000                                           // 0000000696F0: BF800000
	.long 0xbf800000                                           // 0000000696F4: BF800000
	.long 0xbf800000                                           // 0000000696F8: BF800000
	.long 0xbf800000                                           // 0000000696FC: BF800000

	.p2align	8
	.type	subtract_get_local_size_get_global_offset,@function
	.size	subtract_get_local_size_get_global_offset, subtract_get_local_size_get_global_offset_symend-subtract_get_local_size_get_global_offset
subtract_get_local_size_get_global_offset:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000069700: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000069708: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006970C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000069710: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000069714: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000069718: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006971C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069720: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006972C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069734: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006973C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000069740: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000069744: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000069748: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006974C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000069750: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000069754: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 000000069758: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006975C: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000069760: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000069764: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 000000069768: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006976C: BF870009
	s_add_u32 s4, s5, s4                                       // 000000069770: 80040405
	s_addc_u32 s5, s11, 0                                      // 000000069774: 8205800B
	s_clause 0x2                                               // 000000069778: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006977C: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 000000069784: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006978C: DC4A0000 09040002
	s_clause 0x2                                               // 000000069794: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000069798: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 0000000697A0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000697A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000697B0: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 0000000697B4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000697BC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 0000000697C0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 0000000697C8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 0000000697D0: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v0                                 // 0000000697D8: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000697E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000697E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000697EC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 0000000697F0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000697F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000069800: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000069804: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000069808: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000069810: 40020201
	s_waitcnt vmcnt(2)                                         // 000000069814: BF890BF7
	v_subrev_nc_u32_e32 v2, s4, v7                             // 000000069818: 4E040E04
	s_waitcnt vmcnt(1)                                         // 00000006981C: BF8907F7
	v_subrev_nc_u32_e32 v7, s6, v8                             // 000000069820: 4E0E1006
	s_waitcnt vmcnt(0)                                         // 000000069824: BF8903F7
	v_subrev_nc_u32_e32 v8, s2, v9                             // 000000069828: 4E101202
	s_clause 0x2                                               // 00000006982C: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000069830: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 000000069838: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 000000069840: DC6A0000 007C0800
	s_nop 0                                                    // 000000069848: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006984C: BFB60003
	s_endpgm                                                   // 000000069850: BFB00000
subtract_get_local_size_get_global_offset_symend:
	.long 0xbf800000                                           // 000000069854: BF800000
	.long 0xbf800000                                           // 000000069858: BF800000
	.long 0xbf800000                                           // 00000006985C: BF800000
	.long 0xbf800000                                           // 000000069860: BF800000
	.long 0xbf800000                                           // 000000069864: BF800000
	.long 0xbf800000                                           // 000000069868: BF800000
	.long 0xbf800000                                           // 00000006986C: BF800000
	.long 0xbf800000                                           // 000000069870: BF800000
	.long 0xbf800000                                           // 000000069874: BF800000
	.long 0xbf800000                                           // 000000069878: BF800000
	.long 0xbf800000                                           // 00000006987C: BF800000
	.long 0xbf800000                                           // 000000069880: BF800000
	.long 0xbf800000                                           // 000000069884: BF800000
	.long 0xbf800000                                           // 000000069888: BF800000
	.long 0xbf800000                                           // 00000006988C: BF800000
	.long 0xbf800000                                           // 000000069890: BF800000
	.long 0xbf800000                                           // 000000069894: BF800000
	.long 0xbf800000                                           // 000000069898: BF800000
	.long 0xbf800000                                           // 00000006989C: BF800000
	.long 0xbf800000                                           // 0000000698A0: BF800000
	.long 0xbf800000                                           // 0000000698A4: BF800000
	.long 0xbf800000                                           // 0000000698A8: BF800000
	.long 0xbf800000                                           // 0000000698AC: BF800000
	.long 0xbf800000                                           // 0000000698B0: BF800000
	.long 0xbf800000                                           // 0000000698B4: BF800000
	.long 0xbf800000                                           // 0000000698B8: BF800000
	.long 0xbf800000                                           // 0000000698BC: BF800000
	.long 0xbf800000                                           // 0000000698C0: BF800000
	.long 0xbf800000                                           // 0000000698C4: BF800000
	.long 0xbf800000                                           // 0000000698C8: BF800000
	.long 0xbf800000                                           // 0000000698CC: BF800000
	.long 0xbf800000                                           // 0000000698D0: BF800000
	.long 0xbf800000                                           // 0000000698D4: BF800000
	.long 0xbf800000                                           // 0000000698D8: BF800000
	.long 0xbf800000                                           // 0000000698DC: BF800000
	.long 0xbf800000                                           // 0000000698E0: BF800000
	.long 0xbf800000                                           // 0000000698E4: BF800000
	.long 0xbf800000                                           // 0000000698E8: BF800000
	.long 0xbf800000                                           // 0000000698EC: BF800000
	.long 0xbf800000                                           // 0000000698F0: BF800000
	.long 0xbf800000                                           // 0000000698F4: BF800000
	.long 0xbf800000                                           // 0000000698F8: BF800000
	.long 0xbf800000                                           // 0000000698FC: BF800000

	.p2align	8
	.type	subtract_get_global_id_get_global_offset,@function
	.size	subtract_get_global_id_get_global_offset, subtract_get_global_id_get_global_offset_symend-subtract_get_global_id_get_global_offset
subtract_get_global_id_get_global_offset:
	s_clause 0x1                                               // 000000069900: BF850001
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000069904: F4040180 F8000008
	s_load_b128 s[8:11], s[0:1], 0x40                          // 00000006990C: F4080200 F8000040
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069914: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000069920: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069928: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000069930: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000069934: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000069938: D6560001 04050202
	v_lshl_or_b32 v5, s3, 1, v5                                // 000000069940: D6560005 04150203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000069948: BF870193
	v_lshl_or_b32 v6, s4, 2, v0                                // 00000006994C: D6560006 04010404
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069954: D73C0003 00020282
	s_waitcnt lgkmcnt(0)                                       // 00000006995C: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000069960: BF870111
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000069964: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000006996C: 40080807
	global_store_b32 v[3:4], v1, off                           // 000000069970: DC6A0000 007C0103
	v_add_nc_u32_e32 v1, s8, v5                                // 000000069978: 4A020A08
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006997C: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069980: D73C0003 00020282
	v_add_nc_u32_e32 v1, s10, v6                               // 000000069988: 4A020C0A
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006998C: D73C0000 00020282
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000069994: BF870213
	v_add_co_u32 v2, vcc_lo, s6, v3                            // 000000069998: D7006A02 00020606
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v4, vcc_lo             // 0000000699A0: 40060807
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000699A4: BF870213
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000699A8: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000699B0: 40020207
	s_clause 0x1                                               // 0000000699B4: BF850001
	global_store_b32 v[2:3], v5, off                           // 0000000699B8: DC6A0000 007C0502
	global_store_b32 v[0:1], v6, off                           // 0000000699C0: DC6A0000 007C0600
	s_nop 0                                                    // 0000000699C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000699CC: BFB60003
	s_endpgm                                                   // 0000000699D0: BFB00000
subtract_get_global_id_get_global_offset_symend:
	.long 0xbf800000                                           // 0000000699D4: BF800000
	.long 0xbf800000                                           // 0000000699D8: BF800000
	.long 0xbf800000                                           // 0000000699DC: BF800000
	.long 0xbf800000                                           // 0000000699E0: BF800000
	.long 0xbf800000                                           // 0000000699E4: BF800000
	.long 0xbf800000                                           // 0000000699E8: BF800000
	.long 0xbf800000                                           // 0000000699EC: BF800000
	.long 0xbf800000                                           // 0000000699F0: BF800000
	.long 0xbf800000                                           // 0000000699F4: BF800000
	.long 0xbf800000                                           // 0000000699F8: BF800000
	.long 0xbf800000                                           // 0000000699FC: BF800000

	.p2align	8
	.type	subtract_get_global_size_get_global_offset,@function
	.size	subtract_get_global_size_get_global_offset, subtract_get_global_size_get_global_offset_symend-subtract_get_global_size_get_global_offset
subtract_get_global_size_get_global_offset:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069A00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000069A0C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000069A10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069A18: D6100000 02292900
	s_clause 0x1                                               // 000000069A20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000069A24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000069A2C: DC4A0026 08000002
	s_clause 0x3                                               // 000000069A34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069A38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000069A40: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000069A48: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000069A50: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 000000069A58: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069A5C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000069A60: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 000000069A68: 84028103
	s_lshl_b32 s3, s4, 1                                       // 000000069A6C: 84038104
	s_lshl_b32 s4, s13, 1                                      // 000000069A70: 8404810D
	s_lshl_b32 s6, s14, 1                                      // 000000069A74: 8406810E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069A78: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 000000069A80: D6550001 0414040A
	s_lshl_b32 s2, s12, 4                                      // 000000069A88: 8402840C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000069A8C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069A90: D73C0005 00020282
	v_add3_u32 v1, s5, s3, v0                                  // 000000069A98: D6550001 04000605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069AA0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000069AA8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000069AAC: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000069AB0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000069AB8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000069AC0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000069AC4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000069ACC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000069AD0: 40020201
	s_waitcnt vmcnt(1)                                         // 000000069AD4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 000000069AD8: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 000000069ADC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 000000069AE4: BF8903F7
	v_add_nc_u32_e32 v8, s6, v8                                // 000000069AE8: 4A101006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000069AEC: BF870193
	v_add_nc_u32_e32 v2, s4, v2                                // 000000069AF0: 4A040404
	v_add_nc_u32_e32 v7, s2, v7                                // 000000069AF4: 4A0E0E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000069AF8: BF870193
	v_subrev_nc_u32_e32 v8, s5, v8                             // 000000069AFC: 4E101005
	v_subrev_nc_u32_e32 v2, s10, v2                            // 000000069B00: 4E04040A
	s_delay_alu instid0(VALU_DEP_3)                            // 000000069B04: BF870003
	v_subrev_nc_u32_e32 v7, s8, v7                             // 000000069B08: 4E0E0E08
	s_clause 0x2                                               // 000000069B0C: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000069B10: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 000000069B18: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 000000069B20: DC6A0000 007C0800
	s_nop 0                                                    // 000000069B28: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069B2C: BFB60003
	s_endpgm                                                   // 000000069B30: BFB00000
subtract_get_global_size_get_global_offset_symend:
	.long 0xbf800000                                           // 000000069B34: BF800000
	.long 0xbf800000                                           // 000000069B38: BF800000
	.long 0xbf800000                                           // 000000069B3C: BF800000
	.long 0xbf800000                                           // 000000069B40: BF800000
	.long 0xbf800000                                           // 000000069B44: BF800000
	.long 0xbf800000                                           // 000000069B48: BF800000
	.long 0xbf800000                                           // 000000069B4C: BF800000
	.long 0xbf800000                                           // 000000069B50: BF800000
	.long 0xbf800000                                           // 000000069B54: BF800000
	.long 0xbf800000                                           // 000000069B58: BF800000
	.long 0xbf800000                                           // 000000069B5C: BF800000
	.long 0xbf800000                                           // 000000069B60: BF800000
	.long 0xbf800000                                           // 000000069B64: BF800000
	.long 0xbf800000                                           // 000000069B68: BF800000
	.long 0xbf800000                                           // 000000069B6C: BF800000
	.long 0xbf800000                                           // 000000069B70: BF800000
	.long 0xbf800000                                           // 000000069B74: BF800000
	.long 0xbf800000                                           // 000000069B78: BF800000
	.long 0xbf800000                                           // 000000069B7C: BF800000
	.long 0xbf800000                                           // 000000069B80: BF800000
	.long 0xbf800000                                           // 000000069B84: BF800000
	.long 0xbf800000                                           // 000000069B88: BF800000
	.long 0xbf800000                                           // 000000069B8C: BF800000
	.long 0xbf800000                                           // 000000069B90: BF800000
	.long 0xbf800000                                           // 000000069B94: BF800000
	.long 0xbf800000                                           // 000000069B98: BF800000
	.long 0xbf800000                                           // 000000069B9C: BF800000
	.long 0xbf800000                                           // 000000069BA0: BF800000
	.long 0xbf800000                                           // 000000069BA4: BF800000
	.long 0xbf800000                                           // 000000069BA8: BF800000
	.long 0xbf800000                                           // 000000069BAC: BF800000
	.long 0xbf800000                                           // 000000069BB0: BF800000
	.long 0xbf800000                                           // 000000069BB4: BF800000
	.long 0xbf800000                                           // 000000069BB8: BF800000
	.long 0xbf800000                                           // 000000069BBC: BF800000
	.long 0xbf800000                                           // 000000069BC0: BF800000
	.long 0xbf800000                                           // 000000069BC4: BF800000
	.long 0xbf800000                                           // 000000069BC8: BF800000
	.long 0xbf800000                                           // 000000069BCC: BF800000
	.long 0xbf800000                                           // 000000069BD0: BF800000
	.long 0xbf800000                                           // 000000069BD4: BF800000
	.long 0xbf800000                                           // 000000069BD8: BF800000
	.long 0xbf800000                                           // 000000069BDC: BF800000
	.long 0xbf800000                                           // 000000069BE0: BF800000
	.long 0xbf800000                                           // 000000069BE4: BF800000
	.long 0xbf800000                                           // 000000069BE8: BF800000
	.long 0xbf800000                                           // 000000069BEC: BF800000
	.long 0xbf800000                                           // 000000069BF0: BF800000
	.long 0xbf800000                                           // 000000069BF4: BF800000
	.long 0xbf800000                                           // 000000069BF8: BF800000
	.long 0xbf800000                                           // 000000069BFC: BF800000

	.p2align	8
	.type	subtract_get_num_groups_get_global_offset,@function
	.size	subtract_get_num_groups_get_global_offset, subtract_get_num_groups_get_global_offset_symend-subtract_get_num_groups_get_global_offset
subtract_get_num_groups_get_global_offset:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069C00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000069C0C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000069C14: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000069C18: D6100005 02291500
	s_clause 0x1                                               // 000000069C20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000069C24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000069C2C: DC4A0026 08000002
	s_clause 0x2                                               // 000000069C34: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069C38: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000069C40: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000069C48: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000069C50: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069C54: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000069C5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069C60: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000069C64: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000069C6C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069C70: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 000000069C78: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000069C80: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069C84: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v0                                  // 000000069C8C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000069C94: BF870094
	v_add_co_u32 v3, s1, s6, v3                                // 000000069C98: D7000103 00020606
	v_add_co_ci_u32_e64 v4, s1, s7, v4, s1                     // 000000069CA0: D5200104 00060807
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000069CA8: BF870143
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000069CAC: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 000000069CB4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 000000069CB8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000069CBC: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 000000069CC0: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000069CC8: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000069CCC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 000000069CD0: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 000000069CD4: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 000000069CD8: BF078000
	s_addc_u32 s0, s13, 0                                      // 000000069CDC: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000069CE0: BF07806A
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 000000069CE4: D7006A05 00020A06
	s_addc_u32 s2, s14, 0                                      // 000000069CEC: 8202800E
	s_sub_i32 s1, s1, s8                                       // 000000069CF0: 81810801
	s_sub_i32 s0, s0, s10                                      // 000000069CF4: 81800A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 000000069CF8: 400C0C07
	v_dual_mov_b32 v2, s1 :: v_dual_mov_b32 v7, s0             // 000000069CFC: CA100001 02060000
	s_sub_i32 s0, s2, s5                                       // 000000069D04: 81800502
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000069D08: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000069D10: 40020207
	v_mov_b32_e32 v8, s0                                       // 000000069D14: 7E100200
	s_clause 0x2                                               // 000000069D18: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000069D1C: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 000000069D24: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 000000069D2C: DC6A0000 007C0800
	s_nop 0                                                    // 000000069D34: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069D38: BFB60003
	s_endpgm                                                   // 000000069D3C: BFB00000
subtract_get_num_groups_get_global_offset_symend:
	.long 0xbf800000                                           // 000000069D40: BF800000
	.long 0xbf800000                                           // 000000069D44: BF800000
	.long 0xbf800000                                           // 000000069D48: BF800000
	.long 0xbf800000                                           // 000000069D4C: BF800000
	.long 0xbf800000                                           // 000000069D50: BF800000
	.long 0xbf800000                                           // 000000069D54: BF800000
	.long 0xbf800000                                           // 000000069D58: BF800000
	.long 0xbf800000                                           // 000000069D5C: BF800000
	.long 0xbf800000                                           // 000000069D60: BF800000
	.long 0xbf800000                                           // 000000069D64: BF800000
	.long 0xbf800000                                           // 000000069D68: BF800000
	.long 0xbf800000                                           // 000000069D6C: BF800000
	.long 0xbf800000                                           // 000000069D70: BF800000
	.long 0xbf800000                                           // 000000069D74: BF800000
	.long 0xbf800000                                           // 000000069D78: BF800000
	.long 0xbf800000                                           // 000000069D7C: BF800000
	.long 0xbf800000                                           // 000000069D80: BF800000
	.long 0xbf800000                                           // 000000069D84: BF800000
	.long 0xbf800000                                           // 000000069D88: BF800000
	.long 0xbf800000                                           // 000000069D8C: BF800000
	.long 0xbf800000                                           // 000000069D90: BF800000
	.long 0xbf800000                                           // 000000069D94: BF800000
	.long 0xbf800000                                           // 000000069D98: BF800000
	.long 0xbf800000                                           // 000000069D9C: BF800000
	.long 0xbf800000                                           // 000000069DA0: BF800000
	.long 0xbf800000                                           // 000000069DA4: BF800000
	.long 0xbf800000                                           // 000000069DA8: BF800000
	.long 0xbf800000                                           // 000000069DAC: BF800000
	.long 0xbf800000                                           // 000000069DB0: BF800000
	.long 0xbf800000                                           // 000000069DB4: BF800000
	.long 0xbf800000                                           // 000000069DB8: BF800000
	.long 0xbf800000                                           // 000000069DBC: BF800000
	.long 0xbf800000                                           // 000000069DC0: BF800000
	.long 0xbf800000                                           // 000000069DC4: BF800000
	.long 0xbf800000                                           // 000000069DC8: BF800000
	.long 0xbf800000                                           // 000000069DCC: BF800000
	.long 0xbf800000                                           // 000000069DD0: BF800000
	.long 0xbf800000                                           // 000000069DD4: BF800000
	.long 0xbf800000                                           // 000000069DD8: BF800000
	.long 0xbf800000                                           // 000000069DDC: BF800000
	.long 0xbf800000                                           // 000000069DE0: BF800000
	.long 0xbf800000                                           // 000000069DE4: BF800000
	.long 0xbf800000                                           // 000000069DE8: BF800000
	.long 0xbf800000                                           // 000000069DEC: BF800000
	.long 0xbf800000                                           // 000000069DF0: BF800000
	.long 0xbf800000                                           // 000000069DF4: BF800000
	.long 0xbf800000                                           // 000000069DF8: BF800000
	.long 0xbf800000                                           // 000000069DFC: BF800000

	.p2align	8
	.type	subtract_get_work_dim_get_global_offset,@function
	.size	subtract_get_work_dim_get_global_offset, subtract_get_work_dim_get_global_offset_symend-subtract_get_work_dim_get_global_offset
subtract_get_work_dim_get_global_offset:
	s_clause 0x3                                               // 000000069E00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069E04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 000000069E0C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 000000069E14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000069E1C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000069E24: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000069E30: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000069E34: D6100005 02291500
	s_lshl_b32 s3, s3, 1                                       // 000000069E3C: 84038103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069E40: D6100000 02292900
	s_lshl_b32 s4, s4, 2                                       // 000000069E48: 84048204
	s_mov_b32 s33, 0                                           // 000000069E4C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069E50: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000069E54: D6550001 04040408
	s_and_b32 s2, s5, 0xffff                                   // 000000069E5C: 8B02FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000069E64: BF870099
	s_sub_i32 s5, s2, s8                                       // 000000069E68: 81850802
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069E6C: D73C0003 00020282
	v_add3_u32 v1, s10, s3, v5                                 // 000000069E74: D6550001 0414060A
	s_sub_i32 s3, s2, s10                                      // 000000069E7C: 81830A02
	s_sub_i32 s2, s2, s6                                       // 000000069E80: 81820602
	v_dual_mov_b32 v7, s5 :: v_dual_mov_b32 v8, s3             // 000000069E84: CA100005 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000069E8C: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069E90: D73C0005 00020282
	v_add3_u32 v1, s6, s4, v0                                  // 000000069E98: D6550001 04000806
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069EA0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000069EA8: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000069EAC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000069EB4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000069EBC: 400C0C01
	v_mov_b32_e32 v2, s2                                       // 000000069EC0: 7E040202
	s_delay_alu instid0(VALU_DEP_4)                            // 000000069EC4: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000069EC8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000069ED0: 40020201
	s_clause 0x2                                               // 000000069ED4: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000069ED8: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000069EE0: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 000000069EE8: DC6A0000 007C0200
	s_nop 0                                                    // 000000069EF0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069EF4: BFB60003
	s_endpgm                                                   // 000000069EF8: BFB00000
subtract_get_work_dim_get_global_offset_symend:
	.long 0xbf800000                                           // 000000069EFC: BF800000

	.p2align	8
	.type	subtract_x_get_local_id,@function
	.size	subtract_x_get_local_id, subtract_x_get_local_id_symend-subtract_x_get_local_id
subtract_x_get_local_id:
	s_clause 0x3                                               // 000000069F00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000069F04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 000000069F0C: F4000140 F8000008
	s_load_b32 s6, s[0:1], 0x48                                // 000000069F14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000069F1C: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 000000069F24: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000069F30: 84028402
	v_bfe_u32 v6, v0, 10, 10                                   // 000000069F34: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000069F3C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000069F44: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000069F48: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 000000069F4C: D6550001 04140408
	s_lshl_b32 s2, s3, 1                                       // 000000069F54: 84028103
	v_sub_nc_u32_e32 v7, s5, v5                                // 000000069F58: 4C0E0A05
	v_sub_nc_u32_e32 v8, s5, v6                                // 000000069F5C: 4C100C05
	v_sub_nc_u32_e32 v9, s5, v0                                // 000000069F60: 4C120005
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000069F64: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 000000069F6C: D6550001 0418040A
	s_lshl_b32 s2, s4, 1                                       // 000000069F74: 84028104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000069F78: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000069F7C: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 000000069F84: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000069F8C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000069F94: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 000000069F98: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000069F9C: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000069FA4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000069FAC: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000069FB0: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 000000069FB8: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000069FBC: 40020201
	s_clause 0x2                                               // 000000069FC0: BF850002
	global_store_b32 v[3:4], v7, off                           // 000000069FC4: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 000000069FCC: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 000000069FD4: DC6A0000 007C0900
	s_nop 0                                                    // 000000069FDC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000069FE0: BFB60003
	s_endpgm                                                   // 000000069FE4: BFB00000
subtract_x_get_local_id_symend:
	.long 0xbf800000                                           // 000000069FE8: BF800000
	.long 0xbf800000                                           // 000000069FEC: BF800000
	.long 0xbf800000                                           // 000000069FF0: BF800000
	.long 0xbf800000                                           // 000000069FF4: BF800000
	.long 0xbf800000                                           // 000000069FF8: BF800000
	.long 0xbf800000                                           // 000000069FFC: BF800000

	.p2align	8
	.type	subtract_get_global_offset_get_local_id,@function
	.size	subtract_get_global_offset_get_local_id, subtract_get_global_offset_get_local_id_symend-subtract_get_global_offset_get_local_id
subtract_get_global_offset_get_local_id:
	s_clause 0x2                                               // 00000006A000: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A004: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006A00C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A014: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000006A01C: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006A028: 84028102
	v_bfe_u32 v6, v0, 10, 10                                   // 00000006A02C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A034: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006A03C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006A040: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000006A044: D6550001 04140408
	s_lshl_b32 s2, s3, 4                                       // 00000006A04C: 84028403
	v_sub_nc_u32_e32 v7, s8, v5                                // 00000006A050: 4C0E0A08
	v_sub_nc_u32_e32 v8, s10, v6                               // 00000006A054: 4C100C0A
	v_sub_nc_u32_e32 v9, s5, v0                                // 00000006A058: 4C120005
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006A05C: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 00000006A064: D6550001 0418040A
	s_lshl_b32 s2, s4, 1                                       // 00000006A06C: 84028104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006A070: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006A074: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 00000006A07C: D6550001 04000405
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006A084: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006A08C: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006A090: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006A094: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006A09C: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006A0A4: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A0A8: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006A0B0: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A0B4: 40020201
	s_clause 0x2                                               // 00000006A0B8: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006A0BC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006A0C4: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 00000006A0CC: DC6A0000 007C0900
	s_nop 0                                                    // 00000006A0D4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A0D8: BFB60003
	s_endpgm                                                   // 00000006A0DC: BFB00000
subtract_get_global_offset_get_local_id_symend:
	.long 0xbf800000                                           // 00000006A0E0: BF800000
	.long 0xbf800000                                           // 00000006A0E4: BF800000
	.long 0xbf800000                                           // 00000006A0E8: BF800000
	.long 0xbf800000                                           // 00000006A0EC: BF800000
	.long 0xbf800000                                           // 00000006A0F0: BF800000
	.long 0xbf800000                                           // 00000006A0F4: BF800000
	.long 0xbf800000                                           // 00000006A0F8: BF800000
	.long 0xbf800000                                           // 00000006A0FC: BF800000

	.p2align	8
	.type	subtract_get_local_id_get_local_id,@function
	.size	subtract_get_local_id_get_local_id, subtract_get_local_id_get_local_id_symend-subtract_get_local_id_get_local_id
subtract_get_local_id_get_local_id:
	s_clause 0x2                                               // 00000006A100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006A10C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A114: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006A11C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000006A128: 84028302
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006A12C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A134: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006A13C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006A140: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006A144: D6550001 04040408
	s_lshl_b32 s2, s3, 2                                       // 00000006A14C: 84028203
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006A150: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006A154: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006A15C: D6550001 0414040A
	s_lshl_b32 s2, s4, 1                                       // 00000006A164: 84028104
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006A168: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 00000006A170: D6550001 04000405
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006A178: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006A17C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006A184: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006A188: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006A190: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006A198: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006A19C: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A1A0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A1A8: 40020201
	s_clause 0x2                                               // 00000006A1AC: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006A1B0: DC6A0000 007C0203
	global_store_b32 v[5:6], v2, off                           // 00000006A1B8: DC6A0000 007C0205
	global_store_b32 v[0:1], v2, off                           // 00000006A1C0: DC6A0000 007C0200
	s_nop 0                                                    // 00000006A1C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A1CC: BFB60003
	s_endpgm                                                   // 00000006A1D0: BFB00000
subtract_get_local_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000006A1D4: BF800000
	.long 0xbf800000                                           // 00000006A1D8: BF800000
	.long 0xbf800000                                           // 00000006A1DC: BF800000
	.long 0xbf800000                                           // 00000006A1E0: BF800000
	.long 0xbf800000                                           // 00000006A1E4: BF800000
	.long 0xbf800000                                           // 00000006A1E8: BF800000
	.long 0xbf800000                                           // 00000006A1EC: BF800000
	.long 0xbf800000                                           // 00000006A1F0: BF800000
	.long 0xbf800000                                           // 00000006A1F4: BF800000
	.long 0xbf800000                                           // 00000006A1F8: BF800000
	.long 0xbf800000                                           // 00000006A1FC: BF800000

	.p2align	8
	.type	subtract_get_group_id_get_local_id,@function
	.size	subtract_get_group_id_get_local_id, subtract_get_group_id_get_local_id_symend-subtract_get_group_id_get_local_id
subtract_get_group_id_get_local_id:
	s_clause 0x2                                               // 00000006A200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006A20C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A214: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000006A21C: CA240080 020400FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 00000006A228: 84068102
	v_bfe_u32 v6, v0, 10, 10                                   // 00000006A22C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A234: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006A23C: BF8701A3
	v_sub_nc_u32_e32 v7, s2, v5                                // 00000006A240: 4C0E0A02
	s_mov_b32 s33, 0                                           // 00000006A244: BEA10080
	v_sub_nc_u32_e32 v8, s3, v6                                // 00000006A248: 4C100C03
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006A24C: BF8700C3
	v_sub_nc_u32_e32 v9, s4, v0                                // 00000006A250: 4C120004
	s_waitcnt lgkmcnt(0)                                       // 00000006A254: BF89FC07
	v_add3_u32 v1, s8, s6, v5                                  // 00000006A258: D6550001 04140C08
	s_lshl_b32 s6, s3, 4                                       // 00000006A260: 84068403
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006A264: D73C0003 00020282
	v_add3_u32 v1, s10, s6, v6                                 // 00000006A26C: D6550001 04180C0A
	s_lshl_b32 s6, s4, 1                                       // 00000006A274: 84068104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006A278: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006A27C: D73C0005 00020282
	v_add3_u32 v1, s5, s6, v0                                  // 00000006A284: D6550001 04000C05
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006A28C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006A294: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006A298: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006A29C: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006A2A4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006A2AC: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A2B0: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006A2B8: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A2BC: 40020201
	s_clause 0x2                                               // 00000006A2C0: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006A2C4: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006A2CC: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 00000006A2D4: DC6A0000 007C0900
	s_nop 0                                                    // 00000006A2DC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A2E0: BFB60003
	s_endpgm                                                   // 00000006A2E4: BFB00000
subtract_get_group_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000006A2E8: BF800000
	.long 0xbf800000                                           // 00000006A2EC: BF800000
	.long 0xbf800000                                           // 00000006A2F0: BF800000
	.long 0xbf800000                                           // 00000006A2F4: BF800000
	.long 0xbf800000                                           // 00000006A2F8: BF800000
	.long 0xbf800000                                           // 00000006A2FC: BF800000

	.p2align	8
	.type	subtract_get_local_size_get_local_id,@function
	.size	subtract_get_local_size_get_local_id, subtract_get_local_size_get_local_id_symend-subtract_get_local_size_get_local_id
subtract_get_local_size_get_local_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006A300: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006A308: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006A30C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006A310: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006A314: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000006A318: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006A31C: 840E8204
	v_mov_b32_e32 v2, 0                                        // 00000006A320: 7E040280
	v_and_b32_e32 v10, 0x3ff, v0                               // 00000006A324: 361400FF 000003FF
	v_bfe_u32 v11, v0, 10, 10                                  // 00000006A32C: D610000B 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 00000006A334: D610000C 02292900
	s_mov_b32 s33, 0                                           // 00000006A33C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006A340: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006A344: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006A348: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006A34C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006A350: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006A354: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006A358: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006A35C: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006A360: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006A364: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006A368: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006A36C: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006A370: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006A374: 8205800B
	s_clause 0x2                                               // 00000006A378: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006A37C: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006A384: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006A38C: DC4A0000 09040002
	s_clause 0x2                                               // 00000006A394: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006A398: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006A3A0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A3A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006A3B0: BF89FC07
	v_add3_u32 v1, s4, s12, v10                                // 00000006A3B4: D6550001 04281804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006A3BC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006A3C0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v11                                // 00000006A3C8: D6550001 042C1A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006A3D0: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v12                                // 00000006A3D8: D6550001 04301C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006A3E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006A3E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006A3EC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006A3F0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006A3F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006A400: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006A404: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A408: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A410: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006A414: BF890BF7
	v_sub_nc_u32_e32 v2, v7, v10                               // 00000006A418: 4C041507
	s_waitcnt vmcnt(1)                                         // 00000006A41C: BF8907F7
	v_sub_nc_u32_e32 v7, v8, v11                               // 00000006A420: 4C0E1708
	s_waitcnt vmcnt(0)                                         // 00000006A424: BF8903F7
	v_sub_nc_u32_e32 v8, v9, v12                               // 00000006A428: 4C101909
	s_clause 0x2                                               // 00000006A42C: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006A430: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006A438: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006A440: DC6A0000 007C0800
	s_nop 0                                                    // 00000006A448: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A44C: BFB60003
	s_endpgm                                                   // 00000006A450: BFB00000
subtract_get_local_size_get_local_id_symend:
	.long 0xbf800000                                           // 00000006A454: BF800000
	.long 0xbf800000                                           // 00000006A458: BF800000
	.long 0xbf800000                                           // 00000006A45C: BF800000
	.long 0xbf800000                                           // 00000006A460: BF800000
	.long 0xbf800000                                           // 00000006A464: BF800000
	.long 0xbf800000                                           // 00000006A468: BF800000
	.long 0xbf800000                                           // 00000006A46C: BF800000
	.long 0xbf800000                                           // 00000006A470: BF800000
	.long 0xbf800000                                           // 00000006A474: BF800000
	.long 0xbf800000                                           // 00000006A478: BF800000
	.long 0xbf800000                                           // 00000006A47C: BF800000
	.long 0xbf800000                                           // 00000006A480: BF800000
	.long 0xbf800000                                           // 00000006A484: BF800000
	.long 0xbf800000                                           // 00000006A488: BF800000
	.long 0xbf800000                                           // 00000006A48C: BF800000
	.long 0xbf800000                                           // 00000006A490: BF800000
	.long 0xbf800000                                           // 00000006A494: BF800000
	.long 0xbf800000                                           // 00000006A498: BF800000
	.long 0xbf800000                                           // 00000006A49C: BF800000
	.long 0xbf800000                                           // 00000006A4A0: BF800000
	.long 0xbf800000                                           // 00000006A4A4: BF800000
	.long 0xbf800000                                           // 00000006A4A8: BF800000
	.long 0xbf800000                                           // 00000006A4AC: BF800000
	.long 0xbf800000                                           // 00000006A4B0: BF800000
	.long 0xbf800000                                           // 00000006A4B4: BF800000
	.long 0xbf800000                                           // 00000006A4B8: BF800000
	.long 0xbf800000                                           // 00000006A4BC: BF800000
	.long 0xbf800000                                           // 00000006A4C0: BF800000
	.long 0xbf800000                                           // 00000006A4C4: BF800000
	.long 0xbf800000                                           // 00000006A4C8: BF800000
	.long 0xbf800000                                           // 00000006A4CC: BF800000
	.long 0xbf800000                                           // 00000006A4D0: BF800000
	.long 0xbf800000                                           // 00000006A4D4: BF800000
	.long 0xbf800000                                           // 00000006A4D8: BF800000
	.long 0xbf800000                                           // 00000006A4DC: BF800000
	.long 0xbf800000                                           // 00000006A4E0: BF800000
	.long 0xbf800000                                           // 00000006A4E4: BF800000
	.long 0xbf800000                                           // 00000006A4E8: BF800000
	.long 0xbf800000                                           // 00000006A4EC: BF800000
	.long 0xbf800000                                           // 00000006A4F0: BF800000
	.long 0xbf800000                                           // 00000006A4F4: BF800000
	.long 0xbf800000                                           // 00000006A4F8: BF800000
	.long 0xbf800000                                           // 00000006A4FC: BF800000

	.p2align	8
	.type	subtract_get_global_id_get_local_id,@function
	.size	subtract_get_global_id_get_local_id, subtract_get_global_id_get_local_id_symend-subtract_get_global_id_get_local_id
subtract_get_global_id_get_local_id:
	s_clause 0x2                                               // 00000006A500: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A504: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006A50C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A514: F4040000 F8000008
	v_bfe_u32 v10, v0, 10, 10                                  // 00000006A51C: D610000A 02291500
	v_mov_b32_e32 v1, 0                                        // 00000006A524: 7E020280
	v_and_b32_e32 v9, 0x3ff, v0                                // 00000006A528: 361200FF 000003FF
	v_bfe_u32 v11, v0, 20, 10                                  // 00000006A530: D610000B 02292900
	s_mov_b32 s33, 0                                           // 00000006A538: BEA10080
	v_lshl_or_b32 v5, s3, 1, v10                               // 00000006A53C: D6560005 04290203
	v_mov_b32_e32 v2, v1                                       // 00000006A544: 7E040301
	v_lshl_or_b32 v0, s2, 1, v9                                // 00000006A548: D6560000 04250202
	v_lshl_or_b32 v7, s4, 2, v11                               // 00000006A550: D6560007 042D0404
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(VALU_DEP_4)// 00000006A558: BF870252
	v_lshlrev_b64 v[3:4], 2, v[0:1]                            // 00000006A55C: D73C0003 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006A564: BF89FC07
	v_add_nc_u32_e32 v0, s8, v0                                // 00000006A568: 4A000008
	v_dual_mov_b32 v6, v1 :: v_dual_add_nc_u32 v1, s10, v5     // 00000006A56C: CA200101 06000A0A
	v_add_nc_u32_e32 v5, s5, v7                                // 00000006A574: 4A0A0E05
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006A578: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006A580: 40080801
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006A584: BF870004
	v_lshlrev_b64 v[7:8], 2, v[1:2]                            // 00000006A588: D73C0007 00020282
	v_sub_nc_u32_e32 v2, v0, v9                                // 00000006A590: 4C041300
	v_sub_nc_u32_e32 v9, v1, v10                               // 00000006A594: 4C121501
	v_lshlrev_b64 v[0:1], 2, v[5:6]                            // 00000006A598: D73C0000 00020A82
	v_sub_nc_u32_e32 v10, v5, v11                              // 00000006A5A0: 4C141705
	v_add_co_u32 v5, vcc_lo, s0, v7                            // 00000006A5A4: D7006A05 00020E00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v8, vcc_lo             // 00000006A5AC: 400C1001
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006A5B0: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A5B4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A5BC: 40020201
	s_clause 0x2                                               // 00000006A5C0: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006A5C4: DC6A0000 007C0203
	global_store_b32 v[5:6], v9, off                           // 00000006A5CC: DC6A0000 007C0905
	global_store_b32 v[0:1], v10, off                          // 00000006A5D4: DC6A0000 007C0A00
	s_nop 0                                                    // 00000006A5DC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A5E0: BFB60003
	s_endpgm                                                   // 00000006A5E4: BFB00000
subtract_get_global_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000006A5E8: BF800000
	.long 0xbf800000                                           // 00000006A5EC: BF800000
	.long 0xbf800000                                           // 00000006A5F0: BF800000
	.long 0xbf800000                                           // 00000006A5F4: BF800000
	.long 0xbf800000                                           // 00000006A5F8: BF800000
	.long 0xbf800000                                           // 00000006A5FC: BF800000

	.p2align	8
	.type	subtract_get_global_size_get_local_id,@function
	.size	subtract_get_global_size_get_local_id, subtract_get_global_size_get_local_id_symend-subtract_get_global_size_get_local_id
subtract_get_global_size_get_local_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000006A600: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000006A60C: 84028402
	v_bfe_u32 v6, v0, 10, 10                                   // 00000006A610: D6100006 02291500
	s_lshl_b32 s3, s3, 1                                       // 00000006A618: 84038103
	s_clause 0x1                                               // 00000006A61C: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006A620: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006A628: DC4A0026 08000002
	s_clause 0x3                                               // 00000006A630: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A634: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006A63C: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006A644: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006A64C: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A654: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 00000006A65C: 84048104
	s_mov_b32 s33, 0                                           // 00000006A660: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006A664: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000006A668: D6550001 04140408
	s_lshl_b32 s2, s12, 4                                      // 00000006A670: 8402840C
	s_lshl_b32 s6, s13, 1                                      // 00000006A674: 8406810D
	v_sub_nc_u32_e32 v9, s2, v5                                // 00000006A678: 4C120A02
	v_sub_nc_u32_e32 v10, s6, v6                               // 00000006A67C: 4C140C06
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006A680: D73C0003 00020282
	v_add3_u32 v1, s10, s3, v6                                 // 00000006A688: D6550001 0418060A
	s_lshl_b32 s3, s14, 1                                      // 00000006A690: 8403810E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006A694: BF870119
	v_sub_nc_u32_e32 v11, s3, v0                               // 00000006A698: 4C160003
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006A69C: D73C0005 00020282
	v_add3_u32 v1, s5, s4, v0                                  // 00000006A6A4: D6550001 04000805
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006A6AC: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006A6B4: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006A6B8: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006A6BC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006A6C4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006A6CC: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A6D0: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006A6D8: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A6DC: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006A6E0: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006A6E4: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006A6E8: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006A6F0: BF8903F7
	v_add_nc_u32_e32 v8, v11, v8                               // 00000006A6F4: 4A10110B
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006A6F8: BF870193
	v_add_nc_u32_e32 v2, v10, v2                               // 00000006A6FC: 4A04050A
	v_add_nc_u32_e32 v7, v9, v7                                // 00000006A700: 4A0E0F09
	s_clause 0x2                                               // 00000006A704: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006A708: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006A710: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006A718: DC6A0000 007C0800
	s_nop 0                                                    // 00000006A720: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A724: BFB60003
	s_endpgm                                                   // 00000006A728: BFB00000
subtract_get_global_size_get_local_id_symend:
	.long 0xbf800000                                           // 00000006A72C: BF800000
	.long 0xbf800000                                           // 00000006A730: BF800000
	.long 0xbf800000                                           // 00000006A734: BF800000
	.long 0xbf800000                                           // 00000006A738: BF800000
	.long 0xbf800000                                           // 00000006A73C: BF800000
	.long 0xbf800000                                           // 00000006A740: BF800000
	.long 0xbf800000                                           // 00000006A744: BF800000
	.long 0xbf800000                                           // 00000006A748: BF800000
	.long 0xbf800000                                           // 00000006A74C: BF800000
	.long 0xbf800000                                           // 00000006A750: BF800000
	.long 0xbf800000                                           // 00000006A754: BF800000
	.long 0xbf800000                                           // 00000006A758: BF800000
	.long 0xbf800000                                           // 00000006A75C: BF800000
	.long 0xbf800000                                           // 00000006A760: BF800000
	.long 0xbf800000                                           // 00000006A764: BF800000
	.long 0xbf800000                                           // 00000006A768: BF800000
	.long 0xbf800000                                           // 00000006A76C: BF800000
	.long 0xbf800000                                           // 00000006A770: BF800000
	.long 0xbf800000                                           // 00000006A774: BF800000
	.long 0xbf800000                                           // 00000006A778: BF800000
	.long 0xbf800000                                           // 00000006A77C: BF800000
	.long 0xbf800000                                           // 00000006A780: BF800000
	.long 0xbf800000                                           // 00000006A784: BF800000
	.long 0xbf800000                                           // 00000006A788: BF800000
	.long 0xbf800000                                           // 00000006A78C: BF800000
	.long 0xbf800000                                           // 00000006A790: BF800000
	.long 0xbf800000                                           // 00000006A794: BF800000
	.long 0xbf800000                                           // 00000006A798: BF800000
	.long 0xbf800000                                           // 00000006A79C: BF800000
	.long 0xbf800000                                           // 00000006A7A0: BF800000
	.long 0xbf800000                                           // 00000006A7A4: BF800000
	.long 0xbf800000                                           // 00000006A7A8: BF800000
	.long 0xbf800000                                           // 00000006A7AC: BF800000
	.long 0xbf800000                                           // 00000006A7B0: BF800000
	.long 0xbf800000                                           // 00000006A7B4: BF800000
	.long 0xbf800000                                           // 00000006A7B8: BF800000
	.long 0xbf800000                                           // 00000006A7BC: BF800000
	.long 0xbf800000                                           // 00000006A7C0: BF800000
	.long 0xbf800000                                           // 00000006A7C4: BF800000
	.long 0xbf800000                                           // 00000006A7C8: BF800000
	.long 0xbf800000                                           // 00000006A7CC: BF800000
	.long 0xbf800000                                           // 00000006A7D0: BF800000
	.long 0xbf800000                                           // 00000006A7D4: BF800000
	.long 0xbf800000                                           // 00000006A7D8: BF800000
	.long 0xbf800000                                           // 00000006A7DC: BF800000
	.long 0xbf800000                                           // 00000006A7E0: BF800000
	.long 0xbf800000                                           // 00000006A7E4: BF800000
	.long 0xbf800000                                           // 00000006A7E8: BF800000
	.long 0xbf800000                                           // 00000006A7EC: BF800000
	.long 0xbf800000                                           // 00000006A7F0: BF800000
	.long 0xbf800000                                           // 00000006A7F4: BF800000
	.long 0xbf800000                                           // 00000006A7F8: BF800000
	.long 0xbf800000                                           // 00000006A7FC: BF800000

	.p2align	8
	.type	subtract_get_num_groups_get_local_id,@function
	.size	subtract_get_num_groups_get_local_id, subtract_get_num_groups_get_local_id_symend-subtract_get_num_groups_get_local_id
subtract_get_num_groups_get_local_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000006A800: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006A80C: 84028102
	v_bfe_u32 v6, v0, 10, 10                                   // 00000006A810: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006A818: D6100000 02292900
	s_clause 0x1                                               // 00000006A820: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006A824: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006A82C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006A834: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006A838: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006A840: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006A848: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006A850: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000006A858: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006A85C: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000006A860: D6550001 04140408
	s_lshl_b32 s2, s3, 1                                       // 00000006A868: 84028103
	v_sub_nc_u32_e32 v9, s12, v5                               // 00000006A86C: 4C120A0C
	v_sub_nc_u32_e32 v10, s13, v6                              // 00000006A870: 4C140C0D
	v_sub_nc_u32_e32 v11, s14, v0                              // 00000006A874: 4C16000E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006A878: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 00000006A880: D6550001 0418040A
	s_lshl_b32 s2, s4, 2                                       // 00000006A888: 84028204
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006A88C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006A890: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 00000006A898: D6550001 04000405
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006A8A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006A8A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006A8AC: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006A8B0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006A8B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006A8C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006A8C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 00000006A8CC: BF870154
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006A8D0: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006A8D4: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006A8D8: 7C7A0E80
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006A8DC: 32040E90
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v9, vcc_lo              // 00000006A8E0: 400E1280
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000006A8E4: 7C7A0480
	v_add_co_ci_u32_e32 v2, vcc_lo, 0, v10, vcc_lo             // 00000006A8E8: 40041480
	s_waitcnt vmcnt(0)                                         // 00000006A8EC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006A8F0: 7C7A1080
	v_add_co_ci_u32_e32 v8, vcc_lo, 0, v11, vcc_lo             // 00000006A8F4: 40101680
	s_clause 0x2                                               // 00000006A8F8: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006A8FC: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006A904: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006A90C: DC6A0000 007C0800
	s_nop 0                                                    // 00000006A914: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006A918: BFB60003
	s_endpgm                                                   // 00000006A91C: BFB00000
subtract_get_num_groups_get_local_id_symend:
	.long 0xbf800000                                           // 00000006A920: BF800000
	.long 0xbf800000                                           // 00000006A924: BF800000
	.long 0xbf800000                                           // 00000006A928: BF800000
	.long 0xbf800000                                           // 00000006A92C: BF800000
	.long 0xbf800000                                           // 00000006A930: BF800000
	.long 0xbf800000                                           // 00000006A934: BF800000
	.long 0xbf800000                                           // 00000006A938: BF800000
	.long 0xbf800000                                           // 00000006A93C: BF800000
	.long 0xbf800000                                           // 00000006A940: BF800000
	.long 0xbf800000                                           // 00000006A944: BF800000
	.long 0xbf800000                                           // 00000006A948: BF800000
	.long 0xbf800000                                           // 00000006A94C: BF800000
	.long 0xbf800000                                           // 00000006A950: BF800000
	.long 0xbf800000                                           // 00000006A954: BF800000
	.long 0xbf800000                                           // 00000006A958: BF800000
	.long 0xbf800000                                           // 00000006A95C: BF800000
	.long 0xbf800000                                           // 00000006A960: BF800000
	.long 0xbf800000                                           // 00000006A964: BF800000
	.long 0xbf800000                                           // 00000006A968: BF800000
	.long 0xbf800000                                           // 00000006A96C: BF800000
	.long 0xbf800000                                           // 00000006A970: BF800000
	.long 0xbf800000                                           // 00000006A974: BF800000
	.long 0xbf800000                                           // 00000006A978: BF800000
	.long 0xbf800000                                           // 00000006A97C: BF800000
	.long 0xbf800000                                           // 00000006A980: BF800000
	.long 0xbf800000                                           // 00000006A984: BF800000
	.long 0xbf800000                                           // 00000006A988: BF800000
	.long 0xbf800000                                           // 00000006A98C: BF800000
	.long 0xbf800000                                           // 00000006A990: BF800000
	.long 0xbf800000                                           // 00000006A994: BF800000
	.long 0xbf800000                                           // 00000006A998: BF800000
	.long 0xbf800000                                           // 00000006A99C: BF800000
	.long 0xbf800000                                           // 00000006A9A0: BF800000
	.long 0xbf800000                                           // 00000006A9A4: BF800000
	.long 0xbf800000                                           // 00000006A9A8: BF800000
	.long 0xbf800000                                           // 00000006A9AC: BF800000
	.long 0xbf800000                                           // 00000006A9B0: BF800000
	.long 0xbf800000                                           // 00000006A9B4: BF800000
	.long 0xbf800000                                           // 00000006A9B8: BF800000
	.long 0xbf800000                                           // 00000006A9BC: BF800000
	.long 0xbf800000                                           // 00000006A9C0: BF800000
	.long 0xbf800000                                           // 00000006A9C4: BF800000
	.long 0xbf800000                                           // 00000006A9C8: BF800000
	.long 0xbf800000                                           // 00000006A9CC: BF800000
	.long 0xbf800000                                           // 00000006A9D0: BF800000
	.long 0xbf800000                                           // 00000006A9D4: BF800000
	.long 0xbf800000                                           // 00000006A9D8: BF800000
	.long 0xbf800000                                           // 00000006A9DC: BF800000
	.long 0xbf800000                                           // 00000006A9E0: BF800000
	.long 0xbf800000                                           // 00000006A9E4: BF800000
	.long 0xbf800000                                           // 00000006A9E8: BF800000
	.long 0xbf800000                                           // 00000006A9EC: BF800000
	.long 0xbf800000                                           // 00000006A9F0: BF800000
	.long 0xbf800000                                           // 00000006A9F4: BF800000
	.long 0xbf800000                                           // 00000006A9F8: BF800000
	.long 0xbf800000                                           // 00000006A9FC: BF800000

	.p2align	8
	.type	subtract_get_work_dim_get_local_id,@function
	.size	subtract_get_work_dim_get_local_id, subtract_get_work_dim_get_local_id_symend-subtract_get_work_dim_get_local_id
subtract_get_work_dim_get_local_id:
	s_clause 0x3                                               // 00000006AA00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006AA04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000006AA0C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 00000006AA14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006AA1C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000006AA24: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006AA30: 84028102
	v_bfe_u32 v6, v0, 10, 10                                   // 00000006AA34: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006AA3C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006AA44: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006AA48: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000006AA4C: D6550001 04140408
	s_lshl_b32 s2, s3, 1                                       // 00000006AA54: 84028103
	s_and_b32 s3, s5, 0xffff                                   // 00000006AA58: 8B03FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006AA60: BF870119
	v_sub_nc_u32_e32 v7, s3, v5                                // 00000006AA64: 4C0E0A03
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006AA68: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 00000006AA70: D6550001 0418040A
	s_lshl_b32 s2, s4, 2                                       // 00000006AA78: 84028204
	v_sub_nc_u32_e32 v8, s3, v6                                // 00000006AA7C: 4C100C03
	v_sub_nc_u32_e32 v9, s3, v0                                // 00000006AA80: 4C120003
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006AA84: BF8701C3
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006AA88: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 00000006AA90: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006AA98: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006AAA0: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006AAA4: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006AAAC: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006AAB4: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006AAB8: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006AABC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006AAC4: 40020201
	s_clause 0x2                                               // 00000006AAC8: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006AACC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006AAD4: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 00000006AADC: DC6A0000 007C0900
	s_nop 0                                                    // 00000006AAE4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006AAE8: BFB60003
	s_endpgm                                                   // 00000006AAEC: BFB00000
subtract_get_work_dim_get_local_id_symend:
	.long 0xbf800000                                           // 00000006AAF0: BF800000
	.long 0xbf800000                                           // 00000006AAF4: BF800000
	.long 0xbf800000                                           // 00000006AAF8: BF800000
	.long 0xbf800000                                           // 00000006AAFC: BF800000

	.p2align	8
	.type	subtract_x_get_group_id,@function
	.size	subtract_x_get_group_id, subtract_x_get_group_id_symend-subtract_x_get_group_id
subtract_x_get_group_id:
	s_clause 0x3                                               // 00000006AB00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006AB04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 00000006AB0C: F4000140 F8000008
	s_load_b32 s6, s[0:1], 0x48                                // 00000006AB14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006AB1C: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006AB24: CA240080 020000FF 000003FF
	s_lshl_b32 s7, s2, 4                                       // 00000006AB30: 84078402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006AB34: D6100005 02291500
	s_waitcnt lgkmcnt(0)                                       // 00000006AB3C: BF89FC07
	s_lshl_b32 s9, s3, 1                                       // 00000006AB40: 84098103
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006AB44: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006AB4C: BEA10080
	v_add3_u32 v1, s8, s7, v1                                  // 00000006AB50: D6550001 04040E08
	s_lshl_b32 s7, s4, 1                                       // 00000006AB58: 84078104
	s_sub_i32 s2, s5, s2                                       // 00000006AB5C: 81820205
	s_sub_i32 s3, s5, s3                                       // 00000006AB60: 81830305
	s_sub_i32 s4, s5, s4                                       // 00000006AB64: 81840405
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006AB68: D73C0003 00020282
	v_add3_u32 v1, s10, s9, v5                                 // 00000006AB70: D6550001 0414120A
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 00000006AB78: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006AB80: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006AB84: D73C0005 00020282
	v_add3_u32 v1, s6, s7, v0                                  // 00000006AB8C: D6550001 04000E06
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006AB94: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006AB9C: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006ABA0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006ABA8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006ABB0: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 00000006ABB4: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006ABB8: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006ABBC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006ABC4: 40020201
	s_clause 0x2                                               // 00000006ABC8: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006ABCC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006ABD4: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006ABDC: DC6A0000 007C0200
	s_nop 0                                                    // 00000006ABE4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006ABE8: BFB60003
	s_endpgm                                                   // 00000006ABEC: BFB00000
subtract_x_get_group_id_symend:
	.long 0xbf800000                                           // 00000006ABF0: BF800000
	.long 0xbf800000                                           // 00000006ABF4: BF800000
	.long 0xbf800000                                           // 00000006ABF8: BF800000
	.long 0xbf800000                                           // 00000006ABFC: BF800000

	.p2align	8
	.type	subtract_get_global_offset_get_group_id,@function
	.size	subtract_get_global_offset_get_group_id, subtract_get_global_offset_get_group_id_symend-subtract_get_global_offset_get_group_id
subtract_get_global_offset_get_group_id:
	s_clause 0x2                                               // 00000006AC00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006AC04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006AC0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006AC14: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006AC1C: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 00000006AC28: 84068102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006AC2C: D6100005 02291500
	s_lshl_b32 s7, s3, 4                                       // 00000006AC34: 84078403
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006AC38: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006AC40: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006AC44: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 00000006AC48: D6550001 04040C08
	s_lshl_b32 s6, s4, 1                                       // 00000006AC50: 84068104
	s_sub_i32 s2, s8, s2                                       // 00000006AC54: 81820208
	s_sub_i32 s3, s10, s3                                      // 00000006AC58: 8183030A
	s_sub_i32 s4, s5, s4                                       // 00000006AC5C: 81840405
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006AC60: D73C0003 00020282
	v_add3_u32 v1, s10, s7, v5                                 // 00000006AC68: D6550001 04140E0A
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 00000006AC70: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006AC78: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006AC7C: D73C0005 00020282
	v_add3_u32 v1, s5, s6, v0                                  // 00000006AC84: D6550001 04000C05
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006AC8C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006AC94: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006AC98: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006ACA0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006ACA8: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 00000006ACAC: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006ACB0: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006ACB4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006ACBC: 40020201
	s_clause 0x2                                               // 00000006ACC0: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006ACC4: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006ACCC: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006ACD4: DC6A0000 007C0200
	s_nop 0                                                    // 00000006ACDC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006ACE0: BFB60003
	s_endpgm                                                   // 00000006ACE4: BFB00000
subtract_get_global_offset_get_group_id_symend:
	.long 0xbf800000                                           // 00000006ACE8: BF800000
	.long 0xbf800000                                           // 00000006ACEC: BF800000
	.long 0xbf800000                                           // 00000006ACF0: BF800000
	.long 0xbf800000                                           // 00000006ACF4: BF800000
	.long 0xbf800000                                           // 00000006ACF8: BF800000
	.long 0xbf800000                                           // 00000006ACFC: BF800000

	.p2align	8
	.type	subtract_get_local_id_get_group_id,@function
	.size	subtract_get_local_id_get_group_id, subtract_get_local_id_get_group_id_symend-subtract_get_local_id_get_group_id
subtract_get_local_id_get_group_id:
	s_clause 0x2                                               // 00000006AD00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006AD04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006AD0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006AD14: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000006AD1C: CA240080 020400FF 000003FF
	s_lshl_b32 s6, s2, 3                                       // 00000006AD28: 84068302
	v_bfe_u32 v6, v0, 10, 10                                   // 00000006AD2C: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006AD34: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006AD3C: BF8701A3
	v_subrev_nc_u32_e32 v7, s2, v5                             // 00000006AD40: 4E0E0A02
	s_mov_b32 s33, 0                                           // 00000006AD44: BEA10080
	v_subrev_nc_u32_e32 v8, s3, v6                             // 00000006AD48: 4E100C03
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000006AD4C: BF8700C3
	v_subrev_nc_u32_e32 v9, s4, v0                             // 00000006AD50: 4E120004
	s_waitcnt lgkmcnt(0)                                       // 00000006AD54: BF89FC07
	v_add3_u32 v1, s8, s6, v5                                  // 00000006AD58: D6550001 04140C08
	s_lshl_b32 s6, s3, 2                                       // 00000006AD60: 84068203
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006AD64: D73C0003 00020282
	v_add3_u32 v1, s10, s6, v6                                 // 00000006AD6C: D6550001 04180C0A
	s_lshl_b32 s6, s4, 1                                       // 00000006AD74: 84068104
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006AD78: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006AD7C: D73C0005 00020282
	v_add3_u32 v1, s5, s6, v0                                  // 00000006AD84: D6550001 04000C05
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006AD8C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006AD94: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006AD98: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006AD9C: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006ADA4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006ADAC: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006ADB0: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006ADB8: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006ADBC: 40020201
	s_clause 0x2                                               // 00000006ADC0: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006ADC4: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006ADCC: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 00000006ADD4: DC6A0000 007C0900
	s_nop 0                                                    // 00000006ADDC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006ADE0: BFB60003
	s_endpgm                                                   // 00000006ADE4: BFB00000
subtract_get_local_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000006ADE8: BF800000
	.long 0xbf800000                                           // 00000006ADEC: BF800000
	.long 0xbf800000                                           // 00000006ADF0: BF800000
	.long 0xbf800000                                           // 00000006ADF4: BF800000
	.long 0xbf800000                                           // 00000006ADF8: BF800000
	.long 0xbf800000                                           // 00000006ADFC: BF800000

	.p2align	8
	.type	subtract_get_group_id_get_group_id,@function
	.size	subtract_get_group_id_get_group_id, subtract_get_group_id_get_group_id_symend-subtract_get_group_id_get_group_id
subtract_get_group_id_get_group_id:
	s_clause 0x2                                               // 00000006AE00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006AE04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006AE0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006AE14: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006AE1C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006AE28: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006AE2C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006AE34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006AE3C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006AE40: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006AE44: D6550001 04040408
	s_lshl_b32 s2, s3, 4                                       // 00000006AE4C: 84028403
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006AE50: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006AE54: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006AE5C: D6550001 0414040A
	s_lshl_b32 s2, s4, 1                                       // 00000006AE64: 84028104
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006AE68: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 00000006AE70: D6550001 04000405
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006AE78: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006AE7C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006AE84: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006AE88: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006AE90: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006AE98: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006AE9C: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006AEA0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006AEA8: 40020201
	s_clause 0x2                                               // 00000006AEAC: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006AEB0: DC6A0000 007C0203
	global_store_b32 v[5:6], v2, off                           // 00000006AEB8: DC6A0000 007C0205
	global_store_b32 v[0:1], v2, off                           // 00000006AEC0: DC6A0000 007C0200
	s_nop 0                                                    // 00000006AEC8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006AECC: BFB60003
	s_endpgm                                                   // 00000006AED0: BFB00000
subtract_get_group_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000006AED4: BF800000
	.long 0xbf800000                                           // 00000006AED8: BF800000
	.long 0xbf800000                                           // 00000006AEDC: BF800000
	.long 0xbf800000                                           // 00000006AEE0: BF800000
	.long 0xbf800000                                           // 00000006AEE4: BF800000
	.long 0xbf800000                                           // 00000006AEE8: BF800000
	.long 0xbf800000                                           // 00000006AEEC: BF800000
	.long 0xbf800000                                           // 00000006AEF0: BF800000
	.long 0xbf800000                                           // 00000006AEF4: BF800000
	.long 0xbf800000                                           // 00000006AEF8: BF800000
	.long 0xbf800000                                           // 00000006AEFC: BF800000

	.p2align	8
	.type	subtract_get_local_size_get_group_id,@function
	.size	subtract_get_local_size_get_group_id, subtract_get_local_size_get_group_id_symend-subtract_get_local_size_get_group_id
subtract_get_local_size_get_group_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006AF00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006AF08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006AF0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006AF10: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006AF14: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000006AF18: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006AF1C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006AF20: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006AF2C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006AF34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006AF3C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006AF40: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000006AF44: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006AF48: BF8704C9
	s_add_u32 s6, s5, s6                                       // 00000006AF4C: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000006AF50: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006AF54: BF0A0903
	s_cselect_b32 s8, 14, 20                                   // 00000006AF58: 9808948E
	s_add_u32 s8, s5, s8                                       // 00000006AF5C: 80080805
	s_addc_u32 s9, s11, 0                                      // 00000006AF60: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 00000006AF64: BF0A0A04
	s_cselect_b32 s10, 16, 22                                  // 00000006AF68: 980A9690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006AF6C: BF870009
	s_add_u32 s10, s5, s10                                     // 00000006AF70: 800A0A05
	s_addc_u32 s11, s11, 0                                     // 00000006AF74: 820B800B
	s_clause 0x2                                               // 00000006AF78: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006AF7C: DC4A0000 07060002
	global_load_u16 v8, v2, s[8:9]                             // 00000006AF84: DC4A0000 08080002
	global_load_u16 v9, v2, s[10:11]                           // 00000006AF8C: DC4A0000 090A0002
	s_clause 0x2                                               // 00000006AF94: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006AF98: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006AFA0: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006AFA8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006AFB0: BF89FC07
	v_add3_u32 v1, s8, s12, v1                                 // 00000006AFB4: D6550001 04041808
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006AFBC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006AFC0: D73C0003 00020282
	v_add3_u32 v1, s10, s13, v5                                // 00000006AFC8: D6550001 04141A0A
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006AFD0: D73C0005 00020282
	v_add3_u32 v1, s5, s14, v0                                 // 00000006AFD8: D6550001 04001C05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006AFE0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006AFE4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006AFEC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006AFF0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006AFF8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006B000: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006B004: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B008: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B010: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006B014: BF890BF7
	v_subrev_nc_u32_e32 v2, s2, v7                             // 00000006B018: 4E040E02
	s_waitcnt vmcnt(1)                                         // 00000006B01C: BF8907F7
	v_subrev_nc_u32_e32 v7, s3, v8                             // 00000006B020: 4E0E1003
	s_waitcnt vmcnt(0)                                         // 00000006B024: BF8903F7
	v_subrev_nc_u32_e32 v8, s4, v9                             // 00000006B028: 4E101204
	s_clause 0x2                                               // 00000006B02C: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006B030: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006B038: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006B040: DC6A0000 007C0800
	s_nop 0                                                    // 00000006B048: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B04C: BFB60003
	s_endpgm                                                   // 00000006B050: BFB00000
subtract_get_local_size_get_group_id_symend:
	.long 0xbf800000                                           // 00000006B054: BF800000
	.long 0xbf800000                                           // 00000006B058: BF800000
	.long 0xbf800000                                           // 00000006B05C: BF800000
	.long 0xbf800000                                           // 00000006B060: BF800000
	.long 0xbf800000                                           // 00000006B064: BF800000
	.long 0xbf800000                                           // 00000006B068: BF800000
	.long 0xbf800000                                           // 00000006B06C: BF800000
	.long 0xbf800000                                           // 00000006B070: BF800000
	.long 0xbf800000                                           // 00000006B074: BF800000
	.long 0xbf800000                                           // 00000006B078: BF800000
	.long 0xbf800000                                           // 00000006B07C: BF800000
	.long 0xbf800000                                           // 00000006B080: BF800000
	.long 0xbf800000                                           // 00000006B084: BF800000
	.long 0xbf800000                                           // 00000006B088: BF800000
	.long 0xbf800000                                           // 00000006B08C: BF800000
	.long 0xbf800000                                           // 00000006B090: BF800000
	.long 0xbf800000                                           // 00000006B094: BF800000
	.long 0xbf800000                                           // 00000006B098: BF800000
	.long 0xbf800000                                           // 00000006B09C: BF800000
	.long 0xbf800000                                           // 00000006B0A0: BF800000
	.long 0xbf800000                                           // 00000006B0A4: BF800000
	.long 0xbf800000                                           // 00000006B0A8: BF800000
	.long 0xbf800000                                           // 00000006B0AC: BF800000
	.long 0xbf800000                                           // 00000006B0B0: BF800000
	.long 0xbf800000                                           // 00000006B0B4: BF800000
	.long 0xbf800000                                           // 00000006B0B8: BF800000
	.long 0xbf800000                                           // 00000006B0BC: BF800000
	.long 0xbf800000                                           // 00000006B0C0: BF800000
	.long 0xbf800000                                           // 00000006B0C4: BF800000
	.long 0xbf800000                                           // 00000006B0C8: BF800000
	.long 0xbf800000                                           // 00000006B0CC: BF800000
	.long 0xbf800000                                           // 00000006B0D0: BF800000
	.long 0xbf800000                                           // 00000006B0D4: BF800000
	.long 0xbf800000                                           // 00000006B0D8: BF800000
	.long 0xbf800000                                           // 00000006B0DC: BF800000
	.long 0xbf800000                                           // 00000006B0E0: BF800000
	.long 0xbf800000                                           // 00000006B0E4: BF800000
	.long 0xbf800000                                           // 00000006B0E8: BF800000
	.long 0xbf800000                                           // 00000006B0EC: BF800000
	.long 0xbf800000                                           // 00000006B0F0: BF800000
	.long 0xbf800000                                           // 00000006B0F4: BF800000
	.long 0xbf800000                                           // 00000006B0F8: BF800000
	.long 0xbf800000                                           // 00000006B0FC: BF800000

	.p2align	8
	.type	subtract_get_global_id_get_group_id,@function
	.size	subtract_get_global_id_get_group_id, subtract_get_global_id_get_group_id_symend-subtract_get_global_id_get_group_id
subtract_get_global_id_get_group_id:
	s_clause 0x2                                               // 00000006B100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006B10C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B114: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006B11C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006B128: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006B130: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006B138: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B13C: BF870193
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000006B140: D6560000 04090202
	v_lshl_or_b32 v5, s3, 1, v3                                // 00000006B148: D6560005 040D0203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006B150: BF870223
	v_lshl_or_b32 v7, s4, 2, v4                                // 00000006B154: D6560007 04110404
	v_mov_b32_e32 v2, v1                                       // 00000006B15C: 7E040301
	v_lshlrev_b64 v[3:4], 2, v[0:1]                            // 00000006B160: D73C0003 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006B168: BF89FC07
	v_dual_mov_b32 v6, v1 :: v_dual_add_nc_u32 v1, s10, v5     // 00000006B16C: CA200101 06000A0A
	v_add_nc_u32_e32 v5, s5, v7                                // 00000006B174: 4A0A0E05
	v_add_nc_u32_e32 v0, s8, v0                                // 00000006B178: 4A000008
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006B17C: BF870214
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006B180: D7006A03 00020600
	v_lshlrev_b64 v[7:8], 2, v[1:2]                            // 00000006B188: D73C0007 00020282
	v_subrev_nc_u32_e32 v9, s3, v1                             // 00000006B190: 4E120203
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006B194: BF870004
	v_subrev_nc_u32_e32 v2, s2, v0                             // 00000006B198: 4E040002
	v_lshlrev_b64 v[0:1], 2, v[5:6]                            // 00000006B19C: D73C0000 00020A82
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006B1A4: 40080801
	v_subrev_nc_u32_e32 v10, s4, v5                            // 00000006B1A8: 4E140A04
	v_add_co_u32 v5, vcc_lo, s0, v7                            // 00000006B1AC: D7006A05 00020E00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v8, vcc_lo             // 00000006B1B4: 400C1001
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B1B8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B1C0: 40020201
	s_clause 0x2                                               // 00000006B1C4: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006B1C8: DC6A0000 007C0203
	global_store_b32 v[5:6], v9, off                           // 00000006B1D0: DC6A0000 007C0905
	global_store_b32 v[0:1], v10, off                          // 00000006B1D8: DC6A0000 007C0A00
	s_nop 0                                                    // 00000006B1E0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B1E4: BFB60003
	s_endpgm                                                   // 00000006B1E8: BFB00000
subtract_get_global_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000006B1EC: BF800000
	.long 0xbf800000                                           // 00000006B1F0: BF800000
	.long 0xbf800000                                           // 00000006B1F4: BF800000
	.long 0xbf800000                                           // 00000006B1F8: BF800000
	.long 0xbf800000                                           // 00000006B1FC: BF800000

	.p2align	8
	.type	subtract_get_global_size_get_group_id,@function
	.size	subtract_get_global_size_get_group_id, subtract_get_global_size_get_group_id_symend-subtract_get_global_size_get_group_id
subtract_get_global_size_get_group_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006B200: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 4                                       // 00000006B20C: 84068402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006B210: D6100005 02291500
	s_lshl_b32 s7, s3, 1                                       // 00000006B218: 84078103
	s_clause 0x1                                               // 00000006B21C: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006B220: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006B228: DC4A0026 08000002
	s_clause 0x3                                               // 00000006B230: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B234: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006B23C: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006B244: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006B24C: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B254: D6100000 02292900
	s_waitcnt lgkmcnt(0)                                       // 00000006B25C: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000006B260: 84098104
	s_mov_b32 s33, 0                                           // 00000006B264: BEA10080
	v_add3_u32 v1, s8, s6, v1                                  // 00000006B268: D6550001 04040C08
	s_lshl_b32 s6, s12, 4                                      // 00000006B270: 8406840C
	s_lshl_b32 s8, s13, 1                                      // 00000006B274: 8408810D
	s_sub_i32 s2, s6, s2                                       // 00000006B278: 81820206
	s_sub_i32 s3, s8, s3                                       // 00000006B27C: 81830308
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006B280: D73C0003 00020282
	v_add3_u32 v1, s10, s7, v5                                 // 00000006B288: D6550001 04140E0A
	s_lshl_b32 s7, s14, 1                                      // 00000006B290: 8407810E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006B294: BF870099
	s_sub_i32 s4, s7, s4                                       // 00000006B298: 81840407
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006B29C: D73C0005 00020282
	v_add3_u32 v1, s5, s9, v0                                  // 00000006B2A4: D6550001 04001205
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006B2AC: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006B2B4: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006B2B8: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006B2BC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006B2C4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006B2CC: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B2D0: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006B2D8: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B2DC: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006B2E0: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006B2E4: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006B2E8: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006B2F0: BF8903F7
	v_add_nc_u32_e32 v8, s4, v8                                // 00000006B2F4: 4A101004
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006B2F8: BF870193
	v_add_nc_u32_e32 v2, s3, v2                                // 00000006B2FC: 4A040403
	v_add_nc_u32_e32 v7, s2, v7                                // 00000006B300: 4A0E0E02
	s_clause 0x2                                               // 00000006B304: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006B308: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006B310: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006B318: DC6A0000 007C0800
	s_nop 0                                                    // 00000006B320: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B324: BFB60003
	s_endpgm                                                   // 00000006B328: BFB00000
subtract_get_global_size_get_group_id_symend:
	.long 0xbf800000                                           // 00000006B32C: BF800000
	.long 0xbf800000                                           // 00000006B330: BF800000
	.long 0xbf800000                                           // 00000006B334: BF800000
	.long 0xbf800000                                           // 00000006B338: BF800000
	.long 0xbf800000                                           // 00000006B33C: BF800000
	.long 0xbf800000                                           // 00000006B340: BF800000
	.long 0xbf800000                                           // 00000006B344: BF800000
	.long 0xbf800000                                           // 00000006B348: BF800000
	.long 0xbf800000                                           // 00000006B34C: BF800000
	.long 0xbf800000                                           // 00000006B350: BF800000
	.long 0xbf800000                                           // 00000006B354: BF800000
	.long 0xbf800000                                           // 00000006B358: BF800000
	.long 0xbf800000                                           // 00000006B35C: BF800000
	.long 0xbf800000                                           // 00000006B360: BF800000
	.long 0xbf800000                                           // 00000006B364: BF800000
	.long 0xbf800000                                           // 00000006B368: BF800000
	.long 0xbf800000                                           // 00000006B36C: BF800000
	.long 0xbf800000                                           // 00000006B370: BF800000
	.long 0xbf800000                                           // 00000006B374: BF800000
	.long 0xbf800000                                           // 00000006B378: BF800000
	.long 0xbf800000                                           // 00000006B37C: BF800000
	.long 0xbf800000                                           // 00000006B380: BF800000
	.long 0xbf800000                                           // 00000006B384: BF800000
	.long 0xbf800000                                           // 00000006B388: BF800000
	.long 0xbf800000                                           // 00000006B38C: BF800000
	.long 0xbf800000                                           // 00000006B390: BF800000
	.long 0xbf800000                                           // 00000006B394: BF800000
	.long 0xbf800000                                           // 00000006B398: BF800000
	.long 0xbf800000                                           // 00000006B39C: BF800000
	.long 0xbf800000                                           // 00000006B3A0: BF800000
	.long 0xbf800000                                           // 00000006B3A4: BF800000
	.long 0xbf800000                                           // 00000006B3A8: BF800000
	.long 0xbf800000                                           // 00000006B3AC: BF800000
	.long 0xbf800000                                           // 00000006B3B0: BF800000
	.long 0xbf800000                                           // 00000006B3B4: BF800000
	.long 0xbf800000                                           // 00000006B3B8: BF800000
	.long 0xbf800000                                           // 00000006B3BC: BF800000
	.long 0xbf800000                                           // 00000006B3C0: BF800000
	.long 0xbf800000                                           // 00000006B3C4: BF800000
	.long 0xbf800000                                           // 00000006B3C8: BF800000
	.long 0xbf800000                                           // 00000006B3CC: BF800000
	.long 0xbf800000                                           // 00000006B3D0: BF800000
	.long 0xbf800000                                           // 00000006B3D4: BF800000
	.long 0xbf800000                                           // 00000006B3D8: BF800000
	.long 0xbf800000                                           // 00000006B3DC: BF800000
	.long 0xbf800000                                           // 00000006B3E0: BF800000
	.long 0xbf800000                                           // 00000006B3E4: BF800000
	.long 0xbf800000                                           // 00000006B3E8: BF800000
	.long 0xbf800000                                           // 00000006B3EC: BF800000
	.long 0xbf800000                                           // 00000006B3F0: BF800000
	.long 0xbf800000                                           // 00000006B3F4: BF800000
	.long 0xbf800000                                           // 00000006B3F8: BF800000
	.long 0xbf800000                                           // 00000006B3FC: BF800000

	.p2align	8
	.type	subtract_get_num_groups_get_group_id,@function
	.size	subtract_get_num_groups_get_group_id, subtract_get_num_groups_get_group_id_symend-subtract_get_num_groups_get_group_id
subtract_get_num_groups_get_group_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006B400: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006B40C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B414: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006B41C: BEA10080
	s_clause 0x1                                               // 00000006B420: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006B424: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006B42C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006B434: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B438: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006B440: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006B448: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006B450: F4040180 F8000008
	s_lshl_b32 s0, s2, 1                                       // 00000006B458: 84008102
	s_waitcnt lgkmcnt(0)                                       // 00000006B45C: BF89FC07
	v_add3_u32 v1, s8, s0, v1                                  // 00000006B460: D6550001 04040008
	s_lshl_b32 s0, s3, 1                                       // 00000006B468: 84008103
	s_sub_i32 s1, s12, s2                                      // 00000006B46C: 8181020C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006B470: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006B474: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006B47C: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 00000006B484: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006B488: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v0                                  // 00000006B490: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006B498: BF8701A4
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000006B49C: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000006B4A4: 40080807
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006B4A8: D73C0000 00020282
	v_add_co_u32 v5, s0, s6, v5                                // 00000006B4B0: D7000005 00020A06
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000006B4B8: BF870141
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 00000006B4BC: D5200006 00020C07
	s_waitcnt vmcnt(1)                                         // 00000006B4C4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006B4C8: 32040E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006B4CC: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v2.l                               // 00000006B4D0: D43D0000 00020480
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006B4D8: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006B4DC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006B4E0: 7C7A1080
	s_addc_u32 s1, s1, 0                                       // 00000006B4E4: 82018001
	s_sub_i32 s2, s13, s3                                      // 00000006B4E8: 8182030D
	s_cmp_lg_u32 s0, 0                                         // 00000006B4EC: BF078000
	s_addc_u32 s0, s2, 0                                       // 00000006B4F0: 82008002
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006B4F4: BF870009
	v_dual_mov_b32 v2, s1 :: v_dual_mov_b32 v7, s0             // 00000006B4F8: CA100001 02060000
	s_sub_i32 s1, s14, s4                                      // 00000006B500: 8181040E
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006B504: BF07806A
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006B508: D7006A00 00020006
	s_addc_u32 s0, s1, 0                                       // 00000006B510: 82008001
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006B514: 40020207
	v_mov_b32_e32 v8, s0                                       // 00000006B518: 7E100200
	s_clause 0x2                                               // 00000006B51C: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006B520: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006B528: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006B530: DC6A0000 007C0800
	s_nop 0                                                    // 00000006B538: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B53C: BFB60003
	s_endpgm                                                   // 00000006B540: BFB00000
subtract_get_num_groups_get_group_id_symend:
	.long 0xbf800000                                           // 00000006B544: BF800000
	.long 0xbf800000                                           // 00000006B548: BF800000
	.long 0xbf800000                                           // 00000006B54C: BF800000
	.long 0xbf800000                                           // 00000006B550: BF800000
	.long 0xbf800000                                           // 00000006B554: BF800000
	.long 0xbf800000                                           // 00000006B558: BF800000
	.long 0xbf800000                                           // 00000006B55C: BF800000
	.long 0xbf800000                                           // 00000006B560: BF800000
	.long 0xbf800000                                           // 00000006B564: BF800000
	.long 0xbf800000                                           // 00000006B568: BF800000
	.long 0xbf800000                                           // 00000006B56C: BF800000
	.long 0xbf800000                                           // 00000006B570: BF800000
	.long 0xbf800000                                           // 00000006B574: BF800000
	.long 0xbf800000                                           // 00000006B578: BF800000
	.long 0xbf800000                                           // 00000006B57C: BF800000
	.long 0xbf800000                                           // 00000006B580: BF800000
	.long 0xbf800000                                           // 00000006B584: BF800000
	.long 0xbf800000                                           // 00000006B588: BF800000
	.long 0xbf800000                                           // 00000006B58C: BF800000
	.long 0xbf800000                                           // 00000006B590: BF800000
	.long 0xbf800000                                           // 00000006B594: BF800000
	.long 0xbf800000                                           // 00000006B598: BF800000
	.long 0xbf800000                                           // 00000006B59C: BF800000
	.long 0xbf800000                                           // 00000006B5A0: BF800000
	.long 0xbf800000                                           // 00000006B5A4: BF800000
	.long 0xbf800000                                           // 00000006B5A8: BF800000
	.long 0xbf800000                                           // 00000006B5AC: BF800000
	.long 0xbf800000                                           // 00000006B5B0: BF800000
	.long 0xbf800000                                           // 00000006B5B4: BF800000
	.long 0xbf800000                                           // 00000006B5B8: BF800000
	.long 0xbf800000                                           // 00000006B5BC: BF800000
	.long 0xbf800000                                           // 00000006B5C0: BF800000
	.long 0xbf800000                                           // 00000006B5C4: BF800000
	.long 0xbf800000                                           // 00000006B5C8: BF800000
	.long 0xbf800000                                           // 00000006B5CC: BF800000
	.long 0xbf800000                                           // 00000006B5D0: BF800000
	.long 0xbf800000                                           // 00000006B5D4: BF800000
	.long 0xbf800000                                           // 00000006B5D8: BF800000
	.long 0xbf800000                                           // 00000006B5DC: BF800000
	.long 0xbf800000                                           // 00000006B5E0: BF800000
	.long 0xbf800000                                           // 00000006B5E4: BF800000
	.long 0xbf800000                                           // 00000006B5E8: BF800000
	.long 0xbf800000                                           // 00000006B5EC: BF800000
	.long 0xbf800000                                           // 00000006B5F0: BF800000
	.long 0xbf800000                                           // 00000006B5F4: BF800000
	.long 0xbf800000                                           // 00000006B5F8: BF800000
	.long 0xbf800000                                           // 00000006B5FC: BF800000

	.p2align	8
	.type	subtract_get_work_dim_get_group_id,@function
	.size	subtract_get_work_dim_get_group_id, subtract_get_work_dim_get_group_id_symend-subtract_get_work_dim_get_group_id
subtract_get_work_dim_get_group_id:
	s_clause 0x3                                               // 00000006B600: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006B604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000006B60C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 00000006B614: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B61C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006B624: CA240080 020000FF 000003FF
	s_lshl_b32 s7, s2, 1                                       // 00000006B630: 84078102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006B634: D6100005 02291500
	s_waitcnt lgkmcnt(0)                                       // 00000006B63C: BF89FC07
	s_lshl_b32 s9, s3, 1                                       // 00000006B640: 84098103
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B644: D6100000 02292900
	s_lshl_b32 s11, s4, 2                                      // 00000006B64C: 840B8204
	s_mov_b32 s33, 0                                           // 00000006B650: BEA10080
	v_add3_u32 v1, s8, s7, v1                                  // 00000006B654: D6550001 04040E08
	s_and_b32 s5, s5, 0xffff                                   // 00000006B65C: 8B05FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006B664: BF8700A9
	s_sub_i32 s2, s5, s2                                       // 00000006B668: 81820205
	s_sub_i32 s3, s5, s3                                       // 00000006B66C: 81830305
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006B670: D73C0003 00020282
	v_add3_u32 v1, s10, s9, v5                                 // 00000006B678: D6550001 0414120A
	s_sub_i32 s4, s5, s4                                       // 00000006B680: 81840405
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 00000006B684: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006B68C: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006B690: D73C0005 00020282
	v_add3_u32 v1, s6, s11, v0                                 // 00000006B698: D6550001 04001606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006B6A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006B6A8: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006B6AC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006B6B4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006B6BC: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 00000006B6C0: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006B6C4: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006B6C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006B6D0: 40020201
	s_clause 0x2                                               // 00000006B6D4: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006B6D8: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006B6E0: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006B6E8: DC6A0000 007C0200
	s_nop 0                                                    // 00000006B6F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B6F4: BFB60003
	s_endpgm                                                   // 00000006B6F8: BFB00000
subtract_get_work_dim_get_group_id_symend:
	.long 0xbf800000                                           // 00000006B6FC: BF800000

	.p2align	8
	.type	subtract_x_get_local_size,@function
	.size	subtract_x_get_local_size, subtract_x_get_local_size_symend-subtract_x_get_local_size
subtract_x_get_local_size:
	s_clause 0x1                                               // 00000006B700: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006B704: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006B70C: F4080300 F8000038
	s_add_u32 s5, s0, 16                                       // 00000006B714: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006B718: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006B71C: 820B8001
	s_lshl_b32 s13, s2, 4                                      // 00000006B720: 840D8402
	s_lshl_b32 s15, s3, 1                                      // 00000006B724: 840F8103
	s_lshl_b32 s16, s4, 1                                      // 00000006B728: 84108104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006B72C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006B738: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B740: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006B748: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006B74C: BF0A0802
	v_add3_u32 v1, s12, s13, v1                                // 00000006B750: D6550001 04041A0C
	s_cselect_b32 s2, 12, 18                                   // 00000006B758: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006B75C: BF870009
	s_add_u32 s6, s5, s2                                       // 00000006B760: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006B764: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006B768: BF0A0903
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006B76C: D73C0003 00020282
	s_cselect_b32 s2, 14, 20                                   // 00000006B774: 9802948E
	v_add3_u32 v1, s14, s15, v5                                // 00000006B778: D6550001 04141E0E
	s_add_u32 s2, s5, s2                                       // 00000006B780: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006B784: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006B788: BF0A0A04
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000006B78C: BF8704A1
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006B790: D73C0005 00020282
	s_cselect_b32 s4, 16, 22                                   // 00000006B798: 98049690
	s_add_u32 s4, s5, s4                                       // 00000006B79C: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006B7A0: 8205800B
	s_clause 0x2                                               // 00000006B7A4: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006B7A8: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006B7B0: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006B7B8: DC4A0000 09040002
	s_clause 0x2                                               // 00000006B7C0: BF850002
	s_load_b32 s4, s[0:1], 0x48                                // 00000006B7C4: F4000100 F8000048
	s_load_b64 s[2:3], s[0:1], null                            // 00000006B7CC: F4040080 F8000000
	s_load_b32 s0, s[0:1], 0x8                                 // 00000006B7D4: F4000000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006B7DC: BF89FC07
	v_add3_u32 v1, s4, s16, v0                                 // 00000006B7E0: D6550001 04002004
	v_add_co_u32 v3, vcc_lo, s2, v3                            // 00000006B7E8: D7006A03 00020602
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo             // 00000006B7F0: 40080803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006B7F4: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006B7F8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s2, v5                            // 00000006B800: D7006A05 00020A02
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo             // 00000006B808: 400C0C03
	v_add_co_u32 v0, vcc_lo, s2, v0                            // 00000006B80C: D7006A00 00020002
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006B814: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo             // 00000006B818: 40020203
	s_waitcnt vmcnt(2)                                         // 00000006B81C: BF890BF7
	v_sub_nc_u32_e32 v2, s0, v7                                // 00000006B820: 4C040E00
	s_waitcnt vmcnt(1)                                         // 00000006B824: BF8907F7
	v_sub_nc_u32_e32 v7, s0, v8                                // 00000006B828: 4C0E1000
	s_waitcnt vmcnt(0)                                         // 00000006B82C: BF8903F7
	v_sub_nc_u32_e32 v8, s0, v9                                // 00000006B830: 4C101200
	s_clause 0x2                                               // 00000006B834: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006B838: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006B840: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006B848: DC6A0000 007C0800
	s_nop 0                                                    // 00000006B850: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006B854: BFB60003
	s_endpgm                                                   // 00000006B858: BFB00000
subtract_x_get_local_size_symend:
	.long 0xbf800000                                           // 00000006B85C: BF800000
	.long 0xbf800000                                           // 00000006B860: BF800000
	.long 0xbf800000                                           // 00000006B864: BF800000
	.long 0xbf800000                                           // 00000006B868: BF800000
	.long 0xbf800000                                           // 00000006B86C: BF800000
	.long 0xbf800000                                           // 00000006B870: BF800000
	.long 0xbf800000                                           // 00000006B874: BF800000
	.long 0xbf800000                                           // 00000006B878: BF800000
	.long 0xbf800000                                           // 00000006B87C: BF800000
	.long 0xbf800000                                           // 00000006B880: BF800000
	.long 0xbf800000                                           // 00000006B884: BF800000
	.long 0xbf800000                                           // 00000006B888: BF800000
	.long 0xbf800000                                           // 00000006B88C: BF800000
	.long 0xbf800000                                           // 00000006B890: BF800000
	.long 0xbf800000                                           // 00000006B894: BF800000
	.long 0xbf800000                                           // 00000006B898: BF800000
	.long 0xbf800000                                           // 00000006B89C: BF800000
	.long 0xbf800000                                           // 00000006B8A0: BF800000
	.long 0xbf800000                                           // 00000006B8A4: BF800000
	.long 0xbf800000                                           // 00000006B8A8: BF800000
	.long 0xbf800000                                           // 00000006B8AC: BF800000
	.long 0xbf800000                                           // 00000006B8B0: BF800000
	.long 0xbf800000                                           // 00000006B8B4: BF800000
	.long 0xbf800000                                           // 00000006B8B8: BF800000
	.long 0xbf800000                                           // 00000006B8BC: BF800000
	.long 0xbf800000                                           // 00000006B8C0: BF800000
	.long 0xbf800000                                           // 00000006B8C4: BF800000
	.long 0xbf800000                                           // 00000006B8C8: BF800000
	.long 0xbf800000                                           // 00000006B8CC: BF800000
	.long 0xbf800000                                           // 00000006B8D0: BF800000
	.long 0xbf800000                                           // 00000006B8D4: BF800000
	.long 0xbf800000                                           // 00000006B8D8: BF800000
	.long 0xbf800000                                           // 00000006B8DC: BF800000
	.long 0xbf800000                                           // 00000006B8E0: BF800000
	.long 0xbf800000                                           // 00000006B8E4: BF800000
	.long 0xbf800000                                           // 00000006B8E8: BF800000
	.long 0xbf800000                                           // 00000006B8EC: BF800000
	.long 0xbf800000                                           // 00000006B8F0: BF800000
	.long 0xbf800000                                           // 00000006B8F4: BF800000
	.long 0xbf800000                                           // 00000006B8F8: BF800000
	.long 0xbf800000                                           // 00000006B8FC: BF800000

	.p2align	8
	.type	subtract_get_global_offset_get_local_size,@function
	.size	subtract_get_global_offset_get_local_size, subtract_get_global_offset_get_local_size_symend-subtract_get_global_offset_get_local_size
subtract_get_global_offset_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006B900: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006B908: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006B90C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006B910: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006B914: 840C8102
	s_lshl_b32 s13, s3, 4                                      // 00000006B918: 840D8403
	s_lshl_b32 s14, s4, 1                                      // 00000006B91C: 840E8104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006B920: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006B92C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006B934: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006B93C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006B940: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006B944: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006B948: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006B94C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006B950: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006B954: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006B958: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006B95C: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006B960: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006B964: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006B968: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006B96C: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006B970: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006B974: 8205800B
	s_clause 0x2                                               // 00000006B978: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006B97C: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006B984: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006B98C: DC4A0000 09040002
	s_clause 0x2                                               // 00000006B994: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006B998: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006B9A0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006B9A8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006B9B0: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 00000006B9B4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006B9BC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006B9C0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 00000006B9C8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006B9D0: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v0                                 // 00000006B9D8: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006B9E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006B9E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006B9EC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006B9F0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006B9F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006BA00: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006BA04: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006BA08: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006BA10: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006BA14: BF890BF7
	v_sub_nc_u32_e32 v2, s4, v7                                // 00000006BA18: 4C040E04
	s_waitcnt vmcnt(1)                                         // 00000006BA1C: BF8907F7
	v_sub_nc_u32_e32 v7, s6, v8                                // 00000006BA20: 4C0E1006
	s_waitcnt vmcnt(0)                                         // 00000006BA24: BF8903F7
	v_sub_nc_u32_e32 v8, s2, v9                                // 00000006BA28: 4C101202
	s_clause 0x2                                               // 00000006BA2C: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006BA30: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006BA38: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006BA40: DC6A0000 007C0800
	s_nop 0                                                    // 00000006BA48: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006BA4C: BFB60003
	s_endpgm                                                   // 00000006BA50: BFB00000
subtract_get_global_offset_get_local_size_symend:
	.long 0xbf800000                                           // 00000006BA54: BF800000
	.long 0xbf800000                                           // 00000006BA58: BF800000
	.long 0xbf800000                                           // 00000006BA5C: BF800000
	.long 0xbf800000                                           // 00000006BA60: BF800000
	.long 0xbf800000                                           // 00000006BA64: BF800000
	.long 0xbf800000                                           // 00000006BA68: BF800000
	.long 0xbf800000                                           // 00000006BA6C: BF800000
	.long 0xbf800000                                           // 00000006BA70: BF800000
	.long 0xbf800000                                           // 00000006BA74: BF800000
	.long 0xbf800000                                           // 00000006BA78: BF800000
	.long 0xbf800000                                           // 00000006BA7C: BF800000
	.long 0xbf800000                                           // 00000006BA80: BF800000
	.long 0xbf800000                                           // 00000006BA84: BF800000
	.long 0xbf800000                                           // 00000006BA88: BF800000
	.long 0xbf800000                                           // 00000006BA8C: BF800000
	.long 0xbf800000                                           // 00000006BA90: BF800000
	.long 0xbf800000                                           // 00000006BA94: BF800000
	.long 0xbf800000                                           // 00000006BA98: BF800000
	.long 0xbf800000                                           // 00000006BA9C: BF800000
	.long 0xbf800000                                           // 00000006BAA0: BF800000
	.long 0xbf800000                                           // 00000006BAA4: BF800000
	.long 0xbf800000                                           // 00000006BAA8: BF800000
	.long 0xbf800000                                           // 00000006BAAC: BF800000
	.long 0xbf800000                                           // 00000006BAB0: BF800000
	.long 0xbf800000                                           // 00000006BAB4: BF800000
	.long 0xbf800000                                           // 00000006BAB8: BF800000
	.long 0xbf800000                                           // 00000006BABC: BF800000
	.long 0xbf800000                                           // 00000006BAC0: BF800000
	.long 0xbf800000                                           // 00000006BAC4: BF800000
	.long 0xbf800000                                           // 00000006BAC8: BF800000
	.long 0xbf800000                                           // 00000006BACC: BF800000
	.long 0xbf800000                                           // 00000006BAD0: BF800000
	.long 0xbf800000                                           // 00000006BAD4: BF800000
	.long 0xbf800000                                           // 00000006BAD8: BF800000
	.long 0xbf800000                                           // 00000006BADC: BF800000
	.long 0xbf800000                                           // 00000006BAE0: BF800000
	.long 0xbf800000                                           // 00000006BAE4: BF800000
	.long 0xbf800000                                           // 00000006BAE8: BF800000
	.long 0xbf800000                                           // 00000006BAEC: BF800000
	.long 0xbf800000                                           // 00000006BAF0: BF800000
	.long 0xbf800000                                           // 00000006BAF4: BF800000
	.long 0xbf800000                                           // 00000006BAF8: BF800000
	.long 0xbf800000                                           // 00000006BAFC: BF800000

	.p2align	8
	.type	subtract_get_local_id_get_local_size,@function
	.size	subtract_get_local_id_get_local_size, subtract_get_local_id_get_local_size_symend-subtract_get_local_id_get_local_size
subtract_get_local_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006BB00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006BB08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006BB0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006BB10: 820B8001
	s_lshl_b32 s12, s2, 3                                      // 00000006BB14: 840C8302
	s_lshl_b32 s13, s3, 2                                      // 00000006BB18: 840D8203
	s_lshl_b32 s14, s4, 1                                      // 00000006BB1C: 840E8104
	v_mov_b32_e32 v2, 0                                        // 00000006BB20: 7E040280
	v_and_b32_e32 v10, 0x3ff, v0                               // 00000006BB24: 361400FF 000003FF
	v_bfe_u32 v11, v0, 10, 10                                  // 00000006BB2C: D610000B 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 00000006BB34: D610000C 02292900
	s_mov_b32 s33, 0                                           // 00000006BB3C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006BB40: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006BB44: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006BB48: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006BB4C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006BB50: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006BB54: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006BB58: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006BB5C: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006BB60: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006BB64: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006BB68: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006BB6C: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006BB70: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006BB74: 8205800B
	s_clause 0x2                                               // 00000006BB78: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006BB7C: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006BB84: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006BB8C: DC4A0000 09040002
	s_clause 0x2                                               // 00000006BB94: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006BB98: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006BBA0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006BBA8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006BBB0: BF89FC07
	v_add3_u32 v1, s4, s12, v10                                // 00000006BBB4: D6550001 04281804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006BBBC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006BBC0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v11                                // 00000006BBC8: D6550001 042C1A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006BBD0: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v12                                // 00000006BBD8: D6550001 04301C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006BBE0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006BBE4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006BBEC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006BBF0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006BBF8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006BC00: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006BC04: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006BC08: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006BC10: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006BC14: BF890BF7
	v_sub_nc_u32_e32 v2, v10, v7                               // 00000006BC18: 4C040F0A
	s_waitcnt vmcnt(1)                                         // 00000006BC1C: BF8907F7
	v_sub_nc_u32_e32 v7, v11, v8                               // 00000006BC20: 4C0E110B
	s_waitcnt vmcnt(0)                                         // 00000006BC24: BF8903F7
	v_sub_nc_u32_e32 v8, v12, v9                               // 00000006BC28: 4C10130C
	s_clause 0x2                                               // 00000006BC2C: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006BC30: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006BC38: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006BC40: DC6A0000 007C0800
	s_nop 0                                                    // 00000006BC48: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006BC4C: BFB60003
	s_endpgm                                                   // 00000006BC50: BFB00000
subtract_get_local_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000006BC54: BF800000
	.long 0xbf800000                                           // 00000006BC58: BF800000
	.long 0xbf800000                                           // 00000006BC5C: BF800000
	.long 0xbf800000                                           // 00000006BC60: BF800000
	.long 0xbf800000                                           // 00000006BC64: BF800000
	.long 0xbf800000                                           // 00000006BC68: BF800000
	.long 0xbf800000                                           // 00000006BC6C: BF800000
	.long 0xbf800000                                           // 00000006BC70: BF800000
	.long 0xbf800000                                           // 00000006BC74: BF800000
	.long 0xbf800000                                           // 00000006BC78: BF800000
	.long 0xbf800000                                           // 00000006BC7C: BF800000
	.long 0xbf800000                                           // 00000006BC80: BF800000
	.long 0xbf800000                                           // 00000006BC84: BF800000
	.long 0xbf800000                                           // 00000006BC88: BF800000
	.long 0xbf800000                                           // 00000006BC8C: BF800000
	.long 0xbf800000                                           // 00000006BC90: BF800000
	.long 0xbf800000                                           // 00000006BC94: BF800000
	.long 0xbf800000                                           // 00000006BC98: BF800000
	.long 0xbf800000                                           // 00000006BC9C: BF800000
	.long 0xbf800000                                           // 00000006BCA0: BF800000
	.long 0xbf800000                                           // 00000006BCA4: BF800000
	.long 0xbf800000                                           // 00000006BCA8: BF800000
	.long 0xbf800000                                           // 00000006BCAC: BF800000
	.long 0xbf800000                                           // 00000006BCB0: BF800000
	.long 0xbf800000                                           // 00000006BCB4: BF800000
	.long 0xbf800000                                           // 00000006BCB8: BF800000
	.long 0xbf800000                                           // 00000006BCBC: BF800000
	.long 0xbf800000                                           // 00000006BCC0: BF800000
	.long 0xbf800000                                           // 00000006BCC4: BF800000
	.long 0xbf800000                                           // 00000006BCC8: BF800000
	.long 0xbf800000                                           // 00000006BCCC: BF800000
	.long 0xbf800000                                           // 00000006BCD0: BF800000
	.long 0xbf800000                                           // 00000006BCD4: BF800000
	.long 0xbf800000                                           // 00000006BCD8: BF800000
	.long 0xbf800000                                           // 00000006BCDC: BF800000
	.long 0xbf800000                                           // 00000006BCE0: BF800000
	.long 0xbf800000                                           // 00000006BCE4: BF800000
	.long 0xbf800000                                           // 00000006BCE8: BF800000
	.long 0xbf800000                                           // 00000006BCEC: BF800000
	.long 0xbf800000                                           // 00000006BCF0: BF800000
	.long 0xbf800000                                           // 00000006BCF4: BF800000
	.long 0xbf800000                                           // 00000006BCF8: BF800000
	.long 0xbf800000                                           // 00000006BCFC: BF800000

	.p2align	8
	.type	subtract_get_group_id_get_local_size,@function
	.size	subtract_get_group_id_get_local_size, subtract_get_group_id_get_local_size_symend-subtract_get_group_id_get_local_size
subtract_get_group_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006BD00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006BD08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006BD0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006BD10: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006BD14: 840C8102
	s_lshl_b32 s13, s3, 4                                      // 00000006BD18: 840D8403
	s_lshl_b32 s14, s4, 1                                      // 00000006BD1C: 840E8104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006BD20: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006BD2C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006BD34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006BD3C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006BD40: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000006BD44: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006BD48: BF8704C9
	s_add_u32 s6, s5, s6                                       // 00000006BD4C: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000006BD50: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006BD54: BF0A0903
	s_cselect_b32 s8, 14, 20                                   // 00000006BD58: 9808948E
	s_add_u32 s8, s5, s8                                       // 00000006BD5C: 80080805
	s_addc_u32 s9, s11, 0                                      // 00000006BD60: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 00000006BD64: BF0A0A04
	s_cselect_b32 s10, 16, 22                                  // 00000006BD68: 980A9690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006BD6C: BF870009
	s_add_u32 s10, s5, s10                                     // 00000006BD70: 800A0A05
	s_addc_u32 s11, s11, 0                                     // 00000006BD74: 820B800B
	s_clause 0x2                                               // 00000006BD78: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006BD7C: DC4A0000 07060002
	global_load_u16 v8, v2, s[8:9]                             // 00000006BD84: DC4A0000 08080002
	global_load_u16 v9, v2, s[10:11]                           // 00000006BD8C: DC4A0000 090A0002
	s_clause 0x2                                               // 00000006BD94: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006BD98: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006BDA0: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006BDA8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006BDB0: BF89FC07
	v_add3_u32 v1, s8, s12, v1                                 // 00000006BDB4: D6550001 04041808
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006BDBC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006BDC0: D73C0003 00020282
	v_add3_u32 v1, s10, s13, v5                                // 00000006BDC8: D6550001 04141A0A
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006BDD0: D73C0005 00020282
	v_add3_u32 v1, s5, s14, v0                                 // 00000006BDD8: D6550001 04001C05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006BDE0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006BDE4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006BDEC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006BDF0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006BDF8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006BE00: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006BE04: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006BE08: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006BE10: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006BE14: BF890BF7
	v_sub_nc_u32_e32 v2, s2, v7                                // 00000006BE18: 4C040E02
	s_waitcnt vmcnt(1)                                         // 00000006BE1C: BF8907F7
	v_sub_nc_u32_e32 v7, s3, v8                                // 00000006BE20: 4C0E1003
	s_waitcnt vmcnt(0)                                         // 00000006BE24: BF8903F7
	v_sub_nc_u32_e32 v8, s4, v9                                // 00000006BE28: 4C101204
	s_clause 0x2                                               // 00000006BE2C: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006BE30: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006BE38: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006BE40: DC6A0000 007C0800
	s_nop 0                                                    // 00000006BE48: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006BE4C: BFB60003
	s_endpgm                                                   // 00000006BE50: BFB00000
subtract_get_group_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000006BE54: BF800000
	.long 0xbf800000                                           // 00000006BE58: BF800000
	.long 0xbf800000                                           // 00000006BE5C: BF800000
	.long 0xbf800000                                           // 00000006BE60: BF800000
	.long 0xbf800000                                           // 00000006BE64: BF800000
	.long 0xbf800000                                           // 00000006BE68: BF800000
	.long 0xbf800000                                           // 00000006BE6C: BF800000
	.long 0xbf800000                                           // 00000006BE70: BF800000
	.long 0xbf800000                                           // 00000006BE74: BF800000
	.long 0xbf800000                                           // 00000006BE78: BF800000
	.long 0xbf800000                                           // 00000006BE7C: BF800000
	.long 0xbf800000                                           // 00000006BE80: BF800000
	.long 0xbf800000                                           // 00000006BE84: BF800000
	.long 0xbf800000                                           // 00000006BE88: BF800000
	.long 0xbf800000                                           // 00000006BE8C: BF800000
	.long 0xbf800000                                           // 00000006BE90: BF800000
	.long 0xbf800000                                           // 00000006BE94: BF800000
	.long 0xbf800000                                           // 00000006BE98: BF800000
	.long 0xbf800000                                           // 00000006BE9C: BF800000
	.long 0xbf800000                                           // 00000006BEA0: BF800000
	.long 0xbf800000                                           // 00000006BEA4: BF800000
	.long 0xbf800000                                           // 00000006BEA8: BF800000
	.long 0xbf800000                                           // 00000006BEAC: BF800000
	.long 0xbf800000                                           // 00000006BEB0: BF800000
	.long 0xbf800000                                           // 00000006BEB4: BF800000
	.long 0xbf800000                                           // 00000006BEB8: BF800000
	.long 0xbf800000                                           // 00000006BEBC: BF800000
	.long 0xbf800000                                           // 00000006BEC0: BF800000
	.long 0xbf800000                                           // 00000006BEC4: BF800000
	.long 0xbf800000                                           // 00000006BEC8: BF800000
	.long 0xbf800000                                           // 00000006BECC: BF800000
	.long 0xbf800000                                           // 00000006BED0: BF800000
	.long 0xbf800000                                           // 00000006BED4: BF800000
	.long 0xbf800000                                           // 00000006BED8: BF800000
	.long 0xbf800000                                           // 00000006BEDC: BF800000
	.long 0xbf800000                                           // 00000006BEE0: BF800000
	.long 0xbf800000                                           // 00000006BEE4: BF800000
	.long 0xbf800000                                           // 00000006BEE8: BF800000
	.long 0xbf800000                                           // 00000006BEEC: BF800000
	.long 0xbf800000                                           // 00000006BEF0: BF800000
	.long 0xbf800000                                           // 00000006BEF4: BF800000
	.long 0xbf800000                                           // 00000006BEF8: BF800000
	.long 0xbf800000                                           // 00000006BEFC: BF800000

	.p2align	8
	.type	subtract_get_local_size_get_local_size,@function
	.size	subtract_get_local_size_get_local_size, subtract_get_local_size_get_local_size_symend-subtract_get_local_size_get_local_size
subtract_get_local_size_get_local_size:
	s_clause 0x2                                               // 00000006BF00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006BF04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006BF0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006BF14: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006BF1C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006BF28: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006BF2C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006BF34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006BF3C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006BF40: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006BF44: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006BF4C: 84028103
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006BF50: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006BF54: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006BF5C: D6550001 0414040A
	s_lshl_b32 s2, s4, 2                                       // 00000006BF64: 84028204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006BF68: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 00000006BF70: D6550001 04000405
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006BF78: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006BF7C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006BF84: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006BF88: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006BF90: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006BF98: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006BF9C: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006BFA0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006BFA8: 40020201
	s_clause 0x2                                               // 00000006BFAC: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006BFB0: DC6A0000 007C0203
	global_store_b32 v[5:6], v2, off                           // 00000006BFB8: DC6A0000 007C0205
	global_store_b32 v[0:1], v2, off                           // 00000006BFC0: DC6A0000 007C0200
	s_nop 0                                                    // 00000006BFC8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006BFCC: BFB60003
	s_endpgm                                                   // 00000006BFD0: BFB00000
subtract_get_local_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000006BFD4: BF800000
	.long 0xbf800000                                           // 00000006BFD8: BF800000
	.long 0xbf800000                                           // 00000006BFDC: BF800000
	.long 0xbf800000                                           // 00000006BFE0: BF800000
	.long 0xbf800000                                           // 00000006BFE4: BF800000
	.long 0xbf800000                                           // 00000006BFE8: BF800000
	.long 0xbf800000                                           // 00000006BFEC: BF800000
	.long 0xbf800000                                           // 00000006BFF0: BF800000
	.long 0xbf800000                                           // 00000006BFF4: BF800000
	.long 0xbf800000                                           // 00000006BFF8: BF800000
	.long 0xbf800000                                           // 00000006BFFC: BF800000

	.p2align	8
	.type	subtract_get_global_id_get_local_size,@function
	.size	subtract_get_global_id_get_local_size, subtract_get_global_id_get_local_size_symend-subtract_get_global_id_get_local_size
subtract_get_global_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006C000: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006C008: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006C00C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006C010: 820B8001
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006C014: D6100002 02291500
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000006C01C: 360600FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006C024: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006C02C: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006C030: BF870003
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006C034: D6560002 04090203
	v_mov_b32_e32 v1, 0                                        // 00000006C03C: 7E020280
	v_lshl_or_b32 v0, s2, 1, v3                                // 00000006C040: D6560000 040D0202
	v_lshl_or_b32 v6, s4, 2, v4                                // 00000006C048: D6560006 04110404
	s_cmp_lt_u32 s2, s8                                        // 00000006C050: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000006C054: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006C058: BF8704C9
	s_add_u32 s6, s5, s6                                       // 00000006C05C: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000006C060: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006C064: BF0A0903
	s_cselect_b32 s8, 14, 20                                   // 00000006C068: 9808948E
	s_add_u32 s8, s5, s8                                       // 00000006C06C: 80080805
	s_addc_u32 s9, s11, 0                                      // 00000006C070: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 00000006C074: BF0A0A04
	s_cselect_b32 s10, 16, 22                                  // 00000006C078: 980A9690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006C07C: BF870009
	s_add_u32 s10, s5, s10                                     // 00000006C080: 800A0A05
	s_addc_u32 s11, s11, 0                                     // 00000006C084: 820B800B
	s_clause 0x2                                               // 00000006C088: BF850002
	global_load_u16 v12, v1, s[6:7]                            // 00000006C08C: DC4A0000 0C060001
	global_load_u16 v13, v1, s[8:9]                            // 00000006C094: DC4A0000 0D080001
	global_load_u16 v14, v1, s[10:11]                          // 00000006C09C: DC4A0000 0E0A0001
	s_clause 0x2                                               // 00000006C0A4: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C0A8: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006C0B0: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C0B8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006C0C0: BF89FC07
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s10, v2     // 00000006C0C4: CA200101 0302040A
	v_add_nc_u32_e32 v6, s5, v6                                // 00000006C0CC: 4A0C0C05
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 00000006C0D0: D73C0004 00020082
	v_mov_b32_e32 v7, v1                                       // 00000006C0D8: 7E0E0301
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C0DC: BF870194
	v_lshlrev_b64 v[8:9], 2, v[2:3]                            // 00000006C0E0: D73C0008 00020482
	v_add_co_u32 v3, vcc_lo, s0, v4                            // 00000006C0E8: D7006A03 00020800
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006C0F0: BF870003
	v_lshlrev_b64 v[10:11], 2, v[6:7]                          // 00000006C0F4: D73C000A 00020C82
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v5, vcc_lo             // 00000006C0FC: 40080A01
	v_add_nc_u32_e32 v5, s8, v0                                // 00000006C100: 4A0A0008
	v_add_co_u32 v0, vcc_lo, s0, v8                            // 00000006C104: D7006A00 00021000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v9, vcc_lo             // 00000006C10C: 40021201
	s_waitcnt vmcnt(2)                                         // 00000006C110: BF890BF7
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006C114: BF870003
	v_sub_nc_u32_e32 v7, v5, v12                               // 00000006C118: 4C0E1905
	v_add_co_u32 v5, vcc_lo, s0, v10                           // 00000006C11C: D7006A05 00021400
	s_waitcnt vmcnt(1)                                         // 00000006C124: BF8907F7
	v_sub_nc_u32_e32 v2, v2, v13                               // 00000006C128: 4C041B02
	s_waitcnt vmcnt(0)                                         // 00000006C12C: BF8903F7
	v_sub_nc_u32_e32 v8, v6, v14                               // 00000006C130: 4C101D06
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v11, vcc_lo            // 00000006C134: 400C1601
	s_clause 0x2                                               // 00000006C138: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006C13C: DC6A0000 007C0703
	global_store_b32 v[0:1], v2, off                           // 00000006C144: DC6A0000 007C0200
	global_store_b32 v[5:6], v8, off                           // 00000006C14C: DC6A0000 007C0805
	s_nop 0                                                    // 00000006C154: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C158: BFB60003
	s_endpgm                                                   // 00000006C15C: BFB00000
subtract_get_global_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000006C160: BF800000
	.long 0xbf800000                                           // 00000006C164: BF800000
	.long 0xbf800000                                           // 00000006C168: BF800000
	.long 0xbf800000                                           // 00000006C16C: BF800000
	.long 0xbf800000                                           // 00000006C170: BF800000
	.long 0xbf800000                                           // 00000006C174: BF800000
	.long 0xbf800000                                           // 00000006C178: BF800000
	.long 0xbf800000                                           // 00000006C17C: BF800000
	.long 0xbf800000                                           // 00000006C180: BF800000
	.long 0xbf800000                                           // 00000006C184: BF800000
	.long 0xbf800000                                           // 00000006C188: BF800000
	.long 0xbf800000                                           // 00000006C18C: BF800000
	.long 0xbf800000                                           // 00000006C190: BF800000
	.long 0xbf800000                                           // 00000006C194: BF800000
	.long 0xbf800000                                           // 00000006C198: BF800000
	.long 0xbf800000                                           // 00000006C19C: BF800000
	.long 0xbf800000                                           // 00000006C1A0: BF800000
	.long 0xbf800000                                           // 00000006C1A4: BF800000
	.long 0xbf800000                                           // 00000006C1A8: BF800000
	.long 0xbf800000                                           // 00000006C1AC: BF800000
	.long 0xbf800000                                           // 00000006C1B0: BF800000
	.long 0xbf800000                                           // 00000006C1B4: BF800000
	.long 0xbf800000                                           // 00000006C1B8: BF800000
	.long 0xbf800000                                           // 00000006C1BC: BF800000
	.long 0xbf800000                                           // 00000006C1C0: BF800000
	.long 0xbf800000                                           // 00000006C1C4: BF800000
	.long 0xbf800000                                           // 00000006C1C8: BF800000
	.long 0xbf800000                                           // 00000006C1CC: BF800000
	.long 0xbf800000                                           // 00000006C1D0: BF800000
	.long 0xbf800000                                           // 00000006C1D4: BF800000
	.long 0xbf800000                                           // 00000006C1D8: BF800000
	.long 0xbf800000                                           // 00000006C1DC: BF800000
	.long 0xbf800000                                           // 00000006C1E0: BF800000
	.long 0xbf800000                                           // 00000006C1E4: BF800000
	.long 0xbf800000                                           // 00000006C1E8: BF800000
	.long 0xbf800000                                           // 00000006C1EC: BF800000
	.long 0xbf800000                                           // 00000006C1F0: BF800000
	.long 0xbf800000                                           // 00000006C1F4: BF800000
	.long 0xbf800000                                           // 00000006C1F8: BF800000
	.long 0xbf800000                                           // 00000006C1FC: BF800000

	.p2align	8
	.type	subtract_get_global_size_get_local_size,@function
	.size	subtract_get_global_size_get_local_size, subtract_get_global_size_get_local_size_symend-subtract_get_global_size_get_local_size
subtract_get_global_size_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006C200: F4080200 F8000010
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006C208: CA240080 020000FF 000003FF
	s_add_u32 s5, s0, 16                                       // 00000006C214: 80059000
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006C218: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006C220: D6100000 02292900
	s_clause 0x1                                               // 00000006C228: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006C22C: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006C234: DC4A0026 08000002
	s_waitcnt lgkmcnt(0)                                       // 00000006C23C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006C240: 820B8001
	s_lshl_b32 s12, s2, 4                                      // 00000006C244: 840C8402
	s_lshl_b32 s13, s3, 1                                      // 00000006C248: 840D8103
	s_lshl_b32 s14, s4, 1                                      // 00000006C24C: 840E8104
	s_mov_b32 s33, 0                                           // 00000006C250: BEA10080
	s_lshl_b32 s15, s8, 4                                      // 00000006C254: 840F8408
	s_lshl_b32 s16, s9, 1                                      // 00000006C258: 84108109
	s_lshl_b32 s17, s10, 1                                     // 00000006C25C: 8411810A
	s_cmp_lt_u32 s2, s8                                        // 00000006C260: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006C264: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006C268: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006C26C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006C270: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006C274: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006C278: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006C27C: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006C280: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006C284: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006C288: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006C28C: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006C290: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006C294: 8205800B
	s_clause 0x2                                               // 00000006C298: BF850002
	global_load_u16 v9, v2, s[6:7]                             // 00000006C29C: DC4A0000 09060002
	global_load_u16 v10, v2, s[2:3]                            // 00000006C2A4: DC4A0000 0A020002
	global_load_u16 v11, v2, s[4:5]                            // 00000006C2AC: DC4A0000 0B040002
	s_clause 0x2                                               // 00000006C2B4: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006C2B8: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006C2C0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006C2C8: F4040000 F8000000
	s_waitcnt lgkmcnt(0)                                       // 00000006C2D0: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 00000006C2D4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006C2DC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006C2E0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 00000006C2E8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006C2F0: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v0                                 // 00000006C2F8: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006C300: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006C304: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006C30C: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006C310: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006C318: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006C320: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006C324: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C328: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C330: 40020201
	s_waitcnt vmcnt(4)                                         // 00000006C334: BF8913F7
	v_lshrrev_b32_e32 v12, 16, v7                              // 00000006C338: 32180E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006C33C: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(3)                                         // 00000006C344: BF890FF7
	v_add_nc_u32_e32 v2, s17, v8                               // 00000006C348: 4A041011
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C34C: BF870193
	v_add_nc_u32_e32 v8, s16, v12                              // 00000006C350: 4A101810
	v_add_nc_u32_e32 v7, s15, v7                               // 00000006C354: 4A0E0E0F
	s_waitcnt vmcnt(2)                                         // 00000006C358: BF890BF7
	s_delay_alu instid0(VALU_DEP_1)                            // 00000006C35C: BF870001
	v_sub_nc_u32_e32 v7, v7, v9                                // 00000006C360: 4C0E1307
	s_waitcnt vmcnt(1)                                         // 00000006C364: BF8907F7
	v_sub_nc_u32_e32 v8, v8, v10                               // 00000006C368: 4C101508
	s_waitcnt vmcnt(0)                                         // 00000006C36C: BF8903F7
	v_sub_nc_u32_e32 v2, v2, v11                               // 00000006C370: 4C041702
	s_clause 0x2                                               // 00000006C374: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006C378: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006C380: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006C388: DC6A0000 007C0200
	s_nop 0                                                    // 00000006C390: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C394: BFB60003
	s_endpgm                                                   // 00000006C398: BFB00000
subtract_get_global_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000006C39C: BF800000
	.long 0xbf800000                                           // 00000006C3A0: BF800000
	.long 0xbf800000                                           // 00000006C3A4: BF800000
	.long 0xbf800000                                           // 00000006C3A8: BF800000
	.long 0xbf800000                                           // 00000006C3AC: BF800000
	.long 0xbf800000                                           // 00000006C3B0: BF800000
	.long 0xbf800000                                           // 00000006C3B4: BF800000
	.long 0xbf800000                                           // 00000006C3B8: BF800000
	.long 0xbf800000                                           // 00000006C3BC: BF800000
	.long 0xbf800000                                           // 00000006C3C0: BF800000
	.long 0xbf800000                                           // 00000006C3C4: BF800000
	.long 0xbf800000                                           // 00000006C3C8: BF800000
	.long 0xbf800000                                           // 00000006C3CC: BF800000
	.long 0xbf800000                                           // 00000006C3D0: BF800000
	.long 0xbf800000                                           // 00000006C3D4: BF800000
	.long 0xbf800000                                           // 00000006C3D8: BF800000
	.long 0xbf800000                                           // 00000006C3DC: BF800000
	.long 0xbf800000                                           // 00000006C3E0: BF800000
	.long 0xbf800000                                           // 00000006C3E4: BF800000
	.long 0xbf800000                                           // 00000006C3E8: BF800000
	.long 0xbf800000                                           // 00000006C3EC: BF800000
	.long 0xbf800000                                           // 00000006C3F0: BF800000
	.long 0xbf800000                                           // 00000006C3F4: BF800000
	.long 0xbf800000                                           // 00000006C3F8: BF800000
	.long 0xbf800000                                           // 00000006C3FC: BF800000

	.p2align	8
	.type	subtract_get_num_groups_get_local_size,@function
	.size	subtract_get_num_groups_get_local_size, subtract_get_num_groups_get_local_size_symend-subtract_get_num_groups_get_local_size
subtract_get_num_groups_get_local_size:
	v_mov_b32_e32 v2, 0                                        // 00000006C400: 7E040280
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006C404: D6100005 02291500
	s_mov_b32 s33, 0                                           // 00000006C40C: BEA10080
	s_clause 0x1                                               // 00000006C410: BF850001
	global_load_b32 v1, v2, s[0:1] offset:34                   // 00000006C414: DC520022 01000002
	global_load_u16 v3, v2, s[0:1] offset:38                   // 00000006C41C: DC4A0026 03000002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006C424: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006C42C: BF89FC07
	s_add_u32 s11, s0, 16                                      // 00000006C430: 800B9000
	s_addc_u32 s12, s1, 0                                      // 00000006C434: 820C8001
	s_lshl_b32 s13, s2, 1                                      // 00000006C438: 840D8102
	s_lshl_b32 s14, s3, 1                                      // 00000006C43C: 840E8103
	s_lshl_b32 s15, s4, 2                                      // 00000006C440: 840F8204
	s_waitcnt vmcnt(1)                                         // 00000006C444: BF8907F7
	v_lshrrev_b32_e32 v4, 16, v1                               // 00000006C448: 32080290
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000006C44C: 7C7A0280
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006C450: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006C458: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006C460: BF870004
	v_cmp_ne_u16_e64 s5, 0, v4.l                               // 00000006C464: D43D0005 00020880
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006C46C: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006C470: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v3.l                           // 00000006C474: 7C7A0680
	s_addc_u32 s16, s8, 0                                      // 00000006C478: 82108008
	s_cmp_lg_u32 s5, 0                                         // 00000006C47C: BF078005
	s_addc_u32 s17, s9, 0                                      // 00000006C480: 82118009
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006C484: BF07806A
	s_addc_u32 s18, s10, 0                                     // 00000006C488: 8212800A
	s_cmp_lt_u32 s2, s8                                        // 00000006C48C: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006C490: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006C494: BF8704C9
	s_add_u32 s6, s11, s2                                      // 00000006C498: 8006020B
	s_addc_u32 s7, s12, 0                                      // 00000006C49C: 8207800C
	s_cmp_lt_u32 s3, s9                                        // 00000006C4A0: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006C4A4: 9802948E
	s_add_u32 s2, s11, s2                                      // 00000006C4A8: 8002020B
	s_addc_u32 s3, s12, 0                                      // 00000006C4AC: 8203800C
	s_cmp_lt_u32 s4, s10                                       // 00000006C4B0: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006C4B4: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006C4B8: BF870009
	s_add_u32 s4, s11, s4                                      // 00000006C4BC: 8004040B
	s_addc_u32 s5, s12, 0                                      // 00000006C4C0: 8205800C
	s_clause 0x2                                               // 00000006C4C4: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006C4C8: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006C4D0: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006C4D8: DC4A0000 09040002
	s_clause 0x2                                               // 00000006C4E0: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006C4E4: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006C4EC: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C4F4: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006C4FC: BF89FC07
	v_add3_u32 v1, s4, s13, v1                                 // 00000006C500: D6550001 04041A04
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006C508: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006C50C: D73C0003 00020282
	v_add3_u32 v1, s6, s14, v5                                 // 00000006C514: D6550001 04141C06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006C51C: D73C0005 00020282
	v_add3_u32 v1, s2, s15, v0                                 // 00000006C524: D6550001 04001E02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006C52C: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006C530: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006C538: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006C53C: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006C544: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006C54C: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006C550: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C554: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C55C: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006C560: BF890BF7
	v_sub_nc_u32_e32 v2, s16, v7                               // 00000006C564: 4C040E10
	s_waitcnt vmcnt(1)                                         // 00000006C568: BF8907F7
	v_sub_nc_u32_e32 v7, s17, v8                               // 00000006C56C: 4C0E1011
	s_waitcnt vmcnt(0)                                         // 00000006C570: BF8903F7
	v_sub_nc_u32_e32 v8, s18, v9                               // 00000006C574: 4C101212
	s_clause 0x2                                               // 00000006C578: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006C57C: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006C584: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006C58C: DC6A0000 007C0800
	s_nop 0                                                    // 00000006C594: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C598: BFB60003
	s_endpgm                                                   // 00000006C59C: BFB00000
subtract_get_num_groups_get_local_size_symend:
	.long 0xbf800000                                           // 00000006C5A0: BF800000
	.long 0xbf800000                                           // 00000006C5A4: BF800000
	.long 0xbf800000                                           // 00000006C5A8: BF800000
	.long 0xbf800000                                           // 00000006C5AC: BF800000
	.long 0xbf800000                                           // 00000006C5B0: BF800000
	.long 0xbf800000                                           // 00000006C5B4: BF800000
	.long 0xbf800000                                           // 00000006C5B8: BF800000
	.long 0xbf800000                                           // 00000006C5BC: BF800000
	.long 0xbf800000                                           // 00000006C5C0: BF800000
	.long 0xbf800000                                           // 00000006C5C4: BF800000
	.long 0xbf800000                                           // 00000006C5C8: BF800000
	.long 0xbf800000                                           // 00000006C5CC: BF800000
	.long 0xbf800000                                           // 00000006C5D0: BF800000
	.long 0xbf800000                                           // 00000006C5D4: BF800000
	.long 0xbf800000                                           // 00000006C5D8: BF800000
	.long 0xbf800000                                           // 00000006C5DC: BF800000
	.long 0xbf800000                                           // 00000006C5E0: BF800000
	.long 0xbf800000                                           // 00000006C5E4: BF800000
	.long 0xbf800000                                           // 00000006C5E8: BF800000
	.long 0xbf800000                                           // 00000006C5EC: BF800000
	.long 0xbf800000                                           // 00000006C5F0: BF800000
	.long 0xbf800000                                           // 00000006C5F4: BF800000
	.long 0xbf800000                                           // 00000006C5F8: BF800000
	.long 0xbf800000                                           // 00000006C5FC: BF800000

	.p2align	8
	.type	subtract_get_work_dim_get_local_size,@function
	.size	subtract_get_work_dim_get_local_size, subtract_get_work_dim_get_local_size_symend-subtract_get_work_dim_get_local_size
subtract_get_work_dim_get_local_size:
	s_clause 0x1                                               // 00000006C600: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 00000006C604: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006C60C: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006C614: BF89FC07
	s_add_u32 s11, s0, 16                                      // 00000006C618: 800B9000
	s_addc_u32 s12, s1, 0                                      // 00000006C61C: 820C8001
	s_lshl_b32 s13, s2, 1                                      // 00000006C620: 840D8102
	s_lshl_b32 s14, s3, 1                                      // 00000006C624: 840E8103
	s_lshl_b32 s15, s4, 2                                      // 00000006C628: 840F8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006C62C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006C638: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006C640: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006C648: BEA10080
	s_and_b32 s16, s5, 0xffff                                  // 00000006C64C: 8B10FF05 0000FFFF
	s_cmp_lt_u32 s2, s8                                        // 00000006C654: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006C658: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006C65C: BF8704C9
	s_add_u32 s6, s11, s2                                      // 00000006C660: 8006020B
	s_addc_u32 s7, s12, 0                                      // 00000006C664: 8207800C
	s_cmp_lt_u32 s3, s9                                        // 00000006C668: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006C66C: 9802948E
	s_add_u32 s2, s11, s2                                      // 00000006C670: 8002020B
	s_addc_u32 s3, s12, 0                                      // 00000006C674: 8203800C
	s_cmp_lt_u32 s4, s10                                       // 00000006C678: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006C67C: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006C680: BF870009
	s_add_u32 s4, s11, s4                                      // 00000006C684: 8004040B
	s_addc_u32 s5, s12, 0                                      // 00000006C688: 8205800C
	s_clause 0x2                                               // 00000006C68C: BF850002
	global_load_u16 v7, v2, s[6:7]                             // 00000006C690: DC4A0000 07060002
	global_load_u16 v8, v2, s[2:3]                             // 00000006C698: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006C6A0: DC4A0000 09040002
	s_clause 0x2                                               // 00000006C6A8: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006C6AC: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006C6B4: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C6BC: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006C6C4: BF89FC07
	v_add3_u32 v1, s4, s13, v1                                 // 00000006C6C8: D6550001 04041A04
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006C6D0: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006C6D4: D73C0003 00020282
	v_add3_u32 v1, s6, s14, v5                                 // 00000006C6DC: D6550001 04141C06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006C6E4: D73C0005 00020282
	v_add3_u32 v1, s2, s15, v0                                 // 00000006C6EC: D6550001 04001E02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006C6F4: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006C6F8: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006C700: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006C704: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006C70C: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006C714: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006C718: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C71C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C724: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006C728: BF890BF7
	v_sub_nc_u32_e32 v2, s16, v7                               // 00000006C72C: 4C040E10
	s_waitcnt vmcnt(1)                                         // 00000006C730: BF8907F7
	v_sub_nc_u32_e32 v7, s16, v8                               // 00000006C734: 4C0E1010
	s_waitcnt vmcnt(0)                                         // 00000006C738: BF8903F7
	v_sub_nc_u32_e32 v8, s16, v9                               // 00000006C73C: 4C101210
	s_clause 0x2                                               // 00000006C740: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006C744: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006C74C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006C754: DC6A0000 007C0800
	s_nop 0                                                    // 00000006C75C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C760: BFB60003
	s_endpgm                                                   // 00000006C764: BFB00000
subtract_get_work_dim_get_local_size_symend:
	.long 0xbf800000                                           // 00000006C768: BF800000
	.long 0xbf800000                                           // 00000006C76C: BF800000
	.long 0xbf800000                                           // 00000006C770: BF800000
	.long 0xbf800000                                           // 00000006C774: BF800000
	.long 0xbf800000                                           // 00000006C778: BF800000
	.long 0xbf800000                                           // 00000006C77C: BF800000
	.long 0xbf800000                                           // 00000006C780: BF800000
	.long 0xbf800000                                           // 00000006C784: BF800000
	.long 0xbf800000                                           // 00000006C788: BF800000
	.long 0xbf800000                                           // 00000006C78C: BF800000
	.long 0xbf800000                                           // 00000006C790: BF800000
	.long 0xbf800000                                           // 00000006C794: BF800000
	.long 0xbf800000                                           // 00000006C798: BF800000
	.long 0xbf800000                                           // 00000006C79C: BF800000
	.long 0xbf800000                                           // 00000006C7A0: BF800000
	.long 0xbf800000                                           // 00000006C7A4: BF800000
	.long 0xbf800000                                           // 00000006C7A8: BF800000
	.long 0xbf800000                                           // 00000006C7AC: BF800000
	.long 0xbf800000                                           // 00000006C7B0: BF800000
	.long 0xbf800000                                           // 00000006C7B4: BF800000
	.long 0xbf800000                                           // 00000006C7B8: BF800000
	.long 0xbf800000                                           // 00000006C7BC: BF800000
	.long 0xbf800000                                           // 00000006C7C0: BF800000
	.long 0xbf800000                                           // 00000006C7C4: BF800000
	.long 0xbf800000                                           // 00000006C7C8: BF800000
	.long 0xbf800000                                           // 00000006C7CC: BF800000
	.long 0xbf800000                                           // 00000006C7D0: BF800000
	.long 0xbf800000                                           // 00000006C7D4: BF800000
	.long 0xbf800000                                           // 00000006C7D8: BF800000
	.long 0xbf800000                                           // 00000006C7DC: BF800000
	.long 0xbf800000                                           // 00000006C7E0: BF800000
	.long 0xbf800000                                           // 00000006C7E4: BF800000
	.long 0xbf800000                                           // 00000006C7E8: BF800000
	.long 0xbf800000                                           // 00000006C7EC: BF800000
	.long 0xbf800000                                           // 00000006C7F0: BF800000
	.long 0xbf800000                                           // 00000006C7F4: BF800000
	.long 0xbf800000                                           // 00000006C7F8: BF800000
	.long 0xbf800000                                           // 00000006C7FC: BF800000

	.p2align	8
	.type	subtract_x_get_global_id,@function
	.size	subtract_x_get_global_id, subtract_x_get_global_id_symend-subtract_x_get_global_id
subtract_x_get_global_id:
	s_clause 0x2                                               // 00000006C800: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C804: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006C80C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x8                                 // 00000006C814: F4000180 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006C81C: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], null                            // 00000006C824: F4040000 F8000000
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006C82C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006C834: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006C83C: BEA10080
	v_lshl_or_b32 v3, s2, 4, v1                                // 00000006C840: D6560003 04050802
	v_mov_b32_e32 v1, 0                                        // 00000006C848: 7E020280
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006C84C: D6560002 04090203
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006C854: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006C85C: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C860: BF870193
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v0, s8, v3      // 00000006C864: CA200101 03000608
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v2, s10, v2     // 00000006C86C: CA200101 0502040A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C874: BF870193
	v_add_nc_u32_e32 v4, s5, v4                                // 00000006C878: 4A080805
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006C87C: D73C0006 00020082
	v_sub_nc_u32_e32 v8, s6, v0                                // 00000006C884: 4C100006
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006C888: BF870004
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006C88C: D73C0000 00020482
	v_sub_nc_u32_e32 v9, s6, v2                                // 00000006C894: 4C120406
	v_lshlrev_b64 v[2:3], 2, v[4:5]                            // 00000006C898: D73C0002 00020882
	v_sub_nc_u32_e32 v4, s6, v4                                // 00000006C8A0: 4C080806
	v_add_co_u32 v5, vcc_lo, s0, v6                            // 00000006C8A4: D7006A05 00020C00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v7, vcc_lo             // 00000006C8AC: 400C0E01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C8B0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C8B8: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006C8BC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006C8C4: 40060601
	s_clause 0x2                                               // 00000006C8C8: BF850002
	global_store_b32 v[5:6], v8, off                           // 00000006C8CC: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 00000006C8D4: DC6A0000 007C0900
	global_store_b32 v[2:3], v4, off                           // 00000006C8DC: DC6A0000 007C0402
	s_nop 0                                                    // 00000006C8E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C8E8: BFB60003
	s_endpgm                                                   // 00000006C8EC: BFB00000
subtract_x_get_global_id_symend:
	.long 0xbf800000                                           // 00000006C8F0: BF800000
	.long 0xbf800000                                           // 00000006C8F4: BF800000
	.long 0xbf800000                                           // 00000006C8F8: BF800000
	.long 0xbf800000                                           // 00000006C8FC: BF800000

	.p2align	8
	.type	subtract_get_global_offset_get_global_id,@function
	.size	subtract_get_global_offset_get_global_id, subtract_get_global_offset_get_global_id_symend-subtract_get_global_offset_get_global_id
subtract_get_global_offset_get_global_id:
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006C900: F4080200 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006C908: 360200FF 000003FF
	s_clause 0x1                                               // 00000006C910: BF850001
	s_load_b32 s5, s[0:1], 0x48                                // 00000006C914: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006C91C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006C924: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 00000006C92C: D6100003 02292900
	s_mov_b32 s33, 0                                           // 00000006C934: BEA10080
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000006C938: D6560004 04050202
	v_mov_b32_e32 v1, 0                                        // 00000006C940: 7E020280
	v_lshl_or_b32 v5, s3, 4, v2                                // 00000006C944: D6560005 04090803
	v_lshl_or_b32 v6, s4, 1, v3                                // 00000006C94C: D6560006 040D0204
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006C954: BF870194
	v_sub_nc_u32_e32 v7, 0, v4                                 // 00000006C958: 4C0E0880
	v_sub_nc_u32_e32 v8, 0, v5                                 // 00000006C95C: 4C100A80
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006C960: BF8700B3
	v_sub_nc_u32_e32 v9, 0, v6                                 // 00000006C964: 4C120C80
	s_waitcnt lgkmcnt(0)                                       // 00000006C968: BF89FC07
	v_add_nc_u32_e32 v0, s8, v4                                // 00000006C96C: 4A000808
	v_lshlrev_b64 v[2:3], 2, v[0:1]                            // 00000006C970: D73C0002 00020082
	v_add_nc_u32_e32 v0, s10, v5                               // 00000006C978: 4A000A0A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006C97C: BF870221
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 00000006C980: D73C0004 00020082
	v_add_nc_u32_e32 v0, s5, v6                                // 00000006C988: 4A000C05
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006C98C: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006C994: 40060601
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006C998: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006C99C: D73C0000 00020082
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006C9A4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006C9AC: 400A0A01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006C9B0: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006C9B8: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006C9BC: 40020201
	s_clause 0x2                                               // 00000006C9C0: BF850002
	global_store_b32 v[2:3], v7, off                           // 00000006C9C4: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006C9CC: DC6A0000 007C0804
	global_store_b32 v[0:1], v9, off                           // 00000006C9D4: DC6A0000 007C0900
	s_nop 0                                                    // 00000006C9DC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006C9E0: BFB60003
	s_endpgm                                                   // 00000006C9E4: BFB00000
subtract_get_global_offset_get_global_id_symend:
	.long 0xbf800000                                           // 00000006C9E8: BF800000
	.long 0xbf800000                                           // 00000006C9EC: BF800000
	.long 0xbf800000                                           // 00000006C9F0: BF800000
	.long 0xbf800000                                           // 00000006C9F4: BF800000
	.long 0xbf800000                                           // 00000006C9F8: BF800000
	.long 0xbf800000                                           // 00000006C9FC: BF800000

	.p2align	8
	.type	subtract_get_local_id_get_global_id,@function
	.size	subtract_get_local_id_get_global_id, subtract_get_local_id_get_global_id_symend-subtract_get_local_id_get_global_id
subtract_get_local_id_get_global_id:
	s_clause 0x1                                               // 00000006CA00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006CA04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006CA0C: F4000140 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v6, 0x3ff, v0       // 00000006CA14: CA240080 010600FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006CA20: F4040000 F8000008
	v_bfe_u32 v7, v0, 10, 10                                   // 00000006CA28: D6100007 02291500
	v_bfe_u32 v8, v0, 20, 10                                   // 00000006CA30: D6100008 02292900
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006CA38: BF870003
	v_lshl_or_b32 v0, s2, 3, v6                                // 00000006CA3C: D6560000 04190602
	s_mov_b32 s33, 0                                           // 00000006CA44: BEA10080
	v_mov_b32_e32 v3, v1                                       // 00000006CA48: 7E060301
	v_lshl_or_b32 v2, s3, 2, v7                                // 00000006CA4C: D6560002 041D0403
	v_lshl_or_b32 v4, s4, 1, v8                                // 00000006CA54: D6560004 04210204
	s_waitcnt lgkmcnt(0)                                       // 00000006CA5C: BF89FC07
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v0, s8, v0      // 00000006CA60: CA200101 05000008
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CA68: BF870193
	v_add_nc_u32_e32 v2, s10, v2                               // 00000006CA6C: 4A04040A
	v_add_nc_u32_e32 v4, s5, v4                                // 00000006CA70: 4A080805
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006CA74: BF870223
	v_sub_nc_u32_e32 v6, v6, v0                                // 00000006CA78: 4C0C0106
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006CA7C: D73C0000 00020082
	v_sub_nc_u32_e32 v7, v7, v2                                // 00000006CA84: 4C0E0507
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006CA88: D73C0002 00020482
	v_sub_nc_u32_e32 v8, v8, v4                                // 00000006CA90: 4C100908
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006CA94: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006CA9C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006CAA4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006CAA8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006CAB0: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006CAB4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006CABC: 400A0A01
	s_clause 0x2                                               // 00000006CAC0: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006CAC4: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006CACC: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006CAD4: DC6A0000 007C0804
	s_nop 0                                                    // 00000006CADC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006CAE0: BFB60003
	s_endpgm                                                   // 00000006CAE4: BFB00000
subtract_get_local_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000006CAE8: BF800000
	.long 0xbf800000                                           // 00000006CAEC: BF800000
	.long 0xbf800000                                           // 00000006CAF0: BF800000
	.long 0xbf800000                                           // 00000006CAF4: BF800000
	.long 0xbf800000                                           // 00000006CAF8: BF800000
	.long 0xbf800000                                           // 00000006CAFC: BF800000

	.p2align	8
	.type	subtract_get_group_id_get_global_id,@function
	.size	subtract_get_group_id_get_global_id, subtract_get_group_id_get_global_id_symend-subtract_get_group_id_get_global_id
subtract_get_group_id_get_global_id:
	s_clause 0x1                                               // 00000006CB00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006CB04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006CB0C: F4000140 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000006CB14: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006CB1C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006CB24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006CB2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006CB34: BEA10080
	v_lshl_or_b32 v3, s2, 1, v1                                // 00000006CB38: D6560003 04050202
	v_mov_b32_e32 v1, 0                                        // 00000006CB40: 7E020280
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000006CB44: D6560002 04090803
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000006CB4C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000006CB54: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CB58: BF870193
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v0, s8, v3      // 00000006CB5C: CA200101 03000608
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v2, s10, v2     // 00000006CB64: CA200101 0502040A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CB6C: BF870193
	v_add_nc_u32_e32 v4, s5, v4                                // 00000006CB70: 4A080805
	v_sub_nc_u32_e32 v6, s2, v0                                // 00000006CB74: 4C0C0002
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006CB78: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006CB80: BF870004
	v_sub_nc_u32_e32 v7, s3, v2                                // 00000006CB84: 4C0E0403
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006CB88: D73C0002 00020482
	v_sub_nc_u32_e32 v8, s4, v4                                // 00000006CB90: 4C100804
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006CB94: D73C0004 00020882
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006CB9C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006CBA4: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006CBA8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006CBB0: 40060601
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006CBB4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006CBBC: 400A0A01
	s_clause 0x2                                               // 00000006CBC0: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006CBC4: DC6A0000 007C0600
	global_store_b32 v[2:3], v7, off                           // 00000006CBCC: DC6A0000 007C0702
	global_store_b32 v[4:5], v8, off                           // 00000006CBD4: DC6A0000 007C0804
	s_nop 0                                                    // 00000006CBDC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006CBE0: BFB60003
	s_endpgm                                                   // 00000006CBE4: BFB00000
subtract_get_group_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000006CBE8: BF800000
	.long 0xbf800000                                           // 00000006CBEC: BF800000
	.long 0xbf800000                                           // 00000006CBF0: BF800000
	.long 0xbf800000                                           // 00000006CBF4: BF800000
	.long 0xbf800000                                           // 00000006CBF8: BF800000
	.long 0xbf800000                                           // 00000006CBFC: BF800000

	.p2align	8
	.type	subtract_get_local_size_get_global_id,@function
	.size	subtract_get_local_size_get_global_id, subtract_get_local_size_get_global_id_symend-subtract_get_local_size_get_global_id
subtract_get_local_size_get_global_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006CC00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006CC08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006CC0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006CC10: 820B8001
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006CC14: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 20, 10                                   // 00000006CC20: D6100003 02292900
	v_bfe_u32 v0, v0, 10, 10                                   // 00000006CC28: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000006CC30: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CC34: BF870193
	v_lshl_or_b32 v2, s2, 1, v2                                // 00000006CC38: D6560002 04090202
	v_lshl_or_b32 v4, s4, 2, v3                                // 00000006CC40: D6560004 040D0404
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006CC48: BF8704C3
	v_lshl_or_b32 v6, s3, 1, v0                                // 00000006CC4C: D6560006 04010203
	v_mov_b32_e32 v3, v1                                       // 00000006CC54: 7E060301
	s_cmp_lt_u32 s2, s8                                        // 00000006CC58: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000006CC5C: 9806928C
	s_add_u32 s6, s5, s6                                       // 00000006CC60: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000006CC64: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006CC68: BF0A0903
	s_cselect_b32 s8, 14, 20                                   // 00000006CC6C: 9808948E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006CC70: BF8704C9
	s_add_u32 s8, s5, s8                                       // 00000006CC74: 80080805
	s_addc_u32 s9, s11, 0                                      // 00000006CC78: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 00000006CC7C: BF0A0A04
	s_cselect_b32 s10, 16, 22                                  // 00000006CC80: 980A9690
	s_add_u32 s10, s5, s10                                     // 00000006CC84: 800A0A05
	s_addc_u32 s11, s11, 0                                     // 00000006CC88: 820B800B
	s_clause 0x2                                               // 00000006CC8C: BF850002
	global_load_u16 v12, v1, s[6:7]                            // 00000006CC90: DC4A0000 0C060001
	global_load_u16 v13, v1, s[8:9]                            // 00000006CC98: DC4A0000 0D080001
	global_load_u16 v14, v1, s[10:11]                          // 00000006CCA0: DC4A0000 0E0A0001
	s_clause 0x2                                               // 00000006CCA8: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006CCAC: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006CCB4: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006CCBC: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006CCC4: BF89FC07
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v0, s8, v2      // 00000006CCC8: CA200101 05000408
	v_add_nc_u32_e32 v2, s10, v6                               // 00000006CCD0: 4A040C0A
	v_add_nc_u32_e32 v4, s5, v4                                // 00000006CCD4: 4A080805
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CCD8: BF870193
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006CCDC: D73C0006 00020082
	v_lshlrev_b64 v[10:11], 2, v[2:3]                          // 00000006CCE4: D73C000A 00020482
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CCEC: BF870193
	v_lshlrev_b64 v[8:9], 2, v[4:5]                            // 00000006CCF0: D73C0008 00020882
	v_add_co_u32 v5, vcc_lo, s0, v6                            // 00000006CCF8: D7006A05 00020C00
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006CD00: BF870214
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v7, vcc_lo             // 00000006CD04: 400C0E01
	v_add_co_u32 v10, vcc_lo, s0, v10                          // 00000006CD08: D7006A0A 00021400
	v_add_co_ci_u32_e32 v11, vcc_lo, s1, v11, vcc_lo           // 00000006CD10: 40161601
	s_waitcnt vmcnt(2)                                         // 00000006CD14: BF890BF7
	v_sub_nc_u32_e32 v3, v12, v0                               // 00000006CD18: 4C06010C
	v_add_co_u32 v0, vcc_lo, s0, v8                            // 00000006CD1C: D7006A00 00021000
	s_waitcnt vmcnt(1)                                         // 00000006CD24: BF8907F7
	v_sub_nc_u32_e32 v2, v13, v2                               // 00000006CD28: 4C04050D
	s_waitcnt vmcnt(0)                                         // 00000006CD2C: BF8903F7
	v_sub_nc_u32_e32 v4, v14, v4                               // 00000006CD30: 4C08090E
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v9, vcc_lo             // 00000006CD34: 40021201
	s_clause 0x2                                               // 00000006CD38: BF850002
	global_store_b32 v[5:6], v3, off                           // 00000006CD3C: DC6A0000 007C0305
	global_store_b32 v[10:11], v2, off                         // 00000006CD44: DC6A0000 007C020A
	global_store_b32 v[0:1], v4, off                           // 00000006CD4C: DC6A0000 007C0400
	s_nop 0                                                    // 00000006CD54: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006CD58: BFB60003
	s_endpgm                                                   // 00000006CD5C: BFB00000
subtract_get_local_size_get_global_id_symend:
	.long 0xbf800000                                           // 00000006CD60: BF800000
	.long 0xbf800000                                           // 00000006CD64: BF800000
	.long 0xbf800000                                           // 00000006CD68: BF800000
	.long 0xbf800000                                           // 00000006CD6C: BF800000
	.long 0xbf800000                                           // 00000006CD70: BF800000
	.long 0xbf800000                                           // 00000006CD74: BF800000
	.long 0xbf800000                                           // 00000006CD78: BF800000
	.long 0xbf800000                                           // 00000006CD7C: BF800000
	.long 0xbf800000                                           // 00000006CD80: BF800000
	.long 0xbf800000                                           // 00000006CD84: BF800000
	.long 0xbf800000                                           // 00000006CD88: BF800000
	.long 0xbf800000                                           // 00000006CD8C: BF800000
	.long 0xbf800000                                           // 00000006CD90: BF800000
	.long 0xbf800000                                           // 00000006CD94: BF800000
	.long 0xbf800000                                           // 00000006CD98: BF800000
	.long 0xbf800000                                           // 00000006CD9C: BF800000
	.long 0xbf800000                                           // 00000006CDA0: BF800000
	.long 0xbf800000                                           // 00000006CDA4: BF800000
	.long 0xbf800000                                           // 00000006CDA8: BF800000
	.long 0xbf800000                                           // 00000006CDAC: BF800000
	.long 0xbf800000                                           // 00000006CDB0: BF800000
	.long 0xbf800000                                           // 00000006CDB4: BF800000
	.long 0xbf800000                                           // 00000006CDB8: BF800000
	.long 0xbf800000                                           // 00000006CDBC: BF800000
	.long 0xbf800000                                           // 00000006CDC0: BF800000
	.long 0xbf800000                                           // 00000006CDC4: BF800000
	.long 0xbf800000                                           // 00000006CDC8: BF800000
	.long 0xbf800000                                           // 00000006CDCC: BF800000
	.long 0xbf800000                                           // 00000006CDD0: BF800000
	.long 0xbf800000                                           // 00000006CDD4: BF800000
	.long 0xbf800000                                           // 00000006CDD8: BF800000
	.long 0xbf800000                                           // 00000006CDDC: BF800000
	.long 0xbf800000                                           // 00000006CDE0: BF800000
	.long 0xbf800000                                           // 00000006CDE4: BF800000
	.long 0xbf800000                                           // 00000006CDE8: BF800000
	.long 0xbf800000                                           // 00000006CDEC: BF800000
	.long 0xbf800000                                           // 00000006CDF0: BF800000
	.long 0xbf800000                                           // 00000006CDF4: BF800000
	.long 0xbf800000                                           // 00000006CDF8: BF800000
	.long 0xbf800000                                           // 00000006CDFC: BF800000

	.p2align	8
	.type	subtract_get_global_id_get_global_id,@function
	.size	subtract_get_global_id_get_global_id, subtract_get_global_id_get_global_id_symend-subtract_get_global_id_get_global_id
subtract_get_global_id_get_global_id:
	s_clause 0x1                                               // 00000006CE00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x40                          // 00000006CE04: F4080200 F8000040
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006CE0C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006CE14: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006CE20: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006CE28: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006CE30: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006CE34: BF8700A3
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000006CE38: D6560001 04050202
	s_lshl_b32 s2, s3, 1                                       // 00000006CE40: 84028103
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006CE44: D73C0003 00020282
	s_waitcnt lgkmcnt(0)                                       // 00000006CE4C: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000006CE50: D6550001 04140408
	s_lshl_b32 s2, s4, 2                                       // 00000006CE58: 84028204
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006CE5C: BF870192
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006CE60: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006CE68: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006CE6C: BF8700A3
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006CE70: D73C0005 00020282
	v_add3_u32 v1, s10, s2, v0                                 // 00000006CE78: D6550001 0400040A
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006CE80: D73C0000 00020282
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006CE88: BF870213
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006CE8C: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006CE94: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006CE98: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006CE9C: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006CEA4: 40020201
	s_clause 0x2                                               // 00000006CEA8: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006CEAC: DC6A0000 007C0203
	global_store_b32 v[5:6], v2, off                           // 00000006CEB4: DC6A0000 007C0205
	global_store_b32 v[0:1], v2, off                           // 00000006CEBC: DC6A0000 007C0200
	s_nop 0                                                    // 00000006CEC4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006CEC8: BFB60003
	s_endpgm                                                   // 00000006CECC: BFB00000
subtract_get_global_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000006CED0: BF800000
	.long 0xbf800000                                           // 00000006CED4: BF800000
	.long 0xbf800000                                           // 00000006CED8: BF800000
	.long 0xbf800000                                           // 00000006CEDC: BF800000
	.long 0xbf800000                                           // 00000006CEE0: BF800000
	.long 0xbf800000                                           // 00000006CEE4: BF800000
	.long 0xbf800000                                           // 00000006CEE8: BF800000
	.long 0xbf800000                                           // 00000006CEEC: BF800000
	.long 0xbf800000                                           // 00000006CEF0: BF800000
	.long 0xbf800000                                           // 00000006CEF4: BF800000
	.long 0xbf800000                                           // 00000006CEF8: BF800000
	.long 0xbf800000                                           // 00000006CEFC: BF800000

	.p2align	8
	.type	subtract_get_global_size_get_global_id,@function
	.size	subtract_get_global_size_get_global_id, subtract_get_global_size_get_global_id_symend-subtract_get_global_size_get_global_id
subtract_get_global_size_get_global_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000006CF00: CA240080 010400FF 000003FF
	v_bfe_u32 v2, v0, 20, 10                                   // 00000006CF0C: D6100002 02292900
	v_bfe_u32 v0, v0, 10, 10                                   // 00000006CF14: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000006CF1C: BEA10080
	s_clause 0x1                                               // 00000006CF20: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006CF24: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006CF2C: DC4A0026 07000001
	s_clause 0x3                                               // 00000006CF34: BF850003
	s_load_b32 s5, s[0:1], 0x48                                // 00000006CF38: F4000140 F8000048
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006CF40: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006CF48: F4080300 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 00000006CF50: F4040000 F8000000
	v_lshl_or_b32 v2, s4, 1, v2                                // 00000006CF58: D6560002 04090204
	v_lshl_or_b32 v8, s2, 4, v4                                // 00000006CF60: D6560008 04110802
	v_mov_b32_e32 v3, v1                                       // 00000006CF68: 7E060301
	v_mov_b32_e32 v5, v1                                       // 00000006CF6C: 7E0A0301
	v_lshl_or_b32 v9, s3, 1, v0                                // 00000006CF70: D6560009 04010203
	s_waitcnt lgkmcnt(0)                                       // 00000006CF78: BF89FC07
	v_add_nc_u32_e32 v4, s5, v2                                // 00000006CF7C: 4A080405
	s_lshl_b32 s4, s10, 1                                      // 00000006CF80: 8404810A
	v_add_nc_u32_e32 v0, s12, v8                               // 00000006CF84: 4A00100C
	s_lshl_b32 s2, s8, 4                                       // 00000006CF88: 84028408
	v_add_nc_u32_e32 v2, s14, v9                               // 00000006CF8C: 4A04120E
	v_sub_nc_u32_e32 v8, s4, v4                                // 00000006CF90: 4C100804
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006CF94: D73C0004 00020882
	v_sub_nc_u32_e32 v9, s2, v0                                // 00000006CF9C: 4C120002
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006CFA0: D73C0000 00020082
	s_lshl_b32 s3, s9, 1                                       // 00000006CFA8: 84038109
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006CFAC: BF870009
	v_sub_nc_u32_e32 v10, s3, v2                               // 00000006CFB0: 4C140403
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006CFB4: D73C0002 00020482
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006CFBC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006CFC4: 400A0A01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006CFC8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006CFD0: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006CFD4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006CFDC: 40060601
	s_waitcnt vmcnt(1)                                         // 00000006CFE0: BF8907F7
	v_lshrrev_b32_e32 v11, 16, v6                              // 00000006CFE4: 32160C90
	v_and_b32_e32 v6, 0xffff, v6                               // 00000006CFE8: 360C0CFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006CFF0: BF8903F7
	v_add_nc_u32_e32 v7, v8, v7                                // 00000006CFF4: 4A0E0F08
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006CFF8: BF870002
	v_add_nc_u32_e32 v6, v9, v6                                // 00000006CFFC: 4A0C0D09
	v_add_nc_u32_e32 v9, v10, v11                              // 00000006D000: 4A12170A
	s_clause 0x2                                               // 00000006D004: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006D008: DC6A0000 007C0600
	global_store_b32 v[2:3], v9, off                           // 00000006D010: DC6A0000 007C0902
	global_store_b32 v[4:5], v7, off                           // 00000006D018: DC6A0000 007C0704
	s_nop 0                                                    // 00000006D020: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D024: BFB60003
	s_endpgm                                                   // 00000006D028: BFB00000
subtract_get_global_size_get_global_id_symend:
	.long 0xbf800000                                           // 00000006D02C: BF800000
	.long 0xbf800000                                           // 00000006D030: BF800000
	.long 0xbf800000                                           // 00000006D034: BF800000
	.long 0xbf800000                                           // 00000006D038: BF800000
	.long 0xbf800000                                           // 00000006D03C: BF800000
	.long 0xbf800000                                           // 00000006D040: BF800000
	.long 0xbf800000                                           // 00000006D044: BF800000
	.long 0xbf800000                                           // 00000006D048: BF800000
	.long 0xbf800000                                           // 00000006D04C: BF800000
	.long 0xbf800000                                           // 00000006D050: BF800000
	.long 0xbf800000                                           // 00000006D054: BF800000
	.long 0xbf800000                                           // 00000006D058: BF800000
	.long 0xbf800000                                           // 00000006D05C: BF800000
	.long 0xbf800000                                           // 00000006D060: BF800000
	.long 0xbf800000                                           // 00000006D064: BF800000
	.long 0xbf800000                                           // 00000006D068: BF800000
	.long 0xbf800000                                           // 00000006D06C: BF800000
	.long 0xbf800000                                           // 00000006D070: BF800000
	.long 0xbf800000                                           // 00000006D074: BF800000
	.long 0xbf800000                                           // 00000006D078: BF800000
	.long 0xbf800000                                           // 00000006D07C: BF800000
	.long 0xbf800000                                           // 00000006D080: BF800000
	.long 0xbf800000                                           // 00000006D084: BF800000
	.long 0xbf800000                                           // 00000006D088: BF800000
	.long 0xbf800000                                           // 00000006D08C: BF800000
	.long 0xbf800000                                           // 00000006D090: BF800000
	.long 0xbf800000                                           // 00000006D094: BF800000
	.long 0xbf800000                                           // 00000006D098: BF800000
	.long 0xbf800000                                           // 00000006D09C: BF800000
	.long 0xbf800000                                           // 00000006D0A0: BF800000
	.long 0xbf800000                                           // 00000006D0A4: BF800000
	.long 0xbf800000                                           // 00000006D0A8: BF800000
	.long 0xbf800000                                           // 00000006D0AC: BF800000
	.long 0xbf800000                                           // 00000006D0B0: BF800000
	.long 0xbf800000                                           // 00000006D0B4: BF800000
	.long 0xbf800000                                           // 00000006D0B8: BF800000
	.long 0xbf800000                                           // 00000006D0BC: BF800000
	.long 0xbf800000                                           // 00000006D0C0: BF800000
	.long 0xbf800000                                           // 00000006D0C4: BF800000
	.long 0xbf800000                                           // 00000006D0C8: BF800000
	.long 0xbf800000                                           // 00000006D0CC: BF800000
	.long 0xbf800000                                           // 00000006D0D0: BF800000
	.long 0xbf800000                                           // 00000006D0D4: BF800000
	.long 0xbf800000                                           // 00000006D0D8: BF800000
	.long 0xbf800000                                           // 00000006D0DC: BF800000
	.long 0xbf800000                                           // 00000006D0E0: BF800000
	.long 0xbf800000                                           // 00000006D0E4: BF800000
	.long 0xbf800000                                           // 00000006D0E8: BF800000
	.long 0xbf800000                                           // 00000006D0EC: BF800000
	.long 0xbf800000                                           // 00000006D0F0: BF800000
	.long 0xbf800000                                           // 00000006D0F4: BF800000
	.long 0xbf800000                                           // 00000006D0F8: BF800000
	.long 0xbf800000                                           // 00000006D0FC: BF800000

	.p2align	8
	.type	subtract_get_num_groups_get_global_id,@function
	.size	subtract_get_num_groups_get_global_id, subtract_get_num_groups_get_global_id_symend-subtract_get_num_groups_get_global_id
subtract_get_num_groups_get_global_id:
	v_bfe_u32 v2, v0, 20, 10                                   // 00000006D100: D6100002 02292900
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000006D108: 360600FF 000003FF
	v_bfe_u32 v0, v0, 10, 10                                   // 00000006D110: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000006D118: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006D11C: BF870003
	v_lshl_or_b32 v2, s4, 2, v2                                // 00000006D120: D6560002 04090404
	v_mov_b32_e32 v1, 0                                        // 00000006D128: 7E020280
	v_lshl_or_b32 v4, s2, 1, v3                                // 00000006D12C: D6560004 040D0202
	v_lshl_or_b32 v8, s3, 1, v0                                // 00000006D134: D6560008 04010203
	s_clause 0x1                                               // 00000006D13C: BF850001
	global_load_b32 v6, v1, s[0:1] offset:34                   // 00000006D140: DC520022 06000001
	global_load_u16 v7, v1, s[0:1] offset:38                   // 00000006D148: DC4A0026 07000001
	s_clause 0x3                                               // 00000006D150: BF850003
	s_load_b32 s5, s[0:1], 0x48                                // 00000006D154: F4000140 F8000048
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D15C: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006D164: F4080300 F8000010
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006D16C: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006D174: BF89FC07
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s5, v2      // 00000006D178: CA200101 03020405
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v0, s8, v4      // 00000006D180: CA200101 05000808
	v_add_nc_u32_e32 v4, s10, v8                               // 00000006D188: 4A08100A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006D18C: BF870213
	v_sub_nc_u32_e32 v8, s14, v2                               // 00000006D190: 4C10040E
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000006D194: D73C0002 00020482
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006D19C: BF870004
	v_sub_nc_u32_e32 v9, s12, v0                               // 00000006D1A0: 4C12000C
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 00000006D1A4: D73C0000 00020082
	v_sub_nc_u32_e32 v10, s13, v4                              // 00000006D1AC: 4C14080D
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000006D1B0: D73C0004 00020882
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006D1B8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006D1C0: 40060601
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006D1C4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006D1CC: 40020201
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 00000006D1D0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 00000006D1D8: 400A0A01
	s_waitcnt vmcnt(1)                                         // 00000006D1DC: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v6.l                           // 00000006D1E0: 7C7A0C80
	v_lshrrev_b32_e32 v11, 16, v6                              // 00000006D1E4: 32160C90
	v_add_co_ci_u32_e32 v6, vcc_lo, 0, v9, vcc_lo              // 00000006D1E8: 400C1280
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006D1EC: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v11.l                          // 00000006D1F0: 7C7A1680
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v10, vcc_lo             // 00000006D1F4: 40121480
	s_waitcnt vmcnt(0)                                         // 00000006D1F8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006D1FC: 7C7A0E80
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v8, vcc_lo              // 00000006D200: 400E1080
	s_clause 0x2                                               // 00000006D204: BF850002
	global_store_b32 v[0:1], v6, off                           // 00000006D208: DC6A0000 007C0600
	global_store_b32 v[4:5], v9, off                           // 00000006D210: DC6A0000 007C0904
	global_store_b32 v[2:3], v7, off                           // 00000006D218: DC6A0000 007C0702
	s_nop 0                                                    // 00000006D220: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D224: BFB60003
	s_endpgm                                                   // 00000006D228: BFB00000
subtract_get_num_groups_get_global_id_symend:
	.long 0xbf800000                                           // 00000006D22C: BF800000
	.long 0xbf800000                                           // 00000006D230: BF800000
	.long 0xbf800000                                           // 00000006D234: BF800000
	.long 0xbf800000                                           // 00000006D238: BF800000
	.long 0xbf800000                                           // 00000006D23C: BF800000
	.long 0xbf800000                                           // 00000006D240: BF800000
	.long 0xbf800000                                           // 00000006D244: BF800000
	.long 0xbf800000                                           // 00000006D248: BF800000
	.long 0xbf800000                                           // 00000006D24C: BF800000
	.long 0xbf800000                                           // 00000006D250: BF800000
	.long 0xbf800000                                           // 00000006D254: BF800000
	.long 0xbf800000                                           // 00000006D258: BF800000
	.long 0xbf800000                                           // 00000006D25C: BF800000
	.long 0xbf800000                                           // 00000006D260: BF800000
	.long 0xbf800000                                           // 00000006D264: BF800000
	.long 0xbf800000                                           // 00000006D268: BF800000
	.long 0xbf800000                                           // 00000006D26C: BF800000
	.long 0xbf800000                                           // 00000006D270: BF800000
	.long 0xbf800000                                           // 00000006D274: BF800000
	.long 0xbf800000                                           // 00000006D278: BF800000
	.long 0xbf800000                                           // 00000006D27C: BF800000
	.long 0xbf800000                                           // 00000006D280: BF800000
	.long 0xbf800000                                           // 00000006D284: BF800000
	.long 0xbf800000                                           // 00000006D288: BF800000
	.long 0xbf800000                                           // 00000006D28C: BF800000
	.long 0xbf800000                                           // 00000006D290: BF800000
	.long 0xbf800000                                           // 00000006D294: BF800000
	.long 0xbf800000                                           // 00000006D298: BF800000
	.long 0xbf800000                                           // 00000006D29C: BF800000
	.long 0xbf800000                                           // 00000006D2A0: BF800000
	.long 0xbf800000                                           // 00000006D2A4: BF800000
	.long 0xbf800000                                           // 00000006D2A8: BF800000
	.long 0xbf800000                                           // 00000006D2AC: BF800000
	.long 0xbf800000                                           // 00000006D2B0: BF800000
	.long 0xbf800000                                           // 00000006D2B4: BF800000
	.long 0xbf800000                                           // 00000006D2B8: BF800000
	.long 0xbf800000                                           // 00000006D2BC: BF800000
	.long 0xbf800000                                           // 00000006D2C0: BF800000
	.long 0xbf800000                                           // 00000006D2C4: BF800000
	.long 0xbf800000                                           // 00000006D2C8: BF800000
	.long 0xbf800000                                           // 00000006D2CC: BF800000
	.long 0xbf800000                                           // 00000006D2D0: BF800000
	.long 0xbf800000                                           // 00000006D2D4: BF800000
	.long 0xbf800000                                           // 00000006D2D8: BF800000
	.long 0xbf800000                                           // 00000006D2DC: BF800000
	.long 0xbf800000                                           // 00000006D2E0: BF800000
	.long 0xbf800000                                           // 00000006D2E4: BF800000
	.long 0xbf800000                                           // 00000006D2E8: BF800000
	.long 0xbf800000                                           // 00000006D2EC: BF800000
	.long 0xbf800000                                           // 00000006D2F0: BF800000
	.long 0xbf800000                                           // 00000006D2F4: BF800000
	.long 0xbf800000                                           // 00000006D2F8: BF800000
	.long 0xbf800000                                           // 00000006D2FC: BF800000

	.p2align	8
	.type	subtract_get_work_dim_get_global_id,@function
	.size	subtract_get_work_dim_get_global_id, subtract_get_work_dim_get_global_id_symend-subtract_get_work_dim_get_global_id
subtract_get_work_dim_get_global_id:
	s_clause 0x2                                               // 00000006D300: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006D30C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x50                                // 00000006D314: F4000180 F8000050
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006D31C: CA240080 010200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006D328: F4040000 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006D330: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006D338: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006D340: BF8701A3
	v_lshl_or_b32 v2, s2, 1, v2                                // 00000006D344: D6560002 04090202
	s_mov_b32 s33, 0                                           // 00000006D34C: BEA10080
	v_lshl_or_b32 v4, s3, 1, v3                                // 00000006D350: D6560004 040D0203
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006D358: BF870003
	v_lshl_or_b32 v6, s4, 2, v0                                // 00000006D35C: D6560006 04010404
	v_mov_b32_e32 v3, v1                                       // 00000006D364: 7E060301
	s_waitcnt lgkmcnt(0)                                       // 00000006D368: BF89FC07
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v0, s8, v2      // 00000006D36C: CA200101 05000408
	v_add_nc_u32_e32 v2, s10, v4                               // 00000006D374: 4A04080A
	v_add_nc_u32_e32 v4, s5, v6                                // 00000006D378: 4A080C05
	s_and_b32 s2, s6, 0xffff                                   // 00000006D37C: 8B02FF06 0000FFFF
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006D384: BF870003
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006D388: D73C0006 00020082
	v_sub_nc_u32_e32 v8, s2, v0                                // 00000006D390: 4C100002
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006D394: D73C0000 00020482
	v_sub_nc_u32_e32 v9, s2, v2                                // 00000006D39C: 4C120402
	v_lshlrev_b64 v[2:3], 2, v[4:5]                            // 00000006D3A0: D73C0002 00020882
	v_sub_nc_u32_e32 v4, s2, v4                                // 00000006D3A8: 4C080802
	v_add_co_u32 v5, vcc_lo, s0, v6                            // 00000006D3AC: D7006A05 00020C00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v7, vcc_lo             // 00000006D3B4: 400C0E01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006D3B8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006D3C0: 40020201
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006D3C4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006D3CC: 40060601
	s_clause 0x2                                               // 00000006D3D0: BF850002
	global_store_b32 v[5:6], v8, off                           // 00000006D3D4: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 00000006D3DC: DC6A0000 007C0900
	global_store_b32 v[2:3], v4, off                           // 00000006D3E4: DC6A0000 007C0402
	s_nop 0                                                    // 00000006D3EC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D3F0: BFB60003
	s_endpgm                                                   // 00000006D3F4: BFB00000
subtract_get_work_dim_get_global_id_symend:
	.long 0xbf800000                                           // 00000006D3F8: BF800000
	.long 0xbf800000                                           // 00000006D3FC: BF800000

	.p2align	8
	.type	subtract_x_get_global_size,@function
	.size	subtract_x_get_global_size, subtract_x_get_global_size_symend-subtract_x_get_global_size
subtract_x_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006D400: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000006D40C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006D410: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006D418: D6100000 02292900
	s_clause 0x1                                               // 00000006D420: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006D424: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006D42C: DC4A0026 08000002
	s_clause 0x4                                               // 00000006D434: BF850004
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D438: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006D440: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006D448: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], null                            // 00000006D450: F4040180 F8000000
	s_load_b32 s0, s[0:1], 0x8                                 // 00000006D458: F4000000 F8000008
	s_lshl_b32 s1, s3, 1                                       // 00000006D460: 84018103
	s_mov_b32 s33, 0                                           // 00000006D464: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006D468: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006D46C: D6550001 04040408
	s_lshl_b32 s2, s4, 1                                       // 00000006D474: 84028104
	s_lshl_b32 s3, s13, 1                                      // 00000006D478: 8403810D
	s_lshl_b32 s4, s14, 1                                      // 00000006D47C: 8404810E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006D480: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006D484: D73C0003 00020282
	v_add3_u32 v1, s10, s1, v5                                 // 00000006D48C: D6550001 0414020A
	s_lshl_b32 s1, s12, 4                                      // 00000006D494: 8401840C
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006D498: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 00000006D4A0: D6550001 04000405
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006D4A8: BF8701A4
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000006D4AC: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000006D4B4: 40080807
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006D4B8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 00000006D4C0: D7006A05 00020A06
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 00000006D4C8: 400C0C07
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006D4CC: BF870213
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006D4D0: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006D4D8: 40020207
	s_waitcnt vmcnt(1)                                         // 00000006D4DC: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006D4E0: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006D4E4: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006D4EC: BF8903F7
	v_add_nc_u32_e32 v8, s4, v8                                // 00000006D4F0: 4A101004
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D4F4: BF870193
	v_add_nc_u32_e32 v2, s3, v2                                // 00000006D4F8: 4A040403
	v_add_nc_u32_e32 v7, s1, v7                                // 00000006D4FC: 4A0E0E01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D500: BF870193
	v_sub_nc_u32_e32 v8, s0, v8                                // 00000006D504: 4C101000
	v_sub_nc_u32_e32 v2, s0, v2                                // 00000006D508: 4C040400
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006D50C: BF870003
	v_sub_nc_u32_e32 v7, s0, v7                                // 00000006D510: 4C0E0E00
	s_clause 0x2                                               // 00000006D514: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006D518: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006D520: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006D528: DC6A0000 007C0800
	s_nop 0                                                    // 00000006D530: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D534: BFB60003
	s_endpgm                                                   // 00000006D538: BFB00000
subtract_x_get_global_size_symend:
	.long 0xbf800000                                           // 00000006D53C: BF800000
	.long 0xbf800000                                           // 00000006D540: BF800000
	.long 0xbf800000                                           // 00000006D544: BF800000
	.long 0xbf800000                                           // 00000006D548: BF800000
	.long 0xbf800000                                           // 00000006D54C: BF800000
	.long 0xbf800000                                           // 00000006D550: BF800000
	.long 0xbf800000                                           // 00000006D554: BF800000
	.long 0xbf800000                                           // 00000006D558: BF800000
	.long 0xbf800000                                           // 00000006D55C: BF800000
	.long 0xbf800000                                           // 00000006D560: BF800000
	.long 0xbf800000                                           // 00000006D564: BF800000
	.long 0xbf800000                                           // 00000006D568: BF800000
	.long 0xbf800000                                           // 00000006D56C: BF800000
	.long 0xbf800000                                           // 00000006D570: BF800000
	.long 0xbf800000                                           // 00000006D574: BF800000
	.long 0xbf800000                                           // 00000006D578: BF800000
	.long 0xbf800000                                           // 00000006D57C: BF800000
	.long 0xbf800000                                           // 00000006D580: BF800000
	.long 0xbf800000                                           // 00000006D584: BF800000
	.long 0xbf800000                                           // 00000006D588: BF800000
	.long 0xbf800000                                           // 00000006D58C: BF800000
	.long 0xbf800000                                           // 00000006D590: BF800000
	.long 0xbf800000                                           // 00000006D594: BF800000
	.long 0xbf800000                                           // 00000006D598: BF800000
	.long 0xbf800000                                           // 00000006D59C: BF800000
	.long 0xbf800000                                           // 00000006D5A0: BF800000
	.long 0xbf800000                                           // 00000006D5A4: BF800000
	.long 0xbf800000                                           // 00000006D5A8: BF800000
	.long 0xbf800000                                           // 00000006D5AC: BF800000
	.long 0xbf800000                                           // 00000006D5B0: BF800000
	.long 0xbf800000                                           // 00000006D5B4: BF800000
	.long 0xbf800000                                           // 00000006D5B8: BF800000
	.long 0xbf800000                                           // 00000006D5BC: BF800000
	.long 0xbf800000                                           // 00000006D5C0: BF800000
	.long 0xbf800000                                           // 00000006D5C4: BF800000
	.long 0xbf800000                                           // 00000006D5C8: BF800000
	.long 0xbf800000                                           // 00000006D5CC: BF800000
	.long 0xbf800000                                           // 00000006D5D0: BF800000
	.long 0xbf800000                                           // 00000006D5D4: BF800000
	.long 0xbf800000                                           // 00000006D5D8: BF800000
	.long 0xbf800000                                           // 00000006D5DC: BF800000
	.long 0xbf800000                                           // 00000006D5E0: BF800000
	.long 0xbf800000                                           // 00000006D5E4: BF800000
	.long 0xbf800000                                           // 00000006D5E8: BF800000
	.long 0xbf800000                                           // 00000006D5EC: BF800000
	.long 0xbf800000                                           // 00000006D5F0: BF800000
	.long 0xbf800000                                           // 00000006D5F4: BF800000
	.long 0xbf800000                                           // 00000006D5F8: BF800000
	.long 0xbf800000                                           // 00000006D5FC: BF800000

	.p2align	8
	.type	subtract_get_global_offset_get_global_size,@function
	.size	subtract_get_global_offset_get_global_size, subtract_get_global_offset_get_global_size_symend-subtract_get_global_offset_get_global_size
subtract_get_global_offset_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006D600: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006D60C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006D610: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006D618: D6100000 02292900
	s_clause 0x1                                               // 00000006D620: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006D624: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006D62C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006D634: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D638: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006D640: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006D648: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006D650: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000006D658: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006D65C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006D660: D6550001 04040408
	s_lshl_b32 s2, s3, 4                                       // 00000006D668: 84028403
	s_lshl_b32 s3, s4, 1                                       // 00000006D66C: 84038104
	s_lshl_b32 s4, s13, 4                                      // 00000006D670: 8404840D
	s_lshl_b32 s6, s14, 1                                      // 00000006D674: 8406810E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006D678: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006D680: D6550001 0414040A
	s_lshl_b32 s2, s12, 1                                      // 00000006D688: 8402810C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006D68C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006D690: D73C0005 00020282
	v_add3_u32 v1, s5, s3, v0                                  // 00000006D698: D6550001 04000605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006D6A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006D6A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006D6AC: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006D6B0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006D6B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006D6C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006D6C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006D6CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006D6D0: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006D6D4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006D6D8: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006D6DC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006D6E4: BF8903F7
	v_add_nc_u32_e32 v8, s6, v8                                // 00000006D6E8: 4A101006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D6EC: BF870193
	v_add_nc_u32_e32 v2, s4, v2                                // 00000006D6F0: 4A040404
	v_add_nc_u32_e32 v7, s2, v7                                // 00000006D6F4: 4A0E0E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D6F8: BF870193
	v_sub_nc_u32_e32 v8, s5, v8                                // 00000006D6FC: 4C101005
	v_sub_nc_u32_e32 v2, s10, v2                               // 00000006D700: 4C04040A
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006D704: BF870003
	v_sub_nc_u32_e32 v7, s8, v7                                // 00000006D708: 4C0E0E08
	s_clause 0x2                                               // 00000006D70C: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006D710: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006D718: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006D720: DC6A0000 007C0800
	s_nop 0                                                    // 00000006D728: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D72C: BFB60003
	s_endpgm                                                   // 00000006D730: BFB00000
subtract_get_global_offset_get_global_size_symend:
	.long 0xbf800000                                           // 00000006D734: BF800000
	.long 0xbf800000                                           // 00000006D738: BF800000
	.long 0xbf800000                                           // 00000006D73C: BF800000
	.long 0xbf800000                                           // 00000006D740: BF800000
	.long 0xbf800000                                           // 00000006D744: BF800000
	.long 0xbf800000                                           // 00000006D748: BF800000
	.long 0xbf800000                                           // 00000006D74C: BF800000
	.long 0xbf800000                                           // 00000006D750: BF800000
	.long 0xbf800000                                           // 00000006D754: BF800000
	.long 0xbf800000                                           // 00000006D758: BF800000
	.long 0xbf800000                                           // 00000006D75C: BF800000
	.long 0xbf800000                                           // 00000006D760: BF800000
	.long 0xbf800000                                           // 00000006D764: BF800000
	.long 0xbf800000                                           // 00000006D768: BF800000
	.long 0xbf800000                                           // 00000006D76C: BF800000
	.long 0xbf800000                                           // 00000006D770: BF800000
	.long 0xbf800000                                           // 00000006D774: BF800000
	.long 0xbf800000                                           // 00000006D778: BF800000
	.long 0xbf800000                                           // 00000006D77C: BF800000
	.long 0xbf800000                                           // 00000006D780: BF800000
	.long 0xbf800000                                           // 00000006D784: BF800000
	.long 0xbf800000                                           // 00000006D788: BF800000
	.long 0xbf800000                                           // 00000006D78C: BF800000
	.long 0xbf800000                                           // 00000006D790: BF800000
	.long 0xbf800000                                           // 00000006D794: BF800000
	.long 0xbf800000                                           // 00000006D798: BF800000
	.long 0xbf800000                                           // 00000006D79C: BF800000
	.long 0xbf800000                                           // 00000006D7A0: BF800000
	.long 0xbf800000                                           // 00000006D7A4: BF800000
	.long 0xbf800000                                           // 00000006D7A8: BF800000
	.long 0xbf800000                                           // 00000006D7AC: BF800000
	.long 0xbf800000                                           // 00000006D7B0: BF800000
	.long 0xbf800000                                           // 00000006D7B4: BF800000
	.long 0xbf800000                                           // 00000006D7B8: BF800000
	.long 0xbf800000                                           // 00000006D7BC: BF800000
	.long 0xbf800000                                           // 00000006D7C0: BF800000
	.long 0xbf800000                                           // 00000006D7C4: BF800000
	.long 0xbf800000                                           // 00000006D7C8: BF800000
	.long 0xbf800000                                           // 00000006D7CC: BF800000
	.long 0xbf800000                                           // 00000006D7D0: BF800000
	.long 0xbf800000                                           // 00000006D7D4: BF800000
	.long 0xbf800000                                           // 00000006D7D8: BF800000
	.long 0xbf800000                                           // 00000006D7DC: BF800000
	.long 0xbf800000                                           // 00000006D7E0: BF800000
	.long 0xbf800000                                           // 00000006D7E4: BF800000
	.long 0xbf800000                                           // 00000006D7E8: BF800000
	.long 0xbf800000                                           // 00000006D7EC: BF800000
	.long 0xbf800000                                           // 00000006D7F0: BF800000
	.long 0xbf800000                                           // 00000006D7F4: BF800000
	.long 0xbf800000                                           // 00000006D7F8: BF800000
	.long 0xbf800000                                           // 00000006D7FC: BF800000

	.p2align	8
	.type	subtract_get_local_id_get_global_size,@function
	.size	subtract_get_local_id_get_global_size, subtract_get_local_id_get_global_size_symend-subtract_get_local_id_get_global_size
subtract_get_local_id_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 00000006D800: CA240080 020800FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000006D80C: 84028302
	v_bfe_u32 v10, v0, 10, 10                                  // 00000006D810: D610000A 02291500
	v_bfe_u32 v11, v0, 20, 10                                  // 00000006D818: D610000B 02292900
	s_clause 0x1                                               // 00000006D820: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006D824: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006D82C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006D834: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006D838: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006D840: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006D848: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006D850: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000006D858: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006D85C: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 00000006D860: D6550001 04240408
	s_lshl_b32 s2, s3, 2                                       // 00000006D868: 84028203
	s_lshl_b32 s3, s4, 1                                       // 00000006D86C: 84038104
	s_lshl_b32 s4, s13, 2                                      // 00000006D870: 8404820D
	s_lshl_b32 s6, s14, 1                                      // 00000006D874: 8406810E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006D878: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v10                                // 00000006D880: D6550001 0428040A
	s_lshl_b32 s2, s12, 3                                      // 00000006D888: 8402830C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006D88C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006D890: D73C0005 00020282
	v_add3_u32 v1, s5, s3, v11                                 // 00000006D898: D6550001 042C0605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006D8A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006D8A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006D8AC: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006D8B0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006D8B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006D8C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006D8C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006D8CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006D8D0: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006D8D4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006D8D8: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006D8DC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006D8E4: BF8903F7
	v_add_nc_u32_e32 v8, s6, v8                                // 00000006D8E8: 4A101006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D8EC: BF870193
	v_add_nc_u32_e32 v2, s4, v2                                // 00000006D8F0: 4A040404
	v_add_nc_u32_e32 v7, s2, v7                                // 00000006D8F4: 4A0E0E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006D8F8: BF870193
	v_sub_nc_u32_e32 v8, v11, v8                               // 00000006D8FC: 4C10110B
	v_sub_nc_u32_e32 v2, v10, v2                               // 00000006D900: 4C04050A
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006D904: BF870003
	v_sub_nc_u32_e32 v7, v9, v7                                // 00000006D908: 4C0E0F09
	s_clause 0x2                                               // 00000006D90C: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006D910: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006D918: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006D920: DC6A0000 007C0800
	s_nop 0                                                    // 00000006D928: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006D92C: BFB60003
	s_endpgm                                                   // 00000006D930: BFB00000
subtract_get_local_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000006D934: BF800000
	.long 0xbf800000                                           // 00000006D938: BF800000
	.long 0xbf800000                                           // 00000006D93C: BF800000
	.long 0xbf800000                                           // 00000006D940: BF800000
	.long 0xbf800000                                           // 00000006D944: BF800000
	.long 0xbf800000                                           // 00000006D948: BF800000
	.long 0xbf800000                                           // 00000006D94C: BF800000
	.long 0xbf800000                                           // 00000006D950: BF800000
	.long 0xbf800000                                           // 00000006D954: BF800000
	.long 0xbf800000                                           // 00000006D958: BF800000
	.long 0xbf800000                                           // 00000006D95C: BF800000
	.long 0xbf800000                                           // 00000006D960: BF800000
	.long 0xbf800000                                           // 00000006D964: BF800000
	.long 0xbf800000                                           // 00000006D968: BF800000
	.long 0xbf800000                                           // 00000006D96C: BF800000
	.long 0xbf800000                                           // 00000006D970: BF800000
	.long 0xbf800000                                           // 00000006D974: BF800000
	.long 0xbf800000                                           // 00000006D978: BF800000
	.long 0xbf800000                                           // 00000006D97C: BF800000
	.long 0xbf800000                                           // 00000006D980: BF800000
	.long 0xbf800000                                           // 00000006D984: BF800000
	.long 0xbf800000                                           // 00000006D988: BF800000
	.long 0xbf800000                                           // 00000006D98C: BF800000
	.long 0xbf800000                                           // 00000006D990: BF800000
	.long 0xbf800000                                           // 00000006D994: BF800000
	.long 0xbf800000                                           // 00000006D998: BF800000
	.long 0xbf800000                                           // 00000006D99C: BF800000
	.long 0xbf800000                                           // 00000006D9A0: BF800000
	.long 0xbf800000                                           // 00000006D9A4: BF800000
	.long 0xbf800000                                           // 00000006D9A8: BF800000
	.long 0xbf800000                                           // 00000006D9AC: BF800000
	.long 0xbf800000                                           // 00000006D9B0: BF800000
	.long 0xbf800000                                           // 00000006D9B4: BF800000
	.long 0xbf800000                                           // 00000006D9B8: BF800000
	.long 0xbf800000                                           // 00000006D9BC: BF800000
	.long 0xbf800000                                           // 00000006D9C0: BF800000
	.long 0xbf800000                                           // 00000006D9C4: BF800000
	.long 0xbf800000                                           // 00000006D9C8: BF800000
	.long 0xbf800000                                           // 00000006D9CC: BF800000
	.long 0xbf800000                                           // 00000006D9D0: BF800000
	.long 0xbf800000                                           // 00000006D9D4: BF800000
	.long 0xbf800000                                           // 00000006D9D8: BF800000
	.long 0xbf800000                                           // 00000006D9DC: BF800000
	.long 0xbf800000                                           // 00000006D9E0: BF800000
	.long 0xbf800000                                           // 00000006D9E4: BF800000
	.long 0xbf800000                                           // 00000006D9E8: BF800000
	.long 0xbf800000                                           // 00000006D9EC: BF800000
	.long 0xbf800000                                           // 00000006D9F0: BF800000
	.long 0xbf800000                                           // 00000006D9F4: BF800000
	.long 0xbf800000                                           // 00000006D9F8: BF800000
	.long 0xbf800000                                           // 00000006D9FC: BF800000

	.p2align	8
	.type	subtract_get_group_id_get_global_size,@function
	.size	subtract_get_group_id_get_global_size, subtract_get_group_id_get_global_size_symend-subtract_get_group_id_get_global_size
subtract_get_group_id_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006DA00: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 00000006DA0C: 84068102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006DA10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006DA18: D6100000 02292900
	s_clause 0x1                                               // 00000006DA20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006DA24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006DA2C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006DA34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006DA38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006DA40: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006DA48: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006DA50: F4040000 F8000008
	s_lshl_b32 s7, s4, 1                                       // 00000006DA58: 84078104
	s_mov_b32 s33, 0                                           // 00000006DA5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006DA60: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 00000006DA64: D6550001 04040C08
	s_lshl_b32 s6, s3, 4                                       // 00000006DA6C: 84068403
	s_lshl_b32 s8, s13, 4                                      // 00000006DA70: 8408840D
	s_lshl_b32 s9, s14, 1                                      // 00000006DA74: 8409810E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006DA78: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006DA7C: D73C0003 00020282
	v_add3_u32 v1, s10, s6, v5                                 // 00000006DA84: D6550001 04140C0A
	s_lshl_b32 s6, s12, 1                                      // 00000006DA8C: 8406810C
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006DA90: D73C0005 00020282
	v_add3_u32 v1, s5, s7, v0                                  // 00000006DA98: D6550001 04000E05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006DAA0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006DAA4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006DAAC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006DAB0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006DAB8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006DAC0: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006DAC4: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006DAC8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006DAD0: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006DAD4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006DAD8: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006DADC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006DAE4: BF8903F7
	v_add_nc_u32_e32 v8, s9, v8                                // 00000006DAE8: 4A101009
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006DAEC: BF870193
	v_add_nc_u32_e32 v2, s8, v2                                // 00000006DAF0: 4A040408
	v_add_nc_u32_e32 v7, s6, v7                                // 00000006DAF4: 4A0E0E06
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006DAF8: BF870193
	v_sub_nc_u32_e32 v8, s4, v8                                // 00000006DAFC: 4C101004
	v_sub_nc_u32_e32 v2, s3, v2                                // 00000006DB00: 4C040403
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006DB04: BF870003
	v_sub_nc_u32_e32 v7, s2, v7                                // 00000006DB08: 4C0E0E02
	s_clause 0x2                                               // 00000006DB0C: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006DB10: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006DB18: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006DB20: DC6A0000 007C0800
	s_nop 0                                                    // 00000006DB28: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006DB2C: BFB60003
	s_endpgm                                                   // 00000006DB30: BFB00000
subtract_get_group_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000006DB34: BF800000
	.long 0xbf800000                                           // 00000006DB38: BF800000
	.long 0xbf800000                                           // 00000006DB3C: BF800000
	.long 0xbf800000                                           // 00000006DB40: BF800000
	.long 0xbf800000                                           // 00000006DB44: BF800000
	.long 0xbf800000                                           // 00000006DB48: BF800000
	.long 0xbf800000                                           // 00000006DB4C: BF800000
	.long 0xbf800000                                           // 00000006DB50: BF800000
	.long 0xbf800000                                           // 00000006DB54: BF800000
	.long 0xbf800000                                           // 00000006DB58: BF800000
	.long 0xbf800000                                           // 00000006DB5C: BF800000
	.long 0xbf800000                                           // 00000006DB60: BF800000
	.long 0xbf800000                                           // 00000006DB64: BF800000
	.long 0xbf800000                                           // 00000006DB68: BF800000
	.long 0xbf800000                                           // 00000006DB6C: BF800000
	.long 0xbf800000                                           // 00000006DB70: BF800000
	.long 0xbf800000                                           // 00000006DB74: BF800000
	.long 0xbf800000                                           // 00000006DB78: BF800000
	.long 0xbf800000                                           // 00000006DB7C: BF800000
	.long 0xbf800000                                           // 00000006DB80: BF800000
	.long 0xbf800000                                           // 00000006DB84: BF800000
	.long 0xbf800000                                           // 00000006DB88: BF800000
	.long 0xbf800000                                           // 00000006DB8C: BF800000
	.long 0xbf800000                                           // 00000006DB90: BF800000
	.long 0xbf800000                                           // 00000006DB94: BF800000
	.long 0xbf800000                                           // 00000006DB98: BF800000
	.long 0xbf800000                                           // 00000006DB9C: BF800000
	.long 0xbf800000                                           // 00000006DBA0: BF800000
	.long 0xbf800000                                           // 00000006DBA4: BF800000
	.long 0xbf800000                                           // 00000006DBA8: BF800000
	.long 0xbf800000                                           // 00000006DBAC: BF800000
	.long 0xbf800000                                           // 00000006DBB0: BF800000
	.long 0xbf800000                                           // 00000006DBB4: BF800000
	.long 0xbf800000                                           // 00000006DBB8: BF800000
	.long 0xbf800000                                           // 00000006DBBC: BF800000
	.long 0xbf800000                                           // 00000006DBC0: BF800000
	.long 0xbf800000                                           // 00000006DBC4: BF800000
	.long 0xbf800000                                           // 00000006DBC8: BF800000
	.long 0xbf800000                                           // 00000006DBCC: BF800000
	.long 0xbf800000                                           // 00000006DBD0: BF800000
	.long 0xbf800000                                           // 00000006DBD4: BF800000
	.long 0xbf800000                                           // 00000006DBD8: BF800000
	.long 0xbf800000                                           // 00000006DBDC: BF800000
	.long 0xbf800000                                           // 00000006DBE0: BF800000
	.long 0xbf800000                                           // 00000006DBE4: BF800000
	.long 0xbf800000                                           // 00000006DBE8: BF800000
	.long 0xbf800000                                           // 00000006DBEC: BF800000
	.long 0xbf800000                                           // 00000006DBF0: BF800000
	.long 0xbf800000                                           // 00000006DBF4: BF800000
	.long 0xbf800000                                           // 00000006DBF8: BF800000
	.long 0xbf800000                                           // 00000006DBFC: BF800000

	.p2align	8
	.type	subtract_get_local_size_get_global_size,@function
	.size	subtract_get_local_size_get_global_size, subtract_get_local_size_get_global_size_symend-subtract_get_local_size_get_global_size
subtract_get_local_size_get_global_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006DC00: F4080200 F8000010
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006DC08: CA240080 020000FF 000003FF
	s_add_u32 s5, s0, 16                                       // 00000006DC14: 80059000
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006DC18: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006DC20: D6100000 02292900
	s_clause 0x1                                               // 00000006DC28: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006DC2C: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006DC34: DC4A0026 08000002
	s_waitcnt lgkmcnt(0)                                       // 00000006DC3C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006DC40: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006DC44: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000006DC48: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006DC4C: 840E8204
	s_mov_b32 s33, 0                                           // 00000006DC50: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006DC54: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006DC58: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000006DC5C: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000006DC60: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006DC64: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006DC68: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000006DC6C: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006DC70: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006DC74: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006DC78: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006DC7C: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006DC80: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006DC84: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006DC88: 8205800B
	s_clause 0x2                                               // 00000006DC8C: BF850002
	global_load_u16 v9, v2, s[6:7]                             // 00000006DC90: DC4A0000 09060002
	global_load_u16 v10, v2, s[2:3]                            // 00000006DC98: DC4A0000 0A020002
	global_load_u16 v11, v2, s[4:5]                            // 00000006DCA0: DC4A0000 0B040002
	s_clause 0x2                                               // 00000006DCA8: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006DCAC: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006DCB4: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006DCBC: F4040000 F8000008
	s_lshl_b32 s3, s9, 1                                       // 00000006DCC4: 84038109
	s_waitcnt lgkmcnt(0)                                       // 00000006DCC8: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 00000006DCCC: D6550001 04041804
	s_lshl_b32 s4, s10, 2                                      // 00000006DCD4: 8404820A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006DCD8: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006DCDC: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 00000006DCE4: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006DCEC: D73C0005 00020282
	v_add3_u32 v1, s2, s14, v0                                 // 00000006DCF4: D6550001 04001C02
	s_lshl_b32 s2, s8, 1                                       // 00000006DCFC: 84028108
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006DD00: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006DD04: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006DD0C: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006DD10: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006DD18: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006DD20: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006DD24: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006DD28: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006DD30: 40020201
	s_waitcnt vmcnt(4)                                         // 00000006DD34: BF8913F7
	v_and_b32_e32 v12, 0xffff, v7                              // 00000006DD38: 36180EFF 0000FFFF
	v_lshrrev_b32_e32 v7, 16, v7                               // 00000006DD40: 320E0E90
	s_waitcnt vmcnt(3)                                         // 00000006DD44: BF890FF7
	v_add_nc_u32_e32 v2, s4, v8                                // 00000006DD48: 4A041004
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006DD4C: BF870193
	v_add_nc_u32_e32 v8, s2, v12                               // 00000006DD50: 4A101802
	v_add_nc_u32_e32 v7, s3, v7                                // 00000006DD54: 4A0E0E03
	s_waitcnt vmcnt(2)                                         // 00000006DD58: BF890BF7
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000006DD5C: BF870122
	v_sub_nc_u32_e32 v8, v9, v8                                // 00000006DD60: 4C101109
	s_waitcnt vmcnt(1)                                         // 00000006DD64: BF8907F7
	v_sub_nc_u32_e32 v7, v10, v7                               // 00000006DD68: 4C0E0F0A
	s_waitcnt vmcnt(0)                                         // 00000006DD6C: BF8903F7
	v_sub_nc_u32_e32 v2, v11, v2                               // 00000006DD70: 4C04050B
	s_clause 0x2                                               // 00000006DD74: BF850002
	global_store_b32 v[3:4], v8, off                           // 00000006DD78: DC6A0000 007C0803
	global_store_b32 v[5:6], v7, off                           // 00000006DD80: DC6A0000 007C0705
	global_store_b32 v[0:1], v2, off                           // 00000006DD88: DC6A0000 007C0200
	s_nop 0                                                    // 00000006DD90: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006DD94: BFB60003
	s_endpgm                                                   // 00000006DD98: BFB00000
subtract_get_local_size_get_global_size_symend:
	.long 0xbf800000                                           // 00000006DD9C: BF800000
	.long 0xbf800000                                           // 00000006DDA0: BF800000
	.long 0xbf800000                                           // 00000006DDA4: BF800000
	.long 0xbf800000                                           // 00000006DDA8: BF800000
	.long 0xbf800000                                           // 00000006DDAC: BF800000
	.long 0xbf800000                                           // 00000006DDB0: BF800000
	.long 0xbf800000                                           // 00000006DDB4: BF800000
	.long 0xbf800000                                           // 00000006DDB8: BF800000
	.long 0xbf800000                                           // 00000006DDBC: BF800000
	.long 0xbf800000                                           // 00000006DDC0: BF800000
	.long 0xbf800000                                           // 00000006DDC4: BF800000
	.long 0xbf800000                                           // 00000006DDC8: BF800000
	.long 0xbf800000                                           // 00000006DDCC: BF800000
	.long 0xbf800000                                           // 00000006DDD0: BF800000
	.long 0xbf800000                                           // 00000006DDD4: BF800000
	.long 0xbf800000                                           // 00000006DDD8: BF800000
	.long 0xbf800000                                           // 00000006DDDC: BF800000
	.long 0xbf800000                                           // 00000006DDE0: BF800000
	.long 0xbf800000                                           // 00000006DDE4: BF800000
	.long 0xbf800000                                           // 00000006DDE8: BF800000
	.long 0xbf800000                                           // 00000006DDEC: BF800000
	.long 0xbf800000                                           // 00000006DDF0: BF800000
	.long 0xbf800000                                           // 00000006DDF4: BF800000
	.long 0xbf800000                                           // 00000006DDF8: BF800000
	.long 0xbf800000                                           // 00000006DDFC: BF800000

	.p2align	8
	.type	subtract_get_global_id_get_global_size,@function
	.size	subtract_get_global_id_get_global_size, subtract_get_global_id_get_global_size_symend-subtract_get_global_id_get_global_size
subtract_get_global_id_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000006DE00: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000006DE0C: D6100003 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006DE14: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006DE1C: BEA10080
	s_clause 0x1                                               // 00000006DE20: BF850001
	global_load_b32 v11, v1, s[0:1] offset:34                  // 00000006DE24: DC520022 0B000001
	global_load_u16 v12, v1, s[0:1] offset:38                  // 00000006DE2C: DC4A0026 0C000001
	s_clause 0x3                                               // 00000006DE34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006DE38: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006DE40: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006DE48: F4080300 F8000010
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006DE50: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 1, v2                                // 00000006DE58: D6560000 04090202
	v_lshl_or_b32 v3, s3, 1, v3                                // 00000006DE60: D6560003 040D0203
	v_lshl_or_b32 v7, s4, 2, v4                                // 00000006DE68: D6560007 04110404
	v_mov_b32_e32 v2, v1                                       // 00000006DE70: 7E040301
	v_mov_b32_e32 v4, v1                                       // 00000006DE74: 7E080301
	v_lshlrev_b64 v[5:6], 2, v[0:1]                            // 00000006DE78: D73C0005 00020082
	s_waitcnt lgkmcnt(0)                                       // 00000006DE80: BF89FC07
	v_add_nc_u32_e32 v1, s10, v3                               // 00000006DE84: 4A02060A
	v_add_nc_u32_e32 v3, s5, v7                                // 00000006DE88: 4A060E05
	s_lshl_b32 s2, s12, 1                                      // 00000006DE8C: 8402810C
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006DE90: BF870193
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006DE94: D7006A05 00020A00
	v_lshlrev_b64 v[7:8], 2, v[1:2]                            // 00000006DE9C: D73C0007 00020282
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006DEA4: BF870003
	v_lshlrev_b64 v[9:10], 2, v[3:4]                           // 00000006DEA8: D73C0009 00020682
	s_lshl_b32 s3, s13, 1                                      // 00000006DEB0: 8403810D
	v_add_nc_u32_e32 v0, s8, v0                                // 00000006DEB4: 4A000008
	s_lshl_b32 s4, s14, 2                                      // 00000006DEB8: 8404820E
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006DEBC: 400C0C01
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 00000006DEC0: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 00000006DEC8: 40101001
	v_add_co_u32 v9, vcc_lo, s0, v9                            // 00000006DECC: D7006A09 00021200
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v10, vcc_lo           // 00000006DED4: 40141401
	s_waitcnt vmcnt(1)                                         // 00000006DED8: BF8907F7
	v_and_b32_e32 v4, 0xffff, v11                              // 00000006DEDC: 360816FF 0000FFFF
	v_lshrrev_b32_e32 v2, 16, v11                              // 00000006DEE4: 32041690
	s_waitcnt vmcnt(0)                                         // 00000006DEE8: BF8903F7
	v_add_nc_u32_e32 v11, s4, v12                              // 00000006DEEC: 4A161804
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006DEF0: BF870193
	v_add_nc_u32_e32 v4, s2, v4                                // 00000006DEF4: 4A080802
	v_add_nc_u32_e32 v2, s3, v2                                // 00000006DEF8: 4A040403
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006DEFC: BF870112
	v_sub_nc_u32_e32 v0, v0, v4                                // 00000006DF00: 4C000900
	v_sub_nc_u32_e32 v1, v1, v2                                // 00000006DF04: 4C020501
	v_sub_nc_u32_e32 v2, v3, v11                               // 00000006DF08: 4C041703
	s_clause 0x2                                               // 00000006DF0C: BF850002
	global_store_b32 v[5:6], v0, off                           // 00000006DF10: DC6A0000 007C0005
	global_store_b32 v[7:8], v1, off                           // 00000006DF18: DC6A0000 007C0107
	global_store_b32 v[9:10], v2, off                          // 00000006DF20: DC6A0000 007C0209
	s_nop 0                                                    // 00000006DF28: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006DF2C: BFB60003
	s_endpgm                                                   // 00000006DF30: BFB00000
subtract_get_global_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000006DF34: BF800000
	.long 0xbf800000                                           // 00000006DF38: BF800000
	.long 0xbf800000                                           // 00000006DF3C: BF800000
	.long 0xbf800000                                           // 00000006DF40: BF800000
	.long 0xbf800000                                           // 00000006DF44: BF800000
	.long 0xbf800000                                           // 00000006DF48: BF800000
	.long 0xbf800000                                           // 00000006DF4C: BF800000
	.long 0xbf800000                                           // 00000006DF50: BF800000
	.long 0xbf800000                                           // 00000006DF54: BF800000
	.long 0xbf800000                                           // 00000006DF58: BF800000
	.long 0xbf800000                                           // 00000006DF5C: BF800000
	.long 0xbf800000                                           // 00000006DF60: BF800000
	.long 0xbf800000                                           // 00000006DF64: BF800000
	.long 0xbf800000                                           // 00000006DF68: BF800000
	.long 0xbf800000                                           // 00000006DF6C: BF800000
	.long 0xbf800000                                           // 00000006DF70: BF800000
	.long 0xbf800000                                           // 00000006DF74: BF800000
	.long 0xbf800000                                           // 00000006DF78: BF800000
	.long 0xbf800000                                           // 00000006DF7C: BF800000
	.long 0xbf800000                                           // 00000006DF80: BF800000
	.long 0xbf800000                                           // 00000006DF84: BF800000
	.long 0xbf800000                                           // 00000006DF88: BF800000
	.long 0xbf800000                                           // 00000006DF8C: BF800000
	.long 0xbf800000                                           // 00000006DF90: BF800000
	.long 0xbf800000                                           // 00000006DF94: BF800000
	.long 0xbf800000                                           // 00000006DF98: BF800000
	.long 0xbf800000                                           // 00000006DF9C: BF800000
	.long 0xbf800000                                           // 00000006DFA0: BF800000
	.long 0xbf800000                                           // 00000006DFA4: BF800000
	.long 0xbf800000                                           // 00000006DFA8: BF800000
	.long 0xbf800000                                           // 00000006DFAC: BF800000
	.long 0xbf800000                                           // 00000006DFB0: BF800000
	.long 0xbf800000                                           // 00000006DFB4: BF800000
	.long 0xbf800000                                           // 00000006DFB8: BF800000
	.long 0xbf800000                                           // 00000006DFBC: BF800000
	.long 0xbf800000                                           // 00000006DFC0: BF800000
	.long 0xbf800000                                           // 00000006DFC4: BF800000
	.long 0xbf800000                                           // 00000006DFC8: BF800000
	.long 0xbf800000                                           // 00000006DFCC: BF800000
	.long 0xbf800000                                           // 00000006DFD0: BF800000
	.long 0xbf800000                                           // 00000006DFD4: BF800000
	.long 0xbf800000                                           // 00000006DFD8: BF800000
	.long 0xbf800000                                           // 00000006DFDC: BF800000
	.long 0xbf800000                                           // 00000006DFE0: BF800000
	.long 0xbf800000                                           // 00000006DFE4: BF800000
	.long 0xbf800000                                           // 00000006DFE8: BF800000
	.long 0xbf800000                                           // 00000006DFEC: BF800000
	.long 0xbf800000                                           // 00000006DFF0: BF800000
	.long 0xbf800000                                           // 00000006DFF4: BF800000
	.long 0xbf800000                                           // 00000006DFF8: BF800000
	.long 0xbf800000                                           // 00000006DFFC: BF800000

	.p2align	8
	.type	subtract_get_global_size_get_global_size,@function
	.size	subtract_get_global_size_get_global_size, subtract_get_global_size_get_global_size_symend-subtract_get_global_size_get_global_size
subtract_get_global_size_get_global_size:
	s_clause 0x2                                               // 00000006E000: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E004: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006E00C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006E014: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006E01C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000006E028: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006E02C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E034: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006E03C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006E040: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006E044: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006E04C: 84028103
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006E050: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E054: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006E05C: D6550001 0414040A
	s_lshl_b32 s2, s4, 1                                       // 00000006E064: 84028104
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E068: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 00000006E070: D6550001 04000405
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006E078: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006E07C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006E084: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E088: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006E090: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006E098: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006E09C: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006E0A0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006E0A8: 40020201
	s_clause 0x2                                               // 00000006E0AC: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006E0B0: DC6A0000 007C0203
	global_store_b32 v[5:6], v2, off                           // 00000006E0B8: DC6A0000 007C0205
	global_store_b32 v[0:1], v2, off                           // 00000006E0C0: DC6A0000 007C0200
	s_nop 0                                                    // 00000006E0C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E0CC: BFB60003
	s_endpgm                                                   // 00000006E0D0: BFB00000
subtract_get_global_size_get_global_size_symend:
	.long 0xbf800000                                           // 00000006E0D4: BF800000
	.long 0xbf800000                                           // 00000006E0D8: BF800000
	.long 0xbf800000                                           // 00000006E0DC: BF800000
	.long 0xbf800000                                           // 00000006E0E0: BF800000
	.long 0xbf800000                                           // 00000006E0E4: BF800000
	.long 0xbf800000                                           // 00000006E0E8: BF800000
	.long 0xbf800000                                           // 00000006E0EC: BF800000
	.long 0xbf800000                                           // 00000006E0F0: BF800000
	.long 0xbf800000                                           // 00000006E0F4: BF800000
	.long 0xbf800000                                           // 00000006E0F8: BF800000
	.long 0xbf800000                                           // 00000006E0FC: BF800000

	.p2align	8
	.type	subtract_get_num_groups_get_global_size,@function
	.size	subtract_get_num_groups_get_global_size, subtract_get_num_groups_get_global_size_symend-subtract_get_num_groups_get_global_size
subtract_get_num_groups_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006E100: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006E10C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E114: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006E11C: BEA10080
	s_clause 0x1                                               // 00000006E120: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006E124: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006E12C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006E134: BF850003
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000006E138: F4080300 F8000038
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006E140: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006E148: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006E150: F4040180 F8000008
	s_lshl_b32 s0, s2, 1                                       // 00000006E158: 84008102
	s_waitcnt lgkmcnt(0)                                       // 00000006E15C: BF89FC07
	v_add3_u32 v1, s12, s0, v1                                 // 00000006E160: D6550001 0404000C
	s_lshl_b32 s0, s3, 1                                       // 00000006E168: 84008103
	s_lshl_b32 s1, s8, 1                                       // 00000006E16C: 84018108
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006E170: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E174: D73C0003 00020282
	v_add3_u32 v1, s14, s0, v5                                 // 00000006E17C: D6550001 0414000E
	s_lshl_b32 s0, s4, 2                                       // 00000006E184: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E188: D73C0005 00020282
	v_add3_u32 v1, s5, s0, v0                                  // 00000006E190: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006E198: BF8701A4
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000006E19C: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000006E1A4: 40080807
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E1A8: D73C0000 00020282
	v_add_co_u32 v5, s0, s6, v5                                // 00000006E1B0: D7000005 00020A06
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 00000006E1B8: BF8701D1
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 00000006E1BC: D5200006 00020C07
	s_waitcnt vmcnt(1)                                         // 00000006E1C4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006E1C8: 32040E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006E1CC: 7C7A0E80
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006E1D0: 360E0EFF 0000FFFF
	v_cmp_ne_u16_e64 s0, 0, v2.l                               // 00000006E1D8: D43D0000 00020480
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006E1E0: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006E1E4: BF8903F7
	v_cmp_ne_u32_e32 vcc_lo, 0, v8                             // 00000006E1E8: 7C9A1080
	s_addc_u32 s2, s8, 0                                       // 00000006E1EC: 82028008
	s_lshl_b32 s3, s9, 1                                       // 00000006E1F0: 84038109
	s_cmp_lg_u32 s0, 0                                         // 00000006E1F4: BF078000
	v_add_nc_u32_e32 v7, s1, v7                                // 00000006E1F8: 4A0E0E01
	s_addc_u32 s0, s9, 0                                       // 00000006E1FC: 82008009
	s_lshl_b32 s1, s10, 2                                      // 00000006E200: 8401820A
	v_add_nc_u32_e32 v2, s3, v2                                // 00000006E204: 4A040403
	v_add_nc_u32_e32 v8, s1, v8                                // 00000006E208: 4A101001
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006E20C: BF07806A
	v_sub_nc_u32_e32 v7, s2, v7                                // 00000006E210: 4C0E0E02
	s_addc_u32 s1, s10, 0                                      // 00000006E214: 8201800A
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006E218: D7006A00 00020006
	v_sub_nc_u32_e32 v2, s0, v2                                // 00000006E220: 4C040400
	v_sub_nc_u32_e32 v8, s1, v8                                // 00000006E224: 4C101001
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006E228: 40020207
	s_clause 0x2                                               // 00000006E22C: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006E230: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006E238: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006E240: DC6A0000 007C0800
	s_nop 0                                                    // 00000006E248: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E24C: BFB60003
	s_endpgm                                                   // 00000006E250: BFB00000
subtract_get_num_groups_get_global_size_symend:
	.long 0xbf800000                                           // 00000006E254: BF800000
	.long 0xbf800000                                           // 00000006E258: BF800000
	.long 0xbf800000                                           // 00000006E25C: BF800000
	.long 0xbf800000                                           // 00000006E260: BF800000
	.long 0xbf800000                                           // 00000006E264: BF800000
	.long 0xbf800000                                           // 00000006E268: BF800000
	.long 0xbf800000                                           // 00000006E26C: BF800000
	.long 0xbf800000                                           // 00000006E270: BF800000
	.long 0xbf800000                                           // 00000006E274: BF800000
	.long 0xbf800000                                           // 00000006E278: BF800000
	.long 0xbf800000                                           // 00000006E27C: BF800000
	.long 0xbf800000                                           // 00000006E280: BF800000
	.long 0xbf800000                                           // 00000006E284: BF800000
	.long 0xbf800000                                           // 00000006E288: BF800000
	.long 0xbf800000                                           // 00000006E28C: BF800000
	.long 0xbf800000                                           // 00000006E290: BF800000
	.long 0xbf800000                                           // 00000006E294: BF800000
	.long 0xbf800000                                           // 00000006E298: BF800000
	.long 0xbf800000                                           // 00000006E29C: BF800000
	.long 0xbf800000                                           // 00000006E2A0: BF800000
	.long 0xbf800000                                           // 00000006E2A4: BF800000
	.long 0xbf800000                                           // 00000006E2A8: BF800000
	.long 0xbf800000                                           // 00000006E2AC: BF800000
	.long 0xbf800000                                           // 00000006E2B0: BF800000
	.long 0xbf800000                                           // 00000006E2B4: BF800000
	.long 0xbf800000                                           // 00000006E2B8: BF800000
	.long 0xbf800000                                           // 00000006E2BC: BF800000
	.long 0xbf800000                                           // 00000006E2C0: BF800000
	.long 0xbf800000                                           // 00000006E2C4: BF800000
	.long 0xbf800000                                           // 00000006E2C8: BF800000
	.long 0xbf800000                                           // 00000006E2CC: BF800000
	.long 0xbf800000                                           // 00000006E2D0: BF800000
	.long 0xbf800000                                           // 00000006E2D4: BF800000
	.long 0xbf800000                                           // 00000006E2D8: BF800000
	.long 0xbf800000                                           // 00000006E2DC: BF800000
	.long 0xbf800000                                           // 00000006E2E0: BF800000
	.long 0xbf800000                                           // 00000006E2E4: BF800000
	.long 0xbf800000                                           // 00000006E2E8: BF800000
	.long 0xbf800000                                           // 00000006E2EC: BF800000
	.long 0xbf800000                                           // 00000006E2F0: BF800000
	.long 0xbf800000                                           // 00000006E2F4: BF800000
	.long 0xbf800000                                           // 00000006E2F8: BF800000
	.long 0xbf800000                                           // 00000006E2FC: BF800000

	.p2align	8
	.type	subtract_get_work_dim_get_global_size,@function
	.size	subtract_get_work_dim_get_global_size, subtract_get_work_dim_get_global_size_symend-subtract_get_work_dim_get_global_size
subtract_get_work_dim_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006E300: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006E30C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006E310: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E318: D6100000 02292900
	s_clause 0x1                                               // 00000006E320: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006E324: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006E32C: DC4A0026 08000002
	s_clause 0x4                                               // 00000006E334: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 00000006E338: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E340: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006E348: F4080300 F8000010
	s_load_b32 s6, s[0:1], 0x48                                // 00000006E350: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006E358: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000006E360: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006E364: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006E368: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006E370: 84028103
	s_lshl_b32 s3, s4, 2                                       // 00000006E374: 84038204
	s_lshl_b32 s4, s12, 1                                      // 00000006E378: 8404810C
	s_lshl_b32 s7, s14, 2                                      // 00000006E37C: 8407820E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E380: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006E388: D6550001 0414040A
	s_and_b32 s2, s5, 0xffff                                   // 00000006E390: 8B02FF05 0000FFFF
	s_lshl_b32 s5, s13, 1                                      // 00000006E398: 8405810D
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006E39C: BF8701C1
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E3A0: D73C0005 00020282
	v_add3_u32 v1, s6, s3, v0                                  // 00000006E3A8: D6550001 04000606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006E3B0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006E3B8: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E3BC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006E3C4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006E3CC: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006E3D0: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006E3D4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006E3DC: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006E3E0: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006E3E4: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006E3E8: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006E3F0: BF8903F7
	v_add_nc_u32_e32 v8, s7, v8                                // 00000006E3F4: 4A101007
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006E3F8: BF870193
	v_add_nc_u32_e32 v2, s5, v2                                // 00000006E3FC: 4A040405
	v_add_nc_u32_e32 v7, s4, v7                                // 00000006E400: 4A0E0E04
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006E404: BF870193
	v_sub_nc_u32_e32 v8, s2, v8                                // 00000006E408: 4C101002
	v_sub_nc_u32_e32 v2, s2, v2                                // 00000006E40C: 4C040402
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006E410: BF870003
	v_sub_nc_u32_e32 v7, s2, v7                                // 00000006E414: 4C0E0E02
	s_clause 0x2                                               // 00000006E418: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006E41C: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006E424: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006E42C: DC6A0000 007C0800
	s_nop 0                                                    // 00000006E434: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E438: BFB60003
	s_endpgm                                                   // 00000006E43C: BFB00000
subtract_get_work_dim_get_global_size_symend:
	.long 0xbf800000                                           // 00000006E440: BF800000
	.long 0xbf800000                                           // 00000006E444: BF800000
	.long 0xbf800000                                           // 00000006E448: BF800000
	.long 0xbf800000                                           // 00000006E44C: BF800000
	.long 0xbf800000                                           // 00000006E450: BF800000
	.long 0xbf800000                                           // 00000006E454: BF800000
	.long 0xbf800000                                           // 00000006E458: BF800000
	.long 0xbf800000                                           // 00000006E45C: BF800000
	.long 0xbf800000                                           // 00000006E460: BF800000
	.long 0xbf800000                                           // 00000006E464: BF800000
	.long 0xbf800000                                           // 00000006E468: BF800000
	.long 0xbf800000                                           // 00000006E46C: BF800000
	.long 0xbf800000                                           // 00000006E470: BF800000
	.long 0xbf800000                                           // 00000006E474: BF800000
	.long 0xbf800000                                           // 00000006E478: BF800000
	.long 0xbf800000                                           // 00000006E47C: BF800000
	.long 0xbf800000                                           // 00000006E480: BF800000
	.long 0xbf800000                                           // 00000006E484: BF800000
	.long 0xbf800000                                           // 00000006E488: BF800000
	.long 0xbf800000                                           // 00000006E48C: BF800000
	.long 0xbf800000                                           // 00000006E490: BF800000
	.long 0xbf800000                                           // 00000006E494: BF800000
	.long 0xbf800000                                           // 00000006E498: BF800000
	.long 0xbf800000                                           // 00000006E49C: BF800000
	.long 0xbf800000                                           // 00000006E4A0: BF800000
	.long 0xbf800000                                           // 00000006E4A4: BF800000
	.long 0xbf800000                                           // 00000006E4A8: BF800000
	.long 0xbf800000                                           // 00000006E4AC: BF800000
	.long 0xbf800000                                           // 00000006E4B0: BF800000
	.long 0xbf800000                                           // 00000006E4B4: BF800000
	.long 0xbf800000                                           // 00000006E4B8: BF800000
	.long 0xbf800000                                           // 00000006E4BC: BF800000
	.long 0xbf800000                                           // 00000006E4C0: BF800000
	.long 0xbf800000                                           // 00000006E4C4: BF800000
	.long 0xbf800000                                           // 00000006E4C8: BF800000
	.long 0xbf800000                                           // 00000006E4CC: BF800000
	.long 0xbf800000                                           // 00000006E4D0: BF800000
	.long 0xbf800000                                           // 00000006E4D4: BF800000
	.long 0xbf800000                                           // 00000006E4D8: BF800000
	.long 0xbf800000                                           // 00000006E4DC: BF800000
	.long 0xbf800000                                           // 00000006E4E0: BF800000
	.long 0xbf800000                                           // 00000006E4E4: BF800000
	.long 0xbf800000                                           // 00000006E4E8: BF800000
	.long 0xbf800000                                           // 00000006E4EC: BF800000
	.long 0xbf800000                                           // 00000006E4F0: BF800000
	.long 0xbf800000                                           // 00000006E4F4: BF800000
	.long 0xbf800000                                           // 00000006E4F8: BF800000
	.long 0xbf800000                                           // 00000006E4FC: BF800000

	.p2align	8
	.type	subtract_x_get_num_groups,@function
	.size	subtract_x_get_num_groups, subtract_x_get_num_groups_symend-subtract_x_get_num_groups
subtract_x_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006E500: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], null                            // 00000006E50C: F4040180 F8000000
	s_lshl_b32 s2, s2, 4                                       // 00000006E514: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006E518: D6100005 02291500
	s_clause 0x1                                               // 00000006E520: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006E524: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006E52C: DC4A0026 08000002
	s_clause 0x1                                               // 00000006E534: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E538: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006E540: F4000140 F8000048
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E548: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006E550: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006E554: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006E558: D6550001 04040408
	s_clause 0x1                                               // 00000006E560: BF850001
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006E564: F4080300 F8000010
	s_load_b32 s2, s[0:1], 0x8                                 // 00000006E56C: F4000080 F8000008
	s_lshl_b32 s0, s3, 1                                       // 00000006E574: 84008103
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E578: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006E580: D6550001 0414000A
	s_lshl_b32 s0, s4, 1                                       // 00000006E588: 84008104
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006E58C: BF870191
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E590: D73C0005 00020282
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000006E598: D7006A03 00020606
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006E5A0: BF870224
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000006E5A4: 40080807
	v_add3_u32 v1, s5, s0, v0                                  // 00000006E5A8: D6550001 04000005
	v_add_co_u32 v5, s1, s6, v5                                // 00000006E5B0: D7000105 00020A06
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006E5B8: BF870191
	v_add_co_ci_u32_e64 v6, s1, s7, v6, s1                     // 00000006E5BC: D5200106 00060C07
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E5C4: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006E5CC: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006E5D0: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006E5D4: 7C7A0E80
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006E5D8: BF870002
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 00000006E5DC: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006E5E4: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006E5E8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006E5EC: 7C7A1080
	s_waitcnt lgkmcnt(0)                                       // 00000006E5F0: BF89FC07
	s_subb_u32 s1, s2, s12                                     // 00000006E5F4: 82810C02
	s_cmp_lg_u32 s0, 0                                         // 00000006E5F8: BF078000
	s_subb_u32 s0, s2, s13                                     // 00000006E5FC: 82800D02
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006E600: BF07806A
	v_dual_mov_b32 v2, s1 :: v_dual_mov_b32 v7, s0             // 00000006E604: CA100001 02060000
	s_subb_u32 s0, s2, s14                                     // 00000006E60C: 82800E02
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006E610: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006E618: 40020207
	v_mov_b32_e32 v8, s0                                       // 00000006E61C: 7E100200
	s_clause 0x2                                               // 00000006E620: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006E624: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006E62C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006E634: DC6A0000 007C0800
	s_nop 0                                                    // 00000006E63C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E640: BFB60003
	s_endpgm                                                   // 00000006E644: BFB00000
subtract_x_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006E648: BF800000
	.long 0xbf800000                                           // 00000006E64C: BF800000
	.long 0xbf800000                                           // 00000006E650: BF800000
	.long 0xbf800000                                           // 00000006E654: BF800000
	.long 0xbf800000                                           // 00000006E658: BF800000
	.long 0xbf800000                                           // 00000006E65C: BF800000
	.long 0xbf800000                                           // 00000006E660: BF800000
	.long 0xbf800000                                           // 00000006E664: BF800000
	.long 0xbf800000                                           // 00000006E668: BF800000
	.long 0xbf800000                                           // 00000006E66C: BF800000
	.long 0xbf800000                                           // 00000006E670: BF800000
	.long 0xbf800000                                           // 00000006E674: BF800000
	.long 0xbf800000                                           // 00000006E678: BF800000
	.long 0xbf800000                                           // 00000006E67C: BF800000
	.long 0xbf800000                                           // 00000006E680: BF800000
	.long 0xbf800000                                           // 00000006E684: BF800000
	.long 0xbf800000                                           // 00000006E688: BF800000
	.long 0xbf800000                                           // 00000006E68C: BF800000
	.long 0xbf800000                                           // 00000006E690: BF800000
	.long 0xbf800000                                           // 00000006E694: BF800000
	.long 0xbf800000                                           // 00000006E698: BF800000
	.long 0xbf800000                                           // 00000006E69C: BF800000
	.long 0xbf800000                                           // 00000006E6A0: BF800000
	.long 0xbf800000                                           // 00000006E6A4: BF800000
	.long 0xbf800000                                           // 00000006E6A8: BF800000
	.long 0xbf800000                                           // 00000006E6AC: BF800000
	.long 0xbf800000                                           // 00000006E6B0: BF800000
	.long 0xbf800000                                           // 00000006E6B4: BF800000
	.long 0xbf800000                                           // 00000006E6B8: BF800000
	.long 0xbf800000                                           // 00000006E6BC: BF800000
	.long 0xbf800000                                           // 00000006E6C0: BF800000
	.long 0xbf800000                                           // 00000006E6C4: BF800000
	.long 0xbf800000                                           // 00000006E6C8: BF800000
	.long 0xbf800000                                           // 00000006E6CC: BF800000
	.long 0xbf800000                                           // 00000006E6D0: BF800000
	.long 0xbf800000                                           // 00000006E6D4: BF800000
	.long 0xbf800000                                           // 00000006E6D8: BF800000
	.long 0xbf800000                                           // 00000006E6DC: BF800000
	.long 0xbf800000                                           // 00000006E6E0: BF800000
	.long 0xbf800000                                           // 00000006E6E4: BF800000
	.long 0xbf800000                                           // 00000006E6E8: BF800000
	.long 0xbf800000                                           // 00000006E6EC: BF800000
	.long 0xbf800000                                           // 00000006E6F0: BF800000
	.long 0xbf800000                                           // 00000006E6F4: BF800000
	.long 0xbf800000                                           // 00000006E6F8: BF800000
	.long 0xbf800000                                           // 00000006E6FC: BF800000

	.p2align	8
	.type	subtract_get_global_offset_get_num_groups,@function
	.size	subtract_get_global_offset_get_num_groups, subtract_get_global_offset_get_num_groups_symend-subtract_get_global_offset_get_num_groups
subtract_get_global_offset_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006E700: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006E70C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 00000006E714: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006E718: D6100005 02291500
	s_clause 0x1                                               // 00000006E720: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006E724: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006E72C: DC4A0026 08000002
	s_clause 0x2                                               // 00000006E734: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E738: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006E740: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006E748: F4080300 F8000010
	s_lshl_b32 s0, s3, 4                                       // 00000006E750: 84008403
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006E754: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006E75C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006E760: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006E764: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006E76C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E770: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006E778: D6550001 0414000A
	s_lshl_b32 s0, s4, 1                                       // 00000006E780: 84008104
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E784: D73C0005 00020282
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006E78C: BF870213
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000006E790: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000006E798: 40080807
	v_add3_u32 v1, s5, s0, v0                                  // 00000006E79C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006E7A4: BF870094
	v_add_co_u32 v5, s1, s6, v5                                // 00000006E7A8: D7000105 00020A06
	v_add_co_ci_u32_e64 v6, s1, s7, v6, s1                     // 00000006E7B0: D5200106 00060C07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000006E7B8: BF870143
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E7BC: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006E7C4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006E7C8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006E7CC: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 00000006E7D0: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006E7D8: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006E7DC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006E7E0: 7C7A1080
	s_subb_u32 s1, s8, s12                                     // 00000006E7E4: 82810C08
	s_cmp_lg_u32 s0, 0                                         // 00000006E7E8: BF078000
	s_subb_u32 s0, s10, s13                                    // 00000006E7EC: 82800D0A
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006E7F0: BF07806A
	v_dual_mov_b32 v2, s1 :: v_dual_mov_b32 v7, s0             // 00000006E7F4: CA100001 02060000
	s_subb_u32 s0, s5, s14                                     // 00000006E7FC: 82800E05
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006E800: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006E808: 40020207
	v_mov_b32_e32 v8, s0                                       // 00000006E80C: 7E100200
	s_clause 0x2                                               // 00000006E810: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006E814: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006E81C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006E824: DC6A0000 007C0800
	s_nop 0                                                    // 00000006E82C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006E830: BFB60003
	s_endpgm                                                   // 00000006E834: BFB00000
subtract_get_global_offset_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006E838: BF800000
	.long 0xbf800000                                           // 00000006E83C: BF800000
	.long 0xbf800000                                           // 00000006E840: BF800000
	.long 0xbf800000                                           // 00000006E844: BF800000
	.long 0xbf800000                                           // 00000006E848: BF800000
	.long 0xbf800000                                           // 00000006E84C: BF800000
	.long 0xbf800000                                           // 00000006E850: BF800000
	.long 0xbf800000                                           // 00000006E854: BF800000
	.long 0xbf800000                                           // 00000006E858: BF800000
	.long 0xbf800000                                           // 00000006E85C: BF800000
	.long 0xbf800000                                           // 00000006E860: BF800000
	.long 0xbf800000                                           // 00000006E864: BF800000
	.long 0xbf800000                                           // 00000006E868: BF800000
	.long 0xbf800000                                           // 00000006E86C: BF800000
	.long 0xbf800000                                           // 00000006E870: BF800000
	.long 0xbf800000                                           // 00000006E874: BF800000
	.long 0xbf800000                                           // 00000006E878: BF800000
	.long 0xbf800000                                           // 00000006E87C: BF800000
	.long 0xbf800000                                           // 00000006E880: BF800000
	.long 0xbf800000                                           // 00000006E884: BF800000
	.long 0xbf800000                                           // 00000006E888: BF800000
	.long 0xbf800000                                           // 00000006E88C: BF800000
	.long 0xbf800000                                           // 00000006E890: BF800000
	.long 0xbf800000                                           // 00000006E894: BF800000
	.long 0xbf800000                                           // 00000006E898: BF800000
	.long 0xbf800000                                           // 00000006E89C: BF800000
	.long 0xbf800000                                           // 00000006E8A0: BF800000
	.long 0xbf800000                                           // 00000006E8A4: BF800000
	.long 0xbf800000                                           // 00000006E8A8: BF800000
	.long 0xbf800000                                           // 00000006E8AC: BF800000
	.long 0xbf800000                                           // 00000006E8B0: BF800000
	.long 0xbf800000                                           // 00000006E8B4: BF800000
	.long 0xbf800000                                           // 00000006E8B8: BF800000
	.long 0xbf800000                                           // 00000006E8BC: BF800000
	.long 0xbf800000                                           // 00000006E8C0: BF800000
	.long 0xbf800000                                           // 00000006E8C4: BF800000
	.long 0xbf800000                                           // 00000006E8C8: BF800000
	.long 0xbf800000                                           // 00000006E8CC: BF800000
	.long 0xbf800000                                           // 00000006E8D0: BF800000
	.long 0xbf800000                                           // 00000006E8D4: BF800000
	.long 0xbf800000                                           // 00000006E8D8: BF800000
	.long 0xbf800000                                           // 00000006E8DC: BF800000
	.long 0xbf800000                                           // 00000006E8E0: BF800000
	.long 0xbf800000                                           // 00000006E8E4: BF800000
	.long 0xbf800000                                           // 00000006E8E8: BF800000
	.long 0xbf800000                                           // 00000006E8EC: BF800000
	.long 0xbf800000                                           // 00000006E8F0: BF800000
	.long 0xbf800000                                           // 00000006E8F4: BF800000
	.long 0xbf800000                                           // 00000006E8F8: BF800000
	.long 0xbf800000                                           // 00000006E8FC: BF800000

	.p2align	8
	.type	subtract_get_local_id_get_num_groups,@function
	.size	subtract_get_local_id_get_num_groups, subtract_get_local_id_get_num_groups_symend-subtract_get_local_id_get_num_groups
subtract_get_local_id_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 00000006E900: CA240080 020800FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000006E90C: 84028302
	v_bfe_u32 v10, v0, 10, 10                                  // 00000006E910: D610000A 02291500
	v_bfe_u32 v11, v0, 20, 10                                  // 00000006E918: D610000B 02292900
	s_clause 0x1                                               // 00000006E920: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006E924: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006E92C: DC4A0026 08000002
	s_clause 0x2                                               // 00000006E934: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006E938: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006E940: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006E948: F4040180 F8000008
	s_mov_b32 s33, 0                                           // 00000006E950: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006E954: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 00000006E958: D6550001 04240408
	s_lshl_b32 s2, s3, 2                                       // 00000006E960: 84028203
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_1)// 00000006E964: BF8700D1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006E968: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v10                                // 00000006E970: D6550001 0428040A
	s_load_b128 s[0:3], s[0:1], 0x10                           // 00000006E978: F4080000 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006E980: BF89FC07
	s_lshl_b32 s3, s4, 1                                       // 00000006E984: 84038104
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006E988: D73C0005 00020282
	v_add3_u32 v1, s5, s3, v11                                 // 00000006E990: D6550001 042C0605
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000006E998: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000006E9A0: 40080807
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006E9A4: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006E9A8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 00000006E9B0: D7006A05 00020A06
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 00000006E9B8: 400C0C07
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006E9BC: D7006A00 00020006
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 00000006E9C4: BF870154
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006E9C8: 40020207
	s_waitcnt vmcnt(1)                                         // 00000006E9CC: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006E9D0: 7C7A0E80
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006E9D4: 32040E90
	v_subrev_co_ci_u32_e32 v7, vcc_lo, s0, v9, vcc_lo          // 00000006E9D8: 440E1200
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000006E9DC: 7C7A0480
	v_subrev_co_ci_u32_e32 v2, vcc_lo, s1, v10, vcc_lo         // 00000006E9E0: 44041401
	s_waitcnt vmcnt(0)                                         // 00000006E9E4: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006E9E8: 7C7A1080
	v_subrev_co_ci_u32_e32 v8, vcc_lo, s2, v11, vcc_lo         // 00000006E9EC: 44101602
	s_clause 0x2                                               // 00000006E9F0: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006E9F4: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006E9FC: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006EA04: DC6A0000 007C0800
	s_nop 0                                                    // 00000006EA0C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006EA10: BFB60003
	s_endpgm                                                   // 00000006EA14: BFB00000
subtract_get_local_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006EA18: BF800000
	.long 0xbf800000                                           // 00000006EA1C: BF800000
	.long 0xbf800000                                           // 00000006EA20: BF800000
	.long 0xbf800000                                           // 00000006EA24: BF800000
	.long 0xbf800000                                           // 00000006EA28: BF800000
	.long 0xbf800000                                           // 00000006EA2C: BF800000
	.long 0xbf800000                                           // 00000006EA30: BF800000
	.long 0xbf800000                                           // 00000006EA34: BF800000
	.long 0xbf800000                                           // 00000006EA38: BF800000
	.long 0xbf800000                                           // 00000006EA3C: BF800000
	.long 0xbf800000                                           // 00000006EA40: BF800000
	.long 0xbf800000                                           // 00000006EA44: BF800000
	.long 0xbf800000                                           // 00000006EA48: BF800000
	.long 0xbf800000                                           // 00000006EA4C: BF800000
	.long 0xbf800000                                           // 00000006EA50: BF800000
	.long 0xbf800000                                           // 00000006EA54: BF800000
	.long 0xbf800000                                           // 00000006EA58: BF800000
	.long 0xbf800000                                           // 00000006EA5C: BF800000
	.long 0xbf800000                                           // 00000006EA60: BF800000
	.long 0xbf800000                                           // 00000006EA64: BF800000
	.long 0xbf800000                                           // 00000006EA68: BF800000
	.long 0xbf800000                                           // 00000006EA6C: BF800000
	.long 0xbf800000                                           // 00000006EA70: BF800000
	.long 0xbf800000                                           // 00000006EA74: BF800000
	.long 0xbf800000                                           // 00000006EA78: BF800000
	.long 0xbf800000                                           // 00000006EA7C: BF800000
	.long 0xbf800000                                           // 00000006EA80: BF800000
	.long 0xbf800000                                           // 00000006EA84: BF800000
	.long 0xbf800000                                           // 00000006EA88: BF800000
	.long 0xbf800000                                           // 00000006EA8C: BF800000
	.long 0xbf800000                                           // 00000006EA90: BF800000
	.long 0xbf800000                                           // 00000006EA94: BF800000
	.long 0xbf800000                                           // 00000006EA98: BF800000
	.long 0xbf800000                                           // 00000006EA9C: BF800000
	.long 0xbf800000                                           // 00000006EAA0: BF800000
	.long 0xbf800000                                           // 00000006EAA4: BF800000
	.long 0xbf800000                                           // 00000006EAA8: BF800000
	.long 0xbf800000                                           // 00000006EAAC: BF800000
	.long 0xbf800000                                           // 00000006EAB0: BF800000
	.long 0xbf800000                                           // 00000006EAB4: BF800000
	.long 0xbf800000                                           // 00000006EAB8: BF800000
	.long 0xbf800000                                           // 00000006EABC: BF800000
	.long 0xbf800000                                           // 00000006EAC0: BF800000
	.long 0xbf800000                                           // 00000006EAC4: BF800000
	.long 0xbf800000                                           // 00000006EAC8: BF800000
	.long 0xbf800000                                           // 00000006EACC: BF800000
	.long 0xbf800000                                           // 00000006EAD0: BF800000
	.long 0xbf800000                                           // 00000006EAD4: BF800000
	.long 0xbf800000                                           // 00000006EAD8: BF800000
	.long 0xbf800000                                           // 00000006EADC: BF800000
	.long 0xbf800000                                           // 00000006EAE0: BF800000
	.long 0xbf800000                                           // 00000006EAE4: BF800000
	.long 0xbf800000                                           // 00000006EAE8: BF800000
	.long 0xbf800000                                           // 00000006EAEC: BF800000
	.long 0xbf800000                                           // 00000006EAF0: BF800000
	.long 0xbf800000                                           // 00000006EAF4: BF800000
	.long 0xbf800000                                           // 00000006EAF8: BF800000
	.long 0xbf800000                                           // 00000006EAFC: BF800000

	.p2align	8
	.type	subtract_get_group_id_get_num_groups,@function
	.size	subtract_get_group_id_get_num_groups, subtract_get_group_id_get_num_groups_symend-subtract_get_group_id_get_num_groups
subtract_get_group_id_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006EB00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006EB0C: F4040180 F8000008
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006EB14: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006EB1C: D6100000 02292900
	s_clause 0x1                                               // 00000006EB24: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006EB28: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006EB30: DC4A0026 08000002
	s_clause 0x2                                               // 00000006EB38: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006EB3C: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006EB44: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006EB4C: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006EB54: BF89FC07
	s_lshl_b32 s9, s2, 1                                       // 00000006EB58: 84098102
	s_lshl_b32 s0, s3, 4                                       // 00000006EB5C: 84008403
	s_mov_b32 s33, 0                                           // 00000006EB60: BEA10080
	v_add3_u32 v1, s8, s9, v1                                  // 00000006EB64: D6550001 04041208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006EB6C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006EB70: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006EB78: D6550001 0414000A
	s_lshl_b32 s0, s4, 1                                       // 00000006EB80: 84008104
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006EB84: D73C0005 00020282
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006EB8C: BF870213
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000006EB90: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000006EB98: 40080807
	v_add3_u32 v1, s5, s0, v0                                  // 00000006EB9C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006EBA4: BF870094
	v_add_co_u32 v5, s1, s6, v5                                // 00000006EBA8: D7000105 00020A06
	v_add_co_ci_u32_e64 v6, s1, s7, v6, s1                     // 00000006EBB0: D5200106 00060C07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000006EBB8: BF870143
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006EBBC: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006EBC4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006EBC8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006EBCC: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 00000006EBD0: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006EBD8: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006EBDC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006EBE0: 7C7A1080
	s_subb_u32 s1, s2, s12                                     // 00000006EBE4: 82810C02
	s_cmp_lg_u32 s0, 0                                         // 00000006EBE8: BF078000
	s_subb_u32 s0, s3, s13                                     // 00000006EBEC: 82800D03
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006EBF0: BF07806A
	v_dual_mov_b32 v2, s1 :: v_dual_mov_b32 v7, s0             // 00000006EBF4: CA100001 02060000
	s_subb_u32 s0, s4, s14                                     // 00000006EBFC: 82800E04
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006EC00: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006EC08: 40020207
	v_mov_b32_e32 v8, s0                                       // 00000006EC0C: 7E100200
	s_clause 0x2                                               // 00000006EC10: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006EC14: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006EC1C: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006EC24: DC6A0000 007C0800
	s_nop 0                                                    // 00000006EC2C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006EC30: BFB60003
	s_endpgm                                                   // 00000006EC34: BFB00000
subtract_get_group_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006EC38: BF800000
	.long 0xbf800000                                           // 00000006EC3C: BF800000
	.long 0xbf800000                                           // 00000006EC40: BF800000
	.long 0xbf800000                                           // 00000006EC44: BF800000
	.long 0xbf800000                                           // 00000006EC48: BF800000
	.long 0xbf800000                                           // 00000006EC4C: BF800000
	.long 0xbf800000                                           // 00000006EC50: BF800000
	.long 0xbf800000                                           // 00000006EC54: BF800000
	.long 0xbf800000                                           // 00000006EC58: BF800000
	.long 0xbf800000                                           // 00000006EC5C: BF800000
	.long 0xbf800000                                           // 00000006EC60: BF800000
	.long 0xbf800000                                           // 00000006EC64: BF800000
	.long 0xbf800000                                           // 00000006EC68: BF800000
	.long 0xbf800000                                           // 00000006EC6C: BF800000
	.long 0xbf800000                                           // 00000006EC70: BF800000
	.long 0xbf800000                                           // 00000006EC74: BF800000
	.long 0xbf800000                                           // 00000006EC78: BF800000
	.long 0xbf800000                                           // 00000006EC7C: BF800000
	.long 0xbf800000                                           // 00000006EC80: BF800000
	.long 0xbf800000                                           // 00000006EC84: BF800000
	.long 0xbf800000                                           // 00000006EC88: BF800000
	.long 0xbf800000                                           // 00000006EC8C: BF800000
	.long 0xbf800000                                           // 00000006EC90: BF800000
	.long 0xbf800000                                           // 00000006EC94: BF800000
	.long 0xbf800000                                           // 00000006EC98: BF800000
	.long 0xbf800000                                           // 00000006EC9C: BF800000
	.long 0xbf800000                                           // 00000006ECA0: BF800000
	.long 0xbf800000                                           // 00000006ECA4: BF800000
	.long 0xbf800000                                           // 00000006ECA8: BF800000
	.long 0xbf800000                                           // 00000006ECAC: BF800000
	.long 0xbf800000                                           // 00000006ECB0: BF800000
	.long 0xbf800000                                           // 00000006ECB4: BF800000
	.long 0xbf800000                                           // 00000006ECB8: BF800000
	.long 0xbf800000                                           // 00000006ECBC: BF800000
	.long 0xbf800000                                           // 00000006ECC0: BF800000
	.long 0xbf800000                                           // 00000006ECC4: BF800000
	.long 0xbf800000                                           // 00000006ECC8: BF800000
	.long 0xbf800000                                           // 00000006ECCC: BF800000
	.long 0xbf800000                                           // 00000006ECD0: BF800000
	.long 0xbf800000                                           // 00000006ECD4: BF800000
	.long 0xbf800000                                           // 00000006ECD8: BF800000
	.long 0xbf800000                                           // 00000006ECDC: BF800000
	.long 0xbf800000                                           // 00000006ECE0: BF800000
	.long 0xbf800000                                           // 00000006ECE4: BF800000
	.long 0xbf800000                                           // 00000006ECE8: BF800000
	.long 0xbf800000                                           // 00000006ECEC: BF800000
	.long 0xbf800000                                           // 00000006ECF0: BF800000
	.long 0xbf800000                                           // 00000006ECF4: BF800000
	.long 0xbf800000                                           // 00000006ECF8: BF800000
	.long 0xbf800000                                           // 00000006ECFC: BF800000

	.p2align	8
	.type	subtract_get_local_size_get_num_groups,@function
	.size	subtract_get_local_size_get_num_groups, subtract_get_local_size_get_num_groups_symend-subtract_get_local_size_get_num_groups
subtract_get_local_size_get_num_groups:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006ED00: F4080200 F8000010
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006ED08: CA240080 020000FF 000003FF
	s_add_u32 s5, s0, 16                                       // 00000006ED14: 80059000
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006ED18: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006ED20: D6100000 02292900
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006ED28: DC520022 07000002
	s_waitcnt lgkmcnt(0)                                       // 00000006ED30: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006ED34: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006ED38: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000006ED3C: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006ED40: 840E8204
	s_mov_b32 s33, 0                                           // 00000006ED44: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006ED48: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006ED4C: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006ED50: BF870009
	s_add_u32 s6, s5, s2                                       // 00000006ED54: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006ED58: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006ED5C: BF0A0903
	s_clause 0x1                                               // 00000006ED60: BF850001
	global_load_u16 v8, v2, s[6:7]                             // 00000006ED64: DC4A0000 08060002
	global_load_u16 v9, v2, s[0:1] offset:38                   // 00000006ED6C: DC4A0026 09000002
	s_cselect_b32 s2, 14, 20                                   // 00000006ED74: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000006ED78: BF8704D9
	s_add_u32 s2, s5, s2                                       // 00000006ED7C: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006ED80: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006ED84: BF0A0A04
	global_load_u16 v10, v2, s[2:3]                            // 00000006ED88: DC4A0000 0A020002
	s_cselect_b32 s4, 16, 22                                   // 00000006ED90: 98049690
	s_add_u32 s4, s5, s4                                       // 00000006ED94: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006ED98: 8205800B
	global_load_u16 v11, v2, s[4:5]                            // 00000006ED9C: DC4A0000 0B040002
	s_clause 0x2                                               // 00000006EDA4: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006EDA8: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000006EDB0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006EDB8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006EDC0: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 00000006EDC4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006EDCC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006EDD0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 00000006EDD8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006EDE0: D73C0005 00020282
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 00000006EDE8: BF870233
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006EDEC: D7006A03 00020600
	v_add3_u32 v1, s2, s14, v0                                 // 00000006EDF4: D6550001 04001C02
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006EDFC: 40080801
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006EE00: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006EE08: 400C0C01
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006EE0C: BF870004
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006EE10: D73C0000 00020282
	s_waitcnt vmcnt(4)                                         // 00000006EE18: BF8913F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006EE1C: 7C7A0E80
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006EE20: 32040E90
	s_waitcnt vmcnt(3)                                         // 00000006EE24: BF890FF7
	v_subrev_co_ci_u32_e32 v7, vcc_lo, s8, v8, vcc_lo          // 00000006EE28: 440E1008
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006EE2C: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000006EE30: 7C7A0480
	s_waitcnt vmcnt(1)                                         // 00000006EE34: BF8907F7
	v_subrev_co_ci_u32_e32 v2, vcc_lo, s9, v10, vcc_lo         // 00000006EE38: 44041409
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 00000006EE3C: 7C7A1280
	s_waitcnt vmcnt(0)                                         // 00000006EE40: BF8903F7
	v_subrev_co_ci_u32_e32 v8, vcc_lo, s10, v11, vcc_lo        // 00000006EE44: 4410160A
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006EE48: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006EE50: 40020201
	s_clause 0x2                                               // 00000006EE54: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006EE58: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006EE60: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006EE68: DC6A0000 007C0800
	s_nop 0                                                    // 00000006EE70: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006EE74: BFB60003
	s_endpgm                                                   // 00000006EE78: BFB00000
subtract_get_local_size_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006EE7C: BF800000
	.long 0xbf800000                                           // 00000006EE80: BF800000
	.long 0xbf800000                                           // 00000006EE84: BF800000
	.long 0xbf800000                                           // 00000006EE88: BF800000
	.long 0xbf800000                                           // 00000006EE8C: BF800000
	.long 0xbf800000                                           // 00000006EE90: BF800000
	.long 0xbf800000                                           // 00000006EE94: BF800000
	.long 0xbf800000                                           // 00000006EE98: BF800000
	.long 0xbf800000                                           // 00000006EE9C: BF800000
	.long 0xbf800000                                           // 00000006EEA0: BF800000
	.long 0xbf800000                                           // 00000006EEA4: BF800000
	.long 0xbf800000                                           // 00000006EEA8: BF800000
	.long 0xbf800000                                           // 00000006EEAC: BF800000
	.long 0xbf800000                                           // 00000006EEB0: BF800000
	.long 0xbf800000                                           // 00000006EEB4: BF800000
	.long 0xbf800000                                           // 00000006EEB8: BF800000
	.long 0xbf800000                                           // 00000006EEBC: BF800000
	.long 0xbf800000                                           // 00000006EEC0: BF800000
	.long 0xbf800000                                           // 00000006EEC4: BF800000
	.long 0xbf800000                                           // 00000006EEC8: BF800000
	.long 0xbf800000                                           // 00000006EECC: BF800000
	.long 0xbf800000                                           // 00000006EED0: BF800000
	.long 0xbf800000                                           // 00000006EED4: BF800000
	.long 0xbf800000                                           // 00000006EED8: BF800000
	.long 0xbf800000                                           // 00000006EEDC: BF800000
	.long 0xbf800000                                           // 00000006EEE0: BF800000
	.long 0xbf800000                                           // 00000006EEE4: BF800000
	.long 0xbf800000                                           // 00000006EEE8: BF800000
	.long 0xbf800000                                           // 00000006EEEC: BF800000
	.long 0xbf800000                                           // 00000006EEF0: BF800000
	.long 0xbf800000                                           // 00000006EEF4: BF800000
	.long 0xbf800000                                           // 00000006EEF8: BF800000
	.long 0xbf800000                                           // 00000006EEFC: BF800000

	.p2align	8
	.type	subtract_get_global_id_get_num_groups,@function
	.size	subtract_get_global_id_get_num_groups, subtract_get_global_id_get_num_groups_symend-subtract_get_global_id_get_num_groups
subtract_get_global_id_get_num_groups:
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006EF00: D6100002 02291500
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000006EF08: 360600FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006EF10: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006EF18: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006EF1C: BF870003
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006EF20: D6560002 04090203
	v_mov_b32_e32 v1, 0                                        // 00000006EF28: 7E020280
	v_lshl_or_b32 v0, s2, 1, v3                                // 00000006EF2C: D6560000 040D0202
	v_lshl_or_b32 v6, s4, 2, v4                                // 00000006EF34: D6560006 04110404
	s_clause 0x1                                               // 00000006EF3C: BF850001
	global_load_b32 v9, v1, s[0:1] offset:34                   // 00000006EF40: DC520022 09000001
	global_load_u16 v10, v1, s[0:1] offset:38                  // 00000006EF48: DC4A0026 0A000001
	s_clause 0x3                                               // 00000006EF50: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006EF54: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006EF5C: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006EF64: F4040180 F8000008
	s_load_b128 s[0:3], s[0:1], 0x10                           // 00000006EF6C: F4080000 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006EF74: BF89FC07
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s10, v2     // 00000006EF78: CA200101 0302040A
	v_add_nc_u32_e32 v6, s5, v6                                // 00000006EF80: 4A0C0C05
	v_lshlrev_b64 v[4:5], 2, v[0:1]                            // 00000006EF84: D73C0004 00020082
	v_mov_b32_e32 v7, v1                                       // 00000006EF8C: 7E0E0301
	v_add_nc_u32_e32 v11, s8, v0                               // 00000006EF90: 4A160008
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006EF94: D73C0000 00020482
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006EF9C: BF870214
	v_add_co_u32 v3, vcc_lo, s6, v4                            // 00000006EFA0: D7006A03 00020806
	v_lshlrev_b64 v[7:8], 2, v[6:7]                            // 00000006EFA8: D73C0007 00020C82
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v5, vcc_lo             // 00000006EFB0: 40080A07
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006EFB4: BF870224
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006EFB8: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006EFC0: 40020207
	v_add_co_u32 v7, vcc_lo, s6, v7                            // 00000006EFC4: D7006A07 00020E06
	v_add_co_ci_u32_e32 v8, vcc_lo, s7, v8, vcc_lo             // 00000006EFCC: 40101007
	s_waitcnt vmcnt(1)                                         // 00000006EFD0: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 00000006EFD4: 7C7A1280
	v_lshrrev_b32_e32 v5, 16, v9                               // 00000006EFD8: 320A1290
	v_subrev_co_ci_u32_e32 v9, vcc_lo, s0, v11, vcc_lo         // 00000006EFDC: 44121600
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006EFE0: BF870002
	v_cmp_ne_u16_e32 vcc_lo, 0, v5.l                           // 00000006EFE4: 7C7A0A80
	v_subrev_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo          // 00000006EFE8: 44040401
	s_waitcnt vmcnt(0)                                         // 00000006EFEC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v10.l                          // 00000006EFF0: 7C7A1480
	v_subrev_co_ci_u32_e32 v5, vcc_lo, s2, v6, vcc_lo          // 00000006EFF4: 440A0C02
	s_clause 0x2                                               // 00000006EFF8: BF850002
	global_store_b32 v[3:4], v9, off                           // 00000006EFFC: DC6A0000 007C0903
	global_store_b32 v[0:1], v2, off                           // 00000006F004: DC6A0000 007C0200
	global_store_b32 v[7:8], v5, off                           // 00000006F00C: DC6A0000 007C0507
	s_nop 0                                                    // 00000006F014: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F018: BFB60003
	s_endpgm                                                   // 00000006F01C: BFB00000
subtract_get_global_id_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006F020: BF800000
	.long 0xbf800000                                           // 00000006F024: BF800000
	.long 0xbf800000                                           // 00000006F028: BF800000
	.long 0xbf800000                                           // 00000006F02C: BF800000
	.long 0xbf800000                                           // 00000006F030: BF800000
	.long 0xbf800000                                           // 00000006F034: BF800000
	.long 0xbf800000                                           // 00000006F038: BF800000
	.long 0xbf800000                                           // 00000006F03C: BF800000
	.long 0xbf800000                                           // 00000006F040: BF800000
	.long 0xbf800000                                           // 00000006F044: BF800000
	.long 0xbf800000                                           // 00000006F048: BF800000
	.long 0xbf800000                                           // 00000006F04C: BF800000
	.long 0xbf800000                                           // 00000006F050: BF800000
	.long 0xbf800000                                           // 00000006F054: BF800000
	.long 0xbf800000                                           // 00000006F058: BF800000
	.long 0xbf800000                                           // 00000006F05C: BF800000
	.long 0xbf800000                                           // 00000006F060: BF800000
	.long 0xbf800000                                           // 00000006F064: BF800000
	.long 0xbf800000                                           // 00000006F068: BF800000
	.long 0xbf800000                                           // 00000006F06C: BF800000
	.long 0xbf800000                                           // 00000006F070: BF800000
	.long 0xbf800000                                           // 00000006F074: BF800000
	.long 0xbf800000                                           // 00000006F078: BF800000
	.long 0xbf800000                                           // 00000006F07C: BF800000
	.long 0xbf800000                                           // 00000006F080: BF800000
	.long 0xbf800000                                           // 00000006F084: BF800000
	.long 0xbf800000                                           // 00000006F088: BF800000
	.long 0xbf800000                                           // 00000006F08C: BF800000
	.long 0xbf800000                                           // 00000006F090: BF800000
	.long 0xbf800000                                           // 00000006F094: BF800000
	.long 0xbf800000                                           // 00000006F098: BF800000
	.long 0xbf800000                                           // 00000006F09C: BF800000
	.long 0xbf800000                                           // 00000006F0A0: BF800000
	.long 0xbf800000                                           // 00000006F0A4: BF800000
	.long 0xbf800000                                           // 00000006F0A8: BF800000
	.long 0xbf800000                                           // 00000006F0AC: BF800000
	.long 0xbf800000                                           // 00000006F0B0: BF800000
	.long 0xbf800000                                           // 00000006F0B4: BF800000
	.long 0xbf800000                                           // 00000006F0B8: BF800000
	.long 0xbf800000                                           // 00000006F0BC: BF800000
	.long 0xbf800000                                           // 00000006F0C0: BF800000
	.long 0xbf800000                                           // 00000006F0C4: BF800000
	.long 0xbf800000                                           // 00000006F0C8: BF800000
	.long 0xbf800000                                           // 00000006F0CC: BF800000
	.long 0xbf800000                                           // 00000006F0D0: BF800000
	.long 0xbf800000                                           // 00000006F0D4: BF800000
	.long 0xbf800000                                           // 00000006F0D8: BF800000
	.long 0xbf800000                                           // 00000006F0DC: BF800000
	.long 0xbf800000                                           // 00000006F0E0: BF800000
	.long 0xbf800000                                           // 00000006F0E4: BF800000
	.long 0xbf800000                                           // 00000006F0E8: BF800000
	.long 0xbf800000                                           // 00000006F0EC: BF800000
	.long 0xbf800000                                           // 00000006F0F0: BF800000
	.long 0xbf800000                                           // 00000006F0F4: BF800000
	.long 0xbf800000                                           // 00000006F0F8: BF800000
	.long 0xbf800000                                           // 00000006F0FC: BF800000

	.p2align	8
	.type	subtract_get_global_size_get_num_groups,@function
	.size	subtract_get_global_size_get_num_groups, subtract_get_global_size_get_num_groups_symend-subtract_get_global_size_get_num_groups
subtract_get_global_size_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006F100: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000006F10C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006F110: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006F118: D6100000 02292900
	s_clause 0x1                                               // 00000006F120: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006F124: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006F12C: DC4A0026 08000002
	s_clause 0x3                                               // 00000006F134: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F138: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006F140: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000006F148: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006F150: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 00000006F158: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F15C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006F160: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006F168: 84028103
	s_mul_i32 s3, s12, 15                                      // 00000006F16C: 96038F0C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006F170: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006F174: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006F17C: D6550001 0414040A
	s_lshl_b32 s2, s4, 1                                       // 00000006F184: 84028104
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006F188: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 00000006F190: D6550001 04000405
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006F198: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006F19C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006F1A4: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006F1A8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006F1B0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006F1B8: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006F1BC: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F1C0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F1C8: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006F1CC: BF8907F7
	v_and_b32_e32 v9, 0xffff, v7                               // 00000006F1D0: 36120EFF 0000FFFF
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006F1D8: 7C7A0E80
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006F1DC: 32040E90
	s_waitcnt vmcnt(0)                                         // 00000006F1E0: BF8903F7
	v_add_nc_u32_e32 v10, s14, v8                              // 00000006F1E4: 4A14100E
	v_add_nc_u32_e32 v9, s3, v9                                // 00000006F1E8: 4A121203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006F1EC: BF870113
	v_add_nc_u32_e32 v11, s13, v2                              // 00000006F1F0: 4A16040D
	v_subrev_co_ci_u32_e32 v7, vcc_lo, 0, v9, vcc_lo           // 00000006F1F4: 440E1280
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000006F1F8: 7C7A0480
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006F1FC: BF870003
	v_subrev_co_ci_u32_e32 v2, vcc_lo, 0, v11, vcc_lo          // 00000006F200: 44041680
	v_cmp_ne_u32_e32 vcc_lo, 0, v8                             // 00000006F204: 7C9A1080
	v_subrev_co_ci_u32_e32 v8, vcc_lo, 0, v10, vcc_lo          // 00000006F208: 44101480
	s_clause 0x2                                               // 00000006F20C: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006F210: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006F218: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006F220: DC6A0000 007C0800
	s_nop 0                                                    // 00000006F228: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F22C: BFB60003
	s_endpgm                                                   // 00000006F230: BFB00000
subtract_get_global_size_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006F234: BF800000
	.long 0xbf800000                                           // 00000006F238: BF800000
	.long 0xbf800000                                           // 00000006F23C: BF800000
	.long 0xbf800000                                           // 00000006F240: BF800000
	.long 0xbf800000                                           // 00000006F244: BF800000
	.long 0xbf800000                                           // 00000006F248: BF800000
	.long 0xbf800000                                           // 00000006F24C: BF800000
	.long 0xbf800000                                           // 00000006F250: BF800000
	.long 0xbf800000                                           // 00000006F254: BF800000
	.long 0xbf800000                                           // 00000006F258: BF800000
	.long 0xbf800000                                           // 00000006F25C: BF800000
	.long 0xbf800000                                           // 00000006F260: BF800000
	.long 0xbf800000                                           // 00000006F264: BF800000
	.long 0xbf800000                                           // 00000006F268: BF800000
	.long 0xbf800000                                           // 00000006F26C: BF800000
	.long 0xbf800000                                           // 00000006F270: BF800000
	.long 0xbf800000                                           // 00000006F274: BF800000
	.long 0xbf800000                                           // 00000006F278: BF800000
	.long 0xbf800000                                           // 00000006F27C: BF800000
	.long 0xbf800000                                           // 00000006F280: BF800000
	.long 0xbf800000                                           // 00000006F284: BF800000
	.long 0xbf800000                                           // 00000006F288: BF800000
	.long 0xbf800000                                           // 00000006F28C: BF800000
	.long 0xbf800000                                           // 00000006F290: BF800000
	.long 0xbf800000                                           // 00000006F294: BF800000
	.long 0xbf800000                                           // 00000006F298: BF800000
	.long 0xbf800000                                           // 00000006F29C: BF800000
	.long 0xbf800000                                           // 00000006F2A0: BF800000
	.long 0xbf800000                                           // 00000006F2A4: BF800000
	.long 0xbf800000                                           // 00000006F2A8: BF800000
	.long 0xbf800000                                           // 00000006F2AC: BF800000
	.long 0xbf800000                                           // 00000006F2B0: BF800000
	.long 0xbf800000                                           // 00000006F2B4: BF800000
	.long 0xbf800000                                           // 00000006F2B8: BF800000
	.long 0xbf800000                                           // 00000006F2BC: BF800000
	.long 0xbf800000                                           // 00000006F2C0: BF800000
	.long 0xbf800000                                           // 00000006F2C4: BF800000
	.long 0xbf800000                                           // 00000006F2C8: BF800000
	.long 0xbf800000                                           // 00000006F2CC: BF800000
	.long 0xbf800000                                           // 00000006F2D0: BF800000
	.long 0xbf800000                                           // 00000006F2D4: BF800000
	.long 0xbf800000                                           // 00000006F2D8: BF800000
	.long 0xbf800000                                           // 00000006F2DC: BF800000
	.long 0xbf800000                                           // 00000006F2E0: BF800000
	.long 0xbf800000                                           // 00000006F2E4: BF800000
	.long 0xbf800000                                           // 00000006F2E8: BF800000
	.long 0xbf800000                                           // 00000006F2EC: BF800000
	.long 0xbf800000                                           // 00000006F2F0: BF800000
	.long 0xbf800000                                           // 00000006F2F4: BF800000
	.long 0xbf800000                                           // 00000006F2F8: BF800000
	.long 0xbf800000                                           // 00000006F2FC: BF800000

	.p2align	8
	.type	subtract_get_num_groups_get_num_groups,@function
	.size	subtract_get_num_groups_get_num_groups, subtract_get_num_groups_get_num_groups_symend-subtract_get_num_groups_get_num_groups
subtract_get_num_groups_get_num_groups:
	s_clause 0x2                                               // 00000006F300: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006F30C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F314: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006F31C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006F328: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006F32C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006F334: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006F33C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F340: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006F344: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006F34C: 84028103
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006F350: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006F354: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006F35C: D6550001 0414040A
	s_lshl_b32 s2, s4, 2                                       // 00000006F364: 84028204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006F368: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 00000006F370: D6550001 04000405
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006F378: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006F37C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006F384: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006F388: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006F390: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006F398: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006F39C: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F3A0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F3A8: 40020201
	s_clause 0x2                                               // 00000006F3AC: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006F3B0: DC6A0000 007C0203
	global_store_b32 v[5:6], v2, off                           // 00000006F3B8: DC6A0000 007C0205
	global_store_b32 v[0:1], v2, off                           // 00000006F3C0: DC6A0000 007C0200
	s_nop 0                                                    // 00000006F3C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F3CC: BFB60003
	s_endpgm                                                   // 00000006F3D0: BFB00000
subtract_get_num_groups_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006F3D4: BF800000
	.long 0xbf800000                                           // 00000006F3D8: BF800000
	.long 0xbf800000                                           // 00000006F3DC: BF800000
	.long 0xbf800000                                           // 00000006F3E0: BF800000
	.long 0xbf800000                                           // 00000006F3E4: BF800000
	.long 0xbf800000                                           // 00000006F3E8: BF800000
	.long 0xbf800000                                           // 00000006F3EC: BF800000
	.long 0xbf800000                                           // 00000006F3F0: BF800000
	.long 0xbf800000                                           // 00000006F3F4: BF800000
	.long 0xbf800000                                           // 00000006F3F8: BF800000
	.long 0xbf800000                                           // 00000006F3FC: BF800000

	.p2align	8
	.type	subtract_get_work_dim_get_num_groups,@function
	.size	subtract_get_work_dim_get_num_groups, subtract_get_work_dim_get_num_groups_symend-subtract_get_work_dim_get_num_groups
subtract_get_work_dim_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006F400: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006F40C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 00000006F414: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006F418: D6100005 02291500
	s_clause 0x1                                               // 00000006F420: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006F424: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006F42C: DC4A0026 08000002
	s_clause 0x2                                               // 00000006F434: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000006F438: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F440: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006F448: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006F450: BF89FC07
	s_load_b32 s9, s[0:1], 0x48                                // 00000006F454: F4000240 F8000048
	s_lshl_b32 s0, s3, 1                                       // 00000006F45C: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006F460: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006F468: BEA10080
	v_add3_u32 v1, s8, s2, v1                                  // 00000006F46C: D6550001 04040408
	s_and_b32 s2, s5, 0xffff                                   // 00000006F474: 8B02FF05 0000FFFF
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006F47C: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006F480: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006F488: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 00000006F490: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006F494: D73C0005 00020282
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006F49C: BF870213
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000006F4A0: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000006F4A8: 40080807
	s_waitcnt lgkmcnt(0)                                       // 00000006F4AC: BF89FC07
	v_add3_u32 v1, s9, s0, v0                                  // 00000006F4B0: D6550001 04000009
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F4B8: BF870094
	v_add_co_u32 v5, s1, s6, v5                                // 00000006F4BC: D7000105 00020A06
	v_add_co_ci_u32_e64 v6, s1, s7, v6, s1                     // 00000006F4C4: D5200106 00060C07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000006F4CC: BF870143
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006F4D0: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006F4D8: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006F4DC: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006F4E0: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 00000006F4E4: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006F4EC: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006F4F0: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006F4F4: 7C7A1080
	s_subb_u32 s1, s2, s12                                     // 00000006F4F8: 82810C02
	s_cmp_lg_u32 s0, 0                                         // 00000006F4FC: BF078000
	s_subb_u32 s0, s2, s13                                     // 00000006F500: 82800D02
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006F504: BF07806A
	v_dual_mov_b32 v2, s1 :: v_dual_mov_b32 v7, s0             // 00000006F508: CA100001 02060000
	s_subb_u32 s0, s2, s14                                     // 00000006F510: 82800E02
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000006F514: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000006F51C: 40020207
	v_mov_b32_e32 v8, s0                                       // 00000006F520: 7E100200
	s_clause 0x2                                               // 00000006F524: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006F528: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006F530: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006F538: DC6A0000 007C0800
	s_nop 0                                                    // 00000006F540: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F544: BFB60003
	s_endpgm                                                   // 00000006F548: BFB00000
subtract_get_work_dim_get_num_groups_symend:
	.long 0xbf800000                                           // 00000006F54C: BF800000
	.long 0xbf800000                                           // 00000006F550: BF800000
	.long 0xbf800000                                           // 00000006F554: BF800000
	.long 0xbf800000                                           // 00000006F558: BF800000
	.long 0xbf800000                                           // 00000006F55C: BF800000
	.long 0xbf800000                                           // 00000006F560: BF800000
	.long 0xbf800000                                           // 00000006F564: BF800000
	.long 0xbf800000                                           // 00000006F568: BF800000
	.long 0xbf800000                                           // 00000006F56C: BF800000
	.long 0xbf800000                                           // 00000006F570: BF800000
	.long 0xbf800000                                           // 00000006F574: BF800000
	.long 0xbf800000                                           // 00000006F578: BF800000
	.long 0xbf800000                                           // 00000006F57C: BF800000
	.long 0xbf800000                                           // 00000006F580: BF800000
	.long 0xbf800000                                           // 00000006F584: BF800000
	.long 0xbf800000                                           // 00000006F588: BF800000
	.long 0xbf800000                                           // 00000006F58C: BF800000
	.long 0xbf800000                                           // 00000006F590: BF800000
	.long 0xbf800000                                           // 00000006F594: BF800000
	.long 0xbf800000                                           // 00000006F598: BF800000
	.long 0xbf800000                                           // 00000006F59C: BF800000
	.long 0xbf800000                                           // 00000006F5A0: BF800000
	.long 0xbf800000                                           // 00000006F5A4: BF800000
	.long 0xbf800000                                           // 00000006F5A8: BF800000
	.long 0xbf800000                                           // 00000006F5AC: BF800000
	.long 0xbf800000                                           // 00000006F5B0: BF800000
	.long 0xbf800000                                           // 00000006F5B4: BF800000
	.long 0xbf800000                                           // 00000006F5B8: BF800000
	.long 0xbf800000                                           // 00000006F5BC: BF800000
	.long 0xbf800000                                           // 00000006F5C0: BF800000
	.long 0xbf800000                                           // 00000006F5C4: BF800000
	.long 0xbf800000                                           // 00000006F5C8: BF800000
	.long 0xbf800000                                           // 00000006F5CC: BF800000
	.long 0xbf800000                                           // 00000006F5D0: BF800000
	.long 0xbf800000                                           // 00000006F5D4: BF800000
	.long 0xbf800000                                           // 00000006F5D8: BF800000
	.long 0xbf800000                                           // 00000006F5DC: BF800000
	.long 0xbf800000                                           // 00000006F5E0: BF800000
	.long 0xbf800000                                           // 00000006F5E4: BF800000
	.long 0xbf800000                                           // 00000006F5E8: BF800000
	.long 0xbf800000                                           // 00000006F5EC: BF800000
	.long 0xbf800000                                           // 00000006F5F0: BF800000
	.long 0xbf800000                                           // 00000006F5F4: BF800000
	.long 0xbf800000                                           // 00000006F5F8: BF800000
	.long 0xbf800000                                           // 00000006F5FC: BF800000

	.p2align	8
	.type	subtract_x_get_work_dim,@function
	.size	subtract_x_get_work_dim, subtract_x_get_work_dim_symend-subtract_x_get_work_dim
subtract_x_get_work_dim:
	s_clause 0x4                                               // 00000006F600: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 00000006F604: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F60C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x8                                 // 00000006F614: F4000180 F8000008
	s_load_b32 s7, s[0:1], 0x48                                // 00000006F61C: F40001C0 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006F624: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006F62C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000006F638: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006F63C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006F644: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006F64C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F650: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006F654: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006F65C: 84028103
	s_and_b32 s3, s5, 0xffff                                   // 00000006F660: 8B03FF05 0000FFFF
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 00000006F668: BF870151
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006F66C: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006F674: D6550001 0414040A
	s_sub_i32 s2, s6, s3                                       // 00000006F67C: 81820306
	s_lshl_b32 s3, s4, 1                                       // 00000006F680: 84038104
	v_mov_b32_e32 v7, s2                                       // 00000006F684: 7E0E0202
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006F688: D73C0005 00020282
	v_add3_u32 v1, s7, s3, v0                                  // 00000006F690: D6550001 04000607
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006F698: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006F6A0: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006F6A4: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006F6A8: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006F6B0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006F6B8: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F6BC: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006F6C4: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F6C8: 40020201
	s_clause 0x2                                               // 00000006F6CC: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006F6D0: DC6A0000 007C0703
	global_store_b32 v[5:6], v7, off                           // 00000006F6D8: DC6A0000 007C0705
	global_store_b32 v[0:1], v7, off                           // 00000006F6E0: DC6A0000 007C0700
	s_nop 0                                                    // 00000006F6E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F6EC: BFB60003
	s_endpgm                                                   // 00000006F6F0: BFB00000
subtract_x_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006F6F4: BF800000
	.long 0xbf800000                                           // 00000006F6F8: BF800000
	.long 0xbf800000                                           // 00000006F6FC: BF800000

	.p2align	8
	.type	subtract_get_global_offset_get_work_dim,@function
	.size	subtract_get_global_offset_get_work_dim, subtract_get_global_offset_get_work_dim_symend-subtract_get_global_offset_get_work_dim
subtract_get_global_offset_get_work_dim:
	s_clause 0x3                                               // 00000006F700: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F704: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000006F70C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 00000006F714: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F71C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006F724: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000006F730: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006F734: D6100005 02291500
	s_lshl_b32 s3, s3, 4                                       // 00000006F73C: 84038403
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006F740: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 00000006F748: 84048104
	s_mov_b32 s33, 0                                           // 00000006F74C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F750: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000006F754: D6550001 04040408
	s_and_b32 s2, s5, 0xffff                                   // 00000006F75C: 8B02FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000006F764: BF870099
	s_sub_i32 s5, s8, s2                                       // 00000006F768: 81850208
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006F76C: D73C0003 00020282
	v_add3_u32 v1, s10, s3, v5                                 // 00000006F774: D6550001 0414060A
	s_sub_i32 s3, s10, s2                                      // 00000006F77C: 8183020A
	s_sub_i32 s2, s6, s2                                       // 00000006F780: 81820206
	v_dual_mov_b32 v7, s5 :: v_dual_mov_b32 v8, s3             // 00000006F784: CA100005 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006F78C: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006F790: D73C0005 00020282
	v_add3_u32 v1, s6, s4, v0                                  // 00000006F798: D6550001 04000806
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006F7A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006F7A8: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006F7AC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006F7B4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006F7BC: 400C0C01
	v_mov_b32_e32 v2, s2                                       // 00000006F7C0: 7E040202
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006F7C4: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F7C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F7D0: 40020201
	s_clause 0x2                                               // 00000006F7D4: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006F7D8: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006F7E0: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006F7E8: DC6A0000 007C0200
	s_nop 0                                                    // 00000006F7F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F7F4: BFB60003
	s_endpgm                                                   // 00000006F7F8: BFB00000
subtract_get_global_offset_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006F7FC: BF800000

	.p2align	8
	.type	subtract_get_local_id_get_work_dim,@function
	.size	subtract_get_local_id_get_work_dim, subtract_get_local_id_get_work_dim_symend-subtract_get_local_id_get_work_dim
subtract_get_local_id_get_work_dim:
	s_clause 0x3                                               // 00000006F800: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F804: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000006F80C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 00000006F814: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F81C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000006F824: CA240080 020400FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000006F830: 84028302
	v_bfe_u32 v6, v0, 10, 10                                   // 00000006F834: D6100006 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006F83C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006F844: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006F848: BF89FC07
	v_add3_u32 v1, s8, s2, v5                                  // 00000006F84C: D6550001 04140408
	s_lshl_b32 s2, s3, 2                                       // 00000006F854: 84028203
	s_and_b32 s3, s5, 0xffff                                   // 00000006F858: 8B03FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000006F860: BF870119
	v_subrev_nc_u32_e32 v7, s3, v5                             // 00000006F864: 4E0E0A03
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006F868: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v6                                 // 00000006F870: D6550001 0418040A
	s_lshl_b32 s2, s4, 1                                       // 00000006F878: 84028104
	v_subrev_nc_u32_e32 v8, s3, v6                             // 00000006F87C: 4E100C03
	v_subrev_nc_u32_e32 v9, s3, v0                             // 00000006F880: 4E120003
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006F884: BF8701C3
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006F888: D73C0005 00020282
	v_add3_u32 v1, s6, s2, v0                                  // 00000006F890: D6550001 04000406
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006F898: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006F8A0: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006F8A4: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006F8AC: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006F8B4: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006F8B8: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F8BC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F8C4: 40020201
	s_clause 0x2                                               // 00000006F8C8: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006F8CC: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006F8D4: DC6A0000 007C0805
	global_store_b32 v[0:1], v9, off                           // 00000006F8DC: DC6A0000 007C0900
	s_nop 0                                                    // 00000006F8E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F8E8: BFB60003
	s_endpgm                                                   // 00000006F8EC: BFB00000
subtract_get_local_id_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006F8F0: BF800000
	.long 0xbf800000                                           // 00000006F8F4: BF800000
	.long 0xbf800000                                           // 00000006F8F8: BF800000
	.long 0xbf800000                                           // 00000006F8FC: BF800000

	.p2align	8
	.type	subtract_get_group_id_get_work_dim,@function
	.size	subtract_get_group_id_get_work_dim, subtract_get_group_id_get_work_dim_symend-subtract_get_group_id_get_work_dim
subtract_get_group_id_get_work_dim:
	s_clause 0x3                                               // 00000006F900: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006F904: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000006F90C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 00000006F914: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006F91C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006F924: CA240080 020000FF 000003FF
	s_lshl_b32 s7, s2, 1                                       // 00000006F930: 84078102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006F934: D6100005 02291500
	s_waitcnt lgkmcnt(0)                                       // 00000006F93C: BF89FC07
	s_lshl_b32 s9, s3, 4                                       // 00000006F940: 84098403
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006F944: D6100000 02292900
	s_lshl_b32 s11, s4, 1                                      // 00000006F94C: 840B8104
	s_mov_b32 s33, 0                                           // 00000006F950: BEA10080
	v_add3_u32 v1, s8, s7, v1                                  // 00000006F954: D6550001 04040E08
	s_and_b32 s5, s5, 0xffff                                   // 00000006F95C: 8B05FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006F964: BF8700A9
	s_sub_i32 s2, s2, s5                                       // 00000006F968: 81820502
	s_sub_i32 s3, s3, s5                                       // 00000006F96C: 81830503
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006F970: D73C0003 00020282
	v_add3_u32 v1, s10, s9, v5                                 // 00000006F978: D6550001 0414120A
	s_sub_i32 s4, s4, s5                                       // 00000006F980: 81840504
	v_dual_mov_b32 v7, s2 :: v_dual_mov_b32 v8, s3             // 00000006F984: CA100002 07080003
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000006F98C: BF8701C2
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006F990: D73C0005 00020282
	v_add3_u32 v1, s6, s11, v0                                 // 00000006F998: D6550001 04001606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006F9A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006F9A8: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006F9AC: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006F9B4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006F9BC: 400C0C01
	v_mov_b32_e32 v2, s4                                       // 00000006F9C0: 7E040204
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006F9C4: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006F9C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006F9D0: 40020201
	s_clause 0x2                                               // 00000006F9D4: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006F9D8: DC6A0000 007C0703
	global_store_b32 v[5:6], v8, off                           // 00000006F9E0: DC6A0000 007C0805
	global_store_b32 v[0:1], v2, off                           // 00000006F9E8: DC6A0000 007C0200
	s_nop 0                                                    // 00000006F9F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006F9F4: BFB60003
	s_endpgm                                                   // 00000006F9F8: BFB00000
subtract_get_group_id_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006F9FC: BF800000

	.p2align	8
	.type	subtract_get_local_size_get_work_dim,@function
	.size	subtract_get_local_size_get_work_dim, subtract_get_local_size_get_work_dim_symend-subtract_get_local_size_get_work_dim
subtract_get_local_size_get_work_dim:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000006FA00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000006FA08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000006FA0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000006FA10: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000006FA14: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000006FA18: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000006FA1C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006FA20: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006FA2C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006FA34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006FA3C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000006FA40: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000006FA44: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000006FA48: BF8704D9
	s_add_u32 s6, s5, s2                                       // 00000006FA4C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000006FA50: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000006FA54: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 00000006FA58: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 00000006FA60: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000006FA64: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000006FA68: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000006FA6C: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000006FA70: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000006FA74: BF870009
	s_add_u32 s4, s5, s4                                       // 00000006FA78: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000006FA7C: 8205800B
	s_clause 0x1                                               // 00000006FA80: BF850001
	global_load_u16 v8, v2, s[2:3]                             // 00000006FA84: DC4A0000 08020002
	global_load_u16 v9, v2, s[4:5]                             // 00000006FA8C: DC4A0000 09040002
	s_clause 0x3                                               // 00000006FA94: BF850003
	s_load_b32 s2, s[0:1], 0x50                                // 00000006FA98: F4000080 F8000050
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000006FAA0: F4080100 F8000038
	s_load_b32 s3, s[0:1], 0x48                                // 00000006FAA8: F40000C0 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006FAB0: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000006FAB8: BF89FC07
	s_and_b32 s2, s2, 0xffff                                   // 00000006FABC: 8B02FF02 0000FFFF
	v_add3_u32 v1, s4, s12, v1                                 // 00000006FAC4: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000006FACC: BF8700A1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006FAD0: D73C0003 00020282
	v_add3_u32 v1, s6, s13, v5                                 // 00000006FAD8: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006FAE0: D73C0005 00020282
	v_add3_u32 v1, s3, s14, v0                                 // 00000006FAE8: D6550001 04001C03
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000006FAF0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006FAF4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006FAFC: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006FB00: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006FB08: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006FB10: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000006FB14: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006FB18: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006FB20: 40020201
	s_waitcnt vmcnt(2)                                         // 00000006FB24: BF890BF7
	v_subrev_nc_u32_e32 v2, s2, v7                             // 00000006FB28: 4E040E02
	s_waitcnt vmcnt(1)                                         // 00000006FB2C: BF8907F7
	v_subrev_nc_u32_e32 v7, s2, v8                             // 00000006FB30: 4E0E1002
	s_waitcnt vmcnt(0)                                         // 00000006FB34: BF8903F7
	v_subrev_nc_u32_e32 v8, s2, v9                             // 00000006FB38: 4E101202
	s_clause 0x2                                               // 00000006FB3C: BF850002
	global_store_b32 v[3:4], v2, off                           // 00000006FB40: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 00000006FB48: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 00000006FB50: DC6A0000 007C0800
	s_nop 0                                                    // 00000006FB58: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FB5C: BFB60003
	s_endpgm                                                   // 00000006FB60: BFB00000
subtract_get_local_size_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006FB64: BF800000
	.long 0xbf800000                                           // 00000006FB68: BF800000
	.long 0xbf800000                                           // 00000006FB6C: BF800000
	.long 0xbf800000                                           // 00000006FB70: BF800000
	.long 0xbf800000                                           // 00000006FB74: BF800000
	.long 0xbf800000                                           // 00000006FB78: BF800000
	.long 0xbf800000                                           // 00000006FB7C: BF800000
	.long 0xbf800000                                           // 00000006FB80: BF800000
	.long 0xbf800000                                           // 00000006FB84: BF800000
	.long 0xbf800000                                           // 00000006FB88: BF800000
	.long 0xbf800000                                           // 00000006FB8C: BF800000
	.long 0xbf800000                                           // 00000006FB90: BF800000
	.long 0xbf800000                                           // 00000006FB94: BF800000
	.long 0xbf800000                                           // 00000006FB98: BF800000
	.long 0xbf800000                                           // 00000006FB9C: BF800000
	.long 0xbf800000                                           // 00000006FBA0: BF800000
	.long 0xbf800000                                           // 00000006FBA4: BF800000
	.long 0xbf800000                                           // 00000006FBA8: BF800000
	.long 0xbf800000                                           // 00000006FBAC: BF800000
	.long 0xbf800000                                           // 00000006FBB0: BF800000
	.long 0xbf800000                                           // 00000006FBB4: BF800000
	.long 0xbf800000                                           // 00000006FBB8: BF800000
	.long 0xbf800000                                           // 00000006FBBC: BF800000
	.long 0xbf800000                                           // 00000006FBC0: BF800000
	.long 0xbf800000                                           // 00000006FBC4: BF800000
	.long 0xbf800000                                           // 00000006FBC8: BF800000
	.long 0xbf800000                                           // 00000006FBCC: BF800000
	.long 0xbf800000                                           // 00000006FBD0: BF800000
	.long 0xbf800000                                           // 00000006FBD4: BF800000
	.long 0xbf800000                                           // 00000006FBD8: BF800000
	.long 0xbf800000                                           // 00000006FBDC: BF800000
	.long 0xbf800000                                           // 00000006FBE0: BF800000
	.long 0xbf800000                                           // 00000006FBE4: BF800000
	.long 0xbf800000                                           // 00000006FBE8: BF800000
	.long 0xbf800000                                           // 00000006FBEC: BF800000
	.long 0xbf800000                                           // 00000006FBF0: BF800000
	.long 0xbf800000                                           // 00000006FBF4: BF800000
	.long 0xbf800000                                           // 00000006FBF8: BF800000
	.long 0xbf800000                                           // 00000006FBFC: BF800000

	.p2align	8
	.type	subtract_get_global_id_get_work_dim,@function
	.size	subtract_get_global_id_get_work_dim, subtract_get_global_id_get_work_dim_symend-subtract_get_global_id_get_work_dim
subtract_get_global_id_get_work_dim:
	s_clause 0x3                                               // 00000006FC00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006FC04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000006FC0C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x50                                // 00000006FC14: F4000180 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000006FC1C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000006FC24: D6100002 02291500
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000006FC2C: 360600FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 00000006FC34: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000006FC3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 00000006FC40: BF8701D3
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000006FC44: D6560002 04090203
	v_mov_b32_e32 v1, 0                                        // 00000006FC4C: 7E020280
	v_lshl_or_b32 v0, s2, 1, v3                                // 00000006FC50: D6560000 040D0202
	v_lshl_or_b32 v4, s4, 2, v4                                // 00000006FC58: D6560004 04110404
	s_waitcnt lgkmcnt(0)                                       // 00000006FC60: BF89FC07
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s10, v2     // 00000006FC64: CA200101 0302040A
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 00000006FC6C: BF870233
	v_add_nc_u32_e32 v8, s8, v0                                // 00000006FC70: 4A100008
	v_lshlrev_b64 v[6:7], 2, v[0:1]                            // 00000006FC74: D73C0006 00020082
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v4, s5, v4      // 00000006FC7C: CA200101 05040805
	v_lshlrev_b64 v[0:1], 2, v[2:3]                            // 00000006FC84: D73C0000 00020482
	s_and_b32 s2, s6, 0xffff                                   // 00000006FC8C: 8B02FF06 0000FFFF
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006FC94: BF870003
	v_add_co_u32 v6, vcc_lo, s0, v6                            // 00000006FC98: D7006A06 00020C00
	v_subrev_nc_u32_e32 v9, s2, v2                             // 00000006FCA0: 4E120402
	v_lshlrev_b64 v[2:3], 2, v[4:5]                            // 00000006FCA4: D73C0002 00020882
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v7, vcc_lo             // 00000006FCAC: 400E0E01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006FCB0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006FCB8: 40020201
	v_subrev_nc_u32_e32 v8, s2, v8                             // 00000006FCBC: 4E101002
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000006FCC0: D7006A02 00020400
	v_subrev_nc_u32_e32 v4, s2, v4                             // 00000006FCC8: 4E080802
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000006FCCC: 40060601
	s_clause 0x2                                               // 00000006FCD0: BF850002
	global_store_b32 v[6:7], v8, off                           // 00000006FCD4: DC6A0000 007C0806
	global_store_b32 v[0:1], v9, off                           // 00000006FCDC: DC6A0000 007C0900
	global_store_b32 v[2:3], v4, off                           // 00000006FCE4: DC6A0000 007C0402
	s_nop 0                                                    // 00000006FCEC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FCF0: BFB60003
	s_endpgm                                                   // 00000006FCF4: BFB00000
subtract_get_global_id_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006FCF8: BF800000
	.long 0xbf800000                                           // 00000006FCFC: BF800000

	.p2align	8
	.type	subtract_get_global_size_get_work_dim,@function
	.size	subtract_get_global_size_get_work_dim, subtract_get_global_size_get_work_dim_symend-subtract_get_global_size_get_work_dim
subtract_get_global_size_get_work_dim:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006FD00: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000006FD0C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006FD10: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006FD18: D6100000 02292900
	s_clause 0x1                                               // 00000006FD20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006FD24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006FD2C: DC4A0026 08000002
	s_clause 0x4                                               // 00000006FD34: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 00000006FD38: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006FD40: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006FD48: F4080300 F8000010
	s_load_b32 s6, s[0:1], 0x48                                // 00000006FD50: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000006FD58: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 00000006FD60: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000006FD64: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 00000006FD68: 8B05FF05 0000FFFF
	v_add3_u32 v1, s8, s2, v1                                  // 00000006FD70: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000006FD78: 84028103
	s_lshl_b32 s3, s4, 1                                       // 00000006FD7C: 84038104
	s_lshl_b32 s4, s13, 1                                      // 00000006FD80: 8404810D
	s_lshl_b32 s7, s14, 1                                      // 00000006FD84: 8407810E
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006FD88: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000006FD90: D6550001 0414040A
	s_lshl_b32 s2, s12, 4                                      // 00000006FD98: 8402840C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000006FD9C: BF870221
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006FDA0: D73C0005 00020282
	v_add3_u32 v1, s6, s3, v0                                  // 00000006FDA8: D6550001 04000606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000006FDB0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000006FDB8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 00000006FDBC: BF8701B3
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006FDC0: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 00000006FDC8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 00000006FDD0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000006FDD4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 00000006FDDC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000006FDE0: 40020201
	s_waitcnt vmcnt(1)                                         // 00000006FDE4: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 00000006FDE8: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 00000006FDEC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 00000006FDF4: BF8903F7
	v_add_nc_u32_e32 v8, s7, v8                                // 00000006FDF8: 4A101007
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006FDFC: BF870193
	v_add_nc_u32_e32 v2, s4, v2                                // 00000006FE00: 4A040404
	v_add_nc_u32_e32 v7, s2, v7                                // 00000006FE04: 4A0E0E02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006FE08: BF870193
	v_subrev_nc_u32_e32 v8, s5, v8                             // 00000006FE0C: 4E101005
	v_subrev_nc_u32_e32 v2, s5, v2                             // 00000006FE10: 4E040405
	s_delay_alu instid0(VALU_DEP_3)                            // 00000006FE14: BF870003
	v_subrev_nc_u32_e32 v7, s5, v7                             // 00000006FE18: 4E0E0E05
	s_clause 0x2                                               // 00000006FE1C: BF850002
	global_store_b32 v[3:4], v7, off                           // 00000006FE20: DC6A0000 007C0703
	global_store_b32 v[5:6], v2, off                           // 00000006FE28: DC6A0000 007C0205
	global_store_b32 v[0:1], v8, off                           // 00000006FE30: DC6A0000 007C0800
	s_nop 0                                                    // 00000006FE38: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000006FE3C: BFB60003
	s_endpgm                                                   // 00000006FE40: BFB00000
subtract_get_global_size_get_work_dim_symend:
	.long 0xbf800000                                           // 00000006FE44: BF800000
	.long 0xbf800000                                           // 00000006FE48: BF800000
	.long 0xbf800000                                           // 00000006FE4C: BF800000
	.long 0xbf800000                                           // 00000006FE50: BF800000
	.long 0xbf800000                                           // 00000006FE54: BF800000
	.long 0xbf800000                                           // 00000006FE58: BF800000
	.long 0xbf800000                                           // 00000006FE5C: BF800000
	.long 0xbf800000                                           // 00000006FE60: BF800000
	.long 0xbf800000                                           // 00000006FE64: BF800000
	.long 0xbf800000                                           // 00000006FE68: BF800000
	.long 0xbf800000                                           // 00000006FE6C: BF800000
	.long 0xbf800000                                           // 00000006FE70: BF800000
	.long 0xbf800000                                           // 00000006FE74: BF800000
	.long 0xbf800000                                           // 00000006FE78: BF800000
	.long 0xbf800000                                           // 00000006FE7C: BF800000
	.long 0xbf800000                                           // 00000006FE80: BF800000
	.long 0xbf800000                                           // 00000006FE84: BF800000
	.long 0xbf800000                                           // 00000006FE88: BF800000
	.long 0xbf800000                                           // 00000006FE8C: BF800000
	.long 0xbf800000                                           // 00000006FE90: BF800000
	.long 0xbf800000                                           // 00000006FE94: BF800000
	.long 0xbf800000                                           // 00000006FE98: BF800000
	.long 0xbf800000                                           // 00000006FE9C: BF800000
	.long 0xbf800000                                           // 00000006FEA0: BF800000
	.long 0xbf800000                                           // 00000006FEA4: BF800000
	.long 0xbf800000                                           // 00000006FEA8: BF800000
	.long 0xbf800000                                           // 00000006FEAC: BF800000
	.long 0xbf800000                                           // 00000006FEB0: BF800000
	.long 0xbf800000                                           // 00000006FEB4: BF800000
	.long 0xbf800000                                           // 00000006FEB8: BF800000
	.long 0xbf800000                                           // 00000006FEBC: BF800000
	.long 0xbf800000                                           // 00000006FEC0: BF800000
	.long 0xbf800000                                           // 00000006FEC4: BF800000
	.long 0xbf800000                                           // 00000006FEC8: BF800000
	.long 0xbf800000                                           // 00000006FECC: BF800000
	.long 0xbf800000                                           // 00000006FED0: BF800000
	.long 0xbf800000                                           // 00000006FED4: BF800000
	.long 0xbf800000                                           // 00000006FED8: BF800000
	.long 0xbf800000                                           // 00000006FEDC: BF800000
	.long 0xbf800000                                           // 00000006FEE0: BF800000
	.long 0xbf800000                                           // 00000006FEE4: BF800000
	.long 0xbf800000                                           // 00000006FEE8: BF800000
	.long 0xbf800000                                           // 00000006FEEC: BF800000
	.long 0xbf800000                                           // 00000006FEF0: BF800000
	.long 0xbf800000                                           // 00000006FEF4: BF800000
	.long 0xbf800000                                           // 00000006FEF8: BF800000
	.long 0xbf800000                                           // 00000006FEFC: BF800000

	.p2align	8
	.type	subtract_get_num_groups_get_work_dim,@function
	.size	subtract_get_num_groups_get_work_dim, subtract_get_num_groups_get_work_dim_symend-subtract_get_num_groups_get_work_dim
subtract_get_num_groups_get_work_dim:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000006FF00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000006FF0C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 00000006FF14: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000006FF18: D6100005 02291500
	s_clause 0x1                                               // 00000006FF20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 00000006FF24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000006FF2C: DC4A0026 08000002
	s_clause 0x2                                               // 00000006FF34: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 00000006FF38: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000006FF40: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000006FF48: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000006FF50: BF89FC07
	s_load_b32 s9, s[0:1], 0x48                                // 00000006FF54: F4000240 F8000048
	s_lshl_b32 s0, s3, 1                                       // 00000006FF5C: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 00000006FF60: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000006FF68: BEA10080
	v_add3_u32 v1, s8, s2, v1                                  // 00000006FF6C: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000006FF74: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 00000006FF78: D73C0003 00020282
	v_add3_u32 v1, s10, s0, v5                                 // 00000006FF80: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 00000006FF88: 84008204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 00000006FF8C: D73C0005 00020282
	s_waitcnt lgkmcnt(0)                                       // 00000006FF94: BF89FC07
	v_add3_u32 v1, s9, s0, v0                                  // 00000006FF98: D6550001 04000009
	v_add_co_u32 v3, s1, s6, v3                                // 00000006FFA0: D7000103 00020606
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000006FFA8: BF870191
	v_add_co_ci_u32_e64 v4, s1, s7, v4, s1                     // 00000006FFAC: D5200104 00060807
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 00000006FFB4: D73C0000 00020282
	s_waitcnt vmcnt(1)                                         // 00000006FFBC: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 00000006FFC0: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 00000006FFC4: 7C7A0E80
	s_delay_alu instid0(VALU_DEP_2)                            // 00000006FFC8: BF870002
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 00000006FFCC: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006FFD4: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000006FFD8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 00000006FFDC: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 00000006FFE0: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 00000006FFE4: BF078000
	s_addc_u32 s0, s13, 0                                      // 00000006FFE8: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000006FFEC: BF07806A
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 00000006FFF0: D7006A05 00020A06
	s_addc_u32 s2, s14, 0                                      // 00000006FFF8: 8202800E
	s_and_b32 s3, s5, 0xffff                                   // 00000006FFFC: 8B03FF05 0000FFFF
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 000000070004: 400C0C07
	s_sub_i32 s1, s1, s3                                       // 000000070008: 81810301
	s_sub_i32 s0, s0, s3                                       // 00000007000C: 81800300
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000070010: D7006A00 00020006
	s_sub_i32 s2, s2, s3                                       // 000000070018: 81820302
	v_dual_mov_b32 v2, s1 :: v_dual_mov_b32 v7, s0             // 00000007001C: CA100001 02060000
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000070024: 40020207
	v_mov_b32_e32 v8, s2                                       // 000000070028: 7E100202
	s_clause 0x2                                               // 00000007002C: BF850002
	global_store_b32 v[3:4], v2, off                           // 000000070030: DC6A0000 007C0203
	global_store_b32 v[5:6], v7, off                           // 000000070038: DC6A0000 007C0705
	global_store_b32 v[0:1], v8, off                           // 000000070040: DC6A0000 007C0800
	s_nop 0                                                    // 000000070048: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007004C: BFB60003
	s_endpgm                                                   // 000000070050: BFB00000
subtract_get_num_groups_get_work_dim_symend:
	.long 0xbf800000                                           // 000000070054: BF800000
	.long 0xbf800000                                           // 000000070058: BF800000
	.long 0xbf800000                                           // 00000007005C: BF800000
	.long 0xbf800000                                           // 000000070060: BF800000
	.long 0xbf800000                                           // 000000070064: BF800000
	.long 0xbf800000                                           // 000000070068: BF800000
	.long 0xbf800000                                           // 00000007006C: BF800000
	.long 0xbf800000                                           // 000000070070: BF800000
	.long 0xbf800000                                           // 000000070074: BF800000
	.long 0xbf800000                                           // 000000070078: BF800000
	.long 0xbf800000                                           // 00000007007C: BF800000
	.long 0xbf800000                                           // 000000070080: BF800000
	.long 0xbf800000                                           // 000000070084: BF800000
	.long 0xbf800000                                           // 000000070088: BF800000
	.long 0xbf800000                                           // 00000007008C: BF800000
	.long 0xbf800000                                           // 000000070090: BF800000
	.long 0xbf800000                                           // 000000070094: BF800000
	.long 0xbf800000                                           // 000000070098: BF800000
	.long 0xbf800000                                           // 00000007009C: BF800000
	.long 0xbf800000                                           // 0000000700A0: BF800000
	.long 0xbf800000                                           // 0000000700A4: BF800000
	.long 0xbf800000                                           // 0000000700A8: BF800000
	.long 0xbf800000                                           // 0000000700AC: BF800000
	.long 0xbf800000                                           // 0000000700B0: BF800000
	.long 0xbf800000                                           // 0000000700B4: BF800000
	.long 0xbf800000                                           // 0000000700B8: BF800000
	.long 0xbf800000                                           // 0000000700BC: BF800000
	.long 0xbf800000                                           // 0000000700C0: BF800000
	.long 0xbf800000                                           // 0000000700C4: BF800000
	.long 0xbf800000                                           // 0000000700C8: BF800000
	.long 0xbf800000                                           // 0000000700CC: BF800000
	.long 0xbf800000                                           // 0000000700D0: BF800000
	.long 0xbf800000                                           // 0000000700D4: BF800000
	.long 0xbf800000                                           // 0000000700D8: BF800000
	.long 0xbf800000                                           // 0000000700DC: BF800000
	.long 0xbf800000                                           // 0000000700E0: BF800000
	.long 0xbf800000                                           // 0000000700E4: BF800000
	.long 0xbf800000                                           // 0000000700E8: BF800000
	.long 0xbf800000                                           // 0000000700EC: BF800000
	.long 0xbf800000                                           // 0000000700F0: BF800000
	.long 0xbf800000                                           // 0000000700F4: BF800000
	.long 0xbf800000                                           // 0000000700F8: BF800000
	.long 0xbf800000                                           // 0000000700FC: BF800000

	.p2align	8
	.type	subtract_get_work_dim_get_work_dim,@function
	.size	subtract_get_work_dim_get_work_dim, subtract_get_work_dim_get_work_dim_symend-subtract_get_work_dim_get_work_dim
subtract_get_work_dim_get_work_dim:
	s_clause 0x2                                               // 000000070100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000070104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007010C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070114: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007011C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000070128: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007012C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000070134: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007013C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070140: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000070144: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 00000007014C: 84028103
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000070150: BF8700B1
	v_lshlrev_b64 v[3:4], 2, v[1:2]                            // 000000070154: D73C0003 00020282
	v_add3_u32 v1, s10, s2, v5                                 // 00000007015C: D6550001 0414040A
	s_lshl_b32 s2, s4, 2                                       // 000000070164: 84028204
	v_lshlrev_b64 v[5:6], 2, v[1:2]                            // 000000070168: D73C0005 00020282
	v_add3_u32 v1, s5, s2, v0                                  // 000000070170: D6550001 04000405
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000070178: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000007017C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000070184: 40080801
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000070188: D73C0000 00020282
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000070190: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000070198: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000007019C: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000701A0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000701A8: 40020201
	s_clause 0x2                                               // 0000000701AC: BF850002
	global_store_b32 v[3:4], v2, off                           // 0000000701B0: DC6A0000 007C0203
	global_store_b32 v[5:6], v2, off                           // 0000000701B8: DC6A0000 007C0205
	global_store_b32 v[0:1], v2, off                           // 0000000701C0: DC6A0000 007C0200
	s_nop 0                                                    // 0000000701C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000701CC: BFB60003
	s_endpgm                                                   // 0000000701D0: BFB00000
subtract_get_work_dim_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000701D4: BF800000
	.long 0xbf800000                                           // 0000000701D8: BF800000
	.long 0xbf800000                                           // 0000000701DC: BF800000
	.long 0xbf800000                                           // 0000000701E0: BF800000
	.long 0xbf800000                                           // 0000000701E4: BF800000
	.long 0xbf800000                                           // 0000000701E8: BF800000
	.long 0xbf800000                                           // 0000000701EC: BF800000
	.long 0xbf800000                                           // 0000000701F0: BF800000
	.long 0xbf800000                                           // 0000000701F4: BF800000
	.long 0xbf800000                                           // 0000000701F8: BF800000
	.long 0xbf800000                                           // 0000000701FC: BF800000

	.p2align	8
	.type	subtract_x_64,@function
	.size	subtract_x_64, subtract_x_64_symend-subtract_x_64
subtract_x_64:
	s_clause 0x2                                               // 000000070200: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 000000070204: F40000C0 F8000038
	s_load_b32 s4, s[0:1], null                                // 00000007020C: F4000100 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070214: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007021C: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 000000070224: 7E020280
	s_mov_b32 s33, 0                                           // 000000070228: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007022C: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070230: BF870092
	v_add_nc_u32_e32 v0, s3, v0                                // 000000070234: 4A000003
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 000000070238: D73C0001 00020082
	v_sub_nc_u32_e32 v3, s4, v0                                // 000000070240: 4C060004
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000070244: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 000000070248: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 000000070250: 40020401
	global_store_b32 v[0:1], v3, off                           // 000000070254: DC6A0000 007C0300
	s_nop 0                                                    // 00000007025C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070260: BFB60003
	s_endpgm                                                   // 000000070264: BFB00000
subtract_x_64_symend:
	.long 0xbf800000                                           // 000000070268: BF800000
	.long 0xbf800000                                           // 00000007026C: BF800000
	.long 0xbf800000                                           // 000000070270: BF800000
	.long 0xbf800000                                           // 000000070274: BF800000
	.long 0xbf800000                                           // 000000070278: BF800000
	.long 0xbf800000                                           // 00000007027C: BF800000
	.long 0xbf800000                                           // 000000070280: BF800000
	.long 0xbf800000                                           // 000000070284: BF800000
	.long 0xbf800000                                           // 000000070288: BF800000
	.long 0xbf800000                                           // 00000007028C: BF800000
	.long 0xbf800000                                           // 000000070290: BF800000
	.long 0xbf800000                                           // 000000070294: BF800000
	.long 0xbf800000                                           // 000000070298: BF800000
	.long 0xbf800000                                           // 00000007029C: BF800000
	.long 0xbf800000                                           // 0000000702A0: BF800000
	.long 0xbf800000                                           // 0000000702A4: BF800000
	.long 0xbf800000                                           // 0000000702A8: BF800000
	.long 0xbf800000                                           // 0000000702AC: BF800000
	.long 0xbf800000                                           // 0000000702B0: BF800000
	.long 0xbf800000                                           // 0000000702B4: BF800000
	.long 0xbf800000                                           // 0000000702B8: BF800000
	.long 0xbf800000                                           // 0000000702BC: BF800000
	.long 0xbf800000                                           // 0000000702C0: BF800000
	.long 0xbf800000                                           // 0000000702C4: BF800000
	.long 0xbf800000                                           // 0000000702C8: BF800000
	.long 0xbf800000                                           // 0000000702CC: BF800000
	.long 0xbf800000                                           // 0000000702D0: BF800000
	.long 0xbf800000                                           // 0000000702D4: BF800000
	.long 0xbf800000                                           // 0000000702D8: BF800000
	.long 0xbf800000                                           // 0000000702DC: BF800000
	.long 0xbf800000                                           // 0000000702E0: BF800000
	.long 0xbf800000                                           // 0000000702E4: BF800000
	.long 0xbf800000                                           // 0000000702E8: BF800000
	.long 0xbf800000                                           // 0000000702EC: BF800000
	.long 0xbf800000                                           // 0000000702F0: BF800000
	.long 0xbf800000                                           // 0000000702F4: BF800000
	.long 0xbf800000                                           // 0000000702F8: BF800000
	.long 0xbf800000                                           // 0000000702FC: BF800000

	.p2align	8
	.type	subtract_get_global_offset_64,@function
	.size	subtract_get_global_offset_64, subtract_get_global_offset_64_symend-subtract_get_global_offset_64
subtract_get_global_offset_64:
	s_clause 0x1                                               // 000000070300: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000070304: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007030C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000070314: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000007031C: 7E020280
	s_mov_b32 s33, 0                                           // 000000070320: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070324: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070328: BF870092
	v_add_nc_u32_e32 v0, s3, v0                                // 00000007032C: 4A000003
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 000000070330: D73C0001 00020082
	v_sub_nc_u32_e32 v3, s3, v0                                // 000000070338: 4C060003
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007033C: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 000000070340: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 000000070348: 40020401
	global_store_b32 v[0:1], v3, off                           // 00000007034C: DC6A0000 007C0300
	s_nop 0                                                    // 000000070354: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070358: BFB60003
	s_endpgm                                                   // 00000007035C: BFB00000
subtract_get_global_offset_64_symend:
	.long 0xbf800000                                           // 000000070360: BF800000
	.long 0xbf800000                                           // 000000070364: BF800000
	.long 0xbf800000                                           // 000000070368: BF800000
	.long 0xbf800000                                           // 00000007036C: BF800000
	.long 0xbf800000                                           // 000000070370: BF800000
	.long 0xbf800000                                           // 000000070374: BF800000
	.long 0xbf800000                                           // 000000070378: BF800000
	.long 0xbf800000                                           // 00000007037C: BF800000
	.long 0xbf800000                                           // 000000070380: BF800000
	.long 0xbf800000                                           // 000000070384: BF800000
	.long 0xbf800000                                           // 000000070388: BF800000
	.long 0xbf800000                                           // 00000007038C: BF800000
	.long 0xbf800000                                           // 000000070390: BF800000
	.long 0xbf800000                                           // 000000070394: BF800000
	.long 0xbf800000                                           // 000000070398: BF800000
	.long 0xbf800000                                           // 00000007039C: BF800000
	.long 0xbf800000                                           // 0000000703A0: BF800000
	.long 0xbf800000                                           // 0000000703A4: BF800000
	.long 0xbf800000                                           // 0000000703A8: BF800000
	.long 0xbf800000                                           // 0000000703AC: BF800000
	.long 0xbf800000                                           // 0000000703B0: BF800000
	.long 0xbf800000                                           // 0000000703B4: BF800000
	.long 0xbf800000                                           // 0000000703B8: BF800000
	.long 0xbf800000                                           // 0000000703BC: BF800000
	.long 0xbf800000                                           // 0000000703C0: BF800000
	.long 0xbf800000                                           // 0000000703C4: BF800000
	.long 0xbf800000                                           // 0000000703C8: BF800000
	.long 0xbf800000                                           // 0000000703CC: BF800000
	.long 0xbf800000                                           // 0000000703D0: BF800000
	.long 0xbf800000                                           // 0000000703D4: BF800000
	.long 0xbf800000                                           // 0000000703D8: BF800000
	.long 0xbf800000                                           // 0000000703DC: BF800000
	.long 0xbf800000                                           // 0000000703E0: BF800000
	.long 0xbf800000                                           // 0000000703E4: BF800000
	.long 0xbf800000                                           // 0000000703E8: BF800000
	.long 0xbf800000                                           // 0000000703EC: BF800000
	.long 0xbf800000                                           // 0000000703F0: BF800000
	.long 0xbf800000                                           // 0000000703F4: BF800000
	.long 0xbf800000                                           // 0000000703F8: BF800000
	.long 0xbf800000                                           // 0000000703FC: BF800000

	.p2align	8
	.type	subtract_get_local_id_64,@function
	.size	subtract_get_local_id_64, subtract_get_local_id_64_symend-subtract_get_local_id_64
subtract_get_local_id_64:
	s_clause 0x1                                               // 000000070400: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000070404: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007040C: F4040000 F8000008
	v_lshl_or_b32 v1, s2, 6, v0                                // 000000070414: D6560001 04010C02
	v_mov_b32_e32 v2, 0                                        // 00000007041C: 7E040280
	s_mov_b32 s33, 0                                           // 000000070420: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070424: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070428: BF870092
	v_add_nc_u32_e32 v1, s3, v1                                // 00000007042C: 4A020203
	v_lshlrev_b64 v[2:3], 2, v[1:2]                            // 000000070430: D73C0002 00020282
	v_sub_nc_u32_e32 v4, v0, v1                                // 000000070438: 4C080300
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007043C: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v2                            // 000000070440: D7006A00 00020400
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v3, vcc_lo             // 000000070448: 40020601
	global_store_b32 v[0:1], v4, off                           // 00000007044C: DC6A0000 007C0400
	s_nop 0                                                    // 000000070454: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070458: BFB60003
	s_endpgm                                                   // 00000007045C: BFB00000
subtract_get_local_id_64_symend:
	.long 0xbf800000                                           // 000000070460: BF800000
	.long 0xbf800000                                           // 000000070464: BF800000
	.long 0xbf800000                                           // 000000070468: BF800000
	.long 0xbf800000                                           // 00000007046C: BF800000
	.long 0xbf800000                                           // 000000070470: BF800000
	.long 0xbf800000                                           // 000000070474: BF800000
	.long 0xbf800000                                           // 000000070478: BF800000
	.long 0xbf800000                                           // 00000007047C: BF800000
	.long 0xbf800000                                           // 000000070480: BF800000
	.long 0xbf800000                                           // 000000070484: BF800000
	.long 0xbf800000                                           // 000000070488: BF800000
	.long 0xbf800000                                           // 00000007048C: BF800000
	.long 0xbf800000                                           // 000000070490: BF800000
	.long 0xbf800000                                           // 000000070494: BF800000
	.long 0xbf800000                                           // 000000070498: BF800000
	.long 0xbf800000                                           // 00000007049C: BF800000
	.long 0xbf800000                                           // 0000000704A0: BF800000
	.long 0xbf800000                                           // 0000000704A4: BF800000
	.long 0xbf800000                                           // 0000000704A8: BF800000
	.long 0xbf800000                                           // 0000000704AC: BF800000
	.long 0xbf800000                                           // 0000000704B0: BF800000
	.long 0xbf800000                                           // 0000000704B4: BF800000
	.long 0xbf800000                                           // 0000000704B8: BF800000
	.long 0xbf800000                                           // 0000000704BC: BF800000
	.long 0xbf800000                                           // 0000000704C0: BF800000
	.long 0xbf800000                                           // 0000000704C4: BF800000
	.long 0xbf800000                                           // 0000000704C8: BF800000
	.long 0xbf800000                                           // 0000000704CC: BF800000
	.long 0xbf800000                                           // 0000000704D0: BF800000
	.long 0xbf800000                                           // 0000000704D4: BF800000
	.long 0xbf800000                                           // 0000000704D8: BF800000
	.long 0xbf800000                                           // 0000000704DC: BF800000
	.long 0xbf800000                                           // 0000000704E0: BF800000
	.long 0xbf800000                                           // 0000000704E4: BF800000
	.long 0xbf800000                                           // 0000000704E8: BF800000
	.long 0xbf800000                                           // 0000000704EC: BF800000
	.long 0xbf800000                                           // 0000000704F0: BF800000
	.long 0xbf800000                                           // 0000000704F4: BF800000
	.long 0xbf800000                                           // 0000000704F8: BF800000
	.long 0xbf800000                                           // 0000000704FC: BF800000

	.p2align	8
	.type	subtract_get_group_id_64,@function
	.size	subtract_get_group_id_64, subtract_get_group_id_64_symend-subtract_get_group_id_64
subtract_get_group_id_64:
	s_clause 0x1                                               // 000000070500: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000070504: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007050C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000070514: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000007051C: 7E020280
	s_mov_b32 s33, 0                                           // 000000070520: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070524: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070528: BF870092
	v_add_nc_u32_e32 v0, s3, v0                                // 00000007052C: 4A000003
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 000000070530: D73C0001 00020082
	v_sub_nc_u32_e32 v3, s2, v0                                // 000000070538: 4C060002
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007053C: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 000000070540: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 000000070548: 40020401
	global_store_b32 v[0:1], v3, off                           // 00000007054C: DC6A0000 007C0300
	s_nop 0                                                    // 000000070554: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070558: BFB60003
	s_endpgm                                                   // 00000007055C: BFB00000
subtract_get_group_id_64_symend:
	.long 0xbf800000                                           // 000000070560: BF800000
	.long 0xbf800000                                           // 000000070564: BF800000
	.long 0xbf800000                                           // 000000070568: BF800000
	.long 0xbf800000                                           // 00000007056C: BF800000
	.long 0xbf800000                                           // 000000070570: BF800000
	.long 0xbf800000                                           // 000000070574: BF800000
	.long 0xbf800000                                           // 000000070578: BF800000
	.long 0xbf800000                                           // 00000007057C: BF800000
	.long 0xbf800000                                           // 000000070580: BF800000
	.long 0xbf800000                                           // 000000070584: BF800000
	.long 0xbf800000                                           // 000000070588: BF800000
	.long 0xbf800000                                           // 00000007058C: BF800000
	.long 0xbf800000                                           // 000000070590: BF800000
	.long 0xbf800000                                           // 000000070594: BF800000
	.long 0xbf800000                                           // 000000070598: BF800000
	.long 0xbf800000                                           // 00000007059C: BF800000
	.long 0xbf800000                                           // 0000000705A0: BF800000
	.long 0xbf800000                                           // 0000000705A4: BF800000
	.long 0xbf800000                                           // 0000000705A8: BF800000
	.long 0xbf800000                                           // 0000000705AC: BF800000
	.long 0xbf800000                                           // 0000000705B0: BF800000
	.long 0xbf800000                                           // 0000000705B4: BF800000
	.long 0xbf800000                                           // 0000000705B8: BF800000
	.long 0xbf800000                                           // 0000000705BC: BF800000
	.long 0xbf800000                                           // 0000000705C0: BF800000
	.long 0xbf800000                                           // 0000000705C4: BF800000
	.long 0xbf800000                                           // 0000000705C8: BF800000
	.long 0xbf800000                                           // 0000000705CC: BF800000
	.long 0xbf800000                                           // 0000000705D0: BF800000
	.long 0xbf800000                                           // 0000000705D4: BF800000
	.long 0xbf800000                                           // 0000000705D8: BF800000
	.long 0xbf800000                                           // 0000000705DC: BF800000
	.long 0xbf800000                                           // 0000000705E0: BF800000
	.long 0xbf800000                                           // 0000000705E4: BF800000
	.long 0xbf800000                                           // 0000000705E8: BF800000
	.long 0xbf800000                                           // 0000000705EC: BF800000
	.long 0xbf800000                                           // 0000000705F0: BF800000
	.long 0xbf800000                                           // 0000000705F4: BF800000
	.long 0xbf800000                                           // 0000000705F8: BF800000
	.long 0xbf800000                                           // 0000000705FC: BF800000

	.p2align	8
	.type	subtract_get_local_size_64,@function
	.size	subtract_get_local_size_64, subtract_get_local_size_64_symend-subtract_get_local_size_64
subtract_get_local_size_64:
	s_clause 0x1                                               // 000000070600: BF850001
	s_load_b32 s3, s[0:1], 0x10                                // 000000070604: F40000C0 F8000010
	s_load_b32 s6, s[0:1], 0x38                                // 00000007060C: F4000180 F8000038
	s_add_u32 s4, s0, 16                                       // 000000070614: 80049000
	s_addc_u32 s5, s1, 0                                       // 000000070618: 82058001
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007061C: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 000000070624: 7E020280
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070628: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000070630: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070634: BF89FC07
	s_cmp_lt_u32 s2, s3                                        // 000000070638: BF0A0302
	v_add_nc_u32_e32 v0, s6, v0                                // 00000007063C: 4A000006
	s_cselect_b32 s3, 12, 18                                   // 000000070640: 9803928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000070644: BF870009
	s_add_u32 s4, s4, s3                                       // 000000070648: 80040304
	s_addc_u32 s5, s5, 0                                       // 00000007064C: 82058005
	global_load_u16 v3, v1, s[4:5]                             // 000000070650: DC4A0000 03040001
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 000000070658: D73C0001 00020082
	s_waitcnt vmcnt(0)                                         // 000000070660: BF8903F7
	v_sub_nc_u32_e32 v3, v3, v0                                // 000000070664: 4C060103
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000070668: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000007066C: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 000000070674: 40020401
	global_store_b32 v[0:1], v3, off                           // 000000070678: DC6A0000 007C0300
	s_nop 0                                                    // 000000070680: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070684: BFB60003
	s_endpgm                                                   // 000000070688: BFB00000
subtract_get_local_size_64_symend:
	.long 0xbf800000                                           // 00000007068C: BF800000
	.long 0xbf800000                                           // 000000070690: BF800000
	.long 0xbf800000                                           // 000000070694: BF800000
	.long 0xbf800000                                           // 000000070698: BF800000
	.long 0xbf800000                                           // 00000007069C: BF800000
	.long 0xbf800000                                           // 0000000706A0: BF800000
	.long 0xbf800000                                           // 0000000706A4: BF800000
	.long 0xbf800000                                           // 0000000706A8: BF800000
	.long 0xbf800000                                           // 0000000706AC: BF800000
	.long 0xbf800000                                           // 0000000706B0: BF800000
	.long 0xbf800000                                           // 0000000706B4: BF800000
	.long 0xbf800000                                           // 0000000706B8: BF800000
	.long 0xbf800000                                           // 0000000706BC: BF800000
	.long 0xbf800000                                           // 0000000706C0: BF800000
	.long 0xbf800000                                           // 0000000706C4: BF800000
	.long 0xbf800000                                           // 0000000706C8: BF800000
	.long 0xbf800000                                           // 0000000706CC: BF800000
	.long 0xbf800000                                           // 0000000706D0: BF800000
	.long 0xbf800000                                           // 0000000706D4: BF800000
	.long 0xbf800000                                           // 0000000706D8: BF800000
	.long 0xbf800000                                           // 0000000706DC: BF800000
	.long 0xbf800000                                           // 0000000706E0: BF800000
	.long 0xbf800000                                           // 0000000706E4: BF800000
	.long 0xbf800000                                           // 0000000706E8: BF800000
	.long 0xbf800000                                           // 0000000706EC: BF800000
	.long 0xbf800000                                           // 0000000706F0: BF800000
	.long 0xbf800000                                           // 0000000706F4: BF800000
	.long 0xbf800000                                           // 0000000706F8: BF800000
	.long 0xbf800000                                           // 0000000706FC: BF800000

	.p2align	8
	.type	subtract_get_global_id_64,@function
	.size	subtract_get_global_id_64, subtract_get_global_id_64_symend-subtract_get_global_id_64
subtract_get_global_id_64:
	s_clause 0x1                                               // 000000070700: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000070704: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007070C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 000000070714: 84028602
	v_mov_b32_e32 v1, 0                                        // 000000070718: 7E020280
	s_mov_b32 s33, 0                                           // 00000007071C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070720: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 000000070724: D6550000 04000403
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007072C: BF870091
	v_lshlrev_b64 v[2:3], 2, v[0:1]                            // 000000070730: D73C0002 00020082
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000070738: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 000000070740: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000070744: 40060601
	global_store_b32 v[2:3], v1, off                           // 000000070748: DC6A0000 007C0102
	s_nop 0                                                    // 000000070750: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070754: BFB60003
	s_endpgm                                                   // 000000070758: BFB00000
subtract_get_global_id_64_symend:
	.long 0xbf800000                                           // 00000007075C: BF800000
	.long 0xbf800000                                           // 000000070760: BF800000
	.long 0xbf800000                                           // 000000070764: BF800000
	.long 0xbf800000                                           // 000000070768: BF800000
	.long 0xbf800000                                           // 00000007076C: BF800000
	.long 0xbf800000                                           // 000000070770: BF800000
	.long 0xbf800000                                           // 000000070774: BF800000
	.long 0xbf800000                                           // 000000070778: BF800000
	.long 0xbf800000                                           // 00000007077C: BF800000
	.long 0xbf800000                                           // 000000070780: BF800000
	.long 0xbf800000                                           // 000000070784: BF800000
	.long 0xbf800000                                           // 000000070788: BF800000
	.long 0xbf800000                                           // 00000007078C: BF800000
	.long 0xbf800000                                           // 000000070790: BF800000
	.long 0xbf800000                                           // 000000070794: BF800000
	.long 0xbf800000                                           // 000000070798: BF800000
	.long 0xbf800000                                           // 00000007079C: BF800000
	.long 0xbf800000                                           // 0000000707A0: BF800000
	.long 0xbf800000                                           // 0000000707A4: BF800000
	.long 0xbf800000                                           // 0000000707A8: BF800000
	.long 0xbf800000                                           // 0000000707AC: BF800000
	.long 0xbf800000                                           // 0000000707B0: BF800000
	.long 0xbf800000                                           // 0000000707B4: BF800000
	.long 0xbf800000                                           // 0000000707B8: BF800000
	.long 0xbf800000                                           // 0000000707BC: BF800000
	.long 0xbf800000                                           // 0000000707C0: BF800000
	.long 0xbf800000                                           // 0000000707C4: BF800000
	.long 0xbf800000                                           // 0000000707C8: BF800000
	.long 0xbf800000                                           // 0000000707CC: BF800000
	.long 0xbf800000                                           // 0000000707D0: BF800000
	.long 0xbf800000                                           // 0000000707D4: BF800000
	.long 0xbf800000                                           // 0000000707D8: BF800000
	.long 0xbf800000                                           // 0000000707DC: BF800000
	.long 0xbf800000                                           // 0000000707E0: BF800000
	.long 0xbf800000                                           // 0000000707E4: BF800000
	.long 0xbf800000                                           // 0000000707E8: BF800000
	.long 0xbf800000                                           // 0000000707EC: BF800000
	.long 0xbf800000                                           // 0000000707F0: BF800000
	.long 0xbf800000                                           // 0000000707F4: BF800000
	.long 0xbf800000                                           // 0000000707F8: BF800000
	.long 0xbf800000                                           // 0000000707FC: BF800000

	.p2align	8
	.type	subtract_get_global_size_64,@function
	.size	subtract_get_global_size_64, subtract_get_global_size_64_symend-subtract_get_global_size_64
subtract_get_global_size_64:
	s_clause 0x3                                               // 000000070800: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 000000070804: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x10                                // 00000007080C: F4000100 F8000010
	s_load_b32 s5, s[0:1], 0x20                                // 000000070814: F4000140 F8000020
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007081C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000070824: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007082C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070830: BF89FC07
	s_delay_alu instid0(VALU_DEP_1)                            // 000000070834: BF870001
	v_dual_mov_b32 v1, 0 :: v_dual_add_nc_u32 v0, s3, v0       // 000000070838: CA200080 01000003
	s_lshl_b32 s2, s4, 6                                       // 000000070840: 84028604
	s_delay_alu instid0(VALU_DEP_1) | instid1(SALU_CYCLE_1)    // 000000070844: BF870481
	v_sub_nc_u32_e32 v2, s2, v0                                // 000000070848: 4C040002
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007084C: BF870002
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070850: D73C0000 00020082
	s_lshr_b32 s2, s5, 16                                      // 000000070858: 85029005
	s_delay_alu instid0(VALU_DEP_2) | instid1(SALU_CYCLE_1)    // 00000007085C: BF870482
	v_add_nc_u32_e32 v2, s2, v2                                // 000000070860: 4A040402
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000070864: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000070868: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000070870: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000070874: DC6A0000 007C0200
	s_nop 0                                                    // 00000007087C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070880: BFB60003
	s_endpgm                                                   // 000000070884: BFB00000
subtract_get_global_size_64_symend:
	.long 0xbf800000                                           // 000000070888: BF800000
	.long 0xbf800000                                           // 00000007088C: BF800000
	.long 0xbf800000                                           // 000000070890: BF800000
	.long 0xbf800000                                           // 000000070894: BF800000
	.long 0xbf800000                                           // 000000070898: BF800000
	.long 0xbf800000                                           // 00000007089C: BF800000
	.long 0xbf800000                                           // 0000000708A0: BF800000
	.long 0xbf800000                                           // 0000000708A4: BF800000
	.long 0xbf800000                                           // 0000000708A8: BF800000
	.long 0xbf800000                                           // 0000000708AC: BF800000
	.long 0xbf800000                                           // 0000000708B0: BF800000
	.long 0xbf800000                                           // 0000000708B4: BF800000
	.long 0xbf800000                                           // 0000000708B8: BF800000
	.long 0xbf800000                                           // 0000000708BC: BF800000
	.long 0xbf800000                                           // 0000000708C0: BF800000
	.long 0xbf800000                                           // 0000000708C4: BF800000
	.long 0xbf800000                                           // 0000000708C8: BF800000
	.long 0xbf800000                                           // 0000000708CC: BF800000
	.long 0xbf800000                                           // 0000000708D0: BF800000
	.long 0xbf800000                                           // 0000000708D4: BF800000
	.long 0xbf800000                                           // 0000000708D8: BF800000
	.long 0xbf800000                                           // 0000000708DC: BF800000
	.long 0xbf800000                                           // 0000000708E0: BF800000
	.long 0xbf800000                                           // 0000000708E4: BF800000
	.long 0xbf800000                                           // 0000000708E8: BF800000
	.long 0xbf800000                                           // 0000000708EC: BF800000
	.long 0xbf800000                                           // 0000000708F0: BF800000
	.long 0xbf800000                                           // 0000000708F4: BF800000
	.long 0xbf800000                                           // 0000000708F8: BF800000
	.long 0xbf800000                                           // 0000000708FC: BF800000

	.p2align	8
	.type	subtract_get_num_groups_64,@function
	.size	subtract_get_num_groups_64, subtract_get_num_groups_64_symend-subtract_get_num_groups_64
subtract_get_num_groups_64:
	s_clause 0x3                                               // 000000070900: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 000000070904: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x20                                // 00000007090C: F4000100 F8000020
	s_load_b32 s5, s[0:1], 0x10                                // 000000070914: F4000140 F8000010
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007091C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000070924: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000007092C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070930: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000070934: BF8704A1
	v_dual_mov_b32 v1, 0 :: v_dual_add_nc_u32 v0, s3, v0       // 000000070938: CA200080 01000003
	s_lshr_b32 s2, s4, 16                                      // 000000070940: 85029004
	v_cmp_ne_u16_e64 vcc_lo, s2, 0                             // 000000070944: D43D006A 00010002
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007094C: BF870192
	v_sub_nc_u32_e32 v2, s5, v0                                // 000000070950: 4C040005
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070954: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007095C: BF870112
	v_add_co_ci_u32_e32 v2, vcc_lo, 0, v2, vcc_lo              // 000000070960: 40040480
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000070964: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007096C: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000070970: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000070974: DC6A0000 007C0200
	s_nop 0                                                    // 00000007097C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070980: BFB60003
	s_endpgm                                                   // 000000070984: BFB00000
subtract_get_num_groups_64_symend:
	.long 0xbf800000                                           // 000000070988: BF800000
	.long 0xbf800000                                           // 00000007098C: BF800000
	.long 0xbf800000                                           // 000000070990: BF800000
	.long 0xbf800000                                           // 000000070994: BF800000
	.long 0xbf800000                                           // 000000070998: BF800000
	.long 0xbf800000                                           // 00000007099C: BF800000
	.long 0xbf800000                                           // 0000000709A0: BF800000
	.long 0xbf800000                                           // 0000000709A4: BF800000
	.long 0xbf800000                                           // 0000000709A8: BF800000
	.long 0xbf800000                                           // 0000000709AC: BF800000
	.long 0xbf800000                                           // 0000000709B0: BF800000
	.long 0xbf800000                                           // 0000000709B4: BF800000
	.long 0xbf800000                                           // 0000000709B8: BF800000
	.long 0xbf800000                                           // 0000000709BC: BF800000
	.long 0xbf800000                                           // 0000000709C0: BF800000
	.long 0xbf800000                                           // 0000000709C4: BF800000
	.long 0xbf800000                                           // 0000000709C8: BF800000
	.long 0xbf800000                                           // 0000000709CC: BF800000
	.long 0xbf800000                                           // 0000000709D0: BF800000
	.long 0xbf800000                                           // 0000000709D4: BF800000
	.long 0xbf800000                                           // 0000000709D8: BF800000
	.long 0xbf800000                                           // 0000000709DC: BF800000
	.long 0xbf800000                                           // 0000000709E0: BF800000
	.long 0xbf800000                                           // 0000000709E4: BF800000
	.long 0xbf800000                                           // 0000000709E8: BF800000
	.long 0xbf800000                                           // 0000000709EC: BF800000
	.long 0xbf800000                                           // 0000000709F0: BF800000
	.long 0xbf800000                                           // 0000000709F4: BF800000
	.long 0xbf800000                                           // 0000000709F8: BF800000
	.long 0xbf800000                                           // 0000000709FC: BF800000

	.p2align	8
	.type	subtract_get_work_dim,@function
	.size	subtract_get_work_dim, subtract_get_work_dim_symend-subtract_get_work_dim
subtract_get_work_dim:
	s_clause 0x2                                               // 000000070A00: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 000000070A04: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x50                                // 000000070A0C: F4000100 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070A14: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000070A1C: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 000000070A24: 7E020280
	s_mov_b32 s33, 0                                           // 000000070A28: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070A2C: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000070A30: BF8700A2
	v_add_nc_u32_e32 v0, s3, v0                                // 000000070A34: 4A000003
	s_and_b32 s2, s4, 0xffff                                   // 000000070A38: 8B02FF04 0000FFFF
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 000000070A40: D73C0001 00020082
	v_sub_nc_u32_e32 v3, s2, v0                                // 000000070A48: 4C060002
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000070A4C: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 000000070A50: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 000000070A58: 40020401
	global_store_b32 v[0:1], v3, off                           // 000000070A5C: DC6A0000 007C0300
	s_nop 0                                                    // 000000070A64: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070A68: BFB60003
	s_endpgm                                                   // 000000070A6C: BFB00000
subtract_get_work_dim_symend:
	.long 0xbf800000                                           // 000000070A70: BF800000
	.long 0xbf800000                                           // 000000070A74: BF800000
	.long 0xbf800000                                           // 000000070A78: BF800000
	.long 0xbf800000                                           // 000000070A7C: BF800000
	.long 0xbf800000                                           // 000000070A80: BF800000
	.long 0xbf800000                                           // 000000070A84: BF800000
	.long 0xbf800000                                           // 000000070A88: BF800000
	.long 0xbf800000                                           // 000000070A8C: BF800000
	.long 0xbf800000                                           // 000000070A90: BF800000
	.long 0xbf800000                                           // 000000070A94: BF800000
	.long 0xbf800000                                           // 000000070A98: BF800000
	.long 0xbf800000                                           // 000000070A9C: BF800000
	.long 0xbf800000                                           // 000000070AA0: BF800000
	.long 0xbf800000                                           // 000000070AA4: BF800000
	.long 0xbf800000                                           // 000000070AA8: BF800000
	.long 0xbf800000                                           // 000000070AAC: BF800000
	.long 0xbf800000                                           // 000000070AB0: BF800000
	.long 0xbf800000                                           // 000000070AB4: BF800000
	.long 0xbf800000                                           // 000000070AB8: BF800000
	.long 0xbf800000                                           // 000000070ABC: BF800000
	.long 0xbf800000                                           // 000000070AC0: BF800000
	.long 0xbf800000                                           // 000000070AC4: BF800000
	.long 0xbf800000                                           // 000000070AC8: BF800000
	.long 0xbf800000                                           // 000000070ACC: BF800000
	.long 0xbf800000                                           // 000000070AD0: BF800000
	.long 0xbf800000                                           // 000000070AD4: BF800000
	.long 0xbf800000                                           // 000000070AD8: BF800000
	.long 0xbf800000                                           // 000000070ADC: BF800000
	.long 0xbf800000                                           // 000000070AE0: BF800000
	.long 0xbf800000                                           // 000000070AE4: BF800000
	.long 0xbf800000                                           // 000000070AE8: BF800000
	.long 0xbf800000                                           // 000000070AEC: BF800000
	.long 0xbf800000                                           // 000000070AF0: BF800000
	.long 0xbf800000                                           // 000000070AF4: BF800000
	.long 0xbf800000                                           // 000000070AF8: BF800000
	.long 0xbf800000                                           // 000000070AFC: BF800000

	.p2align	8
	.type	subtract_x_8_8,@function
	.size	subtract_x_8_8, subtract_x_8_8_symend-subtract_x_8_8
subtract_x_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000070B00: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000070B08: BF89FC07
	s_clause 0x1                                               // 000000070B0C: BF850001
	s_load_b32 s5, s[0:1], null                                // 000000070B10: F4000140 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070B18: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000070B20: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000070B2C: 84028302
	v_bfe_u32 v3, v0, 10, 10                                   // 000000070B30: D6100003 02291500
	s_mov_b32 s33, 0                                           // 000000070B38: BEA10080
	s_delay_alu instid0(VALU_DEP_2)                            // 000000070B3C: BF870002
	v_add3_u32 v0, s4, s2, v2                                  // 000000070B40: D6550000 04080404
	s_lshl_b32 s2, s3, 3                                       // 000000070B48: 84028303
	s_delay_alu instid0(VALU_DEP_2) | instid1(SALU_CYCLE_1)    // 000000070B4C: BF870482
	v_add3_u32 v2, s2, s6, v3                                  // 000000070B50: D6550002 040C0C02
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000070B58: BF870122
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070B5C: D73C0000 00020082
	s_waitcnt lgkmcnt(0)                                       // 000000070B64: BF89FC07
	v_sub_nc_u32_e32 v2, s5, v2                                // 000000070B68: 4C040405
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000070B6C: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000070B70: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000070B78: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000070B7C: DC6A0000 007C0200
	s_nop 0                                                    // 000000070B84: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070B88: BFB60003
	s_endpgm                                                   // 000000070B8C: BFB00000
subtract_x_8_8_symend:
	.long 0xbf800000                                           // 000000070B90: BF800000
	.long 0xbf800000                                           // 000000070B94: BF800000
	.long 0xbf800000                                           // 000000070B98: BF800000
	.long 0xbf800000                                           // 000000070B9C: BF800000
	.long 0xbf800000                                           // 000000070BA0: BF800000
	.long 0xbf800000                                           // 000000070BA4: BF800000
	.long 0xbf800000                                           // 000000070BA8: BF800000
	.long 0xbf800000                                           // 000000070BAC: BF800000
	.long 0xbf800000                                           // 000000070BB0: BF800000
	.long 0xbf800000                                           // 000000070BB4: BF800000
	.long 0xbf800000                                           // 000000070BB8: BF800000
	.long 0xbf800000                                           // 000000070BBC: BF800000
	.long 0xbf800000                                           // 000000070BC0: BF800000
	.long 0xbf800000                                           // 000000070BC4: BF800000
	.long 0xbf800000                                           // 000000070BC8: BF800000
	.long 0xbf800000                                           // 000000070BCC: BF800000
	.long 0xbf800000                                           // 000000070BD0: BF800000
	.long 0xbf800000                                           // 000000070BD4: BF800000
	.long 0xbf800000                                           // 000000070BD8: BF800000
	.long 0xbf800000                                           // 000000070BDC: BF800000
	.long 0xbf800000                                           // 000000070BE0: BF800000
	.long 0xbf800000                                           // 000000070BE4: BF800000
	.long 0xbf800000                                           // 000000070BE8: BF800000
	.long 0xbf800000                                           // 000000070BEC: BF800000
	.long 0xbf800000                                           // 000000070BF0: BF800000
	.long 0xbf800000                                           // 000000070BF4: BF800000
	.long 0xbf800000                                           // 000000070BF8: BF800000
	.long 0xbf800000                                           // 000000070BFC: BF800000

	.p2align	8
	.type	subtract_get_global_offset_8_8,@function
	.size	subtract_get_global_offset_8_8, subtract_get_global_offset_8_8_symend-subtract_get_global_offset_8_8
subtract_get_global_offset_8_8:
	s_clause 0x1                                               // 000000070C00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000070C04: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070C0C: F4040000 F8000008
	s_lshl_b32 s2, s2, 3                                       // 000000070C14: 84028302
	s_mov_b32 s33, 0                                           // 000000070C18: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070C1C: BF89FC07
	v_add3_u32 v0, s4, s2, v0                                  // 000000070C20: D6550000 04000404
	s_sub_i32 s2, s4, s6                                       // 000000070C28: 81820604
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000070C2C: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 000000070C30: CA100080 01020002
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070C38: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070C40: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000070C44: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000070C4C: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000070C50: DC6A0000 007C0200
	s_nop 0                                                    // 000000070C58: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070C5C: BFB60003
	s_endpgm                                                   // 000000070C60: BFB00000
subtract_get_global_offset_8_8_symend:
	.long 0xbf800000                                           // 000000070C64: BF800000
	.long 0xbf800000                                           // 000000070C68: BF800000
	.long 0xbf800000                                           // 000000070C6C: BF800000
	.long 0xbf800000                                           // 000000070C70: BF800000
	.long 0xbf800000                                           // 000000070C74: BF800000
	.long 0xbf800000                                           // 000000070C78: BF800000
	.long 0xbf800000                                           // 000000070C7C: BF800000
	.long 0xbf800000                                           // 000000070C80: BF800000
	.long 0xbf800000                                           // 000000070C84: BF800000
	.long 0xbf800000                                           // 000000070C88: BF800000
	.long 0xbf800000                                           // 000000070C8C: BF800000
	.long 0xbf800000                                           // 000000070C90: BF800000
	.long 0xbf800000                                           // 000000070C94: BF800000
	.long 0xbf800000                                           // 000000070C98: BF800000
	.long 0xbf800000                                           // 000000070C9C: BF800000
	.long 0xbf800000                                           // 000000070CA0: BF800000
	.long 0xbf800000                                           // 000000070CA4: BF800000
	.long 0xbf800000                                           // 000000070CA8: BF800000
	.long 0xbf800000                                           // 000000070CAC: BF800000
	.long 0xbf800000                                           // 000000070CB0: BF800000
	.long 0xbf800000                                           // 000000070CB4: BF800000
	.long 0xbf800000                                           // 000000070CB8: BF800000
	.long 0xbf800000                                           // 000000070CBC: BF800000
	.long 0xbf800000                                           // 000000070CC0: BF800000
	.long 0xbf800000                                           // 000000070CC4: BF800000
	.long 0xbf800000                                           // 000000070CC8: BF800000
	.long 0xbf800000                                           // 000000070CCC: BF800000
	.long 0xbf800000                                           // 000000070CD0: BF800000
	.long 0xbf800000                                           // 000000070CD4: BF800000
	.long 0xbf800000                                           // 000000070CD8: BF800000
	.long 0xbf800000                                           // 000000070CDC: BF800000
	.long 0xbf800000                                           // 000000070CE0: BF800000
	.long 0xbf800000                                           // 000000070CE4: BF800000
	.long 0xbf800000                                           // 000000070CE8: BF800000
	.long 0xbf800000                                           // 000000070CEC: BF800000
	.long 0xbf800000                                           // 000000070CF0: BF800000
	.long 0xbf800000                                           // 000000070CF4: BF800000
	.long 0xbf800000                                           // 000000070CF8: BF800000
	.long 0xbf800000                                           // 000000070CFC: BF800000

	.p2align	8
	.type	subtract_get_local_id_8_8,@function
	.size	subtract_get_local_id_8_8, subtract_get_local_id_8_8_symend-subtract_get_local_id_8_8
subtract_get_local_id_8_8:
	s_clause 0x1                                               // 000000070D00: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000070D04: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070D0C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v3, 0x3ff, v0       // 000000070D14: CA240080 020200FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000070D20: 84028302
	v_bfe_u32 v4, v0, 10, 10                                   // 000000070D24: D6100004 02291500
	s_mov_b32 s33, 0                                           // 000000070D2C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070D30: BF89FC07
	v_add3_u32 v1, s3, s2, v3                                  // 000000070D34: D6550001 040C0403
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000070D3C: BF870121
	v_lshlrev_b64 v[0:1], 2, v[1:2]                            // 000000070D40: D73C0000 00020282
	v_sub_nc_u32_e32 v2, v3, v4                                // 000000070D48: 4C040903
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000070D4C: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3)                            // 000000070D54: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000070D58: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000070D5C: DC6A0000 007C0200
	s_nop 0                                                    // 000000070D64: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070D68: BFB60003
	s_endpgm                                                   // 000000070D6C: BFB00000
subtract_get_local_id_8_8_symend:
	.long 0xbf800000                                           // 000000070D70: BF800000
	.long 0xbf800000                                           // 000000070D74: BF800000
	.long 0xbf800000                                           // 000000070D78: BF800000
	.long 0xbf800000                                           // 000000070D7C: BF800000
	.long 0xbf800000                                           // 000000070D80: BF800000
	.long 0xbf800000                                           // 000000070D84: BF800000
	.long 0xbf800000                                           // 000000070D88: BF800000
	.long 0xbf800000                                           // 000000070D8C: BF800000
	.long 0xbf800000                                           // 000000070D90: BF800000
	.long 0xbf800000                                           // 000000070D94: BF800000
	.long 0xbf800000                                           // 000000070D98: BF800000
	.long 0xbf800000                                           // 000000070D9C: BF800000
	.long 0xbf800000                                           // 000000070DA0: BF800000
	.long 0xbf800000                                           // 000000070DA4: BF800000
	.long 0xbf800000                                           // 000000070DA8: BF800000
	.long 0xbf800000                                           // 000000070DAC: BF800000
	.long 0xbf800000                                           // 000000070DB0: BF800000
	.long 0xbf800000                                           // 000000070DB4: BF800000
	.long 0xbf800000                                           // 000000070DB8: BF800000
	.long 0xbf800000                                           // 000000070DBC: BF800000
	.long 0xbf800000                                           // 000000070DC0: BF800000
	.long 0xbf800000                                           // 000000070DC4: BF800000
	.long 0xbf800000                                           // 000000070DC8: BF800000
	.long 0xbf800000                                           // 000000070DCC: BF800000
	.long 0xbf800000                                           // 000000070DD0: BF800000
	.long 0xbf800000                                           // 000000070DD4: BF800000
	.long 0xbf800000                                           // 000000070DD8: BF800000
	.long 0xbf800000                                           // 000000070DDC: BF800000
	.long 0xbf800000                                           // 000000070DE0: BF800000
	.long 0xbf800000                                           // 000000070DE4: BF800000
	.long 0xbf800000                                           // 000000070DE8: BF800000
	.long 0xbf800000                                           // 000000070DEC: BF800000
	.long 0xbf800000                                           // 000000070DF0: BF800000
	.long 0xbf800000                                           // 000000070DF4: BF800000
	.long 0xbf800000                                           // 000000070DF8: BF800000
	.long 0xbf800000                                           // 000000070DFC: BF800000

	.p2align	8
	.type	subtract_get_group_id_8_8,@function
	.size	subtract_get_group_id_8_8, subtract_get_group_id_8_8_symend-subtract_get_group_id_8_8
subtract_get_group_id_8_8:
	s_clause 0x1                                               // 000000070E00: BF850001
	s_load_b32 s4, s[0:1], 0x38                                // 000000070E04: F4000100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000070E0C: F4040000 F8000008
	s_lshl_b32 s5, s2, 3                                       // 000000070E14: 84058302
	s_sub_i32 s2, s2, s3                                       // 000000070E18: 81820302
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000070E1C: BF8700C9
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v2, s2              // 000000070E20: CA100080 01020002
	s_mov_b32 s33, 0                                           // 000000070E28: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070E2C: BF89FC07
	v_add3_u32 v0, s4, s5, v0                                  // 000000070E30: D6550000 04000A04
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070E38: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070E40: BF870111
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000070E44: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000070E4C: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000070E50: DC6A0000 007C0200
	s_nop 0                                                    // 000000070E58: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070E5C: BFB60003
	s_endpgm                                                   // 000000070E60: BFB00000
subtract_get_group_id_8_8_symend:
	.long 0xbf800000                                           // 000000070E64: BF800000
	.long 0xbf800000                                           // 000000070E68: BF800000
	.long 0xbf800000                                           // 000000070E6C: BF800000
	.long 0xbf800000                                           // 000000070E70: BF800000
	.long 0xbf800000                                           // 000000070E74: BF800000
	.long 0xbf800000                                           // 000000070E78: BF800000
	.long 0xbf800000                                           // 000000070E7C: BF800000
	.long 0xbf800000                                           // 000000070E80: BF800000
	.long 0xbf800000                                           // 000000070E84: BF800000
	.long 0xbf800000                                           // 000000070E88: BF800000
	.long 0xbf800000                                           // 000000070E8C: BF800000
	.long 0xbf800000                                           // 000000070E90: BF800000
	.long 0xbf800000                                           // 000000070E94: BF800000
	.long 0xbf800000                                           // 000000070E98: BF800000
	.long 0xbf800000                                           // 000000070E9C: BF800000
	.long 0xbf800000                                           // 000000070EA0: BF800000
	.long 0xbf800000                                           // 000000070EA4: BF800000
	.long 0xbf800000                                           // 000000070EA8: BF800000
	.long 0xbf800000                                           // 000000070EAC: BF800000
	.long 0xbf800000                                           // 000000070EB0: BF800000
	.long 0xbf800000                                           // 000000070EB4: BF800000
	.long 0xbf800000                                           // 000000070EB8: BF800000
	.long 0xbf800000                                           // 000000070EBC: BF800000
	.long 0xbf800000                                           // 000000070EC0: BF800000
	.long 0xbf800000                                           // 000000070EC4: BF800000
	.long 0xbf800000                                           // 000000070EC8: BF800000
	.long 0xbf800000                                           // 000000070ECC: BF800000
	.long 0xbf800000                                           // 000000070ED0: BF800000
	.long 0xbf800000                                           // 000000070ED4: BF800000
	.long 0xbf800000                                           // 000000070ED8: BF800000
	.long 0xbf800000                                           // 000000070EDC: BF800000
	.long 0xbf800000                                           // 000000070EE0: BF800000
	.long 0xbf800000                                           // 000000070EE4: BF800000
	.long 0xbf800000                                           // 000000070EE8: BF800000
	.long 0xbf800000                                           // 000000070EEC: BF800000
	.long 0xbf800000                                           // 000000070EF0: BF800000
	.long 0xbf800000                                           // 000000070EF4: BF800000
	.long 0xbf800000                                           // 000000070EF8: BF800000
	.long 0xbf800000                                           // 000000070EFC: BF800000

	.p2align	8
	.type	subtract_get_local_size_8_8,@function
	.size	subtract_get_local_size_8_8, subtract_get_local_size_8_8_symend-subtract_get_local_size_8_8
subtract_get_local_size_8_8:
	s_clause 0x1                                               // 000000070F00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 000000070F04: F4080100 F8000008
	s_load_b32 s9, s[0:1], 0x38                                // 000000070F0C: F4000240 F8000038
	s_add_u32 s8, s0, 16                                       // 000000070F14: 80089000
	s_addc_u32 s10, s1, 0                                      // 000000070F18: 820A8001
	s_lshl_b32 s11, s2, 3                                      // 000000070F1C: 840B8302
	v_mov_b32_e32 v1, 0                                        // 000000070F20: 7E020280
	s_mov_b32 s33, 0                                           // 000000070F24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000070F28: BF89FC07
	s_cmp_lt_u32 s2, s6                                        // 000000070F2C: BF0A0602
	v_add3_u32 v0, s9, s11, v0                                 // 000000070F30: D6550000 04001609
	s_cselect_b32 s0, 12, 18                                   // 000000070F38: 9800928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000070F3C: BF8704C9
	s_add_u32 s0, s8, s0                                       // 000000070F40: 80000008
	s_addc_u32 s1, s10, 0                                      // 000000070F44: 8201800A
	s_cmp_lt_u32 s3, s7                                        // 000000070F48: BF0A0703
	s_cselect_b32 s2, 14, 20                                   // 000000070F4C: 9802948E
	s_add_u32 s2, s8, s2                                       // 000000070F50: 80020208
	s_addc_u32 s3, s10, 0                                      // 000000070F54: 8203800A
	s_clause 0x1                                               // 000000070F58: BF850001
	global_load_u16 v2, v1, s[0:1]                             // 000000070F5C: DC4A0000 02000001
	global_load_u16 v3, v1, s[2:3]                             // 000000070F64: DC4A0000 03020001
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000070F6C: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000070F74: BF870111
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 000000070F78: D7006A00 00020004
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 000000070F80: 40020205
	s_waitcnt vmcnt(0)                                         // 000000070F84: BF8903F7
	v_sub_nc_u32_e32 v2, v2, v3                                // 000000070F88: 4C040702
	global_store_b32 v[0:1], v2, off                           // 000000070F8C: DC6A0000 007C0200
	s_nop 0                                                    // 000000070F94: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000070F98: BFB60003
	s_endpgm                                                   // 000000070F9C: BFB00000
subtract_get_local_size_8_8_symend:
	.long 0xbf800000                                           // 000000070FA0: BF800000
	.long 0xbf800000                                           // 000000070FA4: BF800000
	.long 0xbf800000                                           // 000000070FA8: BF800000
	.long 0xbf800000                                           // 000000070FAC: BF800000
	.long 0xbf800000                                           // 000000070FB0: BF800000
	.long 0xbf800000                                           // 000000070FB4: BF800000
	.long 0xbf800000                                           // 000000070FB8: BF800000
	.long 0xbf800000                                           // 000000070FBC: BF800000
	.long 0xbf800000                                           // 000000070FC0: BF800000
	.long 0xbf800000                                           // 000000070FC4: BF800000
	.long 0xbf800000                                           // 000000070FC8: BF800000
	.long 0xbf800000                                           // 000000070FCC: BF800000
	.long 0xbf800000                                           // 000000070FD0: BF800000
	.long 0xbf800000                                           // 000000070FD4: BF800000
	.long 0xbf800000                                           // 000000070FD8: BF800000
	.long 0xbf800000                                           // 000000070FDC: BF800000
	.long 0xbf800000                                           // 000000070FE0: BF800000
	.long 0xbf800000                                           // 000000070FE4: BF800000
	.long 0xbf800000                                           // 000000070FE8: BF800000
	.long 0xbf800000                                           // 000000070FEC: BF800000
	.long 0xbf800000                                           // 000000070FF0: BF800000
	.long 0xbf800000                                           // 000000070FF4: BF800000
	.long 0xbf800000                                           // 000000070FF8: BF800000
	.long 0xbf800000                                           // 000000070FFC: BF800000

	.p2align	8
	.type	subtract_get_global_id_8_8,@function
	.size	subtract_get_global_id_8_8, subtract_get_global_id_8_8_symend-subtract_get_global_id_8_8
subtract_get_global_id_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000071000: F4080100 F8000038
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000071008: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000071010: F4040000 F8000008
	v_bfe_u32 v3, v0, 10, 10                                   // 000000071018: D6100003 02291500
	s_mov_b32 s33, 0                                           // 000000071020: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000071024: BF870142
	v_lshl_or_b32 v2, s2, 3, v1                                // 000000071028: D6560002 04050602
	v_mov_b32_e32 v1, 0                                        // 000000071030: 7E020280
	s_lshl_b32 s2, s3, 3                                       // 000000071034: 84028303
	s_waitcnt lgkmcnt(0)                                       // 000000071038: BF89FC07
	v_add_nc_u32_e32 v0, s4, v2                                // 00000007103C: 4A000404
	v_add3_u32 v3, s2, s6, v3                                  // 000000071040: D6550003 040C0C02
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000071048: BF870112
	v_lshlrev_b64 v[1:2], 2, v[0:1]                            // 00000007104C: D73C0001 00020082
	v_sub_nc_u32_e32 v3, v0, v3                                // 000000071054: 4C060700
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000071058: BF870192
	v_add_co_u32 v0, vcc_lo, s0, v1                            // 00000007105C: D7006A00 00020200
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo             // 000000071064: 40020401
	global_store_b32 v[0:1], v3, off                           // 000000071068: DC6A0000 007C0300
	s_nop 0                                                    // 000000071070: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071074: BFB60003
	s_endpgm                                                   // 000000071078: BFB00000
subtract_get_global_id_8_8_symend:
	.long 0xbf800000                                           // 00000007107C: BF800000
	.long 0xbf800000                                           // 000000071080: BF800000
	.long 0xbf800000                                           // 000000071084: BF800000
	.long 0xbf800000                                           // 000000071088: BF800000
	.long 0xbf800000                                           // 00000007108C: BF800000
	.long 0xbf800000                                           // 000000071090: BF800000
	.long 0xbf800000                                           // 000000071094: BF800000
	.long 0xbf800000                                           // 000000071098: BF800000
	.long 0xbf800000                                           // 00000007109C: BF800000
	.long 0xbf800000                                           // 0000000710A0: BF800000
	.long 0xbf800000                                           // 0000000710A4: BF800000
	.long 0xbf800000                                           // 0000000710A8: BF800000
	.long 0xbf800000                                           // 0000000710AC: BF800000
	.long 0xbf800000                                           // 0000000710B0: BF800000
	.long 0xbf800000                                           // 0000000710B4: BF800000
	.long 0xbf800000                                           // 0000000710B8: BF800000
	.long 0xbf800000                                           // 0000000710BC: BF800000
	.long 0xbf800000                                           // 0000000710C0: BF800000
	.long 0xbf800000                                           // 0000000710C4: BF800000
	.long 0xbf800000                                           // 0000000710C8: BF800000
	.long 0xbf800000                                           // 0000000710CC: BF800000
	.long 0xbf800000                                           // 0000000710D0: BF800000
	.long 0xbf800000                                           // 0000000710D4: BF800000
	.long 0xbf800000                                           // 0000000710D8: BF800000
	.long 0xbf800000                                           // 0000000710DC: BF800000
	.long 0xbf800000                                           // 0000000710E0: BF800000
	.long 0xbf800000                                           // 0000000710E4: BF800000
	.long 0xbf800000                                           // 0000000710E8: BF800000
	.long 0xbf800000                                           // 0000000710EC: BF800000
	.long 0xbf800000                                           // 0000000710F0: BF800000
	.long 0xbf800000                                           // 0000000710F4: BF800000
	.long 0xbf800000                                           // 0000000710F8: BF800000
	.long 0xbf800000                                           // 0000000710FC: BF800000

	.p2align	8
	.type	subtract_get_global_size_8_8,@function
	.size	subtract_get_global_size_8_8, subtract_get_global_size_8_8_symend-subtract_get_global_size_8_8
subtract_get_global_size_8_8:
	v_mov_b32_e32 v1, 0                                        // 000000071100: 7E020280
	s_mov_b32 s33, 0                                           // 000000071104: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000071108: DC520022 02000001
	s_clause 0x1                                               // 000000071110: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000071114: F40000C0 F8000038
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000007111C: F4080100 F8000008
	s_lshl_b32 s0, s2, 3                                       // 000000071124: 84008302
	s_waitcnt lgkmcnt(0)                                       // 000000071128: BF89FC07
	v_add3_u32 v0, s3, s0, v0                                  // 00000007112C: D6550000 04000003
	s_sub_i32 s0, s6, s7                                       // 000000071134: 81800706
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 000000071138: BF870159
	s_lshl_b32 s0, s0, 3                                       // 00000007113C: 84008300
	s_waitcnt vmcnt(0)                                         // 000000071140: BF8903F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 000000071144: 32060490
	v_and_b32_e32 v2, 0xffff, v2                               // 000000071148: 360404FF 0000FFFF
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000071150: D73C0000 00020082
	v_sub_nc_u32_e32 v2, v2, v3                                // 000000071158: 4C040702
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007115C: BF870192
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 000000071160: D7006A00 00020004
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 000000071168: 40020205
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007116C: BF870003
	v_add_nc_u32_e32 v2, s0, v2                                // 000000071170: 4A040400
	global_store_b32 v[0:1], v2, off                           // 000000071174: DC6A0000 007C0200
	s_nop 0                                                    // 00000007117C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071180: BFB60003
	s_endpgm                                                   // 000000071184: BFB00000
subtract_get_global_size_8_8_symend:
	.long 0xbf800000                                           // 000000071188: BF800000
	.long 0xbf800000                                           // 00000007118C: BF800000
	.long 0xbf800000                                           // 000000071190: BF800000
	.long 0xbf800000                                           // 000000071194: BF800000
	.long 0xbf800000                                           // 000000071198: BF800000
	.long 0xbf800000                                           // 00000007119C: BF800000
	.long 0xbf800000                                           // 0000000711A0: BF800000
	.long 0xbf800000                                           // 0000000711A4: BF800000
	.long 0xbf800000                                           // 0000000711A8: BF800000
	.long 0xbf800000                                           // 0000000711AC: BF800000
	.long 0xbf800000                                           // 0000000711B0: BF800000
	.long 0xbf800000                                           // 0000000711B4: BF800000
	.long 0xbf800000                                           // 0000000711B8: BF800000
	.long 0xbf800000                                           // 0000000711BC: BF800000
	.long 0xbf800000                                           // 0000000711C0: BF800000
	.long 0xbf800000                                           // 0000000711C4: BF800000
	.long 0xbf800000                                           // 0000000711C8: BF800000
	.long 0xbf800000                                           // 0000000711CC: BF800000
	.long 0xbf800000                                           // 0000000711D0: BF800000
	.long 0xbf800000                                           // 0000000711D4: BF800000
	.long 0xbf800000                                           // 0000000711D8: BF800000
	.long 0xbf800000                                           // 0000000711DC: BF800000
	.long 0xbf800000                                           // 0000000711E0: BF800000
	.long 0xbf800000                                           // 0000000711E4: BF800000
	.long 0xbf800000                                           // 0000000711E8: BF800000
	.long 0xbf800000                                           // 0000000711EC: BF800000
	.long 0xbf800000                                           // 0000000711F0: BF800000
	.long 0xbf800000                                           // 0000000711F4: BF800000
	.long 0xbf800000                                           // 0000000711F8: BF800000
	.long 0xbf800000                                           // 0000000711FC: BF800000

	.p2align	8
	.type	subtract_get_num_groups_8_8,@function
	.size	subtract_get_num_groups_8_8, subtract_get_num_groups_8_8_symend-subtract_get_num_groups_8_8
subtract_get_num_groups_8_8:
	v_mov_b32_e32 v1, 0                                        // 000000071200: 7E020280
	s_mov_b32 s33, 0                                           // 000000071204: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000071208: DC520022 02000001
	s_clause 0x1                                               // 000000071210: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000071214: F40000C0 F8000038
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000007121C: F4080100 F8000008
	s_lshl_b32 s0, s2, 3                                       // 000000071224: 84008302
	s_waitcnt lgkmcnt(0)                                       // 000000071228: BF89FC07
	v_add3_u32 v0, s3, s0, v0                                  // 00000007122C: D6550000 04000003
	s_waitcnt vmcnt(0)                                         // 000000071234: BF8903F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 000000071238: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007123C: 7C7A0480
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000071240: BF8700B2
	v_cmp_ne_u16_e64 s0, 0, v3.l                               // 000000071244: D43D0000 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007124C: BF07806A
	s_addc_u32 s1, s6, 0                                       // 000000071250: 82018006
	s_cmp_lg_u32 s0, 0                                         // 000000071254: BF078000
	s_subb_u32 s0, s1, s7                                      // 000000071258: 82800701
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007125C: BF8700A9
	v_mov_b32_e32 v2, s0                                       // 000000071260: 7E040200
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000071264: D73C0000 00020082
	v_add_co_u32 v0, vcc_lo, s4, v0                            // 00000007126C: D7006A00 00020004
	s_delay_alu instid0(VALU_DEP_2)                            // 000000071274: BF870002
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo             // 000000071278: 40020205
	global_store_b32 v[0:1], v2, off                           // 00000007127C: DC6A0000 007C0200
	s_nop 0                                                    // 000000071284: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071288: BFB60003
	s_endpgm                                                   // 00000007128C: BFB00000
subtract_get_num_groups_8_8_symend:
	.long 0xbf800000                                           // 000000071290: BF800000
	.long 0xbf800000                                           // 000000071294: BF800000
	.long 0xbf800000                                           // 000000071298: BF800000
	.long 0xbf800000                                           // 00000007129C: BF800000
	.long 0xbf800000                                           // 0000000712A0: BF800000
	.long 0xbf800000                                           // 0000000712A4: BF800000
	.long 0xbf800000                                           // 0000000712A8: BF800000
	.long 0xbf800000                                           // 0000000712AC: BF800000
	.long 0xbf800000                                           // 0000000712B0: BF800000
	.long 0xbf800000                                           // 0000000712B4: BF800000
	.long 0xbf800000                                           // 0000000712B8: BF800000
	.long 0xbf800000                                           // 0000000712BC: BF800000
	.long 0xbf800000                                           // 0000000712C0: BF800000
	.long 0xbf800000                                           // 0000000712C4: BF800000
	.long 0xbf800000                                           // 0000000712C8: BF800000
	.long 0xbf800000                                           // 0000000712CC: BF800000
	.long 0xbf800000                                           // 0000000712D0: BF800000
	.long 0xbf800000                                           // 0000000712D4: BF800000
	.long 0xbf800000                                           // 0000000712D8: BF800000
	.long 0xbf800000                                           // 0000000712DC: BF800000
	.long 0xbf800000                                           // 0000000712E0: BF800000
	.long 0xbf800000                                           // 0000000712E4: BF800000
	.long 0xbf800000                                           // 0000000712E8: BF800000
	.long 0xbf800000                                           // 0000000712EC: BF800000
	.long 0xbf800000                                           // 0000000712F0: BF800000
	.long 0xbf800000                                           // 0000000712F4: BF800000
	.long 0xbf800000                                           // 0000000712F8: BF800000
	.long 0xbf800000                                           // 0000000712FC: BF800000

	.p2align	8
	.type	subtract_get_work_dim_8_8,@function
	.size	subtract_get_work_dim_8_8, subtract_get_work_dim_8_8_symend-subtract_get_work_dim_8_8
subtract_get_work_dim_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000071300: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000071308: BF89FC07
	s_clause 0x1                                               // 00000007130C: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 000000071310: F4000140 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000071318: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000071320: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000007132C: 84028302
	v_bfe_u32 v3, v0, 10, 10                                   // 000000071330: D6100003 02291500
	s_mov_b32 s33, 0                                           // 000000071338: BEA10080
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007133C: BF870002
	v_add3_u32 v0, s4, s2, v2                                  // 000000071340: D6550000 04080404
	s_lshl_b32 s2, s3, 3                                       // 000000071348: 84028303
	s_delay_alu instid0(VALU_DEP_2) | instid1(SALU_CYCLE_1)    // 00000007134C: BF870482
	v_add3_u32 v2, s2, s6, v3                                  // 000000071350: D6550002 040C0C02
	s_waitcnt lgkmcnt(0)                                       // 000000071358: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000007135C: 8B02FF05 0000FFFF
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000071364: D73C0000 00020082
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007136C: BF870112
	v_sub_nc_u32_e32 v2, s2, v2                                // 000000071370: 4C040402
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000071374: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007137C: BF870003
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000071380: 40020201
	global_store_b32 v[0:1], v2, off                           // 000000071384: DC6A0000 007C0200
	s_nop 0                                                    // 00000007138C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071390: BFB60003
	s_endpgm                                                   // 000000071394: BFB00000
subtract_get_work_dim_8_8_symend:
	.long 0xbf800000                                           // 000000071398: BF800000
	.long 0xbf800000                                           // 00000007139C: BF800000
	.long 0xbf800000                                           // 0000000713A0: BF800000
	.long 0xbf800000                                           // 0000000713A4: BF800000
	.long 0xbf800000                                           // 0000000713A8: BF800000
	.long 0xbf800000                                           // 0000000713AC: BF800000
	.long 0xbf800000                                           // 0000000713B0: BF800000
	.long 0xbf800000                                           // 0000000713B4: BF800000
	.long 0xbf800000                                           // 0000000713B8: BF800000
	.long 0xbf800000                                           // 0000000713BC: BF800000
	.long 0xbf800000                                           // 0000000713C0: BF800000
	.long 0xbf800000                                           // 0000000713C4: BF800000
	.long 0xbf800000                                           // 0000000713C8: BF800000
	.long 0xbf800000                                           // 0000000713CC: BF800000
	.long 0xbf800000                                           // 0000000713D0: BF800000
	.long 0xbf800000                                           // 0000000713D4: BF800000
	.long 0xbf800000                                           // 0000000713D8: BF800000
	.long 0xbf800000                                           // 0000000713DC: BF800000
	.long 0xbf800000                                           // 0000000713E0: BF800000
	.long 0xbf800000                                           // 0000000713E4: BF800000
	.long 0xbf800000                                           // 0000000713E8: BF800000
	.long 0xbf800000                                           // 0000000713EC: BF800000
	.long 0xbf800000                                           // 0000000713F0: BF800000
	.long 0xbf800000                                           // 0000000713F4: BF800000
	.long 0xbf800000                                           // 0000000713F8: BF800000
	.long 0xbf800000                                           // 0000000713FC: BF800000

	.p2align	8
	.type	subtract_long_x_x,@function
	.size	subtract_long_x_x, subtract_long_x_x_symend-subtract_long_x_x
subtract_long_x_x:
	s_clause 0x1                                               // 000000071400: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000071404: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 00000007140C: F4040000 F8000000
	s_lshl_b32 s2, s2, 6                                       // 000000071414: 84028602
	v_mov_b32_e32 v1, 0                                        // 000000071418: 7E020280
	s_mov_b32 s33, 0                                           // 00000007141C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071420: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 000000071424: D6550000 04000403
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007142C: BF870121
	v_lshlrev_b64 v[2:3], 3, v[0:1]                            // 000000071430: D73C0002 00020083
	v_mov_b32_e32 v0, v1                                       // 000000071438: 7E000301
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007143C: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_3)                            // 000000071444: BF870003
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000071448: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007144C: DC6E0000 007C0002
	s_nop 0                                                    // 000000071454: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071458: BFB60003
	s_endpgm                                                   // 00000007145C: BFB00000
subtract_long_x_x_symend:
	.long 0xbf800000                                           // 000000071460: BF800000
	.long 0xbf800000                                           // 000000071464: BF800000
	.long 0xbf800000                                           // 000000071468: BF800000
	.long 0xbf800000                                           // 00000007146C: BF800000
	.long 0xbf800000                                           // 000000071470: BF800000
	.long 0xbf800000                                           // 000000071474: BF800000
	.long 0xbf800000                                           // 000000071478: BF800000
	.long 0xbf800000                                           // 00000007147C: BF800000
	.long 0xbf800000                                           // 000000071480: BF800000
	.long 0xbf800000                                           // 000000071484: BF800000
	.long 0xbf800000                                           // 000000071488: BF800000
	.long 0xbf800000                                           // 00000007148C: BF800000
	.long 0xbf800000                                           // 000000071490: BF800000
	.long 0xbf800000                                           // 000000071494: BF800000
	.long 0xbf800000                                           // 000000071498: BF800000
	.long 0xbf800000                                           // 00000007149C: BF800000
	.long 0xbf800000                                           // 0000000714A0: BF800000
	.long 0xbf800000                                           // 0000000714A4: BF800000
	.long 0xbf800000                                           // 0000000714A8: BF800000
	.long 0xbf800000                                           // 0000000714AC: BF800000
	.long 0xbf800000                                           // 0000000714B0: BF800000
	.long 0xbf800000                                           // 0000000714B4: BF800000
	.long 0xbf800000                                           // 0000000714B8: BF800000
	.long 0xbf800000                                           // 0000000714BC: BF800000
	.long 0xbf800000                                           // 0000000714C0: BF800000
	.long 0xbf800000                                           // 0000000714C4: BF800000
	.long 0xbf800000                                           // 0000000714C8: BF800000
	.long 0xbf800000                                           // 0000000714CC: BF800000
	.long 0xbf800000                                           // 0000000714D0: BF800000
	.long 0xbf800000                                           // 0000000714D4: BF800000
	.long 0xbf800000                                           // 0000000714D8: BF800000
	.long 0xbf800000                                           // 0000000714DC: BF800000
	.long 0xbf800000                                           // 0000000714E0: BF800000
	.long 0xbf800000                                           // 0000000714E4: BF800000
	.long 0xbf800000                                           // 0000000714E8: BF800000
	.long 0xbf800000                                           // 0000000714EC: BF800000
	.long 0xbf800000                                           // 0000000714F0: BF800000
	.long 0xbf800000                                           // 0000000714F4: BF800000
	.long 0xbf800000                                           // 0000000714F8: BF800000
	.long 0xbf800000                                           // 0000000714FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_offset_x,@function
	.size	subtract_long_get_global_offset_x, subtract_long_get_global_offset_x_symend-subtract_long_get_global_offset_x
subtract_long_get_global_offset_x:
	s_clause 0x3                                               // 000000071500: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071504: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000007150C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 000000071514: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007151C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000071524: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000071530: 84028102
	v_bfe_u32 v4, v0, 10, 10                                   // 000000071534: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007153C: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000071544: 84048104
	s_lshl_b32 s3, s3, 4                                       // 000000071548: 84038403
	s_mov_b32 s33, 0                                           // 00000007154C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071550: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 000000071554: D6550002 04080408
	s_sub_i32 s2, s8, s5                                       // 00000007155C: 81820508
	v_mov_b32_e32 v3, v1                                       // 000000071560: 7E060301
	v_add3_u32 v6, s6, s4, v0                                  // 000000071564: D6550006 04000806
	v_mov_b32_e32 v0, s2                                       // 00000007156C: 7E000202
	v_add3_u32 v4, s10, s3, v4                                 // 000000071570: D6550004 0410060A
	s_sub_i32 s3, s10, s5                                      // 000000071578: 8183050A
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007157C: D73C0002 00020483
	v_mov_b32_e32 v5, v1                                       // 000000071584: 7E0A0301
	s_sub_i32 s2, s6, s5                                       // 000000071588: 81820506
	v_mov_b32_e32 v7, v1                                       // 00000007158C: 7E0E0301
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000071590: BF870213
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000071594: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007159C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000715A0: DC6E0000 007C0002
	v_mov_b32_e32 v0, s3                                       // 0000000715A8: 7E000203
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000715AC: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000715B4: BF870111
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000715B8: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000715C0: 400A0A01
	global_store_b64 v[4:5], v[0:1], off                       // 0000000715C4: DC6E0000 007C0004
	v_mov_b32_e32 v0, s2                                       // 0000000715CC: 7E000202
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000715D0: D73C0002 00020C83
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000715D8: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000715DC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000715E4: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000715E8: DC6E0000 007C0002
	s_nop 0                                                    // 0000000715F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000715F4: BFB60003
	s_endpgm                                                   // 0000000715F8: BFB00000
subtract_long_get_global_offset_x_symend:
	.long 0xbf800000                                           // 0000000715FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_id_x,@function
	.size	subtract_long_get_local_id_x, subtract_long_get_local_id_x_symend-subtract_long_get_local_id_x
subtract_long_get_local_id_x:
	s_clause 0x3                                               // 000000071600: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071604: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000007160C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 000000071614: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007161C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v6, 0x3ff, v0       // 000000071624: CA240080 010600FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000071630: 84028302
	v_bfe_u32 v8, v0, 10, 10                                   // 000000071634: D6100008 02291500
	s_lshl_b32 s3, s3, 2                                       // 00000007163C: 84038203
	s_delay_alu instid0(VALU_DEP_2)                            // 000000071640: BF870002
	v_mov_b32_e32 v3, v1                                       // 000000071644: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000071648: 7E0A0301
	v_bfe_u32 v9, v0, 20, 10                                   // 00000007164C: D6100009 02292900
	v_mov_b32_e32 v7, v1                                       // 000000071654: 7E0E0301
	s_mov_b32 s33, 0                                           // 000000071658: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007165C: BF89FC07
	v_add3_u32 v2, s8, s2, v6                                  // 000000071660: D6550002 04180408
	v_add3_u32 v4, s10, s3, v8                                 // 000000071668: D6550004 0420060A
	s_lshl_b32 s2, s4, 1                                       // 000000071670: 84028104
	v_subrev_nc_u32_e32 v0, s5, v6                             // 000000071674: 4E000C05
	v_add3_u32 v6, s6, s2, v9                                  // 000000071678: D6550006 04240406
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000071680: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000071688: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000071690: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000071694: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007169C: 40060601
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000716A0: BF870213
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000716A4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000716AC: 400A0A01
	global_store_b64 v[2:3], v[0:1], off                       // 0000000716B0: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000716B8: D73C0002 00020C83
	v_subrev_nc_u32_e32 v0, s5, v8                             // 0000000716C0: 4E001005
	global_store_b64 v[4:5], v[0:1], off                       // 0000000716C4: DC6E0000 007C0004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000716CC: D7006A02 00020400
	v_subrev_nc_u32_e32 v0, s5, v9                             // 0000000716D4: 4E001205
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000716D8: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000716DC: DC6E0000 007C0002
	s_nop 0                                                    // 0000000716E4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000716E8: BFB60003
	s_endpgm                                                   // 0000000716EC: BFB00000
subtract_long_get_local_id_x_symend:
	.long 0xbf800000                                           // 0000000716F0: BF800000
	.long 0xbf800000                                           // 0000000716F4: BF800000
	.long 0xbf800000                                           // 0000000716F8: BF800000
	.long 0xbf800000                                           // 0000000716FC: BF800000

	.p2align	8
	.type	subtract_long_get_group_id_x,@function
	.size	subtract_long_get_group_id_x, subtract_long_get_group_id_x_symend-subtract_long_get_group_id_x
subtract_long_get_group_id_x:
	s_clause 0x3                                               // 000000071700: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071704: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000007170C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 000000071714: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007171C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000071724: CA240080 010200FF 000003FF
	s_lshl_b32 s7, s2, 1                                       // 000000071730: 84078102
	v_bfe_u32 v4, v0, 10, 10                                   // 000000071734: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007173C: D6100000 02292900
	s_waitcnt lgkmcnt(0)                                       // 000000071744: BF89FC07
	s_lshl_b32 s11, s4, 1                                      // 000000071748: 840B8104
	s_lshl_b32 s9, s3, 4                                       // 00000007174C: 84098403
	s_mov_b32 s33, 0                                           // 000000071750: BEA10080
	v_add3_u32 v2, s8, s7, v2                                  // 000000071754: D6550002 04080E08
	s_sub_i32 s2, s2, s5                                       // 00000007175C: 81820502
	v_mov_b32_e32 v3, v1                                       // 000000071760: 7E060301
	v_add3_u32 v6, s6, s11, v0                                 // 000000071764: D6550006 04001606
	v_mov_b32_e32 v0, s2                                       // 00000007176C: 7E000202
	v_add3_u32 v4, s10, s9, v4                                 // 000000071770: D6550004 0410120A
	s_sub_i32 s3, s3, s5                                       // 000000071778: 81830503
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007177C: D73C0002 00020483
	v_mov_b32_e32 v5, v1                                       // 000000071784: 7E0A0301
	s_sub_i32 s2, s4, s5                                       // 000000071788: 81820504
	v_mov_b32_e32 v7, v1                                       // 00000007178C: 7E0E0301
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000071790: BF870213
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000071794: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007179C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000717A0: DC6E0000 007C0002
	v_mov_b32_e32 v0, s3                                       // 0000000717A8: 7E000203
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000717AC: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000717B4: BF870111
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000717B8: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000717C0: 400A0A01
	global_store_b64 v[4:5], v[0:1], off                       // 0000000717C4: DC6E0000 007C0004
	v_mov_b32_e32 v0, s2                                       // 0000000717CC: 7E000202
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000717D0: D73C0002 00020C83
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000717D8: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000717DC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000717E4: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000717E8: DC6E0000 007C0002
	s_nop 0                                                    // 0000000717F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000717F4: BFB60003
	s_endpgm                                                   // 0000000717F8: BFB00000
subtract_long_get_group_id_x_symend:
	.long 0xbf800000                                           // 0000000717FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_size_x,@function
	.size	subtract_long_get_local_size_x, subtract_long_get_local_size_x_symend-subtract_long_get_local_size_x
subtract_long_get_local_size_x:
	s_clause 0x1                                               // 000000071800: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000071804: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007180C: F4080300 F8000038
	s_add_u32 s5, s0, 16                                       // 000000071814: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000071818: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007181C: 820B8001
	s_lshl_b32 s13, s2, 1                                      // 000000071820: 840D8102
	s_lshl_b32 s15, s3, 1                                      // 000000071824: 840F8103
	s_lshl_b32 s16, s4, 2                                      // 000000071828: 84108204
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007182C: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000071838: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000071840: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000071848: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007184C: BF870003
	v_mov_b32_e32 v3, v1                                       // 000000071850: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000071854: 7E0A0301
	v_mov_b32_e32 v6, v1                                       // 000000071858: 7E0C0301
	s_cmp_lt_u32 s2, s8                                        // 00000007185C: BF0A0802
	v_add3_u32 v2, s12, s13, v2                                // 000000071860: D6550002 04081A0C
	s_cselect_b32 s2, 12, 18                                   // 000000071868: 9802928C
	v_add3_u32 v4, s14, s15, v4                                // 00000007186C: D6550004 04101E0E
	s_add_u32 s6, s5, s2                                       // 000000071874: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000071878: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007187C: BF0A0903
	global_load_u16 v9, v1, s[6:7]                             // 000000071880: DC4A0000 09060001
	s_cselect_b32 s2, 14, 20                                   // 000000071888: 9802948E
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007188C: D73C0002 00020483
	s_add_u32 s2, s5, s2                                       // 000000071894: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000071898: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007189C: BF0A0A04
	global_load_u16 v10, v1, s[2:3]                            // 0000000718A0: DC4A0000 0A020001
	s_cselect_b32 s2, 16, 22                                   // 0000000718A8: 98029690
	v_lshlrev_b64 v[7:8], 3, v[4:5]                            // 0000000718AC: D73C0007 00020883
	s_add_u32 s2, s5, s2                                       // 0000000718B4: 80020205
	s_addc_u32 s3, s11, 0                                      // 0000000718B8: 8203800B
	global_load_u16 v11, v1, s[2:3]                            // 0000000718BC: DC4A0000 0B020001
	s_clause 0x2                                               // 0000000718C4: BF850002
	s_load_b64 s[2:3], s[0:1], 0x8                             // 0000000718C8: F4040080 F8000008
	s_load_b32 s4, s[0:1], 0x48                                // 0000000718D0: F4000100 F8000048
	s_load_b32 s0, s[0:1], null                                // 0000000718D8: F4000000 F8000000
	s_waitcnt lgkmcnt(0)                                       // 0000000718E0: BF89FC07
	v_add_co_u32 v2, vcc_lo, s2, v2                            // 0000000718E4: D7006A02 00020402
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo             // 0000000718EC: 40060603
	v_add3_u32 v5, s4, s16, v0                                 // 0000000718F0: D6550005 04002004
	v_add_co_u32 v7, vcc_lo, s2, v7                            // 0000000718F8: D7006A07 00020E02
	v_add_co_ci_u32_e32 v8, vcc_lo, s3, v8, vcc_lo             // 000000071900: 40101003
	s_waitcnt vmcnt(2)                                         // 000000071904: BF890BF7
	v_subrev_nc_u32_e32 v0, s0, v9                             // 000000071908: 4E001200
	global_store_b64 v[2:3], v[0:1], off                       // 00000007190C: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[5:6]                            // 000000071914: D73C0002 00020A83
	s_waitcnt vmcnt(1)                                         // 00000007191C: BF8907F7
	v_subrev_nc_u32_e32 v0, s0, v10                            // 000000071920: 4E001400
	s_delay_alu instid0(VALU_DEP_2)                            // 000000071924: BF870002
	v_add_co_u32 v2, vcc_lo, s2, v2                            // 000000071928: D7006A02 00020402
	global_store_b64 v[7:8], v[0:1], off                       // 000000071930: DC6E0000 007C0007
	s_waitcnt vmcnt(0)                                         // 000000071938: BF8903F7
	v_subrev_nc_u32_e32 v0, s0, v11                            // 00000007193C: 4E001600
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo             // 000000071940: 40060603
	global_store_b64 v[2:3], v[0:1], off                       // 000000071944: DC6E0000 007C0002
	s_nop 0                                                    // 00000007194C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071950: BFB60003
	s_endpgm                                                   // 000000071954: BFB00000
subtract_long_get_local_size_x_symend:
	.long 0xbf800000                                           // 000000071958: BF800000
	.long 0xbf800000                                           // 00000007195C: BF800000
	.long 0xbf800000                                           // 000000071960: BF800000
	.long 0xbf800000                                           // 000000071964: BF800000
	.long 0xbf800000                                           // 000000071968: BF800000
	.long 0xbf800000                                           // 00000007196C: BF800000
	.long 0xbf800000                                           // 000000071970: BF800000
	.long 0xbf800000                                           // 000000071974: BF800000
	.long 0xbf800000                                           // 000000071978: BF800000
	.long 0xbf800000                                           // 00000007197C: BF800000
	.long 0xbf800000                                           // 000000071980: BF800000
	.long 0xbf800000                                           // 000000071984: BF800000
	.long 0xbf800000                                           // 000000071988: BF800000
	.long 0xbf800000                                           // 00000007198C: BF800000
	.long 0xbf800000                                           // 000000071990: BF800000
	.long 0xbf800000                                           // 000000071994: BF800000
	.long 0xbf800000                                           // 000000071998: BF800000
	.long 0xbf800000                                           // 00000007199C: BF800000
	.long 0xbf800000                                           // 0000000719A0: BF800000
	.long 0xbf800000                                           // 0000000719A4: BF800000
	.long 0xbf800000                                           // 0000000719A8: BF800000
	.long 0xbf800000                                           // 0000000719AC: BF800000
	.long 0xbf800000                                           // 0000000719B0: BF800000
	.long 0xbf800000                                           // 0000000719B4: BF800000
	.long 0xbf800000                                           // 0000000719B8: BF800000
	.long 0xbf800000                                           // 0000000719BC: BF800000
	.long 0xbf800000                                           // 0000000719C0: BF800000
	.long 0xbf800000                                           // 0000000719C4: BF800000
	.long 0xbf800000                                           // 0000000719C8: BF800000
	.long 0xbf800000                                           // 0000000719CC: BF800000
	.long 0xbf800000                                           // 0000000719D0: BF800000
	.long 0xbf800000                                           // 0000000719D4: BF800000
	.long 0xbf800000                                           // 0000000719D8: BF800000
	.long 0xbf800000                                           // 0000000719DC: BF800000
	.long 0xbf800000                                           // 0000000719E0: BF800000
	.long 0xbf800000                                           // 0000000719E4: BF800000
	.long 0xbf800000                                           // 0000000719E8: BF800000
	.long 0xbf800000                                           // 0000000719EC: BF800000
	.long 0xbf800000                                           // 0000000719F0: BF800000
	.long 0xbf800000                                           // 0000000719F4: BF800000
	.long 0xbf800000                                           // 0000000719F8: BF800000
	.long 0xbf800000                                           // 0000000719FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_id_x,@function
	.size	subtract_long_get_global_id_x, subtract_long_get_global_id_x_symend-subtract_long_get_global_id_x
subtract_long_get_global_id_x:
	s_clause 0x3                                               // 000000071A00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071A04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000071A0C: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000071A14: F4040180 F8000008
	s_load_b32 s0, s[0:1], null                                // 000000071A1C: F4000000 F8000000
	v_bfe_u32 v2, v0, 10, 10                                   // 000000071A24: D6100002 02291500
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000071A2C: 360600FF 000003FF
	v_bfe_u32 v4, v0, 20, 10                                   // 000000071A34: D6100004 02292900
	s_mov_b32 s33, 0                                           // 000000071A3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000071A40: BF8701D3
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000071A44: D6560002 04090203
	v_mov_b32_e32 v1, 0                                        // 000000071A4C: 7E020280
	v_lshl_or_b32 v0, s2, 1, v3                                // 000000071A50: D6560000 040D0202
	v_lshl_or_b32 v8, s4, 2, v4                                // 000000071A58: D6560008 04110404
	s_waitcnt lgkmcnt(0)                                       // 000000071A60: BF89FC07
	v_dual_mov_b32 v5, v1 :: v_dual_add_nc_u32 v4, s10, v2     // 000000071A64: CA200101 0504040A
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(VALU_DEP_4)// 000000071A6C: BF870252
	v_add_nc_u32_e32 v8, s5, v8                                // 000000071A70: 4A101005
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 000000071A74: D73C0006 00020083
	v_mov_b32_e32 v9, v1                                       // 000000071A7C: 7E120301
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v0, s8, v0      // 000000071A80: CA200101 03000008
	v_lshlrev_b64 v[10:11], 3, v[4:5]                          // 000000071A88: D73C000A 00020883
	v_add_co_u32 v5, vcc_lo, s6, v6                            // 000000071A90: D7006A05 00020C06
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v7, vcc_lo             // 000000071A98: 400C0E07
	s_delay_alu instid0(VALU_DEP_3)                            // 000000071A9C: BF870003
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 000000071AA0: D7006A0A 00021406
	v_lshlrev_b64 v[12:13], 3, v[8:9]                          // 000000071AA8: D73C000C 00021083
	v_subrev_nc_u32_e32 v2, s0, v0                             // 000000071AB0: 4E040000
	v_subrev_nc_u32_e32 v0, s0, v4                             // 000000071AB4: 4E000800
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 000000071AB8: 40161607
	s_clause 0x1                                               // 000000071ABC: BF850001
	global_store_b64 v[5:6], v[2:3], off                       // 000000071AC0: DC6E0000 007C0205
	global_store_b64 v[10:11], v[0:1], off                     // 000000071AC8: DC6E0000 007C000A
	v_add_co_u32 v2, vcc_lo, s6, v12                           // 000000071AD0: D7006A02 00021806
	v_subrev_nc_u32_e32 v0, s0, v8                             // 000000071AD8: 4E001000
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v13, vcc_lo            // 000000071ADC: 40061A07
	global_store_b64 v[2:3], v[0:1], off                       // 000000071AE0: DC6E0000 007C0002
	s_nop 0                                                    // 000000071AE8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071AEC: BFB60003
	s_endpgm                                                   // 000000071AF0: BFB00000
subtract_long_get_global_id_x_symend:
	.long 0xbf800000                                           // 000000071AF4: BF800000
	.long 0xbf800000                                           // 000000071AF8: BF800000
	.long 0xbf800000                                           // 000000071AFC: BF800000

	.p2align	8
	.type	subtract_long_get_global_size_x,@function
	.size	subtract_long_get_global_size_x, subtract_long_get_global_size_x_symend-subtract_long_get_global_size_x
subtract_long_get_global_size_x:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000071B00: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000071B0C: 84028402
	v_bfe_u32 v4, v0, 10, 10                                   // 000000071B10: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000071B18: D6100000 02292900
	s_clause 0x1                                               // 000000071B20: BF850001
	global_load_b32 v8, v1, s[0:1] offset:34                   // 000000071B24: DC520022 08000001
	global_load_u16 v9, v1, s[0:1] offset:38                   // 000000071B2C: DC4A0026 09000001
	s_clause 0x4                                               // 000000071B34: BF850004
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000071B38: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000071B40: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000071B48: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x8                                 // 000000071B50: F4000180 F8000008
	s_load_b64 s[0:1], s[0:1], null                            // 000000071B58: F4040000 F8000000
	v_mov_b32_e32 v3, v1                                       // 000000071B60: 7E060301
	s_lshl_b32 s4, s4, 1                                       // 000000071B64: 84048104
	s_lshl_b32 s3, s3, 1                                       // 000000071B68: 84038103
	s_mov_b32 s33, 0                                           // 000000071B6C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071B70: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 000000071B74: D6550002 04080408
	s_lshl_b32 s2, s12, 4                                      // 000000071B7C: 8402840C
	v_add3_u32 v6, s5, s4, v0                                  // 000000071B80: D6550006 04000805
	v_add3_u32 v4, s10, s3, v4                                 // 000000071B88: D6550004 0410060A
	s_sub_i32 s2, s2, s6                                       // 000000071B90: 81820602
	s_lshl_b32 s7, s13, 1                                      // 000000071B94: 8407810D
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000071B98: BF870009
	s_sub_i32 s3, s7, s6                                       // 000000071B9C: 81830607
	s_waitcnt vmcnt(1)                                         // 000000071BA0: BF8907F7
	v_and_b32_e32 v0, 0xffff, v8                               // 000000071BA4: 360010FF 0000FFFF
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000071BAC: D73C0002 00020483
	v_mov_b32_e32 v5, v1                                       // 000000071BB4: 7E0A0301
	v_lshrrev_b32_e32 v8, 16, v8                               // 000000071BB8: 32101090
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000071BBC: BF870224
	v_dual_mov_b32 v7, v1 :: v_dual_add_nc_u32 v0, s2, v0      // 000000071BC0: CA200101 07000002
	s_lshl_b32 s2, s14, 1                                      // 000000071BC8: 8402810E
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000071BCC: D7006A02 00020400
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000071BD4: D73C0004 00020883
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000071BDC: 40060601
	s_sub_i32 s2, s2, s6                                       // 000000071BE0: 81820602
	global_store_b64 v[2:3], v[0:1], off                       // 000000071BE4: DC6E0000 007C0002
	v_add_nc_u32_e32 v0, s3, v8                                // 000000071BEC: 4A001003
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 000000071BF0: D73C0002 00020C83
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000071BF8: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000071C00: 400A0A01
	s_delay_alu instid0(VALU_DEP_3)                            // 000000071C04: BF870003
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000071C08: D7006A02 00020400
	global_store_b64 v[4:5], v[0:1], off                       // 000000071C10: DC6E0000 007C0004
	s_waitcnt vmcnt(0)                                         // 000000071C18: BF8903F7
	v_add_nc_u32_e32 v0, s2, v9                                // 000000071C1C: 4A001202
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000071C20: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000071C24: DC6E0000 007C0002
	s_nop 0                                                    // 000000071C2C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071C30: BFB60003
	s_endpgm                                                   // 000000071C34: BFB00000
subtract_long_get_global_size_x_symend:
	.long 0xbf800000                                           // 000000071C38: BF800000
	.long 0xbf800000                                           // 000000071C3C: BF800000
	.long 0xbf800000                                           // 000000071C40: BF800000
	.long 0xbf800000                                           // 000000071C44: BF800000
	.long 0xbf800000                                           // 000000071C48: BF800000
	.long 0xbf800000                                           // 000000071C4C: BF800000
	.long 0xbf800000                                           // 000000071C50: BF800000
	.long 0xbf800000                                           // 000000071C54: BF800000
	.long 0xbf800000                                           // 000000071C58: BF800000
	.long 0xbf800000                                           // 000000071C5C: BF800000
	.long 0xbf800000                                           // 000000071C60: BF800000
	.long 0xbf800000                                           // 000000071C64: BF800000
	.long 0xbf800000                                           // 000000071C68: BF800000
	.long 0xbf800000                                           // 000000071C6C: BF800000
	.long 0xbf800000                                           // 000000071C70: BF800000
	.long 0xbf800000                                           // 000000071C74: BF800000
	.long 0xbf800000                                           // 000000071C78: BF800000
	.long 0xbf800000                                           // 000000071C7C: BF800000
	.long 0xbf800000                                           // 000000071C80: BF800000
	.long 0xbf800000                                           // 000000071C84: BF800000
	.long 0xbf800000                                           // 000000071C88: BF800000
	.long 0xbf800000                                           // 000000071C8C: BF800000
	.long 0xbf800000                                           // 000000071C90: BF800000
	.long 0xbf800000                                           // 000000071C94: BF800000
	.long 0xbf800000                                           // 000000071C98: BF800000
	.long 0xbf800000                                           // 000000071C9C: BF800000
	.long 0xbf800000                                           // 000000071CA0: BF800000
	.long 0xbf800000                                           // 000000071CA4: BF800000
	.long 0xbf800000                                           // 000000071CA8: BF800000
	.long 0xbf800000                                           // 000000071CAC: BF800000
	.long 0xbf800000                                           // 000000071CB0: BF800000
	.long 0xbf800000                                           // 000000071CB4: BF800000
	.long 0xbf800000                                           // 000000071CB8: BF800000
	.long 0xbf800000                                           // 000000071CBC: BF800000
	.long 0xbf800000                                           // 000000071CC0: BF800000
	.long 0xbf800000                                           // 000000071CC4: BF800000
	.long 0xbf800000                                           // 000000071CC8: BF800000
	.long 0xbf800000                                           // 000000071CCC: BF800000
	.long 0xbf800000                                           // 000000071CD0: BF800000
	.long 0xbf800000                                           // 000000071CD4: BF800000
	.long 0xbf800000                                           // 000000071CD8: BF800000
	.long 0xbf800000                                           // 000000071CDC: BF800000
	.long 0xbf800000                                           // 000000071CE0: BF800000
	.long 0xbf800000                                           // 000000071CE4: BF800000
	.long 0xbf800000                                           // 000000071CE8: BF800000
	.long 0xbf800000                                           // 000000071CEC: BF800000
	.long 0xbf800000                                           // 000000071CF0: BF800000
	.long 0xbf800000                                           // 000000071CF4: BF800000
	.long 0xbf800000                                           // 000000071CF8: BF800000
	.long 0xbf800000                                           // 000000071CFC: BF800000

	.p2align	8
	.type	subtract_long_get_num_groups_x,@function
	.size	subtract_long_get_num_groups_x, subtract_long_get_num_groups_x_symend-subtract_long_get_num_groups_x
subtract_long_get_num_groups_x:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000071D00: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000071D0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000071D14: D6100000 02292900
	s_lshl_b32 s2, s2, 1                                       // 000000071D1C: 84028102
	s_clause 0x1                                               // 000000071D20: BF850001
	global_load_b32 v8, v1, s[0:1] offset:34                   // 000000071D24: DC520022 08000001
	global_load_u16 v9, v1, s[0:1] offset:38                   // 000000071D2C: DC4A0026 09000001
	s_clause 0x2                                               // 000000071D34: BF850002
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000071D38: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000071D40: F4000140 F8000048
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000071D48: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 000000071D50: BF89FC07
	s_clause 0x1                                               // 000000071D54: BF850001
	s_load_b32 s11, s[0:1], null                               // 000000071D58: F40002C0 F8000000
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000071D60: F4040180 F8000008
	s_lshl_b32 s1, s4, 2                                       // 000000071D68: 84018204
	s_lshl_b32 s0, s3, 1                                       // 000000071D6C: 84008103
	v_mov_b32_e32 v5, v1                                       // 000000071D70: 7E0A0301
	s_mov_b32 s33, 0                                           // 000000071D74: BEA10080
	v_add3_u32 v2, s12, s2, v2                                 // 000000071D78: D6550002 0408040C
	v_add3_u32 v6, s5, s1, v0                                  // 000000071D80: D6550006 04000205
	v_add3_u32 v4, s14, s0, v4                                 // 000000071D88: D6550004 0410000E
	s_waitcnt lgkmcnt(0)                                       // 000000071D90: BF89FC07
	s_sub_i32 s1, s8, s11                                      // 000000071D94: 81810B08
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_1)// 000000071D98: BF8700D1
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000071D9C: D73C0004 00020883
	s_waitcnt vmcnt(1)                                         // 000000071DA4: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 000000071DA8: 7C7A1080
	v_lshrrev_b32_e32 v0, 16, v8                               // 000000071DAC: 32001090
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000071DB0: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v0.l                           // 000000071DB4: 7C7A0080
	s_addc_u32 s1, s1, 0                                       // 000000071DB8: 82018001
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071DBC: BF870099
	v_dual_mov_b32 v3, v1 :: v_dual_mov_b32 v0, s1             // 000000071DC0: CA100101 03000001
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000071DC8: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071DD0: BF870091
	v_add_co_u32 v2, s0, s6, v2                                // 000000071DD4: D7000002 00020406
	v_add_co_ci_u32_e64 v3, s0, s7, v3, s0                     // 000000071DDC: D5200003 00020607
	v_add_co_u32 v4, s0, s6, v4                                // 000000071DE4: D7000004 00020806
	s_delay_alu instid0(VALU_DEP_1)                            // 000000071DEC: BF870001
	v_add_co_ci_u32_e64 v5, s0, s7, v5, s0                     // 000000071DF0: D5200005 00020A07
	s_sub_i32 s0, s9, s11                                      // 000000071DF8: 81800B09
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000071DFC: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000071E00: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v9.l                           // 000000071E04: 7C7A1280
	s_addc_u32 s0, s0, 0                                       // 000000071E08: 82008000
	global_store_b64 v[2:3], v[0:1], off                       // 000000071E0C: DC6E0000 007C0002
	v_mov_b32_e32 v0, s0                                       // 000000071E14: 7E000200
	s_sub_i32 s0, s10, s11                                     // 000000071E18: 81800B0A
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000071E1C: BF07806A
	s_addc_u32 s0, s0, 0                                       // 000000071E20: 82008000
	v_mov_b32_e32 v7, v1                                       // 000000071E24: 7E0E0301
	global_store_b64 v[4:5], v[0:1], off                       // 000000071E28: DC6E0000 007C0004
	v_mov_b32_e32 v0, s0                                       // 000000071E30: 7E000200
	v_lshlrev_b64 v[6:7], 3, v[6:7]                            // 000000071E34: D73C0006 00020C83
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000071E3C: BF870111
	v_add_co_u32 v2, vcc_lo, s6, v6                            // 000000071E40: D7006A02 00020C06
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v7, vcc_lo             // 000000071E48: 40060E07
	global_store_b64 v[2:3], v[0:1], off                       // 000000071E4C: DC6E0000 007C0002
	s_nop 0                                                    // 000000071E54: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071E58: BFB60003
	s_endpgm                                                   // 000000071E5C: BFB00000
subtract_long_get_num_groups_x_symend:
	.long 0xbf800000                                           // 000000071E60: BF800000
	.long 0xbf800000                                           // 000000071E64: BF800000
	.long 0xbf800000                                           // 000000071E68: BF800000
	.long 0xbf800000                                           // 000000071E6C: BF800000
	.long 0xbf800000                                           // 000000071E70: BF800000
	.long 0xbf800000                                           // 000000071E74: BF800000
	.long 0xbf800000                                           // 000000071E78: BF800000
	.long 0xbf800000                                           // 000000071E7C: BF800000
	.long 0xbf800000                                           // 000000071E80: BF800000
	.long 0xbf800000                                           // 000000071E84: BF800000
	.long 0xbf800000                                           // 000000071E88: BF800000
	.long 0xbf800000                                           // 000000071E8C: BF800000
	.long 0xbf800000                                           // 000000071E90: BF800000
	.long 0xbf800000                                           // 000000071E94: BF800000
	.long 0xbf800000                                           // 000000071E98: BF800000
	.long 0xbf800000                                           // 000000071E9C: BF800000
	.long 0xbf800000                                           // 000000071EA0: BF800000
	.long 0xbf800000                                           // 000000071EA4: BF800000
	.long 0xbf800000                                           // 000000071EA8: BF800000
	.long 0xbf800000                                           // 000000071EAC: BF800000
	.long 0xbf800000                                           // 000000071EB0: BF800000
	.long 0xbf800000                                           // 000000071EB4: BF800000
	.long 0xbf800000                                           // 000000071EB8: BF800000
	.long 0xbf800000                                           // 000000071EBC: BF800000
	.long 0xbf800000                                           // 000000071EC0: BF800000
	.long 0xbf800000                                           // 000000071EC4: BF800000
	.long 0xbf800000                                           // 000000071EC8: BF800000
	.long 0xbf800000                                           // 000000071ECC: BF800000
	.long 0xbf800000                                           // 000000071ED0: BF800000
	.long 0xbf800000                                           // 000000071ED4: BF800000
	.long 0xbf800000                                           // 000000071ED8: BF800000
	.long 0xbf800000                                           // 000000071EDC: BF800000
	.long 0xbf800000                                           // 000000071EE0: BF800000
	.long 0xbf800000                                           // 000000071EE4: BF800000
	.long 0xbf800000                                           // 000000071EE8: BF800000
	.long 0xbf800000                                           // 000000071EEC: BF800000
	.long 0xbf800000                                           // 000000071EF0: BF800000
	.long 0xbf800000                                           // 000000071EF4: BF800000
	.long 0xbf800000                                           // 000000071EF8: BF800000
	.long 0xbf800000                                           // 000000071EFC: BF800000

	.p2align	8
	.type	subtract_long_get_work_dim_x,@function
	.size	subtract_long_get_work_dim_x, subtract_long_get_work_dim_x_symend-subtract_long_get_work_dim_x
subtract_long_get_work_dim_x:
	s_clause 0x3                                               // 000000071F00: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 000000071F04: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x50                                // 000000071F0C: F4000100 F8000050
	s_load_b32 s5, s[0:1], null                                // 000000071F14: F4000140 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000071F1C: F4040000 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000071F24: 84028102
	s_mov_b32 s33, 0                                           // 000000071F28: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000071F2C: BF89FC07
	v_add3_u32 v2, s3, s2, v0                                  // 000000071F30: D6550002 04000403
	s_and_b32 s2, s4, 0xffff                                   // 000000071F38: 8B02FF04 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 000000071F40: BF870499
	s_sub_i32 s2, s2, s5                                       // 000000071F44: 81820502
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v0, s2              // 000000071F48: CA100080 01000002
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000071F50: BF870091
	v_mov_b32_e32 v3, v1                                       // 000000071F54: 7E060301
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000071F58: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000071F60: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000071F64: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000071F6C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000071F70: DC6E0000 007C0002
	s_nop 0                                                    // 000000071F78: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000071F7C: BFB60003
	s_endpgm                                                   // 000000071F80: BFB00000
subtract_long_get_work_dim_x_symend:
	.long 0xbf800000                                           // 000000071F84: BF800000
	.long 0xbf800000                                           // 000000071F88: BF800000
	.long 0xbf800000                                           // 000000071F8C: BF800000
	.long 0xbf800000                                           // 000000071F90: BF800000
	.long 0xbf800000                                           // 000000071F94: BF800000
	.long 0xbf800000                                           // 000000071F98: BF800000
	.long 0xbf800000                                           // 000000071F9C: BF800000
	.long 0xbf800000                                           // 000000071FA0: BF800000
	.long 0xbf800000                                           // 000000071FA4: BF800000
	.long 0xbf800000                                           // 000000071FA8: BF800000
	.long 0xbf800000                                           // 000000071FAC: BF800000
	.long 0xbf800000                                           // 000000071FB0: BF800000
	.long 0xbf800000                                           // 000000071FB4: BF800000
	.long 0xbf800000                                           // 000000071FB8: BF800000
	.long 0xbf800000                                           // 000000071FBC: BF800000
	.long 0xbf800000                                           // 000000071FC0: BF800000
	.long 0xbf800000                                           // 000000071FC4: BF800000
	.long 0xbf800000                                           // 000000071FC8: BF800000
	.long 0xbf800000                                           // 000000071FCC: BF800000
	.long 0xbf800000                                           // 000000071FD0: BF800000
	.long 0xbf800000                                           // 000000071FD4: BF800000
	.long 0xbf800000                                           // 000000071FD8: BF800000
	.long 0xbf800000                                           // 000000071FDC: BF800000
	.long 0xbf800000                                           // 000000071FE0: BF800000
	.long 0xbf800000                                           // 000000071FE4: BF800000
	.long 0xbf800000                                           // 000000071FE8: BF800000
	.long 0xbf800000                                           // 000000071FEC: BF800000
	.long 0xbf800000                                           // 000000071FF0: BF800000
	.long 0xbf800000                                           // 000000071FF4: BF800000
	.long 0xbf800000                                           // 000000071FF8: BF800000
	.long 0xbf800000                                           // 000000071FFC: BF800000

	.p2align	8
	.type	subtract_long_x_get_global_offset,@function
	.size	subtract_long_x_get_global_offset, subtract_long_x_get_global_offset_symend-subtract_long_x_get_global_offset
subtract_long_x_get_global_offset:
	s_clause 0x3                                               // 000000072000: BF850003
	s_load_b32 s12, s[0:1], 0x8                                // 000000072004: F4000300 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007200C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000072014: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007201C: F4040000 F8000000
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000072024: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000072030: 84028402
	v_bfe_u32 v6, v0, 10, 10                                   // 000000072034: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 00000007203C: D610000A 02292900
	s_lshl_b32 s5, s3, 1                                       // 000000072044: 84058103
	s_lshl_b32 s13, s4, 1                                      // 000000072048: 840D8104
	s_mov_b32 s33, 0                                           // 00000007204C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072050: BF89FC07
	s_ashr_i32 s14, s12, 31                                    // 000000072054: 860E9F0C
	v_add3_u32 v0, s8, s2, v2                                  // 000000072058: D6550000 04080408
	s_sub_u32 s2, s12, s8                                      // 000000072060: 8082080C
	s_subb_u32 s3, s14, s9                                     // 000000072064: 8283090E
	s_sub_u32 s4, s12, s10                                     // 000000072068: 80840A0C
	v_dual_mov_b32 v2, s2 :: v_dual_mov_b32 v3, s3             // 00000007206C: CA100002 02020003
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000072074: D73C0004 00020083
	v_add3_u32 v0, s10, s5, v6                                 // 00000007207C: D6550000 04180A0A
	s_subb_u32 s5, s14, s11                                    // 000000072084: 82850B0E
	s_sub_u32 s2, s12, s6                                      // 000000072088: 8082060C
	s_subb_u32 s3, s14, s7                                     // 00000007208C: 8283070E
	v_dual_mov_b32 v7, s5 :: v_dual_mov_b32 v6, s4             // 000000072090: CA100005 07060004
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000072098: D73C0008 00020083
	v_add3_u32 v0, s6, s13, v10                                // 0000000720A0: D6550000 04281A06
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000720A8: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000720B0: 400A0A01
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 0000000720B4: BF870243
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000720B8: D73C0000 00020083
	v_add_co_u32 v8, vcc_lo, s0, v8                            // 0000000720C0: D7006A08 00021000
	v_add_co_ci_u32_e32 v9, vcc_lo, s1, v9, vcc_lo             // 0000000720C8: 40121201
	v_dual_mov_b32 v11, s3 :: v_dual_mov_b32 v10, s2           // 0000000720CC: CA100003 0B0A0002
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000720D4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000720DC: 40020201
	s_clause 0x2                                               // 0000000720E0: BF850002
	global_store_b64 v[4:5], v[2:3], off                       // 0000000720E4: DC6E0000 007C0204
	global_store_b64 v[8:9], v[6:7], off                       // 0000000720EC: DC6E0000 007C0608
	global_store_b64 v[0:1], v[10:11], off                     // 0000000720F4: DC6E0000 007C0A00
	s_nop 0                                                    // 0000000720FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072100: BFB60003
	s_endpgm                                                   // 000000072104: BFB00000
subtract_long_x_get_global_offset_symend:
	.long 0xbf800000                                           // 000000072108: BF800000
	.long 0xbf800000                                           // 00000007210C: BF800000
	.long 0xbf800000                                           // 000000072110: BF800000
	.long 0xbf800000                                           // 000000072114: BF800000
	.long 0xbf800000                                           // 000000072118: BF800000
	.long 0xbf800000                                           // 00000007211C: BF800000
	.long 0xbf800000                                           // 000000072120: BF800000
	.long 0xbf800000                                           // 000000072124: BF800000
	.long 0xbf800000                                           // 000000072128: BF800000
	.long 0xbf800000                                           // 00000007212C: BF800000
	.long 0xbf800000                                           // 000000072130: BF800000
	.long 0xbf800000                                           // 000000072134: BF800000
	.long 0xbf800000                                           // 000000072138: BF800000
	.long 0xbf800000                                           // 00000007213C: BF800000
	.long 0xbf800000                                           // 000000072140: BF800000
	.long 0xbf800000                                           // 000000072144: BF800000
	.long 0xbf800000                                           // 000000072148: BF800000
	.long 0xbf800000                                           // 00000007214C: BF800000
	.long 0xbf800000                                           // 000000072150: BF800000
	.long 0xbf800000                                           // 000000072154: BF800000
	.long 0xbf800000                                           // 000000072158: BF800000
	.long 0xbf800000                                           // 00000007215C: BF800000
	.long 0xbf800000                                           // 000000072160: BF800000
	.long 0xbf800000                                           // 000000072164: BF800000
	.long 0xbf800000                                           // 000000072168: BF800000
	.long 0xbf800000                                           // 00000007216C: BF800000
	.long 0xbf800000                                           // 000000072170: BF800000
	.long 0xbf800000                                           // 000000072174: BF800000
	.long 0xbf800000                                           // 000000072178: BF800000
	.long 0xbf800000                                           // 00000007217C: BF800000
	.long 0xbf800000                                           // 000000072180: BF800000
	.long 0xbf800000                                           // 000000072184: BF800000
	.long 0xbf800000                                           // 000000072188: BF800000
	.long 0xbf800000                                           // 00000007218C: BF800000
	.long 0xbf800000                                           // 000000072190: BF800000
	.long 0xbf800000                                           // 000000072194: BF800000
	.long 0xbf800000                                           // 000000072198: BF800000
	.long 0xbf800000                                           // 00000007219C: BF800000
	.long 0xbf800000                                           // 0000000721A0: BF800000
	.long 0xbf800000                                           // 0000000721A4: BF800000
	.long 0xbf800000                                           // 0000000721A8: BF800000
	.long 0xbf800000                                           // 0000000721AC: BF800000
	.long 0xbf800000                                           // 0000000721B0: BF800000
	.long 0xbf800000                                           // 0000000721B4: BF800000
	.long 0xbf800000                                           // 0000000721B8: BF800000
	.long 0xbf800000                                           // 0000000721BC: BF800000
	.long 0xbf800000                                           // 0000000721C0: BF800000
	.long 0xbf800000                                           // 0000000721C4: BF800000
	.long 0xbf800000                                           // 0000000721C8: BF800000
	.long 0xbf800000                                           // 0000000721CC: BF800000
	.long 0xbf800000                                           // 0000000721D0: BF800000
	.long 0xbf800000                                           // 0000000721D4: BF800000
	.long 0xbf800000                                           // 0000000721D8: BF800000
	.long 0xbf800000                                           // 0000000721DC: BF800000
	.long 0xbf800000                                           // 0000000721E0: BF800000
	.long 0xbf800000                                           // 0000000721E4: BF800000
	.long 0xbf800000                                           // 0000000721E8: BF800000
	.long 0xbf800000                                           // 0000000721EC: BF800000
	.long 0xbf800000                                           // 0000000721F0: BF800000
	.long 0xbf800000                                           // 0000000721F4: BF800000
	.long 0xbf800000                                           // 0000000721F8: BF800000
	.long 0xbf800000                                           // 0000000721FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_offset_get_global_offset,@function
	.size	subtract_long_get_global_offset_get_global_offset, subtract_long_get_global_offset_get_global_offset_symend-subtract_long_get_global_offset_get_global_offset
subtract_long_get_global_offset_get_global_offset:
	s_clause 0x2                                               // 000000072200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072204: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007220C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072214: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007221C: CA240080 020000FF 000003FF
	s_lshl_b32 s5, s2, 1                                       // 000000072228: 84058102
	v_bfe_u32 v7, v0, 10, 10                                   // 00000007222C: D6100007 02291500
	s_lshl_b32 s12, s3, 4                                      // 000000072234: 840C8403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072238: D6100000 02292900
	s_lshl_b32 s13, s4, 1                                      // 000000072240: 840D8104
	s_sub_u32 s2, 0, 0                                         // 000000072244: 80828080
	s_mov_b32 s33, 0                                           // 000000072248: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007224C: BF89FC07
	v_add3_u32 v1, s8, s5, v1                                  // 000000072250: D6550001 04040A08
	s_subb_u32 s3, 0, s9                                       // 000000072258: 82830980
	s_sub_u32 s4, 0, 0                                         // 00000007225C: 80848080
	s_subb_u32 s5, 0, s11                                      // 000000072260: 82850B80
	v_dual_mov_b32 v4, s3 :: v_dual_mov_b32 v3, s2             // 000000072264: CA100003 04020002
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 00000007226C: D73C0005 00020283
	v_add3_u32 v1, s10, s12, v7                                // 000000072274: D6550001 041C180A
	s_sub_u32 s2, 0, 0                                         // 00000007227C: 80828080
	s_subb_u32 s3, 0, s7                                       // 000000072280: 82830780
	v_dual_mov_b32 v8, s5 :: v_dual_mov_b32 v7, s4             // 000000072284: CA100005 08060004
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000007228C: BF8701C2
	v_lshlrev_b64 v[9:10], 3, v[1:2]                           // 000000072290: D73C0009 00020283
	v_add3_u32 v1, s6, s13, v0                                 // 000000072298: D6550001 04001A06
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000722A0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000722A8: 400C0C01
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000722AC: D73C0000 00020283
	v_add_co_u32 v9, vcc_lo, s0, v9                            // 0000000722B4: D7006A09 00021200
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v10, vcc_lo           // 0000000722BC: 40141401
	v_dual_mov_b32 v12, s3 :: v_dual_mov_b32 v11, s2           // 0000000722C0: CA100003 0C0A0002
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000722C8: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000722CC: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000722D4: 40020201
	s_clause 0x2                                               // 0000000722D8: BF850002
	global_store_b64 v[5:6], v[3:4], off                       // 0000000722DC: DC6E0000 007C0305
	global_store_b64 v[9:10], v[7:8], off                      // 0000000722E4: DC6E0000 007C0709
	global_store_b64 v[0:1], v[11:12], off                     // 0000000722EC: DC6E0000 007C0B00
	s_nop 0                                                    // 0000000722F4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000722F8: BFB60003
	s_endpgm                                                   // 0000000722FC: BFB00000
subtract_long_get_global_offset_get_global_offset_symend:

	.p2align	8
	.type	subtract_long_get_local_id_get_global_offset,@function
	.size	subtract_long_get_local_id_get_global_offset, subtract_long_get_local_id_get_global_offset_symend-subtract_long_get_local_id_get_global_offset
subtract_long_get_local_id_get_global_offset:
	s_clause 0x2                                               // 000000072300: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072304: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007230C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000072314: F4040000 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007231C: CA240080 010400FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000072328: 84028302
	v_bfe_u32 v8, v0, 10, 10                                   // 00000007232C: D6100008 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 000000072334: D610000C 02292900
	s_lshl_b32 s3, s3, 2                                       // 00000007233C: 84038203
	s_lshl_b32 s4, s4, 1                                       // 000000072340: 84048104
	s_mov_b32 s33, 0                                           // 000000072344: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072348: BF89FC07
	v_add3_u32 v0, s8, s2, v4                                  // 00000007234C: D6550000 04100408
	v_sub_co_u32 v2, s5, v4, s8                                // 000000072354: D7010502 00001104
	v_sub_co_u32 v4, s2, v8, s10                               // 00000007235C: D7010204 00001508
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000072364: BF8701C3
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 000000072368: D73C0006 00020083
	v_add3_u32 v0, s10, s3, v8                                 // 000000072370: D6550000 0420060A
	v_sub_co_ci_u32_e64 v3, null, 0, s9, s5                    // 000000072378: D5217C03 00141280
	v_sub_co_ci_u32_e64 v5, null, 0, s11, s2                   // 000000072380: D5217C05 00081680
	v_lshlrev_b64 v[10:11], 3, v[0:1]                          // 000000072388: D73C000A 00020083
	v_add3_u32 v0, s0, s4, v12                                 // 000000072390: D6550000 04300800
	v_add_co_u32 v6, vcc_lo, s6, v6                            // 000000072398: D7006A06 00020C06
	v_add_co_ci_u32_e32 v7, vcc_lo, s7, v7, vcc_lo             // 0000000723A0: 400E0E07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 0000000723A4: BF870243
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000723A8: D73C0000 00020083
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 0000000723B0: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 0000000723B8: 40161607
	v_sub_co_u32 v8, s2, v12, s0                               // 0000000723BC: D7010208 0000010C
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000723C4: D7006A00 00020006
	v_sub_co_ci_u32_e64 v9, null, 0, s1, s2                    // 0000000723CC: D5217C09 00080280
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000723D4: 40020207
	s_clause 0x2                                               // 0000000723D8: BF850002
	global_store_b64 v[6:7], v[2:3], off                       // 0000000723DC: DC6E0000 007C0206
	global_store_b64 v[10:11], v[4:5], off                     // 0000000723E4: DC6E0000 007C040A
	global_store_b64 v[0:1], v[8:9], off                       // 0000000723EC: DC6E0000 007C0800
	s_nop 0                                                    // 0000000723F4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000723F8: BFB60003
	s_endpgm                                                   // 0000000723FC: BFB00000
subtract_long_get_local_id_get_global_offset_symend:

	.p2align	8
	.type	subtract_long_get_group_id_get_global_offset,@function
	.size	subtract_long_get_group_id_get_global_offset, subtract_long_get_group_id_get_global_offset_symend-subtract_long_get_group_id_get_global_offset
subtract_long_get_group_id_get_global_offset:
	s_clause 0x2                                               // 000000072400: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072404: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007240C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072414: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007241C: CA240080 010200FF 000003FF
	s_lshl_b32 s5, s2, 1                                       // 000000072428: 84058102
	v_bfe_u32 v6, v0, 10, 10                                   // 00000007242C: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000072434: D610000A 02292900
	s_lshl_b32 s12, s3, 4                                      // 00000007243C: 840C8403
	s_lshl_b32 s13, s4, 1                                      // 000000072440: 840D8104
	s_mov_b32 s33, 0                                           // 000000072444: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072448: BF89FC07
	v_add3_u32 v0, s8, s5, v2                                  // 00000007244C: D6550000 04080A08
	s_sub_u32 s8, s2, s8                                       // 000000072454: 80880802
	s_subb_u32 s9, 0, s9                                       // 000000072458: 82890980
	s_sub_u32 s2, s3, s10                                      // 00000007245C: 80820A03
	s_subb_u32 s3, 0, s11                                      // 000000072460: 82830B80
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000072464: D73C0004 00020083
	v_add3_u32 v0, s10, s12, v6                                // 00000007246C: D6550000 0418180A
	s_sub_u32 s4, s4, s6                                       // 000000072474: 80840604
	v_dual_mov_b32 v2, s8 :: v_dual_mov_b32 v3, s9             // 000000072478: CA100008 02020009
	s_subb_u32 s5, 0, s7                                       // 000000072480: 82850780
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000072484: BF8701C2
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000072488: D73C0008 00020083
	v_add3_u32 v0, s6, s13, v10                                // 000000072490: D6550000 04281A06
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000072498: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000724A0: 400A0A01
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000724A4: D73C0000 00020083
	v_add_co_u32 v8, vcc_lo, s0, v8                            // 0000000724AC: D7006A08 00021000
	v_add_co_ci_u32_e32 v9, vcc_lo, s1, v9, vcc_lo             // 0000000724B4: 40121201
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v6, s2             // 0000000724B8: CA100003 07060002
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000724C0: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000724C4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000724CC: 40020201
	v_dual_mov_b32 v11, s5 :: v_dual_mov_b32 v10, s4           // 0000000724D0: CA100005 0B0A0004
	s_clause 0x2                                               // 0000000724D8: BF850002
	global_store_b64 v[4:5], v[2:3], off                       // 0000000724DC: DC6E0000 007C0204
	global_store_b64 v[8:9], v[6:7], off                       // 0000000724E4: DC6E0000 007C0608
	global_store_b64 v[0:1], v[10:11], off                     // 0000000724EC: DC6E0000 007C0A00
	s_nop 0                                                    // 0000000724F4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000724F8: BFB60003
	s_endpgm                                                   // 0000000724FC: BFB00000
subtract_long_get_group_id_get_global_offset_symend:

	.p2align	8
	.type	subtract_long_get_local_size_get_global_offset,@function
	.size	subtract_long_get_local_size_get_global_offset, subtract_long_get_local_size_get_global_offset_symend-subtract_long_get_local_size_get_global_offset
subtract_long_get_local_size_get_global_offset:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000072500: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000072508: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007250C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000072510: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000072514: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000072518: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000007251C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000072520: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007252C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072534: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007253C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000072540: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000072544: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000072548: BF8704D9
	s_add_u32 s6, s5, s2                                       // 00000007254C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000072550: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000072554: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 000000072558: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 000000072560: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000072564: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000072568: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007256C: BF0A0A04
	global_load_u16 v8, v2, s[2:3]                             // 000000072570: DC4A0000 08020002
	s_cselect_b32 s4, 16, 22                                   // 000000072578: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007257C: BF870009
	s_add_u32 s2, s5, s4                                       // 000000072580: 80020405
	s_addc_u32 s3, s11, 0                                      // 000000072584: 8203800B
	global_load_u16 v9, v2, s[2:3]                             // 000000072588: DC4A0000 09020002
	s_clause 0x2                                               // 000000072590: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000072594: F4080100 F8000038
	s_load_b64 s[2:3], s[0:1], 0x48                            // 00000007259C: F4040080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000725A4: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000725AC: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 0000000725B0: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000725B8: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000725BC: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v5                                 // 0000000725C4: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000725CC: D73C0005 00020283
	v_add3_u32 v1, s2, s14, v0                                 // 0000000725D4: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000725DC: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000725E0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000725E8: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000725EC: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000725F4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000725FC: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000072600: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000072604: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007260C: 40020201
	s_waitcnt vmcnt(2)                                         // 000000072610: BF890BF7
	v_and_b32_e32 v2, 0xffff, v7                               // 000000072614: 36040EFF 0000FFFF
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007261C: BF870001
	v_sub_co_u32 v7, s4, v2, s4                                // 000000072620: D7010407 00000902
	s_waitcnt vmcnt(1)                                         // 000000072628: BF8907F7
	v_and_b32_e32 v10, 0xffff, v8                              // 00000007262C: 361410FF 0000FFFF
	v_sub_co_ci_u32_e64 v8, null, 0, s5, s4                    // 000000072634: D5217C08 00100A80
	s_waitcnt vmcnt(0)                                         // 00000007263C: BF8903F7
	v_and_b32_e32 v2, 0xffff, v9                               // 000000072640: 360412FF 0000FFFF
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000072648: BF870093
	v_sub_co_u32 v9, s4, v10, s6                               // 00000007264C: D7010409 00000D0A
	v_sub_co_ci_u32_e64 v10, null, 0, s7, s4                   // 000000072654: D5217C0A 00100E80
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007265C: BF870093
	v_sub_co_u32 v11, s2, v2, s2                               // 000000072660: D701020B 00000502
	v_sub_co_ci_u32_e64 v12, null, 0, s3, s2                   // 000000072668: D5217C0C 00080680
	s_clause 0x2                                               // 000000072670: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000072674: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 00000007267C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000072684: DC6E0000 007C0B00
	s_nop 0                                                    // 00000007268C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072690: BFB60003
	s_endpgm                                                   // 000000072694: BFB00000
subtract_long_get_local_size_get_global_offset_symend:
	.long 0xbf800000                                           // 000000072698: BF800000
	.long 0xbf800000                                           // 00000007269C: BF800000
	.long 0xbf800000                                           // 0000000726A0: BF800000
	.long 0xbf800000                                           // 0000000726A4: BF800000
	.long 0xbf800000                                           // 0000000726A8: BF800000
	.long 0xbf800000                                           // 0000000726AC: BF800000
	.long 0xbf800000                                           // 0000000726B0: BF800000
	.long 0xbf800000                                           // 0000000726B4: BF800000
	.long 0xbf800000                                           // 0000000726B8: BF800000
	.long 0xbf800000                                           // 0000000726BC: BF800000
	.long 0xbf800000                                           // 0000000726C0: BF800000
	.long 0xbf800000                                           // 0000000726C4: BF800000
	.long 0xbf800000                                           // 0000000726C8: BF800000
	.long 0xbf800000                                           // 0000000726CC: BF800000
	.long 0xbf800000                                           // 0000000726D0: BF800000
	.long 0xbf800000                                           // 0000000726D4: BF800000
	.long 0xbf800000                                           // 0000000726D8: BF800000
	.long 0xbf800000                                           // 0000000726DC: BF800000
	.long 0xbf800000                                           // 0000000726E0: BF800000
	.long 0xbf800000                                           // 0000000726E4: BF800000
	.long 0xbf800000                                           // 0000000726E8: BF800000
	.long 0xbf800000                                           // 0000000726EC: BF800000
	.long 0xbf800000                                           // 0000000726F0: BF800000
	.long 0xbf800000                                           // 0000000726F4: BF800000
	.long 0xbf800000                                           // 0000000726F8: BF800000
	.long 0xbf800000                                           // 0000000726FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_id_get_global_offset,@function
	.size	subtract_long_get_global_id_get_global_offset, subtract_long_get_global_id_get_global_offset_symend-subtract_long_get_global_id_get_global_offset
subtract_long_get_global_id_get_global_offset:
	s_clause 0x2                                               // 000000072700: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072704: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007270C: F4040180 F8000008
	s_load_b64 s[0:1], s[0:1], 0x48                            // 000000072714: F4040000 F8000048
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007271C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000072728: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072730: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000072738: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007273C: BF8700B3
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000072740: D6560001 04050202
	s_lshl_b32 s2, s3, 1                                       // 000000072748: 84028103
	s_lshl_b32 s3, s4, 2                                       // 00000007274C: 84038204
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000072750: D73C0003 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000072758: BF89FC07
	v_add_nc_u32_e32 v6, s8, v1                                // 00000007275C: 4A0C0208
	v_add3_u32 v1, s10, s2, v5                                 // 000000072760: D6550001 0414040A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000072768: BF870213
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000007276C: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000072774: 40080807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000072778: BF870094
	v_sub_co_u32 v5, s2, v6, s8                                // 00000007277C: D7010205 00001106
	v_sub_co_ci_u32_e64 v6, null, 0, s9, s2                    // 000000072784: D5217C06 00081280
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 00000007278C: D73C0007 00020283
	v_sub_co_u32 v9, s2, v1, s10                               // 000000072794: D7010209 00001501
	v_add3_u32 v1, s0, s3, v0                                  // 00000007279C: D6550001 04000600
	v_sub_co_ci_u32_e64 v10, null, 0, s11, s2                  // 0000000727A4: D5217C0A 00081680
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000727AC: BF870194
	v_add_co_u32 v7, vcc_lo, s6, v7                            // 0000000727B0: D7006A07 00020E06
	v_lshlrev_b64 v[11:12], 3, v[1:2]                          // 0000000727B8: D73C000B 00020283
	v_add_co_ci_u32_e32 v8, vcc_lo, s7, v8, vcc_lo             // 0000000727C0: 40101007
	v_sub_co_u32 v0, s0, v1, s0                                // 0000000727C4: D7010000 00000101
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000727CC: BF870211
	v_sub_co_ci_u32_e64 v1, null, 0, s1, s0                    // 0000000727D0: D5217C01 00000280
	v_add_co_u32 v11, vcc_lo, s6, v11                          // 0000000727D8: D7006A0B 00021606
	v_add_co_ci_u32_e32 v12, vcc_lo, s7, v12, vcc_lo           // 0000000727E0: 40181807
	s_clause 0x2                                               // 0000000727E4: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 0000000727E8: DC6E0000 007C0503
	global_store_b64 v[7:8], v[9:10], off                      // 0000000727F0: DC6E0000 007C0907
	global_store_b64 v[11:12], v[0:1], off                     // 0000000727F8: DC6E0000 007C000B
	s_nop 0                                                    // 000000072800: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072804: BFB60003
	s_endpgm                                                   // 000000072808: BFB00000
subtract_long_get_global_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007280C: BF800000
	.long 0xbf800000                                           // 000000072810: BF800000
	.long 0xbf800000                                           // 000000072814: BF800000
	.long 0xbf800000                                           // 000000072818: BF800000
	.long 0xbf800000                                           // 00000007281C: BF800000
	.long 0xbf800000                                           // 000000072820: BF800000
	.long 0xbf800000                                           // 000000072824: BF800000
	.long 0xbf800000                                           // 000000072828: BF800000
	.long 0xbf800000                                           // 00000007282C: BF800000
	.long 0xbf800000                                           // 000000072830: BF800000
	.long 0xbf800000                                           // 000000072834: BF800000
	.long 0xbf800000                                           // 000000072838: BF800000
	.long 0xbf800000                                           // 00000007283C: BF800000
	.long 0xbf800000                                           // 000000072840: BF800000
	.long 0xbf800000                                           // 000000072844: BF800000
	.long 0xbf800000                                           // 000000072848: BF800000
	.long 0xbf800000                                           // 00000007284C: BF800000
	.long 0xbf800000                                           // 000000072850: BF800000
	.long 0xbf800000                                           // 000000072854: BF800000
	.long 0xbf800000                                           // 000000072858: BF800000
	.long 0xbf800000                                           // 00000007285C: BF800000
	.long 0xbf800000                                           // 000000072860: BF800000
	.long 0xbf800000                                           // 000000072864: BF800000
	.long 0xbf800000                                           // 000000072868: BF800000
	.long 0xbf800000                                           // 00000007286C: BF800000
	.long 0xbf800000                                           // 000000072870: BF800000
	.long 0xbf800000                                           // 000000072874: BF800000
	.long 0xbf800000                                           // 000000072878: BF800000
	.long 0xbf800000                                           // 00000007287C: BF800000
	.long 0xbf800000                                           // 000000072880: BF800000
	.long 0xbf800000                                           // 000000072884: BF800000
	.long 0xbf800000                                           // 000000072888: BF800000
	.long 0xbf800000                                           // 00000007288C: BF800000
	.long 0xbf800000                                           // 000000072890: BF800000
	.long 0xbf800000                                           // 000000072894: BF800000
	.long 0xbf800000                                           // 000000072898: BF800000
	.long 0xbf800000                                           // 00000007289C: BF800000
	.long 0xbf800000                                           // 0000000728A0: BF800000
	.long 0xbf800000                                           // 0000000728A4: BF800000
	.long 0xbf800000                                           // 0000000728A8: BF800000
	.long 0xbf800000                                           // 0000000728AC: BF800000
	.long 0xbf800000                                           // 0000000728B0: BF800000
	.long 0xbf800000                                           // 0000000728B4: BF800000
	.long 0xbf800000                                           // 0000000728B8: BF800000
	.long 0xbf800000                                           // 0000000728BC: BF800000
	.long 0xbf800000                                           // 0000000728C0: BF800000
	.long 0xbf800000                                           // 0000000728C4: BF800000
	.long 0xbf800000                                           // 0000000728C8: BF800000
	.long 0xbf800000                                           // 0000000728CC: BF800000
	.long 0xbf800000                                           // 0000000728D0: BF800000
	.long 0xbf800000                                           // 0000000728D4: BF800000
	.long 0xbf800000                                           // 0000000728D8: BF800000
	.long 0xbf800000                                           // 0000000728DC: BF800000
	.long 0xbf800000                                           // 0000000728E0: BF800000
	.long 0xbf800000                                           // 0000000728E4: BF800000
	.long 0xbf800000                                           // 0000000728E8: BF800000
	.long 0xbf800000                                           // 0000000728EC: BF800000
	.long 0xbf800000                                           // 0000000728F0: BF800000
	.long 0xbf800000                                           // 0000000728F4: BF800000
	.long 0xbf800000                                           // 0000000728F8: BF800000
	.long 0xbf800000                                           // 0000000728FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_size_get_global_offset,@function
	.size	subtract_long_get_global_size_get_global_offset, subtract_long_get_global_size_get_global_offset_symend-subtract_long_get_global_size_get_global_offset
subtract_long_get_global_size_get_global_offset:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000072900: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000007290C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000072910: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072918: D6100000 02292900
	s_clause 0x1                                               // 000000072920: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000072924: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007292C: DC4A0026 08000002
	s_clause 0x3                                               // 000000072934: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072938: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000072940: F4080300 F8000010
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000072948: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000072950: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 000000072958: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007295C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000072960: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 000000072968: 84028103
	s_lshl_b32 s3, s4, 1                                       // 00000007296C: 84038104
	s_lshl_b32 s4, s13, 1                                      // 000000072970: 8404810D
	s_lshl_b32 s5, s14, 1                                      // 000000072974: 8405810E
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000072978: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v5                                 // 000000072980: D6550001 0414040A
	s_lshl_b32 s2, s12, 4                                      // 000000072988: 8402840C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007298C: BF870221
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000072990: D73C0005 00020283
	v_add3_u32 v1, s6, s3, v0                                  // 000000072998: D6550001 04000606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000729A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000729A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000729AC: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000729B0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000729B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000729C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000729C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000729CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000729D0: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000729D4: BF8907F7
	v_and_b32_e32 v2, 0xffff, v7                               // 0000000729D8: 36040EFF 0000FFFF
	v_lshrrev_b32_e32 v7, 16, v7                               // 0000000729E0: 320E0E90
	s_waitcnt vmcnt(0)                                         // 0000000729E4: BF8903F7
	v_add_nc_u32_e32 v11, s5, v8                               // 0000000729E8: 4A161005
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000729EC: BF870193
	v_add_nc_u32_e32 v2, s2, v2                                // 0000000729F0: 4A040402
	v_add_nc_u32_e32 v9, s4, v7                                // 0000000729F4: 4A120E04
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000729F8: BF870092
	v_sub_co_u32 v7, s0, v2, s8                                // 0000000729FC: D7010007 00001102
	v_sub_co_ci_u32_e64 v8, null, 0, s9, s0                    // 000000072A04: D5217C08 00001280
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000072A0C: BF870093
	v_sub_co_u32 v9, s0, v9, s10                               // 000000072A10: D7010009 00001509
	v_sub_co_ci_u32_e64 v10, null, 0, s11, s0                  // 000000072A18: D5217C0A 00001680
	v_sub_co_u32 v11, s0, v11, s6                              // 000000072A20: D701000B 00000D0B
	s_delay_alu instid0(VALU_DEP_1)                            // 000000072A28: BF870001
	v_sub_co_ci_u32_e64 v12, null, 0, s7, s0                   // 000000072A2C: D5217C0C 00000E80
	s_clause 0x2                                               // 000000072A34: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000072A38: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000072A40: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000072A48: DC6E0000 007C0B00
	s_nop 0                                                    // 000000072A50: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072A54: BFB60003
	s_endpgm                                                   // 000000072A58: BFB00000
subtract_long_get_global_size_get_global_offset_symend:
	.long 0xbf800000                                           // 000000072A5C: BF800000
	.long 0xbf800000                                           // 000000072A60: BF800000
	.long 0xbf800000                                           // 000000072A64: BF800000
	.long 0xbf800000                                           // 000000072A68: BF800000
	.long 0xbf800000                                           // 000000072A6C: BF800000
	.long 0xbf800000                                           // 000000072A70: BF800000
	.long 0xbf800000                                           // 000000072A74: BF800000
	.long 0xbf800000                                           // 000000072A78: BF800000
	.long 0xbf800000                                           // 000000072A7C: BF800000
	.long 0xbf800000                                           // 000000072A80: BF800000
	.long 0xbf800000                                           // 000000072A84: BF800000
	.long 0xbf800000                                           // 000000072A88: BF800000
	.long 0xbf800000                                           // 000000072A8C: BF800000
	.long 0xbf800000                                           // 000000072A90: BF800000
	.long 0xbf800000                                           // 000000072A94: BF800000
	.long 0xbf800000                                           // 000000072A98: BF800000
	.long 0xbf800000                                           // 000000072A9C: BF800000
	.long 0xbf800000                                           // 000000072AA0: BF800000
	.long 0xbf800000                                           // 000000072AA4: BF800000
	.long 0xbf800000                                           // 000000072AA8: BF800000
	.long 0xbf800000                                           // 000000072AAC: BF800000
	.long 0xbf800000                                           // 000000072AB0: BF800000
	.long 0xbf800000                                           // 000000072AB4: BF800000
	.long 0xbf800000                                           // 000000072AB8: BF800000
	.long 0xbf800000                                           // 000000072ABC: BF800000
	.long 0xbf800000                                           // 000000072AC0: BF800000
	.long 0xbf800000                                           // 000000072AC4: BF800000
	.long 0xbf800000                                           // 000000072AC8: BF800000
	.long 0xbf800000                                           // 000000072ACC: BF800000
	.long 0xbf800000                                           // 000000072AD0: BF800000
	.long 0xbf800000                                           // 000000072AD4: BF800000
	.long 0xbf800000                                           // 000000072AD8: BF800000
	.long 0xbf800000                                           // 000000072ADC: BF800000
	.long 0xbf800000                                           // 000000072AE0: BF800000
	.long 0xbf800000                                           // 000000072AE4: BF800000
	.long 0xbf800000                                           // 000000072AE8: BF800000
	.long 0xbf800000                                           // 000000072AEC: BF800000
	.long 0xbf800000                                           // 000000072AF0: BF800000
	.long 0xbf800000                                           // 000000072AF4: BF800000
	.long 0xbf800000                                           // 000000072AF8: BF800000
	.long 0xbf800000                                           // 000000072AFC: BF800000

	.p2align	8
	.type	subtract_long_get_num_groups_get_global_offset,@function
	.size	subtract_long_get_num_groups_get_global_offset, subtract_long_get_num_groups_get_global_offset_symend-subtract_long_get_num_groups_get_global_offset
subtract_long_get_num_groups_get_global_offset:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000072B00: CA240080 020000FF 000003FF
	s_load_b64 s[16:17], s[0:1], 0x8                           // 000000072B0C: F4040400 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000072B14: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000072B18: D6100005 02291500
	s_clause 0x1                                               // 000000072B20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000072B24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000072B2C: DC4A0026 08000002
	s_clause 0x2                                               // 000000072B34: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072B38: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000072B40: F4040180 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000072B48: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000072B50: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072B54: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000072B5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072B60: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000072B64: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000072B6C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000072B70: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000072B78: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000072B80: 84008204
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000072B84: D73C0005 00020283
	v_add3_u32 v1, s6, s0, v0                                  // 000000072B8C: D6550001 04000006
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000072B94: BF870094
	v_add_co_u32 v3, s1, s16, v3                               // 000000072B98: D7000103 00020610
	v_add_co_ci_u32_e64 v4, s1, s17, v4, s1                    // 000000072BA0: D5200104 00060811
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000072BA8: BF870143
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000072BAC: D73C0000 00020283
	s_waitcnt vmcnt(1)                                         // 000000072BB4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 000000072BB8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000072BBC: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 000000072BC0: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000072BC8: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000072BCC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 000000072BD0: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 000000072BD4: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 000000072BD8: BF078000
	s_addc_u32 s2, s13, 0                                      // 000000072BDC: 8202800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000072BE0: BF07806A
	v_add_co_u32 v5, vcc_lo, s16, v5                           // 000000072BE4: D7006A05 00020A10
	s_addc_u32 s4, s14, 0                                      // 000000072BEC: 8204800E
	s_sub_u32 s0, s1, s8                                       // 000000072BF0: 80800801
	s_subb_u32 s1, 0, s9                                       // 000000072BF4: 82810980
	s_sub_u32 s2, s2, s10                                      // 000000072BF8: 80820A02
	s_subb_u32 s3, 0, s11                                      // 000000072BFC: 82830B80
	v_add_co_ci_u32_e32 v6, vcc_lo, s17, v6, vcc_lo            // 000000072C00: 400C0C11
	v_dual_mov_b32 v8, s1 :: v_dual_mov_b32 v7, s0             // 000000072C04: CA100001 08060000
	s_sub_u32 s0, s4, s6                                       // 000000072C0C: 80800604
	s_subb_u32 s1, 0, s7                                       // 000000072C10: 82810780
	v_add_co_u32 v0, vcc_lo, s16, v0                           // 000000072C14: D7006A00 00020010
	v_dual_mov_b32 v10, s3 :: v_dual_mov_b32 v9, s2            // 000000072C1C: CA100003 0A080002
	v_add_co_ci_u32_e32 v1, vcc_lo, s17, v1, vcc_lo            // 000000072C24: 40020211
	v_dual_mov_b32 v12, s1 :: v_dual_mov_b32 v11, s0           // 000000072C28: CA100001 0C0A0000
	s_clause 0x2                                               // 000000072C30: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000072C34: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000072C3C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000072C44: DC6E0000 007C0B00
	s_nop 0                                                    // 000000072C4C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072C50: BFB60003
	s_endpgm                                                   // 000000072C54: BFB00000
subtract_long_get_num_groups_get_global_offset_symend:
	.long 0xbf800000                                           // 000000072C58: BF800000
	.long 0xbf800000                                           // 000000072C5C: BF800000
	.long 0xbf800000                                           // 000000072C60: BF800000
	.long 0xbf800000                                           // 000000072C64: BF800000
	.long 0xbf800000                                           // 000000072C68: BF800000
	.long 0xbf800000                                           // 000000072C6C: BF800000
	.long 0xbf800000                                           // 000000072C70: BF800000
	.long 0xbf800000                                           // 000000072C74: BF800000
	.long 0xbf800000                                           // 000000072C78: BF800000
	.long 0xbf800000                                           // 000000072C7C: BF800000
	.long 0xbf800000                                           // 000000072C80: BF800000
	.long 0xbf800000                                           // 000000072C84: BF800000
	.long 0xbf800000                                           // 000000072C88: BF800000
	.long 0xbf800000                                           // 000000072C8C: BF800000
	.long 0xbf800000                                           // 000000072C90: BF800000
	.long 0xbf800000                                           // 000000072C94: BF800000
	.long 0xbf800000                                           // 000000072C98: BF800000
	.long 0xbf800000                                           // 000000072C9C: BF800000
	.long 0xbf800000                                           // 000000072CA0: BF800000
	.long 0xbf800000                                           // 000000072CA4: BF800000
	.long 0xbf800000                                           // 000000072CA8: BF800000
	.long 0xbf800000                                           // 000000072CAC: BF800000
	.long 0xbf800000                                           // 000000072CB0: BF800000
	.long 0xbf800000                                           // 000000072CB4: BF800000
	.long 0xbf800000                                           // 000000072CB8: BF800000
	.long 0xbf800000                                           // 000000072CBC: BF800000
	.long 0xbf800000                                           // 000000072CC0: BF800000
	.long 0xbf800000                                           // 000000072CC4: BF800000
	.long 0xbf800000                                           // 000000072CC8: BF800000
	.long 0xbf800000                                           // 000000072CCC: BF800000
	.long 0xbf800000                                           // 000000072CD0: BF800000
	.long 0xbf800000                                           // 000000072CD4: BF800000
	.long 0xbf800000                                           // 000000072CD8: BF800000
	.long 0xbf800000                                           // 000000072CDC: BF800000
	.long 0xbf800000                                           // 000000072CE0: BF800000
	.long 0xbf800000                                           // 000000072CE4: BF800000
	.long 0xbf800000                                           // 000000072CE8: BF800000
	.long 0xbf800000                                           // 000000072CEC: BF800000
	.long 0xbf800000                                           // 000000072CF0: BF800000
	.long 0xbf800000                                           // 000000072CF4: BF800000
	.long 0xbf800000                                           // 000000072CF8: BF800000
	.long 0xbf800000                                           // 000000072CFC: BF800000

	.p2align	8
	.type	subtract_long_get_work_dim_get_global_offset,@function
	.size	subtract_long_get_work_dim_get_global_offset, subtract_long_get_work_dim_get_global_offset_symend-subtract_long_get_work_dim_get_global_offset
subtract_long_get_work_dim_get_global_offset:
	s_clause 0x3                                               // 000000072D00: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000072D04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072D0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000072D14: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000072D1C: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000072D24: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000072D30: 84028102
	v_bfe_u32 v7, v0, 10, 10                                   // 000000072D34: D6100007 02291500
	s_lshl_b32 s12, s3, 1                                      // 000000072D3C: 840C8103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000072D40: D6100000 02292900
	s_lshl_b32 s13, s4, 2                                      // 000000072D48: 840D8204
	s_mov_b32 s33, 0                                           // 000000072D4C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072D50: BF89FC07
	s_and_b32 s14, s5, 0xffff                                  // 000000072D54: 8B0EFF05 0000FFFF
	v_add3_u32 v1, s8, s2, v1                                  // 000000072D5C: D6550001 04040408
	s_sub_u32 s2, s14, s8                                      // 000000072D64: 8082080E
	s_subb_u32 s3, 0, s9                                       // 000000072D68: 82830980
	s_sub_u32 s4, s14, s10                                     // 000000072D6C: 80840A0E
	s_subb_u32 s5, 0, s11                                      // 000000072D70: 82850B80
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000072D74: D73C0003 00020283
	v_add3_u32 v1, s10, s12, v7                                // 000000072D7C: D6550001 041C180A
	v_dual_mov_b32 v6, s3 :: v_dual_mov_b32 v5, s2             // 000000072D84: CA100003 06040002
	s_sub_u32 s2, s14, s6                                      // 000000072D8C: 8082060E
	s_subb_u32 s3, 0, s7                                       // 000000072D90: 82830780
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000072D94: BF8701C2
	v_lshlrev_b64 v[9:10], 3, v[1:2]                           // 000000072D98: D73C0009 00020283
	v_add3_u32 v1, s6, s13, v0                                 // 000000072DA0: D6550001 04001A06
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000072DA8: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000072DB0: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000072DB4: D73C0000 00020283
	v_add_co_u32 v9, vcc_lo, s0, v9                            // 000000072DBC: D7006A09 00021200
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v10, vcc_lo           // 000000072DC4: 40141401
	v_dual_mov_b32 v8, s5 :: v_dual_mov_b32 v7, s4             // 000000072DC8: CA100005 08060004
	s_delay_alu instid0(VALU_DEP_4)                            // 000000072DD0: BF870004
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000072DD4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000072DDC: 40020201
	v_dual_mov_b32 v12, s3 :: v_dual_mov_b32 v11, s2           // 000000072DE0: CA100003 0C0A0002
	s_clause 0x2                                               // 000000072DE8: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 000000072DEC: DC6E0000 007C0503
	global_store_b64 v[9:10], v[7:8], off                      // 000000072DF4: DC6E0000 007C0709
	global_store_b64 v[0:1], v[11:12], off                     // 000000072DFC: DC6E0000 007C0B00
	s_nop 0                                                    // 000000072E04: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000072E08: BFB60003
	s_endpgm                                                   // 000000072E0C: BFB00000
subtract_long_get_work_dim_get_global_offset_symend:
	.long 0xbf800000                                           // 000000072E10: BF800000
	.long 0xbf800000                                           // 000000072E14: BF800000
	.long 0xbf800000                                           // 000000072E18: BF800000
	.long 0xbf800000                                           // 000000072E1C: BF800000
	.long 0xbf800000                                           // 000000072E20: BF800000
	.long 0xbf800000                                           // 000000072E24: BF800000
	.long 0xbf800000                                           // 000000072E28: BF800000
	.long 0xbf800000                                           // 000000072E2C: BF800000
	.long 0xbf800000                                           // 000000072E30: BF800000
	.long 0xbf800000                                           // 000000072E34: BF800000
	.long 0xbf800000                                           // 000000072E38: BF800000
	.long 0xbf800000                                           // 000000072E3C: BF800000
	.long 0xbf800000                                           // 000000072E40: BF800000
	.long 0xbf800000                                           // 000000072E44: BF800000
	.long 0xbf800000                                           // 000000072E48: BF800000
	.long 0xbf800000                                           // 000000072E4C: BF800000
	.long 0xbf800000                                           // 000000072E50: BF800000
	.long 0xbf800000                                           // 000000072E54: BF800000
	.long 0xbf800000                                           // 000000072E58: BF800000
	.long 0xbf800000                                           // 000000072E5C: BF800000
	.long 0xbf800000                                           // 000000072E60: BF800000
	.long 0xbf800000                                           // 000000072E64: BF800000
	.long 0xbf800000                                           // 000000072E68: BF800000
	.long 0xbf800000                                           // 000000072E6C: BF800000
	.long 0xbf800000                                           // 000000072E70: BF800000
	.long 0xbf800000                                           // 000000072E74: BF800000
	.long 0xbf800000                                           // 000000072E78: BF800000
	.long 0xbf800000                                           // 000000072E7C: BF800000
	.long 0xbf800000                                           // 000000072E80: BF800000
	.long 0xbf800000                                           // 000000072E84: BF800000
	.long 0xbf800000                                           // 000000072E88: BF800000
	.long 0xbf800000                                           // 000000072E8C: BF800000
	.long 0xbf800000                                           // 000000072E90: BF800000
	.long 0xbf800000                                           // 000000072E94: BF800000
	.long 0xbf800000                                           // 000000072E98: BF800000
	.long 0xbf800000                                           // 000000072E9C: BF800000
	.long 0xbf800000                                           // 000000072EA0: BF800000
	.long 0xbf800000                                           // 000000072EA4: BF800000
	.long 0xbf800000                                           // 000000072EA8: BF800000
	.long 0xbf800000                                           // 000000072EAC: BF800000
	.long 0xbf800000                                           // 000000072EB0: BF800000
	.long 0xbf800000                                           // 000000072EB4: BF800000
	.long 0xbf800000                                           // 000000072EB8: BF800000
	.long 0xbf800000                                           // 000000072EBC: BF800000
	.long 0xbf800000                                           // 000000072EC0: BF800000
	.long 0xbf800000                                           // 000000072EC4: BF800000
	.long 0xbf800000                                           // 000000072EC8: BF800000
	.long 0xbf800000                                           // 000000072ECC: BF800000
	.long 0xbf800000                                           // 000000072ED0: BF800000
	.long 0xbf800000                                           // 000000072ED4: BF800000
	.long 0xbf800000                                           // 000000072ED8: BF800000
	.long 0xbf800000                                           // 000000072EDC: BF800000
	.long 0xbf800000                                           // 000000072EE0: BF800000
	.long 0xbf800000                                           // 000000072EE4: BF800000
	.long 0xbf800000                                           // 000000072EE8: BF800000
	.long 0xbf800000                                           // 000000072EEC: BF800000
	.long 0xbf800000                                           // 000000072EF0: BF800000
	.long 0xbf800000                                           // 000000072EF4: BF800000
	.long 0xbf800000                                           // 000000072EF8: BF800000
	.long 0xbf800000                                           // 000000072EFC: BF800000

	.p2align	8
	.type	subtract_long_x_get_local_id,@function
	.size	subtract_long_x_get_local_id, subtract_long_x_get_local_id_symend-subtract_long_x_get_local_id
subtract_long_x_get_local_id:
	s_clause 0x3                                               // 000000072F00: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 000000072F04: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000072F0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], null                            // 000000072F14: F4040180 F8000000
	s_load_b32 s0, s[0:1], 0x48                                // 000000072F1C: F4000000 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000072F24: CA240080 010200FF 000003FF
	s_lshl_b32 s1, s2, 4                                       // 000000072F30: 84018402
	v_bfe_u32 v6, v0, 10, 10                                   // 000000072F34: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000072F3C: D610000A 02292900
	s_lshl_b32 s2, s3, 1                                       // 000000072F44: 84028103
	s_lshl_b32 s3, s4, 1                                       // 000000072F48: 84038104
	s_mov_b32 s33, 0                                           // 000000072F4C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000072F50: BF89FC07
	s_ashr_i32 s4, s5, 31                                      // 000000072F54: 86049F05
	v_add3_u32 v0, s8, s1, v2                                  // 000000072F58: D6550000 04080208
	v_sub_co_u32 v2, s1, s5, v2                                // 000000072F60: D7010102 00020405
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072F68: BF870191
	v_sub_co_ci_u32_e64 v3, null, s4, 0, s1                    // 000000072F6C: D5217C03 00050004
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000072F74: D73C0004 00020083
	v_add3_u32 v0, s10, s2, v6                                 // 000000072F7C: D6550000 0418040A
	v_sub_co_u32 v6, s1, s5, v6                                // 000000072F84: D7010106 00020C05
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000072F8C: BF870191
	v_sub_co_ci_u32_e64 v7, null, s4, 0, s1                    // 000000072F90: D5217C07 00050004
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000072F98: D73C0008 00020083
	v_add3_u32 v0, s0, s3, v10                                 // 000000072FA0: D6550000 04280600
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000072FA8: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000072FB0: 400A0A07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 000000072FB4: BF870243
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000072FB8: D73C0000 00020083
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 000000072FC0: D7006A08 00021006
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 000000072FC8: 40121207
	v_sub_co_u32 v10, s0, s5, v10                              // 000000072FCC: D701000A 00021405
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000072FD4: D7006A00 00020006
	v_sub_co_ci_u32_e64 v11, null, s4, 0, s0                   // 000000072FDC: D5217C0B 00010004
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000072FE4: 40020207
	s_clause 0x2                                               // 000000072FE8: BF850002
	global_store_b64 v[4:5], v[2:3], off                       // 000000072FEC: DC6E0000 007C0204
	global_store_b64 v[8:9], v[6:7], off                       // 000000072FF4: DC6E0000 007C0608
	global_store_b64 v[0:1], v[10:11], off                     // 000000072FFC: DC6E0000 007C0A00
	s_nop 0                                                    // 000000073004: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073008: BFB60003
	s_endpgm                                                   // 00000007300C: BFB00000
subtract_long_x_get_local_id_symend:
	.long 0xbf800000                                           // 000000073010: BF800000
	.long 0xbf800000                                           // 000000073014: BF800000
	.long 0xbf800000                                           // 000000073018: BF800000
	.long 0xbf800000                                           // 00000007301C: BF800000
	.long 0xbf800000                                           // 000000073020: BF800000
	.long 0xbf800000                                           // 000000073024: BF800000
	.long 0xbf800000                                           // 000000073028: BF800000
	.long 0xbf800000                                           // 00000007302C: BF800000
	.long 0xbf800000                                           // 000000073030: BF800000
	.long 0xbf800000                                           // 000000073034: BF800000
	.long 0xbf800000                                           // 000000073038: BF800000
	.long 0xbf800000                                           // 00000007303C: BF800000
	.long 0xbf800000                                           // 000000073040: BF800000
	.long 0xbf800000                                           // 000000073044: BF800000
	.long 0xbf800000                                           // 000000073048: BF800000
	.long 0xbf800000                                           // 00000007304C: BF800000
	.long 0xbf800000                                           // 000000073050: BF800000
	.long 0xbf800000                                           // 000000073054: BF800000
	.long 0xbf800000                                           // 000000073058: BF800000
	.long 0xbf800000                                           // 00000007305C: BF800000
	.long 0xbf800000                                           // 000000073060: BF800000
	.long 0xbf800000                                           // 000000073064: BF800000
	.long 0xbf800000                                           // 000000073068: BF800000
	.long 0xbf800000                                           // 00000007306C: BF800000
	.long 0xbf800000                                           // 000000073070: BF800000
	.long 0xbf800000                                           // 000000073074: BF800000
	.long 0xbf800000                                           // 000000073078: BF800000
	.long 0xbf800000                                           // 00000007307C: BF800000
	.long 0xbf800000                                           // 000000073080: BF800000
	.long 0xbf800000                                           // 000000073084: BF800000
	.long 0xbf800000                                           // 000000073088: BF800000
	.long 0xbf800000                                           // 00000007308C: BF800000
	.long 0xbf800000                                           // 000000073090: BF800000
	.long 0xbf800000                                           // 000000073094: BF800000
	.long 0xbf800000                                           // 000000073098: BF800000
	.long 0xbf800000                                           // 00000007309C: BF800000
	.long 0xbf800000                                           // 0000000730A0: BF800000
	.long 0xbf800000                                           // 0000000730A4: BF800000
	.long 0xbf800000                                           // 0000000730A8: BF800000
	.long 0xbf800000                                           // 0000000730AC: BF800000
	.long 0xbf800000                                           // 0000000730B0: BF800000
	.long 0xbf800000                                           // 0000000730B4: BF800000
	.long 0xbf800000                                           // 0000000730B8: BF800000
	.long 0xbf800000                                           // 0000000730BC: BF800000
	.long 0xbf800000                                           // 0000000730C0: BF800000
	.long 0xbf800000                                           // 0000000730C4: BF800000
	.long 0xbf800000                                           // 0000000730C8: BF800000
	.long 0xbf800000                                           // 0000000730CC: BF800000
	.long 0xbf800000                                           // 0000000730D0: BF800000
	.long 0xbf800000                                           // 0000000730D4: BF800000
	.long 0xbf800000                                           // 0000000730D8: BF800000
	.long 0xbf800000                                           // 0000000730DC: BF800000
	.long 0xbf800000                                           // 0000000730E0: BF800000
	.long 0xbf800000                                           // 0000000730E4: BF800000
	.long 0xbf800000                                           // 0000000730E8: BF800000
	.long 0xbf800000                                           // 0000000730EC: BF800000
	.long 0xbf800000                                           // 0000000730F0: BF800000
	.long 0xbf800000                                           // 0000000730F4: BF800000
	.long 0xbf800000                                           // 0000000730F8: BF800000
	.long 0xbf800000                                           // 0000000730FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_offset_get_local_id,@function
	.size	subtract_long_get_global_offset_get_local_id, subtract_long_get_global_offset_get_local_id_symend-subtract_long_get_global_offset_get_local_id
subtract_long_get_global_offset_get_local_id:
	s_clause 0x2                                               // 000000073100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073104: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007310C: F4040180 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 000000073114: F4000000 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007311C: CA240080 010400FF 000003FF
	s_lshl_b32 s1, s2, 1                                       // 000000073128: 84018102
	v_bfe_u32 v8, v0, 10, 10                                   // 00000007312C: D6100008 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 000000073134: D610000C 02292900
	s_lshl_b32 s2, s3, 4                                       // 00000007313C: 84028403
	s_lshl_b32 s3, s4, 1                                       // 000000073140: 84038104
	s_mov_b32 s33, 0                                           // 000000073144: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000073148: BF89FC07
	v_add3_u32 v0, s8, s1, v4                                  // 00000007314C: D6550000 04100208
	v_sub_co_u32 v2, s4, s8, v4                                // 000000073154: D7010402 00020808
	v_sub_co_u32 v4, s1, s10, v8                               // 00000007315C: D7010104 0002100A
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000073164: BF8701C3
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 000000073168: D73C0006 00020083
	v_add3_u32 v0, s10, s2, v8                                 // 000000073170: D6550000 0420040A
	v_sub_co_ci_u32_e64 v3, null, 0, 0, s4                     // 000000073178: D5217C03 00110080
	v_sub_co_ci_u32_e64 v5, null, 0, 0, s1                     // 000000073180: D5217C05 00050080
	v_lshlrev_b64 v[10:11], 3, v[0:1]                          // 000000073188: D73C000A 00020083
	v_add3_u32 v0, s0, s3, v12                                 // 000000073190: D6550000 04300600
	v_add_co_u32 v6, vcc_lo, s6, v6                            // 000000073198: D7006A06 00020C06
	v_add_co_ci_u32_e32 v7, vcc_lo, s7, v7, vcc_lo             // 0000000731A0: 400E0E07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 0000000731A4: BF870243
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000731A8: D73C0000 00020083
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 0000000731B0: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 0000000731B8: 40161607
	v_sub_co_u32 v8, s1, s0, v12                               // 0000000731BC: D7010108 00021800
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000731C4: D7006A00 00020006
	v_sub_co_ci_u32_e64 v9, null, 0, 0, s1                     // 0000000731CC: D5217C09 00050080
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000731D4: 40020207
	s_clause 0x2                                               // 0000000731D8: BF850002
	global_store_b64 v[6:7], v[2:3], off                       // 0000000731DC: DC6E0000 007C0206
	global_store_b64 v[10:11], v[4:5], off                     // 0000000731E4: DC6E0000 007C040A
	global_store_b64 v[0:1], v[8:9], off                       // 0000000731EC: DC6E0000 007C0800
	s_nop 0                                                    // 0000000731F4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000731F8: BFB60003
	s_endpgm                                                   // 0000000731FC: BFB00000
subtract_long_get_global_offset_get_local_id_symend:

	.p2align	8
	.type	subtract_long_get_local_id_get_local_id,@function
	.size	subtract_long_get_local_id_get_local_id, subtract_long_get_local_id_get_local_id_symend-subtract_long_get_local_id_get_local_id
subtract_long_get_local_id_get_local_id:
	s_clause 0x2                                               // 000000073200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007320C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000073214: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007321C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000073228: 84028302
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007322C: D6100005 02291500
	s_lshl_b32 s3, s3, 2                                       // 000000073234: 84038203
	v_bfe_u32 v0, v0, 20, 10                                   // 000000073238: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000073240: 84048104
	s_mov_b32 s33, 0                                           // 000000073244: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000073248: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000007324C: D6550001 04040408
	s_mov_b32 s2, 0                                            // 000000073254: BE820080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 000000073258: BF8704B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007325C: D73C0003 00020283
	v_add3_u32 v1, s10, s3, v5                                 // 000000073264: D6550001 0414060A
	s_mov_b32 s3, s2                                           // 00000007326C: BE830002
	v_dual_mov_b32 v6, s3 :: v_dual_mov_b32 v5, s2             // 000000073270: CA100003 06040002
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000073278: BF8701C2
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 00000007327C: D73C0007 00020283
	v_add3_u32 v1, s5, s4, v0                                  // 000000073284: D6550001 04000805
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000007328C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000073294: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000073298: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 0000000732A0: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 0000000732A8: 40101001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000732AC: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000732B0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000732B8: 40020201
	s_clause 0x2                                               // 0000000732BC: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 0000000732C0: DC6E0000 007C0503
	global_store_b64 v[7:8], v[5:6], off                       // 0000000732C8: DC6E0000 007C0507
	global_store_b64 v[0:1], v[5:6], off                       // 0000000732D0: DC6E0000 007C0500
	s_nop 0                                                    // 0000000732D8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000732DC: BFB60003
	s_endpgm                                                   // 0000000732E0: BFB00000
subtract_long_get_local_id_get_local_id_symend:
	.long 0xbf800000                                           // 0000000732E4: BF800000
	.long 0xbf800000                                           // 0000000732E8: BF800000
	.long 0xbf800000                                           // 0000000732EC: BF800000
	.long 0xbf800000                                           // 0000000732F0: BF800000
	.long 0xbf800000                                           // 0000000732F4: BF800000
	.long 0xbf800000                                           // 0000000732F8: BF800000
	.long 0xbf800000                                           // 0000000732FC: BF800000

	.p2align	8
	.type	subtract_long_get_group_id_get_local_id,@function
	.size	subtract_long_get_group_id_get_local_id, subtract_long_get_group_id_get_local_id_symend-subtract_long_get_group_id_get_local_id
subtract_long_get_group_id_get_local_id:
	s_clause 0x2                                               // 000000073300: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073304: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007330C: F4040180 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 000000073314: F4000000 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007331C: CA240080 010400FF 000003FF
	s_lshl_b32 s5, s2, 1                                       // 000000073328: 84058102
	v_bfe_u32 v8, v0, 10, 10                                   // 00000007332C: D6100008 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 000000073334: D610000C 02292900
	s_lshl_b32 s1, s3, 4                                       // 00000007333C: 84018403
	s_waitcnt lgkmcnt(0)                                       // 000000073340: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 000000073344: 84098104
	v_sub_co_u32 v2, s2, s2, v4                                // 000000073348: D7010202 00020802
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000073350: BF8700C1
	v_sub_co_ci_u32_e64 v3, null, 0, 0, s2                     // 000000073354: D5217C03 00090080
	s_mov_b32 s33, 0                                           // 00000007335C: BEA10080
	v_add3_u32 v0, s8, s5, v4                                  // 000000073360: D6550000 04100A08
	v_sub_co_u32 v4, s2, s3, v8                                // 000000073368: D7010204 00021003
	v_sub_co_ci_u32_e64 v5, null, 0, 0, s2                     // 000000073370: D5217C05 00090080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000073378: BF8700B3
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 00000007337C: D73C0006 00020083
	v_add3_u32 v0, s10, s1, v8                                 // 000000073384: D6550000 0420020A
	v_sub_co_u32 v8, s1, s4, v12                               // 00000007338C: D7010108 00021804
	v_sub_co_ci_u32_e64 v9, null, 0, 0, s1                     // 000000073394: D5217C09 00050080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000007339C: BF8701C3
	v_lshlrev_b64 v[10:11], 3, v[0:1]                          // 0000000733A0: D73C000A 00020083
	v_add3_u32 v0, s0, s9, v12                                 // 0000000733A8: D6550000 04301200
	v_add_co_u32 v6, vcc_lo, s6, v6                            // 0000000733B0: D7006A06 00020C06
	v_add_co_ci_u32_e32 v7, vcc_lo, s7, v7, vcc_lo             // 0000000733B8: 400E0E07
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000733BC: D73C0000 00020083
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 0000000733C4: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 0000000733CC: 40161607
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000733D0: BF870213
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000733D4: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000733DC: 40020207
	s_clause 0x2                                               // 0000000733E0: BF850002
	global_store_b64 v[6:7], v[2:3], off                       // 0000000733E4: DC6E0000 007C0206
	global_store_b64 v[10:11], v[4:5], off                     // 0000000733EC: DC6E0000 007C040A
	global_store_b64 v[0:1], v[8:9], off                       // 0000000733F4: DC6E0000 007C0800
	s_nop 0                                                    // 0000000733FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073400: BFB60003
	s_endpgm                                                   // 000000073404: BFB00000
subtract_long_get_group_id_get_local_id_symend:
	.long 0xbf800000                                           // 000000073408: BF800000
	.long 0xbf800000                                           // 00000007340C: BF800000
	.long 0xbf800000                                           // 000000073410: BF800000
	.long 0xbf800000                                           // 000000073414: BF800000
	.long 0xbf800000                                           // 000000073418: BF800000
	.long 0xbf800000                                           // 00000007341C: BF800000
	.long 0xbf800000                                           // 000000073420: BF800000
	.long 0xbf800000                                           // 000000073424: BF800000
	.long 0xbf800000                                           // 000000073428: BF800000
	.long 0xbf800000                                           // 00000007342C: BF800000
	.long 0xbf800000                                           // 000000073430: BF800000
	.long 0xbf800000                                           // 000000073434: BF800000
	.long 0xbf800000                                           // 000000073438: BF800000
	.long 0xbf800000                                           // 00000007343C: BF800000
	.long 0xbf800000                                           // 000000073440: BF800000
	.long 0xbf800000                                           // 000000073444: BF800000
	.long 0xbf800000                                           // 000000073448: BF800000
	.long 0xbf800000                                           // 00000007344C: BF800000
	.long 0xbf800000                                           // 000000073450: BF800000
	.long 0xbf800000                                           // 000000073454: BF800000
	.long 0xbf800000                                           // 000000073458: BF800000
	.long 0xbf800000                                           // 00000007345C: BF800000
	.long 0xbf800000                                           // 000000073460: BF800000
	.long 0xbf800000                                           // 000000073464: BF800000
	.long 0xbf800000                                           // 000000073468: BF800000
	.long 0xbf800000                                           // 00000007346C: BF800000
	.long 0xbf800000                                           // 000000073470: BF800000
	.long 0xbf800000                                           // 000000073474: BF800000
	.long 0xbf800000                                           // 000000073478: BF800000
	.long 0xbf800000                                           // 00000007347C: BF800000
	.long 0xbf800000                                           // 000000073480: BF800000
	.long 0xbf800000                                           // 000000073484: BF800000
	.long 0xbf800000                                           // 000000073488: BF800000
	.long 0xbf800000                                           // 00000007348C: BF800000
	.long 0xbf800000                                           // 000000073490: BF800000
	.long 0xbf800000                                           // 000000073494: BF800000
	.long 0xbf800000                                           // 000000073498: BF800000
	.long 0xbf800000                                           // 00000007349C: BF800000
	.long 0xbf800000                                           // 0000000734A0: BF800000
	.long 0xbf800000                                           // 0000000734A4: BF800000
	.long 0xbf800000                                           // 0000000734A8: BF800000
	.long 0xbf800000                                           // 0000000734AC: BF800000
	.long 0xbf800000                                           // 0000000734B0: BF800000
	.long 0xbf800000                                           // 0000000734B4: BF800000
	.long 0xbf800000                                           // 0000000734B8: BF800000
	.long 0xbf800000                                           // 0000000734BC: BF800000
	.long 0xbf800000                                           // 0000000734C0: BF800000
	.long 0xbf800000                                           // 0000000734C4: BF800000
	.long 0xbf800000                                           // 0000000734C8: BF800000
	.long 0xbf800000                                           // 0000000734CC: BF800000
	.long 0xbf800000                                           // 0000000734D0: BF800000
	.long 0xbf800000                                           // 0000000734D4: BF800000
	.long 0xbf800000                                           // 0000000734D8: BF800000
	.long 0xbf800000                                           // 0000000734DC: BF800000
	.long 0xbf800000                                           // 0000000734E0: BF800000
	.long 0xbf800000                                           // 0000000734E4: BF800000
	.long 0xbf800000                                           // 0000000734E8: BF800000
	.long 0xbf800000                                           // 0000000734EC: BF800000
	.long 0xbf800000                                           // 0000000734F0: BF800000
	.long 0xbf800000                                           // 0000000734F4: BF800000
	.long 0xbf800000                                           // 0000000734F8: BF800000
	.long 0xbf800000                                           // 0000000734FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_size_get_local_id,@function
	.size	subtract_long_get_local_size_get_local_id, subtract_long_get_local_size_get_local_id_symend-subtract_long_get_local_size_get_local_id
subtract_long_get_local_size_get_local_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000073500: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000073508: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007350C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000073510: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000073514: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000073518: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000007351C: 840E8204
	v_mov_b32_e32 v2, 0                                        // 000000073520: 7E040280
	v_and_b32_e32 v10, 0x3ff, v0                               // 000000073524: 361400FF 000003FF
	v_bfe_u32 v11, v0, 10, 10                                  // 00000007352C: D610000B 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 000000073534: D610000C 02292900
	s_mov_b32 s33, 0                                           // 00000007353C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000073540: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000073544: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000073548: BF8704D9
	s_add_u32 s6, s5, s2                                       // 00000007354C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000073550: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000073554: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 000000073558: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 000000073560: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000073564: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000073568: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007356C: BF0A0A04
	global_load_u16 v8, v2, s[2:3]                             // 000000073570: DC4A0000 08020002
	s_cselect_b32 s2, 16, 22                                   // 000000073578: 98029690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007357C: BF870009
	s_add_u32 s2, s5, s2                                       // 000000073580: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000073584: 8203800B
	s_waitcnt vmcnt(0)                                         // 000000073588: BF8903F7
	v_and_b32_e32 v13, 0xffff, v8                              // 00000007358C: 361A10FF 0000FFFF
	global_load_u16 v9, v2, s[2:3]                             // 000000073594: DC4A0000 09020002
	s_clause 0x2                                               // 00000007359C: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 0000000735A0: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 0000000735A8: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000735B0: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000735B8: BF89FC07
	v_add3_u32 v1, s4, s12, v10                                // 0000000735BC: D6550001 04281804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000735C4: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000735C8: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v11                                // 0000000735D0: D6550001 042C1A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000735D8: D73C0005 00020283
	v_add3_u32 v1, s2, s14, v12                                // 0000000735E0: D6550001 04301C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000735E8: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000735EC: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000735F4: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000735F8: D73C0000 00020283
	v_and_b32_e32 v2, 0xffff, v7                               // 000000073600: 36040EFF 0000FFFF
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000073608: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000073610: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000073614: BF870093
	v_sub_co_u32 v7, s2, v2, v10                               // 000000073618: D7010207 00021502
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s2                     // 000000073620: D5217C08 00090080
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000073628: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000073630: 40020201
	s_waitcnt vmcnt(0)                                         // 000000073634: BF8903F7
	v_and_b32_e32 v2, 0xffff, v9                               // 000000073638: 360412FF 0000FFFF
	v_sub_co_u32 v9, s2, v13, v11                              // 000000073640: D7010209 0002170D
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073648: BF870191
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s2                    // 00000007364C: D5217C0A 00090080
	v_sub_co_u32 v11, s2, v2, v12                              // 000000073654: D701020B 00021902
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007365C: BF870001
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s2                    // 000000073660: D5217C0C 00090080
	s_clause 0x2                                               // 000000073668: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 00000007366C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000073674: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 00000007367C: DC6E0000 007C0B00
	s_nop 0                                                    // 000000073684: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073688: BFB60003
	s_endpgm                                                   // 00000007368C: BFB00000
subtract_long_get_local_size_get_local_id_symend:
	.long 0xbf800000                                           // 000000073690: BF800000
	.long 0xbf800000                                           // 000000073694: BF800000
	.long 0xbf800000                                           // 000000073698: BF800000
	.long 0xbf800000                                           // 00000007369C: BF800000
	.long 0xbf800000                                           // 0000000736A0: BF800000
	.long 0xbf800000                                           // 0000000736A4: BF800000
	.long 0xbf800000                                           // 0000000736A8: BF800000
	.long 0xbf800000                                           // 0000000736AC: BF800000
	.long 0xbf800000                                           // 0000000736B0: BF800000
	.long 0xbf800000                                           // 0000000736B4: BF800000
	.long 0xbf800000                                           // 0000000736B8: BF800000
	.long 0xbf800000                                           // 0000000736BC: BF800000
	.long 0xbf800000                                           // 0000000736C0: BF800000
	.long 0xbf800000                                           // 0000000736C4: BF800000
	.long 0xbf800000                                           // 0000000736C8: BF800000
	.long 0xbf800000                                           // 0000000736CC: BF800000
	.long 0xbf800000                                           // 0000000736D0: BF800000
	.long 0xbf800000                                           // 0000000736D4: BF800000
	.long 0xbf800000                                           // 0000000736D8: BF800000
	.long 0xbf800000                                           // 0000000736DC: BF800000
	.long 0xbf800000                                           // 0000000736E0: BF800000
	.long 0xbf800000                                           // 0000000736E4: BF800000
	.long 0xbf800000                                           // 0000000736E8: BF800000
	.long 0xbf800000                                           // 0000000736EC: BF800000
	.long 0xbf800000                                           // 0000000736F0: BF800000
	.long 0xbf800000                                           // 0000000736F4: BF800000
	.long 0xbf800000                                           // 0000000736F8: BF800000
	.long 0xbf800000                                           // 0000000736FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_id_get_local_id,@function
	.size	subtract_long_get_global_id_get_local_id, subtract_long_get_global_id_get_local_id_symend-subtract_long_get_global_id_get_local_id
subtract_long_get_global_id_get_local_id:
	s_clause 0x2                                               // 000000073700: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073704: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007370C: F4040180 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 000000073714: F4000000 F8000048
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v5, 0x3ff, v0       // 00000007371C: CA240080 020400FF 000003FF
	v_bfe_u32 v9, v0, 10, 10                                   // 000000073728: D6100009 02291500
	s_lshl_b32 s1, s3, 1                                       // 000000073730: 84018103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000073734: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007373C: BF8700B3
	v_lshl_or_b32 v1, s2, 1, v5                                // 000000073740: D6560001 04150202
	s_lshl_b32 s2, s4, 2                                       // 000000073748: 84028204
	s_mov_b32 s33, 0                                           // 00000007374C: BEA10080
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000073750: D73C0003 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000073758: BF89FC07
	v_add_nc_u32_e32 v6, s8, v1                                // 00000007375C: 4A0C0208
	v_add3_u32 v1, s10, s1, v9                                 // 000000073760: D6550001 0424020A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000073768: BF870213
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 00000007376C: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000073774: 40080807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000073778: BF870094
	v_sub_co_u32 v5, s1, v6, v5                                // 00000007377C: D7010105 00020B06
	v_sub_co_ci_u32_e64 v6, null, 0, 0, s1                     // 000000073784: D5217C06 00050080
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 00000007378C: D73C0007 00020283
	v_sub_co_u32 v9, s1, v1, v9                                // 000000073794: D7010109 00021301
	v_add3_u32 v1, s0, s2, v0                                  // 00000007379C: D6550001 04000400
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s1                    // 0000000737A4: D5217C0A 00050080
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000737AC: BF870194
	v_add_co_u32 v7, vcc_lo, s6, v7                            // 0000000737B0: D7006A07 00020E06
	v_lshlrev_b64 v[11:12], 3, v[1:2]                          // 0000000737B8: D73C000B 00020283
	v_add_co_ci_u32_e32 v8, vcc_lo, s7, v8, vcc_lo             // 0000000737C0: 40101007
	v_sub_co_u32 v0, s0, v1, v0                                // 0000000737C4: D7010000 00020101
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000737CC: BF870211
	v_sub_co_ci_u32_e64 v1, null, 0, 0, s0                     // 0000000737D0: D5217C01 00010080
	v_add_co_u32 v11, vcc_lo, s6, v11                          // 0000000737D8: D7006A0B 00021606
	v_add_co_ci_u32_e32 v12, vcc_lo, s7, v12, vcc_lo           // 0000000737E0: 40181807
	s_clause 0x2                                               // 0000000737E4: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 0000000737E8: DC6E0000 007C0503
	global_store_b64 v[7:8], v[9:10], off                      // 0000000737F0: DC6E0000 007C0907
	global_store_b64 v[11:12], v[0:1], off                     // 0000000737F8: DC6E0000 007C000B
	s_nop 0                                                    // 000000073800: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073804: BFB60003
	s_endpgm                                                   // 000000073808: BFB00000
subtract_long_get_global_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000007380C: BF800000
	.long 0xbf800000                                           // 000000073810: BF800000
	.long 0xbf800000                                           // 000000073814: BF800000
	.long 0xbf800000                                           // 000000073818: BF800000
	.long 0xbf800000                                           // 00000007381C: BF800000
	.long 0xbf800000                                           // 000000073820: BF800000
	.long 0xbf800000                                           // 000000073824: BF800000
	.long 0xbf800000                                           // 000000073828: BF800000
	.long 0xbf800000                                           // 00000007382C: BF800000
	.long 0xbf800000                                           // 000000073830: BF800000
	.long 0xbf800000                                           // 000000073834: BF800000
	.long 0xbf800000                                           // 000000073838: BF800000
	.long 0xbf800000                                           // 00000007383C: BF800000
	.long 0xbf800000                                           // 000000073840: BF800000
	.long 0xbf800000                                           // 000000073844: BF800000
	.long 0xbf800000                                           // 000000073848: BF800000
	.long 0xbf800000                                           // 00000007384C: BF800000
	.long 0xbf800000                                           // 000000073850: BF800000
	.long 0xbf800000                                           // 000000073854: BF800000
	.long 0xbf800000                                           // 000000073858: BF800000
	.long 0xbf800000                                           // 00000007385C: BF800000
	.long 0xbf800000                                           // 000000073860: BF800000
	.long 0xbf800000                                           // 000000073864: BF800000
	.long 0xbf800000                                           // 000000073868: BF800000
	.long 0xbf800000                                           // 00000007386C: BF800000
	.long 0xbf800000                                           // 000000073870: BF800000
	.long 0xbf800000                                           // 000000073874: BF800000
	.long 0xbf800000                                           // 000000073878: BF800000
	.long 0xbf800000                                           // 00000007387C: BF800000
	.long 0xbf800000                                           // 000000073880: BF800000
	.long 0xbf800000                                           // 000000073884: BF800000
	.long 0xbf800000                                           // 000000073888: BF800000
	.long 0xbf800000                                           // 00000007388C: BF800000
	.long 0xbf800000                                           // 000000073890: BF800000
	.long 0xbf800000                                           // 000000073894: BF800000
	.long 0xbf800000                                           // 000000073898: BF800000
	.long 0xbf800000                                           // 00000007389C: BF800000
	.long 0xbf800000                                           // 0000000738A0: BF800000
	.long 0xbf800000                                           // 0000000738A4: BF800000
	.long 0xbf800000                                           // 0000000738A8: BF800000
	.long 0xbf800000                                           // 0000000738AC: BF800000
	.long 0xbf800000                                           // 0000000738B0: BF800000
	.long 0xbf800000                                           // 0000000738B4: BF800000
	.long 0xbf800000                                           // 0000000738B8: BF800000
	.long 0xbf800000                                           // 0000000738BC: BF800000
	.long 0xbf800000                                           // 0000000738C0: BF800000
	.long 0xbf800000                                           // 0000000738C4: BF800000
	.long 0xbf800000                                           // 0000000738C8: BF800000
	.long 0xbf800000                                           // 0000000738CC: BF800000
	.long 0xbf800000                                           // 0000000738D0: BF800000
	.long 0xbf800000                                           // 0000000738D4: BF800000
	.long 0xbf800000                                           // 0000000738D8: BF800000
	.long 0xbf800000                                           // 0000000738DC: BF800000
	.long 0xbf800000                                           // 0000000738E0: BF800000
	.long 0xbf800000                                           // 0000000738E4: BF800000
	.long 0xbf800000                                           // 0000000738E8: BF800000
	.long 0xbf800000                                           // 0000000738EC: BF800000
	.long 0xbf800000                                           // 0000000738F0: BF800000
	.long 0xbf800000                                           // 0000000738F4: BF800000
	.long 0xbf800000                                           // 0000000738F8: BF800000
	.long 0xbf800000                                           // 0000000738FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_size_get_local_id,@function
	.size	subtract_long_get_global_size_get_local_id, subtract_long_get_global_size_get_local_id_symend-subtract_long_get_global_size_get_local_id
subtract_long_get_global_size_get_local_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 000000073900: CA240080 020800FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000007390C: 84028402
	v_bfe_u32 v10, v0, 10, 10                                  // 000000073910: D610000A 02291500
	v_bfe_u32 v11, v0, 20, 10                                  // 000000073918: D610000B 02292900
	s_clause 0x1                                               // 000000073920: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000073924: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007392C: DC4A0026 08000002
	s_clause 0x3                                               // 000000073934: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073938: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000073940: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000073948: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000073950: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 000000073958: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007395C: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 000000073960: D6550001 04240408
	s_lshl_b32 s2, s3, 1                                       // 000000073968: 84028103
	s_lshl_b32 s3, s4, 1                                       // 00000007396C: 84038104
	s_lshl_b32 s4, s13, 1                                      // 000000073970: 8404810D
	s_lshl_b32 s6, s14, 1                                      // 000000073974: 8406810E
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000073978: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v10                                // 000000073980: D6550001 0428040A
	s_lshl_b32 s2, s12, 4                                      // 000000073988: 8402840C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007398C: BF870221
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000073990: D73C0005 00020283
	v_add3_u32 v1, s5, s3, v11                                 // 000000073998: D6550001 042C0605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000739A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000739A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000739AC: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000739B0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000739B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000739C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000739C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000739CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000739D0: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000739D4: BF8907F7
	v_and_b32_e32 v2, 0xffff, v7                               // 0000000739D8: 36040EFF 0000FFFF
	v_lshrrev_b32_e32 v7, 16, v7                               // 0000000739E0: 320E0E90
	s_waitcnt vmcnt(0)                                         // 0000000739E4: BF8903F7
	v_add_nc_u32_e32 v12, s6, v8                               // 0000000739E8: 4A181006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000739EC: BF870193
	v_add_nc_u32_e32 v2, s2, v2                                // 0000000739F0: 4A040402
	v_add_nc_u32_e32 v13, s4, v7                               // 0000000739F4: 4A1A0E04
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000739F8: BF870092
	v_sub_co_u32 v7, s0, v2, v9                                // 0000000739FC: D7010007 00021302
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s0                     // 000000073A04: D5217C08 00010080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000073A0C: BF870093
	v_sub_co_u32 v9, s0, v13, v10                              // 000000073A10: D7010009 0002150D
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s0                    // 000000073A18: D5217C0A 00010080
	v_sub_co_u32 v11, s0, v12, v11                             // 000000073A20: D701000B 0002170C
	s_delay_alu instid0(VALU_DEP_1)                            // 000000073A28: BF870001
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s0                    // 000000073A2C: D5217C0C 00010080
	s_clause 0x2                                               // 000000073A34: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000073A38: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000073A40: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000073A48: DC6E0000 007C0B00
	s_nop 0                                                    // 000000073A50: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073A54: BFB60003
	s_endpgm                                                   // 000000073A58: BFB00000
subtract_long_get_global_size_get_local_id_symend:
	.long 0xbf800000                                           // 000000073A5C: BF800000
	.long 0xbf800000                                           // 000000073A60: BF800000
	.long 0xbf800000                                           // 000000073A64: BF800000
	.long 0xbf800000                                           // 000000073A68: BF800000
	.long 0xbf800000                                           // 000000073A6C: BF800000
	.long 0xbf800000                                           // 000000073A70: BF800000
	.long 0xbf800000                                           // 000000073A74: BF800000
	.long 0xbf800000                                           // 000000073A78: BF800000
	.long 0xbf800000                                           // 000000073A7C: BF800000
	.long 0xbf800000                                           // 000000073A80: BF800000
	.long 0xbf800000                                           // 000000073A84: BF800000
	.long 0xbf800000                                           // 000000073A88: BF800000
	.long 0xbf800000                                           // 000000073A8C: BF800000
	.long 0xbf800000                                           // 000000073A90: BF800000
	.long 0xbf800000                                           // 000000073A94: BF800000
	.long 0xbf800000                                           // 000000073A98: BF800000
	.long 0xbf800000                                           // 000000073A9C: BF800000
	.long 0xbf800000                                           // 000000073AA0: BF800000
	.long 0xbf800000                                           // 000000073AA4: BF800000
	.long 0xbf800000                                           // 000000073AA8: BF800000
	.long 0xbf800000                                           // 000000073AAC: BF800000
	.long 0xbf800000                                           // 000000073AB0: BF800000
	.long 0xbf800000                                           // 000000073AB4: BF800000
	.long 0xbf800000                                           // 000000073AB8: BF800000
	.long 0xbf800000                                           // 000000073ABC: BF800000
	.long 0xbf800000                                           // 000000073AC0: BF800000
	.long 0xbf800000                                           // 000000073AC4: BF800000
	.long 0xbf800000                                           // 000000073AC8: BF800000
	.long 0xbf800000                                           // 000000073ACC: BF800000
	.long 0xbf800000                                           // 000000073AD0: BF800000
	.long 0xbf800000                                           // 000000073AD4: BF800000
	.long 0xbf800000                                           // 000000073AD8: BF800000
	.long 0xbf800000                                           // 000000073ADC: BF800000
	.long 0xbf800000                                           // 000000073AE0: BF800000
	.long 0xbf800000                                           // 000000073AE4: BF800000
	.long 0xbf800000                                           // 000000073AE8: BF800000
	.long 0xbf800000                                           // 000000073AEC: BF800000
	.long 0xbf800000                                           // 000000073AF0: BF800000
	.long 0xbf800000                                           // 000000073AF4: BF800000
	.long 0xbf800000                                           // 000000073AF8: BF800000
	.long 0xbf800000                                           // 000000073AFC: BF800000

	.p2align	8
	.type	subtract_long_get_num_groups_get_local_id,@function
	.size	subtract_long_get_num_groups_get_local_id, subtract_long_get_num_groups_get_local_id_symend-subtract_long_get_num_groups_get_local_id
subtract_long_get_num_groups_get_local_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 000000073B00: CA240080 020800FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000073B0C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000073B14: 84028102
	v_bfe_u32 v10, v0, 10, 10                                  // 000000073B18: D610000A 02291500
	s_clause 0x1                                               // 000000073B20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000073B24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000073B2C: DC4A0026 08000002
	s_clause 0x2                                               // 000000073B34: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073B38: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000073B40: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000073B48: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000073B50: 84008103
	v_bfe_u32 v11, v0, 20, 10                                  // 000000073B54: D610000B 02292900
	s_mov_b32 s33, 0                                           // 000000073B5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000073B60: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 000000073B64: D6550001 04240408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000073B6C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000073B70: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v10                                // 000000073B78: D6550001 0428000A
	s_lshl_b32 s0, s4, 2                                       // 000000073B80: 84008204
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000073B84: D73C0005 00020283
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000073B8C: BF870213
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000073B90: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000073B98: 40080807
	v_add3_u32 v1, s5, s0, v11                                 // 000000073B9C: D6550001 042C0005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000073BA4: BF870094
	v_add_co_u32 v5, s1, s6, v5                                // 000000073BA8: D7000105 00020A06
	v_add_co_ci_u32_e64 v6, s1, s7, v6, s1                     // 000000073BB0: D5200106 00060C07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000073BB8: BF870143
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000073BBC: D73C0000 00020283
	s_waitcnt vmcnt(1)                                         // 000000073BC4: BF8907F7
	v_lshrrev_b32_e32 v12, 16, v7                              // 000000073BC8: 32180E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000073BCC: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v12.l                              // 000000073BD0: D43D0000 00021880
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000073BD8: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000073BDC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 000000073BE0: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 000000073BE4: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 000000073BE8: BF078000
	v_sub_co_u32 v7, s0, s1, v9                                // 000000073BEC: D7010007 00021201
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000073BF4: BF8700C1
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s0                     // 000000073BF8: D5217C08 00010080
	s_addc_u32 s0, s13, 0                                      // 000000073C00: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000073C04: BF07806A
	v_sub_co_u32 v9, s0, s0, v10                               // 000000073C08: D7010009 00021400
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s0                    // 000000073C10: D5217C0A 00010080
	s_addc_u32 s0, s14, 0                                      // 000000073C18: 8200800E
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000073C1C: D7006A00 00020006
	v_sub_co_u32 v11, s0, s0, v11                              // 000000073C24: D701000B 00021600
	s_delay_alu instid0(VALU_DEP_1)                            // 000000073C2C: BF870001
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s0                    // 000000073C30: D5217C0C 00010080
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000073C38: 40020207
	s_clause 0x2                                               // 000000073C3C: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000073C40: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000073C48: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000073C50: DC6E0000 007C0B00
	s_nop 0                                                    // 000000073C58: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073C5C: BFB60003
	s_endpgm                                                   // 000000073C60: BFB00000
subtract_long_get_num_groups_get_local_id_symend:
	.long 0xbf800000                                           // 000000073C64: BF800000
	.long 0xbf800000                                           // 000000073C68: BF800000
	.long 0xbf800000                                           // 000000073C6C: BF800000
	.long 0xbf800000                                           // 000000073C70: BF800000
	.long 0xbf800000                                           // 000000073C74: BF800000
	.long 0xbf800000                                           // 000000073C78: BF800000
	.long 0xbf800000                                           // 000000073C7C: BF800000
	.long 0xbf800000                                           // 000000073C80: BF800000
	.long 0xbf800000                                           // 000000073C84: BF800000
	.long 0xbf800000                                           // 000000073C88: BF800000
	.long 0xbf800000                                           // 000000073C8C: BF800000
	.long 0xbf800000                                           // 000000073C90: BF800000
	.long 0xbf800000                                           // 000000073C94: BF800000
	.long 0xbf800000                                           // 000000073C98: BF800000
	.long 0xbf800000                                           // 000000073C9C: BF800000
	.long 0xbf800000                                           // 000000073CA0: BF800000
	.long 0xbf800000                                           // 000000073CA4: BF800000
	.long 0xbf800000                                           // 000000073CA8: BF800000
	.long 0xbf800000                                           // 000000073CAC: BF800000
	.long 0xbf800000                                           // 000000073CB0: BF800000
	.long 0xbf800000                                           // 000000073CB4: BF800000
	.long 0xbf800000                                           // 000000073CB8: BF800000
	.long 0xbf800000                                           // 000000073CBC: BF800000
	.long 0xbf800000                                           // 000000073CC0: BF800000
	.long 0xbf800000                                           // 000000073CC4: BF800000
	.long 0xbf800000                                           // 000000073CC8: BF800000
	.long 0xbf800000                                           // 000000073CCC: BF800000
	.long 0xbf800000                                           // 000000073CD0: BF800000
	.long 0xbf800000                                           // 000000073CD4: BF800000
	.long 0xbf800000                                           // 000000073CD8: BF800000
	.long 0xbf800000                                           // 000000073CDC: BF800000
	.long 0xbf800000                                           // 000000073CE0: BF800000
	.long 0xbf800000                                           // 000000073CE4: BF800000
	.long 0xbf800000                                           // 000000073CE8: BF800000
	.long 0xbf800000                                           // 000000073CEC: BF800000
	.long 0xbf800000                                           // 000000073CF0: BF800000
	.long 0xbf800000                                           // 000000073CF4: BF800000
	.long 0xbf800000                                           // 000000073CF8: BF800000
	.long 0xbf800000                                           // 000000073CFC: BF800000

	.p2align	8
	.type	subtract_long_get_work_dim_get_local_id,@function
	.size	subtract_long_get_work_dim_get_local_id, subtract_long_get_work_dim_get_local_id_symend-subtract_long_get_work_dim_get_local_id
subtract_long_get_work_dim_get_local_id:
	s_clause 0x3                                               // 000000073D00: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000073D04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073D0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000073D14: F4040180 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 000000073D1C: F4000000 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000073D24: CA240080 010200FF 000003FF
	s_lshl_b32 s1, s2, 1                                       // 000000073D30: 84018102
	v_bfe_u32 v6, v0, 10, 10                                   // 000000073D34: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000073D3C: D610000A 02292900
	s_lshl_b32 s2, s3, 1                                       // 000000073D44: 84028103
	s_lshl_b32 s3, s4, 2                                       // 000000073D48: 84038204
	s_mov_b32 s33, 0                                           // 000000073D4C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000073D50: BF89FC07
	s_and_b32 s4, s5, 0xffff                                   // 000000073D54: 8B04FF05 0000FFFF
	v_add3_u32 v0, s8, s1, v2                                  // 000000073D5C: D6550000 04080208
	v_sub_co_u32 v2, s1, s4, v2                                // 000000073D64: D7010102 00020404
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073D6C: BF870191
	v_sub_co_ci_u32_e64 v3, null, 0, 0, s1                     // 000000073D70: D5217C03 00050080
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000073D78: D73C0004 00020083
	v_add3_u32 v0, s10, s2, v6                                 // 000000073D80: D6550000 0418040A
	v_sub_co_u32 v6, s1, s4, v6                                // 000000073D88: D7010106 00020C04
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000073D90: BF870191
	v_sub_co_ci_u32_e64 v7, null, 0, 0, s1                     // 000000073D94: D5217C07 00050080
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000073D9C: D73C0008 00020083
	v_add3_u32 v0, s0, s3, v10                                 // 000000073DA4: D6550000 04280600
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000073DAC: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000073DB4: 400A0A07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 000000073DB8: BF870243
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000073DBC: D73C0000 00020083
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 000000073DC4: D7006A08 00021006
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 000000073DCC: 40121207
	v_sub_co_u32 v10, s0, s4, v10                              // 000000073DD0: D701000A 00021404
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000073DD8: D7006A00 00020006
	v_sub_co_ci_u32_e64 v11, null, 0, 0, s0                    // 000000073DE0: D5217C0B 00010080
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000073DE8: 40020207
	s_clause 0x2                                               // 000000073DEC: BF850002
	global_store_b64 v[4:5], v[2:3], off                       // 000000073DF0: DC6E0000 007C0204
	global_store_b64 v[8:9], v[6:7], off                       // 000000073DF8: DC6E0000 007C0608
	global_store_b64 v[0:1], v[10:11], off                     // 000000073E00: DC6E0000 007C0A00
	s_nop 0                                                    // 000000073E08: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000073E0C: BFB60003
	s_endpgm                                                   // 000000073E10: BFB00000
subtract_long_get_work_dim_get_local_id_symend:
	.long 0xbf800000                                           // 000000073E14: BF800000
	.long 0xbf800000                                           // 000000073E18: BF800000
	.long 0xbf800000                                           // 000000073E1C: BF800000
	.long 0xbf800000                                           // 000000073E20: BF800000
	.long 0xbf800000                                           // 000000073E24: BF800000
	.long 0xbf800000                                           // 000000073E28: BF800000
	.long 0xbf800000                                           // 000000073E2C: BF800000
	.long 0xbf800000                                           // 000000073E30: BF800000
	.long 0xbf800000                                           // 000000073E34: BF800000
	.long 0xbf800000                                           // 000000073E38: BF800000
	.long 0xbf800000                                           // 000000073E3C: BF800000
	.long 0xbf800000                                           // 000000073E40: BF800000
	.long 0xbf800000                                           // 000000073E44: BF800000
	.long 0xbf800000                                           // 000000073E48: BF800000
	.long 0xbf800000                                           // 000000073E4C: BF800000
	.long 0xbf800000                                           // 000000073E50: BF800000
	.long 0xbf800000                                           // 000000073E54: BF800000
	.long 0xbf800000                                           // 000000073E58: BF800000
	.long 0xbf800000                                           // 000000073E5C: BF800000
	.long 0xbf800000                                           // 000000073E60: BF800000
	.long 0xbf800000                                           // 000000073E64: BF800000
	.long 0xbf800000                                           // 000000073E68: BF800000
	.long 0xbf800000                                           // 000000073E6C: BF800000
	.long 0xbf800000                                           // 000000073E70: BF800000
	.long 0xbf800000                                           // 000000073E74: BF800000
	.long 0xbf800000                                           // 000000073E78: BF800000
	.long 0xbf800000                                           // 000000073E7C: BF800000
	.long 0xbf800000                                           // 000000073E80: BF800000
	.long 0xbf800000                                           // 000000073E84: BF800000
	.long 0xbf800000                                           // 000000073E88: BF800000
	.long 0xbf800000                                           // 000000073E8C: BF800000
	.long 0xbf800000                                           // 000000073E90: BF800000
	.long 0xbf800000                                           // 000000073E94: BF800000
	.long 0xbf800000                                           // 000000073E98: BF800000
	.long 0xbf800000                                           // 000000073E9C: BF800000
	.long 0xbf800000                                           // 000000073EA0: BF800000
	.long 0xbf800000                                           // 000000073EA4: BF800000
	.long 0xbf800000                                           // 000000073EA8: BF800000
	.long 0xbf800000                                           // 000000073EAC: BF800000
	.long 0xbf800000                                           // 000000073EB0: BF800000
	.long 0xbf800000                                           // 000000073EB4: BF800000
	.long 0xbf800000                                           // 000000073EB8: BF800000
	.long 0xbf800000                                           // 000000073EBC: BF800000
	.long 0xbf800000                                           // 000000073EC0: BF800000
	.long 0xbf800000                                           // 000000073EC4: BF800000
	.long 0xbf800000                                           // 000000073EC8: BF800000
	.long 0xbf800000                                           // 000000073ECC: BF800000
	.long 0xbf800000                                           // 000000073ED0: BF800000
	.long 0xbf800000                                           // 000000073ED4: BF800000
	.long 0xbf800000                                           // 000000073ED8: BF800000
	.long 0xbf800000                                           // 000000073EDC: BF800000
	.long 0xbf800000                                           // 000000073EE0: BF800000
	.long 0xbf800000                                           // 000000073EE4: BF800000
	.long 0xbf800000                                           // 000000073EE8: BF800000
	.long 0xbf800000                                           // 000000073EEC: BF800000
	.long 0xbf800000                                           // 000000073EF0: BF800000
	.long 0xbf800000                                           // 000000073EF4: BF800000
	.long 0xbf800000                                           // 000000073EF8: BF800000
	.long 0xbf800000                                           // 000000073EFC: BF800000

	.p2align	8
	.type	subtract_long_x_get_group_id,@function
	.size	subtract_long_x_get_group_id, subtract_long_x_get_group_id_symend-subtract_long_x_get_group_id
subtract_long_x_get_group_id:
	s_clause 0x2                                               // 000000073F00: BF850002
	s_load_b32 s5, s[0:1], 0x8                                 // 000000073F04: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000073F0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], null                            // 000000073F14: F4040180 F8000000
	s_waitcnt lgkmcnt(0)                                       // 000000073F1C: BF89FC07
	s_load_b32 s9, s[0:1], 0x48                                // 000000073F20: F4000240 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000073F28: CA240080 010200FF 000003FF
	s_lshl_b32 s0, s2, 4                                       // 000000073F34: 84008402
	v_bfe_u32 v6, v0, 10, 10                                   // 000000073F38: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000073F40: D610000A 02292900
	s_lshl_b32 s11, s3, 1                                      // 000000073F48: 840B8103
	s_lshl_b32 s12, s4, 1                                      // 000000073F4C: 840C8104
	s_mov_b32 s33, 0                                           // 000000073F50: BEA10080
	s_ashr_i32 s13, s5, 31                                     // 000000073F54: 860D9F05
	v_add3_u32 v0, s8, s0, v2                                  // 000000073F58: D6550000 04080008
	s_sub_u32 s0, s5, s2                                       // 000000073F60: 80800205
	s_subb_u32 s1, s13, 0                                      // 000000073F64: 8281800D
	s_sub_u32 s2, s5, s3                                       // 000000073F68: 80820305
	s_subb_u32 s3, s13, 0                                      // 000000073F6C: 8283800D
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000073F70: D73C0004 00020083
	v_add3_u32 v0, s10, s11, v6                                // 000000073F78: D6550000 0418160A
	v_dual_mov_b32 v3, s1 :: v_dual_mov_b32 v2, s0             // 000000073F80: CA100001 03020000
	s_sub_u32 s0, s5, s4                                       // 000000073F88: 80800405
	s_subb_u32 s1, s13, 0                                      // 000000073F8C: 8281800D
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000073F90: BF8701D2
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000073F94: D73C0008 00020083
	s_waitcnt lgkmcnt(0)                                       // 000000073F9C: BF89FC07
	v_add3_u32 v0, s9, s12, v10                                // 000000073FA0: D6550000 04281809
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 000000073FA8: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 000000073FB0: 400A0A07
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 000000073FB4: D73C0000 00020083
	v_add_co_u32 v8, vcc_lo, s6, v8                            // 000000073FBC: D7006A08 00021006
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo             // 000000073FC4: 40121207
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v6, s2             // 000000073FC8: CA100003 07060002
	s_delay_alu instid0(VALU_DEP_4)                            // 000000073FD0: BF870004
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000073FD4: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000073FDC: 40020207
	v_dual_mov_b32 v11, s1 :: v_dual_mov_b32 v10, s0           // 000000073FE0: CA100001 0B0A0000
	s_clause 0x2                                               // 000000073FE8: BF850002
	global_store_b64 v[4:5], v[2:3], off                       // 000000073FEC: DC6E0000 007C0204
	global_store_b64 v[8:9], v[6:7], off                       // 000000073FF4: DC6E0000 007C0608
	global_store_b64 v[0:1], v[10:11], off                     // 000000073FFC: DC6E0000 007C0A00
	s_nop 0                                                    // 000000074004: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074008: BFB60003
	s_endpgm                                                   // 00000007400C: BFB00000
subtract_long_x_get_group_id_symend:
	.long 0xbf800000                                           // 000000074010: BF800000
	.long 0xbf800000                                           // 000000074014: BF800000
	.long 0xbf800000                                           // 000000074018: BF800000
	.long 0xbf800000                                           // 00000007401C: BF800000
	.long 0xbf800000                                           // 000000074020: BF800000
	.long 0xbf800000                                           // 000000074024: BF800000
	.long 0xbf800000                                           // 000000074028: BF800000
	.long 0xbf800000                                           // 00000007402C: BF800000
	.long 0xbf800000                                           // 000000074030: BF800000
	.long 0xbf800000                                           // 000000074034: BF800000
	.long 0xbf800000                                           // 000000074038: BF800000
	.long 0xbf800000                                           // 00000007403C: BF800000
	.long 0xbf800000                                           // 000000074040: BF800000
	.long 0xbf800000                                           // 000000074044: BF800000
	.long 0xbf800000                                           // 000000074048: BF800000
	.long 0xbf800000                                           // 00000007404C: BF800000
	.long 0xbf800000                                           // 000000074050: BF800000
	.long 0xbf800000                                           // 000000074054: BF800000
	.long 0xbf800000                                           // 000000074058: BF800000
	.long 0xbf800000                                           // 00000007405C: BF800000
	.long 0xbf800000                                           // 000000074060: BF800000
	.long 0xbf800000                                           // 000000074064: BF800000
	.long 0xbf800000                                           // 000000074068: BF800000
	.long 0xbf800000                                           // 00000007406C: BF800000
	.long 0xbf800000                                           // 000000074070: BF800000
	.long 0xbf800000                                           // 000000074074: BF800000
	.long 0xbf800000                                           // 000000074078: BF800000
	.long 0xbf800000                                           // 00000007407C: BF800000
	.long 0xbf800000                                           // 000000074080: BF800000
	.long 0xbf800000                                           // 000000074084: BF800000
	.long 0xbf800000                                           // 000000074088: BF800000
	.long 0xbf800000                                           // 00000007408C: BF800000
	.long 0xbf800000                                           // 000000074090: BF800000
	.long 0xbf800000                                           // 000000074094: BF800000
	.long 0xbf800000                                           // 000000074098: BF800000
	.long 0xbf800000                                           // 00000007409C: BF800000
	.long 0xbf800000                                           // 0000000740A0: BF800000
	.long 0xbf800000                                           // 0000000740A4: BF800000
	.long 0xbf800000                                           // 0000000740A8: BF800000
	.long 0xbf800000                                           // 0000000740AC: BF800000
	.long 0xbf800000                                           // 0000000740B0: BF800000
	.long 0xbf800000                                           // 0000000740B4: BF800000
	.long 0xbf800000                                           // 0000000740B8: BF800000
	.long 0xbf800000                                           // 0000000740BC: BF800000
	.long 0xbf800000                                           // 0000000740C0: BF800000
	.long 0xbf800000                                           // 0000000740C4: BF800000
	.long 0xbf800000                                           // 0000000740C8: BF800000
	.long 0xbf800000                                           // 0000000740CC: BF800000
	.long 0xbf800000                                           // 0000000740D0: BF800000
	.long 0xbf800000                                           // 0000000740D4: BF800000
	.long 0xbf800000                                           // 0000000740D8: BF800000
	.long 0xbf800000                                           // 0000000740DC: BF800000
	.long 0xbf800000                                           // 0000000740E0: BF800000
	.long 0xbf800000                                           // 0000000740E4: BF800000
	.long 0xbf800000                                           // 0000000740E8: BF800000
	.long 0xbf800000                                           // 0000000740EC: BF800000
	.long 0xbf800000                                           // 0000000740F0: BF800000
	.long 0xbf800000                                           // 0000000740F4: BF800000
	.long 0xbf800000                                           // 0000000740F8: BF800000
	.long 0xbf800000                                           // 0000000740FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_offset_get_group_id,@function
	.size	subtract_long_get_global_offset_get_group_id, subtract_long_get_global_offset_get_group_id_symend-subtract_long_get_global_offset_get_group_id
subtract_long_get_global_offset_get_group_id:
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074100: F4080200 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000074108: BF89FC07
	s_clause 0x1                                               // 00000007410C: BF850001
	s_load_b32 s9, s[0:1], 0x48                                // 000000074110: F4000240 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000074118: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000074120: CA240080 010200FF 000003FF
	s_lshl_b32 s5, s2, 1                                       // 00000007412C: 84058102
	v_bfe_u32 v6, v0, 10, 10                                   // 000000074130: D6100006 02291500
	v_bfe_u32 v10, v0, 20, 10                                  // 000000074138: D610000A 02292900
	s_lshl_b32 s11, s3, 4                                      // 000000074140: 840B8403
	s_lshl_b32 s12, s4, 1                                      // 000000074144: 840C8104
	s_mov_b32 s33, 0                                           // 000000074148: BEA10080
	v_add3_u32 v0, s8, s5, v2                                  // 00000007414C: D6550000 04080A08
	s_sub_u32 s6, s8, s2                                       // 000000074154: 80860208
	s_subb_u32 s7, 0, 0                                        // 000000074158: 82878080
	s_sub_u32 s2, s10, s3                                      // 00000007415C: 8082030A
	s_subb_u32 s3, 0, 0                                        // 000000074160: 82838080
	v_lshlrev_b64 v[4:5], 3, v[0:1]                            // 000000074164: D73C0004 00020083
	v_add3_u32 v0, s10, s11, v6                                // 00000007416C: D6550000 0418160A
	s_waitcnt lgkmcnt(0)                                       // 000000074174: BF89FC07
	s_sub_u32 s4, s9, s4                                       // 000000074178: 80840409
	v_dual_mov_b32 v2, s6 :: v_dual_mov_b32 v3, s7             // 00000007417C: CA100006 02020007
	s_subb_u32 s5, 0, 0                                        // 000000074184: 82858080
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000074188: D73C0008 00020083
	v_add3_u32 v0, s9, s12, v10                                // 000000074190: D6550000 04281809
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000074198: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000741A0: 400A0A01
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_4)// 0000000741A4: BF870243
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000741A8: D73C0000 00020083
	v_add_co_u32 v8, vcc_lo, s0, v8                            // 0000000741B0: D7006A08 00021000
	v_add_co_ci_u32_e32 v9, vcc_lo, s1, v9, vcc_lo             // 0000000741B8: 40121201
	v_dual_mov_b32 v7, s3 :: v_dual_mov_b32 v6, s2             // 0000000741BC: CA100003 07060002
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000741C4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000741CC: 40020201
	v_dual_mov_b32 v11, s5 :: v_dual_mov_b32 v10, s4           // 0000000741D0: CA100005 0B0A0004
	s_clause 0x2                                               // 0000000741D8: BF850002
	global_store_b64 v[4:5], v[2:3], off                       // 0000000741DC: DC6E0000 007C0204
	global_store_b64 v[8:9], v[6:7], off                       // 0000000741E4: DC6E0000 007C0608
	global_store_b64 v[0:1], v[10:11], off                     // 0000000741EC: DC6E0000 007C0A00
	s_nop 0                                                    // 0000000741F4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000741F8: BFB60003
	s_endpgm                                                   // 0000000741FC: BFB00000
subtract_long_get_global_offset_get_group_id_symend:

	.p2align	8
	.type	subtract_long_get_local_id_get_group_id,@function
	.size	subtract_long_get_local_id_get_group_id, subtract_long_get_local_id_get_group_id_symend-subtract_long_get_local_id_get_group_id
subtract_long_get_local_id_get_group_id:
	s_clause 0x2                                               // 000000074200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074204: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007420C: F4040180 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 000000074214: F4000000 F8000048
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007421C: CA240080 010400FF 000003FF
	s_waitcnt lgkmcnt(0)                                       // 000000074228: BF89FC07
	s_lshl_b32 s9, s2, 3                                       // 00000007422C: 84098302
	v_bfe_u32 v8, v0, 10, 10                                   // 000000074230: D6100008 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 000000074238: D610000C 02292900
	s_lshl_b32 s1, s3, 2                                       // 000000074240: 84018203
	s_lshl_b32 s11, s4, 1                                      // 000000074244: 840B8104
	s_mov_b32 s5, 0                                            // 000000074248: BE850080
	v_sub_co_u32 v2, s2, v4, s2                                // 00000007424C: D7010202 00000504
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000074254: BF8700C1
	v_sub_co_ci_u32_e64 v3, null, s5, 0, s2                    // 000000074258: D5217C03 00090005
	s_mov_b32 s33, 0                                           // 000000074260: BEA10080
	v_add3_u32 v0, s8, s9, v4                                  // 000000074264: D6550000 04101208
	v_sub_co_u32 v4, s2, v8, s3                                // 00000007426C: D7010204 00000708
	v_sub_co_ci_u32_e64 v5, null, s5, 0, s2                    // 000000074274: D5217C05 00090005
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007427C: BF8700B3
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 000000074280: D73C0006 00020083
	v_add3_u32 v0, s10, s1, v8                                 // 000000074288: D6550000 0420020A
	v_sub_co_u32 v8, s1, v12, s4                               // 000000074290: D7010108 0000090C
	v_sub_co_ci_u32_e64 v9, null, s5, 0, s1                    // 000000074298: D5217C09 00050005
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 0000000742A0: BF8701C3
	v_lshlrev_b64 v[10:11], 3, v[0:1]                          // 0000000742A4: D73C000A 00020083
	v_add3_u32 v0, s0, s11, v12                                // 0000000742AC: D6550000 04301600
	v_add_co_u32 v6, vcc_lo, s6, v6                            // 0000000742B4: D7006A06 00020C06
	v_add_co_ci_u32_e32 v7, vcc_lo, s7, v7, vcc_lo             // 0000000742BC: 400E0E07
	v_lshlrev_b64 v[0:1], 3, v[0:1]                            // 0000000742C0: D73C0000 00020083
	v_add_co_u32 v10, vcc_lo, s6, v10                          // 0000000742C8: D7006A0A 00021406
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo           // 0000000742D0: 40161607
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000742D4: BF870213
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 0000000742D8: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 0000000742E0: 40020207
	s_clause 0x2                                               // 0000000742E4: BF850002
	global_store_b64 v[6:7], v[2:3], off                       // 0000000742E8: DC6E0000 007C0206
	global_store_b64 v[10:11], v[4:5], off                     // 0000000742F0: DC6E0000 007C040A
	global_store_b64 v[0:1], v[8:9], off                       // 0000000742F8: DC6E0000 007C0800
	s_nop 0                                                    // 000000074300: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074304: BFB60003
	s_endpgm                                                   // 000000074308: BFB00000
subtract_long_get_local_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000007430C: BF800000
	.long 0xbf800000                                           // 000000074310: BF800000
	.long 0xbf800000                                           // 000000074314: BF800000
	.long 0xbf800000                                           // 000000074318: BF800000
	.long 0xbf800000                                           // 00000007431C: BF800000
	.long 0xbf800000                                           // 000000074320: BF800000
	.long 0xbf800000                                           // 000000074324: BF800000
	.long 0xbf800000                                           // 000000074328: BF800000
	.long 0xbf800000                                           // 00000007432C: BF800000
	.long 0xbf800000                                           // 000000074330: BF800000
	.long 0xbf800000                                           // 000000074334: BF800000
	.long 0xbf800000                                           // 000000074338: BF800000
	.long 0xbf800000                                           // 00000007433C: BF800000
	.long 0xbf800000                                           // 000000074340: BF800000
	.long 0xbf800000                                           // 000000074344: BF800000
	.long 0xbf800000                                           // 000000074348: BF800000
	.long 0xbf800000                                           // 00000007434C: BF800000
	.long 0xbf800000                                           // 000000074350: BF800000
	.long 0xbf800000                                           // 000000074354: BF800000
	.long 0xbf800000                                           // 000000074358: BF800000
	.long 0xbf800000                                           // 00000007435C: BF800000
	.long 0xbf800000                                           // 000000074360: BF800000
	.long 0xbf800000                                           // 000000074364: BF800000
	.long 0xbf800000                                           // 000000074368: BF800000
	.long 0xbf800000                                           // 00000007436C: BF800000
	.long 0xbf800000                                           // 000000074370: BF800000
	.long 0xbf800000                                           // 000000074374: BF800000
	.long 0xbf800000                                           // 000000074378: BF800000
	.long 0xbf800000                                           // 00000007437C: BF800000
	.long 0xbf800000                                           // 000000074380: BF800000
	.long 0xbf800000                                           // 000000074384: BF800000
	.long 0xbf800000                                           // 000000074388: BF800000
	.long 0xbf800000                                           // 00000007438C: BF800000
	.long 0xbf800000                                           // 000000074390: BF800000
	.long 0xbf800000                                           // 000000074394: BF800000
	.long 0xbf800000                                           // 000000074398: BF800000
	.long 0xbf800000                                           // 00000007439C: BF800000
	.long 0xbf800000                                           // 0000000743A0: BF800000
	.long 0xbf800000                                           // 0000000743A4: BF800000
	.long 0xbf800000                                           // 0000000743A8: BF800000
	.long 0xbf800000                                           // 0000000743AC: BF800000
	.long 0xbf800000                                           // 0000000743B0: BF800000
	.long 0xbf800000                                           // 0000000743B4: BF800000
	.long 0xbf800000                                           // 0000000743B8: BF800000
	.long 0xbf800000                                           // 0000000743BC: BF800000
	.long 0xbf800000                                           // 0000000743C0: BF800000
	.long 0xbf800000                                           // 0000000743C4: BF800000
	.long 0xbf800000                                           // 0000000743C8: BF800000
	.long 0xbf800000                                           // 0000000743CC: BF800000
	.long 0xbf800000                                           // 0000000743D0: BF800000
	.long 0xbf800000                                           // 0000000743D4: BF800000
	.long 0xbf800000                                           // 0000000743D8: BF800000
	.long 0xbf800000                                           // 0000000743DC: BF800000
	.long 0xbf800000                                           // 0000000743E0: BF800000
	.long 0xbf800000                                           // 0000000743E4: BF800000
	.long 0xbf800000                                           // 0000000743E8: BF800000
	.long 0xbf800000                                           // 0000000743EC: BF800000
	.long 0xbf800000                                           // 0000000743F0: BF800000
	.long 0xbf800000                                           // 0000000743F4: BF800000
	.long 0xbf800000                                           // 0000000743F8: BF800000
	.long 0xbf800000                                           // 0000000743FC: BF800000

	.p2align	8
	.type	subtract_long_get_group_id_get_group_id,@function
	.size	subtract_long_get_group_id_get_group_id, subtract_long_get_group_id_get_group_id_symend-subtract_long_get_group_id_get_group_id
subtract_long_get_group_id_get_group_id:
	s_clause 0x2                                               // 000000074400: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074404: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007440C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000074414: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007441C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000074428: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007442C: D6100005 02291500
	s_lshl_b32 s3, s3, 4                                       // 000000074434: 84038403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074438: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000074440: 84048104
	s_mov_b32 s33, 0                                           // 000000074444: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000074448: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000007444C: D6550001 04040408
	s_mov_b32 s2, 0                                            // 000000074454: BE820080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 000000074458: BF8704B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007445C: D73C0003 00020283
	v_add3_u32 v1, s10, s3, v5                                 // 000000074464: D6550001 0414060A
	s_mov_b32 s3, s2                                           // 00000007446C: BE830002
	v_dual_mov_b32 v6, s3 :: v_dual_mov_b32 v5, s2             // 000000074470: CA100003 06040002
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000074478: BF8701C2
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 00000007447C: D73C0007 00020283
	v_add3_u32 v1, s5, s4, v0                                  // 000000074484: D6550001 04000805
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000007448C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000074494: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000074498: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 0000000744A0: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 0000000744A8: 40101001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000744AC: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000744B0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000744B8: 40020201
	s_clause 0x2                                               // 0000000744BC: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 0000000744C0: DC6E0000 007C0503
	global_store_b64 v[7:8], v[5:6], off                       // 0000000744C8: DC6E0000 007C0507
	global_store_b64 v[0:1], v[5:6], off                       // 0000000744D0: DC6E0000 007C0500
	s_nop 0                                                    // 0000000744D8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000744DC: BFB60003
	s_endpgm                                                   // 0000000744E0: BFB00000
subtract_long_get_group_id_get_group_id_symend:
	.long 0xbf800000                                           // 0000000744E4: BF800000
	.long 0xbf800000                                           // 0000000744E8: BF800000
	.long 0xbf800000                                           // 0000000744EC: BF800000
	.long 0xbf800000                                           // 0000000744F0: BF800000
	.long 0xbf800000                                           // 0000000744F4: BF800000
	.long 0xbf800000                                           // 0000000744F8: BF800000
	.long 0xbf800000                                           // 0000000744FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_size_get_group_id,@function
	.size	subtract_long_get_local_size_get_group_id, subtract_long_get_local_size_get_group_id_symend-subtract_long_get_local_size_get_group_id
subtract_long_get_local_size_get_group_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000074500: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000074508: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007450C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000074510: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000074514: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000074518: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000007451C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000074520: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007452C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074534: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007453C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000074540: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 000000074544: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000074548: BF8704D9
	s_add_u32 s6, s5, s6                                       // 00000007454C: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000074550: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000074554: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 000000074558: DC4A0000 07060002
	s_cselect_b32 s8, 14, 20                                   // 000000074560: 9808948E
	s_add_u32 s6, s5, s8                                       // 000000074564: 80060805
	s_addc_u32 s7, s11, 0                                      // 000000074568: 8207800B
	s_cmp_lt_u32 s4, s10                                       // 00000007456C: BF0A0A04
	global_load_u16 v8, v2, s[6:7]                             // 000000074570: DC4A0000 08060002
	s_cselect_b32 s6, 16, 22                                   // 000000074578: 98069690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007457C: BF870009
	s_add_u32 s6, s5, s6                                       // 000000074580: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000074584: 8207800B
	global_load_u16 v9, v2, s[6:7]                             // 000000074588: DC4A0000 09060002
	s_clause 0x2                                               // 000000074590: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074594: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007459C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000745A4: F4040000 F8000008
	s_mov_b32 s6, 0                                            // 0000000745AC: BE860080
	s_waitcnt lgkmcnt(0)                                       // 0000000745B0: BF89FC07
	v_add3_u32 v1, s8, s12, v1                                 // 0000000745B4: D6550001 04041808
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000745BC: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000745C0: D73C0003 00020283
	v_add3_u32 v1, s10, s13, v5                                // 0000000745C8: D6550001 04141A0A
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000745D0: D73C0005 00020283
	v_add3_u32 v1, s5, s14, v0                                 // 0000000745D8: D6550001 04001C05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000745E0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000745E4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000745EC: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000745F0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000745F8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000074600: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000074604: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000074608: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000074610: 40020201
	s_waitcnt vmcnt(2)                                         // 000000074614: BF890BF7
	v_and_b32_e32 v2, 0xffff, v7                               // 000000074618: 36040EFF 0000FFFF
	s_delay_alu instid0(VALU_DEP_1)                            // 000000074620: BF870001
	v_sub_co_u32 v7, s2, v2, s2                                // 000000074624: D7010207 00000502
	s_waitcnt vmcnt(1)                                         // 00000007462C: BF8907F7
	v_and_b32_e32 v10, 0xffff, v8                              // 000000074630: 361410FF 0000FFFF
	v_sub_co_ci_u32_e64 v8, null, s6, 0, s2                    // 000000074638: D5217C08 00090006
	s_waitcnt vmcnt(0)                                         // 000000074640: BF8903F7
	v_and_b32_e32 v2, 0xffff, v9                               // 000000074644: 360412FF 0000FFFF
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007464C: BF870093
	v_sub_co_u32 v9, s2, v10, s3                               // 000000074650: D7010209 0000070A
	v_sub_co_ci_u32_e64 v10, null, s6, 0, s2                   // 000000074658: D5217C0A 00090006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000074660: BF870093
	v_sub_co_u32 v11, s2, v2, s4                               // 000000074664: D701020B 00000902
	v_sub_co_ci_u32_e64 v12, null, s6, 0, s2                   // 00000007466C: D5217C0C 00090006
	s_clause 0x2                                               // 000000074674: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000074678: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000074680: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000074688: DC6E0000 007C0B00
	s_nop 0                                                    // 000000074690: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074694: BFB60003
	s_endpgm                                                   // 000000074698: BFB00000
subtract_long_get_local_size_get_group_id_symend:
	.long 0xbf800000                                           // 00000007469C: BF800000
	.long 0xbf800000                                           // 0000000746A0: BF800000
	.long 0xbf800000                                           // 0000000746A4: BF800000
	.long 0xbf800000                                           // 0000000746A8: BF800000
	.long 0xbf800000                                           // 0000000746AC: BF800000
	.long 0xbf800000                                           // 0000000746B0: BF800000
	.long 0xbf800000                                           // 0000000746B4: BF800000
	.long 0xbf800000                                           // 0000000746B8: BF800000
	.long 0xbf800000                                           // 0000000746BC: BF800000
	.long 0xbf800000                                           // 0000000746C0: BF800000
	.long 0xbf800000                                           // 0000000746C4: BF800000
	.long 0xbf800000                                           // 0000000746C8: BF800000
	.long 0xbf800000                                           // 0000000746CC: BF800000
	.long 0xbf800000                                           // 0000000746D0: BF800000
	.long 0xbf800000                                           // 0000000746D4: BF800000
	.long 0xbf800000                                           // 0000000746D8: BF800000
	.long 0xbf800000                                           // 0000000746DC: BF800000
	.long 0xbf800000                                           // 0000000746E0: BF800000
	.long 0xbf800000                                           // 0000000746E4: BF800000
	.long 0xbf800000                                           // 0000000746E8: BF800000
	.long 0xbf800000                                           // 0000000746EC: BF800000
	.long 0xbf800000                                           // 0000000746F0: BF800000
	.long 0xbf800000                                           // 0000000746F4: BF800000
	.long 0xbf800000                                           // 0000000746F8: BF800000
	.long 0xbf800000                                           // 0000000746FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_id_get_group_id,@function
	.size	subtract_long_get_global_id_get_group_id, subtract_long_get_global_id_get_group_id_symend-subtract_long_get_global_id_get_group_id
subtract_long_get_global_id_get_group_id:
	s_clause 0x2                                               // 000000074700: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074704: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007470C: F4040180 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 000000074714: F4000000 F8000048
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007471C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000074728: D6100005 02291500
	s_lshl_b32 s1, s3, 1                                       // 000000074730: 84018103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074734: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007473C: BF870003
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000074740: D6560001 04050202
	s_mov_b32 s5, 0                                            // 000000074748: BE850080
	s_waitcnt lgkmcnt(0)                                       // 00000007474C: BF89FC07
	s_lshl_b32 s9, s4, 2                                       // 000000074750: 84098204
	s_mov_b32 s33, 0                                           // 000000074754: BEA10080
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000074758: D73C0003 00020283
	v_add_nc_u32_e32 v6, s8, v1                                // 000000074760: 4A0C0208
	v_add3_u32 v1, s10, s1, v5                                 // 000000074764: D6550001 0414020A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000007476C: BF870213
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000074770: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000074778: 40080807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007477C: BF870094
	v_sub_co_u32 v5, s1, v6, s2                                // 000000074780: D7010105 00000506
	v_sub_co_ci_u32_e64 v6, null, s5, 0, s1                    // 000000074788: D5217C06 00050005
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 000000074790: D73C0007 00020283
	v_sub_co_u32 v9, s1, v1, s3                                // 000000074798: D7010109 00000701
	v_add3_u32 v1, s0, s9, v0                                  // 0000000747A0: D6550001 04001200
	v_sub_co_ci_u32_e64 v10, null, s5, 0, s1                   // 0000000747A8: D5217C0A 00050005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000747B0: BF870194
	v_add_co_u32 v7, vcc_lo, s6, v7                            // 0000000747B4: D7006A07 00020E06
	v_lshlrev_b64 v[11:12], 3, v[1:2]                          // 0000000747BC: D73C000B 00020283
	v_add_co_ci_u32_e32 v8, vcc_lo, s7, v8, vcc_lo             // 0000000747C4: 40101007
	v_sub_co_u32 v0, s0, v1, s4                                // 0000000747C8: D7010000 00000901
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000747D0: BF870211
	v_sub_co_ci_u32_e64 v1, null, s5, 0, s0                    // 0000000747D4: D5217C01 00010005
	v_add_co_u32 v11, vcc_lo, s6, v11                          // 0000000747DC: D7006A0B 00021606
	v_add_co_ci_u32_e32 v12, vcc_lo, s7, v12, vcc_lo           // 0000000747E4: 40181807
	s_clause 0x2                                               // 0000000747E8: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 0000000747EC: DC6E0000 007C0503
	global_store_b64 v[7:8], v[9:10], off                      // 0000000747F4: DC6E0000 007C0907
	global_store_b64 v[11:12], v[0:1], off                     // 0000000747FC: DC6E0000 007C000B
	s_nop 0                                                    // 000000074804: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074808: BFB60003
	s_endpgm                                                   // 00000007480C: BFB00000
subtract_long_get_global_id_get_group_id_symend:
	.long 0xbf800000                                           // 000000074810: BF800000
	.long 0xbf800000                                           // 000000074814: BF800000
	.long 0xbf800000                                           // 000000074818: BF800000
	.long 0xbf800000                                           // 00000007481C: BF800000
	.long 0xbf800000                                           // 000000074820: BF800000
	.long 0xbf800000                                           // 000000074824: BF800000
	.long 0xbf800000                                           // 000000074828: BF800000
	.long 0xbf800000                                           // 00000007482C: BF800000
	.long 0xbf800000                                           // 000000074830: BF800000
	.long 0xbf800000                                           // 000000074834: BF800000
	.long 0xbf800000                                           // 000000074838: BF800000
	.long 0xbf800000                                           // 00000007483C: BF800000
	.long 0xbf800000                                           // 000000074840: BF800000
	.long 0xbf800000                                           // 000000074844: BF800000
	.long 0xbf800000                                           // 000000074848: BF800000
	.long 0xbf800000                                           // 00000007484C: BF800000
	.long 0xbf800000                                           // 000000074850: BF800000
	.long 0xbf800000                                           // 000000074854: BF800000
	.long 0xbf800000                                           // 000000074858: BF800000
	.long 0xbf800000                                           // 00000007485C: BF800000
	.long 0xbf800000                                           // 000000074860: BF800000
	.long 0xbf800000                                           // 000000074864: BF800000
	.long 0xbf800000                                           // 000000074868: BF800000
	.long 0xbf800000                                           // 00000007486C: BF800000
	.long 0xbf800000                                           // 000000074870: BF800000
	.long 0xbf800000                                           // 000000074874: BF800000
	.long 0xbf800000                                           // 000000074878: BF800000
	.long 0xbf800000                                           // 00000007487C: BF800000
	.long 0xbf800000                                           // 000000074880: BF800000
	.long 0xbf800000                                           // 000000074884: BF800000
	.long 0xbf800000                                           // 000000074888: BF800000
	.long 0xbf800000                                           // 00000007488C: BF800000
	.long 0xbf800000                                           // 000000074890: BF800000
	.long 0xbf800000                                           // 000000074894: BF800000
	.long 0xbf800000                                           // 000000074898: BF800000
	.long 0xbf800000                                           // 00000007489C: BF800000
	.long 0xbf800000                                           // 0000000748A0: BF800000
	.long 0xbf800000                                           // 0000000748A4: BF800000
	.long 0xbf800000                                           // 0000000748A8: BF800000
	.long 0xbf800000                                           // 0000000748AC: BF800000
	.long 0xbf800000                                           // 0000000748B0: BF800000
	.long 0xbf800000                                           // 0000000748B4: BF800000
	.long 0xbf800000                                           // 0000000748B8: BF800000
	.long 0xbf800000                                           // 0000000748BC: BF800000
	.long 0xbf800000                                           // 0000000748C0: BF800000
	.long 0xbf800000                                           // 0000000748C4: BF800000
	.long 0xbf800000                                           // 0000000748C8: BF800000
	.long 0xbf800000                                           // 0000000748CC: BF800000
	.long 0xbf800000                                           // 0000000748D0: BF800000
	.long 0xbf800000                                           // 0000000748D4: BF800000
	.long 0xbf800000                                           // 0000000748D8: BF800000
	.long 0xbf800000                                           // 0000000748DC: BF800000
	.long 0xbf800000                                           // 0000000748E0: BF800000
	.long 0xbf800000                                           // 0000000748E4: BF800000
	.long 0xbf800000                                           // 0000000748E8: BF800000
	.long 0xbf800000                                           // 0000000748EC: BF800000
	.long 0xbf800000                                           // 0000000748F0: BF800000
	.long 0xbf800000                                           // 0000000748F4: BF800000
	.long 0xbf800000                                           // 0000000748F8: BF800000
	.long 0xbf800000                                           // 0000000748FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_size_get_group_id,@function
	.size	subtract_long_get_global_size_get_group_id, subtract_long_get_global_size_get_group_id_symend-subtract_long_get_global_size_get_group_id
subtract_long_get_global_size_get_group_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000074900: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 4                                       // 00000007490C: 84068402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000074910: D6100005 02291500
	s_lshl_b32 s7, s3, 1                                       // 000000074918: 84078103
	s_clause 0x1                                               // 00000007491C: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000074920: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000074928: DC4A0026 08000002
	s_clause 0x3                                               // 000000074930: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074934: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007493C: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000074944: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007494C: F4040000 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074954: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007495C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000074960: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 000000074964: D6550001 04040C08
	s_lshl_b32 s8, s4, 1                                       // 00000007496C: 84088104
	s_lshl_b32 s9, s13, 1                                      // 000000074970: 8409810D
	s_mov_b32 s6, 0                                            // 000000074974: BE860080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000074978: BF8700C1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007497C: D73C0003 00020283
	v_add3_u32 v1, s10, s7, v5                                 // 000000074984: D6550001 04140E0A
	s_lshl_b32 s7, s12, 4                                      // 00000007498C: 8407840C
	s_lshl_b32 s10, s14, 1                                     // 000000074990: 840A810E
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000074994: D73C0005 00020283
	v_add3_u32 v1, s5, s8, v0                                  // 00000007499C: D6550001 04001005
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000749A4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000749AC: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000749B0: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000749B4: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000749BC: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000749C4: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000749C8: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000749D0: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000749D4: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000749D8: BF8907F7
	v_and_b32_e32 v2, 0xffff, v7                               // 0000000749DC: 36040EFF 0000FFFF
	v_lshrrev_b32_e32 v7, 16, v7                               // 0000000749E4: 320E0E90
	s_waitcnt vmcnt(0)                                         // 0000000749E8: BF8903F7
	v_add_nc_u32_e32 v11, s10, v8                              // 0000000749EC: 4A16100A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000749F0: BF870193
	v_add_nc_u32_e32 v2, s7, v2                                // 0000000749F4: 4A040407
	v_add_nc_u32_e32 v9, s9, v7                                // 0000000749F8: 4A120E09
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000749FC: BF870092
	v_sub_co_u32 v7, s0, v2, s2                                // 000000074A00: D7010007 00000502
	v_sub_co_ci_u32_e64 v8, null, s6, 0, s0                    // 000000074A08: D5217C08 00010006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000074A10: BF870093
	v_sub_co_u32 v9, s0, v9, s3                                // 000000074A14: D7010009 00000709
	v_sub_co_ci_u32_e64 v10, null, s6, 0, s0                   // 000000074A1C: D5217C0A 00010006
	v_sub_co_u32 v11, s0, v11, s4                              // 000000074A24: D701000B 0000090B
	s_delay_alu instid0(VALU_DEP_1)                            // 000000074A2C: BF870001
	v_sub_co_ci_u32_e64 v12, null, s6, 0, s0                   // 000000074A30: D5217C0C 00010006
	s_clause 0x2                                               // 000000074A38: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000074A3C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000074A44: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000074A4C: DC6E0000 007C0B00
	s_nop 0                                                    // 000000074A54: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074A58: BFB60003
	s_endpgm                                                   // 000000074A5C: BFB00000
subtract_long_get_global_size_get_group_id_symend:
	.long 0xbf800000                                           // 000000074A60: BF800000
	.long 0xbf800000                                           // 000000074A64: BF800000
	.long 0xbf800000                                           // 000000074A68: BF800000
	.long 0xbf800000                                           // 000000074A6C: BF800000
	.long 0xbf800000                                           // 000000074A70: BF800000
	.long 0xbf800000                                           // 000000074A74: BF800000
	.long 0xbf800000                                           // 000000074A78: BF800000
	.long 0xbf800000                                           // 000000074A7C: BF800000
	.long 0xbf800000                                           // 000000074A80: BF800000
	.long 0xbf800000                                           // 000000074A84: BF800000
	.long 0xbf800000                                           // 000000074A88: BF800000
	.long 0xbf800000                                           // 000000074A8C: BF800000
	.long 0xbf800000                                           // 000000074A90: BF800000
	.long 0xbf800000                                           // 000000074A94: BF800000
	.long 0xbf800000                                           // 000000074A98: BF800000
	.long 0xbf800000                                           // 000000074A9C: BF800000
	.long 0xbf800000                                           // 000000074AA0: BF800000
	.long 0xbf800000                                           // 000000074AA4: BF800000
	.long 0xbf800000                                           // 000000074AA8: BF800000
	.long 0xbf800000                                           // 000000074AAC: BF800000
	.long 0xbf800000                                           // 000000074AB0: BF800000
	.long 0xbf800000                                           // 000000074AB4: BF800000
	.long 0xbf800000                                           // 000000074AB8: BF800000
	.long 0xbf800000                                           // 000000074ABC: BF800000
	.long 0xbf800000                                           // 000000074AC0: BF800000
	.long 0xbf800000                                           // 000000074AC4: BF800000
	.long 0xbf800000                                           // 000000074AC8: BF800000
	.long 0xbf800000                                           // 000000074ACC: BF800000
	.long 0xbf800000                                           // 000000074AD0: BF800000
	.long 0xbf800000                                           // 000000074AD4: BF800000
	.long 0xbf800000                                           // 000000074AD8: BF800000
	.long 0xbf800000                                           // 000000074ADC: BF800000
	.long 0xbf800000                                           // 000000074AE0: BF800000
	.long 0xbf800000                                           // 000000074AE4: BF800000
	.long 0xbf800000                                           // 000000074AE8: BF800000
	.long 0xbf800000                                           // 000000074AEC: BF800000
	.long 0xbf800000                                           // 000000074AF0: BF800000
	.long 0xbf800000                                           // 000000074AF4: BF800000
	.long 0xbf800000                                           // 000000074AF8: BF800000
	.long 0xbf800000                                           // 000000074AFC: BF800000

	.p2align	8
	.type	subtract_long_get_num_groups_get_group_id,@function
	.size	subtract_long_get_num_groups_get_group_id, subtract_long_get_num_groups_get_group_id_symend-subtract_long_get_num_groups_get_group_id
subtract_long_get_num_groups_get_group_id:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000074B00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000074B0C: F4040180 F8000008
	v_bfe_u32 v5, v0, 10, 10                                   // 000000074B14: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074B1C: D6100000 02292900
	s_clause 0x1                                               // 000000074B24: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000074B28: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000074B30: DC4A0026 08000002
	s_clause 0x2                                               // 000000074B38: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074B3C: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000074B44: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000074B4C: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 000000074B54: BF89FC07
	s_lshl_b32 s9, s2, 1                                       // 000000074B58: 84098102
	s_lshl_b32 s0, s3, 1                                       // 000000074B5C: 84008103
	s_mov_b32 s33, 0                                           // 000000074B60: BEA10080
	v_add3_u32 v1, s8, s9, v1                                  // 000000074B64: D6550001 04041208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000074B6C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000074B70: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000074B78: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000074B80: 84008204
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000074B84: D73C0005 00020283
	v_add3_u32 v1, s5, s0, v0                                  // 000000074B8C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000074B94: BF870094
	v_add_co_u32 v3, s1, s6, v3                                // 000000074B98: D7000103 00020606
	v_add_co_ci_u32_e64 v4, s1, s7, v4, s1                     // 000000074BA0: D5200104 00060807
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000074BA8: BF870143
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000074BAC: D73C0000 00020283
	s_waitcnt vmcnt(1)                                         // 000000074BB4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 000000074BB8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000074BBC: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 000000074BC0: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000074BC8: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000074BCC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 000000074BD0: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 000000074BD4: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 000000074BD8: BF078000
	s_addc_u32 s5, s13, 0                                      // 000000074BDC: 8205800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000074BE0: BF07806A
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 000000074BE4: D7006A05 00020A06
	s_addc_u32 s8, s14, 0                                      // 000000074BEC: 8208800E
	s_sub_u32 s0, s1, s2                                       // 000000074BF0: 80800201
	s_subb_u32 s1, 0, 0                                        // 000000074BF4: 82818080
	s_sub_u32 s2, s5, s3                                       // 000000074BF8: 80820305
	s_subb_u32 s3, 0, 0                                        // 000000074BFC: 82838080
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 000000074C00: 400C0C07
	v_dual_mov_b32 v8, s1 :: v_dual_mov_b32 v7, s0             // 000000074C04: CA100001 08060000
	s_sub_u32 s0, s8, s4                                       // 000000074C0C: 80800408
	s_subb_u32 s1, 0, 0                                        // 000000074C10: 82818080
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000074C14: D7006A00 00020006
	v_dual_mov_b32 v10, s3 :: v_dual_mov_b32 v9, s2            // 000000074C1C: CA100003 0A080002
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000074C24: 40020207
	v_dual_mov_b32 v12, s1 :: v_dual_mov_b32 v11, s0           // 000000074C28: CA100001 0C0A0000
	s_clause 0x2                                               // 000000074C30: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000074C34: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000074C3C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000074C44: DC6E0000 007C0B00
	s_nop 0                                                    // 000000074C4C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074C50: BFB60003
	s_endpgm                                                   // 000000074C54: BFB00000
subtract_long_get_num_groups_get_group_id_symend:
	.long 0xbf800000                                           // 000000074C58: BF800000
	.long 0xbf800000                                           // 000000074C5C: BF800000
	.long 0xbf800000                                           // 000000074C60: BF800000
	.long 0xbf800000                                           // 000000074C64: BF800000
	.long 0xbf800000                                           // 000000074C68: BF800000
	.long 0xbf800000                                           // 000000074C6C: BF800000
	.long 0xbf800000                                           // 000000074C70: BF800000
	.long 0xbf800000                                           // 000000074C74: BF800000
	.long 0xbf800000                                           // 000000074C78: BF800000
	.long 0xbf800000                                           // 000000074C7C: BF800000
	.long 0xbf800000                                           // 000000074C80: BF800000
	.long 0xbf800000                                           // 000000074C84: BF800000
	.long 0xbf800000                                           // 000000074C88: BF800000
	.long 0xbf800000                                           // 000000074C8C: BF800000
	.long 0xbf800000                                           // 000000074C90: BF800000
	.long 0xbf800000                                           // 000000074C94: BF800000
	.long 0xbf800000                                           // 000000074C98: BF800000
	.long 0xbf800000                                           // 000000074C9C: BF800000
	.long 0xbf800000                                           // 000000074CA0: BF800000
	.long 0xbf800000                                           // 000000074CA4: BF800000
	.long 0xbf800000                                           // 000000074CA8: BF800000
	.long 0xbf800000                                           // 000000074CAC: BF800000
	.long 0xbf800000                                           // 000000074CB0: BF800000
	.long 0xbf800000                                           // 000000074CB4: BF800000
	.long 0xbf800000                                           // 000000074CB8: BF800000
	.long 0xbf800000                                           // 000000074CBC: BF800000
	.long 0xbf800000                                           // 000000074CC0: BF800000
	.long 0xbf800000                                           // 000000074CC4: BF800000
	.long 0xbf800000                                           // 000000074CC8: BF800000
	.long 0xbf800000                                           // 000000074CCC: BF800000
	.long 0xbf800000                                           // 000000074CD0: BF800000
	.long 0xbf800000                                           // 000000074CD4: BF800000
	.long 0xbf800000                                           // 000000074CD8: BF800000
	.long 0xbf800000                                           // 000000074CDC: BF800000
	.long 0xbf800000                                           // 000000074CE0: BF800000
	.long 0xbf800000                                           // 000000074CE4: BF800000
	.long 0xbf800000                                           // 000000074CE8: BF800000
	.long 0xbf800000                                           // 000000074CEC: BF800000
	.long 0xbf800000                                           // 000000074CF0: BF800000
	.long 0xbf800000                                           // 000000074CF4: BF800000
	.long 0xbf800000                                           // 000000074CF8: BF800000
	.long 0xbf800000                                           // 000000074CFC: BF800000

	.p2align	8
	.type	subtract_long_get_work_dim_get_group_id,@function
	.size	subtract_long_get_work_dim_get_group_id, subtract_long_get_work_dim_get_group_id_symend-subtract_long_get_work_dim_get_group_id
subtract_long_get_work_dim_get_group_id:
	s_clause 0x2                                               // 000000074D00: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 000000074D04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074D0C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000074D14: F4040180 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000074D1C: BF89FC07
	s_load_b32 s9, s[0:1], 0x48                                // 000000074D20: F4000240 F8000048
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000074D28: CA240080 020000FF 000003FF
	s_lshl_b32 s0, s2, 1                                       // 000000074D34: 84008102
	v_bfe_u32 v7, v0, 10, 10                                   // 000000074D38: D6100007 02291500
	s_lshl_b32 s11, s3, 1                                      // 000000074D40: 840B8103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074D44: D6100000 02292900
	s_lshl_b32 s12, s4, 2                                      // 000000074D4C: 840C8204
	s_mov_b32 s33, 0                                           // 000000074D50: BEA10080
	s_and_b32 s5, s5, 0xffff                                   // 000000074D54: 8B05FF05 0000FFFF
	v_add3_u32 v1, s8, s0, v1                                  // 000000074D5C: D6550001 04040008
	s_sub_u32 s0, s5, s2                                       // 000000074D64: 80800205
	s_subb_u32 s1, 0, 0                                        // 000000074D68: 82818080
	s_sub_u32 s2, s5, s3                                       // 000000074D6C: 80820305
	s_subb_u32 s3, 0, 0                                        // 000000074D70: 82838080
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000074D74: D73C0003 00020283
	v_add3_u32 v1, s10, s11, v7                                // 000000074D7C: D6550001 041C160A
	v_dual_mov_b32 v6, s1 :: v_dual_mov_b32 v5, s0             // 000000074D84: CA100001 06040000
	s_sub_u32 s0, s5, s4                                       // 000000074D8C: 80800405
	s_subb_u32 s1, 0, 0                                        // 000000074D90: 82818080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000074D94: BF8701D2
	v_lshlrev_b64 v[9:10], 3, v[1:2]                           // 000000074D98: D73C0009 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000074DA0: BF89FC07
	v_add3_u32 v1, s9, s12, v0                                 // 000000074DA4: D6550001 04001809
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000074DAC: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000074DB4: 40080807
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000074DB8: D73C0000 00020283
	v_add_co_u32 v9, vcc_lo, s6, v9                            // 000000074DC0: D7006A09 00021206
	v_add_co_ci_u32_e32 v10, vcc_lo, s7, v10, vcc_lo           // 000000074DC8: 40141407
	v_dual_mov_b32 v8, s3 :: v_dual_mov_b32 v7, s2             // 000000074DCC: CA100003 08060002
	s_delay_alu instid0(VALU_DEP_4)                            // 000000074DD4: BF870004
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000074DD8: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000074DE0: 40020207
	v_dual_mov_b32 v12, s1 :: v_dual_mov_b32 v11, s0           // 000000074DE4: CA100001 0C0A0000
	s_clause 0x2                                               // 000000074DEC: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 000000074DF0: DC6E0000 007C0503
	global_store_b64 v[9:10], v[7:8], off                      // 000000074DF8: DC6E0000 007C0709
	global_store_b64 v[0:1], v[11:12], off                     // 000000074E00: DC6E0000 007C0B00
	s_nop 0                                                    // 000000074E08: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000074E0C: BFB60003
	s_endpgm                                                   // 000000074E10: BFB00000
subtract_long_get_work_dim_get_group_id_symend:
	.long 0xbf800000                                           // 000000074E14: BF800000
	.long 0xbf800000                                           // 000000074E18: BF800000
	.long 0xbf800000                                           // 000000074E1C: BF800000
	.long 0xbf800000                                           // 000000074E20: BF800000
	.long 0xbf800000                                           // 000000074E24: BF800000
	.long 0xbf800000                                           // 000000074E28: BF800000
	.long 0xbf800000                                           // 000000074E2C: BF800000
	.long 0xbf800000                                           // 000000074E30: BF800000
	.long 0xbf800000                                           // 000000074E34: BF800000
	.long 0xbf800000                                           // 000000074E38: BF800000
	.long 0xbf800000                                           // 000000074E3C: BF800000
	.long 0xbf800000                                           // 000000074E40: BF800000
	.long 0xbf800000                                           // 000000074E44: BF800000
	.long 0xbf800000                                           // 000000074E48: BF800000
	.long 0xbf800000                                           // 000000074E4C: BF800000
	.long 0xbf800000                                           // 000000074E50: BF800000
	.long 0xbf800000                                           // 000000074E54: BF800000
	.long 0xbf800000                                           // 000000074E58: BF800000
	.long 0xbf800000                                           // 000000074E5C: BF800000
	.long 0xbf800000                                           // 000000074E60: BF800000
	.long 0xbf800000                                           // 000000074E64: BF800000
	.long 0xbf800000                                           // 000000074E68: BF800000
	.long 0xbf800000                                           // 000000074E6C: BF800000
	.long 0xbf800000                                           // 000000074E70: BF800000
	.long 0xbf800000                                           // 000000074E74: BF800000
	.long 0xbf800000                                           // 000000074E78: BF800000
	.long 0xbf800000                                           // 000000074E7C: BF800000
	.long 0xbf800000                                           // 000000074E80: BF800000
	.long 0xbf800000                                           // 000000074E84: BF800000
	.long 0xbf800000                                           // 000000074E88: BF800000
	.long 0xbf800000                                           // 000000074E8C: BF800000
	.long 0xbf800000                                           // 000000074E90: BF800000
	.long 0xbf800000                                           // 000000074E94: BF800000
	.long 0xbf800000                                           // 000000074E98: BF800000
	.long 0xbf800000                                           // 000000074E9C: BF800000
	.long 0xbf800000                                           // 000000074EA0: BF800000
	.long 0xbf800000                                           // 000000074EA4: BF800000
	.long 0xbf800000                                           // 000000074EA8: BF800000
	.long 0xbf800000                                           // 000000074EAC: BF800000
	.long 0xbf800000                                           // 000000074EB0: BF800000
	.long 0xbf800000                                           // 000000074EB4: BF800000
	.long 0xbf800000                                           // 000000074EB8: BF800000
	.long 0xbf800000                                           // 000000074EBC: BF800000
	.long 0xbf800000                                           // 000000074EC0: BF800000
	.long 0xbf800000                                           // 000000074EC4: BF800000
	.long 0xbf800000                                           // 000000074EC8: BF800000
	.long 0xbf800000                                           // 000000074ECC: BF800000
	.long 0xbf800000                                           // 000000074ED0: BF800000
	.long 0xbf800000                                           // 000000074ED4: BF800000
	.long 0xbf800000                                           // 000000074ED8: BF800000
	.long 0xbf800000                                           // 000000074EDC: BF800000
	.long 0xbf800000                                           // 000000074EE0: BF800000
	.long 0xbf800000                                           // 000000074EE4: BF800000
	.long 0xbf800000                                           // 000000074EE8: BF800000
	.long 0xbf800000                                           // 000000074EEC: BF800000
	.long 0xbf800000                                           // 000000074EF0: BF800000
	.long 0xbf800000                                           // 000000074EF4: BF800000
	.long 0xbf800000                                           // 000000074EF8: BF800000
	.long 0xbf800000                                           // 000000074EFC: BF800000

	.p2align	8
	.type	subtract_long_x_get_local_size,@function
	.size	subtract_long_x_get_local_size, subtract_long_x_get_local_size_symend-subtract_long_x_get_local_size
subtract_long_x_get_local_size:
	s_clause 0x2                                               // 000000074F00: BF850002
	s_load_b32 s5, s[0:1], 0x8                                 // 000000074F04: F4000140 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000074F0C: F4080300 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000074F14: F4080200 F8000038
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000074F1C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000074F28: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000074F30: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000074F38: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000074F3C: BF89FC07
	s_ashr_i32 s9, s5, 31                                      // 000000074F40: 86099F05
	s_add_u32 s11, s0, 16                                      // 000000074F44: 800B9000
	s_addc_u32 s15, s1, 0                                      // 000000074F48: 820F8001
	s_lshl_b32 s16, s2, 4                                      // 000000074F4C: 84108402
	s_lshl_b32 s17, s3, 1                                      // 000000074F50: 84118103
	s_lshl_b32 s18, s4, 1                                      // 000000074F54: 84128104
	s_cmp_lt_u32 s2, s12                                       // 000000074F58: BF0A0C02
	v_add3_u32 v1, s8, s16, v1                                 // 000000074F5C: D6550001 04042008
	s_cselect_b32 s2, 12, 18                                   // 000000074F64: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000074F68: BF870009
	s_add_u32 s6, s11, s2                                      // 000000074F6C: 8006020B
	s_addc_u32 s7, s15, 0                                      // 000000074F70: 8207800F
	s_cmp_lt_u32 s3, s13                                       // 000000074F74: BF0A0D03
	global_load_u16 v7, v2, s[6:7]                             // 000000074F78: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 000000074F80: 9802948E
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000074F84: D73C0003 00020283
	s_add_u32 s2, s11, s2                                      // 000000074F8C: 8002020B
	s_addc_u32 s3, s15, 0                                      // 000000074F90: 8203800F
	s_cmp_lt_u32 s4, s14                                       // 000000074F94: BF0A0E04
	global_load_u16 v8, v2, s[2:3]                             // 000000074F98: DC4A0000 08020002
	s_cselect_b32 s4, 16, 22                                   // 000000074FA0: 98049690
	v_add3_u32 v1, s10, s17, v5                                // 000000074FA4: D6550001 0414220A
	s_add_u32 s2, s11, s4                                      // 000000074FAC: 8002040B
	s_addc_u32 s3, s15, 0                                      // 000000074FB0: 8203800F
	global_load_u16 v9, v2, s[2:3]                             // 000000074FB4: DC4A0000 09020002
	s_clause 0x1                                               // 000000074FBC: BF850001
	s_load_b64 s[2:3], s[0:1], null                            // 000000074FC0: F4040080 F8000000
	s_load_b32 s0, s[0:1], 0x48                                // 000000074FC8: F4000000 F8000048
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000074FD0: D73C0005 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000074FD8: BF89FC07
	v_add_co_u32 v3, vcc_lo, s2, v3                            // 000000074FDC: D7006A03 00020602
	v_add3_u32 v1, s0, s18, v0                                 // 000000074FE4: D6550001 04002400
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo             // 000000074FEC: 40080803
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000074FF0: BF870194
	v_add_co_u32 v5, vcc_lo, s2, v5                            // 000000074FF4: D7006A05 00020A02
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000074FFC: D73C0000 00020283
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo             // 000000075004: 400C0C03
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000075008: BF870192
	v_add_co_u32 v0, vcc_lo, s2, v0                            // 00000007500C: D7006A00 00020002
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo             // 000000075014: 40020203
	s_waitcnt vmcnt(2)                                         // 000000075018: BF890BF7
	v_and_b32_e32 v7, 0xffff, v7                               // 00000007501C: 360E0EFF 0000FFFF
	s_delay_alu instid0(VALU_DEP_1)                            // 000000075024: BF870001
	v_sub_co_u32 v7, s0, s5, v7                                // 000000075028: D7010007 00020E05
	s_waitcnt vmcnt(1)                                         // 000000075030: BF8907F7
	v_and_b32_e32 v2, 0xffff, v8                               // 000000075034: 360410FF 0000FFFF
	v_sub_co_ci_u32_e64 v8, null, s9, 0, s0                    // 00000007503C: D5217C08 00010009
	s_waitcnt vmcnt(0)                                         // 000000075044: BF8903F7
	v_and_b32_e32 v11, 0xffff, v9                              // 000000075048: 361612FF 0000FFFF
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075050: BF870093
	v_sub_co_u32 v9, s0, s5, v2                                // 000000075054: D7010009 00020405
	v_sub_co_ci_u32_e64 v10, null, s9, 0, s0                   // 00000007505C: D5217C0A 00010009
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075064: BF870093
	v_sub_co_u32 v11, s0, s5, v11                              // 000000075068: D701000B 00021605
	v_sub_co_ci_u32_e64 v12, null, s9, 0, s0                   // 000000075070: D5217C0C 00010009
	s_clause 0x2                                               // 000000075078: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 00000007507C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000075084: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 00000007508C: DC6E0000 007C0B00
	s_nop 0                                                    // 000000075094: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075098: BFB60003
	s_endpgm                                                   // 00000007509C: BFB00000
subtract_long_x_get_local_size_symend:
	.long 0xbf800000                                           // 0000000750A0: BF800000
	.long 0xbf800000                                           // 0000000750A4: BF800000
	.long 0xbf800000                                           // 0000000750A8: BF800000
	.long 0xbf800000                                           // 0000000750AC: BF800000
	.long 0xbf800000                                           // 0000000750B0: BF800000
	.long 0xbf800000                                           // 0000000750B4: BF800000
	.long 0xbf800000                                           // 0000000750B8: BF800000
	.long 0xbf800000                                           // 0000000750BC: BF800000
	.long 0xbf800000                                           // 0000000750C0: BF800000
	.long 0xbf800000                                           // 0000000750C4: BF800000
	.long 0xbf800000                                           // 0000000750C8: BF800000
	.long 0xbf800000                                           // 0000000750CC: BF800000
	.long 0xbf800000                                           // 0000000750D0: BF800000
	.long 0xbf800000                                           // 0000000750D4: BF800000
	.long 0xbf800000                                           // 0000000750D8: BF800000
	.long 0xbf800000                                           // 0000000750DC: BF800000
	.long 0xbf800000                                           // 0000000750E0: BF800000
	.long 0xbf800000                                           // 0000000750E4: BF800000
	.long 0xbf800000                                           // 0000000750E8: BF800000
	.long 0xbf800000                                           // 0000000750EC: BF800000
	.long 0xbf800000                                           // 0000000750F0: BF800000
	.long 0xbf800000                                           // 0000000750F4: BF800000
	.long 0xbf800000                                           // 0000000750F8: BF800000
	.long 0xbf800000                                           // 0000000750FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_offset_get_local_size,@function
	.size	subtract_long_get_global_offset_get_local_size, subtract_long_get_global_offset_get_local_size_symend-subtract_long_get_global_offset_get_local_size
subtract_long_get_global_offset_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000075100: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000075108: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007510C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000075110: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000075114: 840C8102
	s_lshl_b32 s13, s3, 4                                      // 000000075118: 840D8403
	s_lshl_b32 s14, s4, 1                                      // 00000007511C: 840E8104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000075120: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007512C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075134: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007513C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000075140: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000075144: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000075148: BF8704D9
	s_add_u32 s6, s5, s2                                       // 00000007514C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000075150: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000075154: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 000000075158: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 000000075160: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000075164: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000075168: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007516C: BF0A0A04
	global_load_u16 v8, v2, s[2:3]                             // 000000075170: DC4A0000 08020002
	s_cselect_b32 s2, 16, 22                                   // 000000075178: 98029690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007517C: BF870009
	s_add_u32 s2, s5, s2                                       // 000000075180: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000075184: 8203800B
	global_load_u16 v9, v2, s[2:3]                             // 000000075188: DC4A0000 09020002
	s_clause 0x2                                               // 000000075190: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000075194: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000007519C: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000751A4: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000751AC: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 0000000751B0: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000751B8: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000751BC: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v5                                 // 0000000751C4: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000751CC: D73C0005 00020283
	v_add3_u32 v1, s2, s14, v0                                 // 0000000751D4: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000751DC: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000751E0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000751E8: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000751EC: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000751F4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000751FC: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000075200: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000075204: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007520C: 40020201
	s_waitcnt vmcnt(2)                                         // 000000075210: BF890BF7
	v_and_b32_e32 v2, 0xffff, v7                               // 000000075214: 36040EFF 0000FFFF
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007521C: BF870001
	v_sub_co_u32 v7, s3, s4, v2                                // 000000075220: D7010307 00020404
	s_waitcnt vmcnt(1)                                         // 000000075228: BF8907F7
	v_and_b32_e32 v10, 0xffff, v8                              // 00000007522C: 361410FF 0000FFFF
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s3                     // 000000075234: D5217C08 000D0080
	s_waitcnt vmcnt(0)                                         // 00000007523C: BF8903F7
	v_and_b32_e32 v2, 0xffff, v9                               // 000000075240: 360412FF 0000FFFF
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075248: BF870093
	v_sub_co_u32 v9, s3, s6, v10                               // 00000007524C: D7010309 00021406
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s3                    // 000000075254: D5217C0A 000D0080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007525C: BF870093
	v_sub_co_u32 v11, s2, s2, v2                               // 000000075260: D701020B 00020402
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s2                    // 000000075268: D5217C0C 00090080
	s_clause 0x2                                               // 000000075270: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000075274: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 00000007527C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000075284: DC6E0000 007C0B00
	s_nop 0                                                    // 00000007528C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075290: BFB60003
	s_endpgm                                                   // 000000075294: BFB00000
subtract_long_get_global_offset_get_local_size_symend:
	.long 0xbf800000                                           // 000000075298: BF800000
	.long 0xbf800000                                           // 00000007529C: BF800000
	.long 0xbf800000                                           // 0000000752A0: BF800000
	.long 0xbf800000                                           // 0000000752A4: BF800000
	.long 0xbf800000                                           // 0000000752A8: BF800000
	.long 0xbf800000                                           // 0000000752AC: BF800000
	.long 0xbf800000                                           // 0000000752B0: BF800000
	.long 0xbf800000                                           // 0000000752B4: BF800000
	.long 0xbf800000                                           // 0000000752B8: BF800000
	.long 0xbf800000                                           // 0000000752BC: BF800000
	.long 0xbf800000                                           // 0000000752C0: BF800000
	.long 0xbf800000                                           // 0000000752C4: BF800000
	.long 0xbf800000                                           // 0000000752C8: BF800000
	.long 0xbf800000                                           // 0000000752CC: BF800000
	.long 0xbf800000                                           // 0000000752D0: BF800000
	.long 0xbf800000                                           // 0000000752D4: BF800000
	.long 0xbf800000                                           // 0000000752D8: BF800000
	.long 0xbf800000                                           // 0000000752DC: BF800000
	.long 0xbf800000                                           // 0000000752E0: BF800000
	.long 0xbf800000                                           // 0000000752E4: BF800000
	.long 0xbf800000                                           // 0000000752E8: BF800000
	.long 0xbf800000                                           // 0000000752EC: BF800000
	.long 0xbf800000                                           // 0000000752F0: BF800000
	.long 0xbf800000                                           // 0000000752F4: BF800000
	.long 0xbf800000                                           // 0000000752F8: BF800000
	.long 0xbf800000                                           // 0000000752FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_id_get_local_size,@function
	.size	subtract_long_get_local_id_get_local_size, subtract_long_get_local_id_get_local_size_symend-subtract_long_get_local_id_get_local_size
subtract_long_get_local_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000075300: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000075308: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007530C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000075310: 820B8001
	s_lshl_b32 s12, s2, 3                                      // 000000075314: 840C8302
	s_lshl_b32 s13, s3, 2                                      // 000000075318: 840D8203
	s_lshl_b32 s14, s4, 1                                      // 00000007531C: 840E8104
	v_mov_b32_e32 v2, 0                                        // 000000075320: 7E040280
	v_and_b32_e32 v10, 0x3ff, v0                               // 000000075324: 361400FF 000003FF
	v_bfe_u32 v11, v0, 10, 10                                  // 00000007532C: D610000B 02291500
	v_bfe_u32 v12, v0, 20, 10                                  // 000000075334: D610000C 02292900
	s_mov_b32 s33, 0                                           // 00000007533C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000075340: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000075344: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000075348: BF8704D9
	s_add_u32 s6, s5, s2                                       // 00000007534C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000075350: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000075354: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 000000075358: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 000000075360: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000075364: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000075368: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007536C: BF0A0A04
	global_load_u16 v8, v2, s[2:3]                             // 000000075370: DC4A0000 08020002
	s_cselect_b32 s2, 16, 22                                   // 000000075378: 98029690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007537C: BF870009
	s_add_u32 s2, s5, s2                                       // 000000075380: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000075384: 8203800B
	s_waitcnt vmcnt(0)                                         // 000000075388: BF8903F7
	v_and_b32_e32 v13, 0xffff, v8                              // 00000007538C: 361A10FF 0000FFFF
	global_load_u16 v9, v2, s[2:3]                             // 000000075394: DC4A0000 09020002
	s_clause 0x2                                               // 00000007539C: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 0000000753A0: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 0000000753A8: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000753B0: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000753B8: BF89FC07
	v_add3_u32 v1, s4, s12, v10                                // 0000000753BC: D6550001 04281804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000753C4: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000753C8: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v11                                // 0000000753D0: D6550001 042C1A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000753D8: D73C0005 00020283
	v_add3_u32 v1, s2, s14, v12                                // 0000000753E0: D6550001 04301C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000753E8: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000753EC: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000753F4: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000753F8: D73C0000 00020283
	v_and_b32_e32 v2, 0xffff, v7                               // 000000075400: 36040EFF 0000FFFF
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000075408: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000075410: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075414: BF870093
	v_sub_co_u32 v7, s2, v10, v2                               // 000000075418: D7010207 0002050A
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s2                     // 000000075420: D5217C08 00090080
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000075428: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000075430: 40020201
	s_waitcnt vmcnt(0)                                         // 000000075434: BF8903F7
	v_and_b32_e32 v2, 0xffff, v9                               // 000000075438: 360412FF 0000FFFF
	v_sub_co_u32 v9, s2, v11, v13                              // 000000075440: D7010209 00021B0B
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000075448: BF870191
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s2                    // 00000007544C: D5217C0A 00090080
	v_sub_co_u32 v11, s2, v12, v2                              // 000000075454: D701020B 0002050C
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007545C: BF870001
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s2                    // 000000075460: D5217C0C 00090080
	s_clause 0x2                                               // 000000075468: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 00000007546C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000075474: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 00000007547C: DC6E0000 007C0B00
	s_nop 0                                                    // 000000075484: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075488: BFB60003
	s_endpgm                                                   // 00000007548C: BFB00000
subtract_long_get_local_id_get_local_size_symend:
	.long 0xbf800000                                           // 000000075490: BF800000
	.long 0xbf800000                                           // 000000075494: BF800000
	.long 0xbf800000                                           // 000000075498: BF800000
	.long 0xbf800000                                           // 00000007549C: BF800000
	.long 0xbf800000                                           // 0000000754A0: BF800000
	.long 0xbf800000                                           // 0000000754A4: BF800000
	.long 0xbf800000                                           // 0000000754A8: BF800000
	.long 0xbf800000                                           // 0000000754AC: BF800000
	.long 0xbf800000                                           // 0000000754B0: BF800000
	.long 0xbf800000                                           // 0000000754B4: BF800000
	.long 0xbf800000                                           // 0000000754B8: BF800000
	.long 0xbf800000                                           // 0000000754BC: BF800000
	.long 0xbf800000                                           // 0000000754C0: BF800000
	.long 0xbf800000                                           // 0000000754C4: BF800000
	.long 0xbf800000                                           // 0000000754C8: BF800000
	.long 0xbf800000                                           // 0000000754CC: BF800000
	.long 0xbf800000                                           // 0000000754D0: BF800000
	.long 0xbf800000                                           // 0000000754D4: BF800000
	.long 0xbf800000                                           // 0000000754D8: BF800000
	.long 0xbf800000                                           // 0000000754DC: BF800000
	.long 0xbf800000                                           // 0000000754E0: BF800000
	.long 0xbf800000                                           // 0000000754E4: BF800000
	.long 0xbf800000                                           // 0000000754E8: BF800000
	.long 0xbf800000                                           // 0000000754EC: BF800000
	.long 0xbf800000                                           // 0000000754F0: BF800000
	.long 0xbf800000                                           // 0000000754F4: BF800000
	.long 0xbf800000                                           // 0000000754F8: BF800000
	.long 0xbf800000                                           // 0000000754FC: BF800000

	.p2align	8
	.type	subtract_long_get_group_id_get_local_size,@function
	.size	subtract_long_get_group_id_get_local_size, subtract_long_get_group_id_get_local_size_symend-subtract_long_get_group_id_get_local_size
subtract_long_get_group_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000075500: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000075508: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007550C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000075510: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000075514: 840C8102
	s_lshl_b32 s13, s3, 4                                      // 000000075518: 840D8403
	s_lshl_b32 s14, s4, 1                                      // 00000007551C: 840E8104
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000075520: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007552C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075534: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007553C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000075540: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 000000075544: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000075548: BF8704D9
	s_add_u32 s6, s5, s6                                       // 00000007554C: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000075550: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000075554: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 000000075558: DC4A0000 07060002
	s_cselect_b32 s8, 14, 20                                   // 000000075560: 9808948E
	s_add_u32 s6, s5, s8                                       // 000000075564: 80060805
	s_addc_u32 s7, s11, 0                                      // 000000075568: 8207800B
	s_cmp_lt_u32 s4, s10                                       // 00000007556C: BF0A0A04
	global_load_u16 v8, v2, s[6:7]                             // 000000075570: DC4A0000 08060002
	s_cselect_b32 s6, 16, 22                                   // 000000075578: 98069690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007557C: BF870009
	s_add_u32 s6, s5, s6                                       // 000000075580: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000075584: 8207800B
	global_load_u16 v9, v2, s[6:7]                             // 000000075588: DC4A0000 09060002
	s_clause 0x2                                               // 000000075590: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075594: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007559C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000755A4: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000755AC: BF89FC07
	v_add3_u32 v1, s8, s12, v1                                 // 0000000755B0: D6550001 04041808
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000755B8: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 0000000755BC: D73C0003 00020283
	v_add3_u32 v1, s10, s13, v5                                // 0000000755C4: D6550001 04141A0A
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000755CC: D73C0005 00020283
	v_add3_u32 v1, s5, s14, v0                                 // 0000000755D4: D6550001 04001C05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000755DC: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000755E0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000755E8: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000755EC: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000755F4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000755FC: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000075600: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000075604: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007560C: 40020201
	s_waitcnt vmcnt(2)                                         // 000000075610: BF890BF7
	v_and_b32_e32 v2, 0xffff, v7                               // 000000075614: 36040EFF 0000FFFF
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007561C: BF870001
	v_sub_co_u32 v7, s2, s2, v2                                // 000000075620: D7010207 00020402
	s_waitcnt vmcnt(1)                                         // 000000075628: BF8907F7
	v_and_b32_e32 v10, 0xffff, v8                              // 00000007562C: 361410FF 0000FFFF
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s2                     // 000000075634: D5217C08 00090080
	s_waitcnt vmcnt(0)                                         // 00000007563C: BF8903F7
	v_and_b32_e32 v2, 0xffff, v9                               // 000000075640: 360412FF 0000FFFF
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075648: BF870093
	v_sub_co_u32 v9, s2, s3, v10                               // 00000007564C: D7010209 00021403
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s2                    // 000000075654: D5217C0A 00090080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007565C: BF870093
	v_sub_co_u32 v11, s2, s4, v2                               // 000000075660: D701020B 00020404
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s2                    // 000000075668: D5217C0C 00090080
	s_clause 0x2                                               // 000000075670: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000075674: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 00000007567C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000075684: DC6E0000 007C0B00
	s_nop 0                                                    // 00000007568C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075690: BFB60003
	s_endpgm                                                   // 000000075694: BFB00000
subtract_long_get_group_id_get_local_size_symend:
	.long 0xbf800000                                           // 000000075698: BF800000
	.long 0xbf800000                                           // 00000007569C: BF800000
	.long 0xbf800000                                           // 0000000756A0: BF800000
	.long 0xbf800000                                           // 0000000756A4: BF800000
	.long 0xbf800000                                           // 0000000756A8: BF800000
	.long 0xbf800000                                           // 0000000756AC: BF800000
	.long 0xbf800000                                           // 0000000756B0: BF800000
	.long 0xbf800000                                           // 0000000756B4: BF800000
	.long 0xbf800000                                           // 0000000756B8: BF800000
	.long 0xbf800000                                           // 0000000756BC: BF800000
	.long 0xbf800000                                           // 0000000756C0: BF800000
	.long 0xbf800000                                           // 0000000756C4: BF800000
	.long 0xbf800000                                           // 0000000756C8: BF800000
	.long 0xbf800000                                           // 0000000756CC: BF800000
	.long 0xbf800000                                           // 0000000756D0: BF800000
	.long 0xbf800000                                           // 0000000756D4: BF800000
	.long 0xbf800000                                           // 0000000756D8: BF800000
	.long 0xbf800000                                           // 0000000756DC: BF800000
	.long 0xbf800000                                           // 0000000756E0: BF800000
	.long 0xbf800000                                           // 0000000756E4: BF800000
	.long 0xbf800000                                           // 0000000756E8: BF800000
	.long 0xbf800000                                           // 0000000756EC: BF800000
	.long 0xbf800000                                           // 0000000756F0: BF800000
	.long 0xbf800000                                           // 0000000756F4: BF800000
	.long 0xbf800000                                           // 0000000756F8: BF800000
	.long 0xbf800000                                           // 0000000756FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_size_get_local_size,@function
	.size	subtract_long_get_local_size_get_local_size, subtract_long_get_local_size_get_local_size_symend-subtract_long_get_local_size_get_local_size
subtract_long_get_local_size_get_local_size:
	s_clause 0x2                                               // 000000075700: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000075704: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007570C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000075714: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007571C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000075728: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007572C: D6100005 02291500
	s_lshl_b32 s3, s3, 1                                       // 000000075734: 84038103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075738: D6100000 02292900
	s_lshl_b32 s4, s4, 2                                       // 000000075740: 84048204
	s_mov_b32 s33, 0                                           // 000000075744: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000075748: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000007574C: D6550001 04040408
	s_mov_b32 s2, 0                                            // 000000075754: BE820080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 000000075758: BF8704B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007575C: D73C0003 00020283
	v_add3_u32 v1, s10, s3, v5                                 // 000000075764: D6550001 0414060A
	s_mov_b32 s3, s2                                           // 00000007576C: BE830002
	v_dual_mov_b32 v6, s3 :: v_dual_mov_b32 v5, s2             // 000000075770: CA100003 06040002
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000075778: BF8701C2
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 00000007577C: D73C0007 00020283
	v_add3_u32 v1, s5, s4, v0                                  // 000000075784: D6550001 04000805
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000007578C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000075794: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000075798: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 0000000757A0: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 0000000757A8: 40101001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000757AC: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000757B0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000757B8: 40020201
	s_clause 0x2                                               // 0000000757BC: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 0000000757C0: DC6E0000 007C0503
	global_store_b64 v[7:8], v[5:6], off                       // 0000000757C8: DC6E0000 007C0507
	global_store_b64 v[0:1], v[5:6], off                       // 0000000757D0: DC6E0000 007C0500
	s_nop 0                                                    // 0000000757D8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000757DC: BFB60003
	s_endpgm                                                   // 0000000757E0: BFB00000
subtract_long_get_local_size_get_local_size_symend:
	.long 0xbf800000                                           // 0000000757E4: BF800000
	.long 0xbf800000                                           // 0000000757E8: BF800000
	.long 0xbf800000                                           // 0000000757EC: BF800000
	.long 0xbf800000                                           // 0000000757F0: BF800000
	.long 0xbf800000                                           // 0000000757F4: BF800000
	.long 0xbf800000                                           // 0000000757F8: BF800000
	.long 0xbf800000                                           // 0000000757FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_id_get_local_size,@function
	.size	subtract_long_get_global_id_get_local_size, subtract_long_get_global_id_get_local_size_symend-subtract_long_get_global_id_get_local_size
subtract_long_get_global_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000075800: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000075808: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007580C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000075810: 820B8001
	s_lshl_b32 s12, s3, 1                                      // 000000075814: 840C8103
	s_lshl_b32 s13, s4, 2                                      // 000000075818: 840D8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007581C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000075828: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075830: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000075838: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007583C: BF870093
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000075840: D6560001 04050202
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000075848: D73C0003 00020283
	s_cmp_lt_u32 s2, s8                                        // 000000075850: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 000000075854: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000075858: BF8704C9
	s_add_u32 s6, s5, s6                                       // 00000007585C: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000075860: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000075864: BF0A0903
	s_cselect_b32 s3, 14, 20                                   // 000000075868: 9803948E
	s_add_u32 s8, s5, s3                                       // 00000007586C: 80080305
	s_addc_u32 s9, s11, 0                                      // 000000075870: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 000000075874: BF0A0A04
	s_clause 0x1                                               // 000000075878: BF850001
	global_load_u16 v7, v2, s[8:9]                             // 00000007587C: DC4A0000 07080002
	global_load_u16 v8, v2, s[6:7]                             // 000000075884: DC4A0000 08060002
	s_cselect_b32 s3, 16, 22                                   // 00000007588C: 98039690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000075890: BF870009
	s_add_u32 s4, s5, s3                                       // 000000075894: 80040305
	s_addc_u32 s5, s11, 0                                      // 000000075898: 8205800B
	global_load_u16 v11, v2, s[4:5]                            // 00000007589C: DC4A0000 0B040002
	s_clause 0x2                                               // 0000000758A4: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 0000000758A8: F4080100 F8000038
	s_load_b64 s[8:9], s[0:1], 0x8                             // 0000000758B0: F4040200 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 0000000758B8: F4000000 F8000048
	s_waitcnt lgkmcnt(0)                                       // 0000000758C0: BF89FC07
	v_add_nc_u32_e32 v9, s4, v1                                // 0000000758C4: 4A120204
	v_add3_u32 v1, s6, s12, v5                                 // 0000000758C8: D6550001 04141806
	v_add_co_u32 v3, vcc_lo, s8, v3                            // 0000000758D0: D7006A03 00020608
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo             // 0000000758D8: 40080809
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000758DC: BF870093
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000758E0: D73C0005 00020283
	v_add_co_u32 v5, vcc_lo, s8, v5                            // 0000000758E8: D7006A05 00020A08
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 0000000758F0: BF870152
	v_add_co_ci_u32_e32 v6, vcc_lo, s9, v6, vcc_lo             // 0000000758F4: 400C0C09
	s_waitcnt vmcnt(2)                                         // 0000000758F8: BF890BF7
	v_and_b32_e32 v7, 0xffff, v7                               // 0000000758FC: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(1)                                         // 000000075904: BF8907F7
	v_and_b32_e32 v8, 0xffff, v8                               // 000000075908: 361010FF 0000FFFF
	v_sub_co_u32 v7, s1, v1, v7                                // 000000075910: D7010107 00020F01
	v_add3_u32 v1, s0, s13, v0                                 // 000000075918: D6550001 04001A00
	s_waitcnt vmcnt(0)                                         // 000000075920: BF8903F7
	v_and_b32_e32 v0, 0xffff, v11                              // 000000075924: 360016FF 0000FFFF
	v_sub_co_u32 v9, s0, v9, v8                                // 00000007592C: D7010009 00021109
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000075934: BF870221
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s0                    // 000000075938: D5217C0A 00010080
	v_lshlrev_b64 v[11:12], 3, v[1:2]                          // 000000075940: D73C000B 00020283
	v_sub_co_u32 v0, s0, v1, v0                                // 000000075948: D7010000 00020101
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s1                     // 000000075950: D5217C08 00050080
	v_sub_co_ci_u32_e64 v1, null, 0, 0, s0                     // 000000075958: D5217C01 00010080
	s_delay_alu instid0(VALU_DEP_4)                            // 000000075960: BF870004
	v_add_co_u32 v11, vcc_lo, s8, v11                          // 000000075964: D7006A0B 00021608
	v_add_co_ci_u32_e32 v12, vcc_lo, s9, v12, vcc_lo           // 00000007596C: 40181809
	s_clause 0x2                                               // 000000075970: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 000000075974: DC6E0000 007C0903
	global_store_b64 v[5:6], v[7:8], off                       // 00000007597C: DC6E0000 007C0705
	global_store_b64 v[11:12], v[0:1], off                     // 000000075984: DC6E0000 007C000B
	s_nop 0                                                    // 00000007598C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075990: BFB60003
	s_endpgm                                                   // 000000075994: BFB00000
subtract_long_get_global_id_get_local_size_symend:
	.long 0xbf800000                                           // 000000075998: BF800000
	.long 0xbf800000                                           // 00000007599C: BF800000
	.long 0xbf800000                                           // 0000000759A0: BF800000
	.long 0xbf800000                                           // 0000000759A4: BF800000
	.long 0xbf800000                                           // 0000000759A8: BF800000
	.long 0xbf800000                                           // 0000000759AC: BF800000
	.long 0xbf800000                                           // 0000000759B0: BF800000
	.long 0xbf800000                                           // 0000000759B4: BF800000
	.long 0xbf800000                                           // 0000000759B8: BF800000
	.long 0xbf800000                                           // 0000000759BC: BF800000
	.long 0xbf800000                                           // 0000000759C0: BF800000
	.long 0xbf800000                                           // 0000000759C4: BF800000
	.long 0xbf800000                                           // 0000000759C8: BF800000
	.long 0xbf800000                                           // 0000000759CC: BF800000
	.long 0xbf800000                                           // 0000000759D0: BF800000
	.long 0xbf800000                                           // 0000000759D4: BF800000
	.long 0xbf800000                                           // 0000000759D8: BF800000
	.long 0xbf800000                                           // 0000000759DC: BF800000
	.long 0xbf800000                                           // 0000000759E0: BF800000
	.long 0xbf800000                                           // 0000000759E4: BF800000
	.long 0xbf800000                                           // 0000000759E8: BF800000
	.long 0xbf800000                                           // 0000000759EC: BF800000
	.long 0xbf800000                                           // 0000000759F0: BF800000
	.long 0xbf800000                                           // 0000000759F4: BF800000
	.long 0xbf800000                                           // 0000000759F8: BF800000
	.long 0xbf800000                                           // 0000000759FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_size_get_local_size,@function
	.size	subtract_long_get_global_size_get_local_size, subtract_long_get_global_size_get_local_size_symend-subtract_long_get_global_size_get_local_size
subtract_long_get_global_size_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000075A00: F4080200 F8000010
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000075A08: CA240080 020000FF 000003FF
	s_add_u32 s5, s0, 16                                       // 000000075A14: 80059000
	v_bfe_u32 v5, v0, 10, 10                                   // 000000075A18: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075A20: D6100000 02292900
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000075A28: DC520022 07000002
	s_waitcnt lgkmcnt(0)                                       // 000000075A30: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000075A34: 820B8001
	s_lshl_b32 s12, s2, 4                                      // 000000075A38: 840C8402
	s_lshl_b32 s13, s3, 1                                      // 000000075A3C: 840D8103
	s_lshl_b32 s14, s4, 1                                      // 000000075A40: 840E8104
	s_mov_b32 s33, 0                                           // 000000075A44: BEA10080
	s_lshl_b32 s15, s8, 4                                      // 000000075A48: 840F8408
	s_lshl_b32 s16, s9, 1                                      // 000000075A4C: 84108109
	s_lshl_b32 s17, s10, 1                                     // 000000075A50: 8411810A
	s_cmp_lt_u32 s2, s8                                        // 000000075A54: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000075A58: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000075A5C: BF870009
	s_add_u32 s6, s5, s2                                       // 000000075A60: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000075A64: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000075A68: BF0A0903
	s_clause 0x1                                               // 000000075A6C: BF850001
	global_load_u16 v8, v2, s[6:7]                             // 000000075A70: DC4A0000 08060002
	global_load_u16 v9, v2, s[0:1] offset:38                   // 000000075A78: DC4A0026 09000002
	s_cselect_b32 s2, 14, 20                                   // 000000075A80: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000075A84: BF8704D9
	s_add_u32 s2, s5, s2                                       // 000000075A88: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000075A8C: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000075A90: BF0A0A04
	global_load_u16 v10, v2, s[2:3]                            // 000000075A94: DC4A0000 0A020002
	s_cselect_b32 s4, 16, 22                                   // 000000075A9C: 98049690
	s_add_u32 s2, s5, s4                                       // 000000075AA0: 80020405
	s_addc_u32 s3, s11, 0                                      // 000000075AA4: 8203800B
	global_load_u16 v11, v2, s[2:3]                            // 000000075AA8: DC4A0000 0B020002
	s_clause 0x2                                               // 000000075AB0: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000075AB4: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 000000075ABC: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000075AC4: F4040000 F8000000
	s_waitcnt lgkmcnt(0)                                       // 000000075ACC: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 000000075AD0: D6550001 04041804
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000075AD8: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000075ADC: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v5                                 // 000000075AE4: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000075AEC: D73C0005 00020283
	v_add3_u32 v1, s2, s14, v0                                 // 000000075AF4: D6550001 04001C02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000075AFC: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000075B00: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000075B08: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000075B0C: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000075B14: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000075B1C: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000075B20: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000075B24: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000075B2C: 40020201
	s_waitcnt vmcnt(4)                                         // 000000075B30: BF8913F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 000000075B34: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 000000075B38: 360E0EFF 0000FFFF
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000075B40: BF870112
	v_add_nc_u32_e32 v2, s16, v2                               // 000000075B44: 4A040410
	v_add_nc_u32_e32 v7, s15, v7                               // 000000075B48: 4A0E0E0F
	s_waitcnt vmcnt(3)                                         // 000000075B4C: BF890FF7
	v_and_b32_e32 v8, 0xffff, v8                               // 000000075B50: 361010FF 0000FFFF
	s_waitcnt vmcnt(2)                                         // 000000075B58: BF890BF7
	v_add_nc_u32_e32 v12, s17, v9                              // 000000075B5C: 4A181211
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000075B60: BF870142
	v_sub_co_u32 v7, s2, v7, v8                                // 000000075B64: D7010207 00021107
	s_waitcnt vmcnt(1)                                         // 000000075B6C: BF8907F7
	v_and_b32_e32 v9, 0xffff, v10                              // 000000075B70: 361214FF 0000FFFF
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s2                     // 000000075B78: D5217C08 00090080
	v_sub_co_u32 v9, s2, v2, v9                                // 000000075B80: D7010209 00021302
	s_waitcnt vmcnt(0)                                         // 000000075B88: BF8903F7
	v_and_b32_e32 v11, 0xffff, v11                             // 000000075B8C: 361616FF 0000FFFF
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s2                    // 000000075B94: D5217C0A 00090080
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075B9C: BF870092
	v_sub_co_u32 v11, s2, v12, v11                             // 000000075BA0: D701020B 0002170C
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s2                    // 000000075BA8: D5217C0C 00090080
	s_clause 0x2                                               // 000000075BB0: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000075BB4: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000075BBC: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000075BC4: DC6E0000 007C0B00
	s_nop 0                                                    // 000000075BCC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075BD0: BFB60003
	s_endpgm                                                   // 000000075BD4: BFB00000
subtract_long_get_global_size_get_local_size_symend:
	.long 0xbf800000                                           // 000000075BD8: BF800000
	.long 0xbf800000                                           // 000000075BDC: BF800000
	.long 0xbf800000                                           // 000000075BE0: BF800000
	.long 0xbf800000                                           // 000000075BE4: BF800000
	.long 0xbf800000                                           // 000000075BE8: BF800000
	.long 0xbf800000                                           // 000000075BEC: BF800000
	.long 0xbf800000                                           // 000000075BF0: BF800000
	.long 0xbf800000                                           // 000000075BF4: BF800000
	.long 0xbf800000                                           // 000000075BF8: BF800000
	.long 0xbf800000                                           // 000000075BFC: BF800000

	.p2align	8
	.type	subtract_long_get_num_groups_get_local_size,@function
	.size	subtract_long_get_num_groups_get_local_size, subtract_long_get_num_groups_get_local_size_symend-subtract_long_get_num_groups_get_local_size
subtract_long_get_num_groups_get_local_size:
	v_mov_b32_e32 v2, 0                                        // 000000075C00: 7E040280
	v_bfe_u32 v5, v0, 10, 10                                   // 000000075C04: D6100005 02291500
	s_mov_b32 s33, 0                                           // 000000075C0C: BEA10080
	s_clause 0x1                                               // 000000075C10: BF850001
	global_load_b32 v1, v2, s[0:1] offset:34                   // 000000075C14: DC520022 01000002
	global_load_u16 v3, v2, s[0:1] offset:38                   // 000000075C1C: DC4A0026 03000002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000075C24: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 000000075C2C: BF89FC07
	s_add_u32 s11, s0, 16                                      // 000000075C30: 800B9000
	s_addc_u32 s12, s1, 0                                      // 000000075C34: 820C8001
	s_lshl_b32 s13, s2, 1                                      // 000000075C38: 840D8102
	s_lshl_b32 s14, s3, 1                                      // 000000075C3C: 840E8103
	s_lshl_b32 s15, s4, 2                                      // 000000075C40: 840F8204
	s_waitcnt vmcnt(1)                                         // 000000075C44: BF8907F7
	v_lshrrev_b32_e32 v4, 16, v1                               // 000000075C48: 32080290
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 000000075C4C: 7C7A0280
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000075C50: 360200FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075C58: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 000000075C60: BF870004
	v_cmp_ne_u16_e64 s5, 0, v4.l                               // 000000075C64: D43D0005 00020880
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000075C6C: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000075C70: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v3.l                           // 000000075C74: 7C7A0680
	s_addc_u32 s16, s8, 0                                      // 000000075C78: 82108008
	s_cmp_lg_u32 s5, 0                                         // 000000075C7C: BF078005
	s_addc_u32 s17, s9, 0                                      // 000000075C80: 82118009
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000075C84: BF07806A
	s_addc_u32 s18, s10, 0                                     // 000000075C88: 8212800A
	s_cmp_lt_u32 s2, s8                                        // 000000075C8C: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000075C90: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000075C94: BF8704D9
	s_add_u32 s6, s11, s2                                      // 000000075C98: 8006020B
	s_addc_u32 s7, s12, 0                                      // 000000075C9C: 8207800C
	s_cmp_lt_u32 s3, s9                                        // 000000075CA0: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 000000075CA4: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 000000075CAC: 9802948E
	s_add_u32 s2, s11, s2                                      // 000000075CB0: 8002020B
	s_addc_u32 s3, s12, 0                                      // 000000075CB4: 8203800C
	s_cmp_lt_u32 s4, s10                                       // 000000075CB8: BF0A0A04
	global_load_u16 v8, v2, s[2:3]                             // 000000075CBC: DC4A0000 08020002
	s_cselect_b32 s4, 16, 22                                   // 000000075CC4: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000075CC8: BF870009
	s_add_u32 s2, s11, s4                                      // 000000075CCC: 8002040B
	s_addc_u32 s3, s12, 0                                      // 000000075CD0: 8203800C
	global_load_u16 v9, v2, s[2:3]                             // 000000075CD4: DC4A0000 09020002
	s_clause 0x2                                               // 000000075CDC: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000075CE0: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 000000075CE8: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000075CF0: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000075CF8: BF89FC07
	v_add3_u32 v1, s4, s13, v1                                 // 000000075CFC: D6550001 04041A04
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000075D04: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000075D08: D73C0003 00020283
	v_add3_u32 v1, s6, s14, v5                                 // 000000075D10: D6550001 04141C06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000075D18: D73C0005 00020283
	v_add3_u32 v1, s2, s15, v0                                 // 000000075D20: D6550001 04001E02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000075D28: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000075D2C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000075D34: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000075D38: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000075D40: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000075D48: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000075D4C: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000075D50: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000075D58: 40020201
	s_waitcnt vmcnt(2)                                         // 000000075D5C: BF890BF7
	v_and_b32_e32 v2, 0xffff, v7                               // 000000075D60: 36040EFF 0000FFFF
	s_delay_alu instid0(VALU_DEP_1)                            // 000000075D68: BF870001
	v_sub_co_u32 v7, s2, s16, v2                               // 000000075D6C: D7010207 00020410
	s_waitcnt vmcnt(1)                                         // 000000075D74: BF8907F7
	v_and_b32_e32 v10, 0xffff, v8                              // 000000075D78: 361410FF 0000FFFF
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s2                     // 000000075D80: D5217C08 00090080
	s_waitcnt vmcnt(0)                                         // 000000075D88: BF8903F7
	v_and_b32_e32 v2, 0xffff, v9                               // 000000075D8C: 360412FF 0000FFFF
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075D94: BF870093
	v_sub_co_u32 v9, s2, s17, v10                              // 000000075D98: D7010209 00021411
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s2                    // 000000075DA0: D5217C0A 00090080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075DA8: BF870093
	v_sub_co_u32 v11, s2, s18, v2                              // 000000075DAC: D701020B 00020412
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s2                    // 000000075DB4: D5217C0C 00090080
	s_clause 0x2                                               // 000000075DBC: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000075DC0: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000075DC8: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000075DD0: DC6E0000 007C0B00
	s_nop 0                                                    // 000000075DD8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075DDC: BFB60003
	s_endpgm                                                   // 000000075DE0: BFB00000
subtract_long_get_num_groups_get_local_size_symend:
	.long 0xbf800000                                           // 000000075DE4: BF800000
	.long 0xbf800000                                           // 000000075DE8: BF800000
	.long 0xbf800000                                           // 000000075DEC: BF800000
	.long 0xbf800000                                           // 000000075DF0: BF800000
	.long 0xbf800000                                           // 000000075DF4: BF800000
	.long 0xbf800000                                           // 000000075DF8: BF800000
	.long 0xbf800000                                           // 000000075DFC: BF800000

	.p2align	8
	.type	subtract_long_get_work_dim_get_local_size,@function
	.size	subtract_long_get_work_dim_get_local_size, subtract_long_get_work_dim_get_local_size_symend-subtract_long_get_work_dim_get_local_size
subtract_long_get_work_dim_get_local_size:
	s_clause 0x1                                               // 000000075E00: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 000000075E04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000075E0C: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 000000075E14: BF89FC07
	s_add_u32 s11, s0, 16                                      // 000000075E18: 800B9000
	s_addc_u32 s12, s1, 0                                      // 000000075E1C: 820C8001
	s_lshl_b32 s13, s2, 1                                      // 000000075E20: 840D8102
	s_lshl_b32 s14, s3, 1                                      // 000000075E24: 840E8103
	s_lshl_b32 s15, s4, 2                                      // 000000075E28: 840F8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000075E2C: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000075E38: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000075E40: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000075E48: BEA10080
	s_and_b32 s16, s5, 0xffff                                  // 000000075E4C: 8B10FF05 0000FFFF
	s_cmp_lt_u32 s2, s8                                        // 000000075E54: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000075E58: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000075E5C: BF8704D9
	s_add_u32 s6, s11, s2                                      // 000000075E60: 8006020B
	s_addc_u32 s7, s12, 0                                      // 000000075E64: 8207800C
	s_cmp_lt_u32 s3, s9                                        // 000000075E68: BF0A0903
	global_load_u16 v7, v2, s[6:7]                             // 000000075E6C: DC4A0000 07060002
	s_cselect_b32 s2, 14, 20                                   // 000000075E74: 9802948E
	s_add_u32 s2, s11, s2                                      // 000000075E78: 8002020B
	s_addc_u32 s3, s12, 0                                      // 000000075E7C: 8203800C
	s_cmp_lt_u32 s4, s10                                       // 000000075E80: BF0A0A04
	global_load_u16 v8, v2, s[2:3]                             // 000000075E84: DC4A0000 08020002
	s_cselect_b32 s4, 16, 22                                   // 000000075E8C: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000075E90: BF870009
	s_add_u32 s2, s11, s4                                      // 000000075E94: 8002040B
	s_addc_u32 s3, s12, 0                                      // 000000075E98: 8203800C
	global_load_u16 v9, v2, s[2:3]                             // 000000075E9C: DC4A0000 09020002
	s_clause 0x2                                               // 000000075EA4: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000075EA8: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 000000075EB0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000075EB8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000075EC0: BF89FC07
	v_add3_u32 v1, s4, s13, v1                                 // 000000075EC4: D6550001 04041A04
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000075ECC: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000075ED0: D73C0003 00020283
	v_add3_u32 v1, s6, s14, v5                                 // 000000075ED8: D6550001 04141C06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000075EE0: D73C0005 00020283
	v_add3_u32 v1, s2, s15, v0                                 // 000000075EE8: D6550001 04001E02
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000075EF0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000075EF4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000075EFC: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000075F00: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000075F08: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000075F10: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000075F14: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000075F18: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000075F20: 40020201
	s_waitcnt vmcnt(2)                                         // 000000075F24: BF890BF7
	v_and_b32_e32 v2, 0xffff, v7                               // 000000075F28: 36040EFF 0000FFFF
	s_delay_alu instid0(VALU_DEP_1)                            // 000000075F30: BF870001
	v_sub_co_u32 v7, s2, s16, v2                               // 000000075F34: D7010207 00020410
	s_waitcnt vmcnt(1)                                         // 000000075F3C: BF8907F7
	v_and_b32_e32 v10, 0xffff, v8                              // 000000075F40: 361410FF 0000FFFF
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s2                     // 000000075F48: D5217C08 00090080
	s_waitcnt vmcnt(0)                                         // 000000075F50: BF8903F7
	v_and_b32_e32 v2, 0xffff, v9                               // 000000075F54: 360412FF 0000FFFF
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075F5C: BF870093
	v_sub_co_u32 v9, s2, s16, v10                              // 000000075F60: D7010209 00021410
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s2                    // 000000075F68: D5217C0A 00090080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000075F70: BF870093
	v_sub_co_u32 v11, s2, s16, v2                              // 000000075F74: D701020B 00020410
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s2                    // 000000075F7C: D5217C0C 00090080
	s_clause 0x2                                               // 000000075F84: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000075F88: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000075F90: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000075F98: DC6E0000 007C0B00
	s_nop 0                                                    // 000000075FA0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000075FA4: BFB60003
	s_endpgm                                                   // 000000075FA8: BFB00000
subtract_long_get_work_dim_get_local_size_symend:
	.long 0xbf800000                                           // 000000075FAC: BF800000
	.long 0xbf800000                                           // 000000075FB0: BF800000
	.long 0xbf800000                                           // 000000075FB4: BF800000
	.long 0xbf800000                                           // 000000075FB8: BF800000
	.long 0xbf800000                                           // 000000075FBC: BF800000
	.long 0xbf800000                                           // 000000075FC0: BF800000
	.long 0xbf800000                                           // 000000075FC4: BF800000
	.long 0xbf800000                                           // 000000075FC8: BF800000
	.long 0xbf800000                                           // 000000075FCC: BF800000
	.long 0xbf800000                                           // 000000075FD0: BF800000
	.long 0xbf800000                                           // 000000075FD4: BF800000
	.long 0xbf800000                                           // 000000075FD8: BF800000
	.long 0xbf800000                                           // 000000075FDC: BF800000
	.long 0xbf800000                                           // 000000075FE0: BF800000
	.long 0xbf800000                                           // 000000075FE4: BF800000
	.long 0xbf800000                                           // 000000075FE8: BF800000
	.long 0xbf800000                                           // 000000075FEC: BF800000
	.long 0xbf800000                                           // 000000075FF0: BF800000
	.long 0xbf800000                                           // 000000075FF4: BF800000
	.long 0xbf800000                                           // 000000075FF8: BF800000
	.long 0xbf800000                                           // 000000075FFC: BF800000

	.p2align	8
	.type	subtract_long_x_get_global_id,@function
	.size	subtract_long_x_get_global_id, subtract_long_x_get_global_id_symend-subtract_long_x_get_global_id
subtract_long_x_get_global_id:
	s_clause 0x2                                               // 000000076000: BF850002
	s_load_b32 s5, s[0:1], 0x8                                 // 000000076004: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007600C: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000076014: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007601C: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], null                            // 000000076024: F4040000 F8000000
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007602C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076034: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007603C: BEA10080
	v_lshl_or_b32 v1, s2, 4, v1                                // 000000076040: D6560001 04050802
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000076048: BF870193
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007604C: D6560002 04090203
	v_lshl_or_b32 v3, s4, 1, v0                                // 000000076054: D6560003 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007605C: BF89FC07
	s_ashr_i32 s2, s5, 31                                      // 000000076060: 86029F05
	v_add_co_u32 v0, s3, s8, v1                                // 000000076064: D7000300 00020208
	v_mov_b32_e32 v1, 0                                        // 00000007606C: 7E020280
	v_add_co_ci_u32_e64 v8, null, s9, 0, s3                    // 000000076070: D5207C08 000D0009
	v_add_co_u32 v2, s3, s10, v2                               // 000000076078: D7000302 0002040A
	s_delay_alu instid0(VALU_DEP_3)                            // 000000076080: BF870003
	v_lshlrev_b64 v[5:6], 3, v[0:1]                            // 000000076084: D73C0005 00020083
	v_add_co_ci_u32_e64 v13, null, s11, 0, s3                  // 00000007608C: D5207C0D 000D000B
	v_add_co_u32 v4, s3, s6, v3                                // 000000076094: D7000304 00020606
	v_mov_b32_e32 v3, v1                                       // 00000007609C: 7E060301
	v_sub_co_u32 v7, vcc_lo, s5, v0                            // 0000000760A0: D7016A07 00020005
	v_sub_co_ci_u32_e32 v8, vcc_lo, s2, v8, vcc_lo             // 0000000760A8: 42101002
	v_add_co_u32 v9, vcc_lo, s0, v5                            // 0000000760AC: D7006A09 00020A00
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000760B4: BF870004
	v_lshlrev_b64 v[11:12], 3, v[2:3]                          // 0000000760B8: D73C000B 00020483
	v_mov_b32_e32 v5, v1                                       // 0000000760C0: 7E0A0301
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v6, vcc_lo            // 0000000760C4: 40140C01
	v_sub_co_u32 v2, vcc_lo, s5, v2                            // 0000000760C8: D7016A02 00020405
	v_sub_co_ci_u32_e32 v3, vcc_lo, s2, v13, vcc_lo            // 0000000760D0: 42061A02
	v_add_co_ci_u32_e64 v14, null, s7, 0, s3                   // 0000000760D4: D5207C0E 000D0007
	v_add_co_u32 v0, vcc_lo, s0, v11                           // 0000000760DC: D7006A00 00021600
	v_lshlrev_b64 v[5:6], 3, v[4:5]                            // 0000000760E4: D73C0005 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v12, vcc_lo            // 0000000760EC: 40021801
	v_sub_co_u32 v11, vcc_lo, s5, v4                           // 0000000760F0: D7016A0B 00020805
	v_sub_co_ci_u32_e32 v12, vcc_lo, s2, v14, vcc_lo           // 0000000760F8: 42181C02
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000760FC: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v5                            // 000000076100: D7006A04 00020A00
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v6, vcc_lo             // 000000076108: 400A0C01
	s_clause 0x2                                               // 00000007610C: BF850002
	global_store_b64 v[9:10], v[7:8], off                      // 000000076110: DC6E0000 007C0709
	global_store_b64 v[0:1], v[2:3], off                       // 000000076118: DC6E0000 007C0200
	global_store_b64 v[4:5], v[11:12], off                     // 000000076120: DC6E0000 007C0B04
	s_nop 0                                                    // 000000076128: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007612C: BFB60003
	s_endpgm                                                   // 000000076130: BFB00000
subtract_long_x_get_global_id_symend:
	.long 0xbf800000                                           // 000000076134: BF800000
	.long 0xbf800000                                           // 000000076138: BF800000
	.long 0xbf800000                                           // 00000007613C: BF800000
	.long 0xbf800000                                           // 000000076140: BF800000
	.long 0xbf800000                                           // 000000076144: BF800000
	.long 0xbf800000                                           // 000000076148: BF800000
	.long 0xbf800000                                           // 00000007614C: BF800000
	.long 0xbf800000                                           // 000000076150: BF800000
	.long 0xbf800000                                           // 000000076154: BF800000
	.long 0xbf800000                                           // 000000076158: BF800000
	.long 0xbf800000                                           // 00000007615C: BF800000
	.long 0xbf800000                                           // 000000076160: BF800000
	.long 0xbf800000                                           // 000000076164: BF800000
	.long 0xbf800000                                           // 000000076168: BF800000
	.long 0xbf800000                                           // 00000007616C: BF800000
	.long 0xbf800000                                           // 000000076170: BF800000
	.long 0xbf800000                                           // 000000076174: BF800000
	.long 0xbf800000                                           // 000000076178: BF800000
	.long 0xbf800000                                           // 00000007617C: BF800000
	.long 0xbf800000                                           // 000000076180: BF800000
	.long 0xbf800000                                           // 000000076184: BF800000
	.long 0xbf800000                                           // 000000076188: BF800000
	.long 0xbf800000                                           // 00000007618C: BF800000
	.long 0xbf800000                                           // 000000076190: BF800000
	.long 0xbf800000                                           // 000000076194: BF800000
	.long 0xbf800000                                           // 000000076198: BF800000
	.long 0xbf800000                                           // 00000007619C: BF800000
	.long 0xbf800000                                           // 0000000761A0: BF800000
	.long 0xbf800000                                           // 0000000761A4: BF800000
	.long 0xbf800000                                           // 0000000761A8: BF800000
	.long 0xbf800000                                           // 0000000761AC: BF800000
	.long 0xbf800000                                           // 0000000761B0: BF800000
	.long 0xbf800000                                           // 0000000761B4: BF800000
	.long 0xbf800000                                           // 0000000761B8: BF800000
	.long 0xbf800000                                           // 0000000761BC: BF800000
	.long 0xbf800000                                           // 0000000761C0: BF800000
	.long 0xbf800000                                           // 0000000761C4: BF800000
	.long 0xbf800000                                           // 0000000761C8: BF800000
	.long 0xbf800000                                           // 0000000761CC: BF800000
	.long 0xbf800000                                           // 0000000761D0: BF800000
	.long 0xbf800000                                           // 0000000761D4: BF800000
	.long 0xbf800000                                           // 0000000761D8: BF800000
	.long 0xbf800000                                           // 0000000761DC: BF800000
	.long 0xbf800000                                           // 0000000761E0: BF800000
	.long 0xbf800000                                           // 0000000761E4: BF800000
	.long 0xbf800000                                           // 0000000761E8: BF800000
	.long 0xbf800000                                           // 0000000761EC: BF800000
	.long 0xbf800000                                           // 0000000761F0: BF800000
	.long 0xbf800000                                           // 0000000761F4: BF800000
	.long 0xbf800000                                           // 0000000761F8: BF800000
	.long 0xbf800000                                           // 0000000761FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_offset_get_global_id,@function
	.size	subtract_long_get_global_offset_get_global_id, subtract_long_get_global_offset_get_global_id_symend-subtract_long_get_global_offset_get_global_id
subtract_long_get_global_offset_get_global_id:
	s_clause 0x1                                               // 000000076200: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076204: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007620C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000076214: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007621C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000076224: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007622C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000076234: BEA10080
	v_lshl_or_b32 v3, s2, 1, v1                                // 000000076238: D6560003 04050202
	v_mov_b32_e32 v1, 0                                        // 000000076240: 7E020280
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000076244: D6560002 04090803
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000007624C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000076254: BF89FC07
	v_add_co_u32 v0, s2, s8, v3                                // 000000076258: D7000200 00020608
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000076260: BF8701A1
	v_add_co_ci_u32_e64 v3, null, s9, 0, s2                    // 000000076264: D5207C03 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000007626C: D7000202 0002040A
	v_sub_co_u32 v7, vcc_lo, s8, v0                            // 000000076274: D7016A07 00020008
	v_lshlrev_b64 v[5:6], 3, v[0:1]                            // 00000007627C: D73C0005 00020083
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 000000076284: BF870234
	v_sub_co_ci_u32_e32 v8, vcc_lo, 0, v3, vcc_lo              // 000000076288: 42100680
	v_mov_b32_e32 v3, v1                                       // 00000007628C: 7E060301
	v_add_co_ci_u32_e64 v13, null, s11, 0, s2                  // 000000076290: D5207C0D 0009000B
	v_add_co_u32 v9, vcc_lo, s0, v5                            // 000000076298: D7006A09 00020A00
	s_delay_alu instid0(VALU_DEP_3)                            // 0000000762A0: BF870003
	v_lshlrev_b64 v[11:12], 3, v[2:3]                          // 0000000762A4: D73C000B 00020483
	v_add_co_u32 v4, s2, s6, v4                                // 0000000762AC: D7000204 00020806
	v_mov_b32_e32 v5, v1                                       // 0000000762B4: 7E0A0301
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v6, vcc_lo            // 0000000762B8: 40140C01
	v_sub_co_u32 v2, vcc_lo, s10, v2                           // 0000000762BC: D7016A02 0002040A
	v_sub_co_ci_u32_e32 v3, vcc_lo, 0, v13, vcc_lo             // 0000000762C4: 42061A80
	v_add_co_ci_u32_e64 v14, null, s7, 0, s2                   // 0000000762C8: D5207C0E 00090007
	v_add_co_u32 v0, vcc_lo, s0, v11                           // 0000000762D0: D7006A00 00021600
	v_lshlrev_b64 v[5:6], 3, v[4:5]                            // 0000000762D8: D73C0005 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v12, vcc_lo            // 0000000762E0: 40021801
	v_sub_co_u32 v11, vcc_lo, s6, v4                           // 0000000762E4: D7016A0B 00020806
	v_sub_co_ci_u32_e32 v12, vcc_lo, 0, v14, vcc_lo            // 0000000762EC: 42181C80
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000762F0: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v5                            // 0000000762F4: D7006A04 00020A00
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v6, vcc_lo             // 0000000762FC: 400A0C01
	s_clause 0x2                                               // 000000076300: BF850002
	global_store_b64 v[9:10], v[7:8], off                      // 000000076304: DC6E0000 007C0709
	global_store_b64 v[0:1], v[2:3], off                       // 00000007630C: DC6E0000 007C0200
	global_store_b64 v[4:5], v[11:12], off                     // 000000076314: DC6E0000 007C0B04
	s_nop 0                                                    // 00000007631C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076320: BFB60003
	s_endpgm                                                   // 000000076324: BFB00000
subtract_long_get_global_offset_get_global_id_symend:
	.long 0xbf800000                                           // 000000076328: BF800000
	.long 0xbf800000                                           // 00000007632C: BF800000
	.long 0xbf800000                                           // 000000076330: BF800000
	.long 0xbf800000                                           // 000000076334: BF800000
	.long 0xbf800000                                           // 000000076338: BF800000
	.long 0xbf800000                                           // 00000007633C: BF800000
	.long 0xbf800000                                           // 000000076340: BF800000
	.long 0xbf800000                                           // 000000076344: BF800000
	.long 0xbf800000                                           // 000000076348: BF800000
	.long 0xbf800000                                           // 00000007634C: BF800000
	.long 0xbf800000                                           // 000000076350: BF800000
	.long 0xbf800000                                           // 000000076354: BF800000
	.long 0xbf800000                                           // 000000076358: BF800000
	.long 0xbf800000                                           // 00000007635C: BF800000
	.long 0xbf800000                                           // 000000076360: BF800000
	.long 0xbf800000                                           // 000000076364: BF800000
	.long 0xbf800000                                           // 000000076368: BF800000
	.long 0xbf800000                                           // 00000007636C: BF800000
	.long 0xbf800000                                           // 000000076370: BF800000
	.long 0xbf800000                                           // 000000076374: BF800000
	.long 0xbf800000                                           // 000000076378: BF800000
	.long 0xbf800000                                           // 00000007637C: BF800000
	.long 0xbf800000                                           // 000000076380: BF800000
	.long 0xbf800000                                           // 000000076384: BF800000
	.long 0xbf800000                                           // 000000076388: BF800000
	.long 0xbf800000                                           // 00000007638C: BF800000
	.long 0xbf800000                                           // 000000076390: BF800000
	.long 0xbf800000                                           // 000000076394: BF800000
	.long 0xbf800000                                           // 000000076398: BF800000
	.long 0xbf800000                                           // 00000007639C: BF800000
	.long 0xbf800000                                           // 0000000763A0: BF800000
	.long 0xbf800000                                           // 0000000763A4: BF800000
	.long 0xbf800000                                           // 0000000763A8: BF800000
	.long 0xbf800000                                           // 0000000763AC: BF800000
	.long 0xbf800000                                           // 0000000763B0: BF800000
	.long 0xbf800000                                           // 0000000763B4: BF800000
	.long 0xbf800000                                           // 0000000763B8: BF800000
	.long 0xbf800000                                           // 0000000763BC: BF800000
	.long 0xbf800000                                           // 0000000763C0: BF800000
	.long 0xbf800000                                           // 0000000763C4: BF800000
	.long 0xbf800000                                           // 0000000763C8: BF800000
	.long 0xbf800000                                           // 0000000763CC: BF800000
	.long 0xbf800000                                           // 0000000763D0: BF800000
	.long 0xbf800000                                           // 0000000763D4: BF800000
	.long 0xbf800000                                           // 0000000763D8: BF800000
	.long 0xbf800000                                           // 0000000763DC: BF800000
	.long 0xbf800000                                           // 0000000763E0: BF800000
	.long 0xbf800000                                           // 0000000763E4: BF800000
	.long 0xbf800000                                           // 0000000763E8: BF800000
	.long 0xbf800000                                           // 0000000763EC: BF800000
	.long 0xbf800000                                           // 0000000763F0: BF800000
	.long 0xbf800000                                           // 0000000763F4: BF800000
	.long 0xbf800000                                           // 0000000763F8: BF800000
	.long 0xbf800000                                           // 0000000763FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_id_get_global_id,@function
	.size	subtract_long_get_local_id_get_global_id, subtract_long_get_local_id_get_global_id_symend-subtract_long_get_local_id_get_global_id
subtract_long_get_local_id_get_global_id:
	s_clause 0x1                                               // 000000076400: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076404: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007640C: F4040180 F8000048
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000076414: 360600FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007641C: F4040000 F8000008
	v_bfe_u32 v13, v0, 10, 10                                  // 000000076424: D610000D 02291500
	v_bfe_u32 v14, v0, 20, 10                                  // 00000007642C: D610000E 02292900
	v_mov_b32_e32 v1, 0                                        // 000000076434: 7E020280
	v_lshl_or_b32 v0, s2, 3, v3                                // 000000076438: D6560000 040D0602
	s_mov_b32 s33, 0                                           // 000000076440: BEA10080
	v_lshl_or_b32 v2, s3, 2, v13                               // 000000076444: D6560002 04350403
	v_lshl_or_b32 v4, s4, 1, v14                               // 00000007644C: D6560004 04390204
	s_waitcnt lgkmcnt(0)                                       // 000000076454: BF89FC07
	v_add_co_u32 v0, s2, s8, v0                                // 000000076458: D7000200 00020008
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000076460: BF8701A1
	v_add_co_ci_u32_e64 v8, null, s9, 0, s2                    // 000000076464: D5207C08 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 00000007646C: D7000202 0002040A
	v_lshlrev_b64 v[5:6], 3, v[0:1]                            // 000000076474: D73C0005 00020083
	v_sub_co_u32 v7, vcc_lo, v3, v0                            // 00000007647C: D7016A07 00020103
	v_mov_b32_e32 v3, v1                                       // 000000076484: 7E060301
	v_sub_co_ci_u32_e32 v8, vcc_lo, 0, v8, vcc_lo              // 000000076488: 42101080
	v_add_co_ci_u32_e64 v15, null, s11, 0, s2                  // 00000007648C: D5207C0F 0009000B
	v_add_co_u32 v9, vcc_lo, s0, v5                            // 000000076494: D7006A09 00020A00
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007649C: BF870004
	v_lshlrev_b64 v[11:12], 3, v[2:3]                          // 0000000764A0: D73C000B 00020483
	v_add_co_u32 v4, s2, s6, v4                                // 0000000764A8: D7000204 00020806
	v_mov_b32_e32 v5, v1                                       // 0000000764B0: 7E0A0301
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v6, vcc_lo            // 0000000764B4: 40140C01
	v_sub_co_u32 v2, vcc_lo, v13, v2                           // 0000000764B8: D7016A02 0002050D
	v_sub_co_ci_u32_e32 v3, vcc_lo, 0, v15, vcc_lo             // 0000000764C0: 42061E80
	v_add_co_ci_u32_e64 v16, null, s7, 0, s2                   // 0000000764C4: D5207C10 00090007
	v_add_co_u32 v0, vcc_lo, s0, v11                           // 0000000764CC: D7006A00 00021600
	v_lshlrev_b64 v[5:6], 3, v[4:5]                            // 0000000764D4: D73C0005 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v12, vcc_lo            // 0000000764DC: 40021801
	v_sub_co_u32 v11, vcc_lo, v14, v4                          // 0000000764E0: D7016A0B 0002090E
	v_sub_co_ci_u32_e32 v12, vcc_lo, 0, v16, vcc_lo            // 0000000764E8: 42182080
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000764EC: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v5                            // 0000000764F0: D7006A04 00020A00
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v6, vcc_lo             // 0000000764F8: 400A0C01
	s_clause 0x2                                               // 0000000764FC: BF850002
	global_store_b64 v[9:10], v[7:8], off                      // 000000076500: DC6E0000 007C0709
	global_store_b64 v[0:1], v[2:3], off                       // 000000076508: DC6E0000 007C0200
	global_store_b64 v[4:5], v[11:12], off                     // 000000076510: DC6E0000 007C0B04
	s_nop 0                                                    // 000000076518: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007651C: BFB60003
	s_endpgm                                                   // 000000076520: BFB00000
subtract_long_get_local_id_get_global_id_symend:
	.long 0xbf800000                                           // 000000076524: BF800000
	.long 0xbf800000                                           // 000000076528: BF800000
	.long 0xbf800000                                           // 00000007652C: BF800000
	.long 0xbf800000                                           // 000000076530: BF800000
	.long 0xbf800000                                           // 000000076534: BF800000
	.long 0xbf800000                                           // 000000076538: BF800000
	.long 0xbf800000                                           // 00000007653C: BF800000
	.long 0xbf800000                                           // 000000076540: BF800000
	.long 0xbf800000                                           // 000000076544: BF800000
	.long 0xbf800000                                           // 000000076548: BF800000
	.long 0xbf800000                                           // 00000007654C: BF800000
	.long 0xbf800000                                           // 000000076550: BF800000
	.long 0xbf800000                                           // 000000076554: BF800000
	.long 0xbf800000                                           // 000000076558: BF800000
	.long 0xbf800000                                           // 00000007655C: BF800000
	.long 0xbf800000                                           // 000000076560: BF800000
	.long 0xbf800000                                           // 000000076564: BF800000
	.long 0xbf800000                                           // 000000076568: BF800000
	.long 0xbf800000                                           // 00000007656C: BF800000
	.long 0xbf800000                                           // 000000076570: BF800000
	.long 0xbf800000                                           // 000000076574: BF800000
	.long 0xbf800000                                           // 000000076578: BF800000
	.long 0xbf800000                                           // 00000007657C: BF800000
	.long 0xbf800000                                           // 000000076580: BF800000
	.long 0xbf800000                                           // 000000076584: BF800000
	.long 0xbf800000                                           // 000000076588: BF800000
	.long 0xbf800000                                           // 00000007658C: BF800000
	.long 0xbf800000                                           // 000000076590: BF800000
	.long 0xbf800000                                           // 000000076594: BF800000
	.long 0xbf800000                                           // 000000076598: BF800000
	.long 0xbf800000                                           // 00000007659C: BF800000
	.long 0xbf800000                                           // 0000000765A0: BF800000
	.long 0xbf800000                                           // 0000000765A4: BF800000
	.long 0xbf800000                                           // 0000000765A8: BF800000
	.long 0xbf800000                                           // 0000000765AC: BF800000
	.long 0xbf800000                                           // 0000000765B0: BF800000
	.long 0xbf800000                                           // 0000000765B4: BF800000
	.long 0xbf800000                                           // 0000000765B8: BF800000
	.long 0xbf800000                                           // 0000000765BC: BF800000
	.long 0xbf800000                                           // 0000000765C0: BF800000
	.long 0xbf800000                                           // 0000000765C4: BF800000
	.long 0xbf800000                                           // 0000000765C8: BF800000
	.long 0xbf800000                                           // 0000000765CC: BF800000
	.long 0xbf800000                                           // 0000000765D0: BF800000
	.long 0xbf800000                                           // 0000000765D4: BF800000
	.long 0xbf800000                                           // 0000000765D8: BF800000
	.long 0xbf800000                                           // 0000000765DC: BF800000
	.long 0xbf800000                                           // 0000000765E0: BF800000
	.long 0xbf800000                                           // 0000000765E4: BF800000
	.long 0xbf800000                                           // 0000000765E8: BF800000
	.long 0xbf800000                                           // 0000000765EC: BF800000
	.long 0xbf800000                                           // 0000000765F0: BF800000
	.long 0xbf800000                                           // 0000000765F4: BF800000
	.long 0xbf800000                                           // 0000000765F8: BF800000
	.long 0xbf800000                                           // 0000000765FC: BF800000

	.p2align	8
	.type	subtract_long_get_group_id_get_global_id,@function
	.size	subtract_long_get_group_id_get_global_id, subtract_long_get_group_id_get_global_id_symend-subtract_long_get_group_id_get_global_id
subtract_long_get_group_id_get_global_id:
	s_clause 0x1                                               // 000000076600: BF850001
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076604: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007660C: F4040180 F8000048
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000076614: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007661C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000076624: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007662C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000076634: BEA10080
	v_lshl_or_b32 v3, s2, 1, v1                                // 000000076638: D6560003 04050202
	v_mov_b32_e32 v1, 0                                        // 000000076640: 7E020280
	v_lshl_or_b32 v2, s3, 4, v2                                // 000000076644: D6560002 04090803
	v_lshl_or_b32 v4, s4, 1, v0                                // 00000007664C: D6560004 04010204
	s_waitcnt lgkmcnt(0)                                       // 000000076654: BF89FC07
	v_add_co_u32 v0, s5, s8, v3                                // 000000076658: D7000500 00020608
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000076660: BF8701A1
	v_add_co_ci_u32_e64 v3, null, s9, 0, s5                    // 000000076664: D5207C03 00150009
	v_add_co_u32 v2, s5, s10, v2                               // 00000007666C: D7000502 0002040A
	v_sub_co_u32 v7, vcc_lo, s2, v0                            // 000000076674: D7016A07 00020002
	v_lshlrev_b64 v[5:6], 3, v[0:1]                            // 00000007667C: D73C0005 00020083
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_4)// 000000076684: BF870234
	v_sub_co_ci_u32_e32 v8, vcc_lo, 0, v3, vcc_lo              // 000000076688: 42100680
	v_mov_b32_e32 v3, v1                                       // 00000007668C: 7E060301
	v_add_co_ci_u32_e64 v13, null, s11, 0, s5                  // 000000076690: D5207C0D 0015000B
	v_add_co_u32 v9, vcc_lo, s0, v5                            // 000000076698: D7006A09 00020A00
	s_delay_alu instid0(VALU_DEP_3)                            // 0000000766A0: BF870003
	v_lshlrev_b64 v[11:12], 3, v[2:3]                          // 0000000766A4: D73C000B 00020483
	v_add_co_u32 v4, s5, s6, v4                                // 0000000766AC: D7000504 00020806
	v_mov_b32_e32 v5, v1                                       // 0000000766B4: 7E0A0301
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v6, vcc_lo            // 0000000766B8: 40140C01
	v_sub_co_u32 v2, vcc_lo, s3, v2                            // 0000000766BC: D7016A02 00020403
	v_sub_co_ci_u32_e32 v3, vcc_lo, 0, v13, vcc_lo             // 0000000766C4: 42061A80
	v_add_co_ci_u32_e64 v14, null, s7, 0, s5                   // 0000000766C8: D5207C0E 00150007
	v_add_co_u32 v0, vcc_lo, s0, v11                           // 0000000766D0: D7006A00 00021600
	v_lshlrev_b64 v[5:6], 3, v[4:5]                            // 0000000766D8: D73C0005 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v12, vcc_lo            // 0000000766E0: 40021801
	v_sub_co_u32 v11, vcc_lo, s4, v4                           // 0000000766E4: D7016A0B 00020804
	v_sub_co_ci_u32_e32 v12, vcc_lo, 0, v14, vcc_lo            // 0000000766EC: 42181C80
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000766F0: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v5                            // 0000000766F4: D7006A04 00020A00
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v6, vcc_lo             // 0000000766FC: 400A0C01
	s_clause 0x2                                               // 000000076700: BF850002
	global_store_b64 v[9:10], v[7:8], off                      // 000000076704: DC6E0000 007C0709
	global_store_b64 v[0:1], v[2:3], off                       // 00000007670C: DC6E0000 007C0200
	global_store_b64 v[4:5], v[11:12], off                     // 000000076714: DC6E0000 007C0B04
	s_nop 0                                                    // 00000007671C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076720: BFB60003
	s_endpgm                                                   // 000000076724: BFB00000
subtract_long_get_group_id_get_global_id_symend:
	.long 0xbf800000                                           // 000000076728: BF800000
	.long 0xbf800000                                           // 00000007672C: BF800000
	.long 0xbf800000                                           // 000000076730: BF800000
	.long 0xbf800000                                           // 000000076734: BF800000
	.long 0xbf800000                                           // 000000076738: BF800000
	.long 0xbf800000                                           // 00000007673C: BF800000
	.long 0xbf800000                                           // 000000076740: BF800000
	.long 0xbf800000                                           // 000000076744: BF800000
	.long 0xbf800000                                           // 000000076748: BF800000
	.long 0xbf800000                                           // 00000007674C: BF800000
	.long 0xbf800000                                           // 000000076750: BF800000
	.long 0xbf800000                                           // 000000076754: BF800000
	.long 0xbf800000                                           // 000000076758: BF800000
	.long 0xbf800000                                           // 00000007675C: BF800000
	.long 0xbf800000                                           // 000000076760: BF800000
	.long 0xbf800000                                           // 000000076764: BF800000
	.long 0xbf800000                                           // 000000076768: BF800000
	.long 0xbf800000                                           // 00000007676C: BF800000
	.long 0xbf800000                                           // 000000076770: BF800000
	.long 0xbf800000                                           // 000000076774: BF800000
	.long 0xbf800000                                           // 000000076778: BF800000
	.long 0xbf800000                                           // 00000007677C: BF800000
	.long 0xbf800000                                           // 000000076780: BF800000
	.long 0xbf800000                                           // 000000076784: BF800000
	.long 0xbf800000                                           // 000000076788: BF800000
	.long 0xbf800000                                           // 00000007678C: BF800000
	.long 0xbf800000                                           // 000000076790: BF800000
	.long 0xbf800000                                           // 000000076794: BF800000
	.long 0xbf800000                                           // 000000076798: BF800000
	.long 0xbf800000                                           // 00000007679C: BF800000
	.long 0xbf800000                                           // 0000000767A0: BF800000
	.long 0xbf800000                                           // 0000000767A4: BF800000
	.long 0xbf800000                                           // 0000000767A8: BF800000
	.long 0xbf800000                                           // 0000000767AC: BF800000
	.long 0xbf800000                                           // 0000000767B0: BF800000
	.long 0xbf800000                                           // 0000000767B4: BF800000
	.long 0xbf800000                                           // 0000000767B8: BF800000
	.long 0xbf800000                                           // 0000000767BC: BF800000
	.long 0xbf800000                                           // 0000000767C0: BF800000
	.long 0xbf800000                                           // 0000000767C4: BF800000
	.long 0xbf800000                                           // 0000000767C8: BF800000
	.long 0xbf800000                                           // 0000000767CC: BF800000
	.long 0xbf800000                                           // 0000000767D0: BF800000
	.long 0xbf800000                                           // 0000000767D4: BF800000
	.long 0xbf800000                                           // 0000000767D8: BF800000
	.long 0xbf800000                                           // 0000000767DC: BF800000
	.long 0xbf800000                                           // 0000000767E0: BF800000
	.long 0xbf800000                                           // 0000000767E4: BF800000
	.long 0xbf800000                                           // 0000000767E8: BF800000
	.long 0xbf800000                                           // 0000000767EC: BF800000
	.long 0xbf800000                                           // 0000000767F0: BF800000
	.long 0xbf800000                                           // 0000000767F4: BF800000
	.long 0xbf800000                                           // 0000000767F8: BF800000
	.long 0xbf800000                                           // 0000000767FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_size_get_global_id,@function
	.size	subtract_long_get_local_size_get_global_id, subtract_long_get_local_size_get_global_id_symend-subtract_long_get_local_size_get_global_id
subtract_long_get_local_size_get_global_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000076800: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000076808: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007680C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000076810: 820B8001
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000076814: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000076820: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076828: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000076830: BEA10080
	s_delay_alu instid0(VALU_DEP_3)                            // 000000076834: BF870003
	v_mov_b32_e32 v3, v1                                       // 000000076838: 7E060301
	v_lshl_or_b32 v2, s2, 1, v2                                // 00000007683C: D6560002 04090202
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000076844: D6560004 04110203
	v_lshl_or_b32 v6, s4, 2, v0                                // 00000007684C: D6560006 04010404
	v_mov_b32_e32 v5, v1                                       // 000000076854: 7E0A0301
	s_cmp_lt_u32 s2, s8                                        // 000000076858: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000007685C: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000076860: BF8704D9
	s_add_u32 s6, s5, s6                                       // 000000076864: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000076868: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007686C: BF0A0903
	global_load_u16 v12, v1, s[6:7]                            // 000000076870: DC4A0000 0C060001
	s_cselect_b32 s8, 14, 20                                   // 000000076878: 9808948E
	s_add_u32 s8, s5, s8                                       // 00000007687C: 80080805
	s_addc_u32 s9, s11, 0                                      // 000000076880: 8209800B
	s_cmp_lt_u32 s4, s10                                       // 000000076884: BF0A0A04
	global_load_u16 v13, v1, s[8:9]                            // 000000076888: DC4A0000 0D080001
	s_cselect_b32 s6, 16, 22                                   // 000000076890: 98069690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000076894: BF870009
	s_add_u32 s6, s5, s6                                       // 000000076898: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000007689C: 8207800B
	global_load_u16 v14, v1, s[6:7]                            // 0000000768A0: DC4A0000 0E060001
	s_clause 0x2                                               // 0000000768A8: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 0000000768AC: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 0000000768B4: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 0000000768BC: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 0000000768C4: BF89FC07
	v_add_co_u32 v0, s2, s8, v2                                // 0000000768C8: D7000200 00020408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000768D0: BF8700A1
	v_add_co_ci_u32_e64 v15, null, s9, 0, s2                   // 0000000768D4: D5207C0F 00090009
	v_add_co_u32 v2, s2, s10, v4                               // 0000000768DC: D7000202 0002080A
	v_add_co_ci_u32_e64 v16, null, s11, 0, s2                  // 0000000768E4: D5207C10 0009000B
	v_add_co_u32 v4, s2, s6, v6                                // 0000000768EC: D7000204 00020C06
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 0000000768F4: D73C0006 00020083
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 0000000768FC: BF870224
	v_lshlrev_b64 v[8:9], 3, v[2:3]                            // 000000076900: D73C0008 00020483
	v_add_co_ci_u32_e64 v17, null, s7, 0, s2                   // 000000076908: D5207C11 00090007
	v_lshlrev_b64 v[10:11], 3, v[4:5]                          // 000000076910: D73C000A 00020883
	s_delay_alu instid0(VALU_DEP_4)                            // 000000076918: BF870004
	v_add_co_u32 v5, vcc_lo, s0, v6                            // 00000007691C: D7006A05 00020C00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v7, vcc_lo             // 000000076924: 400C0E01
	v_add_co_u32 v7, vcc_lo, s0, v8                            // 000000076928: D7006A07 00021000
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v9, vcc_lo             // 000000076930: 40101201
	s_waitcnt vmcnt(2)                                         // 000000076934: BF890BF7
	v_and_b32_e32 v1, 0xffff, v12                              // 000000076938: 360218FF 0000FFFF
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000076940: BF870141
	v_sub_co_u32 v0, vcc_lo, v1, v0                            // 000000076944: D7016A00 00020101
	s_waitcnt vmcnt(1)                                         // 00000007694C: BF8907F7
	v_and_b32_e32 v3, 0xffff, v13                              // 000000076950: 36061AFF 0000FFFF
	v_sub_co_ci_u32_e32 v1, vcc_lo, 0, v15, vcc_lo             // 000000076958: 42021E80
	v_sub_co_u32 v2, vcc_lo, v3, v2                            // 00000007695C: D7016A02 00020503
	s_waitcnt vmcnt(0)                                         // 000000076964: BF8903F7
	v_and_b32_e32 v9, 0xffff, v14                              // 000000076968: 36121CFF 0000FFFF
	v_sub_co_ci_u32_e32 v3, vcc_lo, 0, v16, vcc_lo             // 000000076970: 42062080
	s_delay_alu instid0(VALU_DEP_2)                            // 000000076974: BF870002
	v_sub_co_u32 v12, vcc_lo, v9, v4                           // 000000076978: D7016A0C 00020909
	v_sub_co_ci_u32_e32 v13, vcc_lo, 0, v17, vcc_lo            // 000000076980: 421A2280
	v_add_co_u32 v9, vcc_lo, s0, v10                           // 000000076984: D7006A09 00021400
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v11, vcc_lo           // 00000007698C: 40141601
	s_clause 0x2                                               // 000000076990: BF850002
	global_store_b64 v[5:6], v[0:1], off                       // 000000076994: DC6E0000 007C0005
	global_store_b64 v[7:8], v[2:3], off                       // 00000007699C: DC6E0000 007C0207
	global_store_b64 v[9:10], v[12:13], off                    // 0000000769A4: DC6E0000 007C0C09
	s_nop 0                                                    // 0000000769AC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000769B0: BFB60003
	s_endpgm                                                   // 0000000769B4: BFB00000
subtract_long_get_local_size_get_global_id_symend:
	.long 0xbf800000                                           // 0000000769B8: BF800000
	.long 0xbf800000                                           // 0000000769BC: BF800000
	.long 0xbf800000                                           // 0000000769C0: BF800000
	.long 0xbf800000                                           // 0000000769C4: BF800000
	.long 0xbf800000                                           // 0000000769C8: BF800000
	.long 0xbf800000                                           // 0000000769CC: BF800000
	.long 0xbf800000                                           // 0000000769D0: BF800000
	.long 0xbf800000                                           // 0000000769D4: BF800000
	.long 0xbf800000                                           // 0000000769D8: BF800000
	.long 0xbf800000                                           // 0000000769DC: BF800000
	.long 0xbf800000                                           // 0000000769E0: BF800000
	.long 0xbf800000                                           // 0000000769E4: BF800000
	.long 0xbf800000                                           // 0000000769E8: BF800000
	.long 0xbf800000                                           // 0000000769EC: BF800000
	.long 0xbf800000                                           // 0000000769F0: BF800000
	.long 0xbf800000                                           // 0000000769F4: BF800000
	.long 0xbf800000                                           // 0000000769F8: BF800000
	.long 0xbf800000                                           // 0000000769FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_id_get_global_id,@function
	.size	subtract_long_get_global_id_get_global_id, subtract_long_get_global_id_get_global_id_symend-subtract_long_get_global_id_get_global_id
subtract_long_get_global_id_get_global_id:
	s_clause 0x2                                               // 000000076A00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076A04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000076A0C: F4040180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000076A14: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000076A1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000076A24: D6100002 02291500
	v_bfe_u32 v3, v0, 20, 10                                   // 000000076A2C: D6100003 02292900
	v_sub_co_u32 v7, vcc_lo, 0, 0                              // 000000076A34: D7016A07 00010080
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000076A3C: BF870214
	v_lshl_or_b32 v0, s2, 1, v1                                // 000000076A40: D6560000 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000076A48: D6560002 04090203
	v_mov_b32_e32 v1, 0                                        // 000000076A50: 7E020280
	v_lshl_or_b32 v3, s4, 2, v3                                // 000000076A54: D6560003 040D0404
	s_mov_b32 s33, 0                                           // 000000076A5C: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000076A60: BF8700B2
	v_lshlrev_b64 v[5:6], 3, v[0:1]                            // 000000076A64: D73C0005 00020083
	s_waitcnt lgkmcnt(0)                                       // 000000076A6C: BF89FC07
	v_add_co_u32 v4, s2, s8, v0                                // 000000076A70: D7000204 00020008
	v_add_co_ci_u32_e64 v8, null, s9, 0, s2                    // 000000076A78: D5207C08 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000076A80: D7000202 0002040A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000076A88: BF8701D1
	v_add_co_ci_u32_e64 v13, null, s11, 0, s2                  // 000000076A8C: D5207C0D 0009000B
	v_add_co_u32 v4, s2, s6, v3                                // 000000076A94: D7000204 00020606
	v_mov_b32_e32 v3, v1                                       // 000000076A9C: 7E060301
	v_sub_co_ci_u32_e32 v8, vcc_lo, 0, v8, vcc_lo              // 000000076AA0: 42101080
	v_add_co_u32 v9, vcc_lo, s0, v5                            // 000000076AA4: D7006A09 00020A00
	v_lshlrev_b64 v[11:12], 3, v[2:3]                          // 000000076AAC: D73C000B 00020483
	v_mov_b32_e32 v5, v1                                       // 000000076AB4: 7E0A0301
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v6, vcc_lo            // 000000076AB8: 40140C01
	v_sub_co_u32 v2, vcc_lo, v2, v2                            // 000000076ABC: D7016A02 00020502
	v_sub_co_ci_u32_e32 v3, vcc_lo, 0, v13, vcc_lo             // 000000076AC4: 42061A80
	v_add_co_ci_u32_e64 v14, null, s7, 0, s2                   // 000000076AC8: D5207C0E 00090007
	v_add_co_u32 v0, vcc_lo, s0, v11                           // 000000076AD0: D7006A00 00021600
	v_lshlrev_b64 v[5:6], 3, v[4:5]                            // 000000076AD8: D73C0005 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v12, vcc_lo            // 000000076AE0: 40021801
	v_sub_co_u32 v11, vcc_lo, v4, v4                           // 000000076AE4: D7016A0B 00020904
	v_sub_co_ci_u32_e32 v12, vcc_lo, 0, v14, vcc_lo            // 000000076AEC: 42181C80
	s_delay_alu instid0(VALU_DEP_4)                            // 000000076AF0: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v5                            // 000000076AF4: D7006A04 00020A00
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v6, vcc_lo             // 000000076AFC: 400A0C01
	s_clause 0x2                                               // 000000076B00: BF850002
	global_store_b64 v[9:10], v[7:8], off                      // 000000076B04: DC6E0000 007C0709
	global_store_b64 v[0:1], v[2:3], off                       // 000000076B0C: DC6E0000 007C0200
	global_store_b64 v[4:5], v[11:12], off                     // 000000076B14: DC6E0000 007C0B04
	s_nop 0                                                    // 000000076B1C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076B20: BFB60003
	s_endpgm                                                   // 000000076B24: BFB00000
subtract_long_get_global_id_get_global_id_symend:
	.long 0xbf800000                                           // 000000076B28: BF800000
	.long 0xbf800000                                           // 000000076B2C: BF800000
	.long 0xbf800000                                           // 000000076B30: BF800000
	.long 0xbf800000                                           // 000000076B34: BF800000
	.long 0xbf800000                                           // 000000076B38: BF800000
	.long 0xbf800000                                           // 000000076B3C: BF800000
	.long 0xbf800000                                           // 000000076B40: BF800000
	.long 0xbf800000                                           // 000000076B44: BF800000
	.long 0xbf800000                                           // 000000076B48: BF800000
	.long 0xbf800000                                           // 000000076B4C: BF800000
	.long 0xbf800000                                           // 000000076B50: BF800000
	.long 0xbf800000                                           // 000000076B54: BF800000
	.long 0xbf800000                                           // 000000076B58: BF800000
	.long 0xbf800000                                           // 000000076B5C: BF800000
	.long 0xbf800000                                           // 000000076B60: BF800000
	.long 0xbf800000                                           // 000000076B64: BF800000
	.long 0xbf800000                                           // 000000076B68: BF800000
	.long 0xbf800000                                           // 000000076B6C: BF800000
	.long 0xbf800000                                           // 000000076B70: BF800000
	.long 0xbf800000                                           // 000000076B74: BF800000
	.long 0xbf800000                                           // 000000076B78: BF800000
	.long 0xbf800000                                           // 000000076B7C: BF800000
	.long 0xbf800000                                           // 000000076B80: BF800000
	.long 0xbf800000                                           // 000000076B84: BF800000
	.long 0xbf800000                                           // 000000076B88: BF800000
	.long 0xbf800000                                           // 000000076B8C: BF800000
	.long 0xbf800000                                           // 000000076B90: BF800000
	.long 0xbf800000                                           // 000000076B94: BF800000
	.long 0xbf800000                                           // 000000076B98: BF800000
	.long 0xbf800000                                           // 000000076B9C: BF800000
	.long 0xbf800000                                           // 000000076BA0: BF800000
	.long 0xbf800000                                           // 000000076BA4: BF800000
	.long 0xbf800000                                           // 000000076BA8: BF800000
	.long 0xbf800000                                           // 000000076BAC: BF800000
	.long 0xbf800000                                           // 000000076BB0: BF800000
	.long 0xbf800000                                           // 000000076BB4: BF800000
	.long 0xbf800000                                           // 000000076BB8: BF800000
	.long 0xbf800000                                           // 000000076BBC: BF800000
	.long 0xbf800000                                           // 000000076BC0: BF800000
	.long 0xbf800000                                           // 000000076BC4: BF800000
	.long 0xbf800000                                           // 000000076BC8: BF800000
	.long 0xbf800000                                           // 000000076BCC: BF800000
	.long 0xbf800000                                           // 000000076BD0: BF800000
	.long 0xbf800000                                           // 000000076BD4: BF800000
	.long 0xbf800000                                           // 000000076BD8: BF800000
	.long 0xbf800000                                           // 000000076BDC: BF800000
	.long 0xbf800000                                           // 000000076BE0: BF800000
	.long 0xbf800000                                           // 000000076BE4: BF800000
	.long 0xbf800000                                           // 000000076BE8: BF800000
	.long 0xbf800000                                           // 000000076BEC: BF800000
	.long 0xbf800000                                           // 000000076BF0: BF800000
	.long 0xbf800000                                           // 000000076BF4: BF800000
	.long 0xbf800000                                           // 000000076BF8: BF800000
	.long 0xbf800000                                           // 000000076BFC: BF800000

	.p2align	8
	.type	subtract_long_get_global_size_get_global_id,@function
	.size	subtract_long_get_global_size_get_global_id, subtract_long_get_global_size_get_global_id_symend-subtract_long_get_global_size_get_global_id
subtract_long_get_global_size_get_global_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000076C00: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000076C0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076C14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000076C1C: BEA10080
	s_clause 0x1                                               // 000000076C20: BF850001
	global_load_b32 v12, v1, s[0:1] offset:34                  // 000000076C24: DC520022 0C000001
	global_load_u16 v13, v1, s[0:1] offset:38                  // 000000076C2C: DC4A0026 0D000001
	s_clause 0x3                                               // 000000076C34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000076C38: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000076C40: F4040180 F8000048
	s_load_b64 s[16:17], s[0:1], null                          // 000000076C48: F4040400 F8000000
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000076C50: F4080300 F8000010
	v_lshl_or_b32 v2, s2, 4, v2                                // 000000076C58: D6560002 04090802
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000076C60: D6560004 04110203
	v_lshl_or_b32 v6, s4, 1, v0                                // 000000076C68: D6560006 04010204
	v_mov_b32_e32 v3, v1                                       // 000000076C70: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000076C74: 7E0A0301
	s_waitcnt lgkmcnt(0)                                       // 000000076C78: BF89FC07
	v_add_co_u32 v0, s0, s8, v2                                // 000000076C7C: D7000000 00020408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000076C84: BF8700A1
	v_add_co_ci_u32_e64 v14, null, s9, 0, s0                   // 000000076C88: D5207C0E 00010009
	v_add_co_u32 v2, s0, s10, v4                               // 000000076C90: D7000002 0002080A
	v_add_co_ci_u32_e64 v15, null, s11, 0, s0                  // 000000076C98: D5207C0F 0001000B
	v_add_co_u32 v4, s0, s6, v6                                // 000000076CA0: D7000004 00020C06
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 000000076CA8: D73C0006 00020083
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000076CB0: BF870224
	v_lshlrev_b64 v[8:9], 3, v[2:3]                            // 000000076CB4: D73C0008 00020483
	v_add_co_ci_u32_e64 v16, null, s7, 0, s0                   // 000000076CBC: D5207C10 00010007
	v_lshlrev_b64 v[10:11], 3, v[4:5]                          // 000000076CC4: D73C000A 00020883
	s_lshl_b32 s0, s12, 4                                      // 000000076CCC: 8400840C
	s_delay_alu instid0(VALU_DEP_4)                            // 000000076CD0: BF870004
	v_add_co_u32 v5, vcc_lo, s16, v6                           // 000000076CD4: D7006A05 00020C10
	v_add_co_ci_u32_e32 v6, vcc_lo, s17, v7, vcc_lo            // 000000076CDC: 400C0E11
	v_add_co_u32 v7, vcc_lo, s16, v8                           // 000000076CE0: D7006A07 00021010
	s_lshl_b32 s1, s13, 1                                      // 000000076CE8: 8401810D
	v_add_co_ci_u32_e32 v8, vcc_lo, s17, v9, vcc_lo            // 000000076CEC: 40101211
	v_add_co_u32 v9, vcc_lo, s16, v10                          // 000000076CF0: D7006A09 00021410
	s_lshl_b32 s2, s14, 1                                      // 000000076CF8: 8402810E
	v_add_co_ci_u32_e32 v10, vcc_lo, s17, v11, vcc_lo          // 000000076CFC: 40141611
	s_waitcnt vmcnt(1)                                         // 000000076D00: BF8907F7
	v_and_b32_e32 v1, 0xffff, v12                              // 000000076D04: 360218FF 0000FFFF
	v_lshrrev_b32_e32 v3, 16, v12                              // 000000076D0C: 32061890
	s_waitcnt vmcnt(0)                                         // 000000076D10: BF8903F7
	v_add_nc_u32_e32 v11, s2, v13                              // 000000076D14: 4A161A02
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000076D18: BF870193
	v_add_nc_u32_e32 v1, s0, v1                                // 000000076D1C: 4A020200
	v_add_nc_u32_e32 v3, s1, v3                                // 000000076D20: 4A060601
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000076D24: BF8701A2
	v_sub_co_u32 v0, vcc_lo, v1, v0                            // 000000076D28: D7016A00 00020101
	v_sub_co_ci_u32_e32 v1, vcc_lo, 0, v14, vcc_lo             // 000000076D30: 42021C80
	v_sub_co_u32 v2, vcc_lo, v3, v2                            // 000000076D34: D7016A02 00020503
	v_sub_co_ci_u32_e32 v3, vcc_lo, 0, v15, vcc_lo             // 000000076D3C: 42061E80
	v_sub_co_u32 v11, vcc_lo, v11, v4                          // 000000076D40: D7016A0B 0002090B
	v_sub_co_ci_u32_e32 v12, vcc_lo, 0, v16, vcc_lo            // 000000076D48: 42182080
	s_clause 0x2                                               // 000000076D4C: BF850002
	global_store_b64 v[5:6], v[0:1], off                       // 000000076D50: DC6E0000 007C0005
	global_store_b64 v[7:8], v[2:3], off                       // 000000076D58: DC6E0000 007C0207
	global_store_b64 v[9:10], v[11:12], off                    // 000000076D60: DC6E0000 007C0B09
	s_nop 0                                                    // 000000076D68: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076D6C: BFB60003
	s_endpgm                                                   // 000000076D70: BFB00000
subtract_long_get_global_size_get_global_id_symend:
	.long 0xbf800000                                           // 000000076D74: BF800000
	.long 0xbf800000                                           // 000000076D78: BF800000
	.long 0xbf800000                                           // 000000076D7C: BF800000
	.long 0xbf800000                                           // 000000076D80: BF800000
	.long 0xbf800000                                           // 000000076D84: BF800000
	.long 0xbf800000                                           // 000000076D88: BF800000
	.long 0xbf800000                                           // 000000076D8C: BF800000
	.long 0xbf800000                                           // 000000076D90: BF800000
	.long 0xbf800000                                           // 000000076D94: BF800000
	.long 0xbf800000                                           // 000000076D98: BF800000
	.long 0xbf800000                                           // 000000076D9C: BF800000
	.long 0xbf800000                                           // 000000076DA0: BF800000
	.long 0xbf800000                                           // 000000076DA4: BF800000
	.long 0xbf800000                                           // 000000076DA8: BF800000
	.long 0xbf800000                                           // 000000076DAC: BF800000
	.long 0xbf800000                                           // 000000076DB0: BF800000
	.long 0xbf800000                                           // 000000076DB4: BF800000
	.long 0xbf800000                                           // 000000076DB8: BF800000
	.long 0xbf800000                                           // 000000076DBC: BF800000
	.long 0xbf800000                                           // 000000076DC0: BF800000
	.long 0xbf800000                                           // 000000076DC4: BF800000
	.long 0xbf800000                                           // 000000076DC8: BF800000
	.long 0xbf800000                                           // 000000076DCC: BF800000
	.long 0xbf800000                                           // 000000076DD0: BF800000
	.long 0xbf800000                                           // 000000076DD4: BF800000
	.long 0xbf800000                                           // 000000076DD8: BF800000
	.long 0xbf800000                                           // 000000076DDC: BF800000
	.long 0xbf800000                                           // 000000076DE0: BF800000
	.long 0xbf800000                                           // 000000076DE4: BF800000
	.long 0xbf800000                                           // 000000076DE8: BF800000
	.long 0xbf800000                                           // 000000076DEC: BF800000
	.long 0xbf800000                                           // 000000076DF0: BF800000
	.long 0xbf800000                                           // 000000076DF4: BF800000
	.long 0xbf800000                                           // 000000076DF8: BF800000
	.long 0xbf800000                                           // 000000076DFC: BF800000

	.p2align	8
	.type	subtract_long_get_num_groups_get_global_id,@function
	.size	subtract_long_get_num_groups_get_global_id, subtract_long_get_num_groups_get_global_id_symend-subtract_long_get_num_groups_get_global_id
subtract_long_get_num_groups_get_global_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000076E00: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000076E0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000076E14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000076E1C: BEA10080
	s_clause 0x1                                               // 000000076E20: BF850001
	global_load_b32 v12, v1, s[0:1] offset:34                  // 000000076E24: DC520022 0C000001
	global_load_u16 v13, v1, s[0:1] offset:38                  // 000000076E2C: DC4A0026 0D000001
	s_clause 0x3                                               // 000000076E34: BF850003
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000076E38: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000076E40: F4040180 F8000048
	s_load_b64 s[16:17], s[0:1], 0x8                           // 000000076E48: F4040400 F8000008
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000076E50: F4080200 F8000010
	v_lshl_or_b32 v2, s2, 1, v2                                // 000000076E58: D6560002 04090202
	v_lshl_or_b32 v4, s3, 1, v4                                // 000000076E60: D6560004 04110203
	v_lshl_or_b32 v6, s4, 2, v0                                // 000000076E68: D6560006 04010404
	v_mov_b32_e32 v5, v1                                       // 000000076E70: 7E0A0301
	v_mov_b32_e32 v3, v1                                       // 000000076E74: 7E060301
	s_waitcnt lgkmcnt(0)                                       // 000000076E78: BF89FC07
	v_add_co_u32 v0, s0, s12, v2                               // 000000076E7C: D7000000 0002040C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000076E84: BF8700A1
	v_add_co_ci_u32_e64 v14, null, s13, 0, s0                  // 000000076E88: D5207C0E 0001000D
	v_add_co_u32 v2, s0, s14, v4                               // 000000076E90: D7000002 0002080E
	v_add_co_ci_u32_e64 v15, null, s15, 0, s0                  // 000000076E98: D5207C0F 0001000F
	v_add_co_u32 v4, s0, s6, v6                                // 000000076EA0: D7000004 00020C06
	v_lshlrev_b64 v[6:7], 3, v[0:1]                            // 000000076EA8: D73C0006 00020083
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000076EB0: BF870224
	v_lshlrev_b64 v[8:9], 3, v[2:3]                            // 000000076EB4: D73C0008 00020483
	v_add_co_ci_u32_e64 v16, null, s7, 0, s0                   // 000000076EBC: D5207C10 00010007
	v_lshlrev_b64 v[10:11], 3, v[4:5]                          // 000000076EC4: D73C000A 00020883
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000076ECC: BF8700B4
	v_add_co_u32 v5, vcc_lo, s16, v6                           // 000000076ED0: D7006A05 00020C10
	v_add_co_ci_u32_e32 v6, vcc_lo, s17, v7, vcc_lo            // 000000076ED8: 400C0E11
	v_add_co_u32 v7, s1, s16, v8                               // 000000076EDC: D7000107 00021010
	v_add_co_ci_u32_e64 v8, s1, s17, v9, s1                    // 000000076EE4: D5200108 00061211
	s_waitcnt vmcnt(1)                                         // 000000076EEC: BF8907F7
	v_lshrrev_b32_e32 v1, 16, v12                              // 000000076EF0: 32021890
	v_cmp_ne_u16_e32 vcc_lo, 0, v12.l                          // 000000076EF4: 7C7A1880
	s_delay_alu instid0(VALU_DEP_2)                            // 000000076EF8: BF870002
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000076EFC: D43D0000 00020280
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000076F04: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000076F08: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v13.l                          // 000000076F0C: 7C7A1A80
	s_addc_u32 s1, s8, 0                                       // 000000076F10: 82018008
	s_cmp_lg_u32 s0, 0                                         // 000000076F14: BF078000
	v_sub_co_u32 v0, s0, s1, v0                                // 000000076F18: D7010000 00020001
	s_delay_alu instid0(VALU_DEP_1)                            // 000000076F20: BF870001
	v_sub_co_ci_u32_e64 v1, s0, 0, v14, s0                     // 000000076F24: D5210001 00021C80
	s_addc_u32 s0, s9, 0                                       // 000000076F2C: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000076F30: BF07806A
	v_sub_co_u32 v2, vcc_lo, s0, v2                            // 000000076F34: D7016A02 00020400
	s_addc_u32 s0, s10, 0                                      // 000000076F3C: 8200800A
	v_sub_co_ci_u32_e32 v3, vcc_lo, 0, v15, vcc_lo             // 000000076F40: 42061E80
	v_sub_co_u32 v12, vcc_lo, s0, v4                           // 000000076F44: D7016A0C 00020800
	v_sub_co_ci_u32_e32 v13, vcc_lo, 0, v16, vcc_lo            // 000000076F4C: 421A2080
	v_add_co_u32 v9, vcc_lo, s16, v10                          // 000000076F50: D7006A09 00021410
	v_add_co_ci_u32_e32 v10, vcc_lo, s17, v11, vcc_lo          // 000000076F58: 40141611
	s_clause 0x2                                               // 000000076F5C: BF850002
	global_store_b64 v[5:6], v[0:1], off                       // 000000076F60: DC6E0000 007C0005
	global_store_b64 v[7:8], v[2:3], off                       // 000000076F68: DC6E0000 007C0207
	global_store_b64 v[9:10], v[12:13], off                    // 000000076F70: DC6E0000 007C0C09
	s_nop 0                                                    // 000000076F78: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000076F7C: BFB60003
	s_endpgm                                                   // 000000076F80: BFB00000
subtract_long_get_num_groups_get_global_id_symend:
	.long 0xbf800000                                           // 000000076F84: BF800000
	.long 0xbf800000                                           // 000000076F88: BF800000
	.long 0xbf800000                                           // 000000076F8C: BF800000
	.long 0xbf800000                                           // 000000076F90: BF800000
	.long 0xbf800000                                           // 000000076F94: BF800000
	.long 0xbf800000                                           // 000000076F98: BF800000
	.long 0xbf800000                                           // 000000076F9C: BF800000
	.long 0xbf800000                                           // 000000076FA0: BF800000
	.long 0xbf800000                                           // 000000076FA4: BF800000
	.long 0xbf800000                                           // 000000076FA8: BF800000
	.long 0xbf800000                                           // 000000076FAC: BF800000
	.long 0xbf800000                                           // 000000076FB0: BF800000
	.long 0xbf800000                                           // 000000076FB4: BF800000
	.long 0xbf800000                                           // 000000076FB8: BF800000
	.long 0xbf800000                                           // 000000076FBC: BF800000
	.long 0xbf800000                                           // 000000076FC0: BF800000
	.long 0xbf800000                                           // 000000076FC4: BF800000
	.long 0xbf800000                                           // 000000076FC8: BF800000
	.long 0xbf800000                                           // 000000076FCC: BF800000
	.long 0xbf800000                                           // 000000076FD0: BF800000
	.long 0xbf800000                                           // 000000076FD4: BF800000
	.long 0xbf800000                                           // 000000076FD8: BF800000
	.long 0xbf800000                                           // 000000076FDC: BF800000
	.long 0xbf800000                                           // 000000076FE0: BF800000
	.long 0xbf800000                                           // 000000076FE4: BF800000
	.long 0xbf800000                                           // 000000076FE8: BF800000
	.long 0xbf800000                                           // 000000076FEC: BF800000
	.long 0xbf800000                                           // 000000076FF0: BF800000
	.long 0xbf800000                                           // 000000076FF4: BF800000
	.long 0xbf800000                                           // 000000076FF8: BF800000
	.long 0xbf800000                                           // 000000076FFC: BF800000

	.p2align	8
	.type	subtract_long_get_work_dim_get_global_id,@function
	.size	subtract_long_get_work_dim_get_global_id, subtract_long_get_work_dim_get_global_id_symend-subtract_long_get_work_dim_get_global_id
subtract_long_get_work_dim_get_global_id:
	s_clause 0x2                                               // 000000077000: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077004: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 00000007700C: F4040180 F8000048
	s_load_b32 s5, s[0:1], 0x50                                // 000000077014: F4000140 F8000050
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007701C: 360200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000077024: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007702C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077034: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007703C: BEA10080
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000077040: D6560001 04050202
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000077048: BF870193
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007704C: D6560002 04090203
	v_lshl_or_b32 v3, s4, 2, v0                                // 000000077054: D6560003 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007705C: BF89FC07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000077060: BF8700C3
	v_add_co_u32 v0, s2, s8, v1                                // 000000077064: D7000200 00020208
	v_mov_b32_e32 v1, 0                                        // 00000007706C: 7E020280
	v_add_co_ci_u32_e64 v8, null, s9, 0, s2                    // 000000077070: D5207C08 00090009
	v_add_co_u32 v2, s2, s10, v2                               // 000000077078: D7000202 0002040A
	v_add_co_ci_u32_e64 v13, null, s11, 0, s2                  // 000000077080: D5207C0D 0009000B
	v_add_co_u32 v4, s2, s6, v3                                // 000000077088: D7000204 00020606
	v_lshlrev_b64 v[5:6], 3, v[0:1]                            // 000000077090: D73C0005 00020083
	v_add_co_ci_u32_e64 v14, null, s7, 0, s2                   // 000000077098: D5207C0E 00090007
	s_and_b32 s2, s5, 0xffff                                   // 0000000770A0: 8B02FF05 0000FFFF
	v_mov_b32_e32 v3, v1                                       // 0000000770A8: 7E060301
	v_sub_co_u32 v7, vcc_lo, s2, v0                            // 0000000770AC: D7016A07 00020002
	v_sub_co_ci_u32_e32 v8, vcc_lo, 0, v8, vcc_lo              // 0000000770B4: 42101080
	v_add_co_u32 v9, vcc_lo, s0, v5                            // 0000000770B8: D7006A09 00020A00
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000770C0: BF870004
	v_lshlrev_b64 v[11:12], 3, v[2:3]                          // 0000000770C4: D73C000B 00020483
	v_mov_b32_e32 v5, v1                                       // 0000000770CC: 7E0A0301
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v6, vcc_lo            // 0000000770D0: 40140C01
	v_sub_co_u32 v2, vcc_lo, s2, v2                            // 0000000770D4: D7016A02 00020402
	v_sub_co_ci_u32_e32 v3, vcc_lo, 0, v13, vcc_lo             // 0000000770DC: 42061A80
	v_add_co_u32 v0, vcc_lo, s0, v11                           // 0000000770E0: D7006A00 00021600
	v_lshlrev_b64 v[5:6], 3, v[4:5]                            // 0000000770E8: D73C0005 00020883
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v12, vcc_lo            // 0000000770F0: 40021801
	v_sub_co_u32 v11, vcc_lo, s2, v4                           // 0000000770F4: D7016A0B 00020802
	v_sub_co_ci_u32_e32 v12, vcc_lo, 0, v14, vcc_lo            // 0000000770FC: 42181C80
	s_delay_alu instid0(VALU_DEP_4)                            // 000000077100: BF870004
	v_add_co_u32 v4, vcc_lo, s0, v5                            // 000000077104: D7006A04 00020A00
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v6, vcc_lo             // 00000007710C: 400A0C01
	s_clause 0x2                                               // 000000077110: BF850002
	global_store_b64 v[9:10], v[7:8], off                      // 000000077114: DC6E0000 007C0709
	global_store_b64 v[0:1], v[2:3], off                       // 00000007711C: DC6E0000 007C0200
	global_store_b64 v[4:5], v[11:12], off                     // 000000077124: DC6E0000 007C0B04
	s_nop 0                                                    // 00000007712C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077130: BFB60003
	s_endpgm                                                   // 000000077134: BFB00000
subtract_long_get_work_dim_get_global_id_symend:
	.long 0xbf800000                                           // 000000077138: BF800000
	.long 0xbf800000                                           // 00000007713C: BF800000
	.long 0xbf800000                                           // 000000077140: BF800000
	.long 0xbf800000                                           // 000000077144: BF800000
	.long 0xbf800000                                           // 000000077148: BF800000
	.long 0xbf800000                                           // 00000007714C: BF800000
	.long 0xbf800000                                           // 000000077150: BF800000
	.long 0xbf800000                                           // 000000077154: BF800000
	.long 0xbf800000                                           // 000000077158: BF800000
	.long 0xbf800000                                           // 00000007715C: BF800000
	.long 0xbf800000                                           // 000000077160: BF800000
	.long 0xbf800000                                           // 000000077164: BF800000
	.long 0xbf800000                                           // 000000077168: BF800000
	.long 0xbf800000                                           // 00000007716C: BF800000
	.long 0xbf800000                                           // 000000077170: BF800000
	.long 0xbf800000                                           // 000000077174: BF800000
	.long 0xbf800000                                           // 000000077178: BF800000
	.long 0xbf800000                                           // 00000007717C: BF800000
	.long 0xbf800000                                           // 000000077180: BF800000
	.long 0xbf800000                                           // 000000077184: BF800000
	.long 0xbf800000                                           // 000000077188: BF800000
	.long 0xbf800000                                           // 00000007718C: BF800000
	.long 0xbf800000                                           // 000000077190: BF800000
	.long 0xbf800000                                           // 000000077194: BF800000
	.long 0xbf800000                                           // 000000077198: BF800000
	.long 0xbf800000                                           // 00000007719C: BF800000
	.long 0xbf800000                                           // 0000000771A0: BF800000
	.long 0xbf800000                                           // 0000000771A4: BF800000
	.long 0xbf800000                                           // 0000000771A8: BF800000
	.long 0xbf800000                                           // 0000000771AC: BF800000
	.long 0xbf800000                                           // 0000000771B0: BF800000
	.long 0xbf800000                                           // 0000000771B4: BF800000
	.long 0xbf800000                                           // 0000000771B8: BF800000
	.long 0xbf800000                                           // 0000000771BC: BF800000
	.long 0xbf800000                                           // 0000000771C0: BF800000
	.long 0xbf800000                                           // 0000000771C4: BF800000
	.long 0xbf800000                                           // 0000000771C8: BF800000
	.long 0xbf800000                                           // 0000000771CC: BF800000
	.long 0xbf800000                                           // 0000000771D0: BF800000
	.long 0xbf800000                                           // 0000000771D4: BF800000
	.long 0xbf800000                                           // 0000000771D8: BF800000
	.long 0xbf800000                                           // 0000000771DC: BF800000
	.long 0xbf800000                                           // 0000000771E0: BF800000
	.long 0xbf800000                                           // 0000000771E4: BF800000
	.long 0xbf800000                                           // 0000000771E8: BF800000
	.long 0xbf800000                                           // 0000000771EC: BF800000
	.long 0xbf800000                                           // 0000000771F0: BF800000
	.long 0xbf800000                                           // 0000000771F4: BF800000
	.long 0xbf800000                                           // 0000000771F8: BF800000
	.long 0xbf800000                                           // 0000000771FC: BF800000

	.p2align	8
	.type	subtract_long_x_get_global_size,@function
	.size	subtract_long_x_get_global_size, subtract_long_x_get_global_size_symend-subtract_long_x_get_global_size
subtract_long_x_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077200: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 00000007720C: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077210: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077218: D6100000 02292900
	s_clause 0x1                                               // 000000077220: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077224: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007722C: DC4A0026 08000002
	s_clause 0x4                                               // 000000077234: BF850004
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077238: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 000000077240: F4000140 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000077248: F4080300 F8000010
	s_load_b32 s6, s[0:1], 0x48                                // 000000077250: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000077258: F4040000 F8000000
	s_mov_b32 s33, 0                                           // 000000077260: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000077264: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000077268: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 000000077270: 84028103
	s_lshl_b32 s3, s4, 1                                       // 000000077274: 84038104
	s_lshl_b32 s4, s12, 4                                      // 000000077278: 8404840C
	s_lshl_b32 s7, s13, 1                                      // 00000007727C: 8407810D
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077280: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v5                                 // 000000077288: D6550001 0414040A
	s_lshl_b32 s8, s14, 1                                      // 000000077290: 8408810E
	s_ashr_i32 s2, s5, 31                                      // 000000077294: 86029F05
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000077298: BF8701C1
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 00000007729C: D73C0005 00020283
	v_add3_u32 v1, s6, s3, v0                                  // 0000000772A4: D6550001 04000606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000772AC: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000772B4: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000772B8: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000772C0: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000772C8: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000772CC: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000772D0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000772D8: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000772DC: BF8907F7
	v_and_b32_e32 v2, 0xffff, v7                               // 0000000772E0: 36040EFF 0000FFFF
	v_lshrrev_b32_e32 v7, 16, v7                               // 0000000772E8: 320E0E90
	s_waitcnt vmcnt(0)                                         // 0000000772EC: BF8903F7
	v_add_nc_u32_e32 v11, s8, v8                               // 0000000772F0: 4A161008
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000772F4: BF870193
	v_add_nc_u32_e32 v2, s4, v2                                // 0000000772F8: 4A040404
	v_add_nc_u32_e32 v9, s7, v7                                // 0000000772FC: 4A120E07
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000077300: BF870092
	v_sub_co_u32 v7, s0, s5, v2                                // 000000077304: D7010007 00020405
	v_sub_co_ci_u32_e64 v8, null, s2, 0, s0                    // 00000007730C: D5217C08 00010002
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000077314: BF870093
	v_sub_co_u32 v9, s0, s5, v9                                // 000000077318: D7010009 00021205
	v_sub_co_ci_u32_e64 v10, null, s2, 0, s0                   // 000000077320: D5217C0A 00010002
	v_sub_co_u32 v11, s0, s5, v11                              // 000000077328: D701000B 00021605
	s_delay_alu instid0(VALU_DEP_1)                            // 000000077330: BF870001
	v_sub_co_ci_u32_e64 v12, null, s2, 0, s0                   // 000000077334: D5217C0C 00010002
	s_clause 0x2                                               // 00000007733C: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000077340: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000077348: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000077350: DC6E0000 007C0B00
	s_nop 0                                                    // 000000077358: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007735C: BFB60003
	s_endpgm                                                   // 000000077360: BFB00000
subtract_long_x_get_global_size_symend:
	.long 0xbf800000                                           // 000000077364: BF800000
	.long 0xbf800000                                           // 000000077368: BF800000
	.long 0xbf800000                                           // 00000007736C: BF800000
	.long 0xbf800000                                           // 000000077370: BF800000
	.long 0xbf800000                                           // 000000077374: BF800000
	.long 0xbf800000                                           // 000000077378: BF800000
	.long 0xbf800000                                           // 00000007737C: BF800000
	.long 0xbf800000                                           // 000000077380: BF800000
	.long 0xbf800000                                           // 000000077384: BF800000
	.long 0xbf800000                                           // 000000077388: BF800000
	.long 0xbf800000                                           // 00000007738C: BF800000
	.long 0xbf800000                                           // 000000077390: BF800000
	.long 0xbf800000                                           // 000000077394: BF800000
	.long 0xbf800000                                           // 000000077398: BF800000
	.long 0xbf800000                                           // 00000007739C: BF800000
	.long 0xbf800000                                           // 0000000773A0: BF800000
	.long 0xbf800000                                           // 0000000773A4: BF800000
	.long 0xbf800000                                           // 0000000773A8: BF800000
	.long 0xbf800000                                           // 0000000773AC: BF800000
	.long 0xbf800000                                           // 0000000773B0: BF800000
	.long 0xbf800000                                           // 0000000773B4: BF800000
	.long 0xbf800000                                           // 0000000773B8: BF800000
	.long 0xbf800000                                           // 0000000773BC: BF800000
	.long 0xbf800000                                           // 0000000773C0: BF800000
	.long 0xbf800000                                           // 0000000773C4: BF800000
	.long 0xbf800000                                           // 0000000773C8: BF800000
	.long 0xbf800000                                           // 0000000773CC: BF800000
	.long 0xbf800000                                           // 0000000773D0: BF800000
	.long 0xbf800000                                           // 0000000773D4: BF800000
	.long 0xbf800000                                           // 0000000773D8: BF800000
	.long 0xbf800000                                           // 0000000773DC: BF800000
	.long 0xbf800000                                           // 0000000773E0: BF800000
	.long 0xbf800000                                           // 0000000773E4: BF800000
	.long 0xbf800000                                           // 0000000773E8: BF800000
	.long 0xbf800000                                           // 0000000773EC: BF800000
	.long 0xbf800000                                           // 0000000773F0: BF800000
	.long 0xbf800000                                           // 0000000773F4: BF800000
	.long 0xbf800000                                           // 0000000773F8: BF800000
	.long 0xbf800000                                           // 0000000773FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_offset_get_global_size,@function
	.size	subtract_long_get_global_offset_get_global_size, subtract_long_get_global_offset_get_global_size_symend-subtract_long_get_global_offset_get_global_size
subtract_long_get_global_offset_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077400: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000007740C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077410: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077418: D6100000 02292900
	s_clause 0x1                                               // 000000077420: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077424: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007742C: DC4A0026 08000002
	s_clause 0x3                                               // 000000077434: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077438: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000077440: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000077448: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000077450: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000077458: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007745C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000077460: D6550001 04040408
	s_lshl_b32 s2, s3, 4                                       // 000000077468: 84028403
	s_lshl_b32 s3, s4, 1                                       // 00000007746C: 84038104
	s_lshl_b32 s4, s13, 4                                      // 000000077470: 8404840D
	s_lshl_b32 s6, s14, 1                                      // 000000077474: 8406810E
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077478: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v5                                 // 000000077480: D6550001 0414040A
	s_lshl_b32 s2, s12, 1                                      // 000000077488: 8402810C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007748C: BF870221
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077490: D73C0005 00020283
	v_add3_u32 v1, s5, s3, v0                                  // 000000077498: D6550001 04000605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000774A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000774A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000774AC: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000774B0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000774B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000774C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000774C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000774CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000774D0: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000774D4: BF8907F7
	v_and_b32_e32 v2, 0xffff, v7                               // 0000000774D8: 36040EFF 0000FFFF
	v_lshrrev_b32_e32 v7, 16, v7                               // 0000000774E0: 320E0E90
	s_waitcnt vmcnt(0)                                         // 0000000774E4: BF8903F7
	v_add_nc_u32_e32 v11, s6, v8                               // 0000000774E8: 4A161006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000774EC: BF870193
	v_add_nc_u32_e32 v2, s2, v2                                // 0000000774F0: 4A040402
	v_add_nc_u32_e32 v9, s4, v7                                // 0000000774F4: 4A120E04
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000774F8: BF870092
	v_sub_co_u32 v7, s0, s8, v2                                // 0000000774FC: D7010007 00020408
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s0                     // 000000077504: D5217C08 00010080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007750C: BF870093
	v_sub_co_u32 v9, s0, s10, v9                               // 000000077510: D7010009 0002120A
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s0                    // 000000077518: D5217C0A 00010080
	v_sub_co_u32 v11, s0, s5, v11                              // 000000077520: D701000B 00021605
	s_delay_alu instid0(VALU_DEP_1)                            // 000000077528: BF870001
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s0                    // 00000007752C: D5217C0C 00010080
	s_clause 0x2                                               // 000000077534: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000077538: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000077540: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000077548: DC6E0000 007C0B00
	s_nop 0                                                    // 000000077550: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077554: BFB60003
	s_endpgm                                                   // 000000077558: BFB00000
subtract_long_get_global_offset_get_global_size_symend:
	.long 0xbf800000                                           // 00000007755C: BF800000
	.long 0xbf800000                                           // 000000077560: BF800000
	.long 0xbf800000                                           // 000000077564: BF800000
	.long 0xbf800000                                           // 000000077568: BF800000
	.long 0xbf800000                                           // 00000007756C: BF800000
	.long 0xbf800000                                           // 000000077570: BF800000
	.long 0xbf800000                                           // 000000077574: BF800000
	.long 0xbf800000                                           // 000000077578: BF800000
	.long 0xbf800000                                           // 00000007757C: BF800000
	.long 0xbf800000                                           // 000000077580: BF800000
	.long 0xbf800000                                           // 000000077584: BF800000
	.long 0xbf800000                                           // 000000077588: BF800000
	.long 0xbf800000                                           // 00000007758C: BF800000
	.long 0xbf800000                                           // 000000077590: BF800000
	.long 0xbf800000                                           // 000000077594: BF800000
	.long 0xbf800000                                           // 000000077598: BF800000
	.long 0xbf800000                                           // 00000007759C: BF800000
	.long 0xbf800000                                           // 0000000775A0: BF800000
	.long 0xbf800000                                           // 0000000775A4: BF800000
	.long 0xbf800000                                           // 0000000775A8: BF800000
	.long 0xbf800000                                           // 0000000775AC: BF800000
	.long 0xbf800000                                           // 0000000775B0: BF800000
	.long 0xbf800000                                           // 0000000775B4: BF800000
	.long 0xbf800000                                           // 0000000775B8: BF800000
	.long 0xbf800000                                           // 0000000775BC: BF800000
	.long 0xbf800000                                           // 0000000775C0: BF800000
	.long 0xbf800000                                           // 0000000775C4: BF800000
	.long 0xbf800000                                           // 0000000775C8: BF800000
	.long 0xbf800000                                           // 0000000775CC: BF800000
	.long 0xbf800000                                           // 0000000775D0: BF800000
	.long 0xbf800000                                           // 0000000775D4: BF800000
	.long 0xbf800000                                           // 0000000775D8: BF800000
	.long 0xbf800000                                           // 0000000775DC: BF800000
	.long 0xbf800000                                           // 0000000775E0: BF800000
	.long 0xbf800000                                           // 0000000775E4: BF800000
	.long 0xbf800000                                           // 0000000775E8: BF800000
	.long 0xbf800000                                           // 0000000775EC: BF800000
	.long 0xbf800000                                           // 0000000775F0: BF800000
	.long 0xbf800000                                           // 0000000775F4: BF800000
	.long 0xbf800000                                           // 0000000775F8: BF800000
	.long 0xbf800000                                           // 0000000775FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_id_get_global_size,@function
	.size	subtract_long_get_local_id_get_global_size, subtract_long_get_local_id_get_global_size_symend-subtract_long_get_local_id_get_global_size
subtract_long_get_local_id_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 000000077600: CA240080 020800FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000007760C: 84028302
	v_bfe_u32 v10, v0, 10, 10                                  // 000000077610: D610000A 02291500
	v_bfe_u32 v11, v0, 20, 10                                  // 000000077618: D610000B 02292900
	s_clause 0x1                                               // 000000077620: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077624: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007762C: DC4A0026 08000002
	s_clause 0x3                                               // 000000077634: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077638: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000077640: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000077648: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000077650: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000077658: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007765C: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 000000077660: D6550001 04240408
	s_lshl_b32 s2, s3, 2                                       // 000000077668: 84028203
	s_lshl_b32 s3, s4, 1                                       // 00000007766C: 84038104
	s_lshl_b32 s4, s13, 2                                      // 000000077670: 8404820D
	s_lshl_b32 s6, s14, 1                                      // 000000077674: 8406810E
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077678: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v10                                // 000000077680: D6550001 0428040A
	s_lshl_b32 s2, s12, 3                                      // 000000077688: 8402830C
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 00000007768C: BF870221
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077690: D73C0005 00020283
	v_add3_u32 v1, s5, s3, v11                                 // 000000077698: D6550001 042C0605
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000776A0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000776A8: 40080801
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_3)// 0000000776AC: BF8701B3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000776B0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000776B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000776C0: 400C0C01
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000776C4: D7006A00 00020000
	s_delay_alu instid0(VALU_DEP_4)                            // 0000000776CC: BF870004
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000776D0: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000776D4: BF8907F7
	v_and_b32_e32 v2, 0xffff, v7                               // 0000000776D8: 36040EFF 0000FFFF
	v_lshrrev_b32_e32 v7, 16, v7                               // 0000000776E0: 320E0E90
	s_waitcnt vmcnt(0)                                         // 0000000776E4: BF8903F7
	v_add_nc_u32_e32 v12, s6, v8                               // 0000000776E8: 4A181006
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000776EC: BF870193
	v_add_nc_u32_e32 v2, s2, v2                                // 0000000776F0: 4A040402
	v_add_nc_u32_e32 v13, s4, v7                               // 0000000776F4: 4A1A0E04
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000776F8: BF870092
	v_sub_co_u32 v7, s0, v9, v2                                // 0000000776FC: D7010007 00020509
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s0                     // 000000077704: D5217C08 00010080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007770C: BF870093
	v_sub_co_u32 v9, s0, v10, v13                              // 000000077710: D7010009 00021B0A
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s0                    // 000000077718: D5217C0A 00010080
	v_sub_co_u32 v11, s0, v11, v12                             // 000000077720: D701000B 0002190B
	s_delay_alu instid0(VALU_DEP_1)                            // 000000077728: BF870001
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s0                    // 00000007772C: D5217C0C 00010080
	s_clause 0x2                                               // 000000077734: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000077738: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000077740: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000077748: DC6E0000 007C0B00
	s_nop 0                                                    // 000000077750: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077754: BFB60003
	s_endpgm                                                   // 000000077758: BFB00000
subtract_long_get_local_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000007775C: BF800000
	.long 0xbf800000                                           // 000000077760: BF800000
	.long 0xbf800000                                           // 000000077764: BF800000
	.long 0xbf800000                                           // 000000077768: BF800000
	.long 0xbf800000                                           // 00000007776C: BF800000
	.long 0xbf800000                                           // 000000077770: BF800000
	.long 0xbf800000                                           // 000000077774: BF800000
	.long 0xbf800000                                           // 000000077778: BF800000
	.long 0xbf800000                                           // 00000007777C: BF800000
	.long 0xbf800000                                           // 000000077780: BF800000
	.long 0xbf800000                                           // 000000077784: BF800000
	.long 0xbf800000                                           // 000000077788: BF800000
	.long 0xbf800000                                           // 00000007778C: BF800000
	.long 0xbf800000                                           // 000000077790: BF800000
	.long 0xbf800000                                           // 000000077794: BF800000
	.long 0xbf800000                                           // 000000077798: BF800000
	.long 0xbf800000                                           // 00000007779C: BF800000
	.long 0xbf800000                                           // 0000000777A0: BF800000
	.long 0xbf800000                                           // 0000000777A4: BF800000
	.long 0xbf800000                                           // 0000000777A8: BF800000
	.long 0xbf800000                                           // 0000000777AC: BF800000
	.long 0xbf800000                                           // 0000000777B0: BF800000
	.long 0xbf800000                                           // 0000000777B4: BF800000
	.long 0xbf800000                                           // 0000000777B8: BF800000
	.long 0xbf800000                                           // 0000000777BC: BF800000
	.long 0xbf800000                                           // 0000000777C0: BF800000
	.long 0xbf800000                                           // 0000000777C4: BF800000
	.long 0xbf800000                                           // 0000000777C8: BF800000
	.long 0xbf800000                                           // 0000000777CC: BF800000
	.long 0xbf800000                                           // 0000000777D0: BF800000
	.long 0xbf800000                                           // 0000000777D4: BF800000
	.long 0xbf800000                                           // 0000000777D8: BF800000
	.long 0xbf800000                                           // 0000000777DC: BF800000
	.long 0xbf800000                                           // 0000000777E0: BF800000
	.long 0xbf800000                                           // 0000000777E4: BF800000
	.long 0xbf800000                                           // 0000000777E8: BF800000
	.long 0xbf800000                                           // 0000000777EC: BF800000
	.long 0xbf800000                                           // 0000000777F0: BF800000
	.long 0xbf800000                                           // 0000000777F4: BF800000
	.long 0xbf800000                                           // 0000000777F8: BF800000
	.long 0xbf800000                                           // 0000000777FC: BF800000

	.p2align	8
	.type	subtract_long_get_group_id_get_global_size,@function
	.size	subtract_long_get_group_id_get_global_size, subtract_long_get_group_id_get_global_size_symend-subtract_long_get_group_id_get_global_size
subtract_long_get_group_id_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077800: CA240080 020000FF 000003FF
	s_lshl_b32 s6, s2, 1                                       // 00000007780C: 84068102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077810: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077818: D6100000 02292900
	s_clause 0x1                                               // 000000077820: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077824: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007782C: DC4A0026 08000002
	s_clause 0x3                                               // 000000077834: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077838: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000077840: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000077848: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000077850: F4040000 F8000008
	s_lshl_b32 s7, s4, 1                                       // 000000077858: 84078104
	s_mov_b32 s33, 0                                           // 00000007785C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000077860: BF89FC07
	v_add3_u32 v1, s8, s6, v1                                  // 000000077864: D6550001 04040C08
	s_lshl_b32 s6, s3, 4                                       // 00000007786C: 84068403
	s_lshl_b32 s8, s13, 4                                      // 000000077870: 8408840D
	s_lshl_b32 s9, s14, 1                                      // 000000077874: 8409810E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000077878: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007787C: D73C0003 00020283
	v_add3_u32 v1, s10, s6, v5                                 // 000000077884: D6550001 04140C0A
	s_lshl_b32 s6, s12, 1                                      // 00000007788C: 8406810C
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077890: D73C0005 00020283
	v_add3_u32 v1, s5, s7, v0                                  // 000000077898: D6550001 04000E05
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 0000000778A0: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000778A4: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000778AC: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000778B0: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000778B8: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000778C0: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000778C4: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000778C8: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000778D0: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000778D4: BF8907F7
	v_and_b32_e32 v2, 0xffff, v7                               // 0000000778D8: 36040EFF 0000FFFF
	v_lshrrev_b32_e32 v7, 16, v7                               // 0000000778E0: 320E0E90
	s_waitcnt vmcnt(0)                                         // 0000000778E4: BF8903F7
	v_add_nc_u32_e32 v11, s9, v8                               // 0000000778E8: 4A161009
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000778EC: BF870193
	v_add_nc_u32_e32 v2, s6, v2                                // 0000000778F0: 4A040406
	v_add_nc_u32_e32 v9, s8, v7                                // 0000000778F4: 4A120E08
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000778F8: BF870092
	v_sub_co_u32 v7, s0, s2, v2                                // 0000000778FC: D7010007 00020402
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s0                     // 000000077904: D5217C08 00010080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007790C: BF870093
	v_sub_co_u32 v9, s0, s3, v9                                // 000000077910: D7010009 00021203
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s0                    // 000000077918: D5217C0A 00010080
	v_sub_co_u32 v11, s0, s4, v11                              // 000000077920: D701000B 00021604
	s_delay_alu instid0(VALU_DEP_1)                            // 000000077928: BF870001
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s0                    // 00000007792C: D5217C0C 00010080
	s_clause 0x2                                               // 000000077934: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000077938: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000077940: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000077948: DC6E0000 007C0B00
	s_nop 0                                                    // 000000077950: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077954: BFB60003
	s_endpgm                                                   // 000000077958: BFB00000
subtract_long_get_group_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000007795C: BF800000
	.long 0xbf800000                                           // 000000077960: BF800000
	.long 0xbf800000                                           // 000000077964: BF800000
	.long 0xbf800000                                           // 000000077968: BF800000
	.long 0xbf800000                                           // 00000007796C: BF800000
	.long 0xbf800000                                           // 000000077970: BF800000
	.long 0xbf800000                                           // 000000077974: BF800000
	.long 0xbf800000                                           // 000000077978: BF800000
	.long 0xbf800000                                           // 00000007797C: BF800000
	.long 0xbf800000                                           // 000000077980: BF800000
	.long 0xbf800000                                           // 000000077984: BF800000
	.long 0xbf800000                                           // 000000077988: BF800000
	.long 0xbf800000                                           // 00000007798C: BF800000
	.long 0xbf800000                                           // 000000077990: BF800000
	.long 0xbf800000                                           // 000000077994: BF800000
	.long 0xbf800000                                           // 000000077998: BF800000
	.long 0xbf800000                                           // 00000007799C: BF800000
	.long 0xbf800000                                           // 0000000779A0: BF800000
	.long 0xbf800000                                           // 0000000779A4: BF800000
	.long 0xbf800000                                           // 0000000779A8: BF800000
	.long 0xbf800000                                           // 0000000779AC: BF800000
	.long 0xbf800000                                           // 0000000779B0: BF800000
	.long 0xbf800000                                           // 0000000779B4: BF800000
	.long 0xbf800000                                           // 0000000779B8: BF800000
	.long 0xbf800000                                           // 0000000779BC: BF800000
	.long 0xbf800000                                           // 0000000779C0: BF800000
	.long 0xbf800000                                           // 0000000779C4: BF800000
	.long 0xbf800000                                           // 0000000779C8: BF800000
	.long 0xbf800000                                           // 0000000779CC: BF800000
	.long 0xbf800000                                           // 0000000779D0: BF800000
	.long 0xbf800000                                           // 0000000779D4: BF800000
	.long 0xbf800000                                           // 0000000779D8: BF800000
	.long 0xbf800000                                           // 0000000779DC: BF800000
	.long 0xbf800000                                           // 0000000779E0: BF800000
	.long 0xbf800000                                           // 0000000779E4: BF800000
	.long 0xbf800000                                           // 0000000779E8: BF800000
	.long 0xbf800000                                           // 0000000779EC: BF800000
	.long 0xbf800000                                           // 0000000779F0: BF800000
	.long 0xbf800000                                           // 0000000779F4: BF800000
	.long 0xbf800000                                           // 0000000779F8: BF800000
	.long 0xbf800000                                           // 0000000779FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_size_get_global_size,@function
	.size	subtract_long_get_local_size_get_global_size, subtract_long_get_local_size_get_global_size_symend-subtract_long_get_local_size_get_global_size
subtract_long_get_local_size_get_global_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000077A00: F4080200 F8000010
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077A08: CA240080 020000FF 000003FF
	s_add_u32 s5, s0, 16                                       // 000000077A14: 80059000
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077A18: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077A20: D6100000 02292900
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077A28: DC520022 07000002
	s_waitcnt lgkmcnt(0)                                       // 000000077A30: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000077A34: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000077A38: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000077A3C: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 000000077A40: 840E8204
	s_mov_b32 s33, 0                                           // 000000077A44: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000077A48: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000077A4C: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000077A50: BF870009
	s_add_u32 s6, s5, s2                                       // 000000077A54: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000077A58: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000077A5C: BF0A0903
	s_clause 0x1                                               // 000000077A60: BF850001
	global_load_u16 v8, v2, s[6:7]                             // 000000077A64: DC4A0000 08060002
	global_load_u16 v9, v2, s[0:1] offset:38                   // 000000077A6C: DC4A0026 09000002
	s_cselect_b32 s2, 14, 20                                   // 000000077A74: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000077A78: BF8704D9
	s_add_u32 s2, s5, s2                                       // 000000077A7C: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000077A80: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000077A84: BF0A0A04
	global_load_u16 v10, v2, s[2:3]                            // 000000077A88: DC4A0000 0A020002
	s_cselect_b32 s4, 16, 22                                   // 000000077A90: 98049690
	s_add_u32 s2, s5, s4                                       // 000000077A94: 80020405
	s_addc_u32 s3, s11, 0                                      // 000000077A98: 8203800B
	global_load_u16 v11, v2, s[2:3]                            // 000000077A9C: DC4A0000 0B020002
	s_clause 0x2                                               // 000000077AA4: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000077AA8: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 000000077AB0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000077AB8: F4040000 F8000008
	s_lshl_b32 s3, s9, 1                                       // 000000077AC0: 84038109
	s_waitcnt lgkmcnt(0)                                       // 000000077AC4: BF89FC07
	v_add3_u32 v1, s4, s12, v1                                 // 000000077AC8: D6550001 04041804
	s_lshl_b32 s4, s10, 2                                      // 000000077AD0: 8404820A
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000077AD4: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077AD8: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v5                                 // 000000077AE0: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077AE8: D73C0005 00020283
	v_add3_u32 v1, s2, s14, v0                                 // 000000077AF0: D6550001 04001C02
	s_lshl_b32 s2, s8, 1                                       // 000000077AF8: 84028108
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000077AFC: BF8701A4
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000077B00: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000077B08: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000077B0C: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 000000077B14: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 000000077B1C: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000077B20: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000077B24: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000077B2C: 40020201
	s_waitcnt vmcnt(4)                                         // 000000077B30: BF8913F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 000000077B34: 32040E90
	v_and_b32_e32 v7, 0xffff, v7                               // 000000077B38: 360E0EFF 0000FFFF
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000077B40: BF870112
	v_add_nc_u32_e32 v2, s3, v2                                // 000000077B44: 4A040403
	v_add_nc_u32_e32 v7, s2, v7                                // 000000077B48: 4A0E0E02
	s_waitcnt vmcnt(3)                                         // 000000077B4C: BF890FF7
	v_and_b32_e32 v8, 0xffff, v8                               // 000000077B50: 361010FF 0000FFFF
	s_waitcnt vmcnt(2)                                         // 000000077B58: BF890BF7
	v_add_nc_u32_e32 v12, s4, v9                               // 000000077B5C: 4A181204
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000077B60: BF870142
	v_sub_co_u32 v7, s2, v8, v7                                // 000000077B64: D7010207 00020F08
	s_waitcnt vmcnt(1)                                         // 000000077B6C: BF8907F7
	v_and_b32_e32 v9, 0xffff, v10                              // 000000077B70: 361214FF 0000FFFF
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s2                     // 000000077B78: D5217C08 00090080
	v_sub_co_u32 v9, s2, v9, v2                                // 000000077B80: D7010209 00020509
	s_waitcnt vmcnt(0)                                         // 000000077B88: BF8903F7
	v_and_b32_e32 v11, 0xffff, v11                             // 000000077B8C: 361616FF 0000FFFF
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s2                    // 000000077B94: D5217C0A 00090080
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000077B9C: BF870092
	v_sub_co_u32 v11, s2, v11, v12                             // 000000077BA0: D701020B 0002190B
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s2                    // 000000077BA8: D5217C0C 00090080
	s_clause 0x2                                               // 000000077BB0: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000077BB4: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000077BBC: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000077BC4: DC6E0000 007C0B00
	s_nop 0                                                    // 000000077BCC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077BD0: BFB60003
	s_endpgm                                                   // 000000077BD4: BFB00000
subtract_long_get_local_size_get_global_size_symend:
	.long 0xbf800000                                           // 000000077BD8: BF800000
	.long 0xbf800000                                           // 000000077BDC: BF800000
	.long 0xbf800000                                           // 000000077BE0: BF800000
	.long 0xbf800000                                           // 000000077BE4: BF800000
	.long 0xbf800000                                           // 000000077BE8: BF800000
	.long 0xbf800000                                           // 000000077BEC: BF800000
	.long 0xbf800000                                           // 000000077BF0: BF800000
	.long 0xbf800000                                           // 000000077BF4: BF800000
	.long 0xbf800000                                           // 000000077BF8: BF800000
	.long 0xbf800000                                           // 000000077BFC: BF800000

	.p2align	8
	.type	subtract_long_get_global_id_get_global_size,@function
	.size	subtract_long_get_global_id_get_global_size, subtract_long_get_global_id_get_global_size_symend-subtract_long_get_global_id_get_global_size
subtract_long_get_global_id_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077C00: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077C0C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077C14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000077C1C: BEA10080
	s_clause 0x1                                               // 000000077C20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077C24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000077C2C: DC4A0026 08000002
	s_clause 0x3                                               // 000000077C34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000077C38: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000077C40: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000077C48: F4040180 F8000008
	s_load_b32 s0, s[0:1], 0x48                                // 000000077C50: F4000000 F8000048
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000077C58: D6560001 04050202
	s_lshl_b32 s1, s3, 1                                       // 000000077C60: 84018103
	s_lshl_b32 s2, s4, 2                                       // 000000077C64: 84028204
	s_delay_alu instid0(VALU_DEP_1)                            // 000000077C68: BF870001
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077C6C: D73C0003 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000077C74: BF89FC07
	s_lshl_b32 s3, s8, 1                                       // 000000077C78: 84038108
	v_add_nc_u32_e32 v9, s12, v1                               // 000000077C7C: 4A12020C
	v_add3_u32 v1, s14, s1, v5                                 // 000000077C80: D6550001 0414020E
	s_lshl_b32 s1, s9, 1                                       // 000000077C88: 84018109
	s_lshl_b32 s4, s10, 2                                      // 000000077C8C: 8404820A
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000077C90: D7006A03 00020606
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000077C98: BF870122
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077C9C: D73C0005 00020283
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000077CA4: 40080807
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 000000077CA8: D7006A05 00020A06
	s_delay_alu instid0(VALU_DEP_3)                            // 000000077CB0: BF870003
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 000000077CB4: 400C0C07
	s_waitcnt vmcnt(1)                                         // 000000077CB8: BF8907F7
	v_lshrrev_b32_e32 v10, 16, v7                              // 000000077CBC: 32140E90
	v_and_b32_e32 v7, 0xffff, v7                               // 000000077CC0: 360E0EFF 0000FFFF
	s_waitcnt vmcnt(0)                                         // 000000077CC8: BF8903F7
	v_add_nc_u32_e32 v13, s4, v8                               // 000000077CCC: 4A1A1004
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000077CD0: BF870193
	v_add_nc_u32_e32 v10, s1, v10                              // 000000077CD4: 4A141401
	v_add_nc_u32_e32 v8, s3, v7                                // 000000077CD8: 4A100E03
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 000000077CDC: BF8701A2
	v_sub_co_u32 v7, s1, v1, v10                               // 000000077CE0: D7010107 00021501
	v_add3_u32 v1, s0, s2, v0                                  // 000000077CE8: D6550001 04000400
	v_sub_co_u32 v9, s0, v9, v8                                // 000000077CF0: D7010009 00021109
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000077CF8: BF870191
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s0                    // 000000077CFC: D5217C0A 00010080
	v_lshlrev_b64 v[11:12], 3, v[1:2]                          // 000000077D04: D73C000B 00020283
	v_sub_co_u32 v0, s0, v1, v13                               // 000000077D0C: D7010000 00021B01
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s1                     // 000000077D14: D5217C08 00050080
	v_sub_co_ci_u32_e64 v1, null, 0, 0, s0                     // 000000077D1C: D5217C01 00010080
	s_delay_alu instid0(VALU_DEP_4)                            // 000000077D24: BF870004
	v_add_co_u32 v11, vcc_lo, s6, v11                          // 000000077D28: D7006A0B 00021606
	v_add_co_ci_u32_e32 v12, vcc_lo, s7, v12, vcc_lo           // 000000077D30: 40181807
	s_clause 0x2                                               // 000000077D34: BF850002
	global_store_b64 v[3:4], v[9:10], off                      // 000000077D38: DC6E0000 007C0903
	global_store_b64 v[5:6], v[7:8], off                       // 000000077D40: DC6E0000 007C0705
	global_store_b64 v[11:12], v[0:1], off                     // 000000077D48: DC6E0000 007C000B
	s_nop 0                                                    // 000000077D50: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077D54: BFB60003
	s_endpgm                                                   // 000000077D58: BFB00000
subtract_long_get_global_id_get_global_size_symend:
	.long 0xbf800000                                           // 000000077D5C: BF800000
	.long 0xbf800000                                           // 000000077D60: BF800000
	.long 0xbf800000                                           // 000000077D64: BF800000
	.long 0xbf800000                                           // 000000077D68: BF800000
	.long 0xbf800000                                           // 000000077D6C: BF800000
	.long 0xbf800000                                           // 000000077D70: BF800000
	.long 0xbf800000                                           // 000000077D74: BF800000
	.long 0xbf800000                                           // 000000077D78: BF800000
	.long 0xbf800000                                           // 000000077D7C: BF800000
	.long 0xbf800000                                           // 000000077D80: BF800000
	.long 0xbf800000                                           // 000000077D84: BF800000
	.long 0xbf800000                                           // 000000077D88: BF800000
	.long 0xbf800000                                           // 000000077D8C: BF800000
	.long 0xbf800000                                           // 000000077D90: BF800000
	.long 0xbf800000                                           // 000000077D94: BF800000
	.long 0xbf800000                                           // 000000077D98: BF800000
	.long 0xbf800000                                           // 000000077D9C: BF800000
	.long 0xbf800000                                           // 000000077DA0: BF800000
	.long 0xbf800000                                           // 000000077DA4: BF800000
	.long 0xbf800000                                           // 000000077DA8: BF800000
	.long 0xbf800000                                           // 000000077DAC: BF800000
	.long 0xbf800000                                           // 000000077DB0: BF800000
	.long 0xbf800000                                           // 000000077DB4: BF800000
	.long 0xbf800000                                           // 000000077DB8: BF800000
	.long 0xbf800000                                           // 000000077DBC: BF800000
	.long 0xbf800000                                           // 000000077DC0: BF800000
	.long 0xbf800000                                           // 000000077DC4: BF800000
	.long 0xbf800000                                           // 000000077DC8: BF800000
	.long 0xbf800000                                           // 000000077DCC: BF800000
	.long 0xbf800000                                           // 000000077DD0: BF800000
	.long 0xbf800000                                           // 000000077DD4: BF800000
	.long 0xbf800000                                           // 000000077DD8: BF800000
	.long 0xbf800000                                           // 000000077DDC: BF800000
	.long 0xbf800000                                           // 000000077DE0: BF800000
	.long 0xbf800000                                           // 000000077DE4: BF800000
	.long 0xbf800000                                           // 000000077DE8: BF800000
	.long 0xbf800000                                           // 000000077DEC: BF800000
	.long 0xbf800000                                           // 000000077DF0: BF800000
	.long 0xbf800000                                           // 000000077DF4: BF800000
	.long 0xbf800000                                           // 000000077DF8: BF800000
	.long 0xbf800000                                           // 000000077DFC: BF800000

	.p2align	8
	.type	subtract_long_get_global_size_get_global_size,@function
	.size	subtract_long_get_global_size_get_global_size, subtract_long_get_global_size_get_global_size_symend-subtract_long_get_global_size_get_global_size
subtract_long_get_global_size_get_global_size:
	s_clause 0x2                                               // 000000077E00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077E04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000077E0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000077E14: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077E1C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000077E28: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077E2C: D6100005 02291500
	s_lshl_b32 s3, s3, 1                                       // 000000077E34: 84038103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077E38: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000077E40: 84048104
	s_mov_b32 s33, 0                                           // 000000077E44: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000077E48: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000077E4C: D6550001 04040408
	s_mov_b32 s2, 0                                            // 000000077E54: BE820080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 000000077E58: BF8704B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077E5C: D73C0003 00020283
	v_add3_u32 v1, s10, s3, v5                                 // 000000077E64: D6550001 0414060A
	s_mov_b32 s3, s2                                           // 000000077E6C: BE830002
	v_dual_mov_b32 v6, s3 :: v_dual_mov_b32 v5, s2             // 000000077E70: CA100003 06040002
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000077E78: BF8701C2
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 000000077E7C: D73C0007 00020283
	v_add3_u32 v1, s5, s4, v0                                  // 000000077E84: D6550001 04000805
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 000000077E8C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000077E94: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000077E98: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 000000077EA0: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 000000077EA8: 40101001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000077EAC: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 000000077EB0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 000000077EB8: 40020201
	s_clause 0x2                                               // 000000077EBC: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 000000077EC0: DC6E0000 007C0503
	global_store_b64 v[7:8], v[5:6], off                       // 000000077EC8: DC6E0000 007C0507
	global_store_b64 v[0:1], v[5:6], off                       // 000000077ED0: DC6E0000 007C0500
	s_nop 0                                                    // 000000077ED8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000077EDC: BFB60003
	s_endpgm                                                   // 000000077EE0: BFB00000
subtract_long_get_global_size_get_global_size_symend:
	.long 0xbf800000                                           // 000000077EE4: BF800000
	.long 0xbf800000                                           // 000000077EE8: BF800000
	.long 0xbf800000                                           // 000000077EEC: BF800000
	.long 0xbf800000                                           // 000000077EF0: BF800000
	.long 0xbf800000                                           // 000000077EF4: BF800000
	.long 0xbf800000                                           // 000000077EF8: BF800000
	.long 0xbf800000                                           // 000000077EFC: BF800000

	.p2align	8
	.type	subtract_long_get_num_groups_get_global_size,@function
	.size	subtract_long_get_num_groups_get_global_size, subtract_long_get_num_groups_get_global_size_symend-subtract_long_get_num_groups_get_global_size
subtract_long_get_num_groups_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000077F00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000077F0C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000077F14: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000077F18: D6100005 02291500
	s_clause 0x1                                               // 000000077F20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000077F24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000077F2C: DC4A0026 08000002
	s_clause 0x2                                               // 000000077F34: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000077F38: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000077F40: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000077F48: F4080300 F8000010
	s_lshl_b32 s0, s3, 1                                       // 000000077F50: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000077F54: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000077F5C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000077F60: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000077F64: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000077F6C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000077F70: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000077F78: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000077F80: 84008204
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000077F84: D73C0005 00020283
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000077F8C: BF870213
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000077F90: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000077F98: 40080807
	v_add3_u32 v1, s5, s0, v0                                  // 000000077F9C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000077FA4: BF870094
	v_add_co_u32 v5, s1, s6, v5                                // 000000077FA8: D7000105 00020A06
	v_add_co_ci_u32_e64 v6, s1, s7, v6, s1                     // 000000077FB0: D5200106 00060C07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000077FB8: BF8701D3
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000077FBC: D73C0000 00020283
	s_waitcnt vmcnt(1)                                         // 000000077FC4: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v7                               // 000000077FC8: 32120E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000077FCC: 7C7A0E80
	v_and_b32_e32 v2, 0xffff, v7                               // 000000077FD0: 36040EFF 0000FFFF
	v_cmp_ne_u16_e64 s0, 0, v9.l                               // 000000077FD8: D43D0000 00021280
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077FE0: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000077FE4: BF8903F7
	v_cmp_ne_u32_e32 vcc_lo, 0, v8                             // 000000077FE8: 7C9A1080
	s_addc_u32 s1, s12, 0                                      // 000000077FEC: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 000000077FF0: BF078000
	s_addc_u32 s0, s13, 0                                      // 000000077FF4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000077FF8: BF07806A
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000077FFC: D7006A00 00020006
	s_addc_u32 s2, s14, 0                                      // 000000078004: 8202800E
	s_lshl_b32 s3, s12, 1                                      // 000000078008: 8403810C
	s_lshl_b32 s4, s13, 1                                      // 00000007800C: 8404810D
	v_add_nc_u32_e32 v2, s3, v2                                // 000000078010: 4A040403
	s_lshl_b32 s3, s14, 2                                      // 000000078014: 8403820E
	v_add_nc_u32_e32 v9, s4, v9                                // 000000078018: 4A121204
	v_add_nc_u32_e32 v11, s3, v8                               // 00000007801C: 4A161003
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000078020: 40020207
	v_sub_co_u32 v7, s1, s1, v2                                // 000000078024: D7010107 00020401
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 00000007802C: BF8700C4
	v_sub_co_u32 v9, s0, s0, v9                                // 000000078030: D7010009 00021200
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s1                     // 000000078038: D5217C08 00050080
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s0                    // 000000078040: D5217C0A 00010080
	v_sub_co_u32 v11, s0, s2, v11                              // 000000078048: D701000B 00021602
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s0                    // 000000078050: D5217C0C 00010080
	s_clause 0x2                                               // 000000078058: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 00000007805C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000078064: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 00000007806C: DC6E0000 007C0B00
	s_nop 0                                                    // 000000078074: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078078: BFB60003
	s_endpgm                                                   // 00000007807C: BFB00000
subtract_long_get_num_groups_get_global_size_symend:
	.long 0xbf800000                                           // 000000078080: BF800000
	.long 0xbf800000                                           // 000000078084: BF800000
	.long 0xbf800000                                           // 000000078088: BF800000
	.long 0xbf800000                                           // 00000007808C: BF800000
	.long 0xbf800000                                           // 000000078090: BF800000
	.long 0xbf800000                                           // 000000078094: BF800000
	.long 0xbf800000                                           // 000000078098: BF800000
	.long 0xbf800000                                           // 00000007809C: BF800000
	.long 0xbf800000                                           // 0000000780A0: BF800000
	.long 0xbf800000                                           // 0000000780A4: BF800000
	.long 0xbf800000                                           // 0000000780A8: BF800000
	.long 0xbf800000                                           // 0000000780AC: BF800000
	.long 0xbf800000                                           // 0000000780B0: BF800000
	.long 0xbf800000                                           // 0000000780B4: BF800000
	.long 0xbf800000                                           // 0000000780B8: BF800000
	.long 0xbf800000                                           // 0000000780BC: BF800000
	.long 0xbf800000                                           // 0000000780C0: BF800000
	.long 0xbf800000                                           // 0000000780C4: BF800000
	.long 0xbf800000                                           // 0000000780C8: BF800000
	.long 0xbf800000                                           // 0000000780CC: BF800000
	.long 0xbf800000                                           // 0000000780D0: BF800000
	.long 0xbf800000                                           // 0000000780D4: BF800000
	.long 0xbf800000                                           // 0000000780D8: BF800000
	.long 0xbf800000                                           // 0000000780DC: BF800000
	.long 0xbf800000                                           // 0000000780E0: BF800000
	.long 0xbf800000                                           // 0000000780E4: BF800000
	.long 0xbf800000                                           // 0000000780E8: BF800000
	.long 0xbf800000                                           // 0000000780EC: BF800000
	.long 0xbf800000                                           // 0000000780F0: BF800000
	.long 0xbf800000                                           // 0000000780F4: BF800000
	.long 0xbf800000                                           // 0000000780F8: BF800000
	.long 0xbf800000                                           // 0000000780FC: BF800000

	.p2align	8
	.type	subtract_long_get_work_dim_get_global_size,@function
	.size	subtract_long_get_work_dim_get_global_size, subtract_long_get_work_dim_get_global_size_symend-subtract_long_get_work_dim_get_global_size
subtract_long_get_work_dim_get_global_size:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000078100: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000007810C: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000078110: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078118: D6100000 02292900
	s_clause 0x1                                               // 000000078120: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000078124: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007812C: DC4A0026 08000002
	s_clause 0x4                                               // 000000078134: BF850004
	s_load_b32 s5, s[0:1], 0x50                                // 000000078138: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078140: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000078148: F4080300 F8000010
	s_load_b32 s6, s[0:1], 0x48                                // 000000078150: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000078158: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 000000078160: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000078164: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000078168: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 000000078170: 84028103
	s_lshl_b32 s3, s4, 2                                       // 000000078174: 84038204
	s_lshl_b32 s4, s12, 1                                      // 000000078178: 8404810C
	s_lshl_b32 s7, s14, 2                                      // 00000007817C: 8407820E
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000078180: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v5                                 // 000000078188: D6550001 0414040A
	s_and_b32 s2, s5, 0xffff                                   // 000000078190: 8B02FF05 0000FFFF
	s_lshl_b32 s5, s13, 1                                      // 000000078198: 8405810D
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000007819C: BF8701C1
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 0000000781A0: D73C0005 00020283
	v_add3_u32 v1, s6, s3, v0                                  // 0000000781A8: D6550001 04000606
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000781B0: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000781B8: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000781BC: D73C0000 00020283
	v_add_co_u32 v5, vcc_lo, s0, v5                            // 0000000781C4: D7006A05 00020A00
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo             // 0000000781CC: 400C0C01
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000781D0: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000781D4: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000781DC: 40020201
	s_waitcnt vmcnt(1)                                         // 0000000781E0: BF8907F7
	v_and_b32_e32 v2, 0xffff, v7                               // 0000000781E4: 36040EFF 0000FFFF
	v_lshrrev_b32_e32 v7, 16, v7                               // 0000000781EC: 320E0E90
	s_waitcnt vmcnt(0)                                         // 0000000781F0: BF8903F7
	v_add_nc_u32_e32 v11, s7, v8                               // 0000000781F4: 4A161007
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000781F8: BF870193
	v_add_nc_u32_e32 v2, s4, v2                                // 0000000781FC: 4A040404
	v_add_nc_u32_e32 v9, s5, v7                                // 000000078200: 4A120E05
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078204: BF870092
	v_sub_co_u32 v7, s0, s2, v2                                // 000000078208: D7010007 00020402
	v_sub_co_ci_u32_e64 v8, null, 0, 0, s0                     // 000000078210: D5217C08 00010080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078218: BF870093
	v_sub_co_u32 v9, s0, s2, v9                                // 00000007821C: D7010009 00021202
	v_sub_co_ci_u32_e64 v10, null, 0, 0, s0                    // 000000078224: D5217C0A 00010080
	v_sub_co_u32 v11, s0, s2, v11                              // 00000007822C: D701000B 00021602
	s_delay_alu instid0(VALU_DEP_1)                            // 000000078234: BF870001
	v_sub_co_ci_u32_e64 v12, null, 0, 0, s0                    // 000000078238: D5217C0C 00010080
	s_clause 0x2                                               // 000000078240: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000078244: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 00000007824C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000078254: DC6E0000 007C0B00
	s_nop 0                                                    // 00000007825C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078260: BFB60003
	s_endpgm                                                   // 000000078264: BFB00000
subtract_long_get_work_dim_get_global_size_symend:
	.long 0xbf800000                                           // 000000078268: BF800000
	.long 0xbf800000                                           // 00000007826C: BF800000
	.long 0xbf800000                                           // 000000078270: BF800000
	.long 0xbf800000                                           // 000000078274: BF800000
	.long 0xbf800000                                           // 000000078278: BF800000
	.long 0xbf800000                                           // 00000007827C: BF800000
	.long 0xbf800000                                           // 000000078280: BF800000
	.long 0xbf800000                                           // 000000078284: BF800000
	.long 0xbf800000                                           // 000000078288: BF800000
	.long 0xbf800000                                           // 00000007828C: BF800000
	.long 0xbf800000                                           // 000000078290: BF800000
	.long 0xbf800000                                           // 000000078294: BF800000
	.long 0xbf800000                                           // 000000078298: BF800000
	.long 0xbf800000                                           // 00000007829C: BF800000
	.long 0xbf800000                                           // 0000000782A0: BF800000
	.long 0xbf800000                                           // 0000000782A4: BF800000
	.long 0xbf800000                                           // 0000000782A8: BF800000
	.long 0xbf800000                                           // 0000000782AC: BF800000
	.long 0xbf800000                                           // 0000000782B0: BF800000
	.long 0xbf800000                                           // 0000000782B4: BF800000
	.long 0xbf800000                                           // 0000000782B8: BF800000
	.long 0xbf800000                                           // 0000000782BC: BF800000
	.long 0xbf800000                                           // 0000000782C0: BF800000
	.long 0xbf800000                                           // 0000000782C4: BF800000
	.long 0xbf800000                                           // 0000000782C8: BF800000
	.long 0xbf800000                                           // 0000000782CC: BF800000
	.long 0xbf800000                                           // 0000000782D0: BF800000
	.long 0xbf800000                                           // 0000000782D4: BF800000
	.long 0xbf800000                                           // 0000000782D8: BF800000
	.long 0xbf800000                                           // 0000000782DC: BF800000
	.long 0xbf800000                                           // 0000000782E0: BF800000
	.long 0xbf800000                                           // 0000000782E4: BF800000
	.long 0xbf800000                                           // 0000000782E8: BF800000
	.long 0xbf800000                                           // 0000000782EC: BF800000
	.long 0xbf800000                                           // 0000000782F0: BF800000
	.long 0xbf800000                                           // 0000000782F4: BF800000
	.long 0xbf800000                                           // 0000000782F8: BF800000
	.long 0xbf800000                                           // 0000000782FC: BF800000

	.p2align	8
	.type	subtract_long_x_get_num_groups,@function
	.size	subtract_long_x_get_num_groups, subtract_long_x_get_num_groups_symend-subtract_long_x_get_num_groups
subtract_long_x_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000078300: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], null                            // 00000007830C: F4040180 F8000000
	s_lshl_b32 s2, s2, 4                                       // 000000078314: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000078318: D6100005 02291500
	s_clause 0x1                                               // 000000078320: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000078324: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007832C: DC4A0026 08000002
	s_clause 0x2                                               // 000000078334: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078338: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 000000078340: F4000140 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000078348: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 000000078350: BF89FC07
	s_load_b32 s9, s[0:1], 0x48                                // 000000078354: F4000240 F8000048
	s_lshl_b32 s0, s3, 1                                       // 00000007835C: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078360: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000078368: BEA10080
	v_add3_u32 v1, s8, s2, v1                                  // 00000007836C: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000078374: BF8700C1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000078378: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000078380: D6550001 0414000A
	s_lshl_b32 s0, s4, 1                                       // 000000078388: 84008104
	s_ashr_i32 s4, s5, 31                                      // 00000007838C: 86049F05
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000078390: D73C0005 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000078398: BF89FC07
	v_add3_u32 v1, s9, s0, v0                                  // 00000007839C: D6550001 04000009
	v_add_co_u32 v3, s0, s6, v3                                // 0000000783A4: D7000003 00020606
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_1)// 0000000783AC: BF8700D1
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 0000000783B0: D5200004 00020807
	s_waitcnt vmcnt(1)                                         // 0000000783B8: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000783BC: 7C7A0E80
	v_lshrrev_b32_e32 v0, 16, v7                               // 0000000783C0: 32000E90
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000783C4: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v0.l                           // 0000000783C8: 7C7A0080
	s_addc_u32 s0, s12, 0                                      // 0000000783CC: 8200800C
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000783D0: D73C0000 00020283
	s_sub_u32 s2, s5, s0                                       // 0000000783D8: 80820005
	s_subb_u32 s3, s4, 0                                       // 0000000783DC: 82838004
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000783E0: BF07806A
	s_waitcnt vmcnt(0)                                         // 0000000783E4: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 0000000783E8: 7C7A1080
	v_add_co_u32 v5, s0, s6, v5                                // 0000000783EC: D7000005 00020A06
	s_addc_u32 s1, s13, 0                                      // 0000000783F4: 8201800D
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000783F8: D5200006 00020C07
	s_sub_u32 s0, s5, s1                                       // 000000078400: 80800105
	s_subb_u32 s1, s4, 0                                       // 000000078404: 82818004
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000078408: BF07806A
	v_dual_mov_b32 v8, s3 :: v_dual_mov_b32 v7, s2             // 00000007840C: CA100003 08060002
	s_addc_u32 s2, s14, 0                                      // 000000078414: 8202800E
	v_dual_mov_b32 v10, s1 :: v_dual_mov_b32 v9, s0            // 000000078418: CA100001 0A080000
	s_sub_u32 s0, s5, s2                                       // 000000078420: 80800205
	s_subb_u32 s1, s4, 0                                       // 000000078424: 82818004
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000078428: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000078430: 40020207
	v_dual_mov_b32 v12, s1 :: v_dual_mov_b32 v11, s0           // 000000078434: CA100001 0C0A0000
	s_clause 0x2                                               // 00000007843C: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000078440: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000078448: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000078450: DC6E0000 007C0B00
	s_nop 0                                                    // 000000078458: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007845C: BFB60003
	s_endpgm                                                   // 000000078460: BFB00000
subtract_long_x_get_num_groups_symend:
	.long 0xbf800000                                           // 000000078464: BF800000
	.long 0xbf800000                                           // 000000078468: BF800000
	.long 0xbf800000                                           // 00000007846C: BF800000
	.long 0xbf800000                                           // 000000078470: BF800000
	.long 0xbf800000                                           // 000000078474: BF800000
	.long 0xbf800000                                           // 000000078478: BF800000
	.long 0xbf800000                                           // 00000007847C: BF800000
	.long 0xbf800000                                           // 000000078480: BF800000
	.long 0xbf800000                                           // 000000078484: BF800000
	.long 0xbf800000                                           // 000000078488: BF800000
	.long 0xbf800000                                           // 00000007848C: BF800000
	.long 0xbf800000                                           // 000000078490: BF800000
	.long 0xbf800000                                           // 000000078494: BF800000
	.long 0xbf800000                                           // 000000078498: BF800000
	.long 0xbf800000                                           // 00000007849C: BF800000
	.long 0xbf800000                                           // 0000000784A0: BF800000
	.long 0xbf800000                                           // 0000000784A4: BF800000
	.long 0xbf800000                                           // 0000000784A8: BF800000
	.long 0xbf800000                                           // 0000000784AC: BF800000
	.long 0xbf800000                                           // 0000000784B0: BF800000
	.long 0xbf800000                                           // 0000000784B4: BF800000
	.long 0xbf800000                                           // 0000000784B8: BF800000
	.long 0xbf800000                                           // 0000000784BC: BF800000
	.long 0xbf800000                                           // 0000000784C0: BF800000
	.long 0xbf800000                                           // 0000000784C4: BF800000
	.long 0xbf800000                                           // 0000000784C8: BF800000
	.long 0xbf800000                                           // 0000000784CC: BF800000
	.long 0xbf800000                                           // 0000000784D0: BF800000
	.long 0xbf800000                                           // 0000000784D4: BF800000
	.long 0xbf800000                                           // 0000000784D8: BF800000
	.long 0xbf800000                                           // 0000000784DC: BF800000
	.long 0xbf800000                                           // 0000000784E0: BF800000
	.long 0xbf800000                                           // 0000000784E4: BF800000
	.long 0xbf800000                                           // 0000000784E8: BF800000
	.long 0xbf800000                                           // 0000000784EC: BF800000
	.long 0xbf800000                                           // 0000000784F0: BF800000
	.long 0xbf800000                                           // 0000000784F4: BF800000
	.long 0xbf800000                                           // 0000000784F8: BF800000
	.long 0xbf800000                                           // 0000000784FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_offset_get_num_groups,@function
	.size	subtract_long_get_global_offset_get_num_groups, subtract_long_get_global_offset_get_num_groups_symend-subtract_long_get_global_offset_get_num_groups
subtract_long_get_global_offset_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000078500: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007850C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000078514: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000078518: D6100005 02291500
	s_clause 0x1                                               // 000000078520: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000078524: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007852C: DC4A0026 08000002
	s_clause 0x2                                               // 000000078534: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078538: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000078540: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000078548: F4080300 F8000010
	s_lshl_b32 s0, s3, 4                                       // 000000078550: 84008403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078554: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007855C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000078560: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 000000078564: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007856C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000078570: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000078578: D6550001 0414000A
	s_lshl_b32 s0, s4, 1                                       // 000000078580: 84008104
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000078584: D73C0005 00020283
	v_add3_u32 v1, s5, s0, v0                                  // 00000007858C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078594: BF870094
	v_add_co_u32 v3, s0, s6, v3                                // 000000078598: D7000003 00020606
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 0000000785A0: D5200004 00020807
	s_waitcnt vmcnt(1)                                         // 0000000785A8: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000785AC: 7C7A0E80
	v_lshrrev_b32_e32 v0, 16, v7                               // 0000000785B0: 32000E90
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000785B4: BF07806A
	s_delay_alu instid0(VALU_DEP_1)                            // 0000000785B8: BF870001
	v_cmp_ne_u16_e32 vcc_lo, 0, v0.l                           // 0000000785BC: 7C7A0080
	s_addc_u32 s0, s12, 0                                      // 0000000785C0: 8200800C
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000785C4: D73C0000 00020283
	s_sub_u32 s2, s8, s0                                       // 0000000785CC: 80820008
	s_subb_u32 s3, 0, 0                                        // 0000000785D0: 82838080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000785D4: BF07806A
	s_waitcnt vmcnt(0)                                         // 0000000785D8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 0000000785DC: 7C7A1080
	v_add_co_u32 v5, s0, s6, v5                                // 0000000785E0: D7000005 00020A06
	s_addc_u32 s1, s13, 0                                      // 0000000785E8: 8201800D
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000785EC: D5200006 00020C07
	s_sub_u32 s0, s10, s1                                      // 0000000785F4: 8080010A
	s_subb_u32 s1, 0, 0                                        // 0000000785F8: 82818080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000785FC: BF07806A
	v_dual_mov_b32 v8, s3 :: v_dual_mov_b32 v7, s2             // 000000078600: CA100003 08060002
	s_addc_u32 s2, s14, 0                                      // 000000078608: 8202800E
	v_dual_mov_b32 v10, s1 :: v_dual_mov_b32 v9, s0            // 00000007860C: CA100001 0A080000
	s_sub_u32 s0, s5, s2                                       // 000000078614: 80800205
	s_subb_u32 s1, 0, 0                                        // 000000078618: 82818080
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000007861C: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000078624: 40020207
	v_dual_mov_b32 v12, s1 :: v_dual_mov_b32 v11, s0           // 000000078628: CA100001 0C0A0000
	s_clause 0x2                                               // 000000078630: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000078634: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 00000007863C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000078644: DC6E0000 007C0B00
	s_nop 0                                                    // 00000007864C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078650: BFB60003
	s_endpgm                                                   // 000000078654: BFB00000
subtract_long_get_global_offset_get_num_groups_symend:
	.long 0xbf800000                                           // 000000078658: BF800000
	.long 0xbf800000                                           // 00000007865C: BF800000
	.long 0xbf800000                                           // 000000078660: BF800000
	.long 0xbf800000                                           // 000000078664: BF800000
	.long 0xbf800000                                           // 000000078668: BF800000
	.long 0xbf800000                                           // 00000007866C: BF800000
	.long 0xbf800000                                           // 000000078670: BF800000
	.long 0xbf800000                                           // 000000078674: BF800000
	.long 0xbf800000                                           // 000000078678: BF800000
	.long 0xbf800000                                           // 00000007867C: BF800000
	.long 0xbf800000                                           // 000000078680: BF800000
	.long 0xbf800000                                           // 000000078684: BF800000
	.long 0xbf800000                                           // 000000078688: BF800000
	.long 0xbf800000                                           // 00000007868C: BF800000
	.long 0xbf800000                                           // 000000078690: BF800000
	.long 0xbf800000                                           // 000000078694: BF800000
	.long 0xbf800000                                           // 000000078698: BF800000
	.long 0xbf800000                                           // 00000007869C: BF800000
	.long 0xbf800000                                           // 0000000786A0: BF800000
	.long 0xbf800000                                           // 0000000786A4: BF800000
	.long 0xbf800000                                           // 0000000786A8: BF800000
	.long 0xbf800000                                           // 0000000786AC: BF800000
	.long 0xbf800000                                           // 0000000786B0: BF800000
	.long 0xbf800000                                           // 0000000786B4: BF800000
	.long 0xbf800000                                           // 0000000786B8: BF800000
	.long 0xbf800000                                           // 0000000786BC: BF800000
	.long 0xbf800000                                           // 0000000786C0: BF800000
	.long 0xbf800000                                           // 0000000786C4: BF800000
	.long 0xbf800000                                           // 0000000786C8: BF800000
	.long 0xbf800000                                           // 0000000786CC: BF800000
	.long 0xbf800000                                           // 0000000786D0: BF800000
	.long 0xbf800000                                           // 0000000786D4: BF800000
	.long 0xbf800000                                           // 0000000786D8: BF800000
	.long 0xbf800000                                           // 0000000786DC: BF800000
	.long 0xbf800000                                           // 0000000786E0: BF800000
	.long 0xbf800000                                           // 0000000786E4: BF800000
	.long 0xbf800000                                           // 0000000786E8: BF800000
	.long 0xbf800000                                           // 0000000786EC: BF800000
	.long 0xbf800000                                           // 0000000786F0: BF800000
	.long 0xbf800000                                           // 0000000786F4: BF800000
	.long 0xbf800000                                           // 0000000786F8: BF800000
	.long 0xbf800000                                           // 0000000786FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_id_get_num_groups,@function
	.size	subtract_long_get_local_id_get_num_groups, subtract_long_get_local_id_get_num_groups_symend-subtract_long_get_local_id_get_num_groups
subtract_long_get_local_id_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v9, 0x3ff, v0       // 000000078700: CA240080 020800FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007870C: F4040180 F8000008
	s_lshl_b32 s2, s2, 3                                       // 000000078714: 84028302
	v_bfe_u32 v10, v0, 10, 10                                  // 000000078718: D610000A 02291500
	s_clause 0x1                                               // 000000078720: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000078724: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007872C: DC4A0026 08000002
	s_clause 0x2                                               // 000000078734: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078738: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000078740: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000078748: F4080300 F8000010
	s_lshl_b32 s0, s3, 2                                       // 000000078750: 84008203
	v_bfe_u32 v11, v0, 20, 10                                  // 000000078754: D610000B 02292900
	s_mov_b32 s33, 0                                           // 00000007875C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000078760: BF89FC07
	v_add3_u32 v1, s8, s2, v9                                  // 000000078764: D6550001 04240408
	s_mov_b32 s2, 0                                            // 00000007876C: BE820080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000078770: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000078774: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v10                                // 00000007877C: D6550001 0428000A
	s_lshl_b32 s0, s4, 1                                       // 000000078784: 84008104
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000078788: D73C0005 00020283
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000078790: BF870213
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000078794: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 00000007879C: 40080807
	v_add3_u32 v1, s5, s0, v11                                 // 0000000787A0: D6550001 042C0005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 0000000787A8: BF870094
	v_add_co_u32 v5, s1, s6, v5                                // 0000000787AC: D7000105 00020A06
	v_add_co_ci_u32_e64 v6, s1, s7, v6, s1                     // 0000000787B4: D5200106 00060C07
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 0000000787BC: BF870143
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000787C0: D73C0000 00020283
	s_waitcnt vmcnt(1)                                         // 0000000787C8: BF8907F7
	v_lshrrev_b32_e32 v12, 16, v7                              // 0000000787CC: 32180E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000787D0: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v12.l                              // 0000000787D4: D43D0000 00021880
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000787DC: BF07806A
	s_waitcnt vmcnt(0)                                         // 0000000787E0: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 0000000787E4: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 0000000787E8: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 0000000787EC: BF078000
	v_sub_co_u32 v7, s0, v9, s1                                // 0000000787F0: D7010007 00000309
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 0000000787F8: BF8700C1
	v_sub_co_ci_u32_e64 v8, null, s2, 0, s0                    // 0000000787FC: D5217C08 00010002
	s_addc_u32 s0, s13, 0                                      // 000000078804: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000078808: BF07806A
	v_sub_co_u32 v9, s0, v10, s0                               // 00000007880C: D7010009 0000010A
	v_sub_co_ci_u32_e64 v10, null, s2, 0, s0                   // 000000078814: D5217C0A 00010002
	s_addc_u32 s0, s14, 0                                      // 00000007881C: 8200800E
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000078820: D7006A00 00020006
	v_sub_co_u32 v11, s0, v11, s0                              // 000000078828: D701000B 0000010B
	s_delay_alu instid0(VALU_DEP_1)                            // 000000078830: BF870001
	v_sub_co_ci_u32_e64 v12, null, s2, 0, s0                   // 000000078834: D5217C0C 00010002
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 00000007883C: 40020207
	s_clause 0x2                                               // 000000078840: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000078844: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 00000007884C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000078854: DC6E0000 007C0B00
	s_nop 0                                                    // 00000007885C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078860: BFB60003
	s_endpgm                                                   // 000000078864: BFB00000
subtract_long_get_local_id_get_num_groups_symend:
	.long 0xbf800000                                           // 000000078868: BF800000
	.long 0xbf800000                                           // 00000007886C: BF800000
	.long 0xbf800000                                           // 000000078870: BF800000
	.long 0xbf800000                                           // 000000078874: BF800000
	.long 0xbf800000                                           // 000000078878: BF800000
	.long 0xbf800000                                           // 00000007887C: BF800000
	.long 0xbf800000                                           // 000000078880: BF800000
	.long 0xbf800000                                           // 000000078884: BF800000
	.long 0xbf800000                                           // 000000078888: BF800000
	.long 0xbf800000                                           // 00000007888C: BF800000
	.long 0xbf800000                                           // 000000078890: BF800000
	.long 0xbf800000                                           // 000000078894: BF800000
	.long 0xbf800000                                           // 000000078898: BF800000
	.long 0xbf800000                                           // 00000007889C: BF800000
	.long 0xbf800000                                           // 0000000788A0: BF800000
	.long 0xbf800000                                           // 0000000788A4: BF800000
	.long 0xbf800000                                           // 0000000788A8: BF800000
	.long 0xbf800000                                           // 0000000788AC: BF800000
	.long 0xbf800000                                           // 0000000788B0: BF800000
	.long 0xbf800000                                           // 0000000788B4: BF800000
	.long 0xbf800000                                           // 0000000788B8: BF800000
	.long 0xbf800000                                           // 0000000788BC: BF800000
	.long 0xbf800000                                           // 0000000788C0: BF800000
	.long 0xbf800000                                           // 0000000788C4: BF800000
	.long 0xbf800000                                           // 0000000788C8: BF800000
	.long 0xbf800000                                           // 0000000788CC: BF800000
	.long 0xbf800000                                           // 0000000788D0: BF800000
	.long 0xbf800000                                           // 0000000788D4: BF800000
	.long 0xbf800000                                           // 0000000788D8: BF800000
	.long 0xbf800000                                           // 0000000788DC: BF800000
	.long 0xbf800000                                           // 0000000788E0: BF800000
	.long 0xbf800000                                           // 0000000788E4: BF800000
	.long 0xbf800000                                           // 0000000788E8: BF800000
	.long 0xbf800000                                           // 0000000788EC: BF800000
	.long 0xbf800000                                           // 0000000788F0: BF800000
	.long 0xbf800000                                           // 0000000788F4: BF800000
	.long 0xbf800000                                           // 0000000788F8: BF800000
	.long 0xbf800000                                           // 0000000788FC: BF800000

	.p2align	8
	.type	subtract_long_get_group_id_get_num_groups,@function
	.size	subtract_long_get_group_id_get_num_groups, subtract_long_get_group_id_get_num_groups_symend-subtract_long_get_group_id_get_num_groups
subtract_long_get_group_id_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000078900: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007890C: F4040180 F8000008
	v_bfe_u32 v5, v0, 10, 10                                   // 000000078914: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007891C: D6100000 02292900
	s_clause 0x1                                               // 000000078924: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000078928: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000078930: DC4A0026 08000002
	s_clause 0x2                                               // 000000078938: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007893C: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000078944: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007894C: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 000000078954: BF89FC07
	s_lshl_b32 s9, s2, 1                                       // 000000078958: 84098102
	s_lshl_b32 s0, s3, 4                                       // 00000007895C: 84008403
	s_mov_b32 s33, 0                                           // 000000078960: BEA10080
	v_add3_u32 v1, s8, s9, v1                                  // 000000078964: D6550001 04041208
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007896C: BF8700B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000078970: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000078978: D6550001 0414000A
	s_lshl_b32 s0, s4, 1                                       // 000000078980: 84008104
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000078984: D73C0005 00020283
	v_add3_u32 v1, s5, s0, v0                                  // 00000007898C: D6550001 04000005
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078994: BF870094
	v_add_co_u32 v3, s0, s6, v3                                // 000000078998: D7000003 00020606
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 0000000789A0: D5200004 00020807
	s_waitcnt vmcnt(1)                                         // 0000000789A8: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000789AC: 7C7A0E80
	v_lshrrev_b32_e32 v0, 16, v7                               // 0000000789B0: 32000E90
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000789B4: BF07806A
	s_delay_alu instid0(VALU_DEP_1)                            // 0000000789B8: BF870001
	v_cmp_ne_u16_e32 vcc_lo, 0, v0.l                           // 0000000789BC: 7C7A0080
	s_addc_u32 s0, s12, 0                                      // 0000000789C0: 8200800C
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000789C4: D73C0000 00020283
	s_sub_u32 s8, s2, s0                                       // 0000000789CC: 80880002
	s_subb_u32 s9, 0, 0                                        // 0000000789D0: 82898080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000789D4: BF07806A
	s_waitcnt vmcnt(0)                                         // 0000000789D8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 0000000789DC: 7C7A1080
	v_add_co_u32 v5, s0, s6, v5                                // 0000000789E0: D7000005 00020A06
	s_addc_u32 s1, s13, 0                                      // 0000000789E8: 8201800D
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000789EC: D5200006 00020C07
	s_sub_u32 s0, s3, s1                                       // 0000000789F4: 80800103
	s_subb_u32 s1, 0, 0                                        // 0000000789F8: 82818080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000789FC: BF07806A
	v_dual_mov_b32 v10, s1 :: v_dual_mov_b32 v9, s0            // 000000078A00: CA100001 0A080000
	s_addc_u32 s2, s14, 0                                      // 000000078A08: 8202800E
	v_dual_mov_b32 v7, s8 :: v_dual_mov_b32 v8, s9             // 000000078A0C: CA100008 07080009
	s_sub_u32 s0, s4, s2                                       // 000000078A14: 80800204
	s_subb_u32 s1, 0, 0                                        // 000000078A18: 82818080
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000078A1C: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000078A24: 40020207
	v_dual_mov_b32 v12, s1 :: v_dual_mov_b32 v11, s0           // 000000078A28: CA100001 0C0A0000
	s_clause 0x2                                               // 000000078A30: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000078A34: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000078A3C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000078A44: DC6E0000 007C0B00
	s_nop 0                                                    // 000000078A4C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078A50: BFB60003
	s_endpgm                                                   // 000000078A54: BFB00000
subtract_long_get_group_id_get_num_groups_symend:
	.long 0xbf800000                                           // 000000078A58: BF800000
	.long 0xbf800000                                           // 000000078A5C: BF800000
	.long 0xbf800000                                           // 000000078A60: BF800000
	.long 0xbf800000                                           // 000000078A64: BF800000
	.long 0xbf800000                                           // 000000078A68: BF800000
	.long 0xbf800000                                           // 000000078A6C: BF800000
	.long 0xbf800000                                           // 000000078A70: BF800000
	.long 0xbf800000                                           // 000000078A74: BF800000
	.long 0xbf800000                                           // 000000078A78: BF800000
	.long 0xbf800000                                           // 000000078A7C: BF800000
	.long 0xbf800000                                           // 000000078A80: BF800000
	.long 0xbf800000                                           // 000000078A84: BF800000
	.long 0xbf800000                                           // 000000078A88: BF800000
	.long 0xbf800000                                           // 000000078A8C: BF800000
	.long 0xbf800000                                           // 000000078A90: BF800000
	.long 0xbf800000                                           // 000000078A94: BF800000
	.long 0xbf800000                                           // 000000078A98: BF800000
	.long 0xbf800000                                           // 000000078A9C: BF800000
	.long 0xbf800000                                           // 000000078AA0: BF800000
	.long 0xbf800000                                           // 000000078AA4: BF800000
	.long 0xbf800000                                           // 000000078AA8: BF800000
	.long 0xbf800000                                           // 000000078AAC: BF800000
	.long 0xbf800000                                           // 000000078AB0: BF800000
	.long 0xbf800000                                           // 000000078AB4: BF800000
	.long 0xbf800000                                           // 000000078AB8: BF800000
	.long 0xbf800000                                           // 000000078ABC: BF800000
	.long 0xbf800000                                           // 000000078AC0: BF800000
	.long 0xbf800000                                           // 000000078AC4: BF800000
	.long 0xbf800000                                           // 000000078AC8: BF800000
	.long 0xbf800000                                           // 000000078ACC: BF800000
	.long 0xbf800000                                           // 000000078AD0: BF800000
	.long 0xbf800000                                           // 000000078AD4: BF800000
	.long 0xbf800000                                           // 000000078AD8: BF800000
	.long 0xbf800000                                           // 000000078ADC: BF800000
	.long 0xbf800000                                           // 000000078AE0: BF800000
	.long 0xbf800000                                           // 000000078AE4: BF800000
	.long 0xbf800000                                           // 000000078AE8: BF800000
	.long 0xbf800000                                           // 000000078AEC: BF800000
	.long 0xbf800000                                           // 000000078AF0: BF800000
	.long 0xbf800000                                           // 000000078AF4: BF800000
	.long 0xbf800000                                           // 000000078AF8: BF800000
	.long 0xbf800000                                           // 000000078AFC: BF800000

	.p2align	8
	.type	subtract_long_get_local_size_get_num_groups,@function
	.size	subtract_long_get_local_size_get_num_groups, subtract_long_get_local_size_get_num_groups_symend-subtract_long_get_local_size_get_num_groups
subtract_long_get_local_size_get_num_groups:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000078B00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000078B08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000078B0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000078B10: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000078B14: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000078B18: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 000000078B1C: 840E8204
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000078B20: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000078B2C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078B34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000078B3C: BEA10080
	s_clause 0x1                                               // 000000078B40: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000078B44: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000078B4C: DC4A0026 08000002
	s_cmp_lt_u32 s2, s8                                        // 000000078B54: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000078B58: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000078B5C: BF8704D9
	s_add_u32 s6, s5, s2                                       // 000000078B60: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000078B64: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000078B68: BF0A0903
	global_load_u16 v9, v2, s[6:7]                             // 000000078B6C: DC4A0000 09060002
	s_cselect_b32 s2, 14, 20                                   // 000000078B74: 9802948E
	s_add_u32 s2, s5, s2                                       // 000000078B78: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000078B7C: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000078B80: BF0A0A04
	global_load_u16 v10, v2, s[2:3]                            // 000000078B84: DC4A0000 0A020002
	s_cselect_b32 s4, 16, 22                                   // 000000078B8C: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000078B90: BF870009
	s_add_u32 s2, s5, s4                                       // 000000078B94: 80020405
	s_addc_u32 s3, s11, 0                                      // 000000078B98: 8203800B
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000078B9C: F4080100 F8000038
	global_load_u16 v11, v2, s[2:3]                            // 000000078BA4: DC4A0000 0B020002
	s_waitcnt lgkmcnt(0)                                       // 000000078BAC: BF89FC07
	s_clause 0x1                                               // 000000078BB0: BF850001
	s_load_b32 s5, s[0:1], 0x48                                // 000000078BB4: F4000140 F8000048
	s_load_b64 s[2:3], s[0:1], 0x8                             // 000000078BBC: F4040080 F8000008
	v_add3_u32 v1, s4, s12, v1                                 // 000000078BC4: D6550001 04041804
	s_mov_b32 s4, 0                                            // 000000078BCC: BE840080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000078BD0: BF8700A1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000078BD4: D73C0003 00020283
	v_add3_u32 v1, s6, s13, v5                                 // 000000078BDC: D6550001 04141A06
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000078BE4: D73C0005 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000078BEC: BF89FC07
	v_add3_u32 v1, s5, s14, v0                                 // 000000078BF0: D6550001 04001C05
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078BF8: BF870094
	v_add_co_u32 v3, s1, s2, v3                                // 000000078BFC: D7000103 00020602
	v_add_co_ci_u32_e64 v4, s1, s3, v4, s1                     // 000000078C04: D5200104 00060803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000078C0C: BF870143
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000078C10: D73C0000 00020283
	s_waitcnt vmcnt(4)                                         // 000000078C18: BF8913F7
	v_lshrrev_b32_e32 v12, 16, v7                              // 000000078C1C: 32180E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000078C20: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v12.l                              // 000000078C24: D43D0000 00021880
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000078C2C: BF07806A
	s_waitcnt vmcnt(3)                                         // 000000078C30: BF890FF7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 000000078C34: 7C7A1080
	s_addc_u32 s1, s8, 0                                       // 000000078C38: 82018008
	s_cmp_lg_u32 s0, 0                                         // 000000078C3C: BF078000
	s_addc_u32 s0, s9, 0                                       // 000000078C40: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000078C44: BF07806A
	v_add_co_u32 v5, vcc_lo, s2, v5                            // 000000078C48: D7006A05 00020A02
	s_waitcnt vmcnt(2)                                         // 000000078C50: BF890BF7
	v_and_b32_e32 v2, 0xffff, v9                               // 000000078C54: 360412FF 0000FFFF
	s_addc_u32 s5, s10, 0                                      // 000000078C5C: 8205800A
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo             // 000000078C60: 400C0C03
	v_add_co_u32 v0, vcc_lo, s2, v0                            // 000000078C64: D7006A00 00020002
	s_waitcnt vmcnt(1)                                         // 000000078C6C: BF8907F7
	v_and_b32_e32 v9, 0xffff, v10                              // 000000078C70: 361214FF 0000FFFF
	v_sub_co_u32 v7, s1, v2, s1                                // 000000078C78: D7010107 00000302
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000078C80: BF870191
	v_sub_co_ci_u32_e64 v8, null, s4, 0, s1                    // 000000078C84: D5217C08 00050004
	v_sub_co_u32 v9, s0, v9, s0                                // 000000078C8C: D7010009 00000109
	s_waitcnt vmcnt(0)                                         // 000000078C94: BF8903F7
	v_and_b32_e32 v2, 0xffff, v11                              // 000000078C98: 360416FF 0000FFFF
	v_sub_co_ci_u32_e64 v10, null, s4, 0, s0                   // 000000078CA0: D5217C0A 00010004
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo             // 000000078CA8: 40020203
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078CAC: BF870093
	v_sub_co_u32 v11, s0, v2, s5                               // 000000078CB0: D701000B 00000B02
	v_sub_co_ci_u32_e64 v12, null, s4, 0, s0                   // 000000078CB8: D5217C0C 00010004
	s_clause 0x2                                               // 000000078CC0: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000078CC4: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000078CCC: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000078CD4: DC6E0000 007C0B00
	s_nop 0                                                    // 000000078CDC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078CE0: BFB60003
	s_endpgm                                                   // 000000078CE4: BFB00000
subtract_long_get_local_size_get_num_groups_symend:
	.long 0xbf800000                                           // 000000078CE8: BF800000
	.long 0xbf800000                                           // 000000078CEC: BF800000
	.long 0xbf800000                                           // 000000078CF0: BF800000
	.long 0xbf800000                                           // 000000078CF4: BF800000
	.long 0xbf800000                                           // 000000078CF8: BF800000
	.long 0xbf800000                                           // 000000078CFC: BF800000

	.p2align	8
	.type	subtract_long_get_global_id_get_num_groups,@function
	.size	subtract_long_get_global_id_get_num_groups, subtract_long_get_global_id_get_num_groups_symend-subtract_long_get_global_id_get_num_groups
subtract_long_get_global_id_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000078D00: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000078D0C: F4040180 F8000008
	v_bfe_u32 v5, v0, 10, 10                                   // 000000078D14: D6100005 02291500
	s_lshl_b32 s4, s4, 2                                       // 000000078D1C: 84048204
	s_clause 0x1                                               // 000000078D20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000078D24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000078D2C: DC4A0026 08000002
	s_clause 0x1                                               // 000000078D34: BF850001
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000078D38: F4080300 F8000010
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000078D40: F4080200 F8000038
	v_lshl_or_b32 v1, s2, 1, v1                                // 000000078D48: D6560001 04050202
	s_lshl_b32 s2, s3, 1                                       // 000000078D50: 84028103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078D54: D6100000 02292900
	s_mov_b32 s3, 0                                            // 000000078D5C: BE830080
	s_mov_b32 s33, 0                                           // 000000078D60: BEA10080
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000078D64: D73C0003 00020283
	s_waitcnt lgkmcnt(0)                                       // 000000078D6C: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 000000078D70: BF870111
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000078D74: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000078D7C: 40080807
	v_add_nc_u32_e32 v9, s8, v1                                // 000000078D80: 4A120208
	v_add3_u32 v1, s10, s2, v5                                 // 000000078D84: D6550001 0414040A
	s_load_b32 s2, s[0:1], 0x48                                // 000000078D8C: F4000080 F8000048
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000078D94: BF870091
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000078D98: D73C0005 00020283
	v_add_co_u32 v5, s1, s6, v5                                // 000000078DA0: D7000105 00020A06
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000078DA8: BF870141
	v_add_co_ci_u32_e64 v6, s1, s7, v6, s1                     // 000000078DAC: D5200106 00060C07
	s_waitcnt vmcnt(1)                                         // 000000078DB4: BF8907F7
	v_lshrrev_b32_e32 v10, 16, v7                              // 000000078DB8: 32140E90
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000078DBC: 7C7A0E80
	v_cmp_ne_u16_e64 s0, 0, v10.l                              // 000000078DC0: D43D0000 00021480
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000078DC8: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000078DCC: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 000000078DD0: 7C7A1080
	s_addc_u32 s1, s12, 0                                      // 000000078DD4: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 000000078DD8: BF078000
	v_sub_co_u32 v7, s0, v9, s1                                // 000000078DDC: D7010007 00000309
	s_delay_alu instid0(VALU_DEP_1)                            // 000000078DE4: BF870001
	v_sub_co_ci_u32_e64 v8, null, s3, 0, s0                    // 000000078DE8: D5217C08 00010003
	s_addc_u32 s0, s13, 0                                      // 000000078DF0: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000078DF4: BF07806A
	v_sub_co_u32 v9, s0, v1, s0                                // 000000078DF8: D7010009 00000101
	s_waitcnt lgkmcnt(0)                                       // 000000078E00: BF89FC07
	v_add3_u32 v1, s2, s4, v0                                  // 000000078E04: D6550001 04000802
	v_sub_co_ci_u32_e64 v10, null, s3, 0, s0                   // 000000078E0C: D5217C0A 00010003
	s_addc_u32 s0, s14, 0                                      // 000000078E14: 8200800E
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 000000078E18: BF8700A2
	v_lshlrev_b64 v[11:12], 3, v[1:2]                          // 000000078E1C: D73C000B 00020283
	v_sub_co_u32 v0, s0, v1, s0                                // 000000078E24: D7010000 00000101
	v_sub_co_ci_u32_e64 v1, null, s3, 0, s0                    // 000000078E2C: D5217C01 00010003
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000078E34: BF870213
	v_add_co_u32 v11, vcc_lo, s6, v11                          // 000000078E38: D7006A0B 00021606
	v_add_co_ci_u32_e32 v12, vcc_lo, s7, v12, vcc_lo           // 000000078E40: 40181807
	s_clause 0x2                                               // 000000078E44: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000078E48: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000078E50: DC6E0000 007C0905
	global_store_b64 v[11:12], v[0:1], off                     // 000000078E58: DC6E0000 007C000B
	s_nop 0                                                    // 000000078E60: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000078E64: BFB60003
	s_endpgm                                                   // 000000078E68: BFB00000
subtract_long_get_global_id_get_num_groups_symend:
	.long 0xbf800000                                           // 000000078E6C: BF800000
	.long 0xbf800000                                           // 000000078E70: BF800000
	.long 0xbf800000                                           // 000000078E74: BF800000
	.long 0xbf800000                                           // 000000078E78: BF800000
	.long 0xbf800000                                           // 000000078E7C: BF800000
	.long 0xbf800000                                           // 000000078E80: BF800000
	.long 0xbf800000                                           // 000000078E84: BF800000
	.long 0xbf800000                                           // 000000078E88: BF800000
	.long 0xbf800000                                           // 000000078E8C: BF800000
	.long 0xbf800000                                           // 000000078E90: BF800000
	.long 0xbf800000                                           // 000000078E94: BF800000
	.long 0xbf800000                                           // 000000078E98: BF800000
	.long 0xbf800000                                           // 000000078E9C: BF800000
	.long 0xbf800000                                           // 000000078EA0: BF800000
	.long 0xbf800000                                           // 000000078EA4: BF800000
	.long 0xbf800000                                           // 000000078EA8: BF800000
	.long 0xbf800000                                           // 000000078EAC: BF800000
	.long 0xbf800000                                           // 000000078EB0: BF800000
	.long 0xbf800000                                           // 000000078EB4: BF800000
	.long 0xbf800000                                           // 000000078EB8: BF800000
	.long 0xbf800000                                           // 000000078EBC: BF800000
	.long 0xbf800000                                           // 000000078EC0: BF800000
	.long 0xbf800000                                           // 000000078EC4: BF800000
	.long 0xbf800000                                           // 000000078EC8: BF800000
	.long 0xbf800000                                           // 000000078ECC: BF800000
	.long 0xbf800000                                           // 000000078ED0: BF800000
	.long 0xbf800000                                           // 000000078ED4: BF800000
	.long 0xbf800000                                           // 000000078ED8: BF800000
	.long 0xbf800000                                           // 000000078EDC: BF800000
	.long 0xbf800000                                           // 000000078EE0: BF800000
	.long 0xbf800000                                           // 000000078EE4: BF800000
	.long 0xbf800000                                           // 000000078EE8: BF800000
	.long 0xbf800000                                           // 000000078EEC: BF800000
	.long 0xbf800000                                           // 000000078EF0: BF800000
	.long 0xbf800000                                           // 000000078EF4: BF800000
	.long 0xbf800000                                           // 000000078EF8: BF800000
	.long 0xbf800000                                           // 000000078EFC: BF800000

	.p2align	8
	.type	subtract_long_get_global_size_get_num_groups,@function
	.size	subtract_long_get_global_size_get_num_groups, subtract_long_get_global_size_get_num_groups_symend-subtract_long_get_global_size_get_num_groups
subtract_long_get_global_size_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000078F00: CA240080 020000FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 000000078F0C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000078F14: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000078F1C: BEA10080
	s_clause 0x1                                               // 000000078F20: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000078F24: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 000000078F2C: DC4A0026 08000002
	s_clause 0x3                                               // 000000078F34: BF850003
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000078F38: F4080300 F8000038
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000078F40: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000078F48: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], null                            // 000000078F50: F4040180 F8000000
	s_lshl_b32 s0, s2, 4                                       // 000000078F58: 84008402
	s_lshl_b32 s1, s4, 1                                       // 000000078F5C: 84018104
	s_mov_b32 s2, 0                                            // 000000078F60: BE820080
	s_waitcnt lgkmcnt(0)                                       // 000000078F64: BF89FC07
	v_add3_u32 v1, s12, s0, v1                                 // 000000078F68: D6550001 0404000C
	s_lshl_b32 s0, s3, 1                                       // 000000078F70: 84008103
	s_lshl_b32 s3, s8, 4                                       // 000000078F74: 84038408
	s_lshl_b32 s4, s9, 1                                       // 000000078F78: 84048109
	s_lshl_b32 s11, s10, 1                                     // 000000078F7C: 840B810A
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000078F80: D73C0003 00020283
	v_add3_u32 v1, s14, s0, v5                                 // 000000078F88: D6550001 0414000E
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_4)// 000000078F90: BF870221
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000078F94: D73C0005 00020283
	v_add3_u32 v1, s5, s1, v0                                  // 000000078F9C: D6550001 04000205
	v_add_co_u32 v3, vcc_lo, s6, v3                            // 000000078FA4: D7006A03 00020606
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo             // 000000078FAC: 40080807
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000078FB0: BF870214
	v_add_co_u32 v5, vcc_lo, s6, v5                            // 000000078FB4: D7006A05 00020A06
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000078FBC: D73C0000 00020283
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo             // 000000078FC4: 400C0C07
	s_waitcnt vmcnt(1)                                         // 000000078FC8: BF8907F7
	v_lshrrev_b32_e32 v2, 16, v7                               // 000000078FCC: 32040E90
	v_and_b32_e32 v9, 0xffff, v7                               // 000000078FD0: 36120EFF 0000FFFF
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 000000078FD8: 7C7A0E80
	s_waitcnt vmcnt(0)                                         // 000000078FDC: BF8903F7
	v_cmp_ne_u32_e64 s0, 0, v8                                 // 000000078FE0: D44D0000 00021080
	v_add_nc_u32_e32 v11, s11, v8                              // 000000078FE8: 4A16100B
	v_cmp_ne_u16_e64 s1, 0, v2.l                               // 000000078FEC: D43D0001 00020480
	v_add_nc_u32_e32 v7, s3, v9                                // 000000078FF4: 4A0E1203
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000078FF8: BF07806A
	v_add_nc_u32_e32 v2, s4, v2                                // 000000078FFC: 4A040404
	s_addc_u32 s3, s8, 0                                       // 000000079000: 82038008
	s_cmp_lg_u32 s1, 0                                         // 000000079004: BF078001
	v_sub_co_u32 v7, s1, v7, s3                                // 000000079008: D7010107 00000707
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000079010: BF8700C1
	v_sub_co_ci_u32_e64 v8, null, s2, 0, s1                    // 000000079014: D5217C08 00050002
	s_addc_u32 s1, s9, 0                                       // 00000007901C: 82018009
	s_cmp_lg_u32 s0, 0                                         // 000000079020: BF078000
	v_sub_co_u32 v9, s0, v2, s1                                // 000000079024: D7010009 00000302
	v_sub_co_ci_u32_e64 v10, null, s2, 0, s0                   // 00000007902C: D5217C0A 00010002
	s_addc_u32 s0, s10, 0                                      // 000000079034: 8200800A
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 000000079038: D7006A00 00020006
	v_sub_co_u32 v11, s0, v11, s0                              // 000000079040: D701000B 0000010B
	s_delay_alu instid0(VALU_DEP_1)                            // 000000079048: BF870001
	v_sub_co_ci_u32_e64 v12, null, s2, 0, s0                   // 00000007904C: D5217C0C 00010002
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000079054: 40020207
	s_clause 0x2                                               // 000000079058: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 00000007905C: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 000000079064: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 00000007906C: DC6E0000 007C0B00
	s_nop 0                                                    // 000000079074: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079078: BFB60003
	s_endpgm                                                   // 00000007907C: BFB00000
subtract_long_get_global_size_get_num_groups_symend:
	.long 0xbf800000                                           // 000000079080: BF800000
	.long 0xbf800000                                           // 000000079084: BF800000
	.long 0xbf800000                                           // 000000079088: BF800000
	.long 0xbf800000                                           // 00000007908C: BF800000
	.long 0xbf800000                                           // 000000079090: BF800000
	.long 0xbf800000                                           // 000000079094: BF800000
	.long 0xbf800000                                           // 000000079098: BF800000
	.long 0xbf800000                                           // 00000007909C: BF800000
	.long 0xbf800000                                           // 0000000790A0: BF800000
	.long 0xbf800000                                           // 0000000790A4: BF800000
	.long 0xbf800000                                           // 0000000790A8: BF800000
	.long 0xbf800000                                           // 0000000790AC: BF800000
	.long 0xbf800000                                           // 0000000790B0: BF800000
	.long 0xbf800000                                           // 0000000790B4: BF800000
	.long 0xbf800000                                           // 0000000790B8: BF800000
	.long 0xbf800000                                           // 0000000790BC: BF800000
	.long 0xbf800000                                           // 0000000790C0: BF800000
	.long 0xbf800000                                           // 0000000790C4: BF800000
	.long 0xbf800000                                           // 0000000790C8: BF800000
	.long 0xbf800000                                           // 0000000790CC: BF800000
	.long 0xbf800000                                           // 0000000790D0: BF800000
	.long 0xbf800000                                           // 0000000790D4: BF800000
	.long 0xbf800000                                           // 0000000790D8: BF800000
	.long 0xbf800000                                           // 0000000790DC: BF800000
	.long 0xbf800000                                           // 0000000790E0: BF800000
	.long 0xbf800000                                           // 0000000790E4: BF800000
	.long 0xbf800000                                           // 0000000790E8: BF800000
	.long 0xbf800000                                           // 0000000790EC: BF800000
	.long 0xbf800000                                           // 0000000790F0: BF800000
	.long 0xbf800000                                           // 0000000790F4: BF800000
	.long 0xbf800000                                           // 0000000790F8: BF800000
	.long 0xbf800000                                           // 0000000790FC: BF800000

	.p2align	8
	.type	subtract_long_get_num_groups_get_num_groups,@function
	.size	subtract_long_get_num_groups_get_num_groups, subtract_long_get_num_groups_get_num_groups_symend-subtract_long_get_num_groups_get_num_groups
subtract_long_get_num_groups_get_num_groups:
	s_clause 0x2                                               // 000000079100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007910C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079114: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007911C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 000000079128: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007912C: D6100005 02291500
	s_lshl_b32 s3, s3, 1                                       // 000000079134: 84038103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079138: D6100000 02292900
	s_lshl_b32 s4, s4, 2                                       // 000000079140: 84048204
	s_mov_b32 s33, 0                                           // 000000079144: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079148: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000007914C: D6550001 04040408
	s_mov_b32 s2, 0                                            // 000000079154: BE820080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 000000079158: BF8704B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007915C: D73C0003 00020283
	v_add3_u32 v1, s10, s3, v5                                 // 000000079164: D6550001 0414060A
	s_mov_b32 s3, s2                                           // 00000007916C: BE830002
	v_dual_mov_b32 v6, s3 :: v_dual_mov_b32 v5, s2             // 000000079170: CA100003 06040002
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000079178: BF8701C2
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 00000007917C: D73C0007 00020283
	v_add3_u32 v1, s5, s4, v0                                  // 000000079184: D6550001 04000805
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000007918C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 000000079194: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 000000079198: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 0000000791A0: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 0000000791A8: 40101001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000791AC: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000791B0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000791B8: 40020201
	s_clause 0x2                                               // 0000000791BC: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 0000000791C0: DC6E0000 007C0503
	global_store_b64 v[7:8], v[5:6], off                       // 0000000791C8: DC6E0000 007C0507
	global_store_b64 v[0:1], v[5:6], off                       // 0000000791D0: DC6E0000 007C0500
	s_nop 0                                                    // 0000000791D8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000791DC: BFB60003
	s_endpgm                                                   // 0000000791E0: BFB00000
subtract_long_get_num_groups_get_num_groups_symend:
	.long 0xbf800000                                           // 0000000791E4: BF800000
	.long 0xbf800000                                           // 0000000791E8: BF800000
	.long 0xbf800000                                           // 0000000791EC: BF800000
	.long 0xbf800000                                           // 0000000791F0: BF800000
	.long 0xbf800000                                           // 0000000791F4: BF800000
	.long 0xbf800000                                           // 0000000791F8: BF800000
	.long 0xbf800000                                           // 0000000791FC: BF800000

	.p2align	8
	.type	subtract_long_get_work_dim_get_num_groups,@function
	.size	subtract_long_get_work_dim_get_num_groups, subtract_long_get_work_dim_get_num_groups_symend-subtract_long_get_work_dim_get_num_groups
subtract_long_get_work_dim_get_num_groups:
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000079200: CA240080 020000FF 000003FF
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007920C: F4040180 F8000008
	s_lshl_b32 s2, s2, 1                                       // 000000079214: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 000000079218: D6100005 02291500
	s_clause 0x1                                               // 000000079220: BF850001
	global_load_b32 v7, v2, s[0:1] offset:34                   // 000000079224: DC520022 07000002
	global_load_u16 v8, v2, s[0:1] offset:38                   // 00000007922C: DC4A0026 08000002
	s_clause 0x2                                               // 000000079234: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 000000079238: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079240: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000079248: F4080300 F8000010
	s_waitcnt lgkmcnt(0)                                       // 000000079250: BF89FC07
	s_load_b32 s9, s[0:1], 0x48                                // 000000079254: F4000240 F8000048
	s_lshl_b32 s0, s3, 1                                       // 00000007925C: 84008103
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079260: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000079268: BEA10080
	v_add3_u32 v1, s8, s2, v1                                  // 00000007926C: D6550001 04040408
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_3) | instid1(VALU_DEP_1)// 000000079274: BF8700C1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000079278: D73C0003 00020283
	v_add3_u32 v1, s10, s0, v5                                 // 000000079280: D6550001 0414000A
	s_lshl_b32 s0, s4, 2                                       // 000000079288: 84008204
	s_and_b32 s4, s5, 0xffff                                   // 00000007928C: 8B04FF05 0000FFFF
	v_lshlrev_b64 v[5:6], 3, v[1:2]                            // 000000079294: D73C0005 00020283
	s_waitcnt lgkmcnt(0)                                       // 00000007929C: BF89FC07
	v_add3_u32 v1, s9, s0, v0                                  // 0000000792A0: D6550001 04000009
	v_add_co_u32 v3, s0, s6, v3                                // 0000000792A8: D7000003 00020606
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_1)// 0000000792B0: BF8700D1
	v_add_co_ci_u32_e64 v4, s0, s7, v4, s0                     // 0000000792B4: D5200004 00020807
	s_waitcnt vmcnt(1)                                         // 0000000792BC: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v7.l                           // 0000000792C0: 7C7A0E80
	v_lshrrev_b32_e32 v0, 16, v7                               // 0000000792C4: 32000E90
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000792C8: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v0.l                           // 0000000792CC: 7C7A0080
	s_addc_u32 s0, s12, 0                                      // 0000000792D0: 8200800C
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000792D4: D73C0000 00020283
	s_sub_u32 s2, s4, s0                                       // 0000000792DC: 80820004
	s_subb_u32 s3, 0, 0                                        // 0000000792E0: 82838080
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000792E4: BF07806A
	s_waitcnt vmcnt(0)                                         // 0000000792E8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v8.l                           // 0000000792EC: 7C7A1080
	v_add_co_u32 v5, s0, s6, v5                                // 0000000792F0: D7000005 00020A06
	s_addc_u32 s1, s13, 0                                      // 0000000792F8: 8201800D
	v_add_co_ci_u32_e64 v6, s0, s7, v6, s0                     // 0000000792FC: D5200006 00020C07
	s_sub_u32 s0, s4, s1                                       // 000000079304: 80800104
	s_subb_u32 s1, 0, 0                                        // 000000079308: 82818080
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007930C: BF07806A
	v_dual_mov_b32 v8, s3 :: v_dual_mov_b32 v7, s2             // 000000079310: CA100003 08060002
	s_addc_u32 s2, s14, 0                                      // 000000079318: 8202800E
	v_dual_mov_b32 v10, s1 :: v_dual_mov_b32 v9, s0            // 00000007931C: CA100001 0A080000
	s_sub_u32 s0, s4, s2                                       // 000000079324: 80800204
	s_subb_u32 s1, 0, 0                                        // 000000079328: 82818080
	v_add_co_u32 v0, vcc_lo, s6, v0                            // 00000007932C: D7006A00 00020006
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v1, vcc_lo             // 000000079334: 40020207
	v_dual_mov_b32 v12, s1 :: v_dual_mov_b32 v11, s0           // 000000079338: CA100001 0C0A0000
	s_clause 0x2                                               // 000000079340: BF850002
	global_store_b64 v[3:4], v[7:8], off                       // 000000079344: DC6E0000 007C0703
	global_store_b64 v[5:6], v[9:10], off                      // 00000007934C: DC6E0000 007C0905
	global_store_b64 v[0:1], v[11:12], off                     // 000000079354: DC6E0000 007C0B00
	s_nop 0                                                    // 00000007935C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079360: BFB60003
	s_endpgm                                                   // 000000079364: BFB00000
subtract_long_get_work_dim_get_num_groups_symend:
	.long 0xbf800000                                           // 000000079368: BF800000
	.long 0xbf800000                                           // 00000007936C: BF800000
	.long 0xbf800000                                           // 000000079370: BF800000
	.long 0xbf800000                                           // 000000079374: BF800000
	.long 0xbf800000                                           // 000000079378: BF800000
	.long 0xbf800000                                           // 00000007937C: BF800000
	.long 0xbf800000                                           // 000000079380: BF800000
	.long 0xbf800000                                           // 000000079384: BF800000
	.long 0xbf800000                                           // 000000079388: BF800000
	.long 0xbf800000                                           // 00000007938C: BF800000
	.long 0xbf800000                                           // 000000079390: BF800000
	.long 0xbf800000                                           // 000000079394: BF800000
	.long 0xbf800000                                           // 000000079398: BF800000
	.long 0xbf800000                                           // 00000007939C: BF800000
	.long 0xbf800000                                           // 0000000793A0: BF800000
	.long 0xbf800000                                           // 0000000793A4: BF800000
	.long 0xbf800000                                           // 0000000793A8: BF800000
	.long 0xbf800000                                           // 0000000793AC: BF800000
	.long 0xbf800000                                           // 0000000793B0: BF800000
	.long 0xbf800000                                           // 0000000793B4: BF800000
	.long 0xbf800000                                           // 0000000793B8: BF800000
	.long 0xbf800000                                           // 0000000793BC: BF800000
	.long 0xbf800000                                           // 0000000793C0: BF800000
	.long 0xbf800000                                           // 0000000793C4: BF800000
	.long 0xbf800000                                           // 0000000793C8: BF800000
	.long 0xbf800000                                           // 0000000793CC: BF800000
	.long 0xbf800000                                           // 0000000793D0: BF800000
	.long 0xbf800000                                           // 0000000793D4: BF800000
	.long 0xbf800000                                           // 0000000793D8: BF800000
	.long 0xbf800000                                           // 0000000793DC: BF800000
	.long 0xbf800000                                           // 0000000793E0: BF800000
	.long 0xbf800000                                           // 0000000793E4: BF800000
	.long 0xbf800000                                           // 0000000793E8: BF800000
	.long 0xbf800000                                           // 0000000793EC: BF800000
	.long 0xbf800000                                           // 0000000793F0: BF800000
	.long 0xbf800000                                           // 0000000793F4: BF800000
	.long 0xbf800000                                           // 0000000793F8: BF800000
	.long 0xbf800000                                           // 0000000793FC: BF800000

	.p2align	8
	.type	subtract_long_x_get_work_dim,@function
	.size	subtract_long_x_get_work_dim, subtract_long_x_get_work_dim_symend-subtract_long_x_get_work_dim
subtract_long_x_get_work_dim:
	s_clause 0x2                                               // 000000079400: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 000000079404: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007940C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x8                                 // 000000079414: F4000180 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007941C: BF89FC07
	s_clause 0x1                                               // 000000079420: BF850001
	s_load_b32 s9, s[0:1], 0x48                                // 000000079424: F4000240 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007942C: F4040000 F8000000
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 000000079434: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000079440: 84028402
	v_bfe_u32 v5, v0, 10, 10                                   // 000000079444: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007944C: D6100000 02292900
	s_mov_b32 s7, 0                                            // 000000079454: BE870080
	s_mov_b32 s33, 0                                           // 000000079458: BEA10080
	v_add3_u32 v1, s8, s2, v1                                  // 00000007945C: D6550001 04040408
	s_lshl_b32 s2, s3, 1                                       // 000000079464: 84028103
	s_and_b32 s3, s5, 0xffff                                   // 000000079468: 8B03FF05 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000079470: BF870099
	s_sub_i32 s6, s6, s3                                       // 000000079474: 81860306
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 000000079478: D73C0003 00020283
	v_add3_u32 v1, s10, s2, v5                                 // 000000079480: D6550001 0414040A
	s_lshl_b32 s2, s4, 1                                       // 000000079488: 84028104
	v_dual_mov_b32 v5, s6 :: v_dual_mov_b32 v6, s7             // 00000007948C: CA100006 05060007
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(VALU_DEP_3)// 000000079494: BF8701D2
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 000000079498: D73C0007 00020283
	s_waitcnt lgkmcnt(0)                                       // 0000000794A0: BF89FC07
	v_add3_u32 v1, s9, s2, v0                                  // 0000000794A4: D6550001 04000409
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 0000000794AC: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 0000000794B4: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 0000000794B8: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 0000000794C0: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 0000000794C8: 40101001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000794CC: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 0000000794D0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 0000000794D8: 40020201
	s_clause 0x2                                               // 0000000794DC: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 0000000794E0: DC6E0000 007C0503
	global_store_b64 v[7:8], v[5:6], off                       // 0000000794E8: DC6E0000 007C0507
	global_store_b64 v[0:1], v[5:6], off                       // 0000000794F0: DC6E0000 007C0500
	s_nop 0                                                    // 0000000794F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000794FC: BFB60003
	s_endpgm                                                   // 000000079500: BFB00000
subtract_long_x_get_work_dim_symend:
	.long 0xbf800000                                           // 000000079504: BF800000
	.long 0xbf800000                                           // 000000079508: BF800000
	.long 0xbf800000                                           // 00000007950C: BF800000
	.long 0xbf800000                                           // 000000079510: BF800000
	.long 0xbf800000                                           // 000000079514: BF800000
	.long 0xbf800000                                           // 000000079518: BF800000
	.long 0xbf800000                                           // 00000007951C: BF800000
	.long 0xbf800000                                           // 000000079520: BF800000
	.long 0xbf800000                                           // 000000079524: BF800000
	.long 0xbf800000                                           // 000000079528: BF800000
	.long 0xbf800000                                           // 00000007952C: BF800000
	.long 0xbf800000                                           // 000000079530: BF800000
	.long 0xbf800000                                           // 000000079534: BF800000
	.long 0xbf800000                                           // 000000079538: BF800000
	.long 0xbf800000                                           // 00000007953C: BF800000
	.long 0xbf800000                                           // 000000079540: BF800000
	.long 0xbf800000                                           // 000000079544: BF800000
	.long 0xbf800000                                           // 000000079548: BF800000
	.long 0xbf800000                                           // 00000007954C: BF800000
	.long 0xbf800000                                           // 000000079550: BF800000
	.long 0xbf800000                                           // 000000079554: BF800000
	.long 0xbf800000                                           // 000000079558: BF800000
	.long 0xbf800000                                           // 00000007955C: BF800000
	.long 0xbf800000                                           // 000000079560: BF800000
	.long 0xbf800000                                           // 000000079564: BF800000
	.long 0xbf800000                                           // 000000079568: BF800000
	.long 0xbf800000                                           // 00000007956C: BF800000
	.long 0xbf800000                                           // 000000079570: BF800000
	.long 0xbf800000                                           // 000000079574: BF800000
	.long 0xbf800000                                           // 000000079578: BF800000
	.long 0xbf800000                                           // 00000007957C: BF800000
	.long 0xbf800000                                           // 000000079580: BF800000
	.long 0xbf800000                                           // 000000079584: BF800000
	.long 0xbf800000                                           // 000000079588: BF800000
	.long 0xbf800000                                           // 00000007958C: BF800000
	.long 0xbf800000                                           // 000000079590: BF800000
	.long 0xbf800000                                           // 000000079594: BF800000
	.long 0xbf800000                                           // 000000079598: BF800000
	.long 0xbf800000                                           // 00000007959C: BF800000
	.long 0xbf800000                                           // 0000000795A0: BF800000
	.long 0xbf800000                                           // 0000000795A4: BF800000
	.long 0xbf800000                                           // 0000000795A8: BF800000
	.long 0xbf800000                                           // 0000000795AC: BF800000
	.long 0xbf800000                                           // 0000000795B0: BF800000
	.long 0xbf800000                                           // 0000000795B4: BF800000
	.long 0xbf800000                                           // 0000000795B8: BF800000
	.long 0xbf800000                                           // 0000000795BC: BF800000
	.long 0xbf800000                                           // 0000000795C0: BF800000
	.long 0xbf800000                                           // 0000000795C4: BF800000
	.long 0xbf800000                                           // 0000000795C8: BF800000
	.long 0xbf800000                                           // 0000000795CC: BF800000
	.long 0xbf800000                                           // 0000000795D0: BF800000
	.long 0xbf800000                                           // 0000000795D4: BF800000
	.long 0xbf800000                                           // 0000000795D8: BF800000
	.long 0xbf800000                                           // 0000000795DC: BF800000
	.long 0xbf800000                                           // 0000000795E0: BF800000
	.long 0xbf800000                                           // 0000000795E4: BF800000
	.long 0xbf800000                                           // 0000000795E8: BF800000
	.long 0xbf800000                                           // 0000000795EC: BF800000
	.long 0xbf800000                                           // 0000000795F0: BF800000
	.long 0xbf800000                                           // 0000000795F4: BF800000
	.long 0xbf800000                                           // 0000000795F8: BF800000
	.long 0xbf800000                                           // 0000000795FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_offset_get_work_dim,@function
	.size	subtract_long_get_global_offset_get_work_dim, subtract_long_get_global_offset_get_work_dim_symend-subtract_long_get_global_offset_get_work_dim
subtract_long_get_global_offset_get_work_dim:
	s_clause 0x3                                               // 000000079600: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007960C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 000000079614: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007961C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000079624: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000079630: D6100004 02291500
	s_lshl_b32 s2, s2, 1                                       // 000000079638: 84028102
	s_lshl_b32 s3, s3, 4                                       // 00000007963C: 84038403
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079640: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000079648: 84048104
	s_mov_b32 s33, 0                                           // 00000007964C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079650: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 000000079654: D6550002 04080408
	s_and_b32 s2, s5, 0xffff                                   // 00000007965C: 8B02FF05 0000FFFF
	v_add3_u32 v4, s10, s3, v4                                 // 000000079664: D6550004 0410060A
	s_sub_i32 s3, s8, s2                                       // 00000007966C: 81830208
	v_mov_b32_e32 v3, v1                                       // 000000079670: 7E060301
	v_add3_u32 v6, s6, s4, v0                                  // 000000079674: D6550006 04000806
	v_mov_b32_e32 v0, s3                                       // 00000007967C: 7E000203
	s_sub_i32 s4, s10, s2                                      // 000000079680: 8184020A
	v_mov_b32_e32 v5, v1                                       // 000000079684: 7E0A0301
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079688: D73C0002 00020483
	s_sub_i32 s2, s6, s2                                       // 000000079690: 81820206
	v_mov_b32_e32 v7, v1                                       // 000000079694: 7E0E0301
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000079698: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007969C: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000796A4: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000796A8: DC6E0000 007C0002
	v_mov_b32_e32 v0, s4                                       // 0000000796B0: 7E000204
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000796B4: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000796BC: BF870111
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000796C0: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000796C8: 400A0A01
	global_store_b64 v[4:5], v[0:1], off                       // 0000000796CC: DC6E0000 007C0004
	v_mov_b32_e32 v0, s2                                       // 0000000796D4: 7E000202
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000796D8: D73C0002 00020C83
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000796E0: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000796E4: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000796EC: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000796F0: DC6E0000 007C0002
	s_nop 0                                                    // 0000000796F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000796FC: BFB60003
	s_endpgm                                                   // 000000079700: BFB00000
subtract_long_get_global_offset_get_work_dim_symend:
	.long 0xbf800000                                           // 000000079704: BF800000
	.long 0xbf800000                                           // 000000079708: BF800000
	.long 0xbf800000                                           // 00000007970C: BF800000
	.long 0xbf800000                                           // 000000079710: BF800000
	.long 0xbf800000                                           // 000000079714: BF800000
	.long 0xbf800000                                           // 000000079718: BF800000
	.long 0xbf800000                                           // 00000007971C: BF800000
	.long 0xbf800000                                           // 000000079720: BF800000
	.long 0xbf800000                                           // 000000079724: BF800000
	.long 0xbf800000                                           // 000000079728: BF800000
	.long 0xbf800000                                           // 00000007972C: BF800000
	.long 0xbf800000                                           // 000000079730: BF800000
	.long 0xbf800000                                           // 000000079734: BF800000
	.long 0xbf800000                                           // 000000079738: BF800000
	.long 0xbf800000                                           // 00000007973C: BF800000
	.long 0xbf800000                                           // 000000079740: BF800000
	.long 0xbf800000                                           // 000000079744: BF800000
	.long 0xbf800000                                           // 000000079748: BF800000
	.long 0xbf800000                                           // 00000007974C: BF800000
	.long 0xbf800000                                           // 000000079750: BF800000
	.long 0xbf800000                                           // 000000079754: BF800000
	.long 0xbf800000                                           // 000000079758: BF800000
	.long 0xbf800000                                           // 00000007975C: BF800000
	.long 0xbf800000                                           // 000000079760: BF800000
	.long 0xbf800000                                           // 000000079764: BF800000
	.long 0xbf800000                                           // 000000079768: BF800000
	.long 0xbf800000                                           // 00000007976C: BF800000
	.long 0xbf800000                                           // 000000079770: BF800000
	.long 0xbf800000                                           // 000000079774: BF800000
	.long 0xbf800000                                           // 000000079778: BF800000
	.long 0xbf800000                                           // 00000007977C: BF800000
	.long 0xbf800000                                           // 000000079780: BF800000
	.long 0xbf800000                                           // 000000079784: BF800000
	.long 0xbf800000                                           // 000000079788: BF800000
	.long 0xbf800000                                           // 00000007978C: BF800000
	.long 0xbf800000                                           // 000000079790: BF800000
	.long 0xbf800000                                           // 000000079794: BF800000
	.long 0xbf800000                                           // 000000079798: BF800000
	.long 0xbf800000                                           // 00000007979C: BF800000
	.long 0xbf800000                                           // 0000000797A0: BF800000
	.long 0xbf800000                                           // 0000000797A4: BF800000
	.long 0xbf800000                                           // 0000000797A8: BF800000
	.long 0xbf800000                                           // 0000000797AC: BF800000
	.long 0xbf800000                                           // 0000000797B0: BF800000
	.long 0xbf800000                                           // 0000000797B4: BF800000
	.long 0xbf800000                                           // 0000000797B8: BF800000
	.long 0xbf800000                                           // 0000000797BC: BF800000
	.long 0xbf800000                                           // 0000000797C0: BF800000
	.long 0xbf800000                                           // 0000000797C4: BF800000
	.long 0xbf800000                                           // 0000000797C8: BF800000
	.long 0xbf800000                                           // 0000000797CC: BF800000
	.long 0xbf800000                                           // 0000000797D0: BF800000
	.long 0xbf800000                                           // 0000000797D4: BF800000
	.long 0xbf800000                                           // 0000000797D8: BF800000
	.long 0xbf800000                                           // 0000000797DC: BF800000
	.long 0xbf800000                                           // 0000000797E0: BF800000
	.long 0xbf800000                                           // 0000000797E4: BF800000
	.long 0xbf800000                                           // 0000000797E8: BF800000
	.long 0xbf800000                                           // 0000000797EC: BF800000
	.long 0xbf800000                                           // 0000000797F0: BF800000
	.long 0xbf800000                                           // 0000000797F4: BF800000
	.long 0xbf800000                                           // 0000000797F8: BF800000
	.long 0xbf800000                                           // 0000000797FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_id_get_work_dim,@function
	.size	subtract_long_get_local_id_get_work_dim, subtract_long_get_local_id_get_work_dim_symend-subtract_long_get_local_id_get_work_dim
subtract_long_get_local_id_get_work_dim:
	s_clause 0x3                                               // 000000079800: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079804: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007980C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 000000079814: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007981C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 000000079824: CA240080 010800FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000079830: 84028302
	v_bfe_u32 v9, v0, 10, 10                                   // 000000079834: D6100009 02291500
	s_lshl_b32 s3, s3, 2                                       // 00000007983C: 84038203
	s_delay_alu instid0(VALU_DEP_2)                            // 000000079840: BF870002
	v_mov_b32_e32 v3, v1                                       // 000000079844: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000079848: 7E0A0301
	v_bfe_u32 v10, v0, 20, 10                                  // 00000007984C: D610000A 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000079854: 84048104
	v_mov_b32_e32 v7, v1                                       // 000000079858: 7E0E0301
	s_mov_b32 s33, 0                                           // 00000007985C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079860: BF89FC07
	v_add3_u32 v2, s8, s2, v8                                  // 000000079864: D6550002 04200408
	v_add3_u32 v4, s10, s3, v9                                 // 00000007986C: D6550004 0424060A
	s_and_b32 s2, s5, 0xffff                                   // 000000079874: 8B02FF05 0000FFFF
	v_add3_u32 v6, s6, s4, v10                                 // 00000007987C: D6550006 04280806
	v_subrev_nc_u32_e32 v0, s2, v8                             // 000000079884: 4E001002
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079888: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000079890: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000079898: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007989C: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000798A4: 40060601
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 0000000798A8: BF870213
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000798AC: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000798B4: 400A0A01
	global_store_b64 v[2:3], v[0:1], off                       // 0000000798B8: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000798C0: D73C0002 00020C83
	v_subrev_nc_u32_e32 v0, s2, v9                             // 0000000798C8: 4E001202
	global_store_b64 v[4:5], v[0:1], off                       // 0000000798CC: DC6E0000 007C0004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000798D4: D7006A02 00020400
	v_subrev_nc_u32_e32 v0, s2, v10                            // 0000000798DC: 4E001402
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000798E0: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000798E4: DC6E0000 007C0002
	s_nop 0                                                    // 0000000798EC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000798F0: BFB60003
	s_endpgm                                                   // 0000000798F4: BFB00000
subtract_long_get_local_id_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000798F8: BF800000
	.long 0xbf800000                                           // 0000000798FC: BF800000

	.p2align	8
	.type	subtract_long_get_group_id_get_work_dim,@function
	.size	subtract_long_get_group_id_get_work_dim, subtract_long_get_group_id_get_work_dim_symend-subtract_long_get_group_id_get_work_dim
subtract_long_get_group_id_get_work_dim:
	s_clause 0x3                                               // 000000079900: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079904: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007990C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 000000079914: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007991C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000079924: CA240080 010200FF 000003FF
	s_lshl_b32 s7, s2, 1                                       // 000000079930: 84078102
	v_bfe_u32 v4, v0, 10, 10                                   // 000000079934: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007993C: D6100000 02292900
	s_waitcnt lgkmcnt(0)                                       // 000000079944: BF89FC07
	s_lshl_b32 s11, s4, 1                                      // 000000079948: 840B8104
	s_lshl_b32 s9, s3, 4                                       // 00000007994C: 84098403
	s_mov_b32 s33, 0                                           // 000000079950: BEA10080
	v_add3_u32 v2, s8, s7, v2                                  // 000000079954: D6550002 04080E08
	s_and_b32 s5, s5, 0xffff                                   // 00000007995C: 8B05FF05 0000FFFF
	v_add3_u32 v6, s6, s11, v0                                 // 000000079964: D6550006 04001606
	s_sub_i32 s2, s2, s5                                       // 00000007996C: 81820502
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000079970: BF8701C9
	v_dual_mov_b32 v3, v1 :: v_dual_mov_b32 v0, s2             // 000000079974: CA100101 03000002
	v_add3_u32 v4, s10, s9, v4                                 // 00000007997C: D6550004 0410120A
	s_sub_i32 s3, s3, s5                                       // 000000079984: 81830503
	v_mov_b32_e32 v5, v1                                       // 000000079988: 7E0A0301
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007998C: D73C0002 00020483
	s_sub_i32 s2, s4, s5                                       // 000000079994: 81820504
	v_mov_b32_e32 v7, v1                                       // 000000079998: 7E0E0301
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007999C: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000799A0: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000799A8: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000799AC: DC6E0000 007C0002
	v_mov_b32_e32 v0, s3                                       // 0000000799B4: 7E000203
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 0000000799B8: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000799C0: BF870111
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 0000000799C4: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 0000000799CC: 400A0A01
	global_store_b64 v[4:5], v[0:1], off                       // 0000000799D0: DC6E0000 007C0004
	v_mov_b32_e32 v0, s2                                       // 0000000799D8: 7E000202
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 0000000799DC: D73C0002 00020C83
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000799E4: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 0000000799E8: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 0000000799F0: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 0000000799F4: DC6E0000 007C0002
	s_nop 0                                                    // 0000000799FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079A00: BFB60003
	s_endpgm                                                   // 000000079A04: BFB00000
subtract_long_get_group_id_get_work_dim_symend:
	.long 0xbf800000                                           // 000000079A08: BF800000
	.long 0xbf800000                                           // 000000079A0C: BF800000
	.long 0xbf800000                                           // 000000079A10: BF800000
	.long 0xbf800000                                           // 000000079A14: BF800000
	.long 0xbf800000                                           // 000000079A18: BF800000
	.long 0xbf800000                                           // 000000079A1C: BF800000
	.long 0xbf800000                                           // 000000079A20: BF800000
	.long 0xbf800000                                           // 000000079A24: BF800000
	.long 0xbf800000                                           // 000000079A28: BF800000
	.long 0xbf800000                                           // 000000079A2C: BF800000
	.long 0xbf800000                                           // 000000079A30: BF800000
	.long 0xbf800000                                           // 000000079A34: BF800000
	.long 0xbf800000                                           // 000000079A38: BF800000
	.long 0xbf800000                                           // 000000079A3C: BF800000
	.long 0xbf800000                                           // 000000079A40: BF800000
	.long 0xbf800000                                           // 000000079A44: BF800000
	.long 0xbf800000                                           // 000000079A48: BF800000
	.long 0xbf800000                                           // 000000079A4C: BF800000
	.long 0xbf800000                                           // 000000079A50: BF800000
	.long 0xbf800000                                           // 000000079A54: BF800000
	.long 0xbf800000                                           // 000000079A58: BF800000
	.long 0xbf800000                                           // 000000079A5C: BF800000
	.long 0xbf800000                                           // 000000079A60: BF800000
	.long 0xbf800000                                           // 000000079A64: BF800000
	.long 0xbf800000                                           // 000000079A68: BF800000
	.long 0xbf800000                                           // 000000079A6C: BF800000
	.long 0xbf800000                                           // 000000079A70: BF800000
	.long 0xbf800000                                           // 000000079A74: BF800000
	.long 0xbf800000                                           // 000000079A78: BF800000
	.long 0xbf800000                                           // 000000079A7C: BF800000
	.long 0xbf800000                                           // 000000079A80: BF800000
	.long 0xbf800000                                           // 000000079A84: BF800000
	.long 0xbf800000                                           // 000000079A88: BF800000
	.long 0xbf800000                                           // 000000079A8C: BF800000
	.long 0xbf800000                                           // 000000079A90: BF800000
	.long 0xbf800000                                           // 000000079A94: BF800000
	.long 0xbf800000                                           // 000000079A98: BF800000
	.long 0xbf800000                                           // 000000079A9C: BF800000
	.long 0xbf800000                                           // 000000079AA0: BF800000
	.long 0xbf800000                                           // 000000079AA4: BF800000
	.long 0xbf800000                                           // 000000079AA8: BF800000
	.long 0xbf800000                                           // 000000079AAC: BF800000
	.long 0xbf800000                                           // 000000079AB0: BF800000
	.long 0xbf800000                                           // 000000079AB4: BF800000
	.long 0xbf800000                                           // 000000079AB8: BF800000
	.long 0xbf800000                                           // 000000079ABC: BF800000
	.long 0xbf800000                                           // 000000079AC0: BF800000
	.long 0xbf800000                                           // 000000079AC4: BF800000
	.long 0xbf800000                                           // 000000079AC8: BF800000
	.long 0xbf800000                                           // 000000079ACC: BF800000
	.long 0xbf800000                                           // 000000079AD0: BF800000
	.long 0xbf800000                                           // 000000079AD4: BF800000
	.long 0xbf800000                                           // 000000079AD8: BF800000
	.long 0xbf800000                                           // 000000079ADC: BF800000
	.long 0xbf800000                                           // 000000079AE0: BF800000
	.long 0xbf800000                                           // 000000079AE4: BF800000
	.long 0xbf800000                                           // 000000079AE8: BF800000
	.long 0xbf800000                                           // 000000079AEC: BF800000
	.long 0xbf800000                                           // 000000079AF0: BF800000
	.long 0xbf800000                                           // 000000079AF4: BF800000
	.long 0xbf800000                                           // 000000079AF8: BF800000
	.long 0xbf800000                                           // 000000079AFC: BF800000

	.p2align	8
	.type	subtract_long_get_local_size_get_work_dim,@function
	.size	subtract_long_get_local_size_get_work_dim, subtract_long_get_local_size_get_work_dim_symend-subtract_long_get_local_size_get_work_dim
subtract_long_get_local_size_get_work_dim:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000079B00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000079B08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000079B0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000079B10: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 000000079B14: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 000000079B18: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 000000079B1C: 840E8204
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000079B20: CA240080 010200FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000079B2C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079B34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000079B3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000079B40: BF8704D3
	v_mov_b32_e32 v3, v1                                       // 000000079B44: 7E060301
	v_mov_b32_e32 v5, v1                                       // 000000079B48: 7E0A0301
	v_mov_b32_e32 v7, v1                                       // 000000079B4C: 7E0E0301
	s_cmp_lt_u32 s2, s8                                        // 000000079B50: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000079B54: 9802928C
	s_add_u32 s6, s5, s2                                       // 000000079B58: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000079B5C: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000079B60: BF0A0903
	global_load_u16 v8, v1, s[6:7]                             // 000000079B64: DC4A0000 08060001
	s_cselect_b32 s2, 14, 20                                   // 000000079B6C: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 000000079B70: BF8704D9
	s_add_u32 s2, s5, s2                                       // 000000079B74: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000079B78: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000079B7C: BF0A0A04
	global_load_u16 v9, v1, s[2:3]                             // 000000079B80: DC4A0000 09020001
	s_cselect_b32 s2, 16, 22                                   // 000000079B88: 98029690
	s_add_u32 s2, s5, s2                                       // 000000079B8C: 80020205
	s_addc_u32 s3, s11, 0                                      // 000000079B90: 8203800B
	global_load_u16 v10, v1, s[2:3]                            // 000000079B94: DC4A0000 0A020001
	s_clause 0x3                                               // 000000079B9C: BF850003
	s_load_b32 s2, s[0:1], 0x50                                // 000000079BA0: F4000080 F8000050
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000079BA8: F4080100 F8000038
	s_load_b32 s3, s[0:1], 0x48                                // 000000079BB0: F40000C0 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079BB8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000079BC0: BF89FC07
	s_and_b32 s2, s2, 0xffff                                   // 000000079BC4: 8B02FF02 0000FFFF
	v_add3_u32 v2, s4, s12, v2                                 // 000000079BCC: D6550002 04081804
	v_add3_u32 v4, s6, s13, v4                                 // 000000079BD4: D6550004 04101A06
	v_add3_u32 v6, s3, s14, v0                                 // 000000079BDC: D6550006 04001C03
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000079BE4: BF870193
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079BE8: D73C0002 00020483
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000079BF0: D73C0004 00020883
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000079BF8: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079BFC: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079C04: 40060601
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000079C08: BF870213
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000079C0C: D7006A04 00020800
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000079C14: 400A0A01
	s_waitcnt vmcnt(2)                                         // 000000079C18: BF890BF7
	v_subrev_nc_u32_e32 v0, s2, v8                             // 000000079C1C: 4E001002
	global_store_b64 v[2:3], v[0:1], off                       // 000000079C20: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 000000079C28: D73C0002 00020C83
	s_waitcnt vmcnt(1)                                         // 000000079C30: BF8907F7
	v_subrev_nc_u32_e32 v0, s2, v9                             // 000000079C34: 4E001202
	s_delay_alu instid0(VALU_DEP_2)                            // 000000079C38: BF870002
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079C3C: D7006A02 00020400
	global_store_b64 v[4:5], v[0:1], off                       // 000000079C44: DC6E0000 007C0004
	s_waitcnt vmcnt(0)                                         // 000000079C4C: BF8903F7
	v_subrev_nc_u32_e32 v0, s2, v10                            // 000000079C50: 4E001402
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079C54: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079C58: DC6E0000 007C0002
	s_nop 0                                                    // 000000079C60: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079C64: BFB60003
	s_endpgm                                                   // 000000079C68: BFB00000
subtract_long_get_local_size_get_work_dim_symend:
	.long 0xbf800000                                           // 000000079C6C: BF800000
	.long 0xbf800000                                           // 000000079C70: BF800000
	.long 0xbf800000                                           // 000000079C74: BF800000
	.long 0xbf800000                                           // 000000079C78: BF800000
	.long 0xbf800000                                           // 000000079C7C: BF800000
	.long 0xbf800000                                           // 000000079C80: BF800000
	.long 0xbf800000                                           // 000000079C84: BF800000
	.long 0xbf800000                                           // 000000079C88: BF800000
	.long 0xbf800000                                           // 000000079C8C: BF800000
	.long 0xbf800000                                           // 000000079C90: BF800000
	.long 0xbf800000                                           // 000000079C94: BF800000
	.long 0xbf800000                                           // 000000079C98: BF800000
	.long 0xbf800000                                           // 000000079C9C: BF800000
	.long 0xbf800000                                           // 000000079CA0: BF800000
	.long 0xbf800000                                           // 000000079CA4: BF800000
	.long 0xbf800000                                           // 000000079CA8: BF800000
	.long 0xbf800000                                           // 000000079CAC: BF800000
	.long 0xbf800000                                           // 000000079CB0: BF800000
	.long 0xbf800000                                           // 000000079CB4: BF800000
	.long 0xbf800000                                           // 000000079CB8: BF800000
	.long 0xbf800000                                           // 000000079CBC: BF800000
	.long 0xbf800000                                           // 000000079CC0: BF800000
	.long 0xbf800000                                           // 000000079CC4: BF800000
	.long 0xbf800000                                           // 000000079CC8: BF800000
	.long 0xbf800000                                           // 000000079CCC: BF800000
	.long 0xbf800000                                           // 000000079CD0: BF800000
	.long 0xbf800000                                           // 000000079CD4: BF800000
	.long 0xbf800000                                           // 000000079CD8: BF800000
	.long 0xbf800000                                           // 000000079CDC: BF800000
	.long 0xbf800000                                           // 000000079CE0: BF800000
	.long 0xbf800000                                           // 000000079CE4: BF800000
	.long 0xbf800000                                           // 000000079CE8: BF800000
	.long 0xbf800000                                           // 000000079CEC: BF800000
	.long 0xbf800000                                           // 000000079CF0: BF800000
	.long 0xbf800000                                           // 000000079CF4: BF800000
	.long 0xbf800000                                           // 000000079CF8: BF800000
	.long 0xbf800000                                           // 000000079CFC: BF800000

	.p2align	8
	.type	subtract_long_get_global_id_get_work_dim,@function
	.size	subtract_long_get_global_id_get_work_dim, subtract_long_get_global_id_get_work_dim_symend-subtract_long_get_global_id_get_work_dim
subtract_long_get_global_id_get_work_dim:
	s_clause 0x3                                               // 000000079D00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000079D04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000079D0C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x50                                // 000000079D14: F4000180 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000079D1C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000079D24: D6100002 02291500
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 000000079D2C: CA240080 010400FF 000003FF
	v_bfe_u32 v6, v0, 20, 10                                   // 000000079D38: D6100006 02292900
	s_mov_b32 s33, 0                                           // 000000079D40: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000079D44: BF870193
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000079D48: D6560002 04090203
	v_mov_b32_e32 v3, v1                                       // 000000079D50: 7E060301
	v_lshl_or_b32 v0, s2, 1, v4                                // 000000079D54: D6560000 04110202
	v_mov_b32_e32 v5, v1                                       // 000000079D5C: 7E0A0301
	v_lshl_or_b32 v6, s4, 2, v6                                // 000000079D60: D6560006 04190404
	v_mov_b32_e32 v7, v1                                       // 000000079D68: 7E0E0301
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_4)// 000000079D6C: BF870254
	v_lshlrev_b64 v[8:9], 3, v[0:1]                            // 000000079D70: D73C0008 00020083
	s_waitcnt lgkmcnt(0)                                       // 000000079D78: BF89FC07
	v_add_nc_u32_e32 v4, s10, v2                               // 000000079D7C: 4A08040A
	v_add_nc_u32_e32 v6, s5, v6                                // 000000079D80: 4A0C0C05
	v_add_nc_u32_e32 v0, s8, v0                                // 000000079D84: 4A000008
	v_add_co_u32 v8, vcc_lo, s0, v8                            // 000000079D88: D7006A08 00021000
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_4) | instid1(VALU_DEP_4)// 000000079D90: BF870254
	v_lshlrev_b64 v[10:11], 3, v[4:5]                          // 000000079D94: D73C000A 00020883
	s_and_b32 s2, s6, 0xffff                                   // 000000079D9C: 8B02FF06 0000FFFF
	v_add_co_ci_u32_e32 v9, vcc_lo, s1, v9, vcc_lo             // 000000079DA4: 40121201
	v_subrev_nc_u32_e32 v2, s2, v0                             // 000000079DA8: 4E040002
	v_subrev_nc_u32_e32 v0, s2, v4                             // 000000079DAC: 4E000802
	v_add_co_u32 v4, vcc_lo, s0, v10                           // 000000079DB0: D7006A04 00021400
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v11, vcc_lo            // 000000079DB8: 400A1601
	v_lshlrev_b64 v[10:11], 3, v[6:7]                          // 000000079DBC: D73C000A 00020C83
	s_clause 0x1                                               // 000000079DC4: BF850001
	global_store_b64 v[8:9], v[2:3], off                       // 000000079DC8: DC6E0000 007C0208
	global_store_b64 v[4:5], v[0:1], off                       // 000000079DD0: DC6E0000 007C0004
	v_subrev_nc_u32_e32 v0, s2, v6                             // 000000079DD8: 4E000C02
	v_add_co_u32 v2, vcc_lo, s0, v10                           // 000000079DDC: D7006A02 00021400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v11, vcc_lo            // 000000079DE4: 40061601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079DE8: DC6E0000 007C0002
	s_nop 0                                                    // 000000079DF0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079DF4: BFB60003
	s_endpgm                                                   // 000000079DF8: BFB00000
subtract_long_get_global_id_get_work_dim_symend:
	.long 0xbf800000                                           // 000000079DFC: BF800000

	.p2align	8
	.type	subtract_long_get_global_size_get_work_dim,@function
	.size	subtract_long_get_global_size_get_work_dim, subtract_long_get_global_size_get_work_dim_symend-subtract_long_get_global_size_get_work_dim
subtract_long_get_global_size_get_work_dim:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000079E00: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 4                                       // 000000079E0C: 84028402
	v_bfe_u32 v4, v0, 10, 10                                   // 000000079E10: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000079E18: D6100000 02292900
	s_clause 0x1                                               // 000000079E20: BF850001
	global_load_b32 v8, v1, s[0:1] offset:34                   // 000000079E24: DC520022 08000001
	global_load_u16 v9, v1, s[0:1] offset:38                   // 000000079E2C: DC4A0026 09000001
	s_clause 0x4                                               // 000000079E34: BF850004
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000079E38: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x50                                // 000000079E40: F4000140 F8000050
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000079E48: F4080300 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 000000079E50: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000079E58: F4040000 F8000000
	v_mov_b32_e32 v3, v1                                       // 000000079E60: 7E060301
	s_lshl_b32 s4, s4, 1                                       // 000000079E64: 84048104
	s_lshl_b32 s3, s3, 1                                       // 000000079E68: 84038103
	s_mov_b32 s33, 0                                           // 000000079E6C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000079E70: BF89FC07
	s_lshl_b32 s7, s8, 4                                       // 000000079E74: 84078408
	s_lshl_b32 s8, s9, 1                                       // 000000079E78: 84088109
	v_add3_u32 v2, s12, s2, v2                                 // 000000079E7C: D6550002 0408040C
	v_add3_u32 v6, s6, s4, v0                                  // 000000079E84: D6550006 04000806
	v_add3_u32 v4, s14, s3, v4                                 // 000000079E8C: D6550004 0410060E
	s_and_b32 s3, s5, 0xffff                                   // 000000079E94: 8B03FF05 0000FFFF
	s_lshl_b32 s2, s10, 1                                      // 000000079E9C: 8402810A
	s_waitcnt vmcnt(1)                                         // 000000079EA0: BF8907F7
	v_and_b32_e32 v0, 0xffff, v8                               // 000000079EA4: 360010FF 0000FFFF
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 000000079EAC: D73C0002 00020483
	v_mov_b32_e32 v5, v1                                       // 000000079EB4: 7E0A0301
	v_lshrrev_b32_e32 v8, 16, v8                               // 000000079EB8: 32101090
	s_delay_alu instid0(VALU_DEP_4) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000079EBC: BF870214
	v_dual_mov_b32 v7, v1 :: v_dual_add_nc_u32 v0, s7, v0      // 000000079EC0: CA200101 07000007
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079EC8: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 000000079ED0: BF8701C3
	v_add_nc_u32_e32 v8, s8, v8                                // 000000079ED4: 4A101008
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 000000079ED8: D73C0004 00020883
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079EE0: 40060601
	v_subrev_nc_u32_e32 v0, s3, v0                             // 000000079EE4: 4E000003
	v_add_co_u32 v4, vcc_lo, s0, v4                            // 000000079EE8: D7006A04 00020800
	global_store_b64 v[2:3], v[0:1], off                       // 000000079EF0: DC6E0000 007C0002
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 000000079EF8: D73C0002 00020C83
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v5, vcc_lo             // 000000079F00: 400A0A01
	v_subrev_nc_u32_e32 v0, s3, v8                             // 000000079F04: 4E001003
	s_waitcnt vmcnt(0)                                         // 000000079F08: BF8903F7
	v_add_nc_u32_e32 v8, s2, v9                                // 000000079F0C: 4A101202
	s_delay_alu instid0(VALU_DEP_4)                            // 000000079F10: BF870004
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 000000079F14: D7006A02 00020400
	global_store_b64 v[4:5], v[0:1], off                       // 000000079F1C: DC6E0000 007C0004
	v_subrev_nc_u32_e32 v0, s3, v8                             // 000000079F24: 4E001003
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 000000079F28: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 000000079F2C: DC6E0000 007C0002
	s_nop 0                                                    // 000000079F34: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000079F38: BFB60003
	s_endpgm                                                   // 000000079F3C: BFB00000
subtract_long_get_global_size_get_work_dim_symend:
	.long 0xbf800000                                           // 000000079F40: BF800000
	.long 0xbf800000                                           // 000000079F44: BF800000
	.long 0xbf800000                                           // 000000079F48: BF800000
	.long 0xbf800000                                           // 000000079F4C: BF800000
	.long 0xbf800000                                           // 000000079F50: BF800000
	.long 0xbf800000                                           // 000000079F54: BF800000
	.long 0xbf800000                                           // 000000079F58: BF800000
	.long 0xbf800000                                           // 000000079F5C: BF800000
	.long 0xbf800000                                           // 000000079F60: BF800000
	.long 0xbf800000                                           // 000000079F64: BF800000
	.long 0xbf800000                                           // 000000079F68: BF800000
	.long 0xbf800000                                           // 000000079F6C: BF800000
	.long 0xbf800000                                           // 000000079F70: BF800000
	.long 0xbf800000                                           // 000000079F74: BF800000
	.long 0xbf800000                                           // 000000079F78: BF800000
	.long 0xbf800000                                           // 000000079F7C: BF800000
	.long 0xbf800000                                           // 000000079F80: BF800000
	.long 0xbf800000                                           // 000000079F84: BF800000
	.long 0xbf800000                                           // 000000079F88: BF800000
	.long 0xbf800000                                           // 000000079F8C: BF800000
	.long 0xbf800000                                           // 000000079F90: BF800000
	.long 0xbf800000                                           // 000000079F94: BF800000
	.long 0xbf800000                                           // 000000079F98: BF800000
	.long 0xbf800000                                           // 000000079F9C: BF800000
	.long 0xbf800000                                           // 000000079FA0: BF800000
	.long 0xbf800000                                           // 000000079FA4: BF800000
	.long 0xbf800000                                           // 000000079FA8: BF800000
	.long 0xbf800000                                           // 000000079FAC: BF800000
	.long 0xbf800000                                           // 000000079FB0: BF800000
	.long 0xbf800000                                           // 000000079FB4: BF800000
	.long 0xbf800000                                           // 000000079FB8: BF800000
	.long 0xbf800000                                           // 000000079FBC: BF800000
	.long 0xbf800000                                           // 000000079FC0: BF800000
	.long 0xbf800000                                           // 000000079FC4: BF800000
	.long 0xbf800000                                           // 000000079FC8: BF800000
	.long 0xbf800000                                           // 000000079FCC: BF800000
	.long 0xbf800000                                           // 000000079FD0: BF800000
	.long 0xbf800000                                           // 000000079FD4: BF800000
	.long 0xbf800000                                           // 000000079FD8: BF800000
	.long 0xbf800000                                           // 000000079FDC: BF800000
	.long 0xbf800000                                           // 000000079FE0: BF800000
	.long 0xbf800000                                           // 000000079FE4: BF800000
	.long 0xbf800000                                           // 000000079FE8: BF800000
	.long 0xbf800000                                           // 000000079FEC: BF800000
	.long 0xbf800000                                           // 000000079FF0: BF800000
	.long 0xbf800000                                           // 000000079FF4: BF800000
	.long 0xbf800000                                           // 000000079FF8: BF800000
	.long 0xbf800000                                           // 000000079FFC: BF800000

	.p2align	8
	.type	subtract_long_get_num_groups_get_work_dim,@function
	.size	subtract_long_get_num_groups_get_work_dim, subtract_long_get_num_groups_get_work_dim_symend-subtract_long_get_num_groups_get_work_dim
subtract_long_get_num_groups_get_work_dim:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v8, 0x3ff, v0       // 00000007A000: CA240080 010800FF 000003FF
	v_bfe_u32 v9, v0, 10, 10                                   // 00000007A00C: D6100009 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007A014: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007A01C: BEA10080
	s_clause 0x1                                               // 00000007A020: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007A024: DC520022 02000001
	global_load_u16 v4, v1, s[0:1] offset:38                   // 00000007A02C: DC4A0026 04000001
	s_clause 0x4                                               // 00000007A034: BF850004
	s_load_b32 s5, s[0:1], 0x48                                // 00000007A038: F4000140 F8000048
	s_load_b32 s16, s[0:1], 0x50                               // 00000007A040: F4000400 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007A048: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007A050: F4080300 F8000010
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007A058: F4040180 F8000008
	s_lshl_b32 s0, s4, 2                                       // 00000007A060: 84008204
	s_lshl_b32 s1, s2, 1                                       // 00000007A064: 84018102
	s_lshl_b32 s2, s3, 1                                       // 00000007A068: 84028103
	s_waitcnt lgkmcnt(0)                                       // 00000007A06C: BF89FC07
	v_add3_u32 v6, s5, s0, v0                                  // 00000007A070: D6550006 04000005
	s_waitcnt vmcnt(1)                                         // 00000007A078: BF8907F7
	v_lshrrev_b32_e32 v10, 16, v2                              // 00000007A07C: 32140490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007A080: 7C7A0480
	v_add3_u32 v2, s8, s1, v8                                  // 00000007A084: D6550002 04200208
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007A08C: BF870003
	v_cmp_ne_u16_e64 s0, 0, v10.l                              // 00000007A090: D43D0000 00021480
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A098: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007A09C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v4.l                           // 00000007A0A0: 7C7A0880
	s_addc_u32 s1, s12, 0                                      // 00000007A0A4: 8201800C
	v_add3_u32 v4, s10, s2, v9                                 // 00000007A0A8: D6550004 0424040A
	s_cmp_lg_u32 s0, 0                                         // 00000007A0B0: BF078000
	s_addc_u32 s0, s13, 0                                      // 00000007A0B4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007A0B8: BF07806A
	s_addc_u32 s2, s14, 0                                      // 00000007A0BC: 8202800E
	s_and_b32 s3, s16, 0xffff                                  // 00000007A0C0: 8B03FF10 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 00000007A0C8: BF870499
	s_sub_i32 s1, s1, s3                                       // 00000007A0CC: 81810301
	v_dual_mov_b32 v3, v1 :: v_dual_mov_b32 v0, s1             // 00000007A0D0: CA100101 03000001
	s_sub_i32 s0, s0, s3                                       // 00000007A0D8: 81800300
	v_mov_b32_e32 v5, v1                                       // 00000007A0DC: 7E0A0301
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A0E0: BF870092
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007A0E4: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 00000007A0EC: D7006A02 00020406
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007A0F4: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 00000007A0F8: 40060607
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A0FC: DC6E0000 007C0002
	v_mov_b32_e32 v0, s0                                       // 00000007A104: 7E000200
	v_lshlrev_b64 v[4:5], 3, v[4:5]                            // 00000007A108: D73C0004 00020883
	s_sub_i32 s0, s2, s3                                       // 00000007A110: 81800302
	v_mov_b32_e32 v7, v1                                       // 00000007A114: 7E0E0301
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007A118: BF870192
	v_add_co_u32 v4, vcc_lo, s6, v4                            // 00000007A11C: D7006A04 00020806
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo             // 00000007A124: 400A0A07
	global_store_b64 v[4:5], v[0:1], off                       // 00000007A128: DC6E0000 007C0004
	v_mov_b32_e32 v0, s0                                       // 00000007A130: 7E000200
	v_lshlrev_b64 v[2:3], 3, v[6:7]                            // 00000007A134: D73C0002 00020C83
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007A13C: BF870111
	v_add_co_u32 v2, vcc_lo, s6, v2                            // 00000007A140: D7006A02 00020406
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v3, vcc_lo             // 00000007A148: 40060607
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A14C: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A154: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A158: BFB60003
	s_endpgm                                                   // 00000007A15C: BFB00000
subtract_long_get_num_groups_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007A160: BF800000
	.long 0xbf800000                                           // 00000007A164: BF800000
	.long 0xbf800000                                           // 00000007A168: BF800000
	.long 0xbf800000                                           // 00000007A16C: BF800000
	.long 0xbf800000                                           // 00000007A170: BF800000
	.long 0xbf800000                                           // 00000007A174: BF800000
	.long 0xbf800000                                           // 00000007A178: BF800000
	.long 0xbf800000                                           // 00000007A17C: BF800000
	.long 0xbf800000                                           // 00000007A180: BF800000
	.long 0xbf800000                                           // 00000007A184: BF800000
	.long 0xbf800000                                           // 00000007A188: BF800000
	.long 0xbf800000                                           // 00000007A18C: BF800000
	.long 0xbf800000                                           // 00000007A190: BF800000
	.long 0xbf800000                                           // 00000007A194: BF800000
	.long 0xbf800000                                           // 00000007A198: BF800000
	.long 0xbf800000                                           // 00000007A19C: BF800000
	.long 0xbf800000                                           // 00000007A1A0: BF800000
	.long 0xbf800000                                           // 00000007A1A4: BF800000
	.long 0xbf800000                                           // 00000007A1A8: BF800000
	.long 0xbf800000                                           // 00000007A1AC: BF800000
	.long 0xbf800000                                           // 00000007A1B0: BF800000
	.long 0xbf800000                                           // 00000007A1B4: BF800000
	.long 0xbf800000                                           // 00000007A1B8: BF800000
	.long 0xbf800000                                           // 00000007A1BC: BF800000
	.long 0xbf800000                                           // 00000007A1C0: BF800000
	.long 0xbf800000                                           // 00000007A1C4: BF800000
	.long 0xbf800000                                           // 00000007A1C8: BF800000
	.long 0xbf800000                                           // 00000007A1CC: BF800000
	.long 0xbf800000                                           // 00000007A1D0: BF800000
	.long 0xbf800000                                           // 00000007A1D4: BF800000
	.long 0xbf800000                                           // 00000007A1D8: BF800000
	.long 0xbf800000                                           // 00000007A1DC: BF800000
	.long 0xbf800000                                           // 00000007A1E0: BF800000
	.long 0xbf800000                                           // 00000007A1E4: BF800000
	.long 0xbf800000                                           // 00000007A1E8: BF800000
	.long 0xbf800000                                           // 00000007A1EC: BF800000
	.long 0xbf800000                                           // 00000007A1F0: BF800000
	.long 0xbf800000                                           // 00000007A1F4: BF800000
	.long 0xbf800000                                           // 00000007A1F8: BF800000
	.long 0xbf800000                                           // 00000007A1FC: BF800000

	.p2align	8
	.type	subtract_long_get_work_dim_get_work_dim,@function
	.size	subtract_long_get_work_dim_get_work_dim, subtract_long_get_work_dim_get_work_dim_symend-subtract_long_get_work_dim_get_work_dim
subtract_long_get_work_dim_get_work_dim:
	s_clause 0x2                                               // 00000007A200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007A204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007A20C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A214: F4040000 F8000008
	v_dual_mov_b32 v2, 0 :: v_dual_and_b32 v1, 0x3ff, v0       // 00000007A21C: CA240080 020000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000007A228: 84028102
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007A22C: D6100005 02291500
	s_lshl_b32 s3, s3, 1                                       // 00000007A234: 84038103
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007A238: D6100000 02292900
	s_lshl_b32 s4, s4, 2                                       // 00000007A240: 84048204
	s_mov_b32 s33, 0                                           // 00000007A244: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007A248: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000007A24C: D6550001 04040408
	s_mov_b32 s2, 0                                            // 00000007A254: BE820080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 00000007A258: BF8704B1
	v_lshlrev_b64 v[3:4], 3, v[1:2]                            // 00000007A25C: D73C0003 00020283
	v_add3_u32 v1, s10, s3, v5                                 // 00000007A264: D6550001 0414060A
	s_mov_b32 s3, s2                                           // 00000007A26C: BE830002
	v_dual_mov_b32 v6, s3 :: v_dual_mov_b32 v5, s2             // 00000007A270: CA100003 06040002
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_3)// 00000007A278: BF8701C2
	v_lshlrev_b64 v[7:8], 3, v[1:2]                            // 00000007A27C: D73C0007 00020283
	v_add3_u32 v1, s5, s4, v0                                  // 00000007A284: D6550001 04000805
	v_add_co_u32 v3, vcc_lo, s0, v3                            // 00000007A28C: D7006A03 00020600
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo             // 00000007A294: 40080801
	v_lshlrev_b64 v[0:1], 3, v[1:2]                            // 00000007A298: D73C0000 00020283
	v_add_co_u32 v7, vcc_lo, s0, v7                            // 00000007A2A0: D7006A07 00020E00
	v_add_co_ci_u32_e32 v8, vcc_lo, s1, v8, vcc_lo             // 00000007A2A8: 40101001
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_4)// 00000007A2AC: BF870213
	v_add_co_u32 v0, vcc_lo, s0, v0                            // 00000007A2B0: D7006A00 00020000
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo             // 00000007A2B8: 40020201
	s_clause 0x2                                               // 00000007A2BC: BF850002
	global_store_b64 v[3:4], v[5:6], off                       // 00000007A2C0: DC6E0000 007C0503
	global_store_b64 v[7:8], v[5:6], off                       // 00000007A2C8: DC6E0000 007C0507
	global_store_b64 v[0:1], v[5:6], off                       // 00000007A2D0: DC6E0000 007C0500
	s_nop 0                                                    // 00000007A2D8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A2DC: BFB60003
	s_endpgm                                                   // 00000007A2E0: BFB00000
subtract_long_get_work_dim_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007A2E4: BF800000
	.long 0xbf800000                                           // 00000007A2E8: BF800000
	.long 0xbf800000                                           // 00000007A2EC: BF800000
	.long 0xbf800000                                           // 00000007A2F0: BF800000
	.long 0xbf800000                                           // 00000007A2F4: BF800000
	.long 0xbf800000                                           // 00000007A2F8: BF800000
	.long 0xbf800000                                           // 00000007A2FC: BF800000

	.p2align	8
	.type	subtract_long_x_64,@function
	.size	subtract_long_x_64, subtract_long_x_64_symend-subtract_long_x_64
subtract_long_x_64:
	s_clause 0x2                                               // 00000007A300: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 00000007A304: F40000C0 F8000038
	s_load_b32 s4, s[0:1], null                                // 00000007A30C: F4000100 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A314: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007A31C: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000007A324: 7E020280
	s_mov_b32 s33, 0                                           // 00000007A328: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007A32C: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A330: BF870091
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s3, v0      // 00000007A334: CA200101 03020003
	v_sub_nc_u32_e32 v0, s4, v2                                // 00000007A33C: 4C000404
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A340: BF870092
	v_lshlrev_b64 v[3:4], 3, v[2:3]                            // 00000007A344: D73C0003 00020483
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 00000007A34C: D7006A02 00020600
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007A354: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v4, vcc_lo             // 00000007A358: 40060801
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A35C: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A364: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A368: BFB60003
	s_endpgm                                                   // 00000007A36C: BFB00000
subtract_long_x_64_symend:
	.long 0xbf800000                                           // 00000007A370: BF800000
	.long 0xbf800000                                           // 00000007A374: BF800000
	.long 0xbf800000                                           // 00000007A378: BF800000
	.long 0xbf800000                                           // 00000007A37C: BF800000
	.long 0xbf800000                                           // 00000007A380: BF800000
	.long 0xbf800000                                           // 00000007A384: BF800000
	.long 0xbf800000                                           // 00000007A388: BF800000
	.long 0xbf800000                                           // 00000007A38C: BF800000
	.long 0xbf800000                                           // 00000007A390: BF800000
	.long 0xbf800000                                           // 00000007A394: BF800000
	.long 0xbf800000                                           // 00000007A398: BF800000
	.long 0xbf800000                                           // 00000007A39C: BF800000
	.long 0xbf800000                                           // 00000007A3A0: BF800000
	.long 0xbf800000                                           // 00000007A3A4: BF800000
	.long 0xbf800000                                           // 00000007A3A8: BF800000
	.long 0xbf800000                                           // 00000007A3AC: BF800000
	.long 0xbf800000                                           // 00000007A3B0: BF800000
	.long 0xbf800000                                           // 00000007A3B4: BF800000
	.long 0xbf800000                                           // 00000007A3B8: BF800000
	.long 0xbf800000                                           // 00000007A3BC: BF800000
	.long 0xbf800000                                           // 00000007A3C0: BF800000
	.long 0xbf800000                                           // 00000007A3C4: BF800000
	.long 0xbf800000                                           // 00000007A3C8: BF800000
	.long 0xbf800000                                           // 00000007A3CC: BF800000
	.long 0xbf800000                                           // 00000007A3D0: BF800000
	.long 0xbf800000                                           // 00000007A3D4: BF800000
	.long 0xbf800000                                           // 00000007A3D8: BF800000
	.long 0xbf800000                                           // 00000007A3DC: BF800000
	.long 0xbf800000                                           // 00000007A3E0: BF800000
	.long 0xbf800000                                           // 00000007A3E4: BF800000
	.long 0xbf800000                                           // 00000007A3E8: BF800000
	.long 0xbf800000                                           // 00000007A3EC: BF800000
	.long 0xbf800000                                           // 00000007A3F0: BF800000
	.long 0xbf800000                                           // 00000007A3F4: BF800000
	.long 0xbf800000                                           // 00000007A3F8: BF800000
	.long 0xbf800000                                           // 00000007A3FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_offset_64,@function
	.size	subtract_long_get_global_offset_64, subtract_long_get_global_offset_64_symend-subtract_long_get_global_offset_64
subtract_long_get_global_offset_64:
	s_clause 0x1                                               // 00000007A400: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000007A404: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A40C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007A414: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000007A41C: 7E020280
	s_mov_b32 s33, 0                                           // 00000007A420: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007A424: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007A428: BF870121
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s3, v0      // 00000007A42C: CA200101 03020003
	v_sub_nc_u32_e32 v0, 0, v0                                 // 00000007A434: 4C000080
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007A438: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007A440: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007A444: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007A44C: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A450: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A458: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A45C: BFB60003
	s_endpgm                                                   // 00000007A460: BFB00000
subtract_long_get_global_offset_64_symend:
	.long 0xbf800000                                           // 00000007A464: BF800000
	.long 0xbf800000                                           // 00000007A468: BF800000
	.long 0xbf800000                                           // 00000007A46C: BF800000
	.long 0xbf800000                                           // 00000007A470: BF800000
	.long 0xbf800000                                           // 00000007A474: BF800000
	.long 0xbf800000                                           // 00000007A478: BF800000
	.long 0xbf800000                                           // 00000007A47C: BF800000
	.long 0xbf800000                                           // 00000007A480: BF800000
	.long 0xbf800000                                           // 00000007A484: BF800000
	.long 0xbf800000                                           // 00000007A488: BF800000
	.long 0xbf800000                                           // 00000007A48C: BF800000
	.long 0xbf800000                                           // 00000007A490: BF800000
	.long 0xbf800000                                           // 00000007A494: BF800000
	.long 0xbf800000                                           // 00000007A498: BF800000
	.long 0xbf800000                                           // 00000007A49C: BF800000
	.long 0xbf800000                                           // 00000007A4A0: BF800000
	.long 0xbf800000                                           // 00000007A4A4: BF800000
	.long 0xbf800000                                           // 00000007A4A8: BF800000
	.long 0xbf800000                                           // 00000007A4AC: BF800000
	.long 0xbf800000                                           // 00000007A4B0: BF800000
	.long 0xbf800000                                           // 00000007A4B4: BF800000
	.long 0xbf800000                                           // 00000007A4B8: BF800000
	.long 0xbf800000                                           // 00000007A4BC: BF800000
	.long 0xbf800000                                           // 00000007A4C0: BF800000
	.long 0xbf800000                                           // 00000007A4C4: BF800000
	.long 0xbf800000                                           // 00000007A4C8: BF800000
	.long 0xbf800000                                           // 00000007A4CC: BF800000
	.long 0xbf800000                                           // 00000007A4D0: BF800000
	.long 0xbf800000                                           // 00000007A4D4: BF800000
	.long 0xbf800000                                           // 00000007A4D8: BF800000
	.long 0xbf800000                                           // 00000007A4DC: BF800000
	.long 0xbf800000                                           // 00000007A4E0: BF800000
	.long 0xbf800000                                           // 00000007A4E4: BF800000
	.long 0xbf800000                                           // 00000007A4E8: BF800000
	.long 0xbf800000                                           // 00000007A4EC: BF800000
	.long 0xbf800000                                           // 00000007A4F0: BF800000
	.long 0xbf800000                                           // 00000007A4F4: BF800000
	.long 0xbf800000                                           // 00000007A4F8: BF800000
	.long 0xbf800000                                           // 00000007A4FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_id_64,@function
	.size	subtract_long_get_local_id_64, subtract_long_get_local_id_64_symend-subtract_long_get_local_id_64
subtract_long_get_local_id_64:
	s_clause 0x1                                               // 00000007A500: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000007A504: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A50C: F4040000 F8000008
	v_lshl_or_b32 v2, s2, 6, v0                                // 00000007A514: D6560002 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000007A51C: 7E020280
	s_mov_b32 s33, 0                                           // 00000007A520: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007A524: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A528: BF870091
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s3, v2      // 00000007A52C: CA200101 03020403
	v_sub_nc_u32_e32 v0, v0, v2                                // 00000007A534: 4C000500
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A538: BF870092
	v_lshlrev_b64 v[3:4], 3, v[2:3]                            // 00000007A53C: D73C0003 00020483
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 00000007A544: D7006A02 00020600
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007A54C: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v4, vcc_lo             // 00000007A550: 40060801
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A554: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A55C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A560: BFB60003
	s_endpgm                                                   // 00000007A564: BFB00000
subtract_long_get_local_id_64_symend:
	.long 0xbf800000                                           // 00000007A568: BF800000
	.long 0xbf800000                                           // 00000007A56C: BF800000
	.long 0xbf800000                                           // 00000007A570: BF800000
	.long 0xbf800000                                           // 00000007A574: BF800000
	.long 0xbf800000                                           // 00000007A578: BF800000
	.long 0xbf800000                                           // 00000007A57C: BF800000
	.long 0xbf800000                                           // 00000007A580: BF800000
	.long 0xbf800000                                           // 00000007A584: BF800000
	.long 0xbf800000                                           // 00000007A588: BF800000
	.long 0xbf800000                                           // 00000007A58C: BF800000
	.long 0xbf800000                                           // 00000007A590: BF800000
	.long 0xbf800000                                           // 00000007A594: BF800000
	.long 0xbf800000                                           // 00000007A598: BF800000
	.long 0xbf800000                                           // 00000007A59C: BF800000
	.long 0xbf800000                                           // 00000007A5A0: BF800000
	.long 0xbf800000                                           // 00000007A5A4: BF800000
	.long 0xbf800000                                           // 00000007A5A8: BF800000
	.long 0xbf800000                                           // 00000007A5AC: BF800000
	.long 0xbf800000                                           // 00000007A5B0: BF800000
	.long 0xbf800000                                           // 00000007A5B4: BF800000
	.long 0xbf800000                                           // 00000007A5B8: BF800000
	.long 0xbf800000                                           // 00000007A5BC: BF800000
	.long 0xbf800000                                           // 00000007A5C0: BF800000
	.long 0xbf800000                                           // 00000007A5C4: BF800000
	.long 0xbf800000                                           // 00000007A5C8: BF800000
	.long 0xbf800000                                           // 00000007A5CC: BF800000
	.long 0xbf800000                                           // 00000007A5D0: BF800000
	.long 0xbf800000                                           // 00000007A5D4: BF800000
	.long 0xbf800000                                           // 00000007A5D8: BF800000
	.long 0xbf800000                                           // 00000007A5DC: BF800000
	.long 0xbf800000                                           // 00000007A5E0: BF800000
	.long 0xbf800000                                           // 00000007A5E4: BF800000
	.long 0xbf800000                                           // 00000007A5E8: BF800000
	.long 0xbf800000                                           // 00000007A5EC: BF800000
	.long 0xbf800000                                           // 00000007A5F0: BF800000
	.long 0xbf800000                                           // 00000007A5F4: BF800000
	.long 0xbf800000                                           // 00000007A5F8: BF800000
	.long 0xbf800000                                           // 00000007A5FC: BF800000

	.p2align	8
	.type	subtract_long_get_group_id_64,@function
	.size	subtract_long_get_group_id_64, subtract_long_get_group_id_64_symend-subtract_long_get_group_id_64
subtract_long_get_group_id_64:
	s_clause 0x1                                               // 00000007A600: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000007A604: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A60C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007A614: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000007A61C: 7E020280
	s_mov_b32 s33, 0                                           // 00000007A620: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007A624: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A628: BF870091
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s3, v0      // 00000007A62C: CA200101 03020003
	v_sub_nc_u32_e32 v0, s2, v2                                // 00000007A634: 4C000402
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A638: BF870092
	v_lshlrev_b64 v[3:4], 3, v[2:3]                            // 00000007A63C: D73C0003 00020483
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 00000007A644: D7006A02 00020600
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007A64C: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v4, vcc_lo             // 00000007A650: 40060801
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A654: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A65C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A660: BFB60003
	s_endpgm                                                   // 00000007A664: BFB00000
subtract_long_get_group_id_64_symend:
	.long 0xbf800000                                           // 00000007A668: BF800000
	.long 0xbf800000                                           // 00000007A66C: BF800000
	.long 0xbf800000                                           // 00000007A670: BF800000
	.long 0xbf800000                                           // 00000007A674: BF800000
	.long 0xbf800000                                           // 00000007A678: BF800000
	.long 0xbf800000                                           // 00000007A67C: BF800000
	.long 0xbf800000                                           // 00000007A680: BF800000
	.long 0xbf800000                                           // 00000007A684: BF800000
	.long 0xbf800000                                           // 00000007A688: BF800000
	.long 0xbf800000                                           // 00000007A68C: BF800000
	.long 0xbf800000                                           // 00000007A690: BF800000
	.long 0xbf800000                                           // 00000007A694: BF800000
	.long 0xbf800000                                           // 00000007A698: BF800000
	.long 0xbf800000                                           // 00000007A69C: BF800000
	.long 0xbf800000                                           // 00000007A6A0: BF800000
	.long 0xbf800000                                           // 00000007A6A4: BF800000
	.long 0xbf800000                                           // 00000007A6A8: BF800000
	.long 0xbf800000                                           // 00000007A6AC: BF800000
	.long 0xbf800000                                           // 00000007A6B0: BF800000
	.long 0xbf800000                                           // 00000007A6B4: BF800000
	.long 0xbf800000                                           // 00000007A6B8: BF800000
	.long 0xbf800000                                           // 00000007A6BC: BF800000
	.long 0xbf800000                                           // 00000007A6C0: BF800000
	.long 0xbf800000                                           // 00000007A6C4: BF800000
	.long 0xbf800000                                           // 00000007A6C8: BF800000
	.long 0xbf800000                                           // 00000007A6CC: BF800000
	.long 0xbf800000                                           // 00000007A6D0: BF800000
	.long 0xbf800000                                           // 00000007A6D4: BF800000
	.long 0xbf800000                                           // 00000007A6D8: BF800000
	.long 0xbf800000                                           // 00000007A6DC: BF800000
	.long 0xbf800000                                           // 00000007A6E0: BF800000
	.long 0xbf800000                                           // 00000007A6E4: BF800000
	.long 0xbf800000                                           // 00000007A6E8: BF800000
	.long 0xbf800000                                           // 00000007A6EC: BF800000
	.long 0xbf800000                                           // 00000007A6F0: BF800000
	.long 0xbf800000                                           // 00000007A6F4: BF800000
	.long 0xbf800000                                           // 00000007A6F8: BF800000
	.long 0xbf800000                                           // 00000007A6FC: BF800000

	.p2align	8
	.type	subtract_long_get_local_size_64,@function
	.size	subtract_long_get_local_size_64, subtract_long_get_local_size_64_symend-subtract_long_get_local_size_64
subtract_long_get_local_size_64:
	s_clause 0x1                                               // 00000007A700: BF850001
	s_load_b32 s3, s[0:1], 0x10                                // 00000007A704: F40000C0 F8000010
	s_load_b32 s6, s[0:1], 0x38                                // 00000007A70C: F4000180 F8000038
	s_add_u32 s4, s0, 16                                       // 00000007A714: 80049000
	s_addc_u32 s5, s1, 0                                       // 00000007A718: 82058001
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007A71C: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000007A724: 7E020280
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A728: F4040000 F8000008
	s_mov_b32 s33, 0                                           // 00000007A730: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007A734: BF89FC07
	s_cmp_lt_u32 s2, s3                                        // 00000007A738: BF0A0302
	v_add_nc_u32_e32 v2, s6, v0                                // 00000007A73C: 4A040006
	s_cselect_b32 s3, 12, 18                                   // 00000007A740: 9803928C
	v_mov_b32_e32 v3, v1                                       // 00000007A744: 7E060301
	s_add_u32 s4, s4, s3                                       // 00000007A748: 80040304
	s_addc_u32 s5, s5, 0                                       // 00000007A74C: 82058005
	global_load_u16 v5, v1, s[4:5]                             // 00000007A750: DC4A0000 05040001
	v_lshlrev_b64 v[3:4], 3, v[2:3]                            // 00000007A758: D73C0003 00020483
	s_waitcnt vmcnt(0)                                         // 00000007A760: BF8903F7
	v_sub_nc_u32_e32 v0, v5, v2                                // 00000007A764: 4C000505
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007A768: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 00000007A76C: D7006A02 00020600
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v4, vcc_lo             // 00000007A774: 40060801
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A778: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A780: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A784: BFB60003
	s_endpgm                                                   // 00000007A788: BFB00000
subtract_long_get_local_size_64_symend:
	.long 0xbf800000                                           // 00000007A78C: BF800000
	.long 0xbf800000                                           // 00000007A790: BF800000
	.long 0xbf800000                                           // 00000007A794: BF800000
	.long 0xbf800000                                           // 00000007A798: BF800000
	.long 0xbf800000                                           // 00000007A79C: BF800000
	.long 0xbf800000                                           // 00000007A7A0: BF800000
	.long 0xbf800000                                           // 00000007A7A4: BF800000
	.long 0xbf800000                                           // 00000007A7A8: BF800000
	.long 0xbf800000                                           // 00000007A7AC: BF800000
	.long 0xbf800000                                           // 00000007A7B0: BF800000
	.long 0xbf800000                                           // 00000007A7B4: BF800000
	.long 0xbf800000                                           // 00000007A7B8: BF800000
	.long 0xbf800000                                           // 00000007A7BC: BF800000
	.long 0xbf800000                                           // 00000007A7C0: BF800000
	.long 0xbf800000                                           // 00000007A7C4: BF800000
	.long 0xbf800000                                           // 00000007A7C8: BF800000
	.long 0xbf800000                                           // 00000007A7CC: BF800000
	.long 0xbf800000                                           // 00000007A7D0: BF800000
	.long 0xbf800000                                           // 00000007A7D4: BF800000
	.long 0xbf800000                                           // 00000007A7D8: BF800000
	.long 0xbf800000                                           // 00000007A7DC: BF800000
	.long 0xbf800000                                           // 00000007A7E0: BF800000
	.long 0xbf800000                                           // 00000007A7E4: BF800000
	.long 0xbf800000                                           // 00000007A7E8: BF800000
	.long 0xbf800000                                           // 00000007A7EC: BF800000
	.long 0xbf800000                                           // 00000007A7F0: BF800000
	.long 0xbf800000                                           // 00000007A7F4: BF800000
	.long 0xbf800000                                           // 00000007A7F8: BF800000
	.long 0xbf800000                                           // 00000007A7FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_id_64,@function
	.size	subtract_long_get_global_id_64, subtract_long_get_global_id_64_symend-subtract_long_get_global_id_64
subtract_long_get_global_id_64:
	s_clause 0x1                                               // 00000007A800: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000007A804: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A80C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 00000007A814: 84028602
	v_mov_b32_e32 v1, 0                                        // 00000007A818: 7E020280
	s_mov_b32 s33, 0                                           // 00000007A81C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007A820: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 00000007A824: D6550000 04000403
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007A82C: BF870121
	v_lshlrev_b64 v[2:3], 3, v[0:1]                            // 00000007A830: D73C0002 00020083
	v_mov_b32_e32 v0, v1                                       // 00000007A838: 7E000301
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007A83C: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007A844: BF870003
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007A848: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A84C: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A854: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A858: BFB60003
	s_endpgm                                                   // 00000007A85C: BFB00000
subtract_long_get_global_id_64_symend:
	.long 0xbf800000                                           // 00000007A860: BF800000
	.long 0xbf800000                                           // 00000007A864: BF800000
	.long 0xbf800000                                           // 00000007A868: BF800000
	.long 0xbf800000                                           // 00000007A86C: BF800000
	.long 0xbf800000                                           // 00000007A870: BF800000
	.long 0xbf800000                                           // 00000007A874: BF800000
	.long 0xbf800000                                           // 00000007A878: BF800000
	.long 0xbf800000                                           // 00000007A87C: BF800000
	.long 0xbf800000                                           // 00000007A880: BF800000
	.long 0xbf800000                                           // 00000007A884: BF800000
	.long 0xbf800000                                           // 00000007A888: BF800000
	.long 0xbf800000                                           // 00000007A88C: BF800000
	.long 0xbf800000                                           // 00000007A890: BF800000
	.long 0xbf800000                                           // 00000007A894: BF800000
	.long 0xbf800000                                           // 00000007A898: BF800000
	.long 0xbf800000                                           // 00000007A89C: BF800000
	.long 0xbf800000                                           // 00000007A8A0: BF800000
	.long 0xbf800000                                           // 00000007A8A4: BF800000
	.long 0xbf800000                                           // 00000007A8A8: BF800000
	.long 0xbf800000                                           // 00000007A8AC: BF800000
	.long 0xbf800000                                           // 00000007A8B0: BF800000
	.long 0xbf800000                                           // 00000007A8B4: BF800000
	.long 0xbf800000                                           // 00000007A8B8: BF800000
	.long 0xbf800000                                           // 00000007A8BC: BF800000
	.long 0xbf800000                                           // 00000007A8C0: BF800000
	.long 0xbf800000                                           // 00000007A8C4: BF800000
	.long 0xbf800000                                           // 00000007A8C8: BF800000
	.long 0xbf800000                                           // 00000007A8CC: BF800000
	.long 0xbf800000                                           // 00000007A8D0: BF800000
	.long 0xbf800000                                           // 00000007A8D4: BF800000
	.long 0xbf800000                                           // 00000007A8D8: BF800000
	.long 0xbf800000                                           // 00000007A8DC: BF800000
	.long 0xbf800000                                           // 00000007A8E0: BF800000
	.long 0xbf800000                                           // 00000007A8E4: BF800000
	.long 0xbf800000                                           // 00000007A8E8: BF800000
	.long 0xbf800000                                           // 00000007A8EC: BF800000
	.long 0xbf800000                                           // 00000007A8F0: BF800000
	.long 0xbf800000                                           // 00000007A8F4: BF800000
	.long 0xbf800000                                           // 00000007A8F8: BF800000
	.long 0xbf800000                                           // 00000007A8FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_size_64,@function
	.size	subtract_long_get_global_size_64, subtract_long_get_global_size_64_symend-subtract_long_get_global_size_64
subtract_long_get_global_size_64:
	s_clause 0x3                                               // 00000007A900: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 00000007A904: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x10                                // 00000007A90C: F4000100 F8000010
	s_load_b32 s5, s[0:1], 0x20                                // 00000007A914: F4000140 F8000020
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007A91C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007A924: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000007A92C: 7E020280
	s_mov_b32 s33, 0                                           // 00000007A930: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007A934: BF89FC07
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007A938: BF870002
	v_add_nc_u32_e32 v2, s3, v0                                // 00000007A93C: 4A040003
	s_lshl_b32 s2, s4, 6                                       // 00000007A940: 84028604
	s_delay_alu instid0(VALU_DEP_1) | instid1(SALU_CYCLE_1)    // 00000007A944: BF870481
	v_sub_nc_u32_e32 v0, s2, v2                                // 00000007A948: 4C000402
	s_lshr_b32 s2, s5, 16                                      // 00000007A94C: 85029005
	s_delay_alu instid0(VALU_DEP_1) | instid1(SALU_CYCLE_1)    // 00000007A950: BF870481
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v0, s2, v0      // 00000007A954: CA200101 03000002
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007A95C: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007A960: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007A968: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007A970: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007A974: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007A978: DC6E0000 007C0002
	s_nop 0                                                    // 00000007A980: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007A984: BFB60003
	s_endpgm                                                   // 00000007A988: BFB00000
subtract_long_get_global_size_64_symend:
	.long 0xbf800000                                           // 00000007A98C: BF800000
	.long 0xbf800000                                           // 00000007A990: BF800000
	.long 0xbf800000                                           // 00000007A994: BF800000
	.long 0xbf800000                                           // 00000007A998: BF800000
	.long 0xbf800000                                           // 00000007A99C: BF800000
	.long 0xbf800000                                           // 00000007A9A0: BF800000
	.long 0xbf800000                                           // 00000007A9A4: BF800000
	.long 0xbf800000                                           // 00000007A9A8: BF800000
	.long 0xbf800000                                           // 00000007A9AC: BF800000
	.long 0xbf800000                                           // 00000007A9B0: BF800000
	.long 0xbf800000                                           // 00000007A9B4: BF800000
	.long 0xbf800000                                           // 00000007A9B8: BF800000
	.long 0xbf800000                                           // 00000007A9BC: BF800000
	.long 0xbf800000                                           // 00000007A9C0: BF800000
	.long 0xbf800000                                           // 00000007A9C4: BF800000
	.long 0xbf800000                                           // 00000007A9C8: BF800000
	.long 0xbf800000                                           // 00000007A9CC: BF800000
	.long 0xbf800000                                           // 00000007A9D0: BF800000
	.long 0xbf800000                                           // 00000007A9D4: BF800000
	.long 0xbf800000                                           // 00000007A9D8: BF800000
	.long 0xbf800000                                           // 00000007A9DC: BF800000
	.long 0xbf800000                                           // 00000007A9E0: BF800000
	.long 0xbf800000                                           // 00000007A9E4: BF800000
	.long 0xbf800000                                           // 00000007A9E8: BF800000
	.long 0xbf800000                                           // 00000007A9EC: BF800000
	.long 0xbf800000                                           // 00000007A9F0: BF800000
	.long 0xbf800000                                           // 00000007A9F4: BF800000
	.long 0xbf800000                                           // 00000007A9F8: BF800000
	.long 0xbf800000                                           // 00000007A9FC: BF800000

	.p2align	8
	.type	subtract_long_get_num_groups_64,@function
	.size	subtract_long_get_num_groups_64, subtract_long_get_num_groups_64_symend-subtract_long_get_num_groups_64
subtract_long_get_num_groups_64:
	s_clause 0x3                                               // 00000007AA00: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 00000007AA04: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x20                                // 00000007AA0C: F4000100 F8000020
	s_load_b32 s5, s[0:1], 0x10                                // 00000007AA14: F4000140 F8000010
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007AA1C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007AA24: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000007AA2C: 7E020280
	s_mov_b32 s33, 0                                           // 00000007AA30: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007AA34: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007AA38: BF8704A1
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s3, v0      // 00000007AA3C: CA200101 03020003
	s_lshr_b32 s2, s4, 16                                      // 00000007AA44: 85029004
	v_cmp_ne_u16_e64 vcc_lo, s2, 0                             // 00000007AA48: D43D006A 00010002
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007AA50: BF870192
	v_sub_nc_u32_e32 v0, s5, v2                                // 00000007AA54: 4C000405
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007AA58: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007AA60: BF870112
	v_add_co_ci_u32_e32 v0, vcc_lo, 0, v0, vcc_lo              // 00000007AA64: 40000080
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007AA68: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007AA70: BF870003
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007AA74: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007AA78: DC6E0000 007C0002
	s_nop 0                                                    // 00000007AA80: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AA84: BFB60003
	s_endpgm                                                   // 00000007AA88: BFB00000
subtract_long_get_num_groups_64_symend:
	.long 0xbf800000                                           // 00000007AA8C: BF800000
	.long 0xbf800000                                           // 00000007AA90: BF800000
	.long 0xbf800000                                           // 00000007AA94: BF800000
	.long 0xbf800000                                           // 00000007AA98: BF800000
	.long 0xbf800000                                           // 00000007AA9C: BF800000
	.long 0xbf800000                                           // 00000007AAA0: BF800000
	.long 0xbf800000                                           // 00000007AAA4: BF800000
	.long 0xbf800000                                           // 00000007AAA8: BF800000
	.long 0xbf800000                                           // 00000007AAAC: BF800000
	.long 0xbf800000                                           // 00000007AAB0: BF800000
	.long 0xbf800000                                           // 00000007AAB4: BF800000
	.long 0xbf800000                                           // 00000007AAB8: BF800000
	.long 0xbf800000                                           // 00000007AABC: BF800000
	.long 0xbf800000                                           // 00000007AAC0: BF800000
	.long 0xbf800000                                           // 00000007AAC4: BF800000
	.long 0xbf800000                                           // 00000007AAC8: BF800000
	.long 0xbf800000                                           // 00000007AACC: BF800000
	.long 0xbf800000                                           // 00000007AAD0: BF800000
	.long 0xbf800000                                           // 00000007AAD4: BF800000
	.long 0xbf800000                                           // 00000007AAD8: BF800000
	.long 0xbf800000                                           // 00000007AADC: BF800000
	.long 0xbf800000                                           // 00000007AAE0: BF800000
	.long 0xbf800000                                           // 00000007AAE4: BF800000
	.long 0xbf800000                                           // 00000007AAE8: BF800000
	.long 0xbf800000                                           // 00000007AAEC: BF800000
	.long 0xbf800000                                           // 00000007AAF0: BF800000
	.long 0xbf800000                                           // 00000007AAF4: BF800000
	.long 0xbf800000                                           // 00000007AAF8: BF800000
	.long 0xbf800000                                           // 00000007AAFC: BF800000

	.p2align	8
	.type	subtract_long_get_work_dim,@function
	.size	subtract_long_get_work_dim, subtract_long_get_work_dim_symend-subtract_long_get_work_dim
subtract_long_get_work_dim:
	s_clause 0x2                                               // 00000007AB00: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 00000007AB04: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x50                                // 00000007AB0C: F4000100 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007AB14: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000007AB1C: D6560000 04010C02
	v_mov_b32_e32 v1, 0                                        // 00000007AB24: 7E020280
	s_mov_b32 s33, 0                                           // 00000007AB28: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007AB2C: BF89FC07
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007AB30: BF870001
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v2, s3, v0      // 00000007AB34: CA200101 03020003
	s_and_b32 s2, s4, 0xffff                                   // 00000007AB3C: 8B02FF04 0000FFFF
	s_delay_alu instid0(VALU_DEP_1) | instid1(SALU_CYCLE_1)    // 00000007AB44: BF870481
	v_sub_nc_u32_e32 v0, s2, v2                                // 00000007AB48: 4C000402
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007AB4C: BF870092
	v_lshlrev_b64 v[3:4], 3, v[2:3]                            // 00000007AB50: D73C0003 00020483
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 00000007AB58: D7006A02 00020600
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007AB60: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v4, vcc_lo             // 00000007AB64: 40060801
	global_store_b64 v[2:3], v[0:1], off                       // 00000007AB68: DC6E0000 007C0002
	s_nop 0                                                    // 00000007AB70: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AB74: BFB60003
	s_endpgm                                                   // 00000007AB78: BFB00000
subtract_long_get_work_dim_symend:
	.long 0xbf800000                                           // 00000007AB7C: BF800000
	.long 0xbf800000                                           // 00000007AB80: BF800000
	.long 0xbf800000                                           // 00000007AB84: BF800000
	.long 0xbf800000                                           // 00000007AB88: BF800000
	.long 0xbf800000                                           // 00000007AB8C: BF800000
	.long 0xbf800000                                           // 00000007AB90: BF800000
	.long 0xbf800000                                           // 00000007AB94: BF800000
	.long 0xbf800000                                           // 00000007AB98: BF800000
	.long 0xbf800000                                           // 00000007AB9C: BF800000
	.long 0xbf800000                                           // 00000007ABA0: BF800000
	.long 0xbf800000                                           // 00000007ABA4: BF800000
	.long 0xbf800000                                           // 00000007ABA8: BF800000
	.long 0xbf800000                                           // 00000007ABAC: BF800000
	.long 0xbf800000                                           // 00000007ABB0: BF800000
	.long 0xbf800000                                           // 00000007ABB4: BF800000
	.long 0xbf800000                                           // 00000007ABB8: BF800000
	.long 0xbf800000                                           // 00000007ABBC: BF800000
	.long 0xbf800000                                           // 00000007ABC0: BF800000
	.long 0xbf800000                                           // 00000007ABC4: BF800000
	.long 0xbf800000                                           // 00000007ABC8: BF800000
	.long 0xbf800000                                           // 00000007ABCC: BF800000
	.long 0xbf800000                                           // 00000007ABD0: BF800000
	.long 0xbf800000                                           // 00000007ABD4: BF800000
	.long 0xbf800000                                           // 00000007ABD8: BF800000
	.long 0xbf800000                                           // 00000007ABDC: BF800000
	.long 0xbf800000                                           // 00000007ABE0: BF800000
	.long 0xbf800000                                           // 00000007ABE4: BF800000
	.long 0xbf800000                                           // 00000007ABE8: BF800000
	.long 0xbf800000                                           // 00000007ABEC: BF800000
	.long 0xbf800000                                           // 00000007ABF0: BF800000
	.long 0xbf800000                                           // 00000007ABF4: BF800000
	.long 0xbf800000                                           // 00000007ABF8: BF800000
	.long 0xbf800000                                           // 00000007ABFC: BF800000

	.p2align	8
	.type	subtract_long_x_8_8,@function
	.size	subtract_long_x_8_8, subtract_long_x_8_8_symend-subtract_long_x_8_8
subtract_long_x_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007AC00: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 00000007AC08: BF89FC07
	s_clause 0x1                                               // 00000007AC0C: BF850001
	s_load_b32 s5, s[0:1], null                                // 00000007AC10: F4000140 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007AC18: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007AC20: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000007AC2C: 84028302
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007AC30: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000007AC38: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 00000007AC3C: BF8704B2
	v_mov_b32_e32 v3, v1                                       // 00000007AC40: 7E060301
	v_add3_u32 v2, s4, s2, v2                                  // 00000007AC44: D6550002 04080404
	s_lshl_b32 s2, s3, 3                                       // 00000007AC4C: 84028303
	v_add3_u32 v0, s2, s6, v0                                  // 00000007AC50: D6550000 04000C02
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007AC58: BF870122
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007AC5C: D73C0002 00020483
	s_waitcnt lgkmcnt(0)                                       // 00000007AC64: BF89FC07
	v_sub_nc_u32_e32 v0, s5, v0                                // 00000007AC68: 4C000005
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007AC6C: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007AC70: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007AC78: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007AC7C: DC6E0000 007C0002
	s_nop 0                                                    // 00000007AC84: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AC88: BFB60003
	s_endpgm                                                   // 00000007AC8C: BFB00000
subtract_long_x_8_8_symend:
	.long 0xbf800000                                           // 00000007AC90: BF800000
	.long 0xbf800000                                           // 00000007AC94: BF800000
	.long 0xbf800000                                           // 00000007AC98: BF800000
	.long 0xbf800000                                           // 00000007AC9C: BF800000
	.long 0xbf800000                                           // 00000007ACA0: BF800000
	.long 0xbf800000                                           // 00000007ACA4: BF800000
	.long 0xbf800000                                           // 00000007ACA8: BF800000
	.long 0xbf800000                                           // 00000007ACAC: BF800000
	.long 0xbf800000                                           // 00000007ACB0: BF800000
	.long 0xbf800000                                           // 00000007ACB4: BF800000
	.long 0xbf800000                                           // 00000007ACB8: BF800000
	.long 0xbf800000                                           // 00000007ACBC: BF800000
	.long 0xbf800000                                           // 00000007ACC0: BF800000
	.long 0xbf800000                                           // 00000007ACC4: BF800000
	.long 0xbf800000                                           // 00000007ACC8: BF800000
	.long 0xbf800000                                           // 00000007ACCC: BF800000
	.long 0xbf800000                                           // 00000007ACD0: BF800000
	.long 0xbf800000                                           // 00000007ACD4: BF800000
	.long 0xbf800000                                           // 00000007ACD8: BF800000
	.long 0xbf800000                                           // 00000007ACDC: BF800000
	.long 0xbf800000                                           // 00000007ACE0: BF800000
	.long 0xbf800000                                           // 00000007ACE4: BF800000
	.long 0xbf800000                                           // 00000007ACE8: BF800000
	.long 0xbf800000                                           // 00000007ACEC: BF800000
	.long 0xbf800000                                           // 00000007ACF0: BF800000
	.long 0xbf800000                                           // 00000007ACF4: BF800000
	.long 0xbf800000                                           // 00000007ACF8: BF800000
	.long 0xbf800000                                           // 00000007ACFC: BF800000

	.p2align	8
	.type	subtract_long_get_global_offset_8_8,@function
	.size	subtract_long_get_global_offset_8_8, subtract_long_get_global_offset_8_8_symend-subtract_long_get_global_offset_8_8
subtract_long_get_global_offset_8_8:
	s_clause 0x1                                               // 00000007AD00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007AD04: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007AD0C: F4040000 F8000008
	s_lshl_b32 s2, s2, 3                                       // 00000007AD14: 84028302
	s_mov_b32 s33, 0                                           // 00000007AD18: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007AD1C: BF89FC07
	v_add3_u32 v2, s4, s2, v0                                  // 00000007AD20: D6550002 04000404
	s_sub_i32 s2, s4, s6                                       // 00000007AD28: 81820604
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007AD2C: BF870099
	v_dual_mov_b32 v1, 0 :: v_dual_mov_b32 v0, s2              // 00000007AD30: CA100080 01000002
	v_mov_b32_e32 v3, v1                                       // 00000007AD38: 7E060301
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007AD3C: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007AD40: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007AD48: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007AD50: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007AD54: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007AD58: DC6E0000 007C0002
	s_nop 0                                                    // 00000007AD60: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AD64: BFB60003
	s_endpgm                                                   // 00000007AD68: BFB00000
subtract_long_get_global_offset_8_8_symend:
	.long 0xbf800000                                           // 00000007AD6C: BF800000
	.long 0xbf800000                                           // 00000007AD70: BF800000
	.long 0xbf800000                                           // 00000007AD74: BF800000
	.long 0xbf800000                                           // 00000007AD78: BF800000
	.long 0xbf800000                                           // 00000007AD7C: BF800000
	.long 0xbf800000                                           // 00000007AD80: BF800000
	.long 0xbf800000                                           // 00000007AD84: BF800000
	.long 0xbf800000                                           // 00000007AD88: BF800000
	.long 0xbf800000                                           // 00000007AD8C: BF800000
	.long 0xbf800000                                           // 00000007AD90: BF800000
	.long 0xbf800000                                           // 00000007AD94: BF800000
	.long 0xbf800000                                           // 00000007AD98: BF800000
	.long 0xbf800000                                           // 00000007AD9C: BF800000
	.long 0xbf800000                                           // 00000007ADA0: BF800000
	.long 0xbf800000                                           // 00000007ADA4: BF800000
	.long 0xbf800000                                           // 00000007ADA8: BF800000
	.long 0xbf800000                                           // 00000007ADAC: BF800000
	.long 0xbf800000                                           // 00000007ADB0: BF800000
	.long 0xbf800000                                           // 00000007ADB4: BF800000
	.long 0xbf800000                                           // 00000007ADB8: BF800000
	.long 0xbf800000                                           // 00000007ADBC: BF800000
	.long 0xbf800000                                           // 00000007ADC0: BF800000
	.long 0xbf800000                                           // 00000007ADC4: BF800000
	.long 0xbf800000                                           // 00000007ADC8: BF800000
	.long 0xbf800000                                           // 00000007ADCC: BF800000
	.long 0xbf800000                                           // 00000007ADD0: BF800000
	.long 0xbf800000                                           // 00000007ADD4: BF800000
	.long 0xbf800000                                           // 00000007ADD8: BF800000
	.long 0xbf800000                                           // 00000007ADDC: BF800000
	.long 0xbf800000                                           // 00000007ADE0: BF800000
	.long 0xbf800000                                           // 00000007ADE4: BF800000
	.long 0xbf800000                                           // 00000007ADE8: BF800000
	.long 0xbf800000                                           // 00000007ADEC: BF800000
	.long 0xbf800000                                           // 00000007ADF0: BF800000
	.long 0xbf800000                                           // 00000007ADF4: BF800000
	.long 0xbf800000                                           // 00000007ADF8: BF800000
	.long 0xbf800000                                           // 00000007ADFC: BF800000

	.p2align	8
	.type	subtract_long_get_local_id_8_8,@function
	.size	subtract_long_get_local_id_8_8, subtract_long_get_local_id_8_8_symend-subtract_long_get_local_id_8_8
subtract_long_get_local_id_8_8:
	s_clause 0x1                                               // 00000007AE00: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000007AE04: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007AE0C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007AE14: CA240080 010400FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000007AE20: 84028302
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007AE24: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000007AE2C: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007AE30: BF870112
	v_mov_b32_e32 v3, v1                                       // 00000007AE34: 7E060301
	v_sub_nc_u32_e32 v0, v4, v0                                // 00000007AE38: 4C000104
	s_waitcnt lgkmcnt(0)                                       // 00000007AE3C: BF89FC07
	v_add3_u32 v2, s3, s2, v4                                  // 00000007AE40: D6550002 04100403
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007AE48: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007AE4C: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007AE54: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007AE5C: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007AE60: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007AE64: DC6E0000 007C0002
	s_nop 0                                                    // 00000007AE6C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AE70: BFB60003
	s_endpgm                                                   // 00000007AE74: BFB00000
subtract_long_get_local_id_8_8_symend:
	.long 0xbf800000                                           // 00000007AE78: BF800000
	.long 0xbf800000                                           // 00000007AE7C: BF800000
	.long 0xbf800000                                           // 00000007AE80: BF800000
	.long 0xbf800000                                           // 00000007AE84: BF800000
	.long 0xbf800000                                           // 00000007AE88: BF800000
	.long 0xbf800000                                           // 00000007AE8C: BF800000
	.long 0xbf800000                                           // 00000007AE90: BF800000
	.long 0xbf800000                                           // 00000007AE94: BF800000
	.long 0xbf800000                                           // 00000007AE98: BF800000
	.long 0xbf800000                                           // 00000007AE9C: BF800000
	.long 0xbf800000                                           // 00000007AEA0: BF800000
	.long 0xbf800000                                           // 00000007AEA4: BF800000
	.long 0xbf800000                                           // 00000007AEA8: BF800000
	.long 0xbf800000                                           // 00000007AEAC: BF800000
	.long 0xbf800000                                           // 00000007AEB0: BF800000
	.long 0xbf800000                                           // 00000007AEB4: BF800000
	.long 0xbf800000                                           // 00000007AEB8: BF800000
	.long 0xbf800000                                           // 00000007AEBC: BF800000
	.long 0xbf800000                                           // 00000007AEC0: BF800000
	.long 0xbf800000                                           // 00000007AEC4: BF800000
	.long 0xbf800000                                           // 00000007AEC8: BF800000
	.long 0xbf800000                                           // 00000007AECC: BF800000
	.long 0xbf800000                                           // 00000007AED0: BF800000
	.long 0xbf800000                                           // 00000007AED4: BF800000
	.long 0xbf800000                                           // 00000007AED8: BF800000
	.long 0xbf800000                                           // 00000007AEDC: BF800000
	.long 0xbf800000                                           // 00000007AEE0: BF800000
	.long 0xbf800000                                           // 00000007AEE4: BF800000
	.long 0xbf800000                                           // 00000007AEE8: BF800000
	.long 0xbf800000                                           // 00000007AEEC: BF800000
	.long 0xbf800000                                           // 00000007AEF0: BF800000
	.long 0xbf800000                                           // 00000007AEF4: BF800000
	.long 0xbf800000                                           // 00000007AEF8: BF800000
	.long 0xbf800000                                           // 00000007AEFC: BF800000

	.p2align	8
	.type	subtract_long_get_group_id_8_8,@function
	.size	subtract_long_get_group_id_8_8, subtract_long_get_group_id_8_8_symend-subtract_long_get_group_id_8_8
subtract_long_get_group_id_8_8:
	s_clause 0x1                                               // 00000007AF00: BF850001
	s_load_b32 s4, s[0:1], 0x38                                // 00000007AF04: F4000100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007AF0C: F4040000 F8000008
	s_lshl_b32 s5, s2, 3                                       // 00000007AF14: 84058302
	s_sub_i32 s2, s2, s3                                       // 00000007AF18: 81820302
	v_mov_b32_e32 v1, 0                                        // 00000007AF1C: 7E020280
	s_mov_b32 s33, 0                                           // 00000007AF20: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007AF24: BF89FC07
	v_add3_u32 v2, s4, s5, v0                                  // 00000007AF28: D6550002 04000A04
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007AF30: BF870092
	v_dual_mov_b32 v0, s2 :: v_dual_mov_b32 v3, v1             // 00000007AF34: CA100002 00020101
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007AF3C: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007AF44: BF870111
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007AF48: D7006A02 00020400
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007AF50: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007AF54: DC6E0000 007C0002
	s_nop 0                                                    // 00000007AF5C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007AF60: BFB60003
	s_endpgm                                                   // 00000007AF64: BFB00000
subtract_long_get_group_id_8_8_symend:
	.long 0xbf800000                                           // 00000007AF68: BF800000
	.long 0xbf800000                                           // 00000007AF6C: BF800000
	.long 0xbf800000                                           // 00000007AF70: BF800000
	.long 0xbf800000                                           // 00000007AF74: BF800000
	.long 0xbf800000                                           // 00000007AF78: BF800000
	.long 0xbf800000                                           // 00000007AF7C: BF800000
	.long 0xbf800000                                           // 00000007AF80: BF800000
	.long 0xbf800000                                           // 00000007AF84: BF800000
	.long 0xbf800000                                           // 00000007AF88: BF800000
	.long 0xbf800000                                           // 00000007AF8C: BF800000
	.long 0xbf800000                                           // 00000007AF90: BF800000
	.long 0xbf800000                                           // 00000007AF94: BF800000
	.long 0xbf800000                                           // 00000007AF98: BF800000
	.long 0xbf800000                                           // 00000007AF9C: BF800000
	.long 0xbf800000                                           // 00000007AFA0: BF800000
	.long 0xbf800000                                           // 00000007AFA4: BF800000
	.long 0xbf800000                                           // 00000007AFA8: BF800000
	.long 0xbf800000                                           // 00000007AFAC: BF800000
	.long 0xbf800000                                           // 00000007AFB0: BF800000
	.long 0xbf800000                                           // 00000007AFB4: BF800000
	.long 0xbf800000                                           // 00000007AFB8: BF800000
	.long 0xbf800000                                           // 00000007AFBC: BF800000
	.long 0xbf800000                                           // 00000007AFC0: BF800000
	.long 0xbf800000                                           // 00000007AFC4: BF800000
	.long 0xbf800000                                           // 00000007AFC8: BF800000
	.long 0xbf800000                                           // 00000007AFCC: BF800000
	.long 0xbf800000                                           // 00000007AFD0: BF800000
	.long 0xbf800000                                           // 00000007AFD4: BF800000
	.long 0xbf800000                                           // 00000007AFD8: BF800000
	.long 0xbf800000                                           // 00000007AFDC: BF800000
	.long 0xbf800000                                           // 00000007AFE0: BF800000
	.long 0xbf800000                                           // 00000007AFE4: BF800000
	.long 0xbf800000                                           // 00000007AFE8: BF800000
	.long 0xbf800000                                           // 00000007AFEC: BF800000
	.long 0xbf800000                                           // 00000007AFF0: BF800000
	.long 0xbf800000                                           // 00000007AFF4: BF800000
	.long 0xbf800000                                           // 00000007AFF8: BF800000
	.long 0xbf800000                                           // 00000007AFFC: BF800000

	.p2align	8
	.type	subtract_long_get_local_size_8_8,@function
	.size	subtract_long_get_local_size_8_8, subtract_long_get_local_size_8_8_symend-subtract_long_get_local_size_8_8
subtract_long_get_local_size_8_8:
	s_clause 0x1                                               // 00000007B000: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000007B004: F4080100 F8000008
	s_load_b32 s9, s[0:1], 0x38                                // 00000007B00C: F4000240 F8000038
	s_add_u32 s8, s0, 16                                       // 00000007B014: 80089000
	s_addc_u32 s10, s1, 0                                      // 00000007B018: 820A8001
	s_lshl_b32 s11, s2, 3                                      // 00000007B01C: 840B8302
	v_mov_b32_e32 v1, 0                                        // 00000007B020: 7E020280
	s_mov_b32 s33, 0                                           // 00000007B024: BEA10080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007B028: BF8704D1
	v_mov_b32_e32 v3, v1                                       // 00000007B02C: 7E060301
	s_waitcnt lgkmcnt(0)                                       // 00000007B030: BF89FC07
	s_cmp_lt_u32 s2, s6                                        // 00000007B034: BF0A0602
	v_add3_u32 v2, s9, s11, v0                                 // 00000007B038: D6550002 04001609
	s_cselect_b32 s0, 12, 18                                   // 00000007B040: 9800928C
	s_add_u32 s0, s8, s0                                       // 00000007B044: 80000008
	s_addc_u32 s1, s10, 0                                      // 00000007B048: 8201800A
	s_cmp_lt_u32 s3, s7                                        // 00000007B04C: BF0A0703
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007B050: D73C0002 00020483
	s_cselect_b32 s2, 14, 20                                   // 00000007B058: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007B05C: BF870009
	s_add_u32 s2, s8, s2                                       // 00000007B060: 80020208
	s_addc_u32 s3, s10, 0                                      // 00000007B064: 8203800A
	s_clause 0x1                                               // 00000007B068: BF850001
	global_load_u16 v4, v1, s[0:1]                             // 00000007B06C: DC4A0000 04000001
	global_load_u16 v5, v1, s[2:3]                             // 00000007B074: DC4A0000 05020001
	v_add_co_u32 v2, vcc_lo, s4, v2                            // 00000007B07C: D7006A02 00020404
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo             // 00000007B084: 40060605
	s_waitcnt vmcnt(0)                                         // 00000007B088: BF8903F7
	v_sub_nc_u32_e32 v0, v4, v5                                // 00000007B08C: 4C000B04
	global_store_b64 v[2:3], v[0:1], off                       // 00000007B090: DC6E0000 007C0002
	s_nop 0                                                    // 00000007B098: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B09C: BFB60003
	s_endpgm                                                   // 00000007B0A0: BFB00000
subtract_long_get_local_size_8_8_symend:
	.long 0xbf800000                                           // 00000007B0A4: BF800000
	.long 0xbf800000                                           // 00000007B0A8: BF800000
	.long 0xbf800000                                           // 00000007B0AC: BF800000
	.long 0xbf800000                                           // 00000007B0B0: BF800000
	.long 0xbf800000                                           // 00000007B0B4: BF800000
	.long 0xbf800000                                           // 00000007B0B8: BF800000
	.long 0xbf800000                                           // 00000007B0BC: BF800000
	.long 0xbf800000                                           // 00000007B0C0: BF800000
	.long 0xbf800000                                           // 00000007B0C4: BF800000
	.long 0xbf800000                                           // 00000007B0C8: BF800000
	.long 0xbf800000                                           // 00000007B0CC: BF800000
	.long 0xbf800000                                           // 00000007B0D0: BF800000
	.long 0xbf800000                                           // 00000007B0D4: BF800000
	.long 0xbf800000                                           // 00000007B0D8: BF800000
	.long 0xbf800000                                           // 00000007B0DC: BF800000
	.long 0xbf800000                                           // 00000007B0E0: BF800000
	.long 0xbf800000                                           // 00000007B0E4: BF800000
	.long 0xbf800000                                           // 00000007B0E8: BF800000
	.long 0xbf800000                                           // 00000007B0EC: BF800000
	.long 0xbf800000                                           // 00000007B0F0: BF800000
	.long 0xbf800000                                           // 00000007B0F4: BF800000
	.long 0xbf800000                                           // 00000007B0F8: BF800000
	.long 0xbf800000                                           // 00000007B0FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_id_8_8,@function
	.size	subtract_long_get_global_id_8_8, subtract_long_get_global_id_8_8_symend-subtract_long_get_global_id_8_8
subtract_long_get_global_id_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007B100: F4080100 F8000038
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007B108: CA240080 010200FF 000003FF
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B114: F4040000 F8000008
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007B11C: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000007B124: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007B128: BF870142
	v_lshl_or_b32 v2, s2, 3, v2                                // 00000007B12C: D6560002 04090602
	v_mov_b32_e32 v3, v1                                       // 00000007B134: 7E060301
	s_lshl_b32 s2, s3, 3                                       // 00000007B138: 84028303
	s_waitcnt lgkmcnt(0)                                       // 00000007B13C: BF89FC07
	v_add_nc_u32_e32 v2, s4, v2                                // 00000007B140: 4A040404
	v_add3_u32 v0, s6, s2, v0                                  // 00000007B144: D6550000 04000406
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007B14C: BF870112
	v_lshlrev_b64 v[3:4], 3, v[2:3]                            // 00000007B150: D73C0003 00020483
	v_sub_nc_u32_e32 v0, v2, v0                                // 00000007B158: 4C000102
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007B15C: BF870192
	v_add_co_u32 v2, vcc_lo, s0, v3                            // 00000007B160: D7006A02 00020600
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v4, vcc_lo             // 00000007B168: 40060801
	global_store_b64 v[2:3], v[0:1], off                       // 00000007B16C: DC6E0000 007C0002
	s_nop 0                                                    // 00000007B174: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B178: BFB60003
	s_endpgm                                                   // 00000007B17C: BFB00000
subtract_long_get_global_id_8_8_symend:
	.long 0xbf800000                                           // 00000007B180: BF800000
	.long 0xbf800000                                           // 00000007B184: BF800000
	.long 0xbf800000                                           // 00000007B188: BF800000
	.long 0xbf800000                                           // 00000007B18C: BF800000
	.long 0xbf800000                                           // 00000007B190: BF800000
	.long 0xbf800000                                           // 00000007B194: BF800000
	.long 0xbf800000                                           // 00000007B198: BF800000
	.long 0xbf800000                                           // 00000007B19C: BF800000
	.long 0xbf800000                                           // 00000007B1A0: BF800000
	.long 0xbf800000                                           // 00000007B1A4: BF800000
	.long 0xbf800000                                           // 00000007B1A8: BF800000
	.long 0xbf800000                                           // 00000007B1AC: BF800000
	.long 0xbf800000                                           // 00000007B1B0: BF800000
	.long 0xbf800000                                           // 00000007B1B4: BF800000
	.long 0xbf800000                                           // 00000007B1B8: BF800000
	.long 0xbf800000                                           // 00000007B1BC: BF800000
	.long 0xbf800000                                           // 00000007B1C0: BF800000
	.long 0xbf800000                                           // 00000007B1C4: BF800000
	.long 0xbf800000                                           // 00000007B1C8: BF800000
	.long 0xbf800000                                           // 00000007B1CC: BF800000
	.long 0xbf800000                                           // 00000007B1D0: BF800000
	.long 0xbf800000                                           // 00000007B1D4: BF800000
	.long 0xbf800000                                           // 00000007B1D8: BF800000
	.long 0xbf800000                                           // 00000007B1DC: BF800000
	.long 0xbf800000                                           // 00000007B1E0: BF800000
	.long 0xbf800000                                           // 00000007B1E4: BF800000
	.long 0xbf800000                                           // 00000007B1E8: BF800000
	.long 0xbf800000                                           // 00000007B1EC: BF800000
	.long 0xbf800000                                           // 00000007B1F0: BF800000
	.long 0xbf800000                                           // 00000007B1F4: BF800000
	.long 0xbf800000                                           // 00000007B1F8: BF800000
	.long 0xbf800000                                           // 00000007B1FC: BF800000

	.p2align	8
	.type	subtract_long_get_global_size_8_8,@function
	.size	subtract_long_get_global_size_8_8, subtract_long_get_global_size_8_8_symend-subtract_long_get_global_size_8_8
subtract_long_get_global_size_8_8:
	v_mov_b32_e32 v1, 0                                        // 00000007B200: 7E020280
	s_mov_b32 s33, 0                                           // 00000007B204: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007B208: DC520022 02000001
	s_clause 0x1                                               // 00000007B210: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000007B214: F40000C0 F8000038
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000007B21C: F4080100 F8000008
	s_lshl_b32 s0, s2, 3                                       // 00000007B224: 84008302
	s_waitcnt vmcnt(0)                                         // 00000007B228: BF8903F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007B22C: 32080490
	v_and_b32_e32 v5, 0xffff, v2                               // 00000007B230: 360A04FF 0000FFFF
	s_waitcnt lgkmcnt(0)                                       // 00000007B238: BF89FC07
	v_add3_u32 v2, s3, s0, v0                                  // 00000007B23C: D6550002 04000003
	s_sub_i32 s0, s6, s7                                       // 00000007B244: 81800706
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007B248: BF8700A9
	s_lshl_b32 s0, s0, 3                                       // 00000007B24C: 84008300
	v_sub_nc_u32_e32 v0, v5, v4                                // 00000007B250: 4C000905
	v_dual_mov_b32 v3, v1 :: v_dual_add_nc_u32 v0, s0, v0      // 00000007B254: CA200101 03000000
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007B25C: BF870091
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007B260: D73C0002 00020483
	v_add_co_u32 v2, vcc_lo, s4, v2                            // 00000007B268: D7006A02 00020404
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007B270: BF870002
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo             // 00000007B274: 40060605
	global_store_b64 v[2:3], v[0:1], off                       // 00000007B278: DC6E0000 007C0002
	s_nop 0                                                    // 00000007B280: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B284: BFB60003
	s_endpgm                                                   // 00000007B288: BFB00000
subtract_long_get_global_size_8_8_symend:
	.long 0xbf800000                                           // 00000007B28C: BF800000
	.long 0xbf800000                                           // 00000007B290: BF800000
	.long 0xbf800000                                           // 00000007B294: BF800000
	.long 0xbf800000                                           // 00000007B298: BF800000
	.long 0xbf800000                                           // 00000007B29C: BF800000
	.long 0xbf800000                                           // 00000007B2A0: BF800000
	.long 0xbf800000                                           // 00000007B2A4: BF800000
	.long 0xbf800000                                           // 00000007B2A8: BF800000
	.long 0xbf800000                                           // 00000007B2AC: BF800000
	.long 0xbf800000                                           // 00000007B2B0: BF800000
	.long 0xbf800000                                           // 00000007B2B4: BF800000
	.long 0xbf800000                                           // 00000007B2B8: BF800000
	.long 0xbf800000                                           // 00000007B2BC: BF800000
	.long 0xbf800000                                           // 00000007B2C0: BF800000
	.long 0xbf800000                                           // 00000007B2C4: BF800000
	.long 0xbf800000                                           // 00000007B2C8: BF800000
	.long 0xbf800000                                           // 00000007B2CC: BF800000
	.long 0xbf800000                                           // 00000007B2D0: BF800000
	.long 0xbf800000                                           // 00000007B2D4: BF800000
	.long 0xbf800000                                           // 00000007B2D8: BF800000
	.long 0xbf800000                                           // 00000007B2DC: BF800000
	.long 0xbf800000                                           // 00000007B2E0: BF800000
	.long 0xbf800000                                           // 00000007B2E4: BF800000
	.long 0xbf800000                                           // 00000007B2E8: BF800000
	.long 0xbf800000                                           // 00000007B2EC: BF800000
	.long 0xbf800000                                           // 00000007B2F0: BF800000
	.long 0xbf800000                                           // 00000007B2F4: BF800000
	.long 0xbf800000                                           // 00000007B2F8: BF800000
	.long 0xbf800000                                           // 00000007B2FC: BF800000

	.p2align	8
	.type	subtract_long_get_num_groups_8_8,@function
	.size	subtract_long_get_num_groups_8_8, subtract_long_get_num_groups_8_8_symend-subtract_long_get_num_groups_8_8
subtract_long_get_num_groups_8_8:
	v_mov_b32_e32 v1, 0                                        // 00000007B300: 7E020280
	s_mov_b32 s33, 0                                           // 00000007B304: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007B308: DC520022 02000001
	s_clause 0x1                                               // 00000007B310: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000007B314: F40000C0 F8000038
	s_load_b128 s[4:7], s[0:1], 0x8                            // 00000007B31C: F4080100 F8000008
	s_lshl_b32 s0, s2, 3                                       // 00000007B324: 84008302
	s_waitcnt vmcnt(0)                                         // 00000007B328: BF8903F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007B32C: 32080490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007B330: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 00000007B334: BF89FC07
	v_add3_u32 v2, s3, s0, v0                                  // 00000007B338: D6550002 04000003
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 00000007B340: BF8700B3
	v_cmp_ne_u16_e64 s0, 0, v4.l                               // 00000007B344: D43D0000 00020880
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007B34C: BF07806A
	s_addc_u32 s1, s6, 0                                       // 00000007B350: 82018006
	s_cmp_lg_u32 s0, 0                                         // 00000007B354: BF078000
	s_subb_u32 s0, s1, s7                                      // 00000007B358: 82800701
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007B35C: BF870099
	v_dual_mov_b32 v0, s0 :: v_dual_mov_b32 v3, v1             // 00000007B360: CA100000 00020101
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007B368: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007B370: BF870111
	v_add_co_u32 v2, vcc_lo, s4, v2                            // 00000007B374: D7006A02 00020404
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo             // 00000007B37C: 40060605
	global_store_b64 v[2:3], v[0:1], off                       // 00000007B380: DC6E0000 007C0002
	s_nop 0                                                    // 00000007B388: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B38C: BFB60003
	s_endpgm                                                   // 00000007B390: BFB00000
subtract_long_get_num_groups_8_8_symend:
	.long 0xbf800000                                           // 00000007B394: BF800000
	.long 0xbf800000                                           // 00000007B398: BF800000
	.long 0xbf800000                                           // 00000007B39C: BF800000
	.long 0xbf800000                                           // 00000007B3A0: BF800000
	.long 0xbf800000                                           // 00000007B3A4: BF800000
	.long 0xbf800000                                           // 00000007B3A8: BF800000
	.long 0xbf800000                                           // 00000007B3AC: BF800000
	.long 0xbf800000                                           // 00000007B3B0: BF800000
	.long 0xbf800000                                           // 00000007B3B4: BF800000
	.long 0xbf800000                                           // 00000007B3B8: BF800000
	.long 0xbf800000                                           // 00000007B3BC: BF800000
	.long 0xbf800000                                           // 00000007B3C0: BF800000
	.long 0xbf800000                                           // 00000007B3C4: BF800000
	.long 0xbf800000                                           // 00000007B3C8: BF800000
	.long 0xbf800000                                           // 00000007B3CC: BF800000
	.long 0xbf800000                                           // 00000007B3D0: BF800000
	.long 0xbf800000                                           // 00000007B3D4: BF800000
	.long 0xbf800000                                           // 00000007B3D8: BF800000
	.long 0xbf800000                                           // 00000007B3DC: BF800000
	.long 0xbf800000                                           // 00000007B3E0: BF800000
	.long 0xbf800000                                           // 00000007B3E4: BF800000
	.long 0xbf800000                                           // 00000007B3E8: BF800000
	.long 0xbf800000                                           // 00000007B3EC: BF800000
	.long 0xbf800000                                           // 00000007B3F0: BF800000
	.long 0xbf800000                                           // 00000007B3F4: BF800000
	.long 0xbf800000                                           // 00000007B3F8: BF800000
	.long 0xbf800000                                           // 00000007B3FC: BF800000

	.p2align	8
	.type	subtract_long_get_work_dim_8_8,@function
	.size	subtract_long_get_work_dim_8_8, subtract_long_get_work_dim_8_8_symend-subtract_long_get_work_dim_8_8
subtract_long_get_work_dim_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007B400: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 00000007B408: BF89FC07
	s_clause 0x1                                               // 00000007B40C: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 00000007B410: F4000140 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B418: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007B420: CA240080 010200FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 00000007B42C: 84028302
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007B430: D6100000 02291500
	s_mov_b32 s33, 0                                           // 00000007B438: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 00000007B43C: BF8704B2
	v_mov_b32_e32 v3, v1                                       // 00000007B440: 7E060301
	v_add3_u32 v2, s4, s2, v2                                  // 00000007B444: D6550002 04080404
	s_lshl_b32 s2, s3, 3                                       // 00000007B44C: 84028303
	v_add3_u32 v0, s2, s6, v0                                  // 00000007B450: D6550000 04000C02
	s_waitcnt lgkmcnt(0)                                       // 00000007B458: BF89FC07
	s_and_b32 s2, s5, 0xffff                                   // 00000007B45C: 8B02FF05 0000FFFF
	v_lshlrev_b64 v[2:3], 3, v[2:3]                            // 00000007B464: D73C0002 00020483
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007B46C: BF870112
	v_sub_nc_u32_e32 v0, s2, v0                                // 00000007B470: 4C000002
	v_add_co_u32 v2, vcc_lo, s0, v2                            // 00000007B474: D7006A02 00020400
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007B47C: BF870003
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo             // 00000007B480: 40060601
	global_store_b64 v[2:3], v[0:1], off                       // 00000007B484: DC6E0000 007C0002
	s_nop 0                                                    // 00000007B48C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B490: BFB60003
	s_endpgm                                                   // 00000007B494: BFB00000
subtract_long_get_work_dim_8_8_symend:
	.long 0xbf800000                                           // 00000007B498: BF800000
	.long 0xbf800000                                           // 00000007B49C: BF800000
	.long 0xbf800000                                           // 00000007B4A0: BF800000
	.long 0xbf800000                                           // 00000007B4A4: BF800000
	.long 0xbf800000                                           // 00000007B4A8: BF800000
	.long 0xbf800000                                           // 00000007B4AC: BF800000
	.long 0xbf800000                                           // 00000007B4B0: BF800000
	.long 0xbf800000                                           // 00000007B4B4: BF800000
	.long 0xbf800000                                           // 00000007B4B8: BF800000
	.long 0xbf800000                                           // 00000007B4BC: BF800000
	.long 0xbf800000                                           // 00000007B4C0: BF800000
	.long 0xbf800000                                           // 00000007B4C4: BF800000
	.long 0xbf800000                                           // 00000007B4C8: BF800000
	.long 0xbf800000                                           // 00000007B4CC: BF800000
	.long 0xbf800000                                           // 00000007B4D0: BF800000
	.long 0xbf800000                                           // 00000007B4D4: BF800000
	.long 0xbf800000                                           // 00000007B4D8: BF800000
	.long 0xbf800000                                           // 00000007B4DC: BF800000
	.long 0xbf800000                                           // 00000007B4E0: BF800000
	.long 0xbf800000                                           // 00000007B4E4: BF800000
	.long 0xbf800000                                           // 00000007B4E8: BF800000
	.long 0xbf800000                                           // 00000007B4EC: BF800000
	.long 0xbf800000                                           // 00000007B4F0: BF800000
	.long 0xbf800000                                           // 00000007B4F4: BF800000
	.long 0xbf800000                                           // 00000007B4F8: BF800000
	.long 0xbf800000                                           // 00000007B4FC: BF800000

	.p2align	8
	.type	subtract_char_x_x,@function
	.size	subtract_char_x_x, subtract_char_x_x_symend-subtract_char_x_x
subtract_char_x_x:
	s_clause 0x1                                               // 00000007B500: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 00000007B504: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 00000007B50C: F4040000 F8000000
	s_lshl_b32 s2, s2, 6                                       // 00000007B514: 84028602
	v_mov_b32_e32 v1, 0                                        // 00000007B518: 7E020280
	s_mov_b32 s33, 0                                           // 00000007B51C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007B520: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 00000007B524: D6550000 04000403
	global_store_b8 v0, v1, s[0:1]                             // 00000007B52C: DC620000 00000100
	s_nop 0                                                    // 00000007B534: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B538: BFB60003
	s_endpgm                                                   // 00000007B53C: BFB00000
subtract_char_x_x_symend:
	.long 0xbf800000                                           // 00000007B540: BF800000
	.long 0xbf800000                                           // 00000007B544: BF800000
	.long 0xbf800000                                           // 00000007B548: BF800000
	.long 0xbf800000                                           // 00000007B54C: BF800000
	.long 0xbf800000                                           // 00000007B550: BF800000
	.long 0xbf800000                                           // 00000007B554: BF800000
	.long 0xbf800000                                           // 00000007B558: BF800000
	.long 0xbf800000                                           // 00000007B55C: BF800000
	.long 0xbf800000                                           // 00000007B560: BF800000
	.long 0xbf800000                                           // 00000007B564: BF800000
	.long 0xbf800000                                           // 00000007B568: BF800000
	.long 0xbf800000                                           // 00000007B56C: BF800000
	.long 0xbf800000                                           // 00000007B570: BF800000
	.long 0xbf800000                                           // 00000007B574: BF800000
	.long 0xbf800000                                           // 00000007B578: BF800000
	.long 0xbf800000                                           // 00000007B57C: BF800000
	.long 0xbf800000                                           // 00000007B580: BF800000
	.long 0xbf800000                                           // 00000007B584: BF800000
	.long 0xbf800000                                           // 00000007B588: BF800000
	.long 0xbf800000                                           // 00000007B58C: BF800000
	.long 0xbf800000                                           // 00000007B590: BF800000
	.long 0xbf800000                                           // 00000007B594: BF800000
	.long 0xbf800000                                           // 00000007B598: BF800000
	.long 0xbf800000                                           // 00000007B59C: BF800000
	.long 0xbf800000                                           // 00000007B5A0: BF800000
	.long 0xbf800000                                           // 00000007B5A4: BF800000
	.long 0xbf800000                                           // 00000007B5A8: BF800000
	.long 0xbf800000                                           // 00000007B5AC: BF800000
	.long 0xbf800000                                           // 00000007B5B0: BF800000
	.long 0xbf800000                                           // 00000007B5B4: BF800000
	.long 0xbf800000                                           // 00000007B5B8: BF800000
	.long 0xbf800000                                           // 00000007B5BC: BF800000
	.long 0xbf800000                                           // 00000007B5C0: BF800000
	.long 0xbf800000                                           // 00000007B5C4: BF800000
	.long 0xbf800000                                           // 00000007B5C8: BF800000
	.long 0xbf800000                                           // 00000007B5CC: BF800000
	.long 0xbf800000                                           // 00000007B5D0: BF800000
	.long 0xbf800000                                           // 00000007B5D4: BF800000
	.long 0xbf800000                                           // 00000007B5D8: BF800000
	.long 0xbf800000                                           // 00000007B5DC: BF800000
	.long 0xbf800000                                           // 00000007B5E0: BF800000
	.long 0xbf800000                                           // 00000007B5E4: BF800000
	.long 0xbf800000                                           // 00000007B5E8: BF800000
	.long 0xbf800000                                           // 00000007B5EC: BF800000
	.long 0xbf800000                                           // 00000007B5F0: BF800000
	.long 0xbf800000                                           // 00000007B5F4: BF800000
	.long 0xbf800000                                           // 00000007B5F8: BF800000
	.long 0xbf800000                                           // 00000007B5FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_offset_x,@function
	.size	subtract_char_get_global_offset_x, subtract_char_get_global_offset_x_symend-subtract_char_get_global_offset_x
subtract_char_get_global_offset_x:
	s_clause 0x3                                               // 00000007B600: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B604: F4080200 F8000038
	s_load_b32 s5, s[0:1], null                                // 00000007B60C: F4000140 F8000000
	s_load_b32 s6, s[0:1], 0x48                                // 00000007B614: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B61C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007B624: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B62C: D6100002 02291500
	s_lshl_b32 s2, s2, 1                                       // 00000007B634: 84028102
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B638: D6100000 02292900
	s_lshl_b32 s3, s3, 4                                       // 00000007B640: 84038403
	s_lshl_b32 s4, s4, 1                                       // 00000007B644: 84048104
	s_mov_b32 s33, 0                                           // 00000007B648: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007B64C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000007B650: D6550001 04040408
	s_sub_i32 s7, s8, s5                                       // 00000007B658: 81870508
	s_sub_i32 s2, s10, s5                                      // 00000007B65C: 8182050A
	v_add3_u32 v2, s10, s3, v2                                 // 00000007B660: D6550002 0408060A
	v_mov_b32_e32 v4, s2                                       // 00000007B668: 7E080202
	s_sub_i32 s3, s6, s5                                       // 00000007B66C: 81830506
	v_mov_b32_e32 v3, s7                                       // 00000007B670: 7E060207
	v_add3_u32 v0, s6, s4, v0                                  // 00000007B674: D6550000 04000806
	v_mov_b32_e32 v5, s3                                       // 00000007B67C: 7E0A0203
	s_clause 0x2                                               // 00000007B680: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007B684: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007B68C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007B694: DC620000 00000500
	s_nop 0                                                    // 00000007B69C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B6A0: BFB60003
	s_endpgm                                                   // 00000007B6A4: BFB00000
subtract_char_get_global_offset_x_symend:
	.long 0xbf800000                                           // 00000007B6A8: BF800000
	.long 0xbf800000                                           // 00000007B6AC: BF800000
	.long 0xbf800000                                           // 00000007B6B0: BF800000
	.long 0xbf800000                                           // 00000007B6B4: BF800000
	.long 0xbf800000                                           // 00000007B6B8: BF800000
	.long 0xbf800000                                           // 00000007B6BC: BF800000
	.long 0xbf800000                                           // 00000007B6C0: BF800000
	.long 0xbf800000                                           // 00000007B6C4: BF800000
	.long 0xbf800000                                           // 00000007B6C8: BF800000
	.long 0xbf800000                                           // 00000007B6CC: BF800000
	.long 0xbf800000                                           // 00000007B6D0: BF800000
	.long 0xbf800000                                           // 00000007B6D4: BF800000
	.long 0xbf800000                                           // 00000007B6D8: BF800000
	.long 0xbf800000                                           // 00000007B6DC: BF800000
	.long 0xbf800000                                           // 00000007B6E0: BF800000
	.long 0xbf800000                                           // 00000007B6E4: BF800000
	.long 0xbf800000                                           // 00000007B6E8: BF800000
	.long 0xbf800000                                           // 00000007B6EC: BF800000
	.long 0xbf800000                                           // 00000007B6F0: BF800000
	.long 0xbf800000                                           // 00000007B6F4: BF800000
	.long 0xbf800000                                           // 00000007B6F8: BF800000
	.long 0xbf800000                                           // 00000007B6FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_id_x,@function
	.size	subtract_char_get_local_id_x, subtract_char_get_local_id_x_symend-subtract_char_get_local_id_x
subtract_char_get_local_id_x:
	s_clause 0x3                                               // 00000007B700: BF850003
	s_load_b32 s5, s[0:1], null                                // 00000007B704: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B70C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007B714: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B71C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007B724: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B72C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B734: D6100000 02292900
	s_lshl_b32 s2, s2, 3                                       // 00000007B73C: 84028302
	s_lshl_b32 s3, s3, 2                                       // 00000007B740: 84038203
	s_lshl_b32 s4, s4, 1                                       // 00000007B744: 84048104
	s_mov_b32 s33, 0                                           // 00000007B748: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007B74C: BF89FC07
	v_subrev_nc_u32_e32 v3, s5, v1                             // 00000007B750: 4E060205
	v_add3_u32 v1, s8, s2, v1                                  // 00000007B754: D6550001 04040408
	v_subrev_nc_u32_e32 v4, s5, v2                             // 00000007B75C: 4E080405
	v_add3_u32 v2, s10, s3, v2                                 // 00000007B760: D6550002 0408060A
	v_subrev_nc_u32_e32 v5, s5, v0                             // 00000007B768: 4E0A0005
	v_add3_u32 v0, s6, s4, v0                                  // 00000007B76C: D6550000 04000806
	s_clause 0x2                                               // 00000007B774: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007B778: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007B780: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007B788: DC620000 00000500
	s_nop 0                                                    // 00000007B790: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B794: BFB60003
	s_endpgm                                                   // 00000007B798: BFB00000
subtract_char_get_local_id_x_symend:
	.long 0xbf800000                                           // 00000007B79C: BF800000
	.long 0xbf800000                                           // 00000007B7A0: BF800000
	.long 0xbf800000                                           // 00000007B7A4: BF800000
	.long 0xbf800000                                           // 00000007B7A8: BF800000
	.long 0xbf800000                                           // 00000007B7AC: BF800000
	.long 0xbf800000                                           // 00000007B7B0: BF800000
	.long 0xbf800000                                           // 00000007B7B4: BF800000
	.long 0xbf800000                                           // 00000007B7B8: BF800000
	.long 0xbf800000                                           // 00000007B7BC: BF800000
	.long 0xbf800000                                           // 00000007B7C0: BF800000
	.long 0xbf800000                                           // 00000007B7C4: BF800000
	.long 0xbf800000                                           // 00000007B7C8: BF800000
	.long 0xbf800000                                           // 00000007B7CC: BF800000
	.long 0xbf800000                                           // 00000007B7D0: BF800000
	.long 0xbf800000                                           // 00000007B7D4: BF800000
	.long 0xbf800000                                           // 00000007B7D8: BF800000
	.long 0xbf800000                                           // 00000007B7DC: BF800000
	.long 0xbf800000                                           // 00000007B7E0: BF800000
	.long 0xbf800000                                           // 00000007B7E4: BF800000
	.long 0xbf800000                                           // 00000007B7E8: BF800000
	.long 0xbf800000                                           // 00000007B7EC: BF800000
	.long 0xbf800000                                           // 00000007B7F0: BF800000
	.long 0xbf800000                                           // 00000007B7F4: BF800000
	.long 0xbf800000                                           // 00000007B7F8: BF800000
	.long 0xbf800000                                           // 00000007B7FC: BF800000

	.p2align	8
	.type	subtract_char_get_group_id_x,@function
	.size	subtract_char_get_group_id_x, subtract_char_get_group_id_x_symend-subtract_char_get_group_id_x
subtract_char_get_group_id_x:
	s_clause 0x3                                               // 00000007B800: BF850003
	s_load_b32 s5, s[0:1], null                                // 00000007B804: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007B80C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007B814: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B81C: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007B824: BF89FC07
	s_lshl_b32 s9, s3, 4                                       // 00000007B828: 84098403
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007B82C: D6100002 02291500
	s_lshl_b32 s7, s2, 1                                       // 00000007B834: 84078102
	s_lshl_b32 s11, s4, 1                                      // 00000007B838: 840B8104
	s_mov_b32 s33, 0                                           // 00000007B83C: BEA10080
	s_sub_i32 s3, s3, s5                                       // 00000007B840: 81830503
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007B844: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007B848: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B854: D6100000 02292900
	s_sub_i32 s2, s2, s5                                       // 00000007B85C: 81820502
	s_sub_i32 s4, s4, s5                                       // 00000007B860: 81840504
	v_add3_u32 v1, s8, s7, v1                                  // 00000007B864: D6550001 04040E08
	v_mov_b32_e32 v3, s2                                       // 00000007B86C: 7E060202
	v_add3_u32 v2, s10, s9, v2                                 // 00000007B870: D6550002 0408120A
	v_add3_u32 v0, s6, s11, v0                                 // 00000007B878: D6550000 04001606
	v_mov_b32_e32 v5, s4                                       // 00000007B880: 7E0A0204
	s_clause 0x2                                               // 00000007B884: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007B888: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007B890: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007B898: DC620000 00000500
	s_nop 0                                                    // 00000007B8A0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007B8A4: BFB60003
	s_endpgm                                                   // 00000007B8A8: BFB00000
subtract_char_get_group_id_x_symend:
	.long 0xbf800000                                           // 00000007B8AC: BF800000
	.long 0xbf800000                                           // 00000007B8B0: BF800000
	.long 0xbf800000                                           // 00000007B8B4: BF800000
	.long 0xbf800000                                           // 00000007B8B8: BF800000
	.long 0xbf800000                                           // 00000007B8BC: BF800000
	.long 0xbf800000                                           // 00000007B8C0: BF800000
	.long 0xbf800000                                           // 00000007B8C4: BF800000
	.long 0xbf800000                                           // 00000007B8C8: BF800000
	.long 0xbf800000                                           // 00000007B8CC: BF800000
	.long 0xbf800000                                           // 00000007B8D0: BF800000
	.long 0xbf800000                                           // 00000007B8D4: BF800000
	.long 0xbf800000                                           // 00000007B8D8: BF800000
	.long 0xbf800000                                           // 00000007B8DC: BF800000
	.long 0xbf800000                                           // 00000007B8E0: BF800000
	.long 0xbf800000                                           // 00000007B8E4: BF800000
	.long 0xbf800000                                           // 00000007B8E8: BF800000
	.long 0xbf800000                                           // 00000007B8EC: BF800000
	.long 0xbf800000                                           // 00000007B8F0: BF800000
	.long 0xbf800000                                           // 00000007B8F4: BF800000
	.long 0xbf800000                                           // 00000007B8F8: BF800000
	.long 0xbf800000                                           // 00000007B8FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_size_x,@function
	.size	subtract_char_get_local_size_x, subtract_char_get_local_size_x_symend-subtract_char_get_local_size_x
subtract_char_get_local_size_x:
	s_clause 0x1                                               // 00000007B900: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007B904: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007B90C: F4080300 F8000038
	s_add_u32 s5, s0, 16                                       // 00000007B914: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007B918: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007B91C: 820B8001
	s_lshl_b32 s13, s2, 1                                      // 00000007B920: 840D8102
	s_lshl_b32 s15, s3, 1                                      // 00000007B924: 840F8103
	s_lshl_b32 s16, s4, 2                                      // 00000007B928: 84108204
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007B92C: CA240080 010400FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007B938: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007B940: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007B948: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007B94C: BF0A0802
	v_add3_u32 v4, s12, s13, v4                                // 00000007B950: D6550004 04101A0C
	s_cselect_b32 s2, 12, 18                                   // 00000007B958: 9802928C
	v_add3_u32 v5, s14, s15, v5                                // 00000007B95C: D6550005 04141E0E
	s_add_u32 s6, s5, s2                                       // 00000007B964: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007B968: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007B96C: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000007B970: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000007B974: BF8704C9
	s_add_u32 s2, s5, s2                                       // 00000007B978: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000007B97C: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007B980: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000007B984: 98049690
	s_add_u32 s4, s5, s4                                       // 00000007B988: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000007B98C: 8205800B
	s_clause 0x2                                               // 00000007B990: BF850002
	global_load_u16 v2, v1, s[6:7]                             // 00000007B994: DC4A0000 02060001
	global_load_u16 v3, v1, s[2:3]                             // 00000007B99C: DC4A0000 03020001
	global_load_u16 v1, v1, s[4:5]                             // 00000007B9A4: DC4A0000 01040001
	s_clause 0x2                                               // 00000007B9AC: BF850002
	s_load_b32 s2, s[0:1], null                                // 00000007B9B0: F4000080 F8000000
	s_load_b32 s3, s[0:1], 0x48                                // 00000007B9B8: F40000C0 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007B9C0: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007B9C8: BF89FC07
	v_add3_u32 v0, s3, s16, v0                                 // 00000007B9CC: D6550000 04002003
	s_waitcnt vmcnt(2)                                         // 00000007B9D4: BF890BF7
	v_subrev_nc_u32_e32 v2, s2, v2                             // 00000007B9D8: 4E040402
	s_waitcnt vmcnt(1)                                         // 00000007B9DC: BF8907F7
	v_subrev_nc_u32_e32 v3, s2, v3                             // 00000007B9E0: 4E060602
	s_waitcnt vmcnt(0)                                         // 00000007B9E4: BF8903F7
	v_subrev_nc_u32_e32 v1, s2, v1                             // 00000007B9E8: 4E020202
	s_clause 0x2                                               // 00000007B9EC: BF850002
	global_store_b8 v4, v2, s[0:1]                             // 00000007B9F0: DC620000 00000204
	global_store_b8 v5, v3, s[0:1]                             // 00000007B9F8: DC620000 00000305
	global_store_b8 v0, v1, s[0:1]                             // 00000007BA00: DC620000 00000100
	s_nop 0                                                    // 00000007BA08: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BA0C: BFB60003
	s_endpgm                                                   // 00000007BA10: BFB00000
subtract_char_get_local_size_x_symend:
	.long 0xbf800000                                           // 00000007BA14: BF800000
	.long 0xbf800000                                           // 00000007BA18: BF800000
	.long 0xbf800000                                           // 00000007BA1C: BF800000
	.long 0xbf800000                                           // 00000007BA20: BF800000
	.long 0xbf800000                                           // 00000007BA24: BF800000
	.long 0xbf800000                                           // 00000007BA28: BF800000
	.long 0xbf800000                                           // 00000007BA2C: BF800000
	.long 0xbf800000                                           // 00000007BA30: BF800000
	.long 0xbf800000                                           // 00000007BA34: BF800000
	.long 0xbf800000                                           // 00000007BA38: BF800000
	.long 0xbf800000                                           // 00000007BA3C: BF800000
	.long 0xbf800000                                           // 00000007BA40: BF800000
	.long 0xbf800000                                           // 00000007BA44: BF800000
	.long 0xbf800000                                           // 00000007BA48: BF800000
	.long 0xbf800000                                           // 00000007BA4C: BF800000
	.long 0xbf800000                                           // 00000007BA50: BF800000
	.long 0xbf800000                                           // 00000007BA54: BF800000
	.long 0xbf800000                                           // 00000007BA58: BF800000
	.long 0xbf800000                                           // 00000007BA5C: BF800000
	.long 0xbf800000                                           // 00000007BA60: BF800000
	.long 0xbf800000                                           // 00000007BA64: BF800000
	.long 0xbf800000                                           // 00000007BA68: BF800000
	.long 0xbf800000                                           // 00000007BA6C: BF800000
	.long 0xbf800000                                           // 00000007BA70: BF800000
	.long 0xbf800000                                           // 00000007BA74: BF800000
	.long 0xbf800000                                           // 00000007BA78: BF800000
	.long 0xbf800000                                           // 00000007BA7C: BF800000
	.long 0xbf800000                                           // 00000007BA80: BF800000
	.long 0xbf800000                                           // 00000007BA84: BF800000
	.long 0xbf800000                                           // 00000007BA88: BF800000
	.long 0xbf800000                                           // 00000007BA8C: BF800000
	.long 0xbf800000                                           // 00000007BA90: BF800000
	.long 0xbf800000                                           // 00000007BA94: BF800000
	.long 0xbf800000                                           // 00000007BA98: BF800000
	.long 0xbf800000                                           // 00000007BA9C: BF800000
	.long 0xbf800000                                           // 00000007BAA0: BF800000
	.long 0xbf800000                                           // 00000007BAA4: BF800000
	.long 0xbf800000                                           // 00000007BAA8: BF800000
	.long 0xbf800000                                           // 00000007BAAC: BF800000
	.long 0xbf800000                                           // 00000007BAB0: BF800000
	.long 0xbf800000                                           // 00000007BAB4: BF800000
	.long 0xbf800000                                           // 00000007BAB8: BF800000
	.long 0xbf800000                                           // 00000007BABC: BF800000
	.long 0xbf800000                                           // 00000007BAC0: BF800000
	.long 0xbf800000                                           // 00000007BAC4: BF800000
	.long 0xbf800000                                           // 00000007BAC8: BF800000
	.long 0xbf800000                                           // 00000007BACC: BF800000
	.long 0xbf800000                                           // 00000007BAD0: BF800000
	.long 0xbf800000                                           // 00000007BAD4: BF800000
	.long 0xbf800000                                           // 00000007BAD8: BF800000
	.long 0xbf800000                                           // 00000007BADC: BF800000
	.long 0xbf800000                                           // 00000007BAE0: BF800000
	.long 0xbf800000                                           // 00000007BAE4: BF800000
	.long 0xbf800000                                           // 00000007BAE8: BF800000
	.long 0xbf800000                                           // 00000007BAEC: BF800000
	.long 0xbf800000                                           // 00000007BAF0: BF800000
	.long 0xbf800000                                           // 00000007BAF4: BF800000
	.long 0xbf800000                                           // 00000007BAF8: BF800000
	.long 0xbf800000                                           // 00000007BAFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_id_x,@function
	.size	subtract_char_get_global_id_x, subtract_char_get_global_id_x_symend-subtract_char_get_global_id_x
subtract_char_get_global_id_x:
	s_clause 0x3                                               // 00000007BB00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007BB04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007BB0C: F4000140 F8000048
	s_load_b32 s6, s[0:1], null                                // 00000007BB14: F4000180 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007BB1C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007BB24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007BB2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007BB34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007BB3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007BB40: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007BB44: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 00000007BB4C: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007BB54: BF870123
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007BB58: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007BB60: BF89FC07
	v_add_nc_u32_e32 v1, s10, v1                               // 00000007BB64: 4A02020A
	v_add_nc_u32_e32 v2, s8, v4                                // 00000007BB68: 4A040808
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007BB6C: BF870193
	v_add_nc_u32_e32 v3, s5, v0                                // 00000007BB70: 4A060005
	v_add_co_u32 v0, s2, s0, v1                                // 00000007BB74: D7000200 00020200
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007BB7C: BF870003
	v_subrev_nc_u32_e32 v5, s6, v2                             // 00000007BB80: 4E0A0406
	v_subrev_nc_u32_e32 v6, s6, v1                             // 00000007BB84: 4E0C0206
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007BB88: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v3                                // 00000007BB90: D7000202 00020600
	v_subrev_nc_u32_e32 v7, s6, v3                             // 00000007BB98: 4E0E0606
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007BB9C: D5207C03 00090001
	s_clause 0x2                                               // 00000007BBA4: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 00000007BBA8: DC620000 00000504
	global_store_b8 v[0:1], v6, off                            // 00000007BBB0: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007BBB8: DC620000 007C0702
	s_nop 0                                                    // 00000007BBC0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BBC4: BFB60003
	s_endpgm                                                   // 00000007BBC8: BFB00000
subtract_char_get_global_id_x_symend:
	.long 0xbf800000                                           // 00000007BBCC: BF800000
	.long 0xbf800000                                           // 00000007BBD0: BF800000
	.long 0xbf800000                                           // 00000007BBD4: BF800000
	.long 0xbf800000                                           // 00000007BBD8: BF800000
	.long 0xbf800000                                           // 00000007BBDC: BF800000
	.long 0xbf800000                                           // 00000007BBE0: BF800000
	.long 0xbf800000                                           // 00000007BBE4: BF800000
	.long 0xbf800000                                           // 00000007BBE8: BF800000
	.long 0xbf800000                                           // 00000007BBEC: BF800000
	.long 0xbf800000                                           // 00000007BBF0: BF800000
	.long 0xbf800000                                           // 00000007BBF4: BF800000
	.long 0xbf800000                                           // 00000007BBF8: BF800000
	.long 0xbf800000                                           // 00000007BBFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_size_x,@function
	.size	subtract_char_get_global_size_x, subtract_char_get_global_size_x_symend-subtract_char_get_global_size_x
subtract_char_get_global_size_x:
	v_mov_b32_e32 v1, 0                                        // 00000007BC00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007BC04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007BC0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007BC14: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 00000007BC1C: 84028402
	s_clause 0x1                                               // 00000007BC20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007BC24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007BC2C: DC4A0026 01000001
	s_clause 0x4                                               // 00000007BC34: BF850004
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007BC38: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007BC40: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007BC48: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x8                                 // 00000007BC50: F4000180 F8000008
	s_load_b64 s[0:1], s[0:1], null                            // 00000007BC58: F4040000 F8000000
	s_lshl_b32 s3, s3, 1                                       // 00000007BC60: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000007BC64: 84048104
	s_mov_b32 s33, 0                                           // 00000007BC68: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007BC6C: BF89FC07
	s_lshl_b32 s7, s8, 4                                       // 00000007BC70: 84078408
	s_lshl_b32 s8, s9, 1                                       // 00000007BC74: 84088109
	s_lshl_b32 s9, s10, 1                                      // 00000007BC78: 8409810A
	v_add3_u32 v3, s12, s2, v3                                 // 00000007BC7C: D6550003 040C040C
	s_sub_i32 s2, s7, s6                                       // 00000007BC84: 81820607
	v_add3_u32 v4, s14, s3, v4                                 // 00000007BC88: D6550004 0410060E
	s_sub_i32 s3, s8, s6                                       // 00000007BC90: 81830608
	v_add3_u32 v0, s5, s4, v0                                  // 00000007BC94: D6550000 04000805
	s_sub_i32 s4, s9, s6                                       // 00000007BC9C: 81840609
	s_waitcnt vmcnt(1)                                         // 00000007BCA0: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007BCA4: 320A0490
	v_add_nc_u32_e32 v2, s2, v2                                // 00000007BCA8: 4A040402
	s_waitcnt vmcnt(0)                                         // 00000007BCAC: BF8903F7
	v_add_nc_u32_e32 v1, s4, v1                                // 00000007BCB0: 4A020204
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007BCB4: BF870003
	v_add_nc_u32_e32 v5, s3, v5                                // 00000007BCB8: 4A0A0A03
	s_clause 0x2                                               // 00000007BCBC: BF850002
	global_store_b8 v3, v2, s[0:1]                             // 00000007BCC0: DC620000 00000203
	global_store_b8 v4, v5, s[0:1]                             // 00000007BCC8: DC620000 00000504
	global_store_b8 v0, v1, s[0:1]                             // 00000007BCD0: DC620000 00000100
	s_nop 0                                                    // 00000007BCD8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BCDC: BFB60003
	s_endpgm                                                   // 00000007BCE0: BFB00000
subtract_char_get_global_size_x_symend:
	.long 0xbf800000                                           // 00000007BCE4: BF800000
	.long 0xbf800000                                           // 00000007BCE8: BF800000
	.long 0xbf800000                                           // 00000007BCEC: BF800000
	.long 0xbf800000                                           // 00000007BCF0: BF800000
	.long 0xbf800000                                           // 00000007BCF4: BF800000
	.long 0xbf800000                                           // 00000007BCF8: BF800000
	.long 0xbf800000                                           // 00000007BCFC: BF800000

	.p2align	8
	.type	subtract_char_get_num_groups_x,@function
	.size	subtract_char_get_num_groups_x, subtract_char_get_num_groups_x_symend-subtract_char_get_num_groups_x
subtract_char_get_num_groups_x:
	v_mov_b32_e32 v1, 0                                        // 00000007BD00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007BD04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007BD0C: D6100004 02291500
	s_lshl_b32 s2, s2, 1                                       // 00000007BD14: 84028102
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007BD18: D6100000 02292900
	s_clause 0x1                                               // 00000007BD20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007BD24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007BD2C: DC4A0026 01000001
	s_clause 0x2                                               // 00000007BD34: BF850002
	s_load_b32 s5, s[0:1], null                                // 00000007BD38: F4000140 F8000000
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007BD40: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007BD48: F4080300 F8000038
	s_waitcnt lgkmcnt(0)                                       // 00000007BD50: BF89FC07
	s_clause 0x1                                               // 00000007BD54: BF850001
	s_load_b32 s11, s[0:1], 0x48                               // 00000007BD58: F40002C0 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007BD60: F4040180 F8000008
	s_lshl_b32 s0, s3, 1                                       // 00000007BD68: 84008103
	s_lshl_b32 s1, s4, 2                                       // 00000007BD6C: 84018204
	s_mov_b32 s33, 0                                           // 00000007BD70: BEA10080
	s_sub_i32 s3, s8, s5                                       // 00000007BD74: 81830508
	s_waitcnt lgkmcnt(0)                                       // 00000007BD78: BF89FC07
	v_add3_u32 v0, s11, s1, v0                                 // 00000007BD7C: D6550000 0400020B
	s_waitcnt vmcnt(1)                                         // 00000007BD84: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007BD88: 320A0490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007BD8C: 7C7A0480
	v_add3_u32 v2, s12, s2, v3                                 // 00000007BD90: D6550002 040C040C
	v_add3_u32 v3, s14, s0, v4                                 // 00000007BD98: D6550003 0410000E
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007BDA0: BF870004
	v_cmp_ne_u16_e64 s0, 0, v5.l                               // 00000007BDA4: D43D0000 00020A80
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007BDAC: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007BDB0: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000007BDB4: 7C7A0280
	s_addc_u32 s2, s3, 0                                       // 00000007BDB8: 82028003
	s_sub_i32 s3, s9, s5                                       // 00000007BDBC: 81830509
	s_cmp_lg_u32 s0, 0                                         // 00000007BDC0: BF078000
	v_mov_b32_e32 v1, s2                                       // 00000007BDC4: 7E020202
	s_addc_u32 s0, s3, 0                                       // 00000007BDC8: 82008003
	s_sub_i32 s2, s10, s5                                      // 00000007BDCC: 8182050A
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007BDD0: BF07806A
	v_mov_b32_e32 v4, s0                                       // 00000007BDD4: 7E080200
	s_addc_u32 s0, s2, 0                                       // 00000007BDD8: 82008002
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007BDDC: BF870009
	v_mov_b32_e32 v5, s0                                       // 00000007BDE0: 7E0A0200
	s_clause 0x2                                               // 00000007BDE4: BF850002
	global_store_b8 v2, v1, s[6:7]                             // 00000007BDE8: DC620000 00060102
	global_store_b8 v3, v4, s[6:7]                             // 00000007BDF0: DC620000 00060403
	global_store_b8 v0, v5, s[6:7]                             // 00000007BDF8: DC620000 00060500
	s_nop 0                                                    // 00000007BE00: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BE04: BFB60003
	s_endpgm                                                   // 00000007BE08: BFB00000
subtract_char_get_num_groups_x_symend:
	.long 0xbf800000                                           // 00000007BE0C: BF800000
	.long 0xbf800000                                           // 00000007BE10: BF800000
	.long 0xbf800000                                           // 00000007BE14: BF800000
	.long 0xbf800000                                           // 00000007BE18: BF800000
	.long 0xbf800000                                           // 00000007BE1C: BF800000
	.long 0xbf800000                                           // 00000007BE20: BF800000
	.long 0xbf800000                                           // 00000007BE24: BF800000
	.long 0xbf800000                                           // 00000007BE28: BF800000
	.long 0xbf800000                                           // 00000007BE2C: BF800000
	.long 0xbf800000                                           // 00000007BE30: BF800000
	.long 0xbf800000                                           // 00000007BE34: BF800000
	.long 0xbf800000                                           // 00000007BE38: BF800000
	.long 0xbf800000                                           // 00000007BE3C: BF800000
	.long 0xbf800000                                           // 00000007BE40: BF800000
	.long 0xbf800000                                           // 00000007BE44: BF800000
	.long 0xbf800000                                           // 00000007BE48: BF800000
	.long 0xbf800000                                           // 00000007BE4C: BF800000
	.long 0xbf800000                                           // 00000007BE50: BF800000
	.long 0xbf800000                                           // 00000007BE54: BF800000
	.long 0xbf800000                                           // 00000007BE58: BF800000
	.long 0xbf800000                                           // 00000007BE5C: BF800000
	.long 0xbf800000                                           // 00000007BE60: BF800000
	.long 0xbf800000                                           // 00000007BE64: BF800000
	.long 0xbf800000                                           // 00000007BE68: BF800000
	.long 0xbf800000                                           // 00000007BE6C: BF800000
	.long 0xbf800000                                           // 00000007BE70: BF800000
	.long 0xbf800000                                           // 00000007BE74: BF800000
	.long 0xbf800000                                           // 00000007BE78: BF800000
	.long 0xbf800000                                           // 00000007BE7C: BF800000
	.long 0xbf800000                                           // 00000007BE80: BF800000
	.long 0xbf800000                                           // 00000007BE84: BF800000
	.long 0xbf800000                                           // 00000007BE88: BF800000
	.long 0xbf800000                                           // 00000007BE8C: BF800000
	.long 0xbf800000                                           // 00000007BE90: BF800000
	.long 0xbf800000                                           // 00000007BE94: BF800000
	.long 0xbf800000                                           // 00000007BE98: BF800000
	.long 0xbf800000                                           // 00000007BE9C: BF800000
	.long 0xbf800000                                           // 00000007BEA0: BF800000
	.long 0xbf800000                                           // 00000007BEA4: BF800000
	.long 0xbf800000                                           // 00000007BEA8: BF800000
	.long 0xbf800000                                           // 00000007BEAC: BF800000
	.long 0xbf800000                                           // 00000007BEB0: BF800000
	.long 0xbf800000                                           // 00000007BEB4: BF800000
	.long 0xbf800000                                           // 00000007BEB8: BF800000
	.long 0xbf800000                                           // 00000007BEBC: BF800000
	.long 0xbf800000                                           // 00000007BEC0: BF800000
	.long 0xbf800000                                           // 00000007BEC4: BF800000
	.long 0xbf800000                                           // 00000007BEC8: BF800000
	.long 0xbf800000                                           // 00000007BECC: BF800000
	.long 0xbf800000                                           // 00000007BED0: BF800000
	.long 0xbf800000                                           // 00000007BED4: BF800000
	.long 0xbf800000                                           // 00000007BED8: BF800000
	.long 0xbf800000                                           // 00000007BEDC: BF800000
	.long 0xbf800000                                           // 00000007BEE0: BF800000
	.long 0xbf800000                                           // 00000007BEE4: BF800000
	.long 0xbf800000                                           // 00000007BEE8: BF800000
	.long 0xbf800000                                           // 00000007BEEC: BF800000
	.long 0xbf800000                                           // 00000007BEF0: BF800000
	.long 0xbf800000                                           // 00000007BEF4: BF800000
	.long 0xbf800000                                           // 00000007BEF8: BF800000
	.long 0xbf800000                                           // 00000007BEFC: BF800000

	.p2align	8
	.type	subtract_char_get_work_dim_x,@function
	.size	subtract_char_get_work_dim_x, subtract_char_get_work_dim_x_symend-subtract_char_get_work_dim_x
subtract_char_get_work_dim_x:
	s_clause 0x3                                               // 00000007BF00: BF850003
	s_load_b32 s3, s[0:1], null                                // 00000007BF04: F40000C0 F8000000
	s_load_b32 s4, s[0:1], 0x50                                // 00000007BF0C: F4000100 F8000050
	s_load_b32 s5, s[0:1], 0x38                                // 00000007BF14: F4000140 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007BF1C: F4040000 F8000008
	s_lshl_b32 s2, s2, 1                                       // 00000007BF24: 84028102
	s_mov_b32 s33, 0                                           // 00000007BF28: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007BF2C: BF89FC07
	s_sub_i32 s3, s4, s3                                       // 00000007BF30: 81830304
	v_add3_u32 v0, s5, s2, v0                                  // 00000007BF34: D6550000 04000405
	v_mov_b32_e32 v1, s3                                       // 00000007BF3C: 7E020203
	global_store_b8 v0, v1, s[0:1]                             // 00000007BF40: DC620000 00000100
	s_nop 0                                                    // 00000007BF48: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007BF4C: BFB60003
	s_endpgm                                                   // 00000007BF50: BFB00000
subtract_char_get_work_dim_x_symend:
	.long 0xbf800000                                           // 00000007BF54: BF800000
	.long 0xbf800000                                           // 00000007BF58: BF800000
	.long 0xbf800000                                           // 00000007BF5C: BF800000
	.long 0xbf800000                                           // 00000007BF60: BF800000
	.long 0xbf800000                                           // 00000007BF64: BF800000
	.long 0xbf800000                                           // 00000007BF68: BF800000
	.long 0xbf800000                                           // 00000007BF6C: BF800000
	.long 0xbf800000                                           // 00000007BF70: BF800000
	.long 0xbf800000                                           // 00000007BF74: BF800000
	.long 0xbf800000                                           // 00000007BF78: BF800000
	.long 0xbf800000                                           // 00000007BF7C: BF800000
	.long 0xbf800000                                           // 00000007BF80: BF800000
	.long 0xbf800000                                           // 00000007BF84: BF800000
	.long 0xbf800000                                           // 00000007BF88: BF800000
	.long 0xbf800000                                           // 00000007BF8C: BF800000
	.long 0xbf800000                                           // 00000007BF90: BF800000
	.long 0xbf800000                                           // 00000007BF94: BF800000
	.long 0xbf800000                                           // 00000007BF98: BF800000
	.long 0xbf800000                                           // 00000007BF9C: BF800000
	.long 0xbf800000                                           // 00000007BFA0: BF800000
	.long 0xbf800000                                           // 00000007BFA4: BF800000
	.long 0xbf800000                                           // 00000007BFA8: BF800000
	.long 0xbf800000                                           // 00000007BFAC: BF800000
	.long 0xbf800000                                           // 00000007BFB0: BF800000
	.long 0xbf800000                                           // 00000007BFB4: BF800000
	.long 0xbf800000                                           // 00000007BFB8: BF800000
	.long 0xbf800000                                           // 00000007BFBC: BF800000
	.long 0xbf800000                                           // 00000007BFC0: BF800000
	.long 0xbf800000                                           // 00000007BFC4: BF800000
	.long 0xbf800000                                           // 00000007BFC8: BF800000
	.long 0xbf800000                                           // 00000007BFCC: BF800000
	.long 0xbf800000                                           // 00000007BFD0: BF800000
	.long 0xbf800000                                           // 00000007BFD4: BF800000
	.long 0xbf800000                                           // 00000007BFD8: BF800000
	.long 0xbf800000                                           // 00000007BFDC: BF800000
	.long 0xbf800000                                           // 00000007BFE0: BF800000
	.long 0xbf800000                                           // 00000007BFE4: BF800000
	.long 0xbf800000                                           // 00000007BFE8: BF800000
	.long 0xbf800000                                           // 00000007BFEC: BF800000
	.long 0xbf800000                                           // 00000007BFF0: BF800000
	.long 0xbf800000                                           // 00000007BFF4: BF800000
	.long 0xbf800000                                           // 00000007BFF8: BF800000
	.long 0xbf800000                                           // 00000007BFFC: BF800000

	.p2align	8
	.type	subtract_char_x_get_global_offset,@function
	.size	subtract_char_x_get_global_offset, subtract_char_x_get_global_offset_symend-subtract_char_x_get_global_offset
subtract_char_x_get_global_offset:
	s_clause 0x3                                               // 00000007C000: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007C004: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C00C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007C014: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007C01C: F4040000 F8000000
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007C024: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007C02C: D6100002 02291500
	s_lshl_b32 s2, s2, 4                                       // 00000007C034: 84028402
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C038: D6100000 02292900
	s_lshl_b32 s3, s3, 1                                       // 00000007C040: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000007C044: 84048104
	s_mov_b32 s33, 0                                           // 00000007C048: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C04C: BF89FC07
	s_sub_i32 s7, s5, s8                                       // 00000007C050: 81870805
	v_add3_u32 v1, s8, s2, v1                                  // 00000007C054: D6550001 04040408
	s_sub_i32 s2, s5, s10                                      // 00000007C05C: 81820A05
	v_add3_u32 v2, s10, s3, v2                                 // 00000007C060: D6550002 0408060A
	v_mov_b32_e32 v4, s2                                       // 00000007C068: 7E080202
	s_sub_i32 s3, s5, s6                                       // 00000007C06C: 81830605
	v_mov_b32_e32 v3, s7                                       // 00000007C070: 7E060207
	v_add3_u32 v0, s6, s4, v0                                  // 00000007C074: D6550000 04000806
	v_mov_b32_e32 v5, s3                                       // 00000007C07C: 7E0A0203
	s_clause 0x2                                               // 00000007C080: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007C084: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007C08C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007C094: DC620000 00000500
	s_nop 0                                                    // 00000007C09C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C0A0: BFB60003
	s_endpgm                                                   // 00000007C0A4: BFB00000
subtract_char_x_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007C0A8: BF800000
	.long 0xbf800000                                           // 00000007C0AC: BF800000
	.long 0xbf800000                                           // 00000007C0B0: BF800000
	.long 0xbf800000                                           // 00000007C0B4: BF800000
	.long 0xbf800000                                           // 00000007C0B8: BF800000
	.long 0xbf800000                                           // 00000007C0BC: BF800000
	.long 0xbf800000                                           // 00000007C0C0: BF800000
	.long 0xbf800000                                           // 00000007C0C4: BF800000
	.long 0xbf800000                                           // 00000007C0C8: BF800000
	.long 0xbf800000                                           // 00000007C0CC: BF800000
	.long 0xbf800000                                           // 00000007C0D0: BF800000
	.long 0xbf800000                                           // 00000007C0D4: BF800000
	.long 0xbf800000                                           // 00000007C0D8: BF800000
	.long 0xbf800000                                           // 00000007C0DC: BF800000
	.long 0xbf800000                                           // 00000007C0E0: BF800000
	.long 0xbf800000                                           // 00000007C0E4: BF800000
	.long 0xbf800000                                           // 00000007C0E8: BF800000
	.long 0xbf800000                                           // 00000007C0EC: BF800000
	.long 0xbf800000                                           // 00000007C0F0: BF800000
	.long 0xbf800000                                           // 00000007C0F4: BF800000
	.long 0xbf800000                                           // 00000007C0F8: BF800000
	.long 0xbf800000                                           // 00000007C0FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_offset_get_global_offset,@function
	.size	subtract_char_get_global_offset_get_global_offset, subtract_char_get_global_offset_get_global_offset_symend-subtract_char_get_global_offset_get_global_offset
subtract_char_get_global_offset_get_global_offset:
	s_clause 0x2                                               // 00000007C100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007C10C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C114: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007C11C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007C128: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C130: D6100000 02292900
	s_lshl_b32 s2, s2, 1                                       // 00000007C138: 84028102
	s_lshl_b32 s3, s3, 4                                       // 00000007C13C: 84038403
	s_lshl_b32 s4, s4, 1                                       // 00000007C140: 84048104
	s_mov_b32 s33, 0                                           // 00000007C144: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C148: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 00000007C14C: D6550002 04080408
	v_add3_u32 v3, s10, s3, v3                                 // 00000007C154: D6550003 040C060A
	v_add3_u32 v0, s5, s4, v0                                  // 00000007C15C: D6550000 04000805
	s_clause 0x2                                               // 00000007C164: BF850002
	global_store_b8 v2, v1, s[0:1]                             // 00000007C168: DC620000 00000102
	global_store_b8 v3, v1, s[0:1]                             // 00000007C170: DC620000 00000103
	global_store_b8 v0, v1, s[0:1]                             // 00000007C178: DC620000 00000100
	s_nop 0                                                    // 00000007C180: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C184: BFB60003
	s_endpgm                                                   // 00000007C188: BFB00000
subtract_char_get_global_offset_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007C18C: BF800000
	.long 0xbf800000                                           // 00000007C190: BF800000
	.long 0xbf800000                                           // 00000007C194: BF800000
	.long 0xbf800000                                           // 00000007C198: BF800000
	.long 0xbf800000                                           // 00000007C19C: BF800000
	.long 0xbf800000                                           // 00000007C1A0: BF800000
	.long 0xbf800000                                           // 00000007C1A4: BF800000
	.long 0xbf800000                                           // 00000007C1A8: BF800000
	.long 0xbf800000                                           // 00000007C1AC: BF800000
	.long 0xbf800000                                           // 00000007C1B0: BF800000
	.long 0xbf800000                                           // 00000007C1B4: BF800000
	.long 0xbf800000                                           // 00000007C1B8: BF800000
	.long 0xbf800000                                           // 00000007C1BC: BF800000
	.long 0xbf800000                                           // 00000007C1C0: BF800000
	.long 0xbf800000                                           // 00000007C1C4: BF800000
	.long 0xbf800000                                           // 00000007C1C8: BF800000
	.long 0xbf800000                                           // 00000007C1CC: BF800000
	.long 0xbf800000                                           // 00000007C1D0: BF800000
	.long 0xbf800000                                           // 00000007C1D4: BF800000
	.long 0xbf800000                                           // 00000007C1D8: BF800000
	.long 0xbf800000                                           // 00000007C1DC: BF800000
	.long 0xbf800000                                           // 00000007C1E0: BF800000
	.long 0xbf800000                                           // 00000007C1E4: BF800000
	.long 0xbf800000                                           // 00000007C1E8: BF800000
	.long 0xbf800000                                           // 00000007C1EC: BF800000
	.long 0xbf800000                                           // 00000007C1F0: BF800000
	.long 0xbf800000                                           // 00000007C1F4: BF800000
	.long 0xbf800000                                           // 00000007C1F8: BF800000
	.long 0xbf800000                                           // 00000007C1FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_id_get_global_offset,@function
	.size	subtract_char_get_local_id_get_global_offset, subtract_char_get_local_id_get_global_offset_symend-subtract_char_get_local_id_get_global_offset
subtract_char_get_local_id_get_global_offset:
	s_clause 0x2                                               // 00000007C200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007C20C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C214: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007C21C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007C224: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C22C: D6100000 02292900
	s_lshl_b32 s2, s2, 3                                       // 00000007C234: 84028302
	s_lshl_b32 s3, s3, 2                                       // 00000007C238: 84038203
	s_lshl_b32 s4, s4, 1                                       // 00000007C23C: 84048104
	s_mov_b32 s33, 0                                           // 00000007C240: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C244: BF89FC07
	v_subrev_nc_u32_e32 v3, s8, v1                             // 00000007C248: 4E060208
	v_add3_u32 v1, s8, s2, v1                                  // 00000007C24C: D6550001 04040408
	v_subrev_nc_u32_e32 v4, s10, v2                            // 00000007C254: 4E08040A
	v_add3_u32 v2, s10, s3, v2                                 // 00000007C258: D6550002 0408060A
	v_subrev_nc_u32_e32 v5, s5, v0                             // 00000007C260: 4E0A0005
	v_add3_u32 v0, s5, s4, v0                                  // 00000007C264: D6550000 04000805
	s_clause 0x2                                               // 00000007C26C: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007C270: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007C278: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007C280: DC620000 00000500
	s_nop 0                                                    // 00000007C288: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C28C: BFB60003
	s_endpgm                                                   // 00000007C290: BFB00000
subtract_char_get_local_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007C294: BF800000
	.long 0xbf800000                                           // 00000007C298: BF800000
	.long 0xbf800000                                           // 00000007C29C: BF800000
	.long 0xbf800000                                           // 00000007C2A0: BF800000
	.long 0xbf800000                                           // 00000007C2A4: BF800000
	.long 0xbf800000                                           // 00000007C2A8: BF800000
	.long 0xbf800000                                           // 00000007C2AC: BF800000
	.long 0xbf800000                                           // 00000007C2B0: BF800000
	.long 0xbf800000                                           // 00000007C2B4: BF800000
	.long 0xbf800000                                           // 00000007C2B8: BF800000
	.long 0xbf800000                                           // 00000007C2BC: BF800000
	.long 0xbf800000                                           // 00000007C2C0: BF800000
	.long 0xbf800000                                           // 00000007C2C4: BF800000
	.long 0xbf800000                                           // 00000007C2C8: BF800000
	.long 0xbf800000                                           // 00000007C2CC: BF800000
	.long 0xbf800000                                           // 00000007C2D0: BF800000
	.long 0xbf800000                                           // 00000007C2D4: BF800000
	.long 0xbf800000                                           // 00000007C2D8: BF800000
	.long 0xbf800000                                           // 00000007C2DC: BF800000
	.long 0xbf800000                                           // 00000007C2E0: BF800000
	.long 0xbf800000                                           // 00000007C2E4: BF800000
	.long 0xbf800000                                           // 00000007C2E8: BF800000
	.long 0xbf800000                                           // 00000007C2EC: BF800000
	.long 0xbf800000                                           // 00000007C2F0: BF800000
	.long 0xbf800000                                           // 00000007C2F4: BF800000
	.long 0xbf800000                                           // 00000007C2F8: BF800000
	.long 0xbf800000                                           // 00000007C2FC: BF800000

	.p2align	8
	.type	subtract_char_get_group_id_get_global_offset,@function
	.size	subtract_char_get_group_id_get_global_offset, subtract_char_get_group_id_get_global_offset_symend-subtract_char_get_group_id_get_global_offset
subtract_char_get_group_id_get_global_offset:
	s_clause 0x2                                               // 00000007C300: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007C30C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C314: F4040000 F8000008
	s_lshl_b32 s7, s3, 4                                       // 00000007C31C: 84078403
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007C320: D6100002 02291500
	s_lshl_b32 s6, s2, 1                                       // 00000007C328: 84068102
	s_waitcnt lgkmcnt(0)                                       // 00000007C32C: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000007C330: 84098104
	s_mov_b32 s33, 0                                           // 00000007C334: BEA10080
	s_sub_i32 s3, s3, s10                                      // 00000007C338: 81830A03
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007C33C: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007C340: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C34C: D6100000 02292900
	s_sub_i32 s2, s2, s8                                       // 00000007C354: 81820802
	s_sub_i32 s4, s4, s5                                       // 00000007C358: 81840504
	v_add3_u32 v1, s8, s6, v1                                  // 00000007C35C: D6550001 04040C08
	v_mov_b32_e32 v3, s2                                       // 00000007C364: 7E060202
	v_add3_u32 v2, s10, s7, v2                                 // 00000007C368: D6550002 04080E0A
	v_add3_u32 v0, s5, s9, v0                                  // 00000007C370: D6550000 04001205
	v_mov_b32_e32 v5, s4                                       // 00000007C378: 7E0A0204
	s_clause 0x2                                               // 00000007C37C: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007C380: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007C388: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007C390: DC620000 00000500
	s_nop 0                                                    // 00000007C398: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C39C: BFB60003
	s_endpgm                                                   // 00000007C3A0: BFB00000
subtract_char_get_group_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007C3A4: BF800000
	.long 0xbf800000                                           // 00000007C3A8: BF800000
	.long 0xbf800000                                           // 00000007C3AC: BF800000
	.long 0xbf800000                                           // 00000007C3B0: BF800000
	.long 0xbf800000                                           // 00000007C3B4: BF800000
	.long 0xbf800000                                           // 00000007C3B8: BF800000
	.long 0xbf800000                                           // 00000007C3BC: BF800000
	.long 0xbf800000                                           // 00000007C3C0: BF800000
	.long 0xbf800000                                           // 00000007C3C4: BF800000
	.long 0xbf800000                                           // 00000007C3C8: BF800000
	.long 0xbf800000                                           // 00000007C3CC: BF800000
	.long 0xbf800000                                           // 00000007C3D0: BF800000
	.long 0xbf800000                                           // 00000007C3D4: BF800000
	.long 0xbf800000                                           // 00000007C3D8: BF800000
	.long 0xbf800000                                           // 00000007C3DC: BF800000
	.long 0xbf800000                                           // 00000007C3E0: BF800000
	.long 0xbf800000                                           // 00000007C3E4: BF800000
	.long 0xbf800000                                           // 00000007C3E8: BF800000
	.long 0xbf800000                                           // 00000007C3EC: BF800000
	.long 0xbf800000                                           // 00000007C3F0: BF800000
	.long 0xbf800000                                           // 00000007C3F4: BF800000
	.long 0xbf800000                                           // 00000007C3F8: BF800000
	.long 0xbf800000                                           // 00000007C3FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_size_get_global_offset,@function
	.size	subtract_char_get_local_size_get_global_offset, subtract_char_get_local_size_get_global_offset_symend-subtract_char_get_local_size_get_global_offset
subtract_char_get_local_size_get_global_offset:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007C400: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007C408: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007C40C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007C410: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 00000007C414: 84108102
	s_lshl_b32 s17, s3, 1                                      // 00000007C418: 84118103
	s_lshl_b32 s18, s4, 2                                      // 00000007C41C: 84128204
	v_mov_b32_e32 v1, 0                                        // 00000007C420: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007C424: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007C42C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007C430: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007C434: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007C438: BF870009
	s_add_u32 s6, s5, s2                                       // 00000007C43C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007C440: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007C444: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 00000007C448: DC4A0000 02060001
	s_clause 0x1                                               // 00000007C450: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007C454: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007C45C: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007C464: 9802948E
	s_load_b32 s3, s[0:1], 0x48                                // 00000007C468: F40000C0 F8000048
	s_add_u32 s0, s5, s2                                       // 00000007C470: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007C474: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007C478: BF0A0A04
	s_waitcnt lgkmcnt(0)                                       // 00000007C47C: BF89FC07
	v_add3_u32 v3, s12, s16, v3                                // 00000007C480: D6550003 040C200C
	s_waitcnt vmcnt(0)                                         // 00000007C488: BF8903F7
	v_subrev_nc_u32_e32 v2, s12, v2                            // 00000007C48C: 4E04040C
	global_store_b8 v3, v2, s[6:7]                             // 00000007C490: DC620000 00060203
	global_load_u16 v2, v1, s[0:1]                             // 00000007C498: DC4A0000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007C4A0: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007C4A8: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C4AC: D6100000 02292900
	s_add_u32 s0, s5, s0                                       // 00000007C4B4: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007C4B8: 8201800B
	v_add3_u32 v3, s14, s17, v3                                // 00000007C4BC: D6550003 040C220E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007C4C4: BF870002
	v_add3_u32 v0, s3, s18, v0                                 // 00000007C4C8: D6550000 04002403
	s_waitcnt vmcnt(0)                                         // 00000007C4D0: BF8903F7
	v_subrev_nc_u32_e32 v2, s14, v2                            // 00000007C4D4: 4E04040E
	global_store_b8 v3, v2, s[6:7]                             // 00000007C4D8: DC620000 00060203
	global_load_u16 v1, v1, s[0:1]                             // 00000007C4E0: DC4A0000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007C4E8: BF8903F7
	v_subrev_nc_u32_e32 v1, s3, v1                             // 00000007C4EC: 4E020203
	global_store_b8 v0, v1, s[6:7]                             // 00000007C4F0: DC620000 00060100
	s_nop 0                                                    // 00000007C4F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C4FC: BFB60003
	s_endpgm                                                   // 00000007C500: BFB00000
subtract_char_get_local_size_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007C504: BF800000
	.long 0xbf800000                                           // 00000007C508: BF800000
	.long 0xbf800000                                           // 00000007C50C: BF800000
	.long 0xbf800000                                           // 00000007C510: BF800000
	.long 0xbf800000                                           // 00000007C514: BF800000
	.long 0xbf800000                                           // 00000007C518: BF800000
	.long 0xbf800000                                           // 00000007C51C: BF800000
	.long 0xbf800000                                           // 00000007C520: BF800000
	.long 0xbf800000                                           // 00000007C524: BF800000
	.long 0xbf800000                                           // 00000007C528: BF800000
	.long 0xbf800000                                           // 00000007C52C: BF800000
	.long 0xbf800000                                           // 00000007C530: BF800000
	.long 0xbf800000                                           // 00000007C534: BF800000
	.long 0xbf800000                                           // 00000007C538: BF800000
	.long 0xbf800000                                           // 00000007C53C: BF800000
	.long 0xbf800000                                           // 00000007C540: BF800000
	.long 0xbf800000                                           // 00000007C544: BF800000
	.long 0xbf800000                                           // 00000007C548: BF800000
	.long 0xbf800000                                           // 00000007C54C: BF800000
	.long 0xbf800000                                           // 00000007C550: BF800000
	.long 0xbf800000                                           // 00000007C554: BF800000
	.long 0xbf800000                                           // 00000007C558: BF800000
	.long 0xbf800000                                           // 00000007C55C: BF800000
	.long 0xbf800000                                           // 00000007C560: BF800000
	.long 0xbf800000                                           // 00000007C564: BF800000
	.long 0xbf800000                                           // 00000007C568: BF800000
	.long 0xbf800000                                           // 00000007C56C: BF800000
	.long 0xbf800000                                           // 00000007C570: BF800000
	.long 0xbf800000                                           // 00000007C574: BF800000
	.long 0xbf800000                                           // 00000007C578: BF800000
	.long 0xbf800000                                           // 00000007C57C: BF800000
	.long 0xbf800000                                           // 00000007C580: BF800000
	.long 0xbf800000                                           // 00000007C584: BF800000
	.long 0xbf800000                                           // 00000007C588: BF800000
	.long 0xbf800000                                           // 00000007C58C: BF800000
	.long 0xbf800000                                           // 00000007C590: BF800000
	.long 0xbf800000                                           // 00000007C594: BF800000
	.long 0xbf800000                                           // 00000007C598: BF800000
	.long 0xbf800000                                           // 00000007C59C: BF800000
	.long 0xbf800000                                           // 00000007C5A0: BF800000
	.long 0xbf800000                                           // 00000007C5A4: BF800000
	.long 0xbf800000                                           // 00000007C5A8: BF800000
	.long 0xbf800000                                           // 00000007C5AC: BF800000
	.long 0xbf800000                                           // 00000007C5B0: BF800000
	.long 0xbf800000                                           // 00000007C5B4: BF800000
	.long 0xbf800000                                           // 00000007C5B8: BF800000
	.long 0xbf800000                                           // 00000007C5BC: BF800000
	.long 0xbf800000                                           // 00000007C5C0: BF800000
	.long 0xbf800000                                           // 00000007C5C4: BF800000
	.long 0xbf800000                                           // 00000007C5C8: BF800000
	.long 0xbf800000                                           // 00000007C5CC: BF800000
	.long 0xbf800000                                           // 00000007C5D0: BF800000
	.long 0xbf800000                                           // 00000007C5D4: BF800000
	.long 0xbf800000                                           // 00000007C5D8: BF800000
	.long 0xbf800000                                           // 00000007C5DC: BF800000
	.long 0xbf800000                                           // 00000007C5E0: BF800000
	.long 0xbf800000                                           // 00000007C5E4: BF800000
	.long 0xbf800000                                           // 00000007C5E8: BF800000
	.long 0xbf800000                                           // 00000007C5EC: BF800000
	.long 0xbf800000                                           // 00000007C5F0: BF800000
	.long 0xbf800000                                           // 00000007C5F4: BF800000
	.long 0xbf800000                                           // 00000007C5F8: BF800000
	.long 0xbf800000                                           // 00000007C5FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_id_get_global_offset,@function
	.size	subtract_char_get_global_id_get_global_offset, subtract_char_get_global_id_get_global_offset_symend-subtract_char_get_global_id_get_global_offset
subtract_char_get_global_id_get_global_offset:
	s_clause 0x1                                               // 00000007C600: BF850001
	s_load_b128 s[8:11], s[0:1], 0x40                          // 00000007C604: F4080200 F8000040
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C60C: F4040000 F8000008
	v_bfe_u32 v1, v0, 10, 10                                   // 00000007C614: D6100001 02291500
	v_bfe_u32 v2, v0, 20, 10                                   // 00000007C61C: D6100002 02292900
	v_and_b32_e32 v0, 0x3ff, v0                                // 00000007C624: 360000FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007C62C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C630: BF870193
	v_lshl_or_b32 v1, s3, 1, v1                                // 00000007C634: D6560001 04050203
	v_lshl_or_b32 v2, s4, 2, v2                                // 00000007C63C: D6560002 04090404
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007C644: BF8701A3
	v_lshl_or_b32 v0, s2, 1, v0                                // 00000007C648: D6560000 04010202
	s_waitcnt lgkmcnt(0)                                       // 00000007C650: BF89FC07
	v_add_nc_u32_e32 v3, s8, v1                                // 00000007C654: 4A060208
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007C658: BF870003
	v_add_nc_u32_e32 v4, s10, v2                               // 00000007C65C: 4A08040A
	s_clause 0x2                                               // 00000007C660: BF850002
	global_store_b8 v0, v0, s[0:1]                             // 00000007C664: DC620000 00000000
	global_store_b8 v3, v1, s[0:1]                             // 00000007C66C: DC620000 00000103
	global_store_b8 v4, v2, s[0:1]                             // 00000007C674: DC620000 00000204
	s_nop 0                                                    // 00000007C67C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C680: BFB60003
	s_endpgm                                                   // 00000007C684: BFB00000
subtract_char_get_global_id_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007C688: BF800000
	.long 0xbf800000                                           // 00000007C68C: BF800000
	.long 0xbf800000                                           // 00000007C690: BF800000
	.long 0xbf800000                                           // 00000007C694: BF800000
	.long 0xbf800000                                           // 00000007C698: BF800000
	.long 0xbf800000                                           // 00000007C69C: BF800000
	.long 0xbf800000                                           // 00000007C6A0: BF800000
	.long 0xbf800000                                           // 00000007C6A4: BF800000
	.long 0xbf800000                                           // 00000007C6A8: BF800000
	.long 0xbf800000                                           // 00000007C6AC: BF800000
	.long 0xbf800000                                           // 00000007C6B0: BF800000
	.long 0xbf800000                                           // 00000007C6B4: BF800000
	.long 0xbf800000                                           // 00000007C6B8: BF800000
	.long 0xbf800000                                           // 00000007C6BC: BF800000
	.long 0xbf800000                                           // 00000007C6C0: BF800000
	.long 0xbf800000                                           // 00000007C6C4: BF800000
	.long 0xbf800000                                           // 00000007C6C8: BF800000
	.long 0xbf800000                                           // 00000007C6CC: BF800000
	.long 0xbf800000                                           // 00000007C6D0: BF800000
	.long 0xbf800000                                           // 00000007C6D4: BF800000
	.long 0xbf800000                                           // 00000007C6D8: BF800000
	.long 0xbf800000                                           // 00000007C6DC: BF800000
	.long 0xbf800000                                           // 00000007C6E0: BF800000
	.long 0xbf800000                                           // 00000007C6E4: BF800000
	.long 0xbf800000                                           // 00000007C6E8: BF800000
	.long 0xbf800000                                           // 00000007C6EC: BF800000
	.long 0xbf800000                                           // 00000007C6F0: BF800000
	.long 0xbf800000                                           // 00000007C6F4: BF800000
	.long 0xbf800000                                           // 00000007C6F8: BF800000
	.long 0xbf800000                                           // 00000007C6FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_size_get_global_offset,@function
	.size	subtract_char_get_global_size_get_global_offset, subtract_char_get_global_size_get_global_offset_symend-subtract_char_get_global_size_get_global_offset
subtract_char_get_global_size_get_global_offset:
	v_mov_b32_e32 v1, 0                                        // 00000007C700: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007C704: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007C70C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C714: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 00000007C71C: 84028402
	s_clause 0x1                                               // 00000007C720: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007C724: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007C72C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007C734: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007C738: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000007C740: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007C748: F4080300 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 00000007C750: F4040000 F8000000
	s_lshl_b32 s3, s3, 1                                       // 00000007C758: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000007C75C: 84048104
	s_mov_b32 s33, 0                                           // 00000007C760: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C764: BF89FC07
	s_lshl_b32 s6, s8, 4                                       // 00000007C768: 84068408
	s_lshl_b32 s7, s9, 1                                       // 00000007C76C: 84078109
	s_lshl_b32 s8, s10, 1                                      // 00000007C770: 8408810A
	v_add3_u32 v3, s12, s2, v3                                 // 00000007C774: D6550003 040C040C
	v_add3_u32 v4, s14, s3, v4                                 // 00000007C77C: D6550004 0410060E
	v_add3_u32 v0, s5, s4, v0                                  // 00000007C784: D6550000 04000805
	s_waitcnt vmcnt(1)                                         // 00000007C78C: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007C790: 320A0490
	v_add_nc_u32_e32 v2, s6, v2                                // 00000007C794: 4A040406
	s_waitcnt vmcnt(0)                                         // 00000007C798: BF8903F7
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007C79C: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C7A0: BF870193
	v_add_nc_u32_e32 v5, s7, v5                                // 00000007C7A4: 4A0A0A07
	v_subrev_nc_u32_e32 v2, s12, v2                            // 00000007C7A8: 4E04040C
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007C7AC: BF870193
	v_subrev_nc_u32_e32 v1, s5, v1                             // 00000007C7B0: 4E020205
	v_subrev_nc_u32_e32 v5, s14, v5                            // 00000007C7B4: 4E0A0A0E
	s_clause 0x2                                               // 00000007C7B8: BF850002
	global_store_b8 v3, v2, s[0:1]                             // 00000007C7BC: DC620000 00000203
	global_store_b8 v4, v5, s[0:1]                             // 00000007C7C4: DC620000 00000504
	global_store_b8 v0, v1, s[0:1]                             // 00000007C7CC: DC620000 00000100
	s_nop 0                                                    // 00000007C7D4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C7D8: BFB60003
	s_endpgm                                                   // 00000007C7DC: BFB00000
subtract_char_get_global_size_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007C7E0: BF800000
	.long 0xbf800000                                           // 00000007C7E4: BF800000
	.long 0xbf800000                                           // 00000007C7E8: BF800000
	.long 0xbf800000                                           // 00000007C7EC: BF800000
	.long 0xbf800000                                           // 00000007C7F0: BF800000
	.long 0xbf800000                                           // 00000007C7F4: BF800000
	.long 0xbf800000                                           // 00000007C7F8: BF800000
	.long 0xbf800000                                           // 00000007C7FC: BF800000

	.p2align	8
	.type	subtract_char_get_num_groups_get_global_offset,@function
	.size	subtract_char_get_num_groups_get_global_offset, subtract_char_get_num_groups_get_global_offset_symend-subtract_char_get_num_groups_get_global_offset
subtract_char_get_num_groups_get_global_offset:
	v_mov_b32_e32 v1, 0                                        // 00000007C800: 7E020280
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007C804: D6100004 02291500
	s_mov_b32 s33, 0                                           // 00000007C80C: BEA10080
	s_clause 0x1                                               // 00000007C810: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007C814: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007C81C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007C824: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007C828: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007C830: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007C838: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007C840: F4040180 F8000008
	s_lshl_b32 s1, s2, 1                                       // 00000007C848: 84018102
	s_lshl_b32 s2, s3, 1                                       // 00000007C84C: 84028103
	s_lshl_b32 s3, s4, 2                                       // 00000007C850: 84038204
	s_waitcnt vmcnt(1)                                         // 00000007C854: BF8907F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 00000007C858: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007C85C: 7C7A0480
	v_and_b32_e32 v2, 0x3ff, v0                                // 00000007C860: 360400FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C868: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007C870: BF870004
	v_cmp_ne_u16_e64 s0, 0, v3.l                               // 00000007C874: D43D0000 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007C87C: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007C880: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000007C884: 7C7A0280
	s_waitcnt lgkmcnt(0)                                       // 00000007C888: BF89FC07
	s_addc_u32 s4, s8, 0                                       // 00000007C88C: 82048008
	v_add3_u32 v1, s12, s1, v2                                 // 00000007C890: D6550001 0408020C
	s_cmp_lg_u32 s0, 0                                         // 00000007C898: BF078000
	v_add3_u32 v2, s14, s2, v4                                 // 00000007C89C: D6550002 0410040E
	s_addc_u32 s0, s9, 0                                       // 00000007C8A4: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007C8A8: BF07806A
	v_add3_u32 v0, s5, s3, v0                                  // 00000007C8AC: D6550000 04000605
	s_addc_u32 s1, s10, 0                                      // 00000007C8B4: 8201800A
	s_sub_i32 s2, s4, s12                                      // 00000007C8B8: 81820C04
	s_sub_i32 s0, s0, s14                                      // 00000007C8BC: 81800E00
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007C8C0: BF8704A9
	v_dual_mov_b32 v3, s2 :: v_dual_mov_b32 v4, s0             // 00000007C8C4: CA100002 03040000
	s_sub_i32 s0, s1, s5                                       // 00000007C8CC: 81800501
	v_mov_b32_e32 v5, s0                                       // 00000007C8D0: 7E0A0200
	s_clause 0x2                                               // 00000007C8D4: BF850002
	global_store_b8 v1, v3, s[6:7]                             // 00000007C8D8: DC620000 00060301
	global_store_b8 v2, v4, s[6:7]                             // 00000007C8E0: DC620000 00060402
	global_store_b8 v0, v5, s[6:7]                             // 00000007C8E8: DC620000 00060500
	s_nop 0                                                    // 00000007C8F0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C8F4: BFB60003
	s_endpgm                                                   // 00000007C8F8: BFB00000
subtract_char_get_num_groups_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007C8FC: BF800000

	.p2align	8
	.type	subtract_char_get_work_dim_get_global_offset,@function
	.size	subtract_char_get_work_dim_get_global_offset, subtract_char_get_work_dim_get_global_offset_symend-subtract_char_get_work_dim_get_global_offset
subtract_char_get_work_dim_get_global_offset:
	s_clause 0x3                                               // 00000007C900: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007C904: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x50                                // 00000007C90C: F4000140 F8000050
	s_load_b32 s6, s[0:1], 0x48                                // 00000007C914: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007C91C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007C924: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007C92C: D6100002 02291500
	s_lshl_b32 s2, s2, 1                                       // 00000007C934: 84028102
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007C938: D6100000 02292900
	s_lshl_b32 s3, s3, 1                                       // 00000007C940: 84038103
	s_lshl_b32 s4, s4, 2                                       // 00000007C944: 84048204
	s_mov_b32 s33, 0                                           // 00000007C948: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007C94C: BF89FC07
	v_add3_u32 v1, s8, s2, v1                                  // 00000007C950: D6550001 04040408
	s_sub_i32 s7, s5, s8                                       // 00000007C958: 81870805
	s_sub_i32 s2, s5, s10                                      // 00000007C95C: 81820A05
	v_add3_u32 v2, s10, s3, v2                                 // 00000007C960: D6550002 0408060A
	v_mov_b32_e32 v4, s2                                       // 00000007C968: 7E080202
	s_sub_i32 s3, s5, s6                                       // 00000007C96C: 81830605
	v_mov_b32_e32 v3, s7                                       // 00000007C970: 7E060207
	v_add3_u32 v0, s6, s4, v0                                  // 00000007C974: D6550000 04000806
	v_mov_b32_e32 v5, s3                                       // 00000007C97C: 7E0A0203
	s_clause 0x2                                               // 00000007C980: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007C984: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007C98C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007C994: DC620000 00000500
	s_nop 0                                                    // 00000007C99C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007C9A0: BFB60003
	s_endpgm                                                   // 00000007C9A4: BFB00000
subtract_char_get_work_dim_get_global_offset_symend:
	.long 0xbf800000                                           // 00000007C9A8: BF800000
	.long 0xbf800000                                           // 00000007C9AC: BF800000
	.long 0xbf800000                                           // 00000007C9B0: BF800000
	.long 0xbf800000                                           // 00000007C9B4: BF800000
	.long 0xbf800000                                           // 00000007C9B8: BF800000
	.long 0xbf800000                                           // 00000007C9BC: BF800000
	.long 0xbf800000                                           // 00000007C9C0: BF800000
	.long 0xbf800000                                           // 00000007C9C4: BF800000
	.long 0xbf800000                                           // 00000007C9C8: BF800000
	.long 0xbf800000                                           // 00000007C9CC: BF800000
	.long 0xbf800000                                           // 00000007C9D0: BF800000
	.long 0xbf800000                                           // 00000007C9D4: BF800000
	.long 0xbf800000                                           // 00000007C9D8: BF800000
	.long 0xbf800000                                           // 00000007C9DC: BF800000
	.long 0xbf800000                                           // 00000007C9E0: BF800000
	.long 0xbf800000                                           // 00000007C9E4: BF800000
	.long 0xbf800000                                           // 00000007C9E8: BF800000
	.long 0xbf800000                                           // 00000007C9EC: BF800000
	.long 0xbf800000                                           // 00000007C9F0: BF800000
	.long 0xbf800000                                           // 00000007C9F4: BF800000
	.long 0xbf800000                                           // 00000007C9F8: BF800000
	.long 0xbf800000                                           // 00000007C9FC: BF800000

	.p2align	8
	.type	subtract_char_x_get_local_id,@function
	.size	subtract_char_x_get_local_id, subtract_char_x_get_local_id_symend-subtract_char_x_get_local_id
subtract_char_x_get_local_id:
	s_clause 0x3                                               // 00000007CA00: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007CA04: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007CA0C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007CA14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007CA1C: F4040000 F8000000
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007CA24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007CA2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007CA34: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 00000007CA3C: 84028402
	s_lshl_b32 s3, s3, 1                                       // 00000007CA40: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000007CA44: 84048104
	s_mov_b32 s33, 0                                           // 00000007CA48: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007CA4C: BF89FC07
	v_sub_nc_u32_e32 v3, s5, v1                                // 00000007CA50: 4C060205
	v_add3_u32 v1, s8, s2, v1                                  // 00000007CA54: D6550001 04040408
	v_sub_nc_u32_e32 v4, s5, v2                                // 00000007CA5C: 4C080405
	v_add3_u32 v2, s10, s3, v2                                 // 00000007CA60: D6550002 0408060A
	v_sub_nc_u32_e32 v5, s5, v0                                // 00000007CA68: 4C0A0005
	v_add3_u32 v0, s6, s4, v0                                  // 00000007CA6C: D6550000 04000806
	s_clause 0x2                                               // 00000007CA74: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007CA78: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007CA80: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007CA88: DC620000 00000500
	s_nop 0                                                    // 00000007CA90: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CA94: BFB60003
	s_endpgm                                                   // 00000007CA98: BFB00000
subtract_char_x_get_local_id_symend:
	.long 0xbf800000                                           // 00000007CA9C: BF800000
	.long 0xbf800000                                           // 00000007CAA0: BF800000
	.long 0xbf800000                                           // 00000007CAA4: BF800000
	.long 0xbf800000                                           // 00000007CAA8: BF800000
	.long 0xbf800000                                           // 00000007CAAC: BF800000
	.long 0xbf800000                                           // 00000007CAB0: BF800000
	.long 0xbf800000                                           // 00000007CAB4: BF800000
	.long 0xbf800000                                           // 00000007CAB8: BF800000
	.long 0xbf800000                                           // 00000007CABC: BF800000
	.long 0xbf800000                                           // 00000007CAC0: BF800000
	.long 0xbf800000                                           // 00000007CAC4: BF800000
	.long 0xbf800000                                           // 00000007CAC8: BF800000
	.long 0xbf800000                                           // 00000007CACC: BF800000
	.long 0xbf800000                                           // 00000007CAD0: BF800000
	.long 0xbf800000                                           // 00000007CAD4: BF800000
	.long 0xbf800000                                           // 00000007CAD8: BF800000
	.long 0xbf800000                                           // 00000007CADC: BF800000
	.long 0xbf800000                                           // 00000007CAE0: BF800000
	.long 0xbf800000                                           // 00000007CAE4: BF800000
	.long 0xbf800000                                           // 00000007CAE8: BF800000
	.long 0xbf800000                                           // 00000007CAEC: BF800000
	.long 0xbf800000                                           // 00000007CAF0: BF800000
	.long 0xbf800000                                           // 00000007CAF4: BF800000
	.long 0xbf800000                                           // 00000007CAF8: BF800000
	.long 0xbf800000                                           // 00000007CAFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_offset_get_local_id,@function
	.size	subtract_char_get_global_offset_get_local_id, subtract_char_get_global_offset_get_local_id_symend-subtract_char_get_global_offset_get_local_id
subtract_char_get_global_offset_get_local_id:
	s_clause 0x2                                               // 00000007CB00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007CB04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007CB0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007CB14: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007CB1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007CB24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007CB2C: D6100000 02292900
	s_lshl_b32 s2, s2, 1                                       // 00000007CB34: 84028102
	s_lshl_b32 s3, s3, 4                                       // 00000007CB38: 84038403
	s_lshl_b32 s4, s4, 1                                       // 00000007CB3C: 84048104
	s_mov_b32 s33, 0                                           // 00000007CB40: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007CB44: BF89FC07
	v_sub_nc_u32_e32 v3, s8, v1                                // 00000007CB48: 4C060208
	v_add3_u32 v1, s8, s2, v1                                  // 00000007CB4C: D6550001 04040408
	v_sub_nc_u32_e32 v4, s10, v2                               // 00000007CB54: 4C08040A
	v_add3_u32 v2, s10, s3, v2                                 // 00000007CB58: D6550002 0408060A
	v_sub_nc_u32_e32 v5, s5, v0                                // 00000007CB60: 4C0A0005
	v_add3_u32 v0, s5, s4, v0                                  // 00000007CB64: D6550000 04000805
	s_clause 0x2                                               // 00000007CB6C: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007CB70: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007CB78: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007CB80: DC620000 00000500
	s_nop 0                                                    // 00000007CB88: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CB8C: BFB60003
	s_endpgm                                                   // 00000007CB90: BFB00000
subtract_char_get_global_offset_get_local_id_symend:
	.long 0xbf800000                                           // 00000007CB94: BF800000
	.long 0xbf800000                                           // 00000007CB98: BF800000
	.long 0xbf800000                                           // 00000007CB9C: BF800000
	.long 0xbf800000                                           // 00000007CBA0: BF800000
	.long 0xbf800000                                           // 00000007CBA4: BF800000
	.long 0xbf800000                                           // 00000007CBA8: BF800000
	.long 0xbf800000                                           // 00000007CBAC: BF800000
	.long 0xbf800000                                           // 00000007CBB0: BF800000
	.long 0xbf800000                                           // 00000007CBB4: BF800000
	.long 0xbf800000                                           // 00000007CBB8: BF800000
	.long 0xbf800000                                           // 00000007CBBC: BF800000
	.long 0xbf800000                                           // 00000007CBC0: BF800000
	.long 0xbf800000                                           // 00000007CBC4: BF800000
	.long 0xbf800000                                           // 00000007CBC8: BF800000
	.long 0xbf800000                                           // 00000007CBCC: BF800000
	.long 0xbf800000                                           // 00000007CBD0: BF800000
	.long 0xbf800000                                           // 00000007CBD4: BF800000
	.long 0xbf800000                                           // 00000007CBD8: BF800000
	.long 0xbf800000                                           // 00000007CBDC: BF800000
	.long 0xbf800000                                           // 00000007CBE0: BF800000
	.long 0xbf800000                                           // 00000007CBE4: BF800000
	.long 0xbf800000                                           // 00000007CBE8: BF800000
	.long 0xbf800000                                           // 00000007CBEC: BF800000
	.long 0xbf800000                                           // 00000007CBF0: BF800000
	.long 0xbf800000                                           // 00000007CBF4: BF800000
	.long 0xbf800000                                           // 00000007CBF8: BF800000
	.long 0xbf800000                                           // 00000007CBFC: BF800000

	.p2align	8
	.type	subtract_char_get_local_id_get_local_id,@function
	.size	subtract_char_get_local_id_get_local_id, subtract_char_get_local_id_get_local_id_symend-subtract_char_get_local_id_get_local_id
subtract_char_get_local_id_get_local_id:
	s_clause 0x2                                               // 00000007CC00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007CC04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007CC0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007CC14: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007CC1C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007CC28: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007CC30: D6100000 02292900
	s_lshl_b32 s2, s2, 3                                       // 00000007CC38: 84028302
	s_lshl_b32 s3, s3, 2                                       // 00000007CC3C: 84038203
	s_lshl_b32 s4, s4, 1                                       // 00000007CC40: 84048104
	s_mov_b32 s33, 0                                           // 00000007CC44: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007CC48: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 00000007CC4C: D6550002 04080408
	v_add3_u32 v3, s10, s3, v3                                 // 00000007CC54: D6550003 040C060A
	v_add3_u32 v0, s5, s4, v0                                  // 00000007CC5C: D6550000 04000805
	s_clause 0x2                                               // 00000007CC64: BF850002
	global_store_b8 v2, v1, s[0:1]                             // 00000007CC68: DC620000 00000102
	global_store_b8 v3, v1, s[0:1]                             // 00000007CC70: DC620000 00000103
	global_store_b8 v0, v1, s[0:1]                             // 00000007CC78: DC620000 00000100
	s_nop 0                                                    // 00000007CC80: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CC84: BFB60003
	s_endpgm                                                   // 00000007CC88: BFB00000
subtract_char_get_local_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000007CC8C: BF800000
	.long 0xbf800000                                           // 00000007CC90: BF800000
	.long 0xbf800000                                           // 00000007CC94: BF800000
	.long 0xbf800000                                           // 00000007CC98: BF800000
	.long 0xbf800000                                           // 00000007CC9C: BF800000
	.long 0xbf800000                                           // 00000007CCA0: BF800000
	.long 0xbf800000                                           // 00000007CCA4: BF800000
	.long 0xbf800000                                           // 00000007CCA8: BF800000
	.long 0xbf800000                                           // 00000007CCAC: BF800000
	.long 0xbf800000                                           // 00000007CCB0: BF800000
	.long 0xbf800000                                           // 00000007CCB4: BF800000
	.long 0xbf800000                                           // 00000007CCB8: BF800000
	.long 0xbf800000                                           // 00000007CCBC: BF800000
	.long 0xbf800000                                           // 00000007CCC0: BF800000
	.long 0xbf800000                                           // 00000007CCC4: BF800000
	.long 0xbf800000                                           // 00000007CCC8: BF800000
	.long 0xbf800000                                           // 00000007CCCC: BF800000
	.long 0xbf800000                                           // 00000007CCD0: BF800000
	.long 0xbf800000                                           // 00000007CCD4: BF800000
	.long 0xbf800000                                           // 00000007CCD8: BF800000
	.long 0xbf800000                                           // 00000007CCDC: BF800000
	.long 0xbf800000                                           // 00000007CCE0: BF800000
	.long 0xbf800000                                           // 00000007CCE4: BF800000
	.long 0xbf800000                                           // 00000007CCE8: BF800000
	.long 0xbf800000                                           // 00000007CCEC: BF800000
	.long 0xbf800000                                           // 00000007CCF0: BF800000
	.long 0xbf800000                                           // 00000007CCF4: BF800000
	.long 0xbf800000                                           // 00000007CCF8: BF800000
	.long 0xbf800000                                           // 00000007CCFC: BF800000

	.p2align	8
	.type	subtract_char_get_group_id_get_local_id,@function
	.size	subtract_char_get_group_id_get_local_id, subtract_char_get_group_id_get_local_id_symend-subtract_char_get_group_id_get_local_id
subtract_char_get_group_id_get_local_id:
	s_clause 0x2                                               // 00000007CD00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007CD04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007CD0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007CD14: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007CD1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007CD24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007CD2C: D6100000 02292900
	s_lshl_b32 s6, s2, 1                                       // 00000007CD34: 84068102
	s_lshl_b32 s7, s3, 4                                       // 00000007CD38: 84078403
	s_waitcnt lgkmcnt(0)                                       // 00000007CD3C: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000007CD40: 84098104
	v_sub_nc_u16 v3.l, s2, v1.l                                // 00000007CD44: D7040003 00020202
	v_sub_nc_u16 v4.l, s3, v2.l                                // 00000007CD4C: D7040004 00020403
	v_sub_nc_u16 v5.l, s4, v0.l                                // 00000007CD54: D7040005 00020004
	s_mov_b32 s33, 0                                           // 00000007CD5C: BEA10080
	v_add3_u32 v1, s8, s6, v1                                  // 00000007CD60: D6550001 04040C08
	v_add3_u32 v2, s10, s7, v2                                 // 00000007CD68: D6550002 04080E0A
	v_add3_u32 v0, s5, s9, v0                                  // 00000007CD70: D6550000 04001205
	s_clause 0x2                                               // 00000007CD78: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007CD7C: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007CD84: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007CD8C: DC620000 00000500
	s_nop 0                                                    // 00000007CD94: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CD98: BFB60003
	s_endpgm                                                   // 00000007CD9C: BFB00000
subtract_char_get_group_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000007CDA0: BF800000
	.long 0xbf800000                                           // 00000007CDA4: BF800000
	.long 0xbf800000                                           // 00000007CDA8: BF800000
	.long 0xbf800000                                           // 00000007CDAC: BF800000
	.long 0xbf800000                                           // 00000007CDB0: BF800000
	.long 0xbf800000                                           // 00000007CDB4: BF800000
	.long 0xbf800000                                           // 00000007CDB8: BF800000
	.long 0xbf800000                                           // 00000007CDBC: BF800000
	.long 0xbf800000                                           // 00000007CDC0: BF800000
	.long 0xbf800000                                           // 00000007CDC4: BF800000
	.long 0xbf800000                                           // 00000007CDC8: BF800000
	.long 0xbf800000                                           // 00000007CDCC: BF800000
	.long 0xbf800000                                           // 00000007CDD0: BF800000
	.long 0xbf800000                                           // 00000007CDD4: BF800000
	.long 0xbf800000                                           // 00000007CDD8: BF800000
	.long 0xbf800000                                           // 00000007CDDC: BF800000
	.long 0xbf800000                                           // 00000007CDE0: BF800000
	.long 0xbf800000                                           // 00000007CDE4: BF800000
	.long 0xbf800000                                           // 00000007CDE8: BF800000
	.long 0xbf800000                                           // 00000007CDEC: BF800000
	.long 0xbf800000                                           // 00000007CDF0: BF800000
	.long 0xbf800000                                           // 00000007CDF4: BF800000
	.long 0xbf800000                                           // 00000007CDF8: BF800000
	.long 0xbf800000                                           // 00000007CDFC: BF800000

	.p2align	8
	.type	subtract_char_get_local_size_get_local_id,@function
	.size	subtract_char_get_local_size_get_local_id, subtract_char_get_local_size_get_local_id_symend-subtract_char_get_local_size_get_local_id
subtract_char_get_local_size_get_local_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007CE00: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007CE08: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007CE0C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007CE10: 820B8001
	s_lshl_b32 s12, s2, 1                                      // 00000007CE14: 840C8102
	s_lshl_b32 s13, s3, 1                                      // 00000007CE18: 840D8103
	s_lshl_b32 s14, s4, 2                                      // 00000007CE1C: 840E8204
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007CE20: CA240080 010400FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007CE2C: D6100005 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007CE34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007CE3C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007CE40: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007CE44: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 00000007CE48: BF8704C9
	s_add_u32 s6, s5, s2                                       // 00000007CE4C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007CE50: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007CE54: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000007CE58: 9802948E
	s_add_u32 s2, s5, s2                                       // 00000007CE5C: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000007CE60: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 00000007CE64: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000007CE68: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007CE6C: BF870009
	s_add_u32 s4, s5, s4                                       // 00000007CE70: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000007CE74: 8205800B
	s_clause 0x2                                               // 00000007CE78: BF850002
	global_load_u8 v2, v1, s[6:7]                              // 00000007CE7C: DC420000 02060001
	global_load_u8 v3, v1, s[2:3]                              // 00000007CE84: DC420000 03020001
	global_load_u8 v1, v1, s[4:5]                              // 00000007CE8C: DC420000 01040001
	s_clause 0x2                                               // 00000007CE94: BF850002
	s_load_b128 s[4:7], s[0:1], 0x38                           // 00000007CE98: F4080100 F8000038
	s_load_b32 s2, s[0:1], 0x48                                // 00000007CEA0: F4000080 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007CEA8: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007CEB0: BF89FC07
	v_add3_u32 v6, s4, s12, v4                                 // 00000007CEB4: D6550006 04101804
	v_add3_u32 v7, s6, s13, v5                                 // 00000007CEBC: D6550007 04141A06
	s_waitcnt vmcnt(2)                                         // 00000007CEC4: BF890BF7
	v_sub_nc_u16 v2.l, v2.l, v4.l                              // 00000007CEC8: D7040002 00020902
	s_waitcnt vmcnt(1)                                         // 00000007CED0: BF8907F7
	v_sub_nc_u16 v3.l, v3.l, v5.l                              // 00000007CED4: D7040003 00020B03
	s_waitcnt vmcnt(0)                                         // 00000007CEDC: BF8903F7
	v_sub_nc_u16 v1.l, v1.l, v0.l                              // 00000007CEE0: D7040001 00020101
	v_add3_u32 v0, s2, s14, v0                                 // 00000007CEE8: D6550000 04001C02
	s_clause 0x2                                               // 00000007CEF0: BF850002
	global_store_b8 v6, v2, s[0:1]                             // 00000007CEF4: DC620000 00000206
	global_store_b8 v7, v3, s[0:1]                             // 00000007CEFC: DC620000 00000307
	global_store_b8 v0, v1, s[0:1]                             // 00000007CF04: DC620000 00000100
	s_nop 0                                                    // 00000007CF0C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007CF10: BFB60003
	s_endpgm                                                   // 00000007CF14: BFB00000
subtract_char_get_local_size_get_local_id_symend:
	.long 0xbf800000                                           // 00000007CF18: BF800000
	.long 0xbf800000                                           // 00000007CF1C: BF800000
	.long 0xbf800000                                           // 00000007CF20: BF800000
	.long 0xbf800000                                           // 00000007CF24: BF800000
	.long 0xbf800000                                           // 00000007CF28: BF800000
	.long 0xbf800000                                           // 00000007CF2C: BF800000
	.long 0xbf800000                                           // 00000007CF30: BF800000
	.long 0xbf800000                                           // 00000007CF34: BF800000
	.long 0xbf800000                                           // 00000007CF38: BF800000
	.long 0xbf800000                                           // 00000007CF3C: BF800000
	.long 0xbf800000                                           // 00000007CF40: BF800000
	.long 0xbf800000                                           // 00000007CF44: BF800000
	.long 0xbf800000                                           // 00000007CF48: BF800000
	.long 0xbf800000                                           // 00000007CF4C: BF800000
	.long 0xbf800000                                           // 00000007CF50: BF800000
	.long 0xbf800000                                           // 00000007CF54: BF800000
	.long 0xbf800000                                           // 00000007CF58: BF800000
	.long 0xbf800000                                           // 00000007CF5C: BF800000
	.long 0xbf800000                                           // 00000007CF60: BF800000
	.long 0xbf800000                                           // 00000007CF64: BF800000
	.long 0xbf800000                                           // 00000007CF68: BF800000
	.long 0xbf800000                                           // 00000007CF6C: BF800000
	.long 0xbf800000                                           // 00000007CF70: BF800000
	.long 0xbf800000                                           // 00000007CF74: BF800000
	.long 0xbf800000                                           // 00000007CF78: BF800000
	.long 0xbf800000                                           // 00000007CF7C: BF800000
	.long 0xbf800000                                           // 00000007CF80: BF800000
	.long 0xbf800000                                           // 00000007CF84: BF800000
	.long 0xbf800000                                           // 00000007CF88: BF800000
	.long 0xbf800000                                           // 00000007CF8C: BF800000
	.long 0xbf800000                                           // 00000007CF90: BF800000
	.long 0xbf800000                                           // 00000007CF94: BF800000
	.long 0xbf800000                                           // 00000007CF98: BF800000
	.long 0xbf800000                                           // 00000007CF9C: BF800000
	.long 0xbf800000                                           // 00000007CFA0: BF800000
	.long 0xbf800000                                           // 00000007CFA4: BF800000
	.long 0xbf800000                                           // 00000007CFA8: BF800000
	.long 0xbf800000                                           // 00000007CFAC: BF800000
	.long 0xbf800000                                           // 00000007CFB0: BF800000
	.long 0xbf800000                                           // 00000007CFB4: BF800000
	.long 0xbf800000                                           // 00000007CFB8: BF800000
	.long 0xbf800000                                           // 00000007CFBC: BF800000
	.long 0xbf800000                                           // 00000007CFC0: BF800000
	.long 0xbf800000                                           // 00000007CFC4: BF800000
	.long 0xbf800000                                           // 00000007CFC8: BF800000
	.long 0xbf800000                                           // 00000007CFCC: BF800000
	.long 0xbf800000                                           // 00000007CFD0: BF800000
	.long 0xbf800000                                           // 00000007CFD4: BF800000
	.long 0xbf800000                                           // 00000007CFD8: BF800000
	.long 0xbf800000                                           // 00000007CFDC: BF800000
	.long 0xbf800000                                           // 00000007CFE0: BF800000
	.long 0xbf800000                                           // 00000007CFE4: BF800000
	.long 0xbf800000                                           // 00000007CFE8: BF800000
	.long 0xbf800000                                           // 00000007CFEC: BF800000
	.long 0xbf800000                                           // 00000007CFF0: BF800000
	.long 0xbf800000                                           // 00000007CFF4: BF800000
	.long 0xbf800000                                           // 00000007CFF8: BF800000
	.long 0xbf800000                                           // 00000007CFFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_id_get_local_id,@function
	.size	subtract_char_get_global_id_get_local_id, subtract_char_get_global_id_get_local_id_symend-subtract_char_get_global_id_get_local_id
subtract_char_get_global_id_get_local_id:
	s_clause 0x2                                               // 00000007D000: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D004: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007D00C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007D014: F4040000 F8000008
	v_bfe_u32 v1, v0, 10, 10                                   // 00000007D01C: D6100001 02291500
	v_bfe_u32 v2, v0, 20, 10                                   // 00000007D024: D6100002 02292900
	v_and_b32_e32 v0, 0x3ff, v0                                // 00000007D02C: 360000FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000007D034: 84028102
	s_mov_b32 s33, 0                                           // 00000007D038: BEA10080
	v_lshl_or_b32 v3, s3, 1, v1                                // 00000007D03C: D6560003 04050203
	v_lshl_or_b32 v4, s4, 2, v2                                // 00000007D044: D6560004 04090404
	v_or_b32_e32 v5, s2, v0                                    // 00000007D04C: 380A0002
	s_waitcnt lgkmcnt(0)                                       // 00000007D050: BF89FC07
	s_add_i32 s2, s8, s2                                       // 00000007D054: 81020208
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007D058: BF870129
	v_dual_mov_b32 v6, s2 :: v_dual_add_nc_u32 v3, s10, v3     // 00000007D05C: CA200002 0602060A
	v_add_nc_u32_e32 v4, s5, v4                                // 00000007D064: 4A080805
	v_add_co_u32 v0, s2, s0, v3                                // 00000007D068: D7000200 00020600
	v_sub_nc_u32_e32 v7, v3, v1                                // 00000007D070: 4C0E0303
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007D074: D5207C01 00090001
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007D07C: BF8700A4
	v_sub_nc_u32_e32 v8, v4, v2                                // 00000007D080: 4C100504
	v_add_co_u32 v2, s2, s0, v4                                // 00000007D084: D7000202 00020800
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007D08C: D5207C03 00090001
	s_clause 0x2                                               // 00000007D094: BF850002
	global_store_b8 v5, v6, s[0:1]                             // 00000007D098: DC620000 00000605
	global_store_b8 v[0:1], v7, off                            // 00000007D0A0: DC620000 007C0700
	global_store_b8 v[2:3], v8, off                            // 00000007D0A8: DC620000 007C0802
	s_nop 0                                                    // 00000007D0B0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D0B4: BFB60003
	s_endpgm                                                   // 00000007D0B8: BFB00000
subtract_char_get_global_id_get_local_id_symend:
	.long 0xbf800000                                           // 00000007D0BC: BF800000
	.long 0xbf800000                                           // 00000007D0C0: BF800000
	.long 0xbf800000                                           // 00000007D0C4: BF800000
	.long 0xbf800000                                           // 00000007D0C8: BF800000
	.long 0xbf800000                                           // 00000007D0CC: BF800000
	.long 0xbf800000                                           // 00000007D0D0: BF800000
	.long 0xbf800000                                           // 00000007D0D4: BF800000
	.long 0xbf800000                                           // 00000007D0D8: BF800000
	.long 0xbf800000                                           // 00000007D0DC: BF800000
	.long 0xbf800000                                           // 00000007D0E0: BF800000
	.long 0xbf800000                                           // 00000007D0E4: BF800000
	.long 0xbf800000                                           // 00000007D0E8: BF800000
	.long 0xbf800000                                           // 00000007D0EC: BF800000
	.long 0xbf800000                                           // 00000007D0F0: BF800000
	.long 0xbf800000                                           // 00000007D0F4: BF800000
	.long 0xbf800000                                           // 00000007D0F8: BF800000
	.long 0xbf800000                                           // 00000007D0FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_size_get_local_id,@function
	.size	subtract_char_get_global_size_get_local_id, subtract_char_get_global_size_get_local_id_symend-subtract_char_get_global_size_get_local_id
subtract_char_get_global_size_get_local_id:
	v_mov_b32_e32 v1, 0                                        // 00000007D100: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007D104: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007D10C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D114: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 00000007D11C: 84028402
	s_clause 0x1                                               // 00000007D120: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007D124: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007D12C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007D134: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007D138: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000007D140: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007D148: F4080300 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 00000007D150: F4040000 F8000000
	s_lshl_b32 s3, s3, 1                                       // 00000007D158: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000007D15C: 84048104
	s_mov_b32 s33, 0                                           // 00000007D160: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007D164: BF89FC07
	s_lshl_b32 s6, s8, 4                                       // 00000007D168: 84068408
	s_lshl_b32 s7, s9, 1                                       // 00000007D16C: 84078109
	s_lshl_b32 s8, s10, 1                                      // 00000007D170: 8408810A
	v_add3_u32 v7, s12, s2, v3                                 // 00000007D174: D6550007 040C040C
	v_add3_u32 v8, s14, s3, v4                                 // 00000007D17C: D6550008 0410060E
	v_add3_u32 v6, s5, s4, v0                                  // 00000007D184: D6550006 04000805
	s_waitcnt vmcnt(1)                                         // 00000007D18C: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007D190: 320A0490
	v_add_nc_u32_e32 v2, s6, v2                                // 00000007D194: 4A040406
	s_waitcnt vmcnt(0)                                         // 00000007D198: BF8903F7
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007D19C: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007D1A0: BF870193
	v_add_nc_u32_e32 v5, s7, v5                                // 00000007D1A4: 4A0A0A07
	v_sub_nc_u16 v2.l, v2.l, v3.l                              // 00000007D1A8: D7040002 00020702
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007D1B0: BF870193
	v_sub_nc_u16 v0.l, v1.l, v0.l                              // 00000007D1B4: D7040000 00020101
	v_sub_nc_u16 v3.l, v5.l, v4.l                              // 00000007D1BC: D7040003 00020905
	s_clause 0x2                                               // 00000007D1C4: BF850002
	global_store_b8 v7, v2, s[0:1]                             // 00000007D1C8: DC620000 00000207
	global_store_b8 v8, v3, s[0:1]                             // 00000007D1D0: DC620000 00000308
	global_store_b8 v6, v0, s[0:1]                             // 00000007D1D8: DC620000 00000006
	s_nop 0                                                    // 00000007D1E0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D1E4: BFB60003
	s_endpgm                                                   // 00000007D1E8: BFB00000
subtract_char_get_global_size_get_local_id_symend:
	.long 0xbf800000                                           // 00000007D1EC: BF800000
	.long 0xbf800000                                           // 00000007D1F0: BF800000
	.long 0xbf800000                                           // 00000007D1F4: BF800000
	.long 0xbf800000                                           // 00000007D1F8: BF800000
	.long 0xbf800000                                           // 00000007D1FC: BF800000

	.p2align	8
	.type	subtract_char_get_num_groups_get_local_id,@function
	.size	subtract_char_get_num_groups_get_local_id, subtract_char_get_num_groups_get_local_id_symend-subtract_char_get_num_groups_get_local_id
subtract_char_get_num_groups_get_local_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007D200: CA240080 010400FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007D20C: BEA10080
	s_clause 0x1                                               // 00000007D210: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007D214: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007D21C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007D224: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D228: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007D230: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000007D238: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007D240: F4040180 F8000008
	s_lshl_b32 s1, s2, 1                                       // 00000007D248: 84018102
	s_lshl_b32 s2, s3, 1                                       // 00000007D24C: 84028103
	s_lshl_b32 s3, s4, 2                                       // 00000007D250: 84038204
	s_waitcnt vmcnt(1)                                         // 00000007D254: BF8907F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 00000007D258: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007D25C: 7C7A0480
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D260: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D268: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007D270: BF870004
	v_cmp_ne_u16_e64 s0, 0, v3.l                               // 00000007D274: D43D0000 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007D27C: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007D280: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000007D284: 7C7A0280
	s_waitcnt lgkmcnt(0)                                       // 00000007D288: BF89FC07
	v_add3_u32 v3, s8, s1, v4                                  // 00000007D28C: D6550003 04100208
	s_addc_u32 s1, s12, 0                                      // 00000007D294: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 00000007D298: BF078000
	v_sub_nc_u16 v4.l, s1, v4.l                                // 00000007D29C: D7040004 00020801
	s_addc_u32 s0, s13, 0                                      // 00000007D2A4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007D2A8: BF07806A
	v_add3_u32 v1, s10, s2, v2                                 // 00000007D2AC: D6550001 0408040A
	s_addc_u32 s1, s14, 0                                      // 00000007D2B4: 8201800E
	v_sub_nc_u16 v2.l, s0, v2.l                                // 00000007D2B8: D7040002 00020400
	v_sub_nc_u16 v5.l, s1, v0.l                                // 00000007D2C0: D7040005 00020001
	v_add3_u32 v0, s5, s3, v0                                  // 00000007D2C8: D6550000 04000605
	s_clause 0x2                                               // 00000007D2D0: BF850002
	global_store_b8 v3, v4, s[6:7]                             // 00000007D2D4: DC620000 00060403
	global_store_b8 v1, v2, s[6:7]                             // 00000007D2DC: DC620000 00060201
	global_store_b8 v0, v5, s[6:7]                             // 00000007D2E4: DC620000 00060500
	s_nop 0                                                    // 00000007D2EC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D2F0: BFB60003
	s_endpgm                                                   // 00000007D2F4: BFB00000
subtract_char_get_num_groups_get_local_id_symend:
	.long 0xbf800000                                           // 00000007D2F8: BF800000
	.long 0xbf800000                                           // 00000007D2FC: BF800000

	.p2align	8
	.type	subtract_char_get_work_dim_get_local_id,@function
	.size	subtract_char_get_work_dim_get_local_id, subtract_char_get_work_dim_get_local_id_symend-subtract_char_get_work_dim_get_local_id
subtract_char_get_work_dim_get_local_id:
	s_clause 0x3                                               // 00000007D300: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 00000007D304: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D30C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007D314: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007D31C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007D324: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D32C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D334: D6100000 02292900
	s_lshl_b32 s2, s2, 1                                       // 00000007D33C: 84028102
	s_lshl_b32 s3, s3, 1                                       // 00000007D340: 84038103
	s_lshl_b32 s4, s4, 2                                       // 00000007D344: 84048204
	s_mov_b32 s33, 0                                           // 00000007D348: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007D34C: BF89FC07
	v_sub_nc_u16 v3.l, s5, v1.l                                // 00000007D350: D7040003 00020205
	v_add3_u32 v1, s8, s2, v1                                  // 00000007D358: D6550001 04040408
	v_sub_nc_u16 v4.l, s5, v2.l                                // 00000007D360: D7040004 00020405
	v_add3_u32 v2, s10, s3, v2                                 // 00000007D368: D6550002 0408060A
	v_sub_nc_u16 v5.l, s5, v0.l                                // 00000007D370: D7040005 00020005
	v_add3_u32 v0, s6, s4, v0                                  // 00000007D378: D6550000 04000806
	s_clause 0x2                                               // 00000007D380: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007D384: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007D38C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007D394: DC620000 00000500
	s_nop 0                                                    // 00000007D39C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D3A0: BFB60003
	s_endpgm                                                   // 00000007D3A4: BFB00000
subtract_char_get_work_dim_get_local_id_symend:
	.long 0xbf800000                                           // 00000007D3A8: BF800000
	.long 0xbf800000                                           // 00000007D3AC: BF800000
	.long 0xbf800000                                           // 00000007D3B0: BF800000
	.long 0xbf800000                                           // 00000007D3B4: BF800000
	.long 0xbf800000                                           // 00000007D3B8: BF800000
	.long 0xbf800000                                           // 00000007D3BC: BF800000
	.long 0xbf800000                                           // 00000007D3C0: BF800000
	.long 0xbf800000                                           // 00000007D3C4: BF800000
	.long 0xbf800000                                           // 00000007D3C8: BF800000
	.long 0xbf800000                                           // 00000007D3CC: BF800000
	.long 0xbf800000                                           // 00000007D3D0: BF800000
	.long 0xbf800000                                           // 00000007D3D4: BF800000
	.long 0xbf800000                                           // 00000007D3D8: BF800000
	.long 0xbf800000                                           // 00000007D3DC: BF800000
	.long 0xbf800000                                           // 00000007D3E0: BF800000
	.long 0xbf800000                                           // 00000007D3E4: BF800000
	.long 0xbf800000                                           // 00000007D3E8: BF800000
	.long 0xbf800000                                           // 00000007D3EC: BF800000
	.long 0xbf800000                                           // 00000007D3F0: BF800000
	.long 0xbf800000                                           // 00000007D3F4: BF800000
	.long 0xbf800000                                           // 00000007D3F8: BF800000
	.long 0xbf800000                                           // 00000007D3FC: BF800000

	.p2align	8
	.type	subtract_char_x_get_group_id,@function
	.size	subtract_char_x_get_group_id, subtract_char_x_get_group_id_symend-subtract_char_x_get_group_id
subtract_char_x_get_group_id:
	s_clause 0x3                                               // 00000007D400: BF850003
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007D404: F4000140 F8000008
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D40C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007D414: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 00000007D41C: F4040000 F8000000
	s_waitcnt lgkmcnt(0)                                       // 00000007D424: BF89FC07
	s_lshl_b32 s9, s3, 1                                       // 00000007D428: 84098103
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D42C: D6100002 02291500
	s_lshl_b32 s7, s2, 4                                       // 00000007D434: 84078402
	s_lshl_b32 s11, s4, 1                                      // 00000007D438: 840B8104
	s_mov_b32 s33, 0                                           // 00000007D43C: BEA10080
	s_sub_i32 s3, s5, s3                                       // 00000007D440: 81830305
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007D444: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007D448: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D454: D6100000 02292900
	s_sub_i32 s2, s5, s2                                       // 00000007D45C: 81820205
	s_sub_i32 s4, s5, s4                                       // 00000007D460: 81840405
	v_add3_u32 v1, s8, s7, v1                                  // 00000007D464: D6550001 04040E08
	v_mov_b32_e32 v3, s2                                       // 00000007D46C: 7E060202
	v_add3_u32 v2, s10, s9, v2                                 // 00000007D470: D6550002 0408120A
	v_add3_u32 v0, s6, s11, v0                                 // 00000007D478: D6550000 04001606
	v_mov_b32_e32 v5, s4                                       // 00000007D480: 7E0A0204
	s_clause 0x2                                               // 00000007D484: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007D488: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007D490: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007D498: DC620000 00000500
	s_nop 0                                                    // 00000007D4A0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D4A4: BFB60003
	s_endpgm                                                   // 00000007D4A8: BFB00000
subtract_char_x_get_group_id_symend:
	.long 0xbf800000                                           // 00000007D4AC: BF800000
	.long 0xbf800000                                           // 00000007D4B0: BF800000
	.long 0xbf800000                                           // 00000007D4B4: BF800000
	.long 0xbf800000                                           // 00000007D4B8: BF800000
	.long 0xbf800000                                           // 00000007D4BC: BF800000
	.long 0xbf800000                                           // 00000007D4C0: BF800000
	.long 0xbf800000                                           // 00000007D4C4: BF800000
	.long 0xbf800000                                           // 00000007D4C8: BF800000
	.long 0xbf800000                                           // 00000007D4CC: BF800000
	.long 0xbf800000                                           // 00000007D4D0: BF800000
	.long 0xbf800000                                           // 00000007D4D4: BF800000
	.long 0xbf800000                                           // 00000007D4D8: BF800000
	.long 0xbf800000                                           // 00000007D4DC: BF800000
	.long 0xbf800000                                           // 00000007D4E0: BF800000
	.long 0xbf800000                                           // 00000007D4E4: BF800000
	.long 0xbf800000                                           // 00000007D4E8: BF800000
	.long 0xbf800000                                           // 00000007D4EC: BF800000
	.long 0xbf800000                                           // 00000007D4F0: BF800000
	.long 0xbf800000                                           // 00000007D4F4: BF800000
	.long 0xbf800000                                           // 00000007D4F8: BF800000
	.long 0xbf800000                                           // 00000007D4FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_offset_get_group_id,@function
	.size	subtract_char_get_global_offset_get_group_id, subtract_char_get_global_offset_get_group_id_symend-subtract_char_get_global_offset_get_group_id
subtract_char_get_global_offset_get_group_id:
	s_clause 0x2                                               // 00000007D500: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D504: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007D50C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007D514: F4040000 F8000008
	s_lshl_b32 s7, s3, 4                                       // 00000007D51C: 84078403
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D520: D6100002 02291500
	s_lshl_b32 s6, s2, 1                                       // 00000007D528: 84068102
	s_waitcnt lgkmcnt(0)                                       // 00000007D52C: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000007D530: 84098104
	s_mov_b32 s33, 0                                           // 00000007D534: BEA10080
	s_sub_i32 s3, s10, s3                                      // 00000007D538: 8183030A
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007D53C: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007D540: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D54C: D6100000 02292900
	s_sub_i32 s2, s8, s2                                       // 00000007D554: 81820208
	s_sub_i32 s4, s5, s4                                       // 00000007D558: 81840405
	v_add3_u32 v1, s8, s6, v1                                  // 00000007D55C: D6550001 04040C08
	v_mov_b32_e32 v3, s2                                       // 00000007D564: 7E060202
	v_add3_u32 v2, s10, s7, v2                                 // 00000007D568: D6550002 04080E0A
	v_add3_u32 v0, s5, s9, v0                                  // 00000007D570: D6550000 04001205
	v_mov_b32_e32 v5, s4                                       // 00000007D578: 7E0A0204
	s_clause 0x2                                               // 00000007D57C: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007D580: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007D588: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007D590: DC620000 00000500
	s_nop 0                                                    // 00000007D598: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D59C: BFB60003
	s_endpgm                                                   // 00000007D5A0: BFB00000
subtract_char_get_global_offset_get_group_id_symend:
	.long 0xbf800000                                           // 00000007D5A4: BF800000
	.long 0xbf800000                                           // 00000007D5A8: BF800000
	.long 0xbf800000                                           // 00000007D5AC: BF800000
	.long 0xbf800000                                           // 00000007D5B0: BF800000
	.long 0xbf800000                                           // 00000007D5B4: BF800000
	.long 0xbf800000                                           // 00000007D5B8: BF800000
	.long 0xbf800000                                           // 00000007D5BC: BF800000
	.long 0xbf800000                                           // 00000007D5C0: BF800000
	.long 0xbf800000                                           // 00000007D5C4: BF800000
	.long 0xbf800000                                           // 00000007D5C8: BF800000
	.long 0xbf800000                                           // 00000007D5CC: BF800000
	.long 0xbf800000                                           // 00000007D5D0: BF800000
	.long 0xbf800000                                           // 00000007D5D4: BF800000
	.long 0xbf800000                                           // 00000007D5D8: BF800000
	.long 0xbf800000                                           // 00000007D5DC: BF800000
	.long 0xbf800000                                           // 00000007D5E0: BF800000
	.long 0xbf800000                                           // 00000007D5E4: BF800000
	.long 0xbf800000                                           // 00000007D5E8: BF800000
	.long 0xbf800000                                           // 00000007D5EC: BF800000
	.long 0xbf800000                                           // 00000007D5F0: BF800000
	.long 0xbf800000                                           // 00000007D5F4: BF800000
	.long 0xbf800000                                           // 00000007D5F8: BF800000
	.long 0xbf800000                                           // 00000007D5FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_id_get_group_id,@function
	.size	subtract_char_get_local_id_get_group_id, subtract_char_get_local_id_get_group_id_symend-subtract_char_get_local_id_get_group_id
subtract_char_get_local_id_get_group_id:
	s_clause 0x2                                               // 00000007D600: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007D60C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007D614: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007D61C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007D624: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D62C: D6100000 02292900
	s_lshl_b32 s6, s2, 3                                       // 00000007D634: 84068302
	s_lshl_b32 s7, s3, 2                                       // 00000007D638: 84078203
	s_waitcnt lgkmcnt(0)                                       // 00000007D63C: BF89FC07
	s_lshl_b32 s9, s4, 1                                       // 00000007D640: 84098104
	v_sub_nc_u16 v3.l, v1.l, s2                                // 00000007D644: D7040003 00000501
	v_sub_nc_u16 v4.l, v2.l, s3                                // 00000007D64C: D7040004 00000702
	v_sub_nc_u16 v5.l, v0.l, s4                                // 00000007D654: D7040005 00000900
	s_mov_b32 s33, 0                                           // 00000007D65C: BEA10080
	v_add3_u32 v1, s8, s6, v1                                  // 00000007D660: D6550001 04040C08
	v_add3_u32 v2, s10, s7, v2                                 // 00000007D668: D6550002 04080E0A
	v_add3_u32 v0, s5, s9, v0                                  // 00000007D670: D6550000 04001205
	s_clause 0x2                                               // 00000007D678: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007D67C: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007D684: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007D68C: DC620000 00000500
	s_nop 0                                                    // 00000007D694: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D698: BFB60003
	s_endpgm                                                   // 00000007D69C: BFB00000
subtract_char_get_local_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000007D6A0: BF800000
	.long 0xbf800000                                           // 00000007D6A4: BF800000
	.long 0xbf800000                                           // 00000007D6A8: BF800000
	.long 0xbf800000                                           // 00000007D6AC: BF800000
	.long 0xbf800000                                           // 00000007D6B0: BF800000
	.long 0xbf800000                                           // 00000007D6B4: BF800000
	.long 0xbf800000                                           // 00000007D6B8: BF800000
	.long 0xbf800000                                           // 00000007D6BC: BF800000
	.long 0xbf800000                                           // 00000007D6C0: BF800000
	.long 0xbf800000                                           // 00000007D6C4: BF800000
	.long 0xbf800000                                           // 00000007D6C8: BF800000
	.long 0xbf800000                                           // 00000007D6CC: BF800000
	.long 0xbf800000                                           // 00000007D6D0: BF800000
	.long 0xbf800000                                           // 00000007D6D4: BF800000
	.long 0xbf800000                                           // 00000007D6D8: BF800000
	.long 0xbf800000                                           // 00000007D6DC: BF800000
	.long 0xbf800000                                           // 00000007D6E0: BF800000
	.long 0xbf800000                                           // 00000007D6E4: BF800000
	.long 0xbf800000                                           // 00000007D6E8: BF800000
	.long 0xbf800000                                           // 00000007D6EC: BF800000
	.long 0xbf800000                                           // 00000007D6F0: BF800000
	.long 0xbf800000                                           // 00000007D6F4: BF800000
	.long 0xbf800000                                           // 00000007D6F8: BF800000
	.long 0xbf800000                                           // 00000007D6FC: BF800000

	.p2align	8
	.type	subtract_char_get_group_id_get_group_id,@function
	.size	subtract_char_get_group_id_get_group_id, subtract_char_get_group_id_get_group_id_symend-subtract_char_get_group_id_get_group_id
subtract_char_get_group_id_get_group_id:
	s_clause 0x2                                               // 00000007D700: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007D704: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007D70C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007D714: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007D71C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007D728: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D730: D6100000 02292900
	s_lshl_b32 s2, s2, 1                                       // 00000007D738: 84028102
	s_lshl_b32 s3, s3, 4                                       // 00000007D73C: 84038403
	s_lshl_b32 s4, s4, 1                                       // 00000007D740: 84048104
	s_mov_b32 s33, 0                                           // 00000007D744: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007D748: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 00000007D74C: D6550002 04080408
	v_add3_u32 v3, s10, s3, v3                                 // 00000007D754: D6550003 040C060A
	v_add3_u32 v0, s5, s4, v0                                  // 00000007D75C: D6550000 04000805
	s_clause 0x2                                               // 00000007D764: BF850002
	global_store_b8 v2, v1, s[0:1]                             // 00000007D768: DC620000 00000102
	global_store_b8 v3, v1, s[0:1]                             // 00000007D770: DC620000 00000103
	global_store_b8 v0, v1, s[0:1]                             // 00000007D778: DC620000 00000100
	s_nop 0                                                    // 00000007D780: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D784: BFB60003
	s_endpgm                                                   // 00000007D788: BFB00000
subtract_char_get_group_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000007D78C: BF800000
	.long 0xbf800000                                           // 00000007D790: BF800000
	.long 0xbf800000                                           // 00000007D794: BF800000
	.long 0xbf800000                                           // 00000007D798: BF800000
	.long 0xbf800000                                           // 00000007D79C: BF800000
	.long 0xbf800000                                           // 00000007D7A0: BF800000
	.long 0xbf800000                                           // 00000007D7A4: BF800000
	.long 0xbf800000                                           // 00000007D7A8: BF800000
	.long 0xbf800000                                           // 00000007D7AC: BF800000
	.long 0xbf800000                                           // 00000007D7B0: BF800000
	.long 0xbf800000                                           // 00000007D7B4: BF800000
	.long 0xbf800000                                           // 00000007D7B8: BF800000
	.long 0xbf800000                                           // 00000007D7BC: BF800000
	.long 0xbf800000                                           // 00000007D7C0: BF800000
	.long 0xbf800000                                           // 00000007D7C4: BF800000
	.long 0xbf800000                                           // 00000007D7C8: BF800000
	.long 0xbf800000                                           // 00000007D7CC: BF800000
	.long 0xbf800000                                           // 00000007D7D0: BF800000
	.long 0xbf800000                                           // 00000007D7D4: BF800000
	.long 0xbf800000                                           // 00000007D7D8: BF800000
	.long 0xbf800000                                           // 00000007D7DC: BF800000
	.long 0xbf800000                                           // 00000007D7E0: BF800000
	.long 0xbf800000                                           // 00000007D7E4: BF800000
	.long 0xbf800000                                           // 00000007D7E8: BF800000
	.long 0xbf800000                                           // 00000007D7EC: BF800000
	.long 0xbf800000                                           // 00000007D7F0: BF800000
	.long 0xbf800000                                           // 00000007D7F4: BF800000
	.long 0xbf800000                                           // 00000007D7F8: BF800000
	.long 0xbf800000                                           // 00000007D7FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_size_get_group_id,@function
	.size	subtract_char_get_local_size_get_group_id, subtract_char_get_local_size_get_group_id_symend-subtract_char_get_local_size_get_group_id
subtract_char_get_local_size_get_group_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007D800: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007D808: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007D80C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007D810: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 00000007D814: 84108102
	s_lshl_b32 s17, s3, 1                                      // 00000007D818: 84118103
	s_lshl_b32 s18, s4, 2                                      // 00000007D81C: 84128204
	v_mov_b32_e32 v1, 0                                        // 00000007D820: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007D824: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007D82C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007D830: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000007D834: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D838: BF870009
	s_add_u32 s6, s5, s6                                       // 00000007D83C: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000007D840: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007D844: BF0A0903
	global_load_u8 v2, v1, s[6:7]                              // 00000007D848: DC420000 02060001
	s_clause 0x2                                               // 00000007D850: BF850002
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007D854: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007D85C: F4040180 F8000008
	s_load_b32 s8, s[0:1], 0x48                                // 00000007D864: F4000200 F8000048
	s_waitcnt lgkmcnt(0)                                       // 00000007D86C: BF89FC07
	v_add3_u32 v3, s12, s16, v3                                // 00000007D870: D6550003 040C200C
	s_waitcnt vmcnt(0)                                         // 00000007D878: BF8903F7
	v_subrev_nc_u32_e32 v2, s2, v2                             // 00000007D87C: 4E040402
	s_cselect_b32 s2, 14, 20                                   // 00000007D880: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007D884: BF870009
	s_add_u32 s0, s5, s2                                       // 00000007D888: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007D88C: 8201800B
	global_store_b8 v3, v2, s[6:7]                             // 00000007D890: DC620000 00060203
	global_load_u8 v2, v1, s[0:1]                              // 00000007D898: DC420000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007D8A0: D6100003 02291500
	s_cmp_lt_u32 s4, s10                                       // 00000007D8A8: BF0A0A04
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007D8AC: D6100000 02292900
	s_cselect_b32 s0, 16, 22                                   // 00000007D8B4: 98009690
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007D8B8: BF870002
	v_add3_u32 v3, s14, s17, v3                                // 00000007D8BC: D6550003 040C220E
	s_add_u32 s0, s5, s0                                       // 00000007D8C4: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007D8C8: 8201800B
	v_add3_u32 v0, s8, s18, v0                                 // 00000007D8CC: D6550000 04002408
	s_waitcnt vmcnt(0)                                         // 00000007D8D4: BF8903F7
	v_subrev_nc_u32_e32 v2, s3, v2                             // 00000007D8D8: 4E040403
	global_store_b8 v3, v2, s[6:7]                             // 00000007D8DC: DC620000 00060203
	global_load_u8 v1, v1, s[0:1]                              // 00000007D8E4: DC420000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007D8EC: BF8903F7
	v_subrev_nc_u32_e32 v1, s4, v1                             // 00000007D8F0: 4E020204
	global_store_b8 v0, v1, s[6:7]                             // 00000007D8F4: DC620000 00060100
	s_nop 0                                                    // 00000007D8FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007D900: BFB60003
	s_endpgm                                                   // 00000007D904: BFB00000
subtract_char_get_local_size_get_group_id_symend:
	.long 0xbf800000                                           // 00000007D908: BF800000
	.long 0xbf800000                                           // 00000007D90C: BF800000
	.long 0xbf800000                                           // 00000007D910: BF800000
	.long 0xbf800000                                           // 00000007D914: BF800000
	.long 0xbf800000                                           // 00000007D918: BF800000
	.long 0xbf800000                                           // 00000007D91C: BF800000
	.long 0xbf800000                                           // 00000007D920: BF800000
	.long 0xbf800000                                           // 00000007D924: BF800000
	.long 0xbf800000                                           // 00000007D928: BF800000
	.long 0xbf800000                                           // 00000007D92C: BF800000
	.long 0xbf800000                                           // 00000007D930: BF800000
	.long 0xbf800000                                           // 00000007D934: BF800000
	.long 0xbf800000                                           // 00000007D938: BF800000
	.long 0xbf800000                                           // 00000007D93C: BF800000
	.long 0xbf800000                                           // 00000007D940: BF800000
	.long 0xbf800000                                           // 00000007D944: BF800000
	.long 0xbf800000                                           // 00000007D948: BF800000
	.long 0xbf800000                                           // 00000007D94C: BF800000
	.long 0xbf800000                                           // 00000007D950: BF800000
	.long 0xbf800000                                           // 00000007D954: BF800000
	.long 0xbf800000                                           // 00000007D958: BF800000
	.long 0xbf800000                                           // 00000007D95C: BF800000
	.long 0xbf800000                                           // 00000007D960: BF800000
	.long 0xbf800000                                           // 00000007D964: BF800000
	.long 0xbf800000                                           // 00000007D968: BF800000
	.long 0xbf800000                                           // 00000007D96C: BF800000
	.long 0xbf800000                                           // 00000007D970: BF800000
	.long 0xbf800000                                           // 00000007D974: BF800000
	.long 0xbf800000                                           // 00000007D978: BF800000
	.long 0xbf800000                                           // 00000007D97C: BF800000
	.long 0xbf800000                                           // 00000007D980: BF800000
	.long 0xbf800000                                           // 00000007D984: BF800000
	.long 0xbf800000                                           // 00000007D988: BF800000
	.long 0xbf800000                                           // 00000007D98C: BF800000
	.long 0xbf800000                                           // 00000007D990: BF800000
	.long 0xbf800000                                           // 00000007D994: BF800000
	.long 0xbf800000                                           // 00000007D998: BF800000
	.long 0xbf800000                                           // 00000007D99C: BF800000
	.long 0xbf800000                                           // 00000007D9A0: BF800000
	.long 0xbf800000                                           // 00000007D9A4: BF800000
	.long 0xbf800000                                           // 00000007D9A8: BF800000
	.long 0xbf800000                                           // 00000007D9AC: BF800000
	.long 0xbf800000                                           // 00000007D9B0: BF800000
	.long 0xbf800000                                           // 00000007D9B4: BF800000
	.long 0xbf800000                                           // 00000007D9B8: BF800000
	.long 0xbf800000                                           // 00000007D9BC: BF800000
	.long 0xbf800000                                           // 00000007D9C0: BF800000
	.long 0xbf800000                                           // 00000007D9C4: BF800000
	.long 0xbf800000                                           // 00000007D9C8: BF800000
	.long 0xbf800000                                           // 00000007D9CC: BF800000
	.long 0xbf800000                                           // 00000007D9D0: BF800000
	.long 0xbf800000                                           // 00000007D9D4: BF800000
	.long 0xbf800000                                           // 00000007D9D8: BF800000
	.long 0xbf800000                                           // 00000007D9DC: BF800000
	.long 0xbf800000                                           // 00000007D9E0: BF800000
	.long 0xbf800000                                           // 00000007D9E4: BF800000
	.long 0xbf800000                                           // 00000007D9E8: BF800000
	.long 0xbf800000                                           // 00000007D9EC: BF800000
	.long 0xbf800000                                           // 00000007D9F0: BF800000
	.long 0xbf800000                                           // 00000007D9F4: BF800000
	.long 0xbf800000                                           // 00000007D9F8: BF800000
	.long 0xbf800000                                           // 00000007D9FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_id_get_group_id,@function
	.size	subtract_char_get_global_id_get_group_id, subtract_char_get_global_id_get_group_id_symend-subtract_char_get_global_id_get_group_id
subtract_char_get_global_id_get_group_id:
	s_clause 0x2                                               // 00000007DA00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007DA04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007DA0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007DA14: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007DA1C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007DA24: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DA2C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007DA34: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007DA38: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 00000007DA3C: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 00000007DA44: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007DA4C: BF8701A3
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007DA50: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007DA58: BF89FC07
	v_add_nc_u32_e32 v2, s8, v4                                // 00000007DA5C: 4A040808
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007DA60: BF870193
	v_add_nc_u32_e32 v1, s10, v1                               // 00000007DA64: 4A02020A
	v_add_nc_u32_e32 v3, s5, v0                                // 00000007DA68: 4A060005
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007DA6C: BF870193
	v_subrev_nc_u32_e32 v5, s2, v2                             // 00000007DA70: 4E0A0402
	v_add_co_u32 v0, s2, s0, v1                                // 00000007DA74: D7000200 00020200
	v_subrev_nc_u32_e32 v6, s3, v1                             // 00000007DA7C: 4E0C0203
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007DA80: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v3                                // 00000007DA88: D7000202 00020600
	v_subrev_nc_u32_e32 v7, s4, v3                             // 00000007DA90: 4E0E0604
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007DA94: D5207C03 00090001
	s_clause 0x2                                               // 00000007DA9C: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 00000007DAA0: DC620000 00000504
	global_store_b8 v[0:1], v6, off                            // 00000007DAA8: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007DAB0: DC620000 007C0702
	s_nop 0                                                    // 00000007DAB8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DABC: BFB60003
	s_endpgm                                                   // 00000007DAC0: BFB00000
subtract_char_get_global_id_get_group_id_symend:
	.long 0xbf800000                                           // 00000007DAC4: BF800000
	.long 0xbf800000                                           // 00000007DAC8: BF800000
	.long 0xbf800000                                           // 00000007DACC: BF800000
	.long 0xbf800000                                           // 00000007DAD0: BF800000
	.long 0xbf800000                                           // 00000007DAD4: BF800000
	.long 0xbf800000                                           // 00000007DAD8: BF800000
	.long 0xbf800000                                           // 00000007DADC: BF800000
	.long 0xbf800000                                           // 00000007DAE0: BF800000
	.long 0xbf800000                                           // 00000007DAE4: BF800000
	.long 0xbf800000                                           // 00000007DAE8: BF800000
	.long 0xbf800000                                           // 00000007DAEC: BF800000
	.long 0xbf800000                                           // 00000007DAF0: BF800000
	.long 0xbf800000                                           // 00000007DAF4: BF800000
	.long 0xbf800000                                           // 00000007DAF8: BF800000
	.long 0xbf800000                                           // 00000007DAFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_size_get_group_id,@function
	.size	subtract_char_get_global_size_get_group_id, subtract_char_get_global_size_get_group_id_symend-subtract_char_get_global_size_get_group_id
subtract_char_get_global_size_get_group_id:
	v_mov_b32_e32 v1, 0                                        // 00000007DB00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007DB04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007DB0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DB14: D6100000 02292900
	s_lshl_b32 s6, s2, 4                                       // 00000007DB1C: 84068402
	s_clause 0x1                                               // 00000007DB20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007DB24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007DB2C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007DB34: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007DB38: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000007DB40: F4000140 F8000048
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007DB48: F4080300 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 00000007DB50: F4040000 F8000000
	s_lshl_b32 s7, s3, 1                                       // 00000007DB58: 84078103
	s_waitcnt lgkmcnt(0)                                       // 00000007DB5C: BF89FC07
	s_lshl_b32 s11, s4, 1                                      // 00000007DB60: 840B8104
	s_mov_b32 s33, 0                                           // 00000007DB64: BEA10080
	s_lshl_b32 s8, s8, 4                                       // 00000007DB68: 84088408
	s_lshl_b32 s9, s9, 1                                       // 00000007DB6C: 84098109
	s_lshl_b32 s10, s10, 1                                     // 00000007DB70: 840A810A
	v_add3_u32 v3, s12, s6, v3                                 // 00000007DB74: D6550003 040C0C0C
	v_add3_u32 v4, s14, s7, v4                                 // 00000007DB7C: D6550004 04100E0E
	v_add3_u32 v0, s5, s11, v0                                 // 00000007DB84: D6550000 04001605
	s_waitcnt vmcnt(1)                                         // 00000007DB8C: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007DB90: 320A0490
	v_add_nc_u32_e32 v2, s8, v2                                // 00000007DB94: 4A040408
	s_waitcnt vmcnt(0)                                         // 00000007DB98: BF8903F7
	v_add_nc_u32_e32 v1, s10, v1                               // 00000007DB9C: 4A02020A
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007DBA0: BF870193
	v_add_nc_u32_e32 v5, s9, v5                                // 00000007DBA4: 4A0A0A09
	v_subrev_nc_u32_e32 v2, s2, v2                             // 00000007DBA8: 4E040402
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007DBAC: BF870193
	v_subrev_nc_u32_e32 v1, s4, v1                             // 00000007DBB0: 4E020204
	v_subrev_nc_u32_e32 v5, s3, v5                             // 00000007DBB4: 4E0A0A03
	s_clause 0x2                                               // 00000007DBB8: BF850002
	global_store_b8 v3, v2, s[0:1]                             // 00000007DBBC: DC620000 00000203
	global_store_b8 v4, v5, s[0:1]                             // 00000007DBC4: DC620000 00000504
	global_store_b8 v0, v1, s[0:1]                             // 00000007DBCC: DC620000 00000100
	s_nop 0                                                    // 00000007DBD4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DBD8: BFB60003
	s_endpgm                                                   // 00000007DBDC: BFB00000
subtract_char_get_global_size_get_group_id_symend:
	.long 0xbf800000                                           // 00000007DBE0: BF800000
	.long 0xbf800000                                           // 00000007DBE4: BF800000
	.long 0xbf800000                                           // 00000007DBE8: BF800000
	.long 0xbf800000                                           // 00000007DBEC: BF800000
	.long 0xbf800000                                           // 00000007DBF0: BF800000
	.long 0xbf800000                                           // 00000007DBF4: BF800000
	.long 0xbf800000                                           // 00000007DBF8: BF800000
	.long 0xbf800000                                           // 00000007DBFC: BF800000

	.p2align	8
	.type	subtract_char_get_num_groups_get_group_id,@function
	.size	subtract_char_get_num_groups_get_group_id, subtract_char_get_num_groups_get_group_id_symend-subtract_char_get_num_groups_get_group_id
subtract_char_get_num_groups_get_group_id:
	v_mov_b32_e32 v1, 0                                        // 00000007DC00: 7E020280
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007DC04: D6100004 02291500
	s_mov_b32 s33, 0                                           // 00000007DC0C: BEA10080
	s_clause 0x1                                               // 00000007DC10: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007DC14: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007DC1C: DC4A0026 01000001
	s_clause 0x3                                               // 00000007DC24: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007DC28: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007DC30: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007DC38: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007DC40: F4040180 F8000008
	s_lshl_b32 s1, s2, 1                                       // 00000007DC48: 84018102
	s_waitcnt lgkmcnt(0)                                       // 00000007DC4C: BF89FC07
	s_lshl_b32 s11, s3, 1                                      // 00000007DC50: 840B8103
	s_lshl_b32 s13, s4, 2                                      // 00000007DC54: 840D8204
	s_waitcnt vmcnt(1)                                         // 00000007DC58: BF8907F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 00000007DC5C: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007DC60: 7C7A0480
	v_and_b32_e32 v2, 0x3ff, v0                                // 00000007DC64: 360400FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DC6C: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007DC74: BF870004
	v_cmp_ne_u16_e64 s0, 0, v3.l                               // 00000007DC78: D43D0000 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007DC80: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007DC84: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000007DC88: 7C7A0280
	s_addc_u32 s8, s8, 0                                       // 00000007DC8C: 82088008
	v_add3_u32 v1, s12, s1, v2                                 // 00000007DC90: D6550001 0408020C
	s_cmp_lg_u32 s0, 0                                         // 00000007DC98: BF078000
	v_add3_u32 v2, s14, s11, v4                                // 00000007DC9C: D6550002 0410160E
	s_addc_u32 s0, s9, 0                                       // 00000007DCA4: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007DCA8: BF07806A
	v_add3_u32 v0, s5, s13, v0                                 // 00000007DCAC: D6550000 04001A05
	s_addc_u32 s1, s10, 0                                      // 00000007DCB4: 8201800A
	s_sub_i32 s2, s8, s2                                       // 00000007DCB8: 81820208
	s_sub_i32 s0, s0, s3                                       // 00000007DCBC: 81800300
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007DCC0: BF8704A9
	v_dual_mov_b32 v3, s2 :: v_dual_mov_b32 v4, s0             // 00000007DCC4: CA100002 03040000
	s_sub_i32 s0, s1, s4                                       // 00000007DCCC: 81800401
	v_mov_b32_e32 v5, s0                                       // 00000007DCD0: 7E0A0200
	s_clause 0x2                                               // 00000007DCD4: BF850002
	global_store_b8 v1, v3, s[6:7]                             // 00000007DCD8: DC620000 00060301
	global_store_b8 v2, v4, s[6:7]                             // 00000007DCE0: DC620000 00060402
	global_store_b8 v0, v5, s[6:7]                             // 00000007DCE8: DC620000 00060500
	s_nop 0                                                    // 00000007DCF0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DCF4: BFB60003
	s_endpgm                                                   // 00000007DCF8: BFB00000
subtract_char_get_num_groups_get_group_id_symend:
	.long 0xbf800000                                           // 00000007DCFC: BF800000

	.p2align	8
	.type	subtract_char_get_work_dim_get_group_id,@function
	.size	subtract_char_get_work_dim_get_group_id, subtract_char_get_work_dim_get_group_id_symend-subtract_char_get_work_dim_get_group_id
subtract_char_get_work_dim_get_group_id:
	s_clause 0x3                                               // 00000007DD00: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 00000007DD04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007DD0C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 00000007DD14: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007DD1C: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 00000007DD24: BF89FC07
	s_lshl_b32 s9, s3, 1                                       // 00000007DD28: 84098103
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007DD2C: D6100002 02291500
	s_lshl_b32 s7, s2, 1                                       // 00000007DD34: 84078102
	s_lshl_b32 s11, s4, 2                                      // 00000007DD38: 840B8204
	s_mov_b32 s33, 0                                           // 00000007DD3C: BEA10080
	s_and_b32 s5, s5, 0xffff                                   // 00000007DD40: 8B05FF05 0000FFFF
	v_add3_u32 v2, s10, s9, v2                                 // 00000007DD48: D6550002 0408120A
	s_sub_i32 s3, s5, s3                                       // 00000007DD50: 81830305
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 00000007DD54: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 00000007DD58: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DD64: D6100000 02292900
	s_sub_i32 s2, s5, s2                                       // 00000007DD6C: 81820205
	s_sub_i32 s4, s5, s4                                       // 00000007DD70: 81840405
	v_add3_u32 v1, s8, s7, v1                                  // 00000007DD74: D6550001 04040E08
	v_mov_b32_e32 v3, s2                                       // 00000007DD7C: 7E060202
	v_add3_u32 v0, s6, s11, v0                                 // 00000007DD80: D6550000 04001606
	v_mov_b32_e32 v5, s4                                       // 00000007DD88: 7E0A0204
	s_clause 0x2                                               // 00000007DD8C: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007DD90: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007DD98: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007DDA0: DC620000 00000500
	s_nop 0                                                    // 00000007DDA8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DDAC: BFB60003
	s_endpgm                                                   // 00000007DDB0: BFB00000
subtract_char_get_work_dim_get_group_id_symend:
	.long 0xbf800000                                           // 00000007DDB4: BF800000
	.long 0xbf800000                                           // 00000007DDB8: BF800000
	.long 0xbf800000                                           // 00000007DDBC: BF800000
	.long 0xbf800000                                           // 00000007DDC0: BF800000
	.long 0xbf800000                                           // 00000007DDC4: BF800000
	.long 0xbf800000                                           // 00000007DDC8: BF800000
	.long 0xbf800000                                           // 00000007DDCC: BF800000
	.long 0xbf800000                                           // 00000007DDD0: BF800000
	.long 0xbf800000                                           // 00000007DDD4: BF800000
	.long 0xbf800000                                           // 00000007DDD8: BF800000
	.long 0xbf800000                                           // 00000007DDDC: BF800000
	.long 0xbf800000                                           // 00000007DDE0: BF800000
	.long 0xbf800000                                           // 00000007DDE4: BF800000
	.long 0xbf800000                                           // 00000007DDE8: BF800000
	.long 0xbf800000                                           // 00000007DDEC: BF800000
	.long 0xbf800000                                           // 00000007DDF0: BF800000
	.long 0xbf800000                                           // 00000007DDF4: BF800000
	.long 0xbf800000                                           // 00000007DDF8: BF800000
	.long 0xbf800000                                           // 00000007DDFC: BF800000

	.p2align	8
	.type	subtract_char_x_get_local_size,@function
	.size	subtract_char_x_get_local_size, subtract_char_x_get_local_size_symend-subtract_char_x_get_local_size
subtract_char_x_get_local_size:
	s_clause 0x1                                               // 00000007DE00: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007DE04: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007DE0C: F4080300 F8000038
	s_add_u32 s5, s0, 16                                       // 00000007DE14: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007DE18: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007DE1C: 820B8001
	s_lshl_b32 s13, s2, 4                                      // 00000007DE20: 840D8402
	s_lshl_b32 s15, s3, 1                                      // 00000007DE24: 840F8103
	s_lshl_b32 s16, s4, 1                                      // 00000007DE28: 84108104
	v_mov_b32_e32 v1, 0                                        // 00000007DE2C: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007DE30: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007DE38: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007DE3C: BF0A0802
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007DE40: BF8704A1
	v_add3_u32 v3, s12, s13, v3                                // 00000007DE44: D6550003 040C1A0C
	s_cselect_b32 s2, 12, 18                                   // 00000007DE4C: 9802928C
	s_add_u32 s6, s5, s2                                       // 00000007DE50: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007DE54: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007DE58: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 00000007DE5C: DC4A0000 02060001
	s_clause 0x1                                               // 00000007DE64: BF850001
	s_load_b32 s2, s[0:1], 0x8                                 // 00000007DE68: F4000080 F8000008
	s_load_b64 s[6:7], s[0:1], null                            // 00000007DE70: F4040180 F8000000
	s_cselect_b32 s3, 14, 20                                   // 00000007DE78: 9803948E
	s_load_b32 s8, s[0:1], 0x48                                // 00000007DE7C: F4000200 F8000048
	s_add_u32 s0, s5, s3                                       // 00000007DE84: 80000305
	s_addc_u32 s1, s11, 0                                      // 00000007DE88: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007DE8C: BF0A0A04
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000007DE90: BF890007
	v_sub_nc_u32_e32 v2, s2, v2                                // 00000007DE94: 4C040402
	global_store_b8 v3, v2, s[6:7]                             // 00000007DE98: DC620000 00060203
	global_load_u16 v2, v1, s[0:1]                             // 00000007DEA0: DC4A0000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007DEA8: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007DEB0: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007DEB4: D6100000 02292900
	s_add_u32 s0, s5, s0                                       // 00000007DEBC: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007DEC0: 8201800B
	v_add3_u32 v3, s14, s15, v3                                // 00000007DEC4: D6550003 040C1E0E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007DECC: BF870002
	v_add3_u32 v0, s8, s16, v0                                 // 00000007DED0: D6550000 04002008
	s_waitcnt vmcnt(0)                                         // 00000007DED8: BF8903F7
	v_sub_nc_u32_e32 v2, s2, v2                                // 00000007DEDC: 4C040402
	global_store_b8 v3, v2, s[6:7]                             // 00000007DEE0: DC620000 00060203
	global_load_u16 v1, v1, s[0:1]                             // 00000007DEE8: DC4A0000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007DEF0: BF8903F7
	v_sub_nc_u32_e32 v1, s2, v1                                // 00000007DEF4: 4C020202
	global_store_b8 v0, v1, s[6:7]                             // 00000007DEF8: DC620000 00060100
	s_nop 0                                                    // 00000007DF00: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007DF04: BFB60003
	s_endpgm                                                   // 00000007DF08: BFB00000
subtract_char_x_get_local_size_symend:
	.long 0xbf800000                                           // 00000007DF0C: BF800000
	.long 0xbf800000                                           // 00000007DF10: BF800000
	.long 0xbf800000                                           // 00000007DF14: BF800000
	.long 0xbf800000                                           // 00000007DF18: BF800000
	.long 0xbf800000                                           // 00000007DF1C: BF800000
	.long 0xbf800000                                           // 00000007DF20: BF800000
	.long 0xbf800000                                           // 00000007DF24: BF800000
	.long 0xbf800000                                           // 00000007DF28: BF800000
	.long 0xbf800000                                           // 00000007DF2C: BF800000
	.long 0xbf800000                                           // 00000007DF30: BF800000
	.long 0xbf800000                                           // 00000007DF34: BF800000
	.long 0xbf800000                                           // 00000007DF38: BF800000
	.long 0xbf800000                                           // 00000007DF3C: BF800000
	.long 0xbf800000                                           // 00000007DF40: BF800000
	.long 0xbf800000                                           // 00000007DF44: BF800000
	.long 0xbf800000                                           // 00000007DF48: BF800000
	.long 0xbf800000                                           // 00000007DF4C: BF800000
	.long 0xbf800000                                           // 00000007DF50: BF800000
	.long 0xbf800000                                           // 00000007DF54: BF800000
	.long 0xbf800000                                           // 00000007DF58: BF800000
	.long 0xbf800000                                           // 00000007DF5C: BF800000
	.long 0xbf800000                                           // 00000007DF60: BF800000
	.long 0xbf800000                                           // 00000007DF64: BF800000
	.long 0xbf800000                                           // 00000007DF68: BF800000
	.long 0xbf800000                                           // 00000007DF6C: BF800000
	.long 0xbf800000                                           // 00000007DF70: BF800000
	.long 0xbf800000                                           // 00000007DF74: BF800000
	.long 0xbf800000                                           // 00000007DF78: BF800000
	.long 0xbf800000                                           // 00000007DF7C: BF800000
	.long 0xbf800000                                           // 00000007DF80: BF800000
	.long 0xbf800000                                           // 00000007DF84: BF800000
	.long 0xbf800000                                           // 00000007DF88: BF800000
	.long 0xbf800000                                           // 00000007DF8C: BF800000
	.long 0xbf800000                                           // 00000007DF90: BF800000
	.long 0xbf800000                                           // 00000007DF94: BF800000
	.long 0xbf800000                                           // 00000007DF98: BF800000
	.long 0xbf800000                                           // 00000007DF9C: BF800000
	.long 0xbf800000                                           // 00000007DFA0: BF800000
	.long 0xbf800000                                           // 00000007DFA4: BF800000
	.long 0xbf800000                                           // 00000007DFA8: BF800000
	.long 0xbf800000                                           // 00000007DFAC: BF800000
	.long 0xbf800000                                           // 00000007DFB0: BF800000
	.long 0xbf800000                                           // 00000007DFB4: BF800000
	.long 0xbf800000                                           // 00000007DFB8: BF800000
	.long 0xbf800000                                           // 00000007DFBC: BF800000
	.long 0xbf800000                                           // 00000007DFC0: BF800000
	.long 0xbf800000                                           // 00000007DFC4: BF800000
	.long 0xbf800000                                           // 00000007DFC8: BF800000
	.long 0xbf800000                                           // 00000007DFCC: BF800000
	.long 0xbf800000                                           // 00000007DFD0: BF800000
	.long 0xbf800000                                           // 00000007DFD4: BF800000
	.long 0xbf800000                                           // 00000007DFD8: BF800000
	.long 0xbf800000                                           // 00000007DFDC: BF800000
	.long 0xbf800000                                           // 00000007DFE0: BF800000
	.long 0xbf800000                                           // 00000007DFE4: BF800000
	.long 0xbf800000                                           // 00000007DFE8: BF800000
	.long 0xbf800000                                           // 00000007DFEC: BF800000
	.long 0xbf800000                                           // 00000007DFF0: BF800000
	.long 0xbf800000                                           // 00000007DFF4: BF800000
	.long 0xbf800000                                           // 00000007DFF8: BF800000
	.long 0xbf800000                                           // 00000007DFFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_offset_get_local_size,@function
	.size	subtract_char_get_global_offset_get_local_size, subtract_char_get_global_offset_get_local_size_symend-subtract_char_get_global_offset_get_local_size
subtract_char_get_global_offset_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007E000: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007E008: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007E00C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007E010: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 00000007E014: 84108102
	s_lshl_b32 s17, s3, 4                                      // 00000007E018: 84118403
	s_lshl_b32 s18, s4, 1                                      // 00000007E01C: 84128104
	v_mov_b32_e32 v1, 0                                        // 00000007E020: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007E024: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007E02C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007E030: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007E034: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007E038: BF870009
	s_add_u32 s6, s5, s2                                       // 00000007E03C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007E040: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007E044: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 00000007E048: DC4A0000 02060001
	s_clause 0x1                                               // 00000007E050: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007E054: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007E05C: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007E064: 9802948E
	s_load_b32 s3, s[0:1], 0x48                                // 00000007E068: F40000C0 F8000048
	s_add_u32 s0, s5, s2                                       // 00000007E070: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007E074: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007E078: BF0A0A04
	s_waitcnt lgkmcnt(0)                                       // 00000007E07C: BF89FC07
	v_add3_u32 v3, s12, s16, v3                                // 00000007E080: D6550003 040C200C
	s_waitcnt vmcnt(0)                                         // 00000007E088: BF8903F7
	v_sub_nc_u32_e32 v2, s12, v2                               // 00000007E08C: 4C04040C
	global_store_b8 v3, v2, s[6:7]                             // 00000007E090: DC620000 00060203
	global_load_u16 v2, v1, s[0:1]                             // 00000007E098: DC4A0000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007E0A0: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007E0A8: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E0AC: D6100000 02292900
	s_add_u32 s0, s5, s0                                       // 00000007E0B4: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007E0B8: 8201800B
	v_add3_u32 v3, s14, s17, v3                                // 00000007E0BC: D6550003 040C220E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007E0C4: BF870002
	v_add3_u32 v0, s3, s18, v0                                 // 00000007E0C8: D6550000 04002403
	s_waitcnt vmcnt(0)                                         // 00000007E0D0: BF8903F7
	v_sub_nc_u32_e32 v2, s14, v2                               // 00000007E0D4: 4C04040E
	global_store_b8 v3, v2, s[6:7]                             // 00000007E0D8: DC620000 00060203
	global_load_u16 v1, v1, s[0:1]                             // 00000007E0E0: DC4A0000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007E0E8: BF8903F7
	v_sub_nc_u32_e32 v1, s3, v1                                // 00000007E0EC: 4C020203
	global_store_b8 v0, v1, s[6:7]                             // 00000007E0F0: DC620000 00060100
	s_nop 0                                                    // 00000007E0F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E0FC: BFB60003
	s_endpgm                                                   // 00000007E100: BFB00000
subtract_char_get_global_offset_get_local_size_symend:
	.long 0xbf800000                                           // 00000007E104: BF800000
	.long 0xbf800000                                           // 00000007E108: BF800000
	.long 0xbf800000                                           // 00000007E10C: BF800000
	.long 0xbf800000                                           // 00000007E110: BF800000
	.long 0xbf800000                                           // 00000007E114: BF800000
	.long 0xbf800000                                           // 00000007E118: BF800000
	.long 0xbf800000                                           // 00000007E11C: BF800000
	.long 0xbf800000                                           // 00000007E120: BF800000
	.long 0xbf800000                                           // 00000007E124: BF800000
	.long 0xbf800000                                           // 00000007E128: BF800000
	.long 0xbf800000                                           // 00000007E12C: BF800000
	.long 0xbf800000                                           // 00000007E130: BF800000
	.long 0xbf800000                                           // 00000007E134: BF800000
	.long 0xbf800000                                           // 00000007E138: BF800000
	.long 0xbf800000                                           // 00000007E13C: BF800000
	.long 0xbf800000                                           // 00000007E140: BF800000
	.long 0xbf800000                                           // 00000007E144: BF800000
	.long 0xbf800000                                           // 00000007E148: BF800000
	.long 0xbf800000                                           // 00000007E14C: BF800000
	.long 0xbf800000                                           // 00000007E150: BF800000
	.long 0xbf800000                                           // 00000007E154: BF800000
	.long 0xbf800000                                           // 00000007E158: BF800000
	.long 0xbf800000                                           // 00000007E15C: BF800000
	.long 0xbf800000                                           // 00000007E160: BF800000
	.long 0xbf800000                                           // 00000007E164: BF800000
	.long 0xbf800000                                           // 00000007E168: BF800000
	.long 0xbf800000                                           // 00000007E16C: BF800000
	.long 0xbf800000                                           // 00000007E170: BF800000
	.long 0xbf800000                                           // 00000007E174: BF800000
	.long 0xbf800000                                           // 00000007E178: BF800000
	.long 0xbf800000                                           // 00000007E17C: BF800000
	.long 0xbf800000                                           // 00000007E180: BF800000
	.long 0xbf800000                                           // 00000007E184: BF800000
	.long 0xbf800000                                           // 00000007E188: BF800000
	.long 0xbf800000                                           // 00000007E18C: BF800000
	.long 0xbf800000                                           // 00000007E190: BF800000
	.long 0xbf800000                                           // 00000007E194: BF800000
	.long 0xbf800000                                           // 00000007E198: BF800000
	.long 0xbf800000                                           // 00000007E19C: BF800000
	.long 0xbf800000                                           // 00000007E1A0: BF800000
	.long 0xbf800000                                           // 00000007E1A4: BF800000
	.long 0xbf800000                                           // 00000007E1A8: BF800000
	.long 0xbf800000                                           // 00000007E1AC: BF800000
	.long 0xbf800000                                           // 00000007E1B0: BF800000
	.long 0xbf800000                                           // 00000007E1B4: BF800000
	.long 0xbf800000                                           // 00000007E1B8: BF800000
	.long 0xbf800000                                           // 00000007E1BC: BF800000
	.long 0xbf800000                                           // 00000007E1C0: BF800000
	.long 0xbf800000                                           // 00000007E1C4: BF800000
	.long 0xbf800000                                           // 00000007E1C8: BF800000
	.long 0xbf800000                                           // 00000007E1CC: BF800000
	.long 0xbf800000                                           // 00000007E1D0: BF800000
	.long 0xbf800000                                           // 00000007E1D4: BF800000
	.long 0xbf800000                                           // 00000007E1D8: BF800000
	.long 0xbf800000                                           // 00000007E1DC: BF800000
	.long 0xbf800000                                           // 00000007E1E0: BF800000
	.long 0xbf800000                                           // 00000007E1E4: BF800000
	.long 0xbf800000                                           // 00000007E1E8: BF800000
	.long 0xbf800000                                           // 00000007E1EC: BF800000
	.long 0xbf800000                                           // 00000007E1F0: BF800000
	.long 0xbf800000                                           // 00000007E1F4: BF800000
	.long 0xbf800000                                           // 00000007E1F8: BF800000
	.long 0xbf800000                                           // 00000007E1FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_id_get_local_size,@function
	.size	subtract_char_get_local_id_get_local_size, subtract_char_get_local_id_get_local_size_symend-subtract_char_get_local_id_get_local_size
subtract_char_get_local_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007E200: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007E208: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007E20C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007E210: 820B8001
	s_lshl_b32 s16, s2, 3                                      // 00000007E214: 84108302
	s_lshl_b32 s17, s3, 2                                      // 00000007E218: 84118203
	s_lshl_b32 s18, s4, 1                                      // 00000007E21C: 84128104
	v_mov_b32_e32 v1, 0                                        // 00000007E220: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007E224: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007E22C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007E230: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007E234: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007E238: BF870009
	s_add_u32 s6, s5, s2                                       // 00000007E23C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007E240: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007E244: BF0A0903
	global_load_u8 v2, v1, s[6:7]                              // 00000007E248: DC420000 02060001
	s_clause 0x1                                               // 00000007E250: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007E254: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007E25C: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007E264: 9802948E
	s_load_b32 s3, s[0:1], 0x48                                // 00000007E268: F40000C0 F8000048
	s_add_u32 s0, s5, s2                                       // 00000007E270: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007E274: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007E278: BF0A0A04
	s_waitcnt lgkmcnt(0)                                       // 00000007E27C: BF89FC07
	v_add3_u32 v4, s12, s16, v3                                // 00000007E280: D6550004 040C200C
	s_waitcnt vmcnt(0)                                         // 00000007E288: BF8903F7
	v_sub_nc_u16 v2.l, v3.l, v2.l                              // 00000007E28C: D7040002 00020503
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007E294: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E29C: D6100000 02292900
	global_store_b8 v4, v2, s[6:7]                             // 00000007E2A4: DC620000 00060204
	global_load_u8 v2, v1, s[0:1]                              // 00000007E2AC: DC420000 02000001
	v_add3_u32 v4, s14, s17, v3                                // 00000007E2B4: D6550004 040C220E
	s_cselect_b32 s0, 16, 22                                   // 00000007E2BC: 98009690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007E2C0: BF870009
	s_add_u32 s0, s5, s0                                       // 00000007E2C4: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007E2C8: 8201800B
	s_waitcnt vmcnt(0)                                         // 00000007E2CC: BF8903F7
	v_sub_nc_u16 v2.l, v3.l, v2.l                              // 00000007E2D0: D7040002 00020503
	global_store_b8 v4, v2, s[6:7]                             // 00000007E2D8: DC620000 00060204
	global_load_u8 v1, v1, s[0:1]                              // 00000007E2E0: DC420000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007E2E8: BF8903F7
	v_sub_nc_u16 v1.l, v0.l, v1.l                              // 00000007E2EC: D7040001 00020300
	v_add3_u32 v0, s3, s18, v0                                 // 00000007E2F4: D6550000 04002403
	global_store_b8 v0, v1, s[6:7]                             // 00000007E2FC: DC620000 00060100
	s_nop 0                                                    // 00000007E304: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E308: BFB60003
	s_endpgm                                                   // 00000007E30C: BFB00000
subtract_char_get_local_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000007E310: BF800000
	.long 0xbf800000                                           // 00000007E314: BF800000
	.long 0xbf800000                                           // 00000007E318: BF800000
	.long 0xbf800000                                           // 00000007E31C: BF800000
	.long 0xbf800000                                           // 00000007E320: BF800000
	.long 0xbf800000                                           // 00000007E324: BF800000
	.long 0xbf800000                                           // 00000007E328: BF800000
	.long 0xbf800000                                           // 00000007E32C: BF800000
	.long 0xbf800000                                           // 00000007E330: BF800000
	.long 0xbf800000                                           // 00000007E334: BF800000
	.long 0xbf800000                                           // 00000007E338: BF800000
	.long 0xbf800000                                           // 00000007E33C: BF800000
	.long 0xbf800000                                           // 00000007E340: BF800000
	.long 0xbf800000                                           // 00000007E344: BF800000
	.long 0xbf800000                                           // 00000007E348: BF800000
	.long 0xbf800000                                           // 00000007E34C: BF800000
	.long 0xbf800000                                           // 00000007E350: BF800000
	.long 0xbf800000                                           // 00000007E354: BF800000
	.long 0xbf800000                                           // 00000007E358: BF800000
	.long 0xbf800000                                           // 00000007E35C: BF800000
	.long 0xbf800000                                           // 00000007E360: BF800000
	.long 0xbf800000                                           // 00000007E364: BF800000
	.long 0xbf800000                                           // 00000007E368: BF800000
	.long 0xbf800000                                           // 00000007E36C: BF800000
	.long 0xbf800000                                           // 00000007E370: BF800000
	.long 0xbf800000                                           // 00000007E374: BF800000
	.long 0xbf800000                                           // 00000007E378: BF800000
	.long 0xbf800000                                           // 00000007E37C: BF800000
	.long 0xbf800000                                           // 00000007E380: BF800000
	.long 0xbf800000                                           // 00000007E384: BF800000
	.long 0xbf800000                                           // 00000007E388: BF800000
	.long 0xbf800000                                           // 00000007E38C: BF800000
	.long 0xbf800000                                           // 00000007E390: BF800000
	.long 0xbf800000                                           // 00000007E394: BF800000
	.long 0xbf800000                                           // 00000007E398: BF800000
	.long 0xbf800000                                           // 00000007E39C: BF800000
	.long 0xbf800000                                           // 00000007E3A0: BF800000
	.long 0xbf800000                                           // 00000007E3A4: BF800000
	.long 0xbf800000                                           // 00000007E3A8: BF800000
	.long 0xbf800000                                           // 00000007E3AC: BF800000
	.long 0xbf800000                                           // 00000007E3B0: BF800000
	.long 0xbf800000                                           // 00000007E3B4: BF800000
	.long 0xbf800000                                           // 00000007E3B8: BF800000
	.long 0xbf800000                                           // 00000007E3BC: BF800000
	.long 0xbf800000                                           // 00000007E3C0: BF800000
	.long 0xbf800000                                           // 00000007E3C4: BF800000
	.long 0xbf800000                                           // 00000007E3C8: BF800000
	.long 0xbf800000                                           // 00000007E3CC: BF800000
	.long 0xbf800000                                           // 00000007E3D0: BF800000
	.long 0xbf800000                                           // 00000007E3D4: BF800000
	.long 0xbf800000                                           // 00000007E3D8: BF800000
	.long 0xbf800000                                           // 00000007E3DC: BF800000
	.long 0xbf800000                                           // 00000007E3E0: BF800000
	.long 0xbf800000                                           // 00000007E3E4: BF800000
	.long 0xbf800000                                           // 00000007E3E8: BF800000
	.long 0xbf800000                                           // 00000007E3EC: BF800000
	.long 0xbf800000                                           // 00000007E3F0: BF800000
	.long 0xbf800000                                           // 00000007E3F4: BF800000
	.long 0xbf800000                                           // 00000007E3F8: BF800000
	.long 0xbf800000                                           // 00000007E3FC: BF800000

	.p2align	8
	.type	subtract_char_get_group_id_get_local_size,@function
	.size	subtract_char_get_group_id_get_local_size, subtract_char_get_group_id_get_local_size_symend-subtract_char_get_group_id_get_local_size
subtract_char_get_group_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007E400: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007E408: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007E40C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007E410: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 00000007E414: 84108102
	s_lshl_b32 s17, s3, 4                                      // 00000007E418: 84118403
	s_lshl_b32 s18, s4, 1                                      // 00000007E41C: 84128104
	v_mov_b32_e32 v1, 0                                        // 00000007E420: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007E424: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007E42C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007E430: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000007E434: 9806928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007E438: BF870009
	s_add_u32 s6, s5, s6                                       // 00000007E43C: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000007E440: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007E444: BF0A0903
	global_load_u8 v2, v1, s[6:7]                              // 00000007E448: DC420000 02060001
	s_clause 0x2                                               // 00000007E450: BF850002
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007E454: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007E45C: F4040180 F8000008
	s_load_b32 s8, s[0:1], 0x48                                // 00000007E464: F4000200 F8000048
	s_waitcnt lgkmcnt(0)                                       // 00000007E46C: BF89FC07
	v_add3_u32 v3, s12, s16, v3                                // 00000007E470: D6550003 040C200C
	s_waitcnt vmcnt(0)                                         // 00000007E478: BF8903F7
	v_sub_nc_u32_e32 v2, s2, v2                                // 00000007E47C: 4C040402
	s_cselect_b32 s2, 14, 20                                   // 00000007E480: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007E484: BF870009
	s_add_u32 s0, s5, s2                                       // 00000007E488: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007E48C: 8201800B
	global_store_b8 v3, v2, s[6:7]                             // 00000007E490: DC620000 00060203
	global_load_u8 v2, v1, s[0:1]                              // 00000007E498: DC420000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007E4A0: D6100003 02291500
	s_cmp_lt_u32 s4, s10                                       // 00000007E4A8: BF0A0A04
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E4AC: D6100000 02292900
	s_cselect_b32 s0, 16, 22                                   // 00000007E4B4: 98009690
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007E4B8: BF870002
	v_add3_u32 v3, s14, s17, v3                                // 00000007E4BC: D6550003 040C220E
	s_add_u32 s0, s5, s0                                       // 00000007E4C4: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007E4C8: 8201800B
	v_add3_u32 v0, s8, s18, v0                                 // 00000007E4CC: D6550000 04002408
	s_waitcnt vmcnt(0)                                         // 00000007E4D4: BF8903F7
	v_sub_nc_u32_e32 v2, s3, v2                                // 00000007E4D8: 4C040403
	global_store_b8 v3, v2, s[6:7]                             // 00000007E4DC: DC620000 00060203
	global_load_u8 v1, v1, s[0:1]                              // 00000007E4E4: DC420000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007E4EC: BF8903F7
	v_sub_nc_u32_e32 v1, s4, v1                                // 00000007E4F0: 4C020204
	global_store_b8 v0, v1, s[6:7]                             // 00000007E4F4: DC620000 00060100
	s_nop 0                                                    // 00000007E4FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E500: BFB60003
	s_endpgm                                                   // 00000007E504: BFB00000
subtract_char_get_group_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000007E508: BF800000
	.long 0xbf800000                                           // 00000007E50C: BF800000
	.long 0xbf800000                                           // 00000007E510: BF800000
	.long 0xbf800000                                           // 00000007E514: BF800000
	.long 0xbf800000                                           // 00000007E518: BF800000
	.long 0xbf800000                                           // 00000007E51C: BF800000
	.long 0xbf800000                                           // 00000007E520: BF800000
	.long 0xbf800000                                           // 00000007E524: BF800000
	.long 0xbf800000                                           // 00000007E528: BF800000
	.long 0xbf800000                                           // 00000007E52C: BF800000
	.long 0xbf800000                                           // 00000007E530: BF800000
	.long 0xbf800000                                           // 00000007E534: BF800000
	.long 0xbf800000                                           // 00000007E538: BF800000
	.long 0xbf800000                                           // 00000007E53C: BF800000
	.long 0xbf800000                                           // 00000007E540: BF800000
	.long 0xbf800000                                           // 00000007E544: BF800000
	.long 0xbf800000                                           // 00000007E548: BF800000
	.long 0xbf800000                                           // 00000007E54C: BF800000
	.long 0xbf800000                                           // 00000007E550: BF800000
	.long 0xbf800000                                           // 00000007E554: BF800000
	.long 0xbf800000                                           // 00000007E558: BF800000
	.long 0xbf800000                                           // 00000007E55C: BF800000
	.long 0xbf800000                                           // 00000007E560: BF800000
	.long 0xbf800000                                           // 00000007E564: BF800000
	.long 0xbf800000                                           // 00000007E568: BF800000
	.long 0xbf800000                                           // 00000007E56C: BF800000
	.long 0xbf800000                                           // 00000007E570: BF800000
	.long 0xbf800000                                           // 00000007E574: BF800000
	.long 0xbf800000                                           // 00000007E578: BF800000
	.long 0xbf800000                                           // 00000007E57C: BF800000
	.long 0xbf800000                                           // 00000007E580: BF800000
	.long 0xbf800000                                           // 00000007E584: BF800000
	.long 0xbf800000                                           // 00000007E588: BF800000
	.long 0xbf800000                                           // 00000007E58C: BF800000
	.long 0xbf800000                                           // 00000007E590: BF800000
	.long 0xbf800000                                           // 00000007E594: BF800000
	.long 0xbf800000                                           // 00000007E598: BF800000
	.long 0xbf800000                                           // 00000007E59C: BF800000
	.long 0xbf800000                                           // 00000007E5A0: BF800000
	.long 0xbf800000                                           // 00000007E5A4: BF800000
	.long 0xbf800000                                           // 00000007E5A8: BF800000
	.long 0xbf800000                                           // 00000007E5AC: BF800000
	.long 0xbf800000                                           // 00000007E5B0: BF800000
	.long 0xbf800000                                           // 00000007E5B4: BF800000
	.long 0xbf800000                                           // 00000007E5B8: BF800000
	.long 0xbf800000                                           // 00000007E5BC: BF800000
	.long 0xbf800000                                           // 00000007E5C0: BF800000
	.long 0xbf800000                                           // 00000007E5C4: BF800000
	.long 0xbf800000                                           // 00000007E5C8: BF800000
	.long 0xbf800000                                           // 00000007E5CC: BF800000
	.long 0xbf800000                                           // 00000007E5D0: BF800000
	.long 0xbf800000                                           // 00000007E5D4: BF800000
	.long 0xbf800000                                           // 00000007E5D8: BF800000
	.long 0xbf800000                                           // 00000007E5DC: BF800000
	.long 0xbf800000                                           // 00000007E5E0: BF800000
	.long 0xbf800000                                           // 00000007E5E4: BF800000
	.long 0xbf800000                                           // 00000007E5E8: BF800000
	.long 0xbf800000                                           // 00000007E5EC: BF800000
	.long 0xbf800000                                           // 00000007E5F0: BF800000
	.long 0xbf800000                                           // 00000007E5F4: BF800000
	.long 0xbf800000                                           // 00000007E5F8: BF800000
	.long 0xbf800000                                           // 00000007E5FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_size_get_local_size,@function
	.size	subtract_char_get_local_size_get_local_size, subtract_char_get_local_size_get_local_size_symend-subtract_char_get_local_size_get_local_size
subtract_char_get_local_size_get_local_size:
	s_clause 0x2                                               // 00000007E600: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007E604: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007E60C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007E614: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007E61C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007E628: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E630: D6100000 02292900
	s_lshl_b32 s2, s2, 1                                       // 00000007E638: 84028102
	s_lshl_b32 s3, s3, 1                                       // 00000007E63C: 84038103
	s_lshl_b32 s4, s4, 2                                       // 00000007E640: 84048204
	s_mov_b32 s33, 0                                           // 00000007E644: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007E648: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 00000007E64C: D6550002 04080408
	v_add3_u32 v3, s10, s3, v3                                 // 00000007E654: D6550003 040C060A
	v_add3_u32 v0, s5, s4, v0                                  // 00000007E65C: D6550000 04000805
	s_clause 0x2                                               // 00000007E664: BF850002
	global_store_b8 v2, v1, s[0:1]                             // 00000007E668: DC620000 00000102
	global_store_b8 v3, v1, s[0:1]                             // 00000007E670: DC620000 00000103
	global_store_b8 v0, v1, s[0:1]                             // 00000007E678: DC620000 00000100
	s_nop 0                                                    // 00000007E680: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E684: BFB60003
	s_endpgm                                                   // 00000007E688: BFB00000
subtract_char_get_local_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000007E68C: BF800000
	.long 0xbf800000                                           // 00000007E690: BF800000
	.long 0xbf800000                                           // 00000007E694: BF800000
	.long 0xbf800000                                           // 00000007E698: BF800000
	.long 0xbf800000                                           // 00000007E69C: BF800000
	.long 0xbf800000                                           // 00000007E6A0: BF800000
	.long 0xbf800000                                           // 00000007E6A4: BF800000
	.long 0xbf800000                                           // 00000007E6A8: BF800000
	.long 0xbf800000                                           // 00000007E6AC: BF800000
	.long 0xbf800000                                           // 00000007E6B0: BF800000
	.long 0xbf800000                                           // 00000007E6B4: BF800000
	.long 0xbf800000                                           // 00000007E6B8: BF800000
	.long 0xbf800000                                           // 00000007E6BC: BF800000
	.long 0xbf800000                                           // 00000007E6C0: BF800000
	.long 0xbf800000                                           // 00000007E6C4: BF800000
	.long 0xbf800000                                           // 00000007E6C8: BF800000
	.long 0xbf800000                                           // 00000007E6CC: BF800000
	.long 0xbf800000                                           // 00000007E6D0: BF800000
	.long 0xbf800000                                           // 00000007E6D4: BF800000
	.long 0xbf800000                                           // 00000007E6D8: BF800000
	.long 0xbf800000                                           // 00000007E6DC: BF800000
	.long 0xbf800000                                           // 00000007E6E0: BF800000
	.long 0xbf800000                                           // 00000007E6E4: BF800000
	.long 0xbf800000                                           // 00000007E6E8: BF800000
	.long 0xbf800000                                           // 00000007E6EC: BF800000
	.long 0xbf800000                                           // 00000007E6F0: BF800000
	.long 0xbf800000                                           // 00000007E6F4: BF800000
	.long 0xbf800000                                           // 00000007E6F8: BF800000
	.long 0xbf800000                                           // 00000007E6FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_id_get_local_size,@function
	.size	subtract_char_get_global_id_get_local_size, subtract_char_get_global_id_get_local_size_symend-subtract_char_get_global_id_get_local_size
subtract_char_get_global_id_get_local_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007E700: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007E708: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007E70C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007E710: 820B8001
	v_dual_mov_b32 v3, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007E714: CA240080 030200FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007E720: BEA10080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 00000007E724: BF8704B1
	v_lshl_or_b32 v2, s2, 1, v2                                // 00000007E728: D6560002 04090202
	s_cmp_lt_u32 s2, s8                                        // 00000007E730: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000007E734: 9806928C
	s_add_u32 s6, s5, s6                                       // 00000007E738: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000007E73C: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007E740: BF0A0903
	global_load_u16 v1, v3, s[6:7]                             // 00000007E744: DC4A0000 01060003
	s_clause 0x1                                               // 00000007E74C: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007E750: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007E758: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007E760: 9802948E
	s_load_b32 s8, s[0:1], 0x48                                // 00000007E764: F4000200 F8000048
	s_add_u32 s0, s5, s2                                       // 00000007E76C: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007E770: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007E774: BF0A0A04
	s_waitcnt lgkmcnt(0)                                       // 00000007E778: BF89FC07
	v_add_nc_u32_e32 v4, s12, v2                               // 00000007E77C: 4A08040C
	s_waitcnt vmcnt(0)                                         // 00000007E780: BF8903F7
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_4) | instid1(VALU_DEP_2)// 00000007E784: BF870151
	v_sub_nc_u32_e32 v1, v4, v1                                // 00000007E788: 4C020304
	global_store_b8 v2, v1, s[6:7]                             // 00000007E78C: DC620000 00060102
	global_load_u16 v4, v3, s[0:1]                             // 00000007E794: DC4A0000 04000003
	v_bfe_u32 v1, v0, 10, 10                                   // 00000007E79C: D6100001 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E7A4: D6100000 02292900
	v_lshl_or_b32 v1, s3, 1, v1                                // 00000007E7AC: D6560001 04050203
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007E7B4: BF870112
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007E7B8: D6560000 04010404
	v_add_nc_u32_e32 v5, s14, v1                               // 00000007E7C0: 4A0A020E
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007E7C4: BF870112
	v_add_nc_u32_e32 v0, s8, v0                                // 00000007E7C8: 4A000008
	v_add_co_u32 v1, s0, s6, v5                                // 00000007E7CC: D7000001 00020A06
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007E7D4: BF8704A1
	v_add_co_ci_u32_e64 v2, null, s7, 0, s0                    // 00000007E7D8: D5207C02 00010007
	s_cselect_b32 s0, 16, 22                                   // 00000007E7E0: 98009690
	s_add_u32 s0, s5, s0                                       // 00000007E7E4: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007E7E8: 8201800B
	s_waitcnt vmcnt(0)                                         // 00000007E7EC: BF8903F7
	v_sub_nc_u32_e32 v4, v5, v4                                // 00000007E7F0: 4C080905
	global_store_b8 v[1:2], v4, off                            // 00000007E7F4: DC620000 007C0401
	global_load_u16 v1, v3, s[0:1]                             // 00000007E7FC: DC4A0000 01000003
	s_waitcnt vmcnt(0)                                         // 00000007E804: BF8903F7
	v_sub_nc_u32_e32 v2, v0, v1                                // 00000007E808: 4C040300
	v_add_co_u32 v0, s0, s6, v0                                // 00000007E80C: D7000000 00020006
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007E814: BF870001
	v_add_co_ci_u32_e64 v1, null, s7, 0, s0                    // 00000007E818: D5207C01 00010007
	global_store_b8 v[0:1], v2, off                            // 00000007E820: DC620000 007C0200
	s_nop 0                                                    // 00000007E828: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007E82C: BFB60003
	s_endpgm                                                   // 00000007E830: BFB00000
subtract_char_get_global_id_get_local_size_symend:
	.long 0xbf800000                                           // 00000007E834: BF800000
	.long 0xbf800000                                           // 00000007E838: BF800000
	.long 0xbf800000                                           // 00000007E83C: BF800000
	.long 0xbf800000                                           // 00000007E840: BF800000
	.long 0xbf800000                                           // 00000007E844: BF800000
	.long 0xbf800000                                           // 00000007E848: BF800000
	.long 0xbf800000                                           // 00000007E84C: BF800000
	.long 0xbf800000                                           // 00000007E850: BF800000
	.long 0xbf800000                                           // 00000007E854: BF800000
	.long 0xbf800000                                           // 00000007E858: BF800000
	.long 0xbf800000                                           // 00000007E85C: BF800000
	.long 0xbf800000                                           // 00000007E860: BF800000
	.long 0xbf800000                                           // 00000007E864: BF800000
	.long 0xbf800000                                           // 00000007E868: BF800000
	.long 0xbf800000                                           // 00000007E86C: BF800000
	.long 0xbf800000                                           // 00000007E870: BF800000
	.long 0xbf800000                                           // 00000007E874: BF800000
	.long 0xbf800000                                           // 00000007E878: BF800000
	.long 0xbf800000                                           // 00000007E87C: BF800000
	.long 0xbf800000                                           // 00000007E880: BF800000
	.long 0xbf800000                                           // 00000007E884: BF800000
	.long 0xbf800000                                           // 00000007E888: BF800000
	.long 0xbf800000                                           // 00000007E88C: BF800000
	.long 0xbf800000                                           // 00000007E890: BF800000
	.long 0xbf800000                                           // 00000007E894: BF800000
	.long 0xbf800000                                           // 00000007E898: BF800000
	.long 0xbf800000                                           // 00000007E89C: BF800000
	.long 0xbf800000                                           // 00000007E8A0: BF800000
	.long 0xbf800000                                           // 00000007E8A4: BF800000
	.long 0xbf800000                                           // 00000007E8A8: BF800000
	.long 0xbf800000                                           // 00000007E8AC: BF800000
	.long 0xbf800000                                           // 00000007E8B0: BF800000
	.long 0xbf800000                                           // 00000007E8B4: BF800000
	.long 0xbf800000                                           // 00000007E8B8: BF800000
	.long 0xbf800000                                           // 00000007E8BC: BF800000
	.long 0xbf800000                                           // 00000007E8C0: BF800000
	.long 0xbf800000                                           // 00000007E8C4: BF800000
	.long 0xbf800000                                           // 00000007E8C8: BF800000
	.long 0xbf800000                                           // 00000007E8CC: BF800000
	.long 0xbf800000                                           // 00000007E8D0: BF800000
	.long 0xbf800000                                           // 00000007E8D4: BF800000
	.long 0xbf800000                                           // 00000007E8D8: BF800000
	.long 0xbf800000                                           // 00000007E8DC: BF800000
	.long 0xbf800000                                           // 00000007E8E0: BF800000
	.long 0xbf800000                                           // 00000007E8E4: BF800000
	.long 0xbf800000                                           // 00000007E8E8: BF800000
	.long 0xbf800000                                           // 00000007E8EC: BF800000
	.long 0xbf800000                                           // 00000007E8F0: BF800000
	.long 0xbf800000                                           // 00000007E8F4: BF800000
	.long 0xbf800000                                           // 00000007E8F8: BF800000
	.long 0xbf800000                                           // 00000007E8FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_size_get_local_size,@function
	.size	subtract_char_get_global_size_get_local_size, subtract_char_get_global_size_get_local_size_symend-subtract_char_get_global_size_get_local_size
subtract_char_get_global_size_get_local_size:
	v_mov_b32_e32 v1, 0                                        // 00000007E900: 7E020280
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007E904: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007E90C: 80059000
	v_and_b32_e32 v5, 0x3ff, v0                                // 00000007E910: 360A00FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007E918: BEA10080
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007E91C: DC520022 02000001
	s_waitcnt lgkmcnt(0)                                       // 00000007E924: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007E928: 820B8001
	s_lshl_b32 s16, s2, 4                                      // 00000007E92C: 84108402
	s_lshl_b32 s17, s3, 1                                      // 00000007E930: 84118103
	s_lshl_b32 s18, s4, 1                                      // 00000007E934: 84128104
	s_lshl_b32 s19, s8, 4                                      // 00000007E938: 84138408
	s_lshl_b32 s20, s9, 1                                      // 00000007E93C: 84148109
	s_lshl_b32 s21, s10, 1                                     // 00000007E940: 8415810A
	s_cmp_lt_u32 s2, s8                                        // 00000007E944: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007E948: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007E94C: BF870009
	s_add_u32 s6, s5, s2                                       // 00000007E950: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007E954: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007E958: BF0A0903
	s_cselect_b32 s2, 14, 20                                   // 00000007E95C: 9802948E
	s_waitcnt vmcnt(0)                                         // 00000007E960: BF8903F7
	v_add_nc_u32_e32 v6, s19, v2                               // 00000007E964: 4A0C0413
	s_clause 0x1                                               // 00000007E968: BF850001
	global_load_u8 v3, v1, s[6:7]                              // 00000007E96C: DC420000 03060001
	global_load_u16 v4, v1, s[0:1] offset:38                   // 00000007E974: DC4A0026 04000001
	s_clause 0x2                                               // 00000007E97C: BF850002
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007E980: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], null                            // 00000007E988: F4040180 F8000000
	s_load_b32 s3, s[0:1], 0x48                                // 00000007E990: F40000C0 F8000048
	s_add_u32 s0, s5, s2                                       // 00000007E998: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007E99C: 8201800B
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007E9A0: 32040490
	s_cmp_lt_u32 s4, s10                                       // 00000007E9A4: BF0A0A04
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007E9A8: BF870001
	v_add_nc_u32_e32 v2, s20, v2                               // 00000007E9AC: 4A040414
	s_waitcnt lgkmcnt(0)                                       // 00000007E9B0: BF89FC07
	v_add3_u32 v5, s12, s16, v5                                // 00000007E9B4: D6550005 0414200C
	s_waitcnt vmcnt(1)                                         // 00000007E9BC: BF8907F7
	v_sub_nc_u32_e32 v3, v6, v3                                // 00000007E9C0: 4C060706
	global_store_b8 v5, v3, s[6:7]                             // 00000007E9C4: DC620000 00060305
	global_load_u8 v3, v1, s[0:1]                              // 00000007E9CC: DC420000 03000001
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007E9D4: D6100005 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007E9DC: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007E9E0: D6100000 02292900
	s_add_u32 s0, s5, s0                                       // 00000007E9E8: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007E9EC: 8201800B
	v_add3_u32 v5, s14, s17, v5                                // 00000007E9F0: D6550005 0414220E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007E9F8: BF870002
	v_add3_u32 v0, s3, s18, v0                                 // 00000007E9FC: D6550000 04002403
	s_waitcnt vmcnt(0)                                         // 00000007EA04: BF8903F7
	v_sub_nc_u32_e32 v2, v2, v3                                // 00000007EA08: 4C040702
	global_store_b8 v5, v2, s[6:7]                             // 00000007EA0C: DC620000 00060205
	global_load_u8 v1, v1, s[0:1]                              // 00000007EA14: DC420000 01000001
	v_add_nc_u32_e32 v2, s21, v4                               // 00000007EA1C: 4A040815
	s_waitcnt vmcnt(0)                                         // 00000007EA20: BF8903F7
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007EA24: BF870001
	v_sub_nc_u32_e32 v1, v2, v1                                // 00000007EA28: 4C020302
	global_store_b8 v0, v1, s[6:7]                             // 00000007EA2C: DC620000 00060100
	s_nop 0                                                    // 00000007EA34: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EA38: BFB60003
	s_endpgm                                                   // 00000007EA3C: BFB00000
subtract_char_get_global_size_get_local_size_symend:
	.long 0xbf800000                                           // 00000007EA40: BF800000
	.long 0xbf800000                                           // 00000007EA44: BF800000
	.long 0xbf800000                                           // 00000007EA48: BF800000
	.long 0xbf800000                                           // 00000007EA4C: BF800000
	.long 0xbf800000                                           // 00000007EA50: BF800000
	.long 0xbf800000                                           // 00000007EA54: BF800000
	.long 0xbf800000                                           // 00000007EA58: BF800000
	.long 0xbf800000                                           // 00000007EA5C: BF800000
	.long 0xbf800000                                           // 00000007EA60: BF800000
	.long 0xbf800000                                           // 00000007EA64: BF800000
	.long 0xbf800000                                           // 00000007EA68: BF800000
	.long 0xbf800000                                           // 00000007EA6C: BF800000
	.long 0xbf800000                                           // 00000007EA70: BF800000
	.long 0xbf800000                                           // 00000007EA74: BF800000
	.long 0xbf800000                                           // 00000007EA78: BF800000
	.long 0xbf800000                                           // 00000007EA7C: BF800000
	.long 0xbf800000                                           // 00000007EA80: BF800000
	.long 0xbf800000                                           // 00000007EA84: BF800000
	.long 0xbf800000                                           // 00000007EA88: BF800000
	.long 0xbf800000                                           // 00000007EA8C: BF800000
	.long 0xbf800000                                           // 00000007EA90: BF800000
	.long 0xbf800000                                           // 00000007EA94: BF800000
	.long 0xbf800000                                           // 00000007EA98: BF800000
	.long 0xbf800000                                           // 00000007EA9C: BF800000
	.long 0xbf800000                                           // 00000007EAA0: BF800000
	.long 0xbf800000                                           // 00000007EAA4: BF800000
	.long 0xbf800000                                           // 00000007EAA8: BF800000
	.long 0xbf800000                                           // 00000007EAAC: BF800000
	.long 0xbf800000                                           // 00000007EAB0: BF800000
	.long 0xbf800000                                           // 00000007EAB4: BF800000
	.long 0xbf800000                                           // 00000007EAB8: BF800000
	.long 0xbf800000                                           // 00000007EABC: BF800000
	.long 0xbf800000                                           // 00000007EAC0: BF800000
	.long 0xbf800000                                           // 00000007EAC4: BF800000
	.long 0xbf800000                                           // 00000007EAC8: BF800000
	.long 0xbf800000                                           // 00000007EACC: BF800000
	.long 0xbf800000                                           // 00000007EAD0: BF800000
	.long 0xbf800000                                           // 00000007EAD4: BF800000
	.long 0xbf800000                                           // 00000007EAD8: BF800000
	.long 0xbf800000                                           // 00000007EADC: BF800000
	.long 0xbf800000                                           // 00000007EAE0: BF800000
	.long 0xbf800000                                           // 00000007EAE4: BF800000
	.long 0xbf800000                                           // 00000007EAE8: BF800000
	.long 0xbf800000                                           // 00000007EAEC: BF800000
	.long 0xbf800000                                           // 00000007EAF0: BF800000
	.long 0xbf800000                                           // 00000007EAF4: BF800000
	.long 0xbf800000                                           // 00000007EAF8: BF800000
	.long 0xbf800000                                           // 00000007EAFC: BF800000

	.p2align	8
	.type	subtract_char_get_num_groups_get_local_size,@function
	.size	subtract_char_get_num_groups_get_local_size, subtract_char_get_num_groups_get_local_size_symend-subtract_char_get_num_groups_get_local_size
subtract_char_get_num_groups_get_local_size:
	v_mov_b32_e32 v1, 0                                        // 00000007EB00: 7E020280
	s_mov_b32 s33, 0                                           // 00000007EB04: BEA10080
	s_clause 0x1                                               // 00000007EB08: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007EB0C: DC520022 02000001
	global_load_u16 v3, v1, s[0:1] offset:38                   // 00000007EB14: DC4A0026 03000001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007EB1C: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000007EB24: BF89FC07
	s_add_u32 s11, s0, 16                                      // 00000007EB28: 800B9000
	s_addc_u32 s16, s1, 0                                      // 00000007EB2C: 82108001
	s_lshl_b32 s17, s2, 1                                      // 00000007EB30: 84118102
	s_lshl_b32 s18, s3, 1                                      // 00000007EB34: 84128103
	s_lshl_b32 s19, s4, 2                                      // 00000007EB38: 84138204
	s_waitcnt vmcnt(1)                                         // 00000007EB3C: BF8907F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007EB40: 32080490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007EB44: 7C7A0480
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007EB48: BF870002
	v_cmp_ne_u16_e64 s5, 0, v4.l                               // 00000007EB4C: D43D0005 00020880
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007EB54: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007EB58: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v3.l                           // 00000007EB5C: 7C7A0680
	s_addc_u32 s20, s8, 0                                      // 00000007EB60: 82148008
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007EB64: 360600FF 000003FF
	s_cmp_lg_u32 s5, 0                                         // 00000007EB6C: BF078005
	s_addc_u32 s5, s9, 0                                       // 00000007EB70: 82058009
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007EB74: BF07806A
	s_addc_u32 s21, s10, 0                                     // 00000007EB78: 8215800A
	s_cmp_lt_u32 s2, s8                                        // 00000007EB7C: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007EB80: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007EB84: BF870009
	s_add_u32 s6, s11, s2                                      // 00000007EB88: 8006020B
	s_addc_u32 s7, s16, 0                                      // 00000007EB8C: 82078010
	s_cmp_lt_u32 s3, s9                                        // 00000007EB90: BF0A0903
	global_load_u8 v2, v1, s[6:7]                              // 00000007EB94: DC420000 02060001
	s_clause 0x1                                               // 00000007EB9C: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007EBA0: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007EBA8: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007EBB0: 9802948E
	s_load_b32 s3, s[0:1], 0x48                                // 00000007EBB4: F40000C0 F8000048
	s_add_u32 s0, s11, s2                                      // 00000007EBBC: 8000020B
	s_addc_u32 s1, s16, 0                                      // 00000007EBC0: 82018010
	s_cmp_lt_u32 s4, s10                                       // 00000007EBC4: BF0A0A04
	s_waitcnt lgkmcnt(0)                                       // 00000007EBC8: BF89FC07
	v_add3_u32 v3, s12, s17, v3                                // 00000007EBCC: D6550003 040C220C
	s_waitcnt vmcnt(0)                                         // 00000007EBD4: BF8903F7
	v_sub_nc_u32_e32 v2, s20, v2                               // 00000007EBD8: 4C040414
	global_store_b8 v3, v2, s[6:7]                             // 00000007EBDC: DC620000 00060203
	global_load_u8 v2, v1, s[0:1]                              // 00000007EBE4: DC420000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007EBEC: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007EBF4: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EBF8: D6100000 02292900
	s_add_u32 s0, s11, s0                                      // 00000007EC00: 8000000B
	s_addc_u32 s1, s16, 0                                      // 00000007EC04: 82018010
	v_add3_u32 v3, s14, s18, v3                                // 00000007EC08: D6550003 040C240E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007EC10: BF870002
	v_add3_u32 v0, s3, s19, v0                                 // 00000007EC14: D6550000 04002603
	s_waitcnt vmcnt(0)                                         // 00000007EC1C: BF8903F7
	v_sub_nc_u32_e32 v2, s5, v2                                // 00000007EC20: 4C040405
	global_store_b8 v3, v2, s[6:7]                             // 00000007EC24: DC620000 00060203
	global_load_u8 v1, v1, s[0:1]                              // 00000007EC2C: DC420000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007EC34: BF8903F7
	v_sub_nc_u32_e32 v1, s21, v1                               // 00000007EC38: 4C020215
	global_store_b8 v0, v1, s[6:7]                             // 00000007EC3C: DC620000 00060100
	s_nop 0                                                    // 00000007EC44: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EC48: BFB60003
	s_endpgm                                                   // 00000007EC4C: BFB00000
subtract_char_get_num_groups_get_local_size_symend:
	.long 0xbf800000                                           // 00000007EC50: BF800000
	.long 0xbf800000                                           // 00000007EC54: BF800000
	.long 0xbf800000                                           // 00000007EC58: BF800000
	.long 0xbf800000                                           // 00000007EC5C: BF800000
	.long 0xbf800000                                           // 00000007EC60: BF800000
	.long 0xbf800000                                           // 00000007EC64: BF800000
	.long 0xbf800000                                           // 00000007EC68: BF800000
	.long 0xbf800000                                           // 00000007EC6C: BF800000
	.long 0xbf800000                                           // 00000007EC70: BF800000
	.long 0xbf800000                                           // 00000007EC74: BF800000
	.long 0xbf800000                                           // 00000007EC78: BF800000
	.long 0xbf800000                                           // 00000007EC7C: BF800000
	.long 0xbf800000                                           // 00000007EC80: BF800000
	.long 0xbf800000                                           // 00000007EC84: BF800000
	.long 0xbf800000                                           // 00000007EC88: BF800000
	.long 0xbf800000                                           // 00000007EC8C: BF800000
	.long 0xbf800000                                           // 00000007EC90: BF800000
	.long 0xbf800000                                           // 00000007EC94: BF800000
	.long 0xbf800000                                           // 00000007EC98: BF800000
	.long 0xbf800000                                           // 00000007EC9C: BF800000
	.long 0xbf800000                                           // 00000007ECA0: BF800000
	.long 0xbf800000                                           // 00000007ECA4: BF800000
	.long 0xbf800000                                           // 00000007ECA8: BF800000
	.long 0xbf800000                                           // 00000007ECAC: BF800000
	.long 0xbf800000                                           // 00000007ECB0: BF800000
	.long 0xbf800000                                           // 00000007ECB4: BF800000
	.long 0xbf800000                                           // 00000007ECB8: BF800000
	.long 0xbf800000                                           // 00000007ECBC: BF800000
	.long 0xbf800000                                           // 00000007ECC0: BF800000
	.long 0xbf800000                                           // 00000007ECC4: BF800000
	.long 0xbf800000                                           // 00000007ECC8: BF800000
	.long 0xbf800000                                           // 00000007ECCC: BF800000
	.long 0xbf800000                                           // 00000007ECD0: BF800000
	.long 0xbf800000                                           // 00000007ECD4: BF800000
	.long 0xbf800000                                           // 00000007ECD8: BF800000
	.long 0xbf800000                                           // 00000007ECDC: BF800000
	.long 0xbf800000                                           // 00000007ECE0: BF800000
	.long 0xbf800000                                           // 00000007ECE4: BF800000
	.long 0xbf800000                                           // 00000007ECE8: BF800000
	.long 0xbf800000                                           // 00000007ECEC: BF800000
	.long 0xbf800000                                           // 00000007ECF0: BF800000
	.long 0xbf800000                                           // 00000007ECF4: BF800000
	.long 0xbf800000                                           // 00000007ECF8: BF800000
	.long 0xbf800000                                           // 00000007ECFC: BF800000

	.p2align	8
	.type	subtract_char_get_work_dim_get_local_size,@function
	.size	subtract_char_get_work_dim_get_local_size, subtract_char_get_work_dim_get_local_size_symend-subtract_char_get_work_dim_get_local_size
subtract_char_get_work_dim_get_local_size:
	s_clause 0x1                                               // 00000007ED00: BF850001
	s_load_b32 s5, s[0:1], 0x50                                // 00000007ED04: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007ED0C: F4080200 F8000010
	s_waitcnt lgkmcnt(0)                                       // 00000007ED14: BF89FC07
	s_add_u32 s11, s0, 16                                      // 00000007ED18: 800B9000
	s_addc_u32 s16, s1, 0                                      // 00000007ED1C: 82108001
	s_lshl_b32 s17, s2, 1                                      // 00000007ED20: 84118102
	s_lshl_b32 s18, s3, 1                                      // 00000007ED24: 84128103
	s_lshl_b32 s19, s4, 2                                      // 00000007ED28: 84138204
	v_mov_b32_e32 v1, 0                                        // 00000007ED2C: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007ED30: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007ED38: BEA10080
	s_and_b32 s5, s5, 0xffff                                   // 00000007ED3C: 8B05FF05 0000FFFF
	s_cmp_lt_u32 s2, s8                                        // 00000007ED44: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007ED48: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007ED4C: BF870009
	s_add_u32 s6, s11, s2                                      // 00000007ED50: 8006020B
	s_addc_u32 s7, s16, 0                                      // 00000007ED54: 82078010
	s_cmp_lt_u32 s3, s9                                        // 00000007ED58: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 00000007ED5C: DC4A0000 02060001
	s_clause 0x1                                               // 00000007ED64: BF850001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007ED68: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007ED70: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000007ED78: 9802948E
	s_load_b32 s3, s[0:1], 0x48                                // 00000007ED7C: F40000C0 F8000048
	s_add_u32 s0, s11, s2                                      // 00000007ED84: 8000020B
	s_addc_u32 s1, s16, 0                                      // 00000007ED88: 82018010
	s_cmp_lt_u32 s4, s10                                       // 00000007ED8C: BF0A0A04
	s_waitcnt lgkmcnt(0)                                       // 00000007ED90: BF89FC07
	v_add3_u32 v3, s12, s17, v3                                // 00000007ED94: D6550003 040C220C
	s_waitcnt vmcnt(0)                                         // 00000007ED9C: BF8903F7
	v_sub_nc_u32_e32 v2, s5, v2                                // 00000007EDA0: 4C040405
	global_store_b8 v3, v2, s[6:7]                             // 00000007EDA4: DC620000 00060203
	global_load_u16 v2, v1, s[0:1]                             // 00000007EDAC: DC4A0000 02000001
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007EDB4: D6100003 02291500
	s_cselect_b32 s0, 16, 22                                   // 00000007EDBC: 98009690
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EDC0: D6100000 02292900
	s_add_u32 s0, s11, s0                                      // 00000007EDC8: 8000000B
	s_addc_u32 s1, s16, 0                                      // 00000007EDCC: 82018010
	v_add3_u32 v3, s14, s18, v3                                // 00000007EDD0: D6550003 040C240E
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007EDD8: BF870002
	v_add3_u32 v0, s3, s19, v0                                 // 00000007EDDC: D6550000 04002603
	s_waitcnt vmcnt(0)                                         // 00000007EDE4: BF8903F7
	v_sub_nc_u32_e32 v2, s5, v2                                // 00000007EDE8: 4C040405
	global_store_b8 v3, v2, s[6:7]                             // 00000007EDEC: DC620000 00060203
	global_load_u8 v1, v1, s[0:1]                              // 00000007EDF4: DC420000 01000001
	s_waitcnt vmcnt(0)                                         // 00000007EDFC: BF8903F7
	v_sub_nc_u32_e32 v1, s5, v1                                // 00000007EE00: 4C020205
	global_store_b8 v0, v1, s[6:7]                             // 00000007EE04: DC620000 00060100
	s_nop 0                                                    // 00000007EE0C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EE10: BFB60003
	s_endpgm                                                   // 00000007EE14: BFB00000
subtract_char_get_work_dim_get_local_size_symend:
	.long 0xbf800000                                           // 00000007EE18: BF800000
	.long 0xbf800000                                           // 00000007EE1C: BF800000
	.long 0xbf800000                                           // 00000007EE20: BF800000
	.long 0xbf800000                                           // 00000007EE24: BF800000
	.long 0xbf800000                                           // 00000007EE28: BF800000
	.long 0xbf800000                                           // 00000007EE2C: BF800000
	.long 0xbf800000                                           // 00000007EE30: BF800000
	.long 0xbf800000                                           // 00000007EE34: BF800000
	.long 0xbf800000                                           // 00000007EE38: BF800000
	.long 0xbf800000                                           // 00000007EE3C: BF800000
	.long 0xbf800000                                           // 00000007EE40: BF800000
	.long 0xbf800000                                           // 00000007EE44: BF800000
	.long 0xbf800000                                           // 00000007EE48: BF800000
	.long 0xbf800000                                           // 00000007EE4C: BF800000
	.long 0xbf800000                                           // 00000007EE50: BF800000
	.long 0xbf800000                                           // 00000007EE54: BF800000
	.long 0xbf800000                                           // 00000007EE58: BF800000
	.long 0xbf800000                                           // 00000007EE5C: BF800000
	.long 0xbf800000                                           // 00000007EE60: BF800000
	.long 0xbf800000                                           // 00000007EE64: BF800000
	.long 0xbf800000                                           // 00000007EE68: BF800000
	.long 0xbf800000                                           // 00000007EE6C: BF800000
	.long 0xbf800000                                           // 00000007EE70: BF800000
	.long 0xbf800000                                           // 00000007EE74: BF800000
	.long 0xbf800000                                           // 00000007EE78: BF800000
	.long 0xbf800000                                           // 00000007EE7C: BF800000
	.long 0xbf800000                                           // 00000007EE80: BF800000
	.long 0xbf800000                                           // 00000007EE84: BF800000
	.long 0xbf800000                                           // 00000007EE88: BF800000
	.long 0xbf800000                                           // 00000007EE8C: BF800000
	.long 0xbf800000                                           // 00000007EE90: BF800000
	.long 0xbf800000                                           // 00000007EE94: BF800000
	.long 0xbf800000                                           // 00000007EE98: BF800000
	.long 0xbf800000                                           // 00000007EE9C: BF800000
	.long 0xbf800000                                           // 00000007EEA0: BF800000
	.long 0xbf800000                                           // 00000007EEA4: BF800000
	.long 0xbf800000                                           // 00000007EEA8: BF800000
	.long 0xbf800000                                           // 00000007EEAC: BF800000
	.long 0xbf800000                                           // 00000007EEB0: BF800000
	.long 0xbf800000                                           // 00000007EEB4: BF800000
	.long 0xbf800000                                           // 00000007EEB8: BF800000
	.long 0xbf800000                                           // 00000007EEBC: BF800000
	.long 0xbf800000                                           // 00000007EEC0: BF800000
	.long 0xbf800000                                           // 00000007EEC4: BF800000
	.long 0xbf800000                                           // 00000007EEC8: BF800000
	.long 0xbf800000                                           // 00000007EECC: BF800000
	.long 0xbf800000                                           // 00000007EED0: BF800000
	.long 0xbf800000                                           // 00000007EED4: BF800000
	.long 0xbf800000                                           // 00000007EED8: BF800000
	.long 0xbf800000                                           // 00000007EEDC: BF800000
	.long 0xbf800000                                           // 00000007EEE0: BF800000
	.long 0xbf800000                                           // 00000007EEE4: BF800000
	.long 0xbf800000                                           // 00000007EEE8: BF800000
	.long 0xbf800000                                           // 00000007EEEC: BF800000
	.long 0xbf800000                                           // 00000007EEF0: BF800000
	.long 0xbf800000                                           // 00000007EEF4: BF800000
	.long 0xbf800000                                           // 00000007EEF8: BF800000
	.long 0xbf800000                                           // 00000007EEFC: BF800000

	.p2align	8
	.type	subtract_char_x_get_global_id,@function
	.size	subtract_char_x_get_global_id, subtract_char_x_get_global_id_symend-subtract_char_x_get_global_id
subtract_char_x_get_global_id:
	s_clause 0x3                                               // 00000007EF00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007EF04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007EF0C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x8                                 // 00000007EF14: F4000180 F8000008
	s_load_b64 s[0:1], s[0:1], null                            // 00000007EF1C: F4040000 F8000000
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007EF24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007EF2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007EF34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007EF3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007EF40: BF870193
	v_lshl_or_b32 v1, s2, 4, v1                                // 00000007EF44: D6560001 04050802
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007EF4C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007EF54: BF8701A3
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007EF58: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007EF60: BF89FC07
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007EF64: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007EF68: BF870193
	v_add_nc_u32_e32 v2, s10, v2                               // 00000007EF6C: 4A04040A
	v_add_nc_u32_e32 v4, s5, v0                                // 00000007EF70: 4A080005
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007EF74: BF870003
	v_add_co_u32 v0, s2, s0, v1                                // 00000007EF78: D7000200 00020200
	v_sub_nc_u32_e32 v6, s6, v1                                // 00000007EF80: 4C0C0206
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007EF84: D5207C01 00090001
	v_sub_nc_u32_e32 v7, s6, v2                                // 00000007EF8C: 4C0E0406
	v_add_co_u32 v2, s2, s0, v2                                // 00000007EF90: D7000202 00020400
	v_sub_nc_u32_e32 v8, s6, v4                                // 00000007EF98: 4C100806
	v_add_co_u32 v4, s0, s0, v4                                // 00000007EF9C: D7000004 00020800
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007EFA4: D5207C03 00090001
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007EFAC: D5207C05 00010001
	s_clause 0x2                                               // 00000007EFB4: BF850002
	global_store_b8 v[0:1], v6, off                            // 00000007EFB8: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007EFC0: DC620000 007C0702
	global_store_b8 v[4:5], v8, off                            // 00000007EFC8: DC620000 007C0804
	s_nop 0                                                    // 00000007EFD0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007EFD4: BFB60003
	s_endpgm                                                   // 00000007EFD8: BFB00000
subtract_char_x_get_global_id_symend:
	.long 0xbf800000                                           // 00000007EFDC: BF800000
	.long 0xbf800000                                           // 00000007EFE0: BF800000
	.long 0xbf800000                                           // 00000007EFE4: BF800000
	.long 0xbf800000                                           // 00000007EFE8: BF800000
	.long 0xbf800000                                           // 00000007EFEC: BF800000
	.long 0xbf800000                                           // 00000007EFF0: BF800000
	.long 0xbf800000                                           // 00000007EFF4: BF800000
	.long 0xbf800000                                           // 00000007EFF8: BF800000
	.long 0xbf800000                                           // 00000007EFFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_offset_get_global_id,@function
	.size	subtract_char_get_global_offset_get_global_id, subtract_char_get_global_offset_get_global_id_symend-subtract_char_get_global_offset_get_global_id
subtract_char_get_global_offset_get_global_id:
	s_clause 0x2                                               // 00000007F000: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F004: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007F00C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007F014: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007F01C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007F024: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F02C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F034: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F038: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007F03C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007F044: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F04C: BF870193
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007F050: D6560000 04010204
	v_sub_nc_u16 v3.l, 0, v1.l                                 // 00000007F058: D7040003 00020280
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F060: BF870193
	v_sub_nc_u16 v4.l, 0, v2.l                                 // 00000007F064: D7040004 00020480
	v_sub_nc_u16 v5.l, 0, v0.l                                 // 00000007F06C: D7040005 00020080
	s_waitcnt lgkmcnt(0)                                       // 00000007F074: BF89FC07
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007F078: 4A020208
	v_add_nc_u32_e32 v2, s10, v2                               // 00000007F07C: 4A04040A
	v_add_nc_u32_e32 v0, s5, v0                                // 00000007F080: 4A000005
	s_clause 0x2                                               // 00000007F084: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000007F088: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000007F090: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 00000007F098: DC620000 00000500
	s_nop 0                                                    // 00000007F0A0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F0A4: BFB60003
	s_endpgm                                                   // 00000007F0A8: BFB00000
subtract_char_get_global_offset_get_global_id_symend:
	.long 0xbf800000                                           // 00000007F0AC: BF800000
	.long 0xbf800000                                           // 00000007F0B0: BF800000
	.long 0xbf800000                                           // 00000007F0B4: BF800000
	.long 0xbf800000                                           // 00000007F0B8: BF800000
	.long 0xbf800000                                           // 00000007F0BC: BF800000
	.long 0xbf800000                                           // 00000007F0C0: BF800000
	.long 0xbf800000                                           // 00000007F0C4: BF800000
	.long 0xbf800000                                           // 00000007F0C8: BF800000
	.long 0xbf800000                                           // 00000007F0CC: BF800000
	.long 0xbf800000                                           // 00000007F0D0: BF800000
	.long 0xbf800000                                           // 00000007F0D4: BF800000
	.long 0xbf800000                                           // 00000007F0D8: BF800000
	.long 0xbf800000                                           // 00000007F0DC: BF800000
	.long 0xbf800000                                           // 00000007F0E0: BF800000
	.long 0xbf800000                                           // 00000007F0E4: BF800000
	.long 0xbf800000                                           // 00000007F0E8: BF800000
	.long 0xbf800000                                           // 00000007F0EC: BF800000
	.long 0xbf800000                                           // 00000007F0F0: BF800000
	.long 0xbf800000                                           // 00000007F0F4: BF800000
	.long 0xbf800000                                           // 00000007F0F8: BF800000
	.long 0xbf800000                                           // 00000007F0FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_id_get_global_id,@function
	.size	subtract_char_get_local_id_get_global_id, subtract_char_get_local_id_get_global_id_symend-subtract_char_get_local_id_get_global_id
subtract_char_get_local_id_get_global_id:
	s_clause 0x2                                               // 00000007F100: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F104: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007F10C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007F114: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007F11C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007F124: D6100002 02291500
	v_bfe_u32 v4, v0, 20, 10                                   // 00000007F12C: D6100004 02292900
	s_mov_b32 s33, 0                                           // 00000007F134: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F138: BF870193
	v_lshl_or_b32 v0, s2, 3, v1                                // 00000007F13C: D6560000 04050602
	v_lshl_or_b32 v3, s3, 2, v2                                // 00000007F144: D6560003 04090403
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007F14C: BF8701A3
	v_lshl_or_b32 v5, s4, 1, v4                                // 00000007F150: D6560005 04110204
	s_waitcnt lgkmcnt(0)                                       // 00000007F158: BF89FC07
	v_add_nc_u32_e32 v0, s8, v0                                // 00000007F15C: 4A000008
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F160: BF870193
	v_add_nc_u32_e32 v3, s10, v3                               // 00000007F164: 4A06060A
	v_add_nc_u32_e32 v5, s5, v5                                // 00000007F168: 4A0A0A05
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007F16C: BF8700A3
	v_sub_nc_u32_e32 v6, v1, v0                                // 00000007F170: 4C0C0101
	v_add_co_u32 v0, s2, s0, v0                                // 00000007F174: D7000200 00020000
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007F17C: D5207C01 00090001
	v_sub_nc_u32_e32 v7, v2, v3                                // 00000007F184: 4C0E0702
	v_add_co_u32 v2, s2, s0, v3                                // 00000007F188: D7000202 00020600
	v_sub_nc_u32_e32 v8, v4, v5                                // 00000007F190: 4C100B04
	v_add_co_u32 v4, s0, s0, v5                                // 00000007F194: D7000004 00020A00
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007F19C: D5207C03 00090001
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007F1A4: D5207C05 00010001
	s_clause 0x2                                               // 00000007F1AC: BF850002
	global_store_b8 v[0:1], v6, off                            // 00000007F1B0: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007F1B8: DC620000 007C0702
	global_store_b8 v[4:5], v8, off                            // 00000007F1C0: DC620000 007C0804
	s_nop 0                                                    // 00000007F1C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F1CC: BFB60003
	s_endpgm                                                   // 00000007F1D0: BFB00000
subtract_char_get_local_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000007F1D4: BF800000
	.long 0xbf800000                                           // 00000007F1D8: BF800000
	.long 0xbf800000                                           // 00000007F1DC: BF800000
	.long 0xbf800000                                           // 00000007F1E0: BF800000
	.long 0xbf800000                                           // 00000007F1E4: BF800000
	.long 0xbf800000                                           // 00000007F1E8: BF800000
	.long 0xbf800000                                           // 00000007F1EC: BF800000
	.long 0xbf800000                                           // 00000007F1F0: BF800000
	.long 0xbf800000                                           // 00000007F1F4: BF800000
	.long 0xbf800000                                           // 00000007F1F8: BF800000
	.long 0xbf800000                                           // 00000007F1FC: BF800000

	.p2align	8
	.type	subtract_char_get_group_id_get_global_id,@function
	.size	subtract_char_get_group_id_get_global_id, subtract_char_get_group_id_get_global_id_symend-subtract_char_get_group_id_get_global_id
subtract_char_get_group_id_get_global_id:
	s_clause 0x2                                               // 00000007F200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007F20C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007F214: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007F21C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007F224: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F22C: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007F234: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F238: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007F23C: D6560001 04050202
	v_lshl_or_b32 v2, s3, 4, v2                                // 00000007F244: D6560002 04090803
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007F24C: BF8701A3
	v_lshl_or_b32 v0, s4, 1, v0                                // 00000007F250: D6560000 04010204
	s_waitcnt lgkmcnt(0)                                       // 00000007F258: BF89FC07
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007F25C: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F260: BF870193
	v_add_nc_u32_e32 v2, s10, v2                               // 00000007F264: 4A04040A
	v_add_nc_u32_e32 v4, s5, v0                                // 00000007F268: 4A080005
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007F26C: BF8700A3
	v_sub_nc_u32_e32 v6, s2, v1                                // 00000007F270: 4C0C0202
	v_add_co_u32 v0, s2, s0, v1                                // 00000007F274: D7000200 00020200
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007F27C: D5207C01 00090001
	v_sub_nc_u32_e32 v7, s3, v2                                // 00000007F284: 4C0E0403
	v_add_co_u32 v2, s2, s0, v2                                // 00000007F288: D7000202 00020400
	v_sub_nc_u32_e32 v8, s4, v4                                // 00000007F290: 4C100804
	v_add_co_u32 v4, s0, s0, v4                                // 00000007F294: D7000004 00020800
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007F29C: D5207C03 00090001
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007F2A4: D5207C05 00010001
	s_clause 0x2                                               // 00000007F2AC: BF850002
	global_store_b8 v[0:1], v6, off                            // 00000007F2B0: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007F2B8: DC620000 007C0702
	global_store_b8 v[4:5], v8, off                            // 00000007F2C0: DC620000 007C0804
	s_nop 0                                                    // 00000007F2C8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F2CC: BFB60003
	s_endpgm                                                   // 00000007F2D0: BFB00000
subtract_char_get_group_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000007F2D4: BF800000
	.long 0xbf800000                                           // 00000007F2D8: BF800000
	.long 0xbf800000                                           // 00000007F2DC: BF800000
	.long 0xbf800000                                           // 00000007F2E0: BF800000
	.long 0xbf800000                                           // 00000007F2E4: BF800000
	.long 0xbf800000                                           // 00000007F2E8: BF800000
	.long 0xbf800000                                           // 00000007F2EC: BF800000
	.long 0xbf800000                                           // 00000007F2F0: BF800000
	.long 0xbf800000                                           // 00000007F2F4: BF800000
	.long 0xbf800000                                           // 00000007F2F8: BF800000
	.long 0xbf800000                                           // 00000007F2FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_size_get_global_id,@function
	.size	subtract_char_get_local_size_get_global_id, subtract_char_get_local_size_get_global_id_symend-subtract_char_get_local_size_get_global_id
subtract_char_get_local_size_get_global_id:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007F300: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 00000007F308: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007F30C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007F310: 820B8001
	v_mov_b32_e32 v3, 0                                        // 00000007F314: 7E060280
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007F318: 360200FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007F320: BEA10080
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_2) | instid1(SALU_CYCLE_1)// 00000007F324: BF8704B1
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007F328: D6560001 04050202
	s_cmp_lt_u32 s2, s8                                        // 00000007F330: BF0A0802
	s_cselect_b32 s6, 12, 18                                   // 00000007F334: 9806928C
	s_add_u32 s6, s5, s6                                       // 00000007F338: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000007F33C: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007F340: BF0A0903
	global_load_u16 v4, v3, s[6:7]                             // 00000007F344: DC4A0000 04060003
	s_clause 0x2                                               // 00000007F34C: BF850002
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007F350: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007F358: F4040180 F8000008
	s_load_b32 s8, s[0:1], 0x48                                // 00000007F360: F4000200 F8000048
	s_waitcnt lgkmcnt(0)                                       // 00000007F368: BF89FC07
	v_add_nc_u32_e32 v5, s12, v1                               // 00000007F36C: 4A0A020C
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007F370: BF870091
	v_add_co_u32 v1, s2, s6, v5                                // 00000007F374: D7000201 00020A06
	v_add_co_ci_u32_e64 v2, null, s7, 0, s2                    // 00000007F37C: D5207C02 00090007
	s_cselect_b32 s2, 14, 20                                   // 00000007F384: 9802948E
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007F388: BF870009
	s_add_u32 s0, s5, s2                                       // 00000007F38C: 80000205
	s_addc_u32 s1, s11, 0                                      // 00000007F390: 8201800B
	s_cmp_lt_u32 s4, s10                                       // 00000007F394: BF0A0A04
	s_waitcnt vmcnt(0)                                         // 00000007F398: BF8903F7
	v_sub_nc_u32_e32 v4, v4, v5                                // 00000007F39C: 4C080B04
	global_store_b8 v[1:2], v4, off                            // 00000007F3A0: DC620000 007C0401
	v_bfe_u32 v1, v0, 10, 10                                   // 00000007F3A8: D6100001 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F3B0: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007F3B8: BF870112
	v_lshl_or_b32 v1, s3, 1, v1                                // 00000007F3BC: D6560001 04050203
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007F3C4: D6560000 04010404
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007F3CC: BF870112
	v_add_nc_u32_e32 v5, s14, v1                               // 00000007F3D0: 4A0A020E
	v_add_nc_u32_e32 v0, s8, v0                                // 00000007F3D4: 4A000008
	global_load_u16 v4, v3, s[0:1]                             // 00000007F3D8: DC4A0000 04000003
	v_add_co_u32 v1, s0, s6, v5                                // 00000007F3E0: D7000001 00020A06
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000007F3E8: BF8704A1
	v_add_co_ci_u32_e64 v2, null, s7, 0, s0                    // 00000007F3EC: D5207C02 00010007
	s_cselect_b32 s0, 16, 22                                   // 00000007F3F4: 98009690
	s_add_u32 s0, s5, s0                                       // 00000007F3F8: 80000005
	s_addc_u32 s1, s11, 0                                      // 00000007F3FC: 8201800B
	s_waitcnt vmcnt(0)                                         // 00000007F400: BF8903F7
	v_sub_nc_u32_e32 v4, v4, v5                                // 00000007F404: 4C080B04
	global_store_b8 v[1:2], v4, off                            // 00000007F408: DC620000 007C0401
	global_load_u16 v1, v3, s[0:1]                             // 00000007F410: DC4A0000 01000003
	s_waitcnt vmcnt(0)                                         // 00000007F418: BF8903F7
	v_sub_nc_u32_e32 v2, v1, v0                                // 00000007F41C: 4C040101
	v_add_co_u32 v0, s0, s6, v0                                // 00000007F420: D7000000 00020006
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007F428: BF870001
	v_add_co_ci_u32_e64 v1, null, s7, 0, s0                    // 00000007F42C: D5207C01 00010007
	global_store_b8 v[0:1], v2, off                            // 00000007F434: DC620000 007C0200
	s_nop 0                                                    // 00000007F43C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F440: BFB60003
	s_endpgm                                                   // 00000007F444: BFB00000
subtract_char_get_local_size_get_global_id_symend:
	.long 0xbf800000                                           // 00000007F448: BF800000
	.long 0xbf800000                                           // 00000007F44C: BF800000
	.long 0xbf800000                                           // 00000007F450: BF800000
	.long 0xbf800000                                           // 00000007F454: BF800000
	.long 0xbf800000                                           // 00000007F458: BF800000
	.long 0xbf800000                                           // 00000007F45C: BF800000
	.long 0xbf800000                                           // 00000007F460: BF800000
	.long 0xbf800000                                           // 00000007F464: BF800000
	.long 0xbf800000                                           // 00000007F468: BF800000
	.long 0xbf800000                                           // 00000007F46C: BF800000
	.long 0xbf800000                                           // 00000007F470: BF800000
	.long 0xbf800000                                           // 00000007F474: BF800000
	.long 0xbf800000                                           // 00000007F478: BF800000
	.long 0xbf800000                                           // 00000007F47C: BF800000
	.long 0xbf800000                                           // 00000007F480: BF800000
	.long 0xbf800000                                           // 00000007F484: BF800000
	.long 0xbf800000                                           // 00000007F488: BF800000
	.long 0xbf800000                                           // 00000007F48C: BF800000
	.long 0xbf800000                                           // 00000007F490: BF800000
	.long 0xbf800000                                           // 00000007F494: BF800000
	.long 0xbf800000                                           // 00000007F498: BF800000
	.long 0xbf800000                                           // 00000007F49C: BF800000
	.long 0xbf800000                                           // 00000007F4A0: BF800000
	.long 0xbf800000                                           // 00000007F4A4: BF800000
	.long 0xbf800000                                           // 00000007F4A8: BF800000
	.long 0xbf800000                                           // 00000007F4AC: BF800000
	.long 0xbf800000                                           // 00000007F4B0: BF800000
	.long 0xbf800000                                           // 00000007F4B4: BF800000
	.long 0xbf800000                                           // 00000007F4B8: BF800000
	.long 0xbf800000                                           // 00000007F4BC: BF800000
	.long 0xbf800000                                           // 00000007F4C0: BF800000
	.long 0xbf800000                                           // 00000007F4C4: BF800000
	.long 0xbf800000                                           // 00000007F4C8: BF800000
	.long 0xbf800000                                           // 00000007F4CC: BF800000
	.long 0xbf800000                                           // 00000007F4D0: BF800000
	.long 0xbf800000                                           // 00000007F4D4: BF800000
	.long 0xbf800000                                           // 00000007F4D8: BF800000
	.long 0xbf800000                                           // 00000007F4DC: BF800000
	.long 0xbf800000                                           // 00000007F4E0: BF800000
	.long 0xbf800000                                           // 00000007F4E4: BF800000
	.long 0xbf800000                                           // 00000007F4E8: BF800000
	.long 0xbf800000                                           // 00000007F4EC: BF800000
	.long 0xbf800000                                           // 00000007F4F0: BF800000
	.long 0xbf800000                                           // 00000007F4F4: BF800000
	.long 0xbf800000                                           // 00000007F4F8: BF800000
	.long 0xbf800000                                           // 00000007F4FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_id_get_global_id,@function
	.size	subtract_char_get_global_id_get_global_id, subtract_char_get_global_id_get_global_id_symend-subtract_char_get_global_id_get_global_id
subtract_char_get_global_id_get_global_id:
	s_clause 0x1                                               // 00000007F500: BF850001
	s_load_b128 s[8:11], s[0:1], 0x40                          // 00000007F504: F4080200 F8000040
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007F50C: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007F514: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 00000007F520: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007F528: D6100000 02292900
	s_lshl_b32 s3, s3, 1                                       // 00000007F530: 84038103
	s_lshl_b32 s4, s4, 2                                       // 00000007F534: 84048204
	v_lshl_or_b32 v2, s2, 1, v2                                // 00000007F538: D6560002 04090202
	s_mov_b32 s33, 0                                           // 00000007F540: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007F544: BF89FC07
	v_add3_u32 v3, s8, s3, v3                                  // 00000007F548: D6550003 040C0608
	v_add3_u32 v0, s10, s4, v0                                 // 00000007F550: D6550000 0400080A
	s_clause 0x2                                               // 00000007F558: BF850002
	global_store_b8 v2, v1, s[0:1]                             // 00000007F55C: DC620000 00000102
	global_store_b8 v3, v1, s[0:1]                             // 00000007F564: DC620000 00000103
	global_store_b8 v0, v1, s[0:1]                             // 00000007F56C: DC620000 00000100
	s_nop 0                                                    // 00000007F574: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F578: BFB60003
	s_endpgm                                                   // 00000007F57C: BFB00000
subtract_char_get_global_id_get_global_id_symend:
	.long 0xbf800000                                           // 00000007F580: BF800000
	.long 0xbf800000                                           // 00000007F584: BF800000
	.long 0xbf800000                                           // 00000007F588: BF800000
	.long 0xbf800000                                           // 00000007F58C: BF800000
	.long 0xbf800000                                           // 00000007F590: BF800000
	.long 0xbf800000                                           // 00000007F594: BF800000
	.long 0xbf800000                                           // 00000007F598: BF800000
	.long 0xbf800000                                           // 00000007F59C: BF800000
	.long 0xbf800000                                           // 00000007F5A0: BF800000
	.long 0xbf800000                                           // 00000007F5A4: BF800000
	.long 0xbf800000                                           // 00000007F5A8: BF800000
	.long 0xbf800000                                           // 00000007F5AC: BF800000
	.long 0xbf800000                                           // 00000007F5B0: BF800000
	.long 0xbf800000                                           // 00000007F5B4: BF800000
	.long 0xbf800000                                           // 00000007F5B8: BF800000
	.long 0xbf800000                                           // 00000007F5BC: BF800000
	.long 0xbf800000                                           // 00000007F5C0: BF800000
	.long 0xbf800000                                           // 00000007F5C4: BF800000
	.long 0xbf800000                                           // 00000007F5C8: BF800000
	.long 0xbf800000                                           // 00000007F5CC: BF800000
	.long 0xbf800000                                           // 00000007F5D0: BF800000
	.long 0xbf800000                                           // 00000007F5D4: BF800000
	.long 0xbf800000                                           // 00000007F5D8: BF800000
	.long 0xbf800000                                           // 00000007F5DC: BF800000
	.long 0xbf800000                                           // 00000007F5E0: BF800000
	.long 0xbf800000                                           // 00000007F5E4: BF800000
	.long 0xbf800000                                           // 00000007F5E8: BF800000
	.long 0xbf800000                                           // 00000007F5EC: BF800000
	.long 0xbf800000                                           // 00000007F5F0: BF800000
	.long 0xbf800000                                           // 00000007F5F4: BF800000
	.long 0xbf800000                                           // 00000007F5F8: BF800000
	.long 0xbf800000                                           // 00000007F5FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_size_get_global_id,@function
	.size	subtract_char_get_global_size_get_global_id, subtract_char_get_global_size_get_global_id_symend-subtract_char_get_global_size_get_global_id
subtract_char_get_global_size_get_global_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000007F600: CA240080 010200FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007F60C: BEA10080
	s_clause 0x1                                               // 00000007F610: BF850001
	global_load_b32 v4, v1, s[0:1] offset:34                   // 00000007F614: DC520022 04000001
	global_load_u16 v5, v1, s[0:1] offset:38                   // 00000007F61C: DC4A0026 05000001
	s_clause 0x3                                               // 00000007F624: BF850003
	s_load_b32 s5, s[0:1], 0x48                                // 00000007F628: F4000140 F8000048
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007F630: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007F638: F4080300 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 00000007F640: F4040000 F8000000
	v_bfe_u32 v1, v0, 20, 10                                   // 00000007F648: D6100001 02292900
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007F650: D6100000 02291500
	v_lshl_or_b32 v2, s2, 4, v2                                // 00000007F658: D6560002 04090802
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F660: BF870193
	v_lshl_or_b32 v1, s4, 1, v1                                // 00000007F664: D6560001 04050204
	v_lshl_or_b32 v0, s3, 1, v0                                // 00000007F66C: D6560000 04010203
	s_waitcnt lgkmcnt(0)                                       // 00000007F674: BF89FC07
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007F678: BF870002
	v_add_nc_u32_e32 v6, s5, v1                                // 00000007F67C: 4A0C0205
	s_lshl_b32 s2, s8, 4                                       // 00000007F680: 84028408
	v_add_nc_u32_e32 v7, s12, v2                               // 00000007F684: 4A0E040C
	s_lshl_b32 s3, s9, 1                                       // 00000007F688: 84038109
	v_add_nc_u32_e32 v8, s14, v0                               // 00000007F68C: 4A10000E
	s_lshl_b32 s4, s10, 1                                      // 00000007F690: 8404810A
	v_add_co_u32 v0, s5, s0, v6                                // 00000007F694: D7000500 00020C00
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 00000007F69C: BF8700A1
	v_add_co_ci_u32_e64 v1, null, s1, 0, s5                    // 00000007F6A0: D5207C01 00150001
	v_add_co_u32 v2, s5, s0, v7                                // 00000007F6A8: D7000502 00020E00
	v_add_co_ci_u32_e64 v3, null, s1, 0, s5                    // 00000007F6B0: D5207C03 00150001
	s_waitcnt vmcnt(1)                                         // 00000007F6B8: BF8907F7
	v_lshrrev_b32_e32 v9, 16, v4                               // 00000007F6BC: 32120890
	v_add_nc_u32_e32 v10, s2, v4                               // 00000007F6C0: 4A140802
	s_waitcnt vmcnt(0)                                         // 00000007F6C4: BF8903F7
	v_add_nc_u32_e32 v11, s4, v5                               // 00000007F6C8: 4A160A04
	v_add_co_u32 v4, s0, s0, v8                                // 00000007F6CC: D7000004 00021000
	v_add_nc_u32_e32 v9, s3, v9                                // 00000007F6D4: 4A121203
	v_sub_nc_u32_e32 v7, v10, v7                               // 00000007F6D8: 4C0E0F0A
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007F6DC: D5207C05 00010001
	v_sub_nc_u32_e32 v6, v11, v6                               // 00000007F6E4: 4C0C0D0B
	s_delay_alu instid0(VALU_DEP_4)                            // 00000007F6E8: BF870004
	v_sub_nc_u32_e32 v8, v9, v8                                // 00000007F6EC: 4C101109
	s_clause 0x2                                               // 00000007F6F0: BF850002
	global_store_b8 v[2:3], v7, off                            // 00000007F6F4: DC620000 007C0702
	global_store_b8 v[4:5], v8, off                            // 00000007F6FC: DC620000 007C0804
	global_store_b8 v[0:1], v6, off                            // 00000007F704: DC620000 007C0600
	s_nop 0                                                    // 00000007F70C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F710: BFB60003
	s_endpgm                                                   // 00000007F714: BFB00000
subtract_char_get_global_size_get_global_id_symend:
	.long 0xbf800000                                           // 00000007F718: BF800000
	.long 0xbf800000                                           // 00000007F71C: BF800000
	.long 0xbf800000                                           // 00000007F720: BF800000
	.long 0xbf800000                                           // 00000007F724: BF800000
	.long 0xbf800000                                           // 00000007F728: BF800000
	.long 0xbf800000                                           // 00000007F72C: BF800000
	.long 0xbf800000                                           // 00000007F730: BF800000
	.long 0xbf800000                                           // 00000007F734: BF800000
	.long 0xbf800000                                           // 00000007F738: BF800000
	.long 0xbf800000                                           // 00000007F73C: BF800000
	.long 0xbf800000                                           // 00000007F740: BF800000
	.long 0xbf800000                                           // 00000007F744: BF800000
	.long 0xbf800000                                           // 00000007F748: BF800000
	.long 0xbf800000                                           // 00000007F74C: BF800000
	.long 0xbf800000                                           // 00000007F750: BF800000
	.long 0xbf800000                                           // 00000007F754: BF800000
	.long 0xbf800000                                           // 00000007F758: BF800000
	.long 0xbf800000                                           // 00000007F75C: BF800000
	.long 0xbf800000                                           // 00000007F760: BF800000
	.long 0xbf800000                                           // 00000007F764: BF800000
	.long 0xbf800000                                           // 00000007F768: BF800000
	.long 0xbf800000                                           // 00000007F76C: BF800000
	.long 0xbf800000                                           // 00000007F770: BF800000
	.long 0xbf800000                                           // 00000007F774: BF800000
	.long 0xbf800000                                           // 00000007F778: BF800000
	.long 0xbf800000                                           // 00000007F77C: BF800000
	.long 0xbf800000                                           // 00000007F780: BF800000
	.long 0xbf800000                                           // 00000007F784: BF800000
	.long 0xbf800000                                           // 00000007F788: BF800000
	.long 0xbf800000                                           // 00000007F78C: BF800000
	.long 0xbf800000                                           // 00000007F790: BF800000
	.long 0xbf800000                                           // 00000007F794: BF800000
	.long 0xbf800000                                           // 00000007F798: BF800000
	.long 0xbf800000                                           // 00000007F79C: BF800000
	.long 0xbf800000                                           // 00000007F7A0: BF800000
	.long 0xbf800000                                           // 00000007F7A4: BF800000
	.long 0xbf800000                                           // 00000007F7A8: BF800000
	.long 0xbf800000                                           // 00000007F7AC: BF800000
	.long 0xbf800000                                           // 00000007F7B0: BF800000
	.long 0xbf800000                                           // 00000007F7B4: BF800000
	.long 0xbf800000                                           // 00000007F7B8: BF800000
	.long 0xbf800000                                           // 00000007F7BC: BF800000
	.long 0xbf800000                                           // 00000007F7C0: BF800000
	.long 0xbf800000                                           // 00000007F7C4: BF800000
	.long 0xbf800000                                           // 00000007F7C8: BF800000
	.long 0xbf800000                                           // 00000007F7CC: BF800000
	.long 0xbf800000                                           // 00000007F7D0: BF800000
	.long 0xbf800000                                           // 00000007F7D4: BF800000
	.long 0xbf800000                                           // 00000007F7D8: BF800000
	.long 0xbf800000                                           // 00000007F7DC: BF800000
	.long 0xbf800000                                           // 00000007F7E0: BF800000
	.long 0xbf800000                                           // 00000007F7E4: BF800000
	.long 0xbf800000                                           // 00000007F7E8: BF800000
	.long 0xbf800000                                           // 00000007F7EC: BF800000
	.long 0xbf800000                                           // 00000007F7F0: BF800000
	.long 0xbf800000                                           // 00000007F7F4: BF800000
	.long 0xbf800000                                           // 00000007F7F8: BF800000
	.long 0xbf800000                                           // 00000007F7FC: BF800000

	.p2align	8
	.type	subtract_char_get_num_groups_get_global_id,@function
	.size	subtract_char_get_num_groups_get_global_id, subtract_char_get_num_groups_get_global_id_symend-subtract_char_get_num_groups_get_global_id
subtract_char_get_num_groups_get_global_id:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007F800: CA240080 010400FF 000003FF
	s_mov_b32 s33, 0                                           // 00000007F80C: BEA10080
	s_clause 0x1                                               // 00000007F810: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007F814: DC520022 02000001
	global_load_u16 v3, v1, s[0:1] offset:38                   // 00000007F81C: DC4A0026 03000001
	s_clause 0x3                                               // 00000007F824: BF850003
	s_load_b32 s5, s[0:1], 0x48                                // 00000007F828: F4000140 F8000048
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007F830: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007F838: F4040180 F8000008
	s_load_b128 s[12:15], s[0:1], 0x10                         // 00000007F840: F4080300 F8000010
	v_bfe_u32 v1, v0, 20, 10                                   // 00000007F848: D6100001 02292900
	v_bfe_u32 v0, v0, 10, 10                                   // 00000007F850: D6100000 02291500
	v_lshl_or_b32 v4, s2, 1, v4                                // 00000007F858: D6560004 04110202
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007F860: BF870193
	v_lshl_or_b32 v1, s4, 2, v1                                // 00000007F864: D6560001 04050404
	v_lshl_or_b32 v0, s3, 1, v0                                // 00000007F86C: D6560000 04010203
	s_waitcnt lgkmcnt(0)                                       // 00000007F874: BF89FC07
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007F878: BF8701A2
	v_add_nc_u32_e32 v6, s5, v1                                // 00000007F87C: 4A0C0205
	v_add_nc_u32_e32 v4, s8, v4                                // 00000007F880: 4A080808
	v_add_nc_u32_e32 v7, s10, v0                               // 00000007F884: 4A0E000A
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000007F888: BF870092
	v_add_co_u32 v0, s1, s6, v4                                // 00000007F88C: D7000100 00020806
	v_add_co_ci_u32_e64 v1, null, s7, 0, s1                    // 00000007F894: D5207C01 00050007
	s_waitcnt vmcnt(1)                                         // 00000007F89C: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 00000007F8A0: 320A0490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000007F8A4: 7C7A0480
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_4) | instid1(SALU_CYCLE_1)// 00000007F8A8: BF8704D2
	v_cmp_ne_u16_e64 s0, 0, v5.l                               // 00000007F8AC: D43D0000 00020A80
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007F8B4: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000007F8B8: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v3.l                           // 00000007F8BC: 7C7A0680
	s_addc_u32 s1, s12, 0                                      // 00000007F8C0: 8201800C
	v_sub_nc_u32_e32 v8, s1, v4                                // 00000007F8C4: 4C100801
	s_cmp_lg_u32 s0, 0                                         // 00000007F8C8: BF078000
	v_add_co_u32 v2, s0, s6, v7                                // 00000007F8CC: D7000002 00020E06
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007F8D4: BF870001
	v_add_co_ci_u32_e64 v3, null, s7, 0, s0                    // 00000007F8D8: D5207C03 00010007
	s_addc_u32 s0, s13, 0                                      // 00000007F8E0: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000007F8E4: BF07806A
	v_sub_nc_u32_e32 v7, s0, v7                                // 00000007F8E8: 4C0E0E00
	s_addc_u32 s1, s14, 0                                      // 00000007F8EC: 8201800E
	v_add_co_u32 v4, s0, s6, v6                                // 00000007F8F0: D7000004 00020C06
	v_sub_nc_u32_e32 v9, s1, v6                                // 00000007F8F8: 4C120C01
	v_add_co_ci_u32_e64 v5, null, s7, 0, s0                    // 00000007F8FC: D5207C05 00010007
	s_clause 0x2                                               // 00000007F904: BF850002
	global_store_b8 v[0:1], v8, off                            // 00000007F908: DC620000 007C0800
	global_store_b8 v[2:3], v7, off                            // 00000007F910: DC620000 007C0702
	global_store_b8 v[4:5], v9, off                            // 00000007F918: DC620000 007C0904
	s_nop 0                                                    // 00000007F920: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007F924: BFB60003
	s_endpgm                                                   // 00000007F928: BFB00000
subtract_char_get_num_groups_get_global_id_symend:
	.long 0xbf800000                                           // 00000007F92C: BF800000
	.long 0xbf800000                                           // 00000007F930: BF800000
	.long 0xbf800000                                           // 00000007F934: BF800000
	.long 0xbf800000                                           // 00000007F938: BF800000
	.long 0xbf800000                                           // 00000007F93C: BF800000
	.long 0xbf800000                                           // 00000007F940: BF800000
	.long 0xbf800000                                           // 00000007F944: BF800000
	.long 0xbf800000                                           // 00000007F948: BF800000
	.long 0xbf800000                                           // 00000007F94C: BF800000
	.long 0xbf800000                                           // 00000007F950: BF800000
	.long 0xbf800000                                           // 00000007F954: BF800000
	.long 0xbf800000                                           // 00000007F958: BF800000
	.long 0xbf800000                                           // 00000007F95C: BF800000
	.long 0xbf800000                                           // 00000007F960: BF800000
	.long 0xbf800000                                           // 00000007F964: BF800000
	.long 0xbf800000                                           // 00000007F968: BF800000
	.long 0xbf800000                                           // 00000007F96C: BF800000
	.long 0xbf800000                                           // 00000007F970: BF800000
	.long 0xbf800000                                           // 00000007F974: BF800000
	.long 0xbf800000                                           // 00000007F978: BF800000
	.long 0xbf800000                                           // 00000007F97C: BF800000
	.long 0xbf800000                                           // 00000007F980: BF800000
	.long 0xbf800000                                           // 00000007F984: BF800000
	.long 0xbf800000                                           // 00000007F988: BF800000
	.long 0xbf800000                                           // 00000007F98C: BF800000
	.long 0xbf800000                                           // 00000007F990: BF800000
	.long 0xbf800000                                           // 00000007F994: BF800000
	.long 0xbf800000                                           // 00000007F998: BF800000
	.long 0xbf800000                                           // 00000007F99C: BF800000
	.long 0xbf800000                                           // 00000007F9A0: BF800000
	.long 0xbf800000                                           // 00000007F9A4: BF800000
	.long 0xbf800000                                           // 00000007F9A8: BF800000
	.long 0xbf800000                                           // 00000007F9AC: BF800000
	.long 0xbf800000                                           // 00000007F9B0: BF800000
	.long 0xbf800000                                           // 00000007F9B4: BF800000
	.long 0xbf800000                                           // 00000007F9B8: BF800000
	.long 0xbf800000                                           // 00000007F9BC: BF800000
	.long 0xbf800000                                           // 00000007F9C0: BF800000
	.long 0xbf800000                                           // 00000007F9C4: BF800000
	.long 0xbf800000                                           // 00000007F9C8: BF800000
	.long 0xbf800000                                           // 00000007F9CC: BF800000
	.long 0xbf800000                                           // 00000007F9D0: BF800000
	.long 0xbf800000                                           // 00000007F9D4: BF800000
	.long 0xbf800000                                           // 00000007F9D8: BF800000
	.long 0xbf800000                                           // 00000007F9DC: BF800000
	.long 0xbf800000                                           // 00000007F9E0: BF800000
	.long 0xbf800000                                           // 00000007F9E4: BF800000
	.long 0xbf800000                                           // 00000007F9E8: BF800000
	.long 0xbf800000                                           // 00000007F9EC: BF800000
	.long 0xbf800000                                           // 00000007F9F0: BF800000
	.long 0xbf800000                                           // 00000007F9F4: BF800000
	.long 0xbf800000                                           // 00000007F9F8: BF800000
	.long 0xbf800000                                           // 00000007F9FC: BF800000

	.p2align	8
	.type	subtract_char_get_work_dim_get_global_id,@function
	.size	subtract_char_get_work_dim_get_global_id, subtract_char_get_work_dim_get_global_id_symend-subtract_char_get_work_dim_get_global_id
subtract_char_get_work_dim_get_global_id:
	s_clause 0x3                                               // 00000007FA00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000007FA04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000007FA0C: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x50                                // 00000007FA14: F4000180 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000007FA1C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000007FA24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000007FA2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FA34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007FA3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007FA40: BF870193
	v_lshl_or_b32 v1, s2, 1, v1                                // 00000007FA44: D6560001 04050202
	v_lshl_or_b32 v2, s3, 1, v2                                // 00000007FA4C: D6560002 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_3)// 00000007FA54: BF8701A3
	v_lshl_or_b32 v0, s4, 2, v0                                // 00000007FA58: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000007FA60: BF89FC07
	v_add_nc_u32_e32 v1, s8, v1                                // 00000007FA64: 4A020208
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007FA68: BF870193
	v_add_nc_u32_e32 v2, s10, v2                               // 00000007FA6C: 4A04040A
	v_add_nc_u32_e32 v4, s5, v0                                // 00000007FA70: 4A080005
	s_delay_alu instid0(VALU_DEP_3)                            // 00000007FA74: BF870003
	v_add_co_u32 v0, s2, s0, v1                                // 00000007FA78: D7000200 00020200
	v_sub_nc_u32_e32 v6, s6, v1                                // 00000007FA80: 4C0C0206
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 00000007FA84: D5207C01 00090001
	v_sub_nc_u32_e32 v7, s6, v2                                // 00000007FA8C: 4C0E0406
	v_add_co_u32 v2, s2, s0, v2                                // 00000007FA90: D7000202 00020400
	v_sub_nc_u32_e32 v8, s6, v4                                // 00000007FA98: 4C100806
	v_add_co_u32 v4, s0, s0, v4                                // 00000007FA9C: D7000004 00020800
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 00000007FAA4: D5207C03 00090001
	v_add_co_ci_u32_e64 v5, null, s1, 0, s0                    // 00000007FAAC: D5207C05 00010001
	s_clause 0x2                                               // 00000007FAB4: BF850002
	global_store_b8 v[0:1], v6, off                            // 00000007FAB8: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 00000007FAC0: DC620000 007C0702
	global_store_b8 v[4:5], v8, off                            // 00000007FAC8: DC620000 007C0804
	s_nop 0                                                    // 00000007FAD0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FAD4: BFB60003
	s_endpgm                                                   // 00000007FAD8: BFB00000
subtract_char_get_work_dim_get_global_id_symend:
	.long 0xbf800000                                           // 00000007FADC: BF800000
	.long 0xbf800000                                           // 00000007FAE0: BF800000
	.long 0xbf800000                                           // 00000007FAE4: BF800000
	.long 0xbf800000                                           // 00000007FAE8: BF800000
	.long 0xbf800000                                           // 00000007FAEC: BF800000
	.long 0xbf800000                                           // 00000007FAF0: BF800000
	.long 0xbf800000                                           // 00000007FAF4: BF800000
	.long 0xbf800000                                           // 00000007FAF8: BF800000
	.long 0xbf800000                                           // 00000007FAFC: BF800000

	.p2align	8
	.type	subtract_char_x_get_global_size,@function
	.size	subtract_char_x_get_global_size, subtract_char_x_get_global_size_symend-subtract_char_x_get_global_size
subtract_char_x_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000007FB00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007FB04: 360600FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007FB0C: D6100005 02291500
	s_lshl_b32 s2, s2, 4                                       // 00000007FB14: 84028402
	s_lshl_b32 s3, s3, 1                                       // 00000007FB18: 84038103
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FB1C: DC520022 02000001
	s_clause 0x3                                               // 00000007FB24: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007FB28: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007FB30: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x8                                 // 00000007FB38: F4000140 F8000008
	s_load_b64 s[6:7], s[0:1], null                            // 00000007FB40: F4040180 F8000000
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FB48: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007FB50: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007FB54: BF89FC07
	s_lshl_b32 s8, s8, 4                                       // 00000007FB58: 84088408
	s_lshl_b32 s9, s9, 1                                       // 00000007FB5C: 84098109
	v_add3_u32 v3, s12, s2, v3                                 // 00000007FB60: D6550003 040C040C
	v_add3_u32 v5, s14, s3, v5                                 // 00000007FB68: D6550005 0414060E
	s_load_b32 s2, s[0:1], 0x48                                // 00000007FB70: F4000080 F8000048
	s_waitcnt vmcnt(0)                                         // 00000007FB78: BF8903F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007FB7C: 32080490
	v_add_nc_u32_e32 v2, s8, v2                                // 00000007FB80: 4A040408
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007FB84: BF870112
	v_add_nc_u32_e32 v4, s9, v4                                // 00000007FB88: 4A080809
	v_sub_nc_u32_e32 v2, s5, v2                                // 00000007FB8C: 4C040405
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007FB90: BF870002
	v_sub_nc_u32_e32 v4, s5, v4                                // 00000007FB94: 4C080805
	s_clause 0x1                                               // 00000007FB98: BF850001
	global_store_b8 v3, v2, s[6:7]                             // 00000007FB9C: DC620000 00060203
	global_store_b8 v5, v4, s[6:7]                             // 00000007FBA4: DC620000 00060405
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007FBAC: DC4A0026 01000001
	s_lshl_b32 s0, s10, 1                                      // 00000007FBB4: 8400810A
	s_waitcnt vmcnt(0)                                         // 00000007FBB8: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007FBBC: 4A020200
	s_lshl_b32 s0, s4, 1                                       // 00000007FBC0: 84008104
	s_waitcnt lgkmcnt(0)                                       // 00000007FBC4: BF89FC07
	v_add3_u32 v0, s2, s0, v0                                  // 00000007FBC8: D6550000 04000002
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007FBD0: BF870002
	v_sub_nc_u32_e32 v1, s5, v1                                // 00000007FBD4: 4C020205
	global_store_b8 v0, v1, s[6:7]                             // 00000007FBD8: DC620000 00060100
	s_nop 0                                                    // 00000007FBE0: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FBE4: BFB60003
	s_endpgm                                                   // 00000007FBE8: BFB00000
subtract_char_x_get_global_size_symend:
	.long 0xbf800000                                           // 00000007FBEC: BF800000
	.long 0xbf800000                                           // 00000007FBF0: BF800000
	.long 0xbf800000                                           // 00000007FBF4: BF800000
	.long 0xbf800000                                           // 00000007FBF8: BF800000
	.long 0xbf800000                                           // 00000007FBFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_offset_get_global_size,@function
	.size	subtract_char_get_global_offset_get_global_size, subtract_char_get_global_offset_get_global_size_symend-subtract_char_get_global_offset_get_global_size
subtract_char_get_global_offset_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000007FC00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007FC04: 360600FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007FC0C: D6100005 02291500
	s_lshl_b32 s2, s2, 1                                       // 00000007FC14: 84028102
	s_lshl_b32 s3, s3, 4                                       // 00000007FC18: 84038403
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FC1C: DC520022 02000001
	s_clause 0x2                                               // 00000007FC24: BF850002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007FC28: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007FC30: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007FC38: F4040180 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FC40: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007FC48: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007FC4C: BF89FC07
	s_lshl_b32 s5, s8, 1                                       // 00000007FC50: 84058108
	s_lshl_b32 s8, s9, 4                                       // 00000007FC54: 84088409
	v_add3_u32 v3, s12, s2, v3                                 // 00000007FC58: D6550003 040C040C
	v_add3_u32 v5, s14, s3, v5                                 // 00000007FC60: D6550005 0414060E
	s_load_b32 s2, s[0:1], 0x48                                // 00000007FC68: F4000080 F8000048
	s_waitcnt vmcnt(0)                                         // 00000007FC70: BF8903F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007FC74: 32080490
	v_add_nc_u32_e32 v2, s5, v2                                // 00000007FC78: 4A040405
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007FC7C: BF870112
	v_add_nc_u32_e32 v4, s8, v4                                // 00000007FC80: 4A080808
	v_sub_nc_u32_e32 v2, s12, v2                               // 00000007FC84: 4C04040C
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007FC88: BF870002
	v_sub_nc_u32_e32 v4, s14, v4                               // 00000007FC8C: 4C08080E
	s_clause 0x1                                               // 00000007FC90: BF850001
	global_store_b8 v3, v2, s[6:7]                             // 00000007FC94: DC620000 00060203
	global_store_b8 v5, v4, s[6:7]                             // 00000007FC9C: DC620000 00060405
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007FCA4: DC4A0026 01000001
	s_lshl_b32 s0, s10, 1                                      // 00000007FCAC: 8400810A
	s_waitcnt vmcnt(0)                                         // 00000007FCB0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007FCB4: 4A020200
	s_lshl_b32 s0, s4, 1                                       // 00000007FCB8: 84008104
	s_waitcnt lgkmcnt(0)                                       // 00000007FCBC: BF89FC07
	v_add3_u32 v0, s2, s0, v0                                  // 00000007FCC0: D6550000 04000002
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007FCC8: BF870002
	v_sub_nc_u32_e32 v1, s2, v1                                // 00000007FCCC: 4C020202
	global_store_b8 v0, v1, s[6:7]                             // 00000007FCD0: DC620000 00060100
	s_nop 0                                                    // 00000007FCD8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FCDC: BFB60003
	s_endpgm                                                   // 00000007FCE0: BFB00000
subtract_char_get_global_offset_get_global_size_symend:
	.long 0xbf800000                                           // 00000007FCE4: BF800000
	.long 0xbf800000                                           // 00000007FCE8: BF800000
	.long 0xbf800000                                           // 00000007FCEC: BF800000
	.long 0xbf800000                                           // 00000007FCF0: BF800000
	.long 0xbf800000                                           // 00000007FCF4: BF800000
	.long 0xbf800000                                           // 00000007FCF8: BF800000
	.long 0xbf800000                                           // 00000007FCFC: BF800000

	.p2align	8
	.type	subtract_char_get_local_id_get_global_size,@function
	.size	subtract_char_get_local_id_get_global_size, subtract_char_get_local_id_get_global_size_symend-subtract_char_get_local_id_get_global_size
subtract_char_get_local_id_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000007FD00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007FD04: 360600FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007FD0C: D6100005 02291500
	s_lshl_b32 s2, s2, 3                                       // 00000007FD14: 84028302
	s_lshl_b32 s3, s3, 2                                       // 00000007FD18: 84038203
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FD1C: DC520022 02000001
	s_clause 0x2                                               // 00000007FD24: BF850002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007FD28: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007FD30: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007FD38: F4040180 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FD40: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000007FD48: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007FD4C: BF89FC07
	s_lshl_b32 s5, s8, 3                                       // 00000007FD50: 84058308
	s_lshl_b32 s8, s9, 2                                       // 00000007FD54: 84088209
	v_add3_u32 v6, s12, s2, v3                                 // 00000007FD58: D6550006 040C040C
	v_add3_u32 v7, s14, s3, v5                                 // 00000007FD60: D6550007 0414060E
	s_load_b32 s2, s[0:1], 0x48                                // 00000007FD68: F4000080 F8000048
	s_waitcnt vmcnt(0)                                         // 00000007FD70: BF8903F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007FD74: 32080490
	v_add_nc_u32_e32 v2, s5, v2                                // 00000007FD78: 4A040405
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000007FD7C: BF870112
	v_add_nc_u32_e32 v4, s8, v4                                // 00000007FD80: 4A080808
	v_sub_nc_u16 v2.l, v3.l, v2.l                              // 00000007FD84: D7040002 00020503
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007FD8C: BF870002
	v_sub_nc_u16 v3.l, v5.l, v4.l                              // 00000007FD90: D7040003 00020905
	s_clause 0x1                                               // 00000007FD98: BF850001
	global_store_b8 v6, v2, s[6:7]                             // 00000007FD9C: DC620000 00060206
	global_store_b8 v7, v3, s[6:7]                             // 00000007FDA4: DC620000 00060307
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007FDAC: DC4A0026 01000001
	s_lshl_b32 s0, s10, 1                                      // 00000007FDB4: 8400810A
	s_waitcnt vmcnt(0)                                         // 00000007FDB8: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007FDBC: 4A020200
	s_lshl_b32 s0, s4, 1                                       // 00000007FDC0: 84008104
	s_delay_alu instid0(VALU_DEP_1)                            // 00000007FDC4: BF870001
	v_sub_nc_u16 v1.l, v0.l, v1.l                              // 00000007FDC8: D7040001 00020300
	s_waitcnt lgkmcnt(0)                                       // 00000007FDD0: BF89FC07
	v_add3_u32 v0, s2, s0, v0                                  // 00000007FDD4: D6550000 04000002
	global_store_b8 v0, v1, s[6:7]                             // 00000007FDDC: DC620000 00060100
	s_nop 0                                                    // 00000007FDE4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FDE8: BFB60003
	s_endpgm                                                   // 00000007FDEC: BFB00000
subtract_char_get_local_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000007FDF0: BF800000
	.long 0xbf800000                                           // 00000007FDF4: BF800000
	.long 0xbf800000                                           // 00000007FDF8: BF800000
	.long 0xbf800000                                           // 00000007FDFC: BF800000

	.p2align	8
	.type	subtract_char_get_group_id_get_global_size,@function
	.size	subtract_char_get_group_id_get_global_size, subtract_char_get_group_id_get_global_size_symend-subtract_char_get_group_id_get_global_size
subtract_char_get_group_id_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 00000007FE00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 00000007FE04: 360600FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000007FE0C: D6100005 02291500
	s_lshl_b32 s5, s2, 1                                       // 00000007FE14: 84058102
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FE18: D6100000 02292900
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FE20: DC520022 02000001
	s_clause 0x2                                               // 00000007FE28: BF850002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007FE2C: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007FE34: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000007FE3C: F4040180 F8000008
	s_mov_b32 s33, 0                                           // 00000007FE44: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000007FE48: BF89FC07
	s_lshl_b32 s8, s8, 1                                       // 00000007FE4C: 84088108
	s_lshl_b32 s9, s9, 4                                       // 00000007FE50: 84098409
	v_add3_u32 v3, s12, s5, v3                                 // 00000007FE54: D6550003 040C0A0C
	s_waitcnt vmcnt(0)                                         // 00000007FE5C: BF8903F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 00000007FE60: 32080490
	v_add_nc_u32_e32 v2, s8, v2                                // 00000007FE64: 4A040408
	s_lshl_b32 s8, s3, 4                                       // 00000007FE68: 84088403
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 00000007FE6C: BF870199
	v_add3_u32 v5, s14, s8, v5                                 // 00000007FE70: D6550005 0414100E
	v_add_nc_u32_e32 v4, s9, v4                                // 00000007FE78: 4A080809
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007FE7C: BF870123
	v_sub_nc_u32_e32 v2, s2, v2                                // 00000007FE80: 4C040402
	s_load_b32 s2, s[0:1], 0x48                                // 00000007FE84: F4000080 F8000048
	v_sub_nc_u32_e32 v4, s3, v4                                // 00000007FE8C: 4C080803
	s_clause 0x1                                               // 00000007FE90: BF850001
	global_store_b8 v3, v2, s[6:7]                             // 00000007FE94: DC620000 00060203
	global_store_b8 v5, v4, s[6:7]                             // 00000007FE9C: DC620000 00060405
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000007FEA4: DC4A0026 01000001
	s_lshl_b32 s0, s10, 1                                      // 00000007FEAC: 8400810A
	s_waitcnt vmcnt(0)                                         // 00000007FEB0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 00000007FEB4: 4A020200
	s_lshl_b32 s0, s4, 1                                       // 00000007FEB8: 84008104
	s_waitcnt lgkmcnt(0)                                       // 00000007FEBC: BF89FC07
	v_add3_u32 v0, s2, s0, v0                                  // 00000007FEC0: D6550000 04000002
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007FEC8: BF870002
	v_sub_nc_u32_e32 v1, s4, v1                                // 00000007FECC: 4C020204
	global_store_b8 v0, v1, s[6:7]                             // 00000007FED0: DC620000 00060100
	s_nop 0                                                    // 00000007FED8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000007FEDC: BFB60003
	s_endpgm                                                   // 00000007FEE0: BFB00000
subtract_char_get_group_id_get_global_size_symend:
	.long 0xbf800000                                           // 00000007FEE4: BF800000
	.long 0xbf800000                                           // 00000007FEE8: BF800000
	.long 0xbf800000                                           // 00000007FEEC: BF800000
	.long 0xbf800000                                           // 00000007FEF0: BF800000
	.long 0xbf800000                                           // 00000007FEF4: BF800000
	.long 0xbf800000                                           // 00000007FEF8: BF800000
	.long 0xbf800000                                           // 00000007FEFC: BF800000

	.p2align	8
	.type	subtract_char_get_local_size_get_global_size,@function
	.size	subtract_char_get_local_size_get_global_size, subtract_char_get_local_size_get_global_size_symend-subtract_char_get_local_size_get_global_size
subtract_char_get_local_size_get_global_size:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000007FF00: F4080200 F8000010
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 00000007FF08: CA240080 010400FF 000003FF
	s_add_u32 s5, s0, 16                                       // 00000007FF14: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000007FF18: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 00000007FF1C: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 00000007FF20: 84108102
	s_lshl_b32 s17, s3, 1                                      // 00000007FF24: 84118103
	s_lshl_b32 s18, s4, 2                                      // 00000007FF28: 84128204
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000007FF2C: DC520022 02000001
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000007FF34: F4080300 F8000038
	s_mov_b32 s33, 0                                           // 00000007FF3C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 00000007FF40: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 00000007FF44: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007FF48: BF870009
	s_add_u32 s6, s5, s2                                       // 00000007FF4C: 80060205
	s_addc_u32 s7, s11, 0                                      // 00000007FF50: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 00000007FF54: BF0A0903
	s_load_b64 s[2:3], s[0:1], 0x8                             // 00000007FF58: F4040080 F8000008
	global_load_u8 v3, v1, s[6:7]                              // 00000007FF60: DC420000 03060001
	s_cselect_b32 s6, 14, 20                                   // 00000007FF68: 9806948E
	s_waitcnt lgkmcnt(0)                                       // 00000007FF6C: BF89FC07
	v_add3_u32 v4, s12, s16, v4                                // 00000007FF70: D6550004 0410200C
	s_add_u32 s6, s5, s6                                       // 00000007FF78: 80060605
	s_addc_u32 s7, s11, 0                                      // 00000007FF7C: 8207800B
	s_cmp_lt_u32 s4, s10                                       // 00000007FF80: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 00000007FF84: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 00000007FF88: BF870009
	s_add_u32 s4, s5, s4                                       // 00000007FF8C: 80040405
	s_addc_u32 s5, s11, 0                                      // 00000007FF90: 8205800B
	s_lshl_b32 s8, s8, 1                                       // 00000007FF94: 84088108
	s_waitcnt vmcnt(1)                                         // 00000007FF98: BF8907F7
	v_add_nc_u32_e32 v5, s8, v2                                // 00000007FF9C: 4A0A0408
	s_load_b32 s8, s[0:1], 0x48                                // 00000007FFA0: F4000200 F8000048
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000007FFA8: 32040490
	s_waitcnt vmcnt(0)                                         // 00000007FFAC: BF8903F7
	s_delay_alu instid0(VALU_DEP_2)                            // 00000007FFB0: BF870002
	v_sub_nc_u32_e32 v3, v3, v5                                // 00000007FFB4: 4C060B03
	global_store_b8 v4, v3, s[2:3]                             // 00000007FFB8: DC620000 00020304
	global_load_u8 v3, v1, s[6:7]                              // 00000007FFC0: DC420000 03060001
	s_lshl_b32 s6, s9, 1                                       // 00000007FFC8: 84068109
	v_bfe_u32 v4, v0, 10, 10                                   // 00000007FFCC: D6100004 02291500
	v_add_nc_u32_e32 v2, s6, v2                                // 00000007FFD4: 4A040406
	v_bfe_u32 v0, v0, 20, 10                                   // 00000007FFD8: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 00000007FFE0: BF870123
	v_add3_u32 v4, s14, s17, v4                                // 00000007FFE4: D6550004 0410220E
	s_waitcnt lgkmcnt(0)                                       // 00000007FFEC: BF89FC07
	v_add3_u32 v0, s8, s18, v0                                 // 00000007FFF0: D6550000 04002408
	s_waitcnt vmcnt(0)                                         // 00000007FFF8: BF8903F7
	v_sub_nc_u32_e32 v2, v3, v2                                // 00000007FFFC: 4C040503
	global_store_b8 v4, v2, s[2:3]                             // 000000080000: DC620000 00020204
	s_clause 0x1                                               // 000000080008: BF850001
	global_load_u16 v2, v1, s[0:1] offset:38                   // 00000008000C: DC4A0026 02000001
	global_load_u8 v1, v1, s[4:5]                              // 000000080014: DC420000 01040001
	s_lshl_b32 s0, s10, 2                                      // 00000008001C: 8400820A
	s_waitcnt vmcnt(1)                                         // 000000080020: BF8907F7
	v_add_nc_u32_e32 v2, s0, v2                                // 000000080024: 4A040400
	s_waitcnt vmcnt(0)                                         // 000000080028: BF8903F7
	s_delay_alu instid0(VALU_DEP_1)                            // 00000008002C: BF870001
	v_sub_nc_u32_e32 v1, v1, v2                                // 000000080030: 4C020501
	global_store_b8 v0, v1, s[2:3]                             // 000000080034: DC620000 00020100
	s_nop 0                                                    // 00000008003C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080040: BFB60003
	s_endpgm                                                   // 000000080044: BFB00000
subtract_char_get_local_size_get_global_size_symend:
	.long 0xbf800000                                           // 000000080048: BF800000
	.long 0xbf800000                                           // 00000008004C: BF800000
	.long 0xbf800000                                           // 000000080050: BF800000
	.long 0xbf800000                                           // 000000080054: BF800000
	.long 0xbf800000                                           // 000000080058: BF800000
	.long 0xbf800000                                           // 00000008005C: BF800000
	.long 0xbf800000                                           // 000000080060: BF800000
	.long 0xbf800000                                           // 000000080064: BF800000
	.long 0xbf800000                                           // 000000080068: BF800000
	.long 0xbf800000                                           // 00000008006C: BF800000
	.long 0xbf800000                                           // 000000080070: BF800000
	.long 0xbf800000                                           // 000000080074: BF800000
	.long 0xbf800000                                           // 000000080078: BF800000
	.long 0xbf800000                                           // 00000008007C: BF800000
	.long 0xbf800000                                           // 000000080080: BF800000
	.long 0xbf800000                                           // 000000080084: BF800000
	.long 0xbf800000                                           // 000000080088: BF800000
	.long 0xbf800000                                           // 00000008008C: BF800000
	.long 0xbf800000                                           // 000000080090: BF800000
	.long 0xbf800000                                           // 000000080094: BF800000
	.long 0xbf800000                                           // 000000080098: BF800000
	.long 0xbf800000                                           // 00000008009C: BF800000
	.long 0xbf800000                                           // 0000000800A0: BF800000
	.long 0xbf800000                                           // 0000000800A4: BF800000
	.long 0xbf800000                                           // 0000000800A8: BF800000
	.long 0xbf800000                                           // 0000000800AC: BF800000
	.long 0xbf800000                                           // 0000000800B0: BF800000
	.long 0xbf800000                                           // 0000000800B4: BF800000
	.long 0xbf800000                                           // 0000000800B8: BF800000
	.long 0xbf800000                                           // 0000000800BC: BF800000
	.long 0xbf800000                                           // 0000000800C0: BF800000
	.long 0xbf800000                                           // 0000000800C4: BF800000
	.long 0xbf800000                                           // 0000000800C8: BF800000
	.long 0xbf800000                                           // 0000000800CC: BF800000
	.long 0xbf800000                                           // 0000000800D0: BF800000
	.long 0xbf800000                                           // 0000000800D4: BF800000
	.long 0xbf800000                                           // 0000000800D8: BF800000
	.long 0xbf800000                                           // 0000000800DC: BF800000
	.long 0xbf800000                                           // 0000000800E0: BF800000
	.long 0xbf800000                                           // 0000000800E4: BF800000
	.long 0xbf800000                                           // 0000000800E8: BF800000
	.long 0xbf800000                                           // 0000000800EC: BF800000
	.long 0xbf800000                                           // 0000000800F0: BF800000
	.long 0xbf800000                                           // 0000000800F4: BF800000
	.long 0xbf800000                                           // 0000000800F8: BF800000
	.long 0xbf800000                                           // 0000000800FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_id_get_global_size,@function
	.size	subtract_char_get_global_id_get_global_size, subtract_char_get_global_id_get_global_size_symend-subtract_char_get_global_id_get_global_size
subtract_char_get_global_id_get_global_size:
	v_dual_mov_b32 v3, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 000000080100: CA240080 030400FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008010C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080114: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008011C: BEA10080
	global_load_b32 v1, v3, s[0:1] offset:34                   // 000000080120: DC520022 01000003
	s_clause 0x2                                               // 000000080128: BF850002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 00000008012C: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080134: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 00000008013C: F4040180 F8000008
	v_lshl_or_b32 v2, s3, 1, v2                                // 000000080144: D6560002 04090203
	v_lshl_or_b32 v4, s2, 1, v4                                // 00000008014C: D6560004 04110202
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000080154: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 00000008015C: BF89FC07
	s_lshl_b32 s2, s8, 1                                       // 000000080160: 84028108
	s_lshl_b32 s3, s9, 1                                       // 000000080164: 84038109
	v_add_nc_u32_e32 v6, s14, v2                               // 000000080168: 4A0C040E
	v_add_nc_u32_e32 v7, s12, v4                               // 00000008016C: 4A0E080C
	s_waitcnt vmcnt(0)                                         // 000000080170: BF8903F7
	v_lshrrev_b32_e32 v5, 16, v1                               // 000000080174: 320A0290
	v_add_nc_u32_e32 v8, s2, v1                                // 000000080178: 4A100202
	v_add_co_u32 v1, s2, s6, v6                                // 00000008017C: D7000201 00020C06
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_4)// 000000080184: BF870211
	v_add_co_ci_u32_e64 v2, null, s7, 0, s2                    // 000000080188: D5207C02 00090007
	v_add_nc_u32_e32 v5, s3, v5                                // 000000080190: 4A0A0A03
	s_delay_alu instid0(VALU_DEP_4) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000080194: BF870124
	v_sub_nc_u32_e32 v7, v7, v8                                // 000000080198: 4C0E1107
	s_load_b32 s2, s[0:1], 0x48                                // 00000008019C: F4000080 F8000048
	v_sub_nc_u32_e32 v5, v6, v5                                // 0000000801A4: 4C0A0B06
	s_clause 0x1                                               // 0000000801A8: BF850001
	global_store_b8 v4, v7, s[6:7]                             // 0000000801AC: DC620000 00060704
	global_store_b8 v[1:2], v5, off                            // 0000000801B4: DC620000 007C0501
	global_load_u16 v1, v3, s[0:1] offset:38                   // 0000000801BC: DC4A0026 01000003
	s_lshl_b32 s0, s10, 2                                      // 0000000801C4: 8400820A
	s_waitcnt lgkmcnt(0)                                       // 0000000801C8: BF89FC07
	v_add_nc_u32_e32 v0, s2, v0                                // 0000000801CC: 4A000002
	s_waitcnt vmcnt(0)                                         // 0000000801D0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 0000000801D4: 4A020200
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(VALU_DEP_1)// 0000000801D8: BF8700A1
	v_sub_nc_u32_e32 v2, v0, v1                                // 0000000801DC: 4C040300
	v_add_co_u32 v0, s0, s6, v0                                // 0000000801E0: D7000000 00020006
	v_add_co_ci_u32_e64 v1, null, s7, 0, s0                    // 0000000801E8: D5207C01 00010007
	global_store_b8 v[0:1], v2, off                            // 0000000801F0: DC620000 007C0200
	s_nop 0                                                    // 0000000801F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000801FC: BFB60003
	s_endpgm                                                   // 000000080200: BFB00000
subtract_char_get_global_id_get_global_size_symend:
	.long 0xbf800000                                           // 000000080204: BF800000
	.long 0xbf800000                                           // 000000080208: BF800000
	.long 0xbf800000                                           // 00000008020C: BF800000
	.long 0xbf800000                                           // 000000080210: BF800000
	.long 0xbf800000                                           // 000000080214: BF800000
	.long 0xbf800000                                           // 000000080218: BF800000
	.long 0xbf800000                                           // 00000008021C: BF800000
	.long 0xbf800000                                           // 000000080220: BF800000
	.long 0xbf800000                                           // 000000080224: BF800000
	.long 0xbf800000                                           // 000000080228: BF800000
	.long 0xbf800000                                           // 00000008022C: BF800000
	.long 0xbf800000                                           // 000000080230: BF800000
	.long 0xbf800000                                           // 000000080234: BF800000
	.long 0xbf800000                                           // 000000080238: BF800000
	.long 0xbf800000                                           // 00000008023C: BF800000
	.long 0xbf800000                                           // 000000080240: BF800000
	.long 0xbf800000                                           // 000000080244: BF800000
	.long 0xbf800000                                           // 000000080248: BF800000
	.long 0xbf800000                                           // 00000008024C: BF800000
	.long 0xbf800000                                           // 000000080250: BF800000
	.long 0xbf800000                                           // 000000080254: BF800000
	.long 0xbf800000                                           // 000000080258: BF800000
	.long 0xbf800000                                           // 00000008025C: BF800000
	.long 0xbf800000                                           // 000000080260: BF800000
	.long 0xbf800000                                           // 000000080264: BF800000
	.long 0xbf800000                                           // 000000080268: BF800000
	.long 0xbf800000                                           // 00000008026C: BF800000
	.long 0xbf800000                                           // 000000080270: BF800000
	.long 0xbf800000                                           // 000000080274: BF800000
	.long 0xbf800000                                           // 000000080278: BF800000
	.long 0xbf800000                                           // 00000008027C: BF800000
	.long 0xbf800000                                           // 000000080280: BF800000
	.long 0xbf800000                                           // 000000080284: BF800000
	.long 0xbf800000                                           // 000000080288: BF800000
	.long 0xbf800000                                           // 00000008028C: BF800000
	.long 0xbf800000                                           // 000000080290: BF800000
	.long 0xbf800000                                           // 000000080294: BF800000
	.long 0xbf800000                                           // 000000080298: BF800000
	.long 0xbf800000                                           // 00000008029C: BF800000
	.long 0xbf800000                                           // 0000000802A0: BF800000
	.long 0xbf800000                                           // 0000000802A4: BF800000
	.long 0xbf800000                                           // 0000000802A8: BF800000
	.long 0xbf800000                                           // 0000000802AC: BF800000
	.long 0xbf800000                                           // 0000000802B0: BF800000
	.long 0xbf800000                                           // 0000000802B4: BF800000
	.long 0xbf800000                                           // 0000000802B8: BF800000
	.long 0xbf800000                                           // 0000000802BC: BF800000
	.long 0xbf800000                                           // 0000000802C0: BF800000
	.long 0xbf800000                                           // 0000000802C4: BF800000
	.long 0xbf800000                                           // 0000000802C8: BF800000
	.long 0xbf800000                                           // 0000000802CC: BF800000
	.long 0xbf800000                                           // 0000000802D0: BF800000
	.long 0xbf800000                                           // 0000000802D4: BF800000
	.long 0xbf800000                                           // 0000000802D8: BF800000
	.long 0xbf800000                                           // 0000000802DC: BF800000
	.long 0xbf800000                                           // 0000000802E0: BF800000
	.long 0xbf800000                                           // 0000000802E4: BF800000
	.long 0xbf800000                                           // 0000000802E8: BF800000
	.long 0xbf800000                                           // 0000000802EC: BF800000
	.long 0xbf800000                                           // 0000000802F0: BF800000
	.long 0xbf800000                                           // 0000000802F4: BF800000
	.long 0xbf800000                                           // 0000000802F8: BF800000
	.long 0xbf800000                                           // 0000000802FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_size_get_global_size,@function
	.size	subtract_char_get_global_size_get_global_size, subtract_char_get_global_size_get_global_size_symend-subtract_char_get_global_size_get_global_size
subtract_char_get_global_size_get_global_size:
	s_clause 0x2                                               // 000000080300: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080304: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000008030C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000080314: F4040000 F8000000
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000008031C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 000000080328: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080330: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 000000080338: 84028402
	s_lshl_b32 s3, s3, 1                                       // 00000008033C: 84038103
	s_lshl_b32 s4, s4, 1                                       // 000000080340: 84048104
	s_mov_b32 s33, 0                                           // 000000080344: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000080348: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 00000008034C: D6550002 04080408
	v_add3_u32 v3, s10, s3, v3                                 // 000000080354: D6550003 040C060A
	v_add3_u32 v0, s5, s4, v0                                  // 00000008035C: D6550000 04000805
	s_clause 0x2                                               // 000000080364: BF850002
	global_store_b8 v2, v1, s[0:1]                             // 000000080368: DC620000 00000102
	global_store_b8 v3, v1, s[0:1]                             // 000000080370: DC620000 00000103
	global_store_b8 v0, v1, s[0:1]                             // 000000080378: DC620000 00000100
	s_nop 0                                                    // 000000080380: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080384: BFB60003
	s_endpgm                                                   // 000000080388: BFB00000
subtract_char_get_global_size_get_global_size_symend:
	.long 0xbf800000                                           // 00000008038C: BF800000
	.long 0xbf800000                                           // 000000080390: BF800000
	.long 0xbf800000                                           // 000000080394: BF800000
	.long 0xbf800000                                           // 000000080398: BF800000
	.long 0xbf800000                                           // 00000008039C: BF800000
	.long 0xbf800000                                           // 0000000803A0: BF800000
	.long 0xbf800000                                           // 0000000803A4: BF800000
	.long 0xbf800000                                           // 0000000803A8: BF800000
	.long 0xbf800000                                           // 0000000803AC: BF800000
	.long 0xbf800000                                           // 0000000803B0: BF800000
	.long 0xbf800000                                           // 0000000803B4: BF800000
	.long 0xbf800000                                           // 0000000803B8: BF800000
	.long 0xbf800000                                           // 0000000803BC: BF800000
	.long 0xbf800000                                           // 0000000803C0: BF800000
	.long 0xbf800000                                           // 0000000803C4: BF800000
	.long 0xbf800000                                           // 0000000803C8: BF800000
	.long 0xbf800000                                           // 0000000803CC: BF800000
	.long 0xbf800000                                           // 0000000803D0: BF800000
	.long 0xbf800000                                           // 0000000803D4: BF800000
	.long 0xbf800000                                           // 0000000803D8: BF800000
	.long 0xbf800000                                           // 0000000803DC: BF800000
	.long 0xbf800000                                           // 0000000803E0: BF800000
	.long 0xbf800000                                           // 0000000803E4: BF800000
	.long 0xbf800000                                           // 0000000803E8: BF800000
	.long 0xbf800000                                           // 0000000803EC: BF800000
	.long 0xbf800000                                           // 0000000803F0: BF800000
	.long 0xbf800000                                           // 0000000803F4: BF800000
	.long 0xbf800000                                           // 0000000803F8: BF800000
	.long 0xbf800000                                           // 0000000803FC: BF800000

	.p2align	8
	.type	subtract_char_get_num_groups_get_global_size,@function
	.size	subtract_char_get_num_groups_get_global_size, subtract_char_get_num_groups_get_global_size_symend-subtract_char_get_num_groups_get_global_size
subtract_char_get_num_groups_get_global_size:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 000000080400: CA240080 010400FF 000003FF
	s_lshl_b32 s2, s2, 1                                       // 00000008040C: 84028102
	s_lshl_b32 s3, s3, 1                                       // 000000080410: 84038103
	v_bfe_u32 v5, v0, 20, 10                                   // 000000080414: D6100005 02292900
	s_clause 0x1                                               // 00000008041C: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080420: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000080428: DC4A0026 01000001
	s_clause 0x3                                               // 000000080430: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000080434: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 00000008043C: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000080444: F4040180 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000008044C: F4080300 F8000038
	s_lshl_b32 s1, s4, 2                                       // 000000080454: 84018204
	v_bfe_u32 v0, v0, 10, 10                                   // 000000080458: D6100000 02291500
	s_mov_b32 s33, 0                                           // 000000080460: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000080464: BF89FC07
	v_add3_u32 v5, s5, s1, v5                                  // 000000080468: D6550005 04140205
	v_add3_u32 v4, s12, s2, v4                                 // 000000080470: D6550004 0410040C
	v_add3_u32 v0, s14, s3, v0                                 // 000000080478: D6550000 0400060E
	s_waitcnt vmcnt(1)                                         // 000000080480: BF8907F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 000000080484: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080488: 7C7A0480
	s_delay_alu instid0(VALU_DEP_2)                            // 00000008048C: BF870002
	v_cmp_ne_u16_e64 s0, 0, v3.l                               // 000000080490: D43D0000 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080498: BF07806A
	s_waitcnt vmcnt(0)                                         // 00000008049C: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 0000000804A0: 7C7A0280
	s_addc_u32 s4, s8, 0                                       // 0000000804A4: 82048008
	s_cmp_lg_u32 s0, 0                                         // 0000000804A8: BF078000
	s_addc_u32 s0, s9, 0                                       // 0000000804AC: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000804B0: BF07806A
	s_addc_u32 s1, s10, 0                                      // 0000000804B4: 8201800A
	s_lshl_b32 s5, s8, 1                                       // 0000000804B8: 84058108
	s_lshl_b32 s8, s9, 1                                       // 0000000804BC: 84088109
	s_lshl_b32 s9, s10, 2                                      // 0000000804C0: 8409820A
	v_add_nc_u32_e32 v2, s5, v2                                // 0000000804C4: 4A040405
	v_add_nc_u32_e32 v3, s8, v3                                // 0000000804C8: 4A060608
	v_add_nc_u32_e32 v1, s9, v1                                // 0000000804CC: 4A020209
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 0000000804D0: BF870193
	v_sub_nc_u32_e32 v2, s4, v2                                // 0000000804D4: 4C040404
	v_sub_nc_u32_e32 v3, s0, v3                                // 0000000804D8: 4C060600
	s_delay_alu instid0(VALU_DEP_3)                            // 0000000804DC: BF870003
	v_sub_nc_u32_e32 v1, s1, v1                                // 0000000804E0: 4C020201
	s_clause 0x2                                               // 0000000804E4: BF850002
	global_store_b8 v4, v2, s[6:7]                             // 0000000804E8: DC620000 00060204
	global_store_b8 v0, v3, s[6:7]                             // 0000000804F0: DC620000 00060300
	global_store_b8 v5, v1, s[6:7]                             // 0000000804F8: DC620000 00060105
	s_nop 0                                                    // 000000080500: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080504: BFB60003
	s_endpgm                                                   // 000000080508: BFB00000
subtract_char_get_num_groups_get_global_size_symend:
	.long 0xbf800000                                           // 00000008050C: BF800000
	.long 0xbf800000                                           // 000000080510: BF800000
	.long 0xbf800000                                           // 000000080514: BF800000
	.long 0xbf800000                                           // 000000080518: BF800000
	.long 0xbf800000                                           // 00000008051C: BF800000
	.long 0xbf800000                                           // 000000080520: BF800000
	.long 0xbf800000                                           // 000000080524: BF800000
	.long 0xbf800000                                           // 000000080528: BF800000
	.long 0xbf800000                                           // 00000008052C: BF800000
	.long 0xbf800000                                           // 000000080530: BF800000
	.long 0xbf800000                                           // 000000080534: BF800000
	.long 0xbf800000                                           // 000000080538: BF800000
	.long 0xbf800000                                           // 00000008053C: BF800000
	.long 0xbf800000                                           // 000000080540: BF800000
	.long 0xbf800000                                           // 000000080544: BF800000
	.long 0xbf800000                                           // 000000080548: BF800000
	.long 0xbf800000                                           // 00000008054C: BF800000
	.long 0xbf800000                                           // 000000080550: BF800000
	.long 0xbf800000                                           // 000000080554: BF800000
	.long 0xbf800000                                           // 000000080558: BF800000
	.long 0xbf800000                                           // 00000008055C: BF800000
	.long 0xbf800000                                           // 000000080560: BF800000
	.long 0xbf800000                                           // 000000080564: BF800000
	.long 0xbf800000                                           // 000000080568: BF800000
	.long 0xbf800000                                           // 00000008056C: BF800000
	.long 0xbf800000                                           // 000000080570: BF800000
	.long 0xbf800000                                           // 000000080574: BF800000
	.long 0xbf800000                                           // 000000080578: BF800000
	.long 0xbf800000                                           // 00000008057C: BF800000
	.long 0xbf800000                                           // 000000080580: BF800000
	.long 0xbf800000                                           // 000000080584: BF800000
	.long 0xbf800000                                           // 000000080588: BF800000
	.long 0xbf800000                                           // 00000008058C: BF800000
	.long 0xbf800000                                           // 000000080590: BF800000
	.long 0xbf800000                                           // 000000080594: BF800000
	.long 0xbf800000                                           // 000000080598: BF800000
	.long 0xbf800000                                           // 00000008059C: BF800000
	.long 0xbf800000                                           // 0000000805A0: BF800000
	.long 0xbf800000                                           // 0000000805A4: BF800000
	.long 0xbf800000                                           // 0000000805A8: BF800000
	.long 0xbf800000                                           // 0000000805AC: BF800000
	.long 0xbf800000                                           // 0000000805B0: BF800000
	.long 0xbf800000                                           // 0000000805B4: BF800000
	.long 0xbf800000                                           // 0000000805B8: BF800000
	.long 0xbf800000                                           // 0000000805BC: BF800000
	.long 0xbf800000                                           // 0000000805C0: BF800000
	.long 0xbf800000                                           // 0000000805C4: BF800000
	.long 0xbf800000                                           // 0000000805C8: BF800000
	.long 0xbf800000                                           // 0000000805CC: BF800000
	.long 0xbf800000                                           // 0000000805D0: BF800000
	.long 0xbf800000                                           // 0000000805D4: BF800000
	.long 0xbf800000                                           // 0000000805D8: BF800000
	.long 0xbf800000                                           // 0000000805DC: BF800000
	.long 0xbf800000                                           // 0000000805E0: BF800000
	.long 0xbf800000                                           // 0000000805E4: BF800000
	.long 0xbf800000                                           // 0000000805E8: BF800000
	.long 0xbf800000                                           // 0000000805EC: BF800000
	.long 0xbf800000                                           // 0000000805F0: BF800000
	.long 0xbf800000                                           // 0000000805F4: BF800000
	.long 0xbf800000                                           // 0000000805F8: BF800000
	.long 0xbf800000                                           // 0000000805FC: BF800000

	.p2align	8
	.type	subtract_char_get_work_dim_get_global_size,@function
	.size	subtract_char_get_work_dim_get_global_size, subtract_char_get_work_dim_get_global_size_symend-subtract_char_get_work_dim_get_global_size
subtract_char_get_work_dim_get_global_size:
	v_mov_b32_e32 v1, 0                                        // 000000080600: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080604: 360600FF 000003FF
	v_bfe_u32 v5, v0, 10, 10                                   // 00000008060C: D6100005 02291500
	s_lshl_b32 s2, s2, 1                                       // 000000080614: 84028102
	s_lshl_b32 s3, s3, 1                                       // 000000080618: 84038103
	global_load_b32 v2, v1, s[0:1] offset:34                   // 00000008061C: DC520022 02000001
	s_clause 0x3                                               // 000000080624: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000080628: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x50                                // 000000080630: F4000140 F8000050
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080638: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000080640: F4040180 F8000008
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080648: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000080650: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000080654: BF89FC07
	s_lshl_b32 s8, s8, 1                                       // 000000080658: 84088108
	s_lshl_b32 s9, s9, 1                                       // 00000008065C: 84098109
	s_and_b32 s5, s5, 0xffff                                   // 000000080660: 8B05FF05 0000FFFF
	v_add3_u32 v3, s12, s2, v3                                 // 000000080668: D6550003 040C040C
	v_add3_u32 v5, s14, s3, v5                                 // 000000080670: D6550005 0414060E
	s_load_b32 s2, s[0:1], 0x48                                // 000000080678: F4000080 F8000048
	s_waitcnt vmcnt(0)                                         // 000000080680: BF8903F7
	v_lshrrev_b32_e32 v4, 16, v2                               // 000000080684: 32080490
	v_add_nc_u32_e32 v2, s8, v2                                // 000000080688: 4A040408
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000008068C: BF870112
	v_add_nc_u32_e32 v4, s9, v4                                // 000000080690: 4A080809
	v_sub_nc_u32_e32 v2, s5, v2                                // 000000080694: 4C040405
	s_delay_alu instid0(VALU_DEP_2)                            // 000000080698: BF870002
	v_sub_nc_u32_e32 v4, s5, v4                                // 00000008069C: 4C080805
	s_clause 0x1                                               // 0000000806A0: BF850001
	global_store_b8 v3, v2, s[6:7]                             // 0000000806A4: DC620000 00060203
	global_store_b8 v5, v4, s[6:7]                             // 0000000806AC: DC620000 00060405
	global_load_u16 v1, v1, s[0:1] offset:38                   // 0000000806B4: DC4A0026 01000001
	s_lshl_b32 s0, s10, 2                                      // 0000000806BC: 8400820A
	s_waitcnt vmcnt(0)                                         // 0000000806C0: BF8903F7
	v_add_nc_u32_e32 v1, s0, v1                                // 0000000806C4: 4A020200
	s_lshl_b32 s0, s4, 2                                       // 0000000806C8: 84008204
	s_waitcnt lgkmcnt(0)                                       // 0000000806CC: BF89FC07
	v_add3_u32 v0, s2, s0, v0                                  // 0000000806D0: D6550000 04000002
	s_delay_alu instid0(VALU_DEP_2)                            // 0000000806D8: BF870002
	v_sub_nc_u32_e32 v1, s5, v1                                // 0000000806DC: 4C020205
	global_store_b8 v0, v1, s[6:7]                             // 0000000806E0: DC620000 00060100
	s_nop 0                                                    // 0000000806E8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000806EC: BFB60003
	s_endpgm                                                   // 0000000806F0: BFB00000
subtract_char_get_work_dim_get_global_size_symend:
	.long 0xbf800000                                           // 0000000806F4: BF800000
	.long 0xbf800000                                           // 0000000806F8: BF800000
	.long 0xbf800000                                           // 0000000806FC: BF800000

	.p2align	8
	.type	subtract_char_x_get_num_groups,@function
	.size	subtract_char_x_get_num_groups, subtract_char_x_get_num_groups_symend-subtract_char_x_get_num_groups
subtract_char_x_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000080700: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080704: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000008070C: BEA10080
	s_clause 0x1                                               // 000000080710: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080714: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008071C: DC4A0026 01000001
	s_clause 0x2                                               // 000000080724: BF850002
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000080728: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x8                                 // 000000080730: F4000140 F8000008
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080738: F4080300 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000080740: BF89FC07
	s_clause 0x1                                               // 000000080744: BF850001
	s_load_b32 s11, s[0:1], 0x48                               // 000000080748: F40002C0 F8000048
	s_load_b64 s[6:7], s[0:1], null                            // 000000080750: F4040180 F8000000
	s_lshl_b32 s1, s2, 4                                       // 000000080758: 84018402
	s_lshl_b32 s2, s3, 1                                       // 00000008075C: 84028103
	s_lshl_b32 s3, s4, 1                                       // 000000080760: 84038104
	s_waitcnt vmcnt(1)                                         // 000000080764: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080768: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000008076C: 32040490
	s_waitcnt vmcnt(0)                                         // 000000080770: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000080774: D43D0000 00020280
	v_add3_u32 v1, s12, s1, v3                                 // 00000008077C: D6550001 040C020C
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080784: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080788: 7C7A0480
	s_addc_u32 s4, s8, 0                                       // 00000008078C: 82048008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080790: D6100002 02291500
	s_sub_i32 s4, s5, s4                                       // 000000080798: 81840405
	v_bfe_u32 v0, v0, 20, 10                                   // 00000008079C: D6100000 02292900
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000807A4: BF07806A
	v_mov_b32_e32 v3, s4                                       // 0000000807A8: 7E060204
	s_addc_u32 s1, s9, 0                                       // 0000000807AC: 82018009
	v_add3_u32 v2, s14, s2, v2                                 // 0000000807B0: D6550002 0408040E
	s_sub_i32 s1, s5, s1                                       // 0000000807B8: 81810105
	s_cmp_lg_u32 s0, 0                                         // 0000000807BC: BF078000
	v_mov_b32_e32 v4, s1                                       // 0000000807C0: 7E080201
	s_addc_u32 s0, s10, 0                                      // 0000000807C4: 8200800A
	s_waitcnt lgkmcnt(0)                                       // 0000000807C8: BF89FC07
	v_add3_u32 v0, s11, s3, v0                                 // 0000000807CC: D6550000 0400060B
	s_sub_i32 s0, s5, s0                                       // 0000000807D4: 81800005
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000807D8: BF870009
	v_mov_b32_e32 v5, s0                                       // 0000000807DC: 7E0A0200
	s_clause 0x2                                               // 0000000807E0: BF850002
	global_store_b8 v1, v3, s[6:7]                             // 0000000807E4: DC620000 00060301
	global_store_b8 v2, v4, s[6:7]                             // 0000000807EC: DC620000 00060402
	global_store_b8 v0, v5, s[6:7]                             // 0000000807F4: DC620000 00060500
	s_nop 0                                                    // 0000000807FC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080800: BFB60003
	s_endpgm                                                   // 000000080804: BFB00000
subtract_char_x_get_num_groups_symend:
	.long 0xbf800000                                           // 000000080808: BF800000
	.long 0xbf800000                                           // 00000008080C: BF800000
	.long 0xbf800000                                           // 000000080810: BF800000
	.long 0xbf800000                                           // 000000080814: BF800000
	.long 0xbf800000                                           // 000000080818: BF800000
	.long 0xbf800000                                           // 00000008081C: BF800000
	.long 0xbf800000                                           // 000000080820: BF800000
	.long 0xbf800000                                           // 000000080824: BF800000
	.long 0xbf800000                                           // 000000080828: BF800000
	.long 0xbf800000                                           // 00000008082C: BF800000
	.long 0xbf800000                                           // 000000080830: BF800000
	.long 0xbf800000                                           // 000000080834: BF800000
	.long 0xbf800000                                           // 000000080838: BF800000
	.long 0xbf800000                                           // 00000008083C: BF800000
	.long 0xbf800000                                           // 000000080840: BF800000
	.long 0xbf800000                                           // 000000080844: BF800000
	.long 0xbf800000                                           // 000000080848: BF800000
	.long 0xbf800000                                           // 00000008084C: BF800000
	.long 0xbf800000                                           // 000000080850: BF800000
	.long 0xbf800000                                           // 000000080854: BF800000
	.long 0xbf800000                                           // 000000080858: BF800000
	.long 0xbf800000                                           // 00000008085C: BF800000
	.long 0xbf800000                                           // 000000080860: BF800000
	.long 0xbf800000                                           // 000000080864: BF800000
	.long 0xbf800000                                           // 000000080868: BF800000
	.long 0xbf800000                                           // 00000008086C: BF800000
	.long 0xbf800000                                           // 000000080870: BF800000
	.long 0xbf800000                                           // 000000080874: BF800000
	.long 0xbf800000                                           // 000000080878: BF800000
	.long 0xbf800000                                           // 00000008087C: BF800000
	.long 0xbf800000                                           // 000000080880: BF800000
	.long 0xbf800000                                           // 000000080884: BF800000
	.long 0xbf800000                                           // 000000080888: BF800000
	.long 0xbf800000                                           // 00000008088C: BF800000
	.long 0xbf800000                                           // 000000080890: BF800000
	.long 0xbf800000                                           // 000000080894: BF800000
	.long 0xbf800000                                           // 000000080898: BF800000
	.long 0xbf800000                                           // 00000008089C: BF800000
	.long 0xbf800000                                           // 0000000808A0: BF800000
	.long 0xbf800000                                           // 0000000808A4: BF800000
	.long 0xbf800000                                           // 0000000808A8: BF800000
	.long 0xbf800000                                           // 0000000808AC: BF800000
	.long 0xbf800000                                           // 0000000808B0: BF800000
	.long 0xbf800000                                           // 0000000808B4: BF800000
	.long 0xbf800000                                           // 0000000808B8: BF800000
	.long 0xbf800000                                           // 0000000808BC: BF800000
	.long 0xbf800000                                           // 0000000808C0: BF800000
	.long 0xbf800000                                           // 0000000808C4: BF800000
	.long 0xbf800000                                           // 0000000808C8: BF800000
	.long 0xbf800000                                           // 0000000808CC: BF800000
	.long 0xbf800000                                           // 0000000808D0: BF800000
	.long 0xbf800000                                           // 0000000808D4: BF800000
	.long 0xbf800000                                           // 0000000808D8: BF800000
	.long 0xbf800000                                           // 0000000808DC: BF800000
	.long 0xbf800000                                           // 0000000808E0: BF800000
	.long 0xbf800000                                           // 0000000808E4: BF800000
	.long 0xbf800000                                           // 0000000808E8: BF800000
	.long 0xbf800000                                           // 0000000808EC: BF800000
	.long 0xbf800000                                           // 0000000808F0: BF800000
	.long 0xbf800000                                           // 0000000808F4: BF800000
	.long 0xbf800000                                           // 0000000808F8: BF800000
	.long 0xbf800000                                           // 0000000808FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_offset_get_num_groups,@function
	.size	subtract_char_get_global_offset_get_num_groups, subtract_char_get_global_offset_get_num_groups_symend-subtract_char_get_global_offset_get_num_groups
subtract_char_get_global_offset_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000080900: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080904: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000008090C: BEA10080
	s_clause 0x1                                               // 000000080910: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080914: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008091C: DC4A0026 01000001
	s_clause 0x3                                               // 000000080924: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000080928: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080930: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000080938: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000080940: F4040180 F8000008
	s_lshl_b32 s1, s2, 1                                       // 000000080948: 84018102
	s_lshl_b32 s2, s3, 4                                       // 00000008094C: 84028403
	s_lshl_b32 s3, s4, 1                                       // 000000080950: 84038104
	s_waitcnt vmcnt(1)                                         // 000000080954: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080958: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 00000008095C: 32040490
	s_waitcnt vmcnt(0)                                         // 000000080960: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000080964: D43D0000 00020280
	s_waitcnt lgkmcnt(0)                                       // 00000008096C: BF89FC07
	v_add3_u32 v1, s12, s1, v3                                 // 000000080970: D6550001 040C020C
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080978: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 00000008097C: 7C7A0480
	s_addc_u32 s4, s8, 0                                       // 000000080980: 82048008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080984: D6100002 02291500
	s_sub_i32 s4, s12, s4                                      // 00000008098C: 8184040C
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080990: D6100000 02292900
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080998: BF07806A
	v_mov_b32_e32 v3, s4                                       // 00000008099C: 7E060204
	s_addc_u32 s1, s9, 0                                       // 0000000809A0: 82018009
	v_add3_u32 v2, s14, s2, v2                                 // 0000000809A4: D6550002 0408040E
	s_sub_i32 s1, s14, s1                                      // 0000000809AC: 8181010E
	s_cmp_lg_u32 s0, 0                                         // 0000000809B0: BF078000
	v_mov_b32_e32 v4, s1                                       // 0000000809B4: 7E080201
	s_addc_u32 s0, s10, 0                                      // 0000000809B8: 8200800A
	v_add3_u32 v0, s5, s3, v0                                  // 0000000809BC: D6550000 04000605
	s_sub_i32 s0, s5, s0                                       // 0000000809C4: 81800005
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000809C8: BF870009
	v_mov_b32_e32 v5, s0                                       // 0000000809CC: 7E0A0200
	s_clause 0x2                                               // 0000000809D0: BF850002
	global_store_b8 v1, v3, s[6:7]                             // 0000000809D4: DC620000 00060301
	global_store_b8 v2, v4, s[6:7]                             // 0000000809DC: DC620000 00060402
	global_store_b8 v0, v5, s[6:7]                             // 0000000809E4: DC620000 00060500
	s_nop 0                                                    // 0000000809EC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000809F0: BFB60003
	s_endpgm                                                   // 0000000809F4: BFB00000
subtract_char_get_global_offset_get_num_groups_symend:
	.long 0xbf800000                                           // 0000000809F8: BF800000
	.long 0xbf800000                                           // 0000000809FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_id_get_num_groups,@function
	.size	subtract_char_get_local_id_get_num_groups, subtract_char_get_local_id_get_num_groups_symend-subtract_char_get_local_id_get_num_groups
subtract_char_get_local_id_get_num_groups:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 000000080A00: CA240080 010400FF 000003FF
	s_mov_b32 s33, 0                                           // 000000080A0C: BEA10080
	s_clause 0x1                                               // 000000080A10: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080A14: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000080A1C: DC4A0026 01000001
	s_clause 0x3                                               // 000000080A24: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080A28: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000080A30: F4080300 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000080A38: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000080A40: F4040180 F8000008
	s_lshl_b32 s1, s2, 3                                       // 000000080A48: 84018302
	s_lshl_b32 s2, s3, 2                                       // 000000080A4C: 84028203
	s_lshl_b32 s3, s4, 1                                       // 000000080A50: 84038104
	s_waitcnt vmcnt(1)                                         // 000000080A54: BF8907F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 000000080A58: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080A5C: 7C7A0480
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080A60: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080A68: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 000000080A70: BF870004
	v_cmp_ne_u16_e64 s0, 0, v3.l                               // 000000080A74: D43D0000 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080A7C: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000080A80: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 000000080A84: 7C7A0280
	s_waitcnt lgkmcnt(0)                                       // 000000080A88: BF89FC07
	v_add3_u32 v3, s8, s1, v4                                  // 000000080A8C: D6550003 04100208
	s_addc_u32 s1, s12, 0                                      // 000000080A94: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 000000080A98: BF078000
	v_sub_nc_u16 v4.l, v4.l, s1                                // 000000080A9C: D7040004 00000304
	s_addc_u32 s0, s13, 0                                      // 000000080AA4: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080AA8: BF07806A
	v_add3_u32 v1, s10, s2, v2                                 // 000000080AAC: D6550001 0408040A
	s_addc_u32 s1, s14, 0                                      // 000000080AB4: 8201800E
	v_sub_nc_u16 v2.l, v2.l, s0                                // 000000080AB8: D7040002 00000102
	v_sub_nc_u16 v5.l, v0.l, s1                                // 000000080AC0: D7040005 00000300
	v_add3_u32 v0, s5, s3, v0                                  // 000000080AC8: D6550000 04000605
	s_clause 0x2                                               // 000000080AD0: BF850002
	global_store_b8 v3, v4, s[6:7]                             // 000000080AD4: DC620000 00060403
	global_store_b8 v1, v2, s[6:7]                             // 000000080ADC: DC620000 00060201
	global_store_b8 v0, v5, s[6:7]                             // 000000080AE4: DC620000 00060500
	s_nop 0                                                    // 000000080AEC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080AF0: BFB60003
	s_endpgm                                                   // 000000080AF4: BFB00000
subtract_char_get_local_id_get_num_groups_symend:
	.long 0xbf800000                                           // 000000080AF8: BF800000
	.long 0xbf800000                                           // 000000080AFC: BF800000

	.p2align	8
	.type	subtract_char_get_group_id_get_num_groups,@function
	.size	subtract_char_get_group_id_get_num_groups, subtract_char_get_group_id_get_num_groups_symend-subtract_char_get_group_id_get_num_groups
subtract_char_get_group_id_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000080B00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000080B04: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 000000080B0C: BEA10080
	s_clause 0x1                                               // 000000080B10: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080B14: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000080B1C: DC4A0026 01000001
	s_clause 0x3                                               // 000000080B24: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000080B28: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080B30: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000080B38: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000080B40: F4040180 F8000008
	s_lshl_b32 s1, s2, 1                                       // 000000080B48: 84018102
	s_waitcnt lgkmcnt(0)                                       // 000000080B4C: BF89FC07
	s_lshl_b32 s11, s3, 4                                      // 000000080B50: 840B8403
	s_lshl_b32 s13, s4, 1                                      // 000000080B54: 840D8104
	s_waitcnt vmcnt(1)                                         // 000000080B58: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080B5C: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000080B60: 32040490
	s_waitcnt vmcnt(0)                                         // 000000080B64: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 000000080B68: D43D0000 00020280
	v_add3_u32 v1, s12, s1, v3                                 // 000000080B70: D6550001 040C020C
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080B78: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080B7C: 7C7A0480
	s_addc_u32 s8, s8, 0                                       // 000000080B80: 82088008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080B84: D6100002 02291500
	s_sub_i32 s2, s2, s8                                       // 000000080B8C: 81820802
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080B90: D6100000 02292900
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080B98: BF07806A
	v_mov_b32_e32 v3, s2                                       // 000000080B9C: 7E060202
	s_addc_u32 s1, s9, 0                                       // 000000080BA0: 82018009
	v_add3_u32 v2, s14, s11, v2                                // 000000080BA4: D6550002 0408160E
	s_sub_i32 s1, s3, s1                                       // 000000080BAC: 81810103
	s_cmp_lg_u32 s0, 0                                         // 000000080BB0: BF078000
	v_mov_b32_e32 v4, s1                                       // 000000080BB4: 7E080201
	s_addc_u32 s0, s10, 0                                      // 000000080BB8: 8200800A
	v_add3_u32 v0, s5, s13, v0                                 // 000000080BBC: D6550000 04001A05
	s_sub_i32 s0, s4, s0                                       // 000000080BC4: 81800004
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000080BC8: BF870009
	v_mov_b32_e32 v5, s0                                       // 000000080BCC: 7E0A0200
	s_clause 0x2                                               // 000000080BD0: BF850002
	global_store_b8 v1, v3, s[6:7]                             // 000000080BD4: DC620000 00060301
	global_store_b8 v2, v4, s[6:7]                             // 000000080BDC: DC620000 00060402
	global_store_b8 v0, v5, s[6:7]                             // 000000080BE4: DC620000 00060500
	s_nop 0                                                    // 000000080BEC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080BF0: BFB60003
	s_endpgm                                                   // 000000080BF4: BFB00000
subtract_char_get_group_id_get_num_groups_symend:
	.long 0xbf800000                                           // 000000080BF8: BF800000
	.long 0xbf800000                                           // 000000080BFC: BF800000

	.p2align	8
	.type	subtract_char_get_local_size_get_num_groups,@function
	.size	subtract_char_get_local_size_get_num_groups, subtract_char_get_local_size_get_num_groups_symend-subtract_char_get_local_size_get_num_groups
subtract_char_get_local_size_get_num_groups:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000080C00: F4080200 F8000010
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 000000080C08: CA240080 010400FF 000003FF
	s_add_u32 s5, s0, 16                                       // 000000080C14: 80059000
	s_waitcnt lgkmcnt(0)                                       // 000000080C18: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000080C1C: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 000000080C20: 84108102
	s_clause 0x1                                               // 000000080C24: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080C28: DC520022 02000001
	global_load_u16 v5, v1, s[0:1] offset:38                   // 000000080C30: DC4A0026 05000001
	s_lshl_b32 s17, s3, 1                                      // 000000080C38: 84118103
	s_lshl_b32 s18, s4, 2                                      // 000000080C3C: 84128204
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000080C40: F4080300 F8000038
	s_mov_b32 s33, 0                                           // 000000080C48: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000080C4C: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000080C50: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000080C54: BF870009
	s_add_u32 s6, s5, s2                                       // 000000080C58: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000080C5C: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000080C60: BF0A0903
	s_load_b64 s[2:3], s[0:1], 0x8                             // 000000080C64: F4040080 F8000008
	global_load_u8 v3, v1, s[6:7]                              // 000000080C6C: DC420000 03060001
	s_cselect_b32 s6, 14, 20                                   // 000000080C74: 9806948E
	s_waitcnt lgkmcnt(0)                                       // 000000080C78: BF89FC07
	v_add3_u32 v4, s12, s16, v4                                // 000000080C7C: D6550004 0410200C
	s_add_u32 s6, s5, s6                                       // 000000080C84: 80060605
	s_addc_u32 s7, s11, 0                                      // 000000080C88: 8207800B
	s_cmp_lt_u32 s4, s10                                       // 000000080C8C: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 000000080C90: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000080C94: BF870009
	s_add_u32 s4, s5, s4                                       // 000000080C98: 80040405
	s_addc_u32 s5, s11, 0                                      // 000000080C9C: 8205800B
	s_waitcnt vmcnt(2)                                         // 000000080CA0: BF890BF7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080CA4: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000080CA8: 32040490
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080CAC: BF07806A
	s_delay_alu instid0(VALU_DEP_1)                            // 000000080CB0: BF870001
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080CB4: 7C7A0480
	s_addc_u32 s8, s8, 0                                       // 000000080CB8: 82088008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000080CBC: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000080CC4: D6100000 02292900
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080CCC: BF07806A
	s_waitcnt vmcnt(1)                                         // 000000080CD0: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v5.l                           // 000000080CD4: 7C7A0A80
	v_add3_u32 v2, s14, s17, v2                                // 000000080CD8: D6550002 0408220E
	s_waitcnt vmcnt(0)                                         // 000000080CE0: BF8903F7
	v_subrev_nc_u32_e32 v3, s8, v3                             // 000000080CE4: 4E060608
	s_load_b32 s8, s[0:1], 0x48                                // 000000080CE8: F4000200 F8000048
	s_addc_u32 s0, s9, 0                                       // 000000080CF0: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080CF4: BF07806A
	global_store_b8 v4, v3, s[2:3]                             // 000000080CF8: DC620000 00020304
	global_load_u8 v3, v1, s[6:7]                              // 000000080D00: DC420000 03060001
	s_waitcnt lgkmcnt(0)                                       // 000000080D08: BF89FC07
	v_add3_u32 v0, s8, s18, v0                                 // 000000080D0C: D6550000 04002408
	s_waitcnt vmcnt(0)                                         // 000000080D14: BF8903F7
	v_subrev_nc_u32_e32 v3, s0, v3                             // 000000080D18: 4E060600
	s_addc_u32 s0, s10, 0                                      // 000000080D1C: 8200800A
	global_store_b8 v2, v3, s[2:3]                             // 000000080D20: DC620000 00020302
	global_load_u8 v1, v1, s[4:5]                              // 000000080D28: DC420000 01040001
	s_waitcnt vmcnt(0)                                         // 000000080D30: BF8903F7
	v_subrev_nc_u32_e32 v1, s0, v1                             // 000000080D34: 4E020200
	global_store_b8 v0, v1, s[2:3]                             // 000000080D38: DC620000 00020100
	s_nop 0                                                    // 000000080D40: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080D44: BFB60003
	s_endpgm                                                   // 000000080D48: BFB00000
subtract_char_get_local_size_get_num_groups_symend:
	.long 0xbf800000                                           // 000000080D4C: BF800000
	.long 0xbf800000                                           // 000000080D50: BF800000
	.long 0xbf800000                                           // 000000080D54: BF800000
	.long 0xbf800000                                           // 000000080D58: BF800000
	.long 0xbf800000                                           // 000000080D5C: BF800000
	.long 0xbf800000                                           // 000000080D60: BF800000
	.long 0xbf800000                                           // 000000080D64: BF800000
	.long 0xbf800000                                           // 000000080D68: BF800000
	.long 0xbf800000                                           // 000000080D6C: BF800000
	.long 0xbf800000                                           // 000000080D70: BF800000
	.long 0xbf800000                                           // 000000080D74: BF800000
	.long 0xbf800000                                           // 000000080D78: BF800000
	.long 0xbf800000                                           // 000000080D7C: BF800000
	.long 0xbf800000                                           // 000000080D80: BF800000
	.long 0xbf800000                                           // 000000080D84: BF800000
	.long 0xbf800000                                           // 000000080D88: BF800000
	.long 0xbf800000                                           // 000000080D8C: BF800000
	.long 0xbf800000                                           // 000000080D90: BF800000
	.long 0xbf800000                                           // 000000080D94: BF800000
	.long 0xbf800000                                           // 000000080D98: BF800000
	.long 0xbf800000                                           // 000000080D9C: BF800000
	.long 0xbf800000                                           // 000000080DA0: BF800000
	.long 0xbf800000                                           // 000000080DA4: BF800000
	.long 0xbf800000                                           // 000000080DA8: BF800000
	.long 0xbf800000                                           // 000000080DAC: BF800000
	.long 0xbf800000                                           // 000000080DB0: BF800000
	.long 0xbf800000                                           // 000000080DB4: BF800000
	.long 0xbf800000                                           // 000000080DB8: BF800000
	.long 0xbf800000                                           // 000000080DBC: BF800000
	.long 0xbf800000                                           // 000000080DC0: BF800000
	.long 0xbf800000                                           // 000000080DC4: BF800000
	.long 0xbf800000                                           // 000000080DC8: BF800000
	.long 0xbf800000                                           // 000000080DCC: BF800000
	.long 0xbf800000                                           // 000000080DD0: BF800000
	.long 0xbf800000                                           // 000000080DD4: BF800000
	.long 0xbf800000                                           // 000000080DD8: BF800000
	.long 0xbf800000                                           // 000000080DDC: BF800000
	.long 0xbf800000                                           // 000000080DE0: BF800000
	.long 0xbf800000                                           // 000000080DE4: BF800000
	.long 0xbf800000                                           // 000000080DE8: BF800000
	.long 0xbf800000                                           // 000000080DEC: BF800000
	.long 0xbf800000                                           // 000000080DF0: BF800000
	.long 0xbf800000                                           // 000000080DF4: BF800000
	.long 0xbf800000                                           // 000000080DF8: BF800000
	.long 0xbf800000                                           // 000000080DFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_id_get_num_groups,@function
	.size	subtract_char_get_global_id_get_num_groups, subtract_char_get_global_id_get_num_groups_symend-subtract_char_get_global_id_get_num_groups
subtract_char_get_global_id_get_num_groups:
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v4, 0x3ff, v0       // 000000080E00: CA240080 010400FF 000003FF
	v_bfe_u32 v3, v0, 20, 10                                   // 000000080E0C: D6100003 02292900
	v_bfe_u32 v0, v0, 10, 10                                   // 000000080E14: D6100000 02291500
	s_mov_b32 s33, 0                                           // 000000080E1C: BEA10080
	s_clause 0x1                                               // 000000080E20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000080E24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000080E2C: DC4A0026 01000001
	s_clause 0x3                                               // 000000080E34: BF850003
	s_load_b32 s5, s[0:1], 0x48                                // 000000080E38: F4000140 F8000048
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000080E40: F4080200 F8000038
	s_load_b128 s[12:15], s[0:1], 0x10                         // 000000080E48: F4080300 F8000010
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000080E50: F4040180 F8000008
	v_lshl_or_b32 v3, s4, 2, v3                                // 000000080E58: D6560003 040D0404
	v_lshl_or_b32 v0, s3, 1, v0                                // 000000080E60: D6560000 04010203
	v_lshl_or_b32 v4, s2, 1, v4                                // 000000080E68: D6560004 04110202
	s_waitcnt vmcnt(1)                                         // 000000080E70: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000080E74: 320A0490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000080E78: 7C7A0480
	s_waitcnt lgkmcnt(0)                                       // 000000080E7C: BF89FC07
	v_add_nc_u32_e32 v2, s5, v3                                // 000000080E80: 4A040605
	v_add_nc_u32_e32 v3, s8, v4                                // 000000080E84: 4A060808
	v_cmp_ne_u16_e64 s0, 0, v5.l                               // 000000080E88: D43D0000 00020A80
	v_add_nc_u32_e32 v5, s10, v0                               // 000000080E90: 4A0A000A
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080E94: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000080E98: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 000000080E9C: 7C7A0280
	s_addc_u32 s1, s12, 0                                      // 000000080EA0: 8201800C
	s_cmp_lg_u32 s0, 0                                         // 000000080EA4: BF078000
	v_add_co_u32 v0, s0, s6, v5                                // 000000080EA8: D7000000 00020A06
	s_delay_alu instid0(VALU_DEP_1)                            // 000000080EB0: BF870001
	v_add_co_ci_u32_e64 v1, null, s7, 0, s0                    // 000000080EB4: D5207C01 00010007
	s_addc_u32 s0, s13, 0                                      // 000000080EBC: 8200800D
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000080EC0: BF07806A
	v_subrev_nc_u32_e32 v6, s1, v3                             // 000000080EC4: 4E0C0601
	s_addc_u32 s1, s14, 0                                      // 000000080EC8: 8201800E
	v_subrev_nc_u32_e32 v5, s0, v5                             // 000000080ECC: 4E0A0A00
	v_subrev_nc_u32_e32 v7, s1, v2                             // 000000080ED0: 4E0E0401
	v_add_co_u32 v2, s0, s6, v2                                // 000000080ED4: D7000002 00020406
	s_delay_alu instid0(VALU_DEP_1)                            // 000000080EDC: BF870001
	v_add_co_ci_u32_e64 v3, null, s7, 0, s0                    // 000000080EE0: D5207C03 00010007
	s_clause 0x2                                               // 000000080EE8: BF850002
	global_store_b8 v4, v6, s[6:7]                             // 000000080EEC: DC620000 00060604
	global_store_b8 v[0:1], v5, off                            // 000000080EF4: DC620000 007C0500
	global_store_b8 v[2:3], v7, off                            // 000000080EFC: DC620000 007C0702
	s_nop 0                                                    // 000000080F04: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000080F08: BFB60003
	s_endpgm                                                   // 000000080F0C: BFB00000
subtract_char_get_global_id_get_num_groups_symend:
	.long 0xbf800000                                           // 000000080F10: BF800000
	.long 0xbf800000                                           // 000000080F14: BF800000
	.long 0xbf800000                                           // 000000080F18: BF800000
	.long 0xbf800000                                           // 000000080F1C: BF800000
	.long 0xbf800000                                           // 000000080F20: BF800000
	.long 0xbf800000                                           // 000000080F24: BF800000
	.long 0xbf800000                                           // 000000080F28: BF800000
	.long 0xbf800000                                           // 000000080F2C: BF800000
	.long 0xbf800000                                           // 000000080F30: BF800000
	.long 0xbf800000                                           // 000000080F34: BF800000
	.long 0xbf800000                                           // 000000080F38: BF800000
	.long 0xbf800000                                           // 000000080F3C: BF800000
	.long 0xbf800000                                           // 000000080F40: BF800000
	.long 0xbf800000                                           // 000000080F44: BF800000
	.long 0xbf800000                                           // 000000080F48: BF800000
	.long 0xbf800000                                           // 000000080F4C: BF800000
	.long 0xbf800000                                           // 000000080F50: BF800000
	.long 0xbf800000                                           // 000000080F54: BF800000
	.long 0xbf800000                                           // 000000080F58: BF800000
	.long 0xbf800000                                           // 000000080F5C: BF800000
	.long 0xbf800000                                           // 000000080F60: BF800000
	.long 0xbf800000                                           // 000000080F64: BF800000
	.long 0xbf800000                                           // 000000080F68: BF800000
	.long 0xbf800000                                           // 000000080F6C: BF800000
	.long 0xbf800000                                           // 000000080F70: BF800000
	.long 0xbf800000                                           // 000000080F74: BF800000
	.long 0xbf800000                                           // 000000080F78: BF800000
	.long 0xbf800000                                           // 000000080F7C: BF800000
	.long 0xbf800000                                           // 000000080F80: BF800000
	.long 0xbf800000                                           // 000000080F84: BF800000
	.long 0xbf800000                                           // 000000080F88: BF800000
	.long 0xbf800000                                           // 000000080F8C: BF800000
	.long 0xbf800000                                           // 000000080F90: BF800000
	.long 0xbf800000                                           // 000000080F94: BF800000
	.long 0xbf800000                                           // 000000080F98: BF800000
	.long 0xbf800000                                           // 000000080F9C: BF800000
	.long 0xbf800000                                           // 000000080FA0: BF800000
	.long 0xbf800000                                           // 000000080FA4: BF800000
	.long 0xbf800000                                           // 000000080FA8: BF800000
	.long 0xbf800000                                           // 000000080FAC: BF800000
	.long 0xbf800000                                           // 000000080FB0: BF800000
	.long 0xbf800000                                           // 000000080FB4: BF800000
	.long 0xbf800000                                           // 000000080FB8: BF800000
	.long 0xbf800000                                           // 000000080FBC: BF800000
	.long 0xbf800000                                           // 000000080FC0: BF800000
	.long 0xbf800000                                           // 000000080FC4: BF800000
	.long 0xbf800000                                           // 000000080FC8: BF800000
	.long 0xbf800000                                           // 000000080FCC: BF800000
	.long 0xbf800000                                           // 000000080FD0: BF800000
	.long 0xbf800000                                           // 000000080FD4: BF800000
	.long 0xbf800000                                           // 000000080FD8: BF800000
	.long 0xbf800000                                           // 000000080FDC: BF800000
	.long 0xbf800000                                           // 000000080FE0: BF800000
	.long 0xbf800000                                           // 000000080FE4: BF800000
	.long 0xbf800000                                           // 000000080FE8: BF800000
	.long 0xbf800000                                           // 000000080FEC: BF800000
	.long 0xbf800000                                           // 000000080FF0: BF800000
	.long 0xbf800000                                           // 000000080FF4: BF800000
	.long 0xbf800000                                           // 000000080FF8: BF800000
	.long 0xbf800000                                           // 000000080FFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_size_get_num_groups,@function
	.size	subtract_char_get_global_size_get_num_groups, subtract_char_get_global_size_get_num_groups_symend-subtract_char_get_global_size_get_num_groups
subtract_char_get_global_size_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000081000: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081004: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 00000008100C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081014: D6100000 02292900
	s_mov_b32 s33, 0                                           // 00000008101C: BEA10080
	s_clause 0x1                                               // 000000081020: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081024: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008102C: DC4A0026 01000001
	s_clause 0x3                                               // 000000081034: BF850003
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000081038: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000081040: F4080300 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000081048: F4000140 F8000048
	s_load_b64 s[6:7], s[0:1], null                            // 000000081050: F4040180 F8000000
	s_lshl_b32 s0, s2, 4                                       // 000000081058: 84008402
	s_lshl_b32 s1, s3, 1                                       // 00000008105C: 84018103
	s_lshl_b32 s2, s4, 1                                       // 000000081060: 84028104
	s_waitcnt lgkmcnt(0)                                       // 000000081064: BF89FC07
	s_lshl_b32 s3, s8, 4                                       // 000000081068: 84038408
	v_add3_u32 v3, s12, s0, v3                                 // 00000008106C: D6550003 040C000C
	s_lshl_b32 s4, s9, 1                                       // 000000081074: 84048109
	s_lshl_b32 s11, s10, 1                                     // 000000081078: 840B810A
	v_add3_u32 v4, s14, s1, v4                                 // 00000008107C: D6550004 0410020E
	v_add3_u32 v0, s5, s2, v0                                  // 000000081084: D6550000 04000405
	s_waitcnt vmcnt(1)                                         // 00000008108C: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000081090: 320A0490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081094: 7C7A0480
	v_add_nc_u32_e32 v2, s3, v2                                // 000000081098: 4A040403
	s_waitcnt vmcnt(0)                                         // 00000008109C: BF8903F7
	v_add_nc_u32_e32 v6, s11, v1                               // 0000000810A0: 4A0C020B
	v_cmp_ne_u16_e64 s0, 0, v5.l                               // 0000000810A4: D43D0000 00020A80
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000810AC: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 0000000810B0: 7C7A0280
	s_addc_u32 s1, s8, 0                                       // 0000000810B4: 82018008
	v_add_nc_u32_e32 v1, s4, v5                                // 0000000810B8: 4A020A04
	s_cmp_lg_u32 s0, 0                                         // 0000000810BC: BF078000
	v_subrev_nc_u32_e32 v2, s1, v2                             // 0000000810C0: 4E040401
	s_addc_u32 s0, s9, 0                                       // 0000000810C4: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000810C8: BF07806A
	v_subrev_nc_u32_e32 v1, s0, v1                             // 0000000810CC: 4E020200
	s_addc_u32 s1, s10, 0                                      // 0000000810D0: 8201800A
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000810D4: BF870009
	v_subrev_nc_u32_e32 v5, s1, v6                             // 0000000810D8: 4E0A0C01
	s_clause 0x2                                               // 0000000810DC: BF850002
	global_store_b8 v3, v2, s[6:7]                             // 0000000810E0: DC620000 00060203
	global_store_b8 v4, v1, s[6:7]                             // 0000000810E8: DC620000 00060104
	global_store_b8 v0, v5, s[6:7]                             // 0000000810F0: DC620000 00060500
	s_nop 0                                                    // 0000000810F8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000810FC: BFB60003
	s_endpgm                                                   // 000000081100: BFB00000
subtract_char_get_global_size_get_num_groups_symend:
	.long 0xbf800000                                           // 000000081104: BF800000
	.long 0xbf800000                                           // 000000081108: BF800000
	.long 0xbf800000                                           // 00000008110C: BF800000
	.long 0xbf800000                                           // 000000081110: BF800000
	.long 0xbf800000                                           // 000000081114: BF800000
	.long 0xbf800000                                           // 000000081118: BF800000
	.long 0xbf800000                                           // 00000008111C: BF800000
	.long 0xbf800000                                           // 000000081120: BF800000
	.long 0xbf800000                                           // 000000081124: BF800000
	.long 0xbf800000                                           // 000000081128: BF800000
	.long 0xbf800000                                           // 00000008112C: BF800000
	.long 0xbf800000                                           // 000000081130: BF800000
	.long 0xbf800000                                           // 000000081134: BF800000
	.long 0xbf800000                                           // 000000081138: BF800000
	.long 0xbf800000                                           // 00000008113C: BF800000
	.long 0xbf800000                                           // 000000081140: BF800000
	.long 0xbf800000                                           // 000000081144: BF800000
	.long 0xbf800000                                           // 000000081148: BF800000
	.long 0xbf800000                                           // 00000008114C: BF800000
	.long 0xbf800000                                           // 000000081150: BF800000
	.long 0xbf800000                                           // 000000081154: BF800000
	.long 0xbf800000                                           // 000000081158: BF800000
	.long 0xbf800000                                           // 00000008115C: BF800000
	.long 0xbf800000                                           // 000000081160: BF800000
	.long 0xbf800000                                           // 000000081164: BF800000
	.long 0xbf800000                                           // 000000081168: BF800000
	.long 0xbf800000                                           // 00000008116C: BF800000
	.long 0xbf800000                                           // 000000081170: BF800000
	.long 0xbf800000                                           // 000000081174: BF800000
	.long 0xbf800000                                           // 000000081178: BF800000
	.long 0xbf800000                                           // 00000008117C: BF800000
	.long 0xbf800000                                           // 000000081180: BF800000
	.long 0xbf800000                                           // 000000081184: BF800000
	.long 0xbf800000                                           // 000000081188: BF800000
	.long 0xbf800000                                           // 00000008118C: BF800000
	.long 0xbf800000                                           // 000000081190: BF800000
	.long 0xbf800000                                           // 000000081194: BF800000
	.long 0xbf800000                                           // 000000081198: BF800000
	.long 0xbf800000                                           // 00000008119C: BF800000
	.long 0xbf800000                                           // 0000000811A0: BF800000
	.long 0xbf800000                                           // 0000000811A4: BF800000
	.long 0xbf800000                                           // 0000000811A8: BF800000
	.long 0xbf800000                                           // 0000000811AC: BF800000
	.long 0xbf800000                                           // 0000000811B0: BF800000
	.long 0xbf800000                                           // 0000000811B4: BF800000
	.long 0xbf800000                                           // 0000000811B8: BF800000
	.long 0xbf800000                                           // 0000000811BC: BF800000
	.long 0xbf800000                                           // 0000000811C0: BF800000
	.long 0xbf800000                                           // 0000000811C4: BF800000
	.long 0xbf800000                                           // 0000000811C8: BF800000
	.long 0xbf800000                                           // 0000000811CC: BF800000
	.long 0xbf800000                                           // 0000000811D0: BF800000
	.long 0xbf800000                                           // 0000000811D4: BF800000
	.long 0xbf800000                                           // 0000000811D8: BF800000
	.long 0xbf800000                                           // 0000000811DC: BF800000
	.long 0xbf800000                                           // 0000000811E0: BF800000
	.long 0xbf800000                                           // 0000000811E4: BF800000
	.long 0xbf800000                                           // 0000000811E8: BF800000
	.long 0xbf800000                                           // 0000000811EC: BF800000
	.long 0xbf800000                                           // 0000000811F0: BF800000
	.long 0xbf800000                                           // 0000000811F4: BF800000
	.long 0xbf800000                                           // 0000000811F8: BF800000
	.long 0xbf800000                                           // 0000000811FC: BF800000

	.p2align	8
	.type	subtract_char_get_num_groups_get_num_groups,@function
	.size	subtract_char_get_num_groups_get_num_groups, subtract_char_get_num_groups_get_num_groups_symend-subtract_char_get_num_groups_get_num_groups
subtract_char_get_num_groups_get_num_groups:
	s_clause 0x2                                               // 000000081200: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000081204: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 00000008120C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000081214: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 00000008121C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 000000081228: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081230: D6100000 02292900
	s_lshl_b32 s2, s2, 1                                       // 000000081238: 84028102
	s_lshl_b32 s3, s3, 1                                       // 00000008123C: 84038103
	s_lshl_b32 s4, s4, 2                                       // 000000081240: 84048204
	s_mov_b32 s33, 0                                           // 000000081244: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000081248: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 00000008124C: D6550002 04080408
	v_add3_u32 v3, s10, s3, v3                                 // 000000081254: D6550003 040C060A
	v_add3_u32 v0, s5, s4, v0                                  // 00000008125C: D6550000 04000805
	s_clause 0x2                                               // 000000081264: BF850002
	global_store_b8 v2, v1, s[0:1]                             // 000000081268: DC620000 00000102
	global_store_b8 v3, v1, s[0:1]                             // 000000081270: DC620000 00000103
	global_store_b8 v0, v1, s[0:1]                             // 000000081278: DC620000 00000100
	s_nop 0                                                    // 000000081280: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081284: BFB60003
	s_endpgm                                                   // 000000081288: BFB00000
subtract_char_get_num_groups_get_num_groups_symend:
	.long 0xbf800000                                           // 00000008128C: BF800000
	.long 0xbf800000                                           // 000000081290: BF800000
	.long 0xbf800000                                           // 000000081294: BF800000
	.long 0xbf800000                                           // 000000081298: BF800000
	.long 0xbf800000                                           // 00000008129C: BF800000
	.long 0xbf800000                                           // 0000000812A0: BF800000
	.long 0xbf800000                                           // 0000000812A4: BF800000
	.long 0xbf800000                                           // 0000000812A8: BF800000
	.long 0xbf800000                                           // 0000000812AC: BF800000
	.long 0xbf800000                                           // 0000000812B0: BF800000
	.long 0xbf800000                                           // 0000000812B4: BF800000
	.long 0xbf800000                                           // 0000000812B8: BF800000
	.long 0xbf800000                                           // 0000000812BC: BF800000
	.long 0xbf800000                                           // 0000000812C0: BF800000
	.long 0xbf800000                                           // 0000000812C4: BF800000
	.long 0xbf800000                                           // 0000000812C8: BF800000
	.long 0xbf800000                                           // 0000000812CC: BF800000
	.long 0xbf800000                                           // 0000000812D0: BF800000
	.long 0xbf800000                                           // 0000000812D4: BF800000
	.long 0xbf800000                                           // 0000000812D8: BF800000
	.long 0xbf800000                                           // 0000000812DC: BF800000
	.long 0xbf800000                                           // 0000000812E0: BF800000
	.long 0xbf800000                                           // 0000000812E4: BF800000
	.long 0xbf800000                                           // 0000000812E8: BF800000
	.long 0xbf800000                                           // 0000000812EC: BF800000
	.long 0xbf800000                                           // 0000000812F0: BF800000
	.long 0xbf800000                                           // 0000000812F4: BF800000
	.long 0xbf800000                                           // 0000000812F8: BF800000
	.long 0xbf800000                                           // 0000000812FC: BF800000

	.p2align	8
	.type	subtract_char_get_work_dim_get_num_groups,@function
	.size	subtract_char_get_work_dim_get_num_groups, subtract_char_get_work_dim_get_num_groups_symend-subtract_char_get_work_dim_get_num_groups
subtract_char_get_work_dim_get_num_groups:
	v_mov_b32_e32 v1, 0                                        // 000000081300: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081304: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000008130C: BEA10080
	s_clause 0x1                                               // 000000081310: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081314: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 00000008131C: DC4A0026 01000001
	s_clause 0x2                                               // 000000081324: BF850002
	s_load_b32 s5, s[0:1], 0x50                                // 000000081328: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000081330: F4080200 F8000010
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000081338: F4080300 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000081340: BF89FC07
	s_clause 0x1                                               // 000000081344: BF850001
	s_load_b32 s11, s[0:1], 0x48                               // 000000081348: F40002C0 F8000048
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000081350: F4040180 F8000008
	s_lshl_b32 s1, s2, 1                                       // 000000081358: 84018102
	s_lshl_b32 s2, s3, 1                                       // 00000008135C: 84028103
	s_lshl_b32 s3, s4, 2                                       // 000000081360: 84038204
	s_and_b32 s4, s5, 0xffff                                   // 000000081364: 8B04FF05 0000FFFF
	s_waitcnt vmcnt(1)                                         // 00000008136C: BF8907F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081370: 7C7A0480
	v_lshrrev_b32_e32 v2, 16, v2                               // 000000081374: 32040490
	s_waitcnt vmcnt(0)                                         // 000000081378: BF8903F7
	v_cmp_ne_u16_e64 s0, 0, v1.l                               // 00000008137C: D43D0000 00020280
	v_add3_u32 v1, s12, s1, v3                                 // 000000081384: D6550001 040C020C
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000008138C: BF07806A
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081390: 7C7A0480
	s_addc_u32 s5, s8, 0                                       // 000000081394: 82058008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000081398: D6100002 02291500
	s_sub_i32 s5, s4, s5                                       // 0000000813A0: 81850504
	v_bfe_u32 v0, v0, 20, 10                                   // 0000000813A4: D6100000 02292900
	s_cmp_lg_u32 vcc_lo, 0                                     // 0000000813AC: BF07806A
	v_mov_b32_e32 v3, s5                                       // 0000000813B0: 7E060205
	s_addc_u32 s1, s9, 0                                       // 0000000813B4: 82018009
	v_add3_u32 v2, s14, s2, v2                                 // 0000000813B8: D6550002 0408040E
	s_sub_i32 s1, s4, s1                                       // 0000000813C0: 81810104
	s_cmp_lg_u32 s0, 0                                         // 0000000813C4: BF078000
	v_mov_b32_e32 v4, s1                                       // 0000000813C8: 7E080201
	s_addc_u32 s0, s10, 0                                      // 0000000813CC: 8200800A
	s_waitcnt lgkmcnt(0)                                       // 0000000813D0: BF89FC07
	v_add3_u32 v0, s11, s3, v0                                 // 0000000813D4: D6550000 0400060B
	s_sub_i32 s0, s4, s0                                       // 0000000813DC: 81800004
	s_delay_alu instid0(SALU_CYCLE_1)                          // 0000000813E0: BF870009
	v_mov_b32_e32 v5, s0                                       // 0000000813E4: 7E0A0200
	s_clause 0x2                                               // 0000000813E8: BF850002
	global_store_b8 v1, v3, s[6:7]                             // 0000000813EC: DC620000 00060301
	global_store_b8 v2, v4, s[6:7]                             // 0000000813F4: DC620000 00060402
	global_store_b8 v0, v5, s[6:7]                             // 0000000813FC: DC620000 00060500
	s_nop 0                                                    // 000000081404: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081408: BFB60003
	s_endpgm                                                   // 00000008140C: BFB00000
subtract_char_get_work_dim_get_num_groups_symend:
	.long 0xbf800000                                           // 000000081410: BF800000
	.long 0xbf800000                                           // 000000081414: BF800000
	.long 0xbf800000                                           // 000000081418: BF800000
	.long 0xbf800000                                           // 00000008141C: BF800000
	.long 0xbf800000                                           // 000000081420: BF800000
	.long 0xbf800000                                           // 000000081424: BF800000
	.long 0xbf800000                                           // 000000081428: BF800000
	.long 0xbf800000                                           // 00000008142C: BF800000
	.long 0xbf800000                                           // 000000081430: BF800000
	.long 0xbf800000                                           // 000000081434: BF800000
	.long 0xbf800000                                           // 000000081438: BF800000
	.long 0xbf800000                                           // 00000008143C: BF800000
	.long 0xbf800000                                           // 000000081440: BF800000
	.long 0xbf800000                                           // 000000081444: BF800000
	.long 0xbf800000                                           // 000000081448: BF800000
	.long 0xbf800000                                           // 00000008144C: BF800000
	.long 0xbf800000                                           // 000000081450: BF800000
	.long 0xbf800000                                           // 000000081454: BF800000
	.long 0xbf800000                                           // 000000081458: BF800000
	.long 0xbf800000                                           // 00000008145C: BF800000
	.long 0xbf800000                                           // 000000081460: BF800000
	.long 0xbf800000                                           // 000000081464: BF800000
	.long 0xbf800000                                           // 000000081468: BF800000
	.long 0xbf800000                                           // 00000008146C: BF800000
	.long 0xbf800000                                           // 000000081470: BF800000
	.long 0xbf800000                                           // 000000081474: BF800000
	.long 0xbf800000                                           // 000000081478: BF800000
	.long 0xbf800000                                           // 00000008147C: BF800000
	.long 0xbf800000                                           // 000000081480: BF800000
	.long 0xbf800000                                           // 000000081484: BF800000
	.long 0xbf800000                                           // 000000081488: BF800000
	.long 0xbf800000                                           // 00000008148C: BF800000
	.long 0xbf800000                                           // 000000081490: BF800000
	.long 0xbf800000                                           // 000000081494: BF800000
	.long 0xbf800000                                           // 000000081498: BF800000
	.long 0xbf800000                                           // 00000008149C: BF800000
	.long 0xbf800000                                           // 0000000814A0: BF800000
	.long 0xbf800000                                           // 0000000814A4: BF800000
	.long 0xbf800000                                           // 0000000814A8: BF800000
	.long 0xbf800000                                           // 0000000814AC: BF800000
	.long 0xbf800000                                           // 0000000814B0: BF800000
	.long 0xbf800000                                           // 0000000814B4: BF800000
	.long 0xbf800000                                           // 0000000814B8: BF800000
	.long 0xbf800000                                           // 0000000814BC: BF800000
	.long 0xbf800000                                           // 0000000814C0: BF800000
	.long 0xbf800000                                           // 0000000814C4: BF800000
	.long 0xbf800000                                           // 0000000814C8: BF800000
	.long 0xbf800000                                           // 0000000814CC: BF800000
	.long 0xbf800000                                           // 0000000814D0: BF800000
	.long 0xbf800000                                           // 0000000814D4: BF800000
	.long 0xbf800000                                           // 0000000814D8: BF800000
	.long 0xbf800000                                           // 0000000814DC: BF800000
	.long 0xbf800000                                           // 0000000814E0: BF800000
	.long 0xbf800000                                           // 0000000814E4: BF800000
	.long 0xbf800000                                           // 0000000814E8: BF800000
	.long 0xbf800000                                           // 0000000814EC: BF800000
	.long 0xbf800000                                           // 0000000814F0: BF800000
	.long 0xbf800000                                           // 0000000814F4: BF800000
	.long 0xbf800000                                           // 0000000814F8: BF800000
	.long 0xbf800000                                           // 0000000814FC: BF800000

	.p2align	8
	.type	subtract_char_x_get_work_dim,@function
	.size	subtract_char_x_get_work_dim, subtract_char_x_get_work_dim_symend-subtract_char_x_get_work_dim
subtract_char_x_get_work_dim:
	s_clause 0x4                                               // 000000081500: BF850004
	s_load_b32 s5, s[0:1], 0x8                                 // 000000081504: F4000140 F8000008
	s_load_b32 s6, s[0:1], 0x50                                // 00000008150C: F4000180 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000081514: F4080200 F8000038
	s_load_b32 s7, s[0:1], 0x48                                // 00000008151C: F40001C0 F8000048
	s_load_b64 s[0:1], s[0:1], null                            // 000000081524: F4040000 F8000000
	v_and_b32_e32 v1, 0x3ff, v0                                // 00000008152C: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000081534: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 00000008153C: D6100000 02292900
	s_lshl_b32 s2, s2, 4                                       // 000000081544: 84028402
	s_lshl_b32 s3, s3, 1                                       // 000000081548: 84038103
	s_lshl_b32 s4, s4, 1                                       // 00000008154C: 84048104
	s_mov_b32 s33, 0                                           // 000000081550: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000081554: BF89FC07
	s_sub_i32 s5, s5, s6                                       // 000000081558: 81850605
	v_add3_u32 v1, s8, s2, v1                                  // 00000008155C: D6550001 04040408
	v_mov_b32_e32 v3, s5                                       // 000000081564: 7E060205
	v_add3_u32 v2, s10, s3, v2                                 // 000000081568: D6550002 0408060A
	v_add3_u32 v0, s7, s4, v0                                  // 000000081570: D6550000 04000807
	s_clause 0x2                                               // 000000081578: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 00000008157C: DC620000 00000301
	global_store_b8 v2, v3, s[0:1]                             // 000000081584: DC620000 00000302
	global_store_b8 v0, v3, s[0:1]                             // 00000008158C: DC620000 00000300
	s_nop 0                                                    // 000000081594: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081598: BFB60003
	s_endpgm                                                   // 00000008159C: BFB00000
subtract_char_x_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000815A0: BF800000
	.long 0xbf800000                                           // 0000000815A4: BF800000
	.long 0xbf800000                                           // 0000000815A8: BF800000
	.long 0xbf800000                                           // 0000000815AC: BF800000
	.long 0xbf800000                                           // 0000000815B0: BF800000
	.long 0xbf800000                                           // 0000000815B4: BF800000
	.long 0xbf800000                                           // 0000000815B8: BF800000
	.long 0xbf800000                                           // 0000000815BC: BF800000
	.long 0xbf800000                                           // 0000000815C0: BF800000
	.long 0xbf800000                                           // 0000000815C4: BF800000
	.long 0xbf800000                                           // 0000000815C8: BF800000
	.long 0xbf800000                                           // 0000000815CC: BF800000
	.long 0xbf800000                                           // 0000000815D0: BF800000
	.long 0xbf800000                                           // 0000000815D4: BF800000
	.long 0xbf800000                                           // 0000000815D8: BF800000
	.long 0xbf800000                                           // 0000000815DC: BF800000
	.long 0xbf800000                                           // 0000000815E0: BF800000
	.long 0xbf800000                                           // 0000000815E4: BF800000
	.long 0xbf800000                                           // 0000000815E8: BF800000
	.long 0xbf800000                                           // 0000000815EC: BF800000
	.long 0xbf800000                                           // 0000000815F0: BF800000
	.long 0xbf800000                                           // 0000000815F4: BF800000
	.long 0xbf800000                                           // 0000000815F8: BF800000
	.long 0xbf800000                                           // 0000000815FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_offset_get_work_dim,@function
	.size	subtract_char_get_global_offset_get_work_dim, subtract_char_get_global_offset_get_work_dim_symend-subtract_char_get_global_offset_get_work_dim
subtract_char_get_global_offset_get_work_dim:
	s_clause 0x3                                               // 000000081600: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000081604: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000008160C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 000000081614: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008161C: F4040000 F8000008
	v_bfe_u32 v2, v0, 10, 10                                   // 000000081624: D6100002 02291500
	s_lshl_b32 s3, s3, 4                                       // 00000008162C: 84038403
	s_lshl_b32 s2, s2, 1                                       // 000000081630: 84028102
	s_lshl_b32 s4, s4, 1                                       // 000000081634: 84048104
	s_mov_b32 s33, 0                                           // 000000081638: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000008163C: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 000000081640: 8B05FF05 0000FFFF
	v_add3_u32 v2, s10, s3, v2                                 // 000000081648: D6550002 0408060A
	s_sub_i32 s3, s10, s5                                      // 000000081650: 8183050A
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000081654: BF870129
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 000000081658: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081664: D6100000 02292900
	v_add3_u32 v1, s8, s2, v1                                  // 00000008166C: D6550001 04040408
	s_sub_i32 s2, s8, s5                                       // 000000081674: 81820508
	s_delay_alu instid0(VALU_DEP_2)                            // 000000081678: BF870002
	v_add3_u32 v0, s6, s4, v0                                  // 00000008167C: D6550000 04000806
	s_sub_i32 s4, s6, s5                                       // 000000081684: 81840506
	v_mov_b32_e32 v3, s2                                       // 000000081688: 7E060202
	v_mov_b32_e32 v5, s4                                       // 00000008168C: 7E0A0204
	s_clause 0x2                                               // 000000081690: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 000000081694: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 00000008169C: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 0000000816A4: DC620000 00000500
	s_nop 0                                                    // 0000000816AC: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000816B0: BFB60003
	s_endpgm                                                   // 0000000816B4: BFB00000
subtract_char_get_global_offset_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000816B8: BF800000
	.long 0xbf800000                                           // 0000000816BC: BF800000
	.long 0xbf800000                                           // 0000000816C0: BF800000
	.long 0xbf800000                                           // 0000000816C4: BF800000
	.long 0xbf800000                                           // 0000000816C8: BF800000
	.long 0xbf800000                                           // 0000000816CC: BF800000
	.long 0xbf800000                                           // 0000000816D0: BF800000
	.long 0xbf800000                                           // 0000000816D4: BF800000
	.long 0xbf800000                                           // 0000000816D8: BF800000
	.long 0xbf800000                                           // 0000000816DC: BF800000
	.long 0xbf800000                                           // 0000000816E0: BF800000
	.long 0xbf800000                                           // 0000000816E4: BF800000
	.long 0xbf800000                                           // 0000000816E8: BF800000
	.long 0xbf800000                                           // 0000000816EC: BF800000
	.long 0xbf800000                                           // 0000000816F0: BF800000
	.long 0xbf800000                                           // 0000000816F4: BF800000
	.long 0xbf800000                                           // 0000000816F8: BF800000
	.long 0xbf800000                                           // 0000000816FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_id_get_work_dim,@function
	.size	subtract_char_get_local_id_get_work_dim, subtract_char_get_local_id_get_work_dim_symend-subtract_char_get_local_id_get_work_dim
subtract_char_get_local_id_get_work_dim:
	s_clause 0x3                                               // 000000081700: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000081704: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000008170C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 000000081714: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008171C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000081724: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008172C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081734: D6100000 02292900
	s_lshl_b32 s2, s2, 3                                       // 00000008173C: 84028302
	s_lshl_b32 s3, s3, 2                                       // 000000081740: 84038203
	s_lshl_b32 s4, s4, 1                                       // 000000081744: 84048104
	s_mov_b32 s33, 0                                           // 000000081748: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 00000008174C: BF89FC07
	s_and_b32 s5, s5, 0xffff                                   // 000000081750: 8B05FF05 0000FFFF
	v_add3_u32 v3, s8, s2, v1                                  // 000000081758: D6550003 04040408
	v_subrev_nc_u32_e32 v1, s5, v1                             // 000000081760: 4E020205
	v_add3_u32 v4, s10, s3, v2                                 // 000000081764: D6550004 0408060A
	v_subrev_nc_u32_e32 v2, s5, v2                             // 00000008176C: 4E040405
	v_add3_u32 v5, s6, s4, v0                                  // 000000081770: D6550005 04000806
	v_subrev_nc_u32_e32 v0, s5, v0                             // 000000081778: 4E000005
	s_clause 0x2                                               // 00000008177C: BF850002
	global_store_b8 v3, v1, s[0:1]                             // 000000081780: DC620000 00000103
	global_store_b8 v4, v2, s[0:1]                             // 000000081788: DC620000 00000204
	global_store_b8 v5, v0, s[0:1]                             // 000000081790: DC620000 00000005
	s_nop 0                                                    // 000000081798: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008179C: BFB60003
	s_endpgm                                                   // 0000000817A0: BFB00000
subtract_char_get_local_id_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000817A4: BF800000
	.long 0xbf800000                                           // 0000000817A8: BF800000
	.long 0xbf800000                                           // 0000000817AC: BF800000
	.long 0xbf800000                                           // 0000000817B0: BF800000
	.long 0xbf800000                                           // 0000000817B4: BF800000
	.long 0xbf800000                                           // 0000000817B8: BF800000
	.long 0xbf800000                                           // 0000000817BC: BF800000
	.long 0xbf800000                                           // 0000000817C0: BF800000
	.long 0xbf800000                                           // 0000000817C4: BF800000
	.long 0xbf800000                                           // 0000000817C8: BF800000
	.long 0xbf800000                                           // 0000000817CC: BF800000
	.long 0xbf800000                                           // 0000000817D0: BF800000
	.long 0xbf800000                                           // 0000000817D4: BF800000
	.long 0xbf800000                                           // 0000000817D8: BF800000
	.long 0xbf800000                                           // 0000000817DC: BF800000
	.long 0xbf800000                                           // 0000000817E0: BF800000
	.long 0xbf800000                                           // 0000000817E4: BF800000
	.long 0xbf800000                                           // 0000000817E8: BF800000
	.long 0xbf800000                                           // 0000000817EC: BF800000
	.long 0xbf800000                                           // 0000000817F0: BF800000
	.long 0xbf800000                                           // 0000000817F4: BF800000
	.long 0xbf800000                                           // 0000000817F8: BF800000
	.long 0xbf800000                                           // 0000000817FC: BF800000

	.p2align	8
	.type	subtract_char_get_group_id_get_work_dim,@function
	.size	subtract_char_get_group_id_get_work_dim, subtract_char_get_group_id_get_work_dim_symend-subtract_char_get_group_id_get_work_dim
subtract_char_get_group_id_get_work_dim:
	s_clause 0x3                                               // 000000081800: BF850003
	s_load_b32 s5, s[0:1], 0x50                                // 000000081804: F4000140 F8000050
	s_load_b128 s[8:11], s[0:1], 0x38                          // 00000008180C: F4080200 F8000038
	s_load_b32 s6, s[0:1], 0x48                                // 000000081814: F4000180 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008181C: F4040000 F8000008
	s_waitcnt lgkmcnt(0)                                       // 000000081824: BF89FC07
	s_lshl_b32 s9, s3, 4                                       // 000000081828: 84098403
	v_bfe_u32 v2, v0, 10, 10                                   // 00000008182C: D6100002 02291500
	s_lshl_b32 s7, s2, 1                                       // 000000081834: 84078102
	s_lshl_b32 s11, s4, 1                                      // 000000081838: 840B8104
	s_mov_b32 s33, 0                                           // 00000008183C: BEA10080
	s_and_b32 s5, s5, 0xffff                                   // 000000081840: 8B05FF05 0000FFFF
	v_add3_u32 v2, s10, s9, v2                                 // 000000081848: D6550002 0408120A
	s_sub_i32 s3, s3, s5                                       // 000000081850: 81830503
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(VALU_DEP_2)// 000000081854: BF870149
	v_dual_mov_b32 v4, s3 :: v_dual_and_b32 v1, 0x3ff, v0      // 000000081858: CA240003 040000FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081864: D6100000 02292900
	s_sub_i32 s2, s2, s5                                       // 00000008186C: 81820502
	s_sub_i32 s4, s4, s5                                       // 000000081870: 81840504
	v_add3_u32 v1, s8, s7, v1                                  // 000000081874: D6550001 04040E08
	v_mov_b32_e32 v3, s2                                       // 00000008187C: 7E060202
	v_add3_u32 v0, s6, s11, v0                                 // 000000081880: D6550000 04001606
	v_mov_b32_e32 v5, s4                                       // 000000081888: 7E0A0204
	s_clause 0x2                                               // 00000008188C: BF850002
	global_store_b8 v1, v3, s[0:1]                             // 000000081890: DC620000 00000301
	global_store_b8 v2, v4, s[0:1]                             // 000000081898: DC620000 00000402
	global_store_b8 v0, v5, s[0:1]                             // 0000000818A0: DC620000 00000500
	s_nop 0                                                    // 0000000818A8: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 0000000818AC: BFB60003
	s_endpgm                                                   // 0000000818B0: BFB00000
subtract_char_get_group_id_get_work_dim_symend:
	.long 0xbf800000                                           // 0000000818B4: BF800000
	.long 0xbf800000                                           // 0000000818B8: BF800000
	.long 0xbf800000                                           // 0000000818BC: BF800000
	.long 0xbf800000                                           // 0000000818C0: BF800000
	.long 0xbf800000                                           // 0000000818C4: BF800000
	.long 0xbf800000                                           // 0000000818C8: BF800000
	.long 0xbf800000                                           // 0000000818CC: BF800000
	.long 0xbf800000                                           // 0000000818D0: BF800000
	.long 0xbf800000                                           // 0000000818D4: BF800000
	.long 0xbf800000                                           // 0000000818D8: BF800000
	.long 0xbf800000                                           // 0000000818DC: BF800000
	.long 0xbf800000                                           // 0000000818E0: BF800000
	.long 0xbf800000                                           // 0000000818E4: BF800000
	.long 0xbf800000                                           // 0000000818E8: BF800000
	.long 0xbf800000                                           // 0000000818EC: BF800000
	.long 0xbf800000                                           // 0000000818F0: BF800000
	.long 0xbf800000                                           // 0000000818F4: BF800000
	.long 0xbf800000                                           // 0000000818F8: BF800000
	.long 0xbf800000                                           // 0000000818FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_size_get_work_dim,@function
	.size	subtract_char_get_local_size_get_work_dim, subtract_char_get_local_size_get_work_dim_symend-subtract_char_get_local_size_get_work_dim
subtract_char_get_local_size_get_work_dim:
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000081900: F4080200 F8000010
	s_add_u32 s5, s0, 16                                       // 000000081908: 80059000
	s_waitcnt lgkmcnt(0)                                       // 00000008190C: BF89FC07
	s_addc_u32 s11, s1, 0                                      // 000000081910: 820B8001
	s_lshl_b32 s16, s2, 1                                      // 000000081914: 84108102
	s_lshl_b32 s17, s3, 1                                      // 000000081918: 84118103
	s_lshl_b32 s18, s4, 2                                      // 00000008191C: 84128204
	v_mov_b32_e32 v1, 0                                        // 000000081920: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081924: 360600FF 000003FF
	s_mov_b32 s33, 0                                           // 00000008192C: BEA10080
	s_cmp_lt_u32 s2, s8                                        // 000000081930: BF0A0802
	s_cselect_b32 s2, 12, 18                                   // 000000081934: 9802928C
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000081938: BF870009
	s_add_u32 s6, s5, s2                                       // 00000008193C: 80060205
	s_addc_u32 s7, s11, 0                                      // 000000081940: 8207800B
	s_cmp_lt_u32 s3, s9                                        // 000000081944: BF0A0903
	global_load_u16 v2, v1, s[6:7]                             // 000000081948: DC4A0000 02060001
	s_clause 0x2                                               // 000000081950: BF850002
	s_load_b32 s8, s[0:1], 0x50                                // 000000081954: F4000200 F8000050
	s_load_b128 s[12:15], s[0:1], 0x38                         // 00000008195C: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000081964: F4040180 F8000008
	s_cselect_b32 s2, 14, 20                                   // 00000008196C: 9802948E
	s_load_b32 s0, s[0:1], 0x48                                // 000000081970: F4000000 F8000048
	s_add_u32 s2, s5, s2                                       // 000000081978: 80020205
	s_addc_u32 s3, s11, 0                                      // 00000008197C: 8203800B
	s_cmp_lt_u32 s4, s10                                       // 000000081980: BF0A0A04
	s_cselect_b32 s4, 16, 22                                   // 000000081984: 98049690
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000081988: BF870009
	s_add_u32 s4, s5, s4                                       // 00000008198C: 80040405
	s_addc_u32 s5, s11, 0                                      // 000000081990: 8205800B
	s_waitcnt lgkmcnt(0)                                       // 000000081994: BF89FC07
	s_and_b32 s8, s8, 0xffff                                   // 000000081998: 8B08FF08 0000FFFF
	v_add3_u32 v3, s12, s16, v3                                // 0000000819A0: D6550003 040C200C
	s_waitcnt vmcnt(0)                                         // 0000000819A8: BF8903F7
	v_subrev_nc_u32_e32 v2, s8, v2                             // 0000000819AC: 4E040408
	global_store_b8 v3, v2, s[6:7]                             // 0000000819B0: DC620000 00060203
	global_load_u16 v2, v1, s[2:3]                             // 0000000819B8: DC4A0000 02020001
	v_bfe_u32 v3, v0, 10, 10                                   // 0000000819C0: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 0000000819C8: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 0000000819D0: BF870112
	v_add3_u32 v3, s14, s17, v3                                // 0000000819D4: D6550003 040C220E
	v_add3_u32 v0, s0, s18, v0                                 // 0000000819DC: D6550000 04002400
	s_waitcnt vmcnt(0)                                         // 0000000819E4: BF8903F7
	v_subrev_nc_u32_e32 v2, s8, v2                             // 0000000819E8: 4E040408
	global_store_b8 v3, v2, s[6:7]                             // 0000000819EC: DC620000 00060203
	global_load_u8 v1, v1, s[4:5]                              // 0000000819F4: DC420000 01040001
	s_waitcnt vmcnt(0)                                         // 0000000819FC: BF8903F7
	v_subrev_nc_u32_e32 v1, s8, v1                             // 000000081A00: 4E020208
	global_store_b8 v0, v1, s[6:7]                             // 000000081A04: DC620000 00060100
	s_nop 0                                                    // 000000081A0C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081A10: BFB60003
	s_endpgm                                                   // 000000081A14: BFB00000
subtract_char_get_local_size_get_work_dim_symend:
	.long 0xbf800000                                           // 000000081A18: BF800000
	.long 0xbf800000                                           // 000000081A1C: BF800000
	.long 0xbf800000                                           // 000000081A20: BF800000
	.long 0xbf800000                                           // 000000081A24: BF800000
	.long 0xbf800000                                           // 000000081A28: BF800000
	.long 0xbf800000                                           // 000000081A2C: BF800000
	.long 0xbf800000                                           // 000000081A30: BF800000
	.long 0xbf800000                                           // 000000081A34: BF800000
	.long 0xbf800000                                           // 000000081A38: BF800000
	.long 0xbf800000                                           // 000000081A3C: BF800000
	.long 0xbf800000                                           // 000000081A40: BF800000
	.long 0xbf800000                                           // 000000081A44: BF800000
	.long 0xbf800000                                           // 000000081A48: BF800000
	.long 0xbf800000                                           // 000000081A4C: BF800000
	.long 0xbf800000                                           // 000000081A50: BF800000
	.long 0xbf800000                                           // 000000081A54: BF800000
	.long 0xbf800000                                           // 000000081A58: BF800000
	.long 0xbf800000                                           // 000000081A5C: BF800000
	.long 0xbf800000                                           // 000000081A60: BF800000
	.long 0xbf800000                                           // 000000081A64: BF800000
	.long 0xbf800000                                           // 000000081A68: BF800000
	.long 0xbf800000                                           // 000000081A6C: BF800000
	.long 0xbf800000                                           // 000000081A70: BF800000
	.long 0xbf800000                                           // 000000081A74: BF800000
	.long 0xbf800000                                           // 000000081A78: BF800000
	.long 0xbf800000                                           // 000000081A7C: BF800000
	.long 0xbf800000                                           // 000000081A80: BF800000
	.long 0xbf800000                                           // 000000081A84: BF800000
	.long 0xbf800000                                           // 000000081A88: BF800000
	.long 0xbf800000                                           // 000000081A8C: BF800000
	.long 0xbf800000                                           // 000000081A90: BF800000
	.long 0xbf800000                                           // 000000081A94: BF800000
	.long 0xbf800000                                           // 000000081A98: BF800000
	.long 0xbf800000                                           // 000000081A9C: BF800000
	.long 0xbf800000                                           // 000000081AA0: BF800000
	.long 0xbf800000                                           // 000000081AA4: BF800000
	.long 0xbf800000                                           // 000000081AA8: BF800000
	.long 0xbf800000                                           // 000000081AAC: BF800000
	.long 0xbf800000                                           // 000000081AB0: BF800000
	.long 0xbf800000                                           // 000000081AB4: BF800000
	.long 0xbf800000                                           // 000000081AB8: BF800000
	.long 0xbf800000                                           // 000000081ABC: BF800000
	.long 0xbf800000                                           // 000000081AC0: BF800000
	.long 0xbf800000                                           // 000000081AC4: BF800000
	.long 0xbf800000                                           // 000000081AC8: BF800000
	.long 0xbf800000                                           // 000000081ACC: BF800000
	.long 0xbf800000                                           // 000000081AD0: BF800000
	.long 0xbf800000                                           // 000000081AD4: BF800000
	.long 0xbf800000                                           // 000000081AD8: BF800000
	.long 0xbf800000                                           // 000000081ADC: BF800000
	.long 0xbf800000                                           // 000000081AE0: BF800000
	.long 0xbf800000                                           // 000000081AE4: BF800000
	.long 0xbf800000                                           // 000000081AE8: BF800000
	.long 0xbf800000                                           // 000000081AEC: BF800000
	.long 0xbf800000                                           // 000000081AF0: BF800000
	.long 0xbf800000                                           // 000000081AF4: BF800000
	.long 0xbf800000                                           // 000000081AF8: BF800000
	.long 0xbf800000                                           // 000000081AFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_id_get_work_dim,@function
	.size	subtract_char_get_global_id_get_work_dim, subtract_char_get_global_id_get_work_dim_symend-subtract_char_get_global_id_get_work_dim
subtract_char_get_global_id_get_work_dim:
	s_clause 0x3                                               // 000000081B00: BF850003
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000081B04: F4080200 F8000038
	s_load_b64 s[6:7], s[0:1], 0x48                            // 000000081B0C: F4040180 F8000048
	s_load_b32 s5, s[0:1], 0x50                                // 000000081B14: F4000140 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000081B1C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000081B24: 360200FF 000003FF
	v_bfe_u32 v2, v0, 10, 10                                   // 000000081B2C: D6100002 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081B34: D6100000 02292900
	s_mov_b32 s33, 0                                           // 000000081B3C: BEA10080
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000081B40: BF870193
	v_lshl_or_b32 v4, s2, 1, v1                                // 000000081B44: D6560004 04050202
	v_lshl_or_b32 v1, s3, 1, v2                                // 000000081B4C: D6560001 04090203
	s_delay_alu instid0(VALU_DEP_3) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000081B54: BF870123
	v_lshl_or_b32 v0, s4, 2, v0                                // 000000081B58: D6560000 04010404
	s_waitcnt lgkmcnt(0)                                       // 000000081B60: BF89FC07
	v_add_co_u32 v1, null, s10, v1                             // 000000081B64: D7007C01 0002020A
	v_add_nc_u32_e32 v2, s8, v4                                // 000000081B6C: 4A040808
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000081B70: BF870193
	v_add_co_u32 v3, null, s6, v0                              // 000000081B74: D7007C03 00020006
	v_add_co_u32 v0, s2, s0, v1                                // 000000081B7C: D7000200 00020200
	s_delay_alu instid0(VALU_DEP_3)                            // 000000081B84: BF870003
	v_sub_nc_u16 v5.l, v2.l, s5                                // 000000081B88: D7040005 00000B02
	v_sub_nc_u16 v6.l, v1.l, s5                                // 000000081B90: D7040006 00000B01
	v_add_co_ci_u32_e64 v1, null, s1, 0, s2                    // 000000081B98: D5207C01 00090001
	v_add_co_u32 v2, s2, s0, v3                                // 000000081BA0: D7000202 00020600
	v_sub_nc_u16 v7.l, v3.l, s5                                // 000000081BA8: D7040007 00000B03
	v_add_co_ci_u32_e64 v3, null, s1, 0, s2                    // 000000081BB0: D5207C03 00090001
	s_clause 0x2                                               // 000000081BB8: BF850002
	global_store_b8 v4, v5, s[0:1]                             // 000000081BBC: DC620000 00000504
	global_store_b8 v[0:1], v6, off                            // 000000081BC4: DC620000 007C0600
	global_store_b8 v[2:3], v7, off                            // 000000081BCC: DC620000 007C0702
	s_nop 0                                                    // 000000081BD4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081BD8: BFB60003
	s_endpgm                                                   // 000000081BDC: BFB00000
subtract_char_get_global_id_get_work_dim_symend:
	.long 0xbf800000                                           // 000000081BE0: BF800000
	.long 0xbf800000                                           // 000000081BE4: BF800000
	.long 0xbf800000                                           // 000000081BE8: BF800000
	.long 0xbf800000                                           // 000000081BEC: BF800000
	.long 0xbf800000                                           // 000000081BF0: BF800000
	.long 0xbf800000                                           // 000000081BF4: BF800000
	.long 0xbf800000                                           // 000000081BF8: BF800000
	.long 0xbf800000                                           // 000000081BFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_size_get_work_dim,@function
	.size	subtract_char_get_global_size_get_work_dim, subtract_char_get_global_size_get_work_dim_symend-subtract_char_get_global_size_get_work_dim
subtract_char_get_global_size_get_work_dim:
	v_mov_b32_e32 v1, 0                                        // 000000081C00: 7E020280
	v_and_b32_e32 v3, 0x3ff, v0                                // 000000081C04: 360600FF 000003FF
	v_bfe_u32 v4, v0, 10, 10                                   // 000000081C0C: D6100004 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081C14: D6100000 02292900
	s_lshl_b32 s4, s4, 1                                       // 000000081C1C: 84048104
	s_clause 0x1                                               // 000000081C20: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081C24: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000081C2C: DC4A0026 01000001
	s_clause 0x4                                               // 000000081C34: BF850004
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000081C38: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000081C40: F4000140 F8000048
	s_load_b32 s6, s[0:1], 0x50                                // 000000081C48: F4000180 F8000050
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000081C50: F4080300 F8000038
	s_load_b64 s[0:1], s[0:1], null                            // 000000081C58: F4040000 F8000000
	s_lshl_b32 s2, s2, 4                                       // 000000081C60: 84028402
	s_lshl_b32 s3, s3, 1                                       // 000000081C64: 84038103
	s_mov_b32 s33, 0                                           // 000000081C68: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000081C6C: BF89FC07
	s_lshl_b32 s7, s8, 4                                       // 000000081C70: 84078408
	s_lshl_b32 s8, s9, 1                                       // 000000081C74: 84088109
	s_lshl_b32 s9, s10, 1                                      // 000000081C78: 8409810A
	v_add3_u32 v0, s5, s4, v0                                  // 000000081C7C: D6550000 04000805
	s_and_b32 s4, s6, 0xffff                                   // 000000081C84: 8B04FF06 0000FFFF
	v_add3_u32 v3, s12, s2, v3                                 // 000000081C8C: D6550003 040C040C
	v_add3_u32 v4, s14, s3, v4                                 // 000000081C94: D6550004 0410060E
	s_waitcnt vmcnt(1)                                         // 000000081C9C: BF8907F7
	v_lshrrev_b32_e32 v5, 16, v2                               // 000000081CA0: 320A0490
	v_add_nc_u32_e32 v2, s7, v2                                // 000000081CA4: 4A040407
	s_waitcnt vmcnt(0)                                         // 000000081CA8: BF8903F7
	v_add_nc_u32_e32 v1, s9, v1                                // 000000081CAC: 4A020209
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000081CB0: BF870193
	v_add_nc_u32_e32 v5, s8, v5                                // 000000081CB4: 4A0A0A08
	v_subrev_nc_u32_e32 v2, s4, v2                             // 000000081CB8: 4E040404
	s_delay_alu instid0(VALU_DEP_3) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000081CBC: BF870193
	v_subrev_nc_u32_e32 v1, s4, v1                             // 000000081CC0: 4E020204
	v_subrev_nc_u32_e32 v5, s4, v5                             // 000000081CC4: 4E0A0A04
	s_clause 0x2                                               // 000000081CC8: BF850002
	global_store_b8 v3, v2, s[0:1]                             // 000000081CCC: DC620000 00000203
	global_store_b8 v4, v5, s[0:1]                             // 000000081CD4: DC620000 00000504
	global_store_b8 v0, v1, s[0:1]                             // 000000081CDC: DC620000 00000100
	s_nop 0                                                    // 000000081CE4: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081CE8: BFB60003
	s_endpgm                                                   // 000000081CEC: BFB00000
subtract_char_get_global_size_get_work_dim_symend:
	.long 0xbf800000                                           // 000000081CF0: BF800000
	.long 0xbf800000                                           // 000000081CF4: BF800000
	.long 0xbf800000                                           // 000000081CF8: BF800000
	.long 0xbf800000                                           // 000000081CFC: BF800000

	.p2align	8
	.type	subtract_char_get_num_groups_get_work_dim,@function
	.size	subtract_char_get_num_groups_get_work_dim, subtract_char_get_num_groups_get_work_dim_symend-subtract_char_get_num_groups_get_work_dim
subtract_char_get_num_groups_get_work_dim:
	v_mov_b32_e32 v1, 0                                        // 000000081D00: 7E020280
	v_bfe_u32 v4, v0, 10, 10                                   // 000000081D04: D6100004 02291500
	s_mov_b32 s33, 0                                           // 000000081D0C: BEA10080
	s_clause 0x1                                               // 000000081D10: BF850001
	global_load_b32 v2, v1, s[0:1] offset:34                   // 000000081D14: DC520022 02000001
	global_load_u16 v1, v1, s[0:1] offset:38                   // 000000081D1C: DC4A0026 01000001
	s_clause 0x1                                               // 000000081D24: BF850001
	s_load_b128 s[8:11], s[0:1], 0x10                          // 000000081D28: F4080200 F8000010
	s_load_b32 s5, s[0:1], 0x48                                // 000000081D30: F4000140 F8000048
	s_waitcnt lgkmcnt(0)                                       // 000000081D38: BF89FC07
	s_clause 0x2                                               // 000000081D3C: BF850002
	s_load_b32 s11, s[0:1], 0x50                               // 000000081D40: F40002C0 F8000050
	s_load_b128 s[12:15], s[0:1], 0x38                         // 000000081D48: F4080300 F8000038
	s_load_b64 s[6:7], s[0:1], 0x8                             // 000000081D50: F4040180 F8000008
	s_lshl_b32 s1, s2, 1                                       // 000000081D58: 84018102
	s_lshl_b32 s2, s3, 1                                       // 000000081D5C: 84028103
	s_lshl_b32 s3, s4, 2                                       // 000000081D60: 84038204
	s_waitcnt vmcnt(1)                                         // 000000081D64: BF8907F7
	v_lshrrev_b32_e32 v3, 16, v2                               // 000000081D68: 32060490
	v_cmp_ne_u16_e32 vcc_lo, 0, v2.l                           // 000000081D6C: 7C7A0480
	v_and_b32_e32 v2, 0x3ff, v0                                // 000000081D70: 360400FF 000003FF
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081D78: D6100000 02292900
	s_delay_alu instid0(VALU_DEP_4)                            // 000000081D80: BF870004
	v_cmp_ne_u16_e64 s0, 0, v3.l                               // 000000081D84: D43D0000 00020680
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081D8C: BF07806A
	s_waitcnt vmcnt(0)                                         // 000000081D90: BF8903F7
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 000000081D94: 7C7A0280
	s_addc_u32 s4, s8, 0                                       // 000000081D98: 82048008
	v_add3_u32 v0, s5, s3, v0                                  // 000000081D9C: D6550000 04000605
	s_cmp_lg_u32 s0, 0                                         // 000000081DA4: BF078000
	s_waitcnt lgkmcnt(0)                                       // 000000081DA8: BF89FC07
	v_add3_u32 v1, s12, s1, v2                                 // 000000081DAC: D6550001 0408020C
	s_addc_u32 s0, s9, 0                                       // 000000081DB4: 82008009
	s_cmp_lg_u32 vcc_lo, 0                                     // 000000081DB8: BF07806A
	v_add3_u32 v2, s14, s2, v4                                 // 000000081DBC: D6550002 0410040E
	s_addc_u32 s1, s10, 0                                      // 000000081DC4: 8201800A
	s_and_b32 s3, s11, 0xffff                                  // 000000081DC8: 8B03FF0B 0000FFFF
	s_delay_alu instid0(SALU_CYCLE_1)                          // 000000081DD0: BF870009
	s_sub_i32 s2, s4, s3                                       // 000000081DD4: 81820304
	s_sub_i32 s0, s0, s3                                       // 000000081DD8: 81800300
	s_sub_i32 s1, s1, s3                                       // 000000081DDC: 81810301
	v_dual_mov_b32 v3, s2 :: v_dual_mov_b32 v4, s0             // 000000081DE0: CA100002 03040000
	v_mov_b32_e32 v5, s1                                       // 000000081DE8: 7E0A0201
	s_clause 0x2                                               // 000000081DEC: BF850002
	global_store_b8 v1, v3, s[6:7]                             // 000000081DF0: DC620000 00060301
	global_store_b8 v2, v4, s[6:7]                             // 000000081DF8: DC620000 00060402
	global_store_b8 v0, v5, s[6:7]                             // 000000081E00: DC620000 00060500
	s_nop 0                                                    // 000000081E08: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081E0C: BFB60003
	s_endpgm                                                   // 000000081E10: BFB00000
subtract_char_get_num_groups_get_work_dim_symend:
	.long 0xbf800000                                           // 000000081E14: BF800000
	.long 0xbf800000                                           // 000000081E18: BF800000
	.long 0xbf800000                                           // 000000081E1C: BF800000
	.long 0xbf800000                                           // 000000081E20: BF800000
	.long 0xbf800000                                           // 000000081E24: BF800000
	.long 0xbf800000                                           // 000000081E28: BF800000
	.long 0xbf800000                                           // 000000081E2C: BF800000
	.long 0xbf800000                                           // 000000081E30: BF800000
	.long 0xbf800000                                           // 000000081E34: BF800000
	.long 0xbf800000                                           // 000000081E38: BF800000
	.long 0xbf800000                                           // 000000081E3C: BF800000
	.long 0xbf800000                                           // 000000081E40: BF800000
	.long 0xbf800000                                           // 000000081E44: BF800000
	.long 0xbf800000                                           // 000000081E48: BF800000
	.long 0xbf800000                                           // 000000081E4C: BF800000
	.long 0xbf800000                                           // 000000081E50: BF800000
	.long 0xbf800000                                           // 000000081E54: BF800000
	.long 0xbf800000                                           // 000000081E58: BF800000
	.long 0xbf800000                                           // 000000081E5C: BF800000
	.long 0xbf800000                                           // 000000081E60: BF800000
	.long 0xbf800000                                           // 000000081E64: BF800000
	.long 0xbf800000                                           // 000000081E68: BF800000
	.long 0xbf800000                                           // 000000081E6C: BF800000
	.long 0xbf800000                                           // 000000081E70: BF800000
	.long 0xbf800000                                           // 000000081E74: BF800000
	.long 0xbf800000                                           // 000000081E78: BF800000
	.long 0xbf800000                                           // 000000081E7C: BF800000
	.long 0xbf800000                                           // 000000081E80: BF800000
	.long 0xbf800000                                           // 000000081E84: BF800000
	.long 0xbf800000                                           // 000000081E88: BF800000
	.long 0xbf800000                                           // 000000081E8C: BF800000
	.long 0xbf800000                                           // 000000081E90: BF800000
	.long 0xbf800000                                           // 000000081E94: BF800000
	.long 0xbf800000                                           // 000000081E98: BF800000
	.long 0xbf800000                                           // 000000081E9C: BF800000
	.long 0xbf800000                                           // 000000081EA0: BF800000
	.long 0xbf800000                                           // 000000081EA4: BF800000
	.long 0xbf800000                                           // 000000081EA8: BF800000
	.long 0xbf800000                                           // 000000081EAC: BF800000
	.long 0xbf800000                                           // 000000081EB0: BF800000
	.long 0xbf800000                                           // 000000081EB4: BF800000
	.long 0xbf800000                                           // 000000081EB8: BF800000
	.long 0xbf800000                                           // 000000081EBC: BF800000
	.long 0xbf800000                                           // 000000081EC0: BF800000
	.long 0xbf800000                                           // 000000081EC4: BF800000
	.long 0xbf800000                                           // 000000081EC8: BF800000
	.long 0xbf800000                                           // 000000081ECC: BF800000
	.long 0xbf800000                                           // 000000081ED0: BF800000
	.long 0xbf800000                                           // 000000081ED4: BF800000
	.long 0xbf800000                                           // 000000081ED8: BF800000
	.long 0xbf800000                                           // 000000081EDC: BF800000
	.long 0xbf800000                                           // 000000081EE0: BF800000
	.long 0xbf800000                                           // 000000081EE4: BF800000
	.long 0xbf800000                                           // 000000081EE8: BF800000
	.long 0xbf800000                                           // 000000081EEC: BF800000
	.long 0xbf800000                                           // 000000081EF0: BF800000
	.long 0xbf800000                                           // 000000081EF4: BF800000
	.long 0xbf800000                                           // 000000081EF8: BF800000
	.long 0xbf800000                                           // 000000081EFC: BF800000

	.p2align	8
	.type	subtract_char_get_work_dim_get_work_dim,@function
	.size	subtract_char_get_work_dim_get_work_dim, subtract_char_get_work_dim_get_work_dim_symend-subtract_char_get_work_dim_get_work_dim
subtract_char_get_work_dim_get_work_dim:
	s_clause 0x2                                               // 000000081F00: BF850002
	s_load_b128 s[8:11], s[0:1], 0x38                          // 000000081F04: F4080200 F8000038
	s_load_b32 s5, s[0:1], 0x48                                // 000000081F0C: F4000140 F8000048
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000081F14: F4040000 F8000008
	v_dual_mov_b32 v1, 0 :: v_dual_and_b32 v2, 0x3ff, v0       // 000000081F1C: CA240080 010200FF 000003FF
	v_bfe_u32 v3, v0, 10, 10                                   // 000000081F28: D6100003 02291500
	v_bfe_u32 v0, v0, 20, 10                                   // 000000081F30: D6100000 02292900
	s_lshl_b32 s2, s2, 1                                       // 000000081F38: 84028102
	s_lshl_b32 s3, s3, 1                                       // 000000081F3C: 84038103
	s_lshl_b32 s4, s4, 2                                       // 000000081F40: 84048204
	s_mov_b32 s33, 0                                           // 000000081F44: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000081F48: BF89FC07
	v_add3_u32 v2, s8, s2, v2                                  // 000000081F4C: D6550002 04080408
	v_add3_u32 v3, s10, s3, v3                                 // 000000081F54: D6550003 040C060A
	v_add3_u32 v0, s5, s4, v0                                  // 000000081F5C: D6550000 04000805
	s_clause 0x2                                               // 000000081F64: BF850002
	global_store_b8 v2, v1, s[0:1]                             // 000000081F68: DC620000 00000102
	global_store_b8 v3, v1, s[0:1]                             // 000000081F70: DC620000 00000103
	global_store_b8 v0, v1, s[0:1]                             // 000000081F78: DC620000 00000100
	s_nop 0                                                    // 000000081F80: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000081F84: BFB60003
	s_endpgm                                                   // 000000081F88: BFB00000
subtract_char_get_work_dim_get_work_dim_symend:
	.long 0xbf800000                                           // 000000081F8C: BF800000
	.long 0xbf800000                                           // 000000081F90: BF800000
	.long 0xbf800000                                           // 000000081F94: BF800000
	.long 0xbf800000                                           // 000000081F98: BF800000
	.long 0xbf800000                                           // 000000081F9C: BF800000
	.long 0xbf800000                                           // 000000081FA0: BF800000
	.long 0xbf800000                                           // 000000081FA4: BF800000
	.long 0xbf800000                                           // 000000081FA8: BF800000
	.long 0xbf800000                                           // 000000081FAC: BF800000
	.long 0xbf800000                                           // 000000081FB0: BF800000
	.long 0xbf800000                                           // 000000081FB4: BF800000
	.long 0xbf800000                                           // 000000081FB8: BF800000
	.long 0xbf800000                                           // 000000081FBC: BF800000
	.long 0xbf800000                                           // 000000081FC0: BF800000
	.long 0xbf800000                                           // 000000081FC4: BF800000
	.long 0xbf800000                                           // 000000081FC8: BF800000
	.long 0xbf800000                                           // 000000081FCC: BF800000
	.long 0xbf800000                                           // 000000081FD0: BF800000
	.long 0xbf800000                                           // 000000081FD4: BF800000
	.long 0xbf800000                                           // 000000081FD8: BF800000
	.long 0xbf800000                                           // 000000081FDC: BF800000
	.long 0xbf800000                                           // 000000081FE0: BF800000
	.long 0xbf800000                                           // 000000081FE4: BF800000
	.long 0xbf800000                                           // 000000081FE8: BF800000
	.long 0xbf800000                                           // 000000081FEC: BF800000
	.long 0xbf800000                                           // 000000081FF0: BF800000
	.long 0xbf800000                                           // 000000081FF4: BF800000
	.long 0xbf800000                                           // 000000081FF8: BF800000
	.long 0xbf800000                                           // 000000081FFC: BF800000

	.p2align	8
	.type	subtract_char_x_64,@function
	.size	subtract_char_x_64, subtract_char_x_64_symend-subtract_char_x_64
subtract_char_x_64:
	s_clause 0x2                                               // 000000082000: BF850002
	s_load_b32 s3, s[0:1], 0x38                                // 000000082004: F40000C0 F8000038
	s_load_b32 s4, s[0:1], null                                // 00000008200C: F4000100 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000082014: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000008201C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000082024: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082028: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000008202C: BF870091
	v_add_nc_u32_e32 v0, s3, v0                                // 000000082030: 4A000003
	v_sub_nc_u32_e32 v2, s4, v0                                // 000000082034: 4C040004
	v_add_co_u32 v0, s0, s0, v0                                // 000000082038: D7000000 00020000
	s_delay_alu instid0(VALU_DEP_1)                            // 000000082040: BF870001
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 000000082044: D5207C01 00010001
	global_store_b8 v[0:1], v2, off                            // 00000008204C: DC620000 007C0200
	s_nop 0                                                    // 000000082054: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082058: BFB60003
	s_endpgm                                                   // 00000008205C: BFB00000
subtract_char_x_64_symend:
	.long 0xbf800000                                           // 000000082060: BF800000
	.long 0xbf800000                                           // 000000082064: BF800000
	.long 0xbf800000                                           // 000000082068: BF800000
	.long 0xbf800000                                           // 00000008206C: BF800000
	.long 0xbf800000                                           // 000000082070: BF800000
	.long 0xbf800000                                           // 000000082074: BF800000
	.long 0xbf800000                                           // 000000082078: BF800000
	.long 0xbf800000                                           // 00000008207C: BF800000
	.long 0xbf800000                                           // 000000082080: BF800000
	.long 0xbf800000                                           // 000000082084: BF800000
	.long 0xbf800000                                           // 000000082088: BF800000
	.long 0xbf800000                                           // 00000008208C: BF800000
	.long 0xbf800000                                           // 000000082090: BF800000
	.long 0xbf800000                                           // 000000082094: BF800000
	.long 0xbf800000                                           // 000000082098: BF800000
	.long 0xbf800000                                           // 00000008209C: BF800000
	.long 0xbf800000                                           // 0000000820A0: BF800000
	.long 0xbf800000                                           // 0000000820A4: BF800000
	.long 0xbf800000                                           // 0000000820A8: BF800000
	.long 0xbf800000                                           // 0000000820AC: BF800000
	.long 0xbf800000                                           // 0000000820B0: BF800000
	.long 0xbf800000                                           // 0000000820B4: BF800000
	.long 0xbf800000                                           // 0000000820B8: BF800000
	.long 0xbf800000                                           // 0000000820BC: BF800000
	.long 0xbf800000                                           // 0000000820C0: BF800000
	.long 0xbf800000                                           // 0000000820C4: BF800000
	.long 0xbf800000                                           // 0000000820C8: BF800000
	.long 0xbf800000                                           // 0000000820CC: BF800000
	.long 0xbf800000                                           // 0000000820D0: BF800000
	.long 0xbf800000                                           // 0000000820D4: BF800000
	.long 0xbf800000                                           // 0000000820D8: BF800000
	.long 0xbf800000                                           // 0000000820DC: BF800000
	.long 0xbf800000                                           // 0000000820E0: BF800000
	.long 0xbf800000                                           // 0000000820E4: BF800000
	.long 0xbf800000                                           // 0000000820E8: BF800000
	.long 0xbf800000                                           // 0000000820EC: BF800000
	.long 0xbf800000                                           // 0000000820F0: BF800000
	.long 0xbf800000                                           // 0000000820F4: BF800000
	.long 0xbf800000                                           // 0000000820F8: BF800000
	.long 0xbf800000                                           // 0000000820FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_offset_64,@function
	.size	subtract_char_get_global_offset_64, subtract_char_get_global_offset_64_symend-subtract_char_get_global_offset_64
subtract_char_get_global_offset_64:
	s_clause 0x1                                               // 000000082100: BF850001
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000082104: F4040100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008210C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000082114: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000008211C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082120: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000082124: BF870091
	v_add_co_u32 v0, null, s4, v0                              // 000000082128: D7007C00 00020004
	v_sub_nc_u16 v2.l, s4, v0.l                                // 000000082130: D7040002 00020004
	v_add_co_u32 v0, s0, s0, v0                                // 000000082138: D7000000 00020000
	s_delay_alu instid0(VALU_DEP_1)                            // 000000082140: BF870001
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 000000082144: D5207C01 00010001
	global_store_b8 v[0:1], v2, off                            // 00000008214C: DC620000 007C0200
	s_nop 0                                                    // 000000082154: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082158: BFB60003
	s_endpgm                                                   // 00000008215C: BFB00000
subtract_char_get_global_offset_64_symend:
	.long 0xbf800000                                           // 000000082160: BF800000
	.long 0xbf800000                                           // 000000082164: BF800000
	.long 0xbf800000                                           // 000000082168: BF800000
	.long 0xbf800000                                           // 00000008216C: BF800000
	.long 0xbf800000                                           // 000000082170: BF800000
	.long 0xbf800000                                           // 000000082174: BF800000
	.long 0xbf800000                                           // 000000082178: BF800000
	.long 0xbf800000                                           // 00000008217C: BF800000
	.long 0xbf800000                                           // 000000082180: BF800000
	.long 0xbf800000                                           // 000000082184: BF800000
	.long 0xbf800000                                           // 000000082188: BF800000
	.long 0xbf800000                                           // 00000008218C: BF800000
	.long 0xbf800000                                           // 000000082190: BF800000
	.long 0xbf800000                                           // 000000082194: BF800000
	.long 0xbf800000                                           // 000000082198: BF800000
	.long 0xbf800000                                           // 00000008219C: BF800000
	.long 0xbf800000                                           // 0000000821A0: BF800000
	.long 0xbf800000                                           // 0000000821A4: BF800000
	.long 0xbf800000                                           // 0000000821A8: BF800000
	.long 0xbf800000                                           // 0000000821AC: BF800000
	.long 0xbf800000                                           // 0000000821B0: BF800000
	.long 0xbf800000                                           // 0000000821B4: BF800000
	.long 0xbf800000                                           // 0000000821B8: BF800000
	.long 0xbf800000                                           // 0000000821BC: BF800000
	.long 0xbf800000                                           // 0000000821C0: BF800000
	.long 0xbf800000                                           // 0000000821C4: BF800000
	.long 0xbf800000                                           // 0000000821C8: BF800000
	.long 0xbf800000                                           // 0000000821CC: BF800000
	.long 0xbf800000                                           // 0000000821D0: BF800000
	.long 0xbf800000                                           // 0000000821D4: BF800000
	.long 0xbf800000                                           // 0000000821D8: BF800000
	.long 0xbf800000                                           // 0000000821DC: BF800000
	.long 0xbf800000                                           // 0000000821E0: BF800000
	.long 0xbf800000                                           // 0000000821E4: BF800000
	.long 0xbf800000                                           // 0000000821E8: BF800000
	.long 0xbf800000                                           // 0000000821EC: BF800000
	.long 0xbf800000                                           // 0000000821F0: BF800000
	.long 0xbf800000                                           // 0000000821F4: BF800000
	.long 0xbf800000                                           // 0000000821F8: BF800000
	.long 0xbf800000                                           // 0000000821FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_id_64,@function
	.size	subtract_char_get_local_id_64, subtract_char_get_local_id_64_symend-subtract_char_get_local_id_64
subtract_char_get_local_id_64:
	s_clause 0x1                                               // 000000082200: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000082204: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008220C: F4040000 F8000008
	v_lshl_or_b32 v1, s2, 6, v0                                // 000000082214: D6560001 04010C02
	s_mov_b32 s33, 0                                           // 00000008221C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082220: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000082224: BF870091
	v_add_nc_u32_e32 v1, s3, v1                                // 000000082228: 4A020203
	v_sub_nc_u32_e32 v2, v0, v1                                // 00000008222C: 4C040300
	v_add_co_u32 v0, s0, s0, v1                                // 000000082230: D7000000 00020200
	s_delay_alu instid0(VALU_DEP_1)                            // 000000082238: BF870001
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 00000008223C: D5207C01 00010001
	global_store_b8 v[0:1], v2, off                            // 000000082244: DC620000 007C0200
	s_nop 0                                                    // 00000008224C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082250: BFB60003
	s_endpgm                                                   // 000000082254: BFB00000
subtract_char_get_local_id_64_symend:
	.long 0xbf800000                                           // 000000082258: BF800000
	.long 0xbf800000                                           // 00000008225C: BF800000
	.long 0xbf800000                                           // 000000082260: BF800000
	.long 0xbf800000                                           // 000000082264: BF800000
	.long 0xbf800000                                           // 000000082268: BF800000
	.long 0xbf800000                                           // 00000008226C: BF800000
	.long 0xbf800000                                           // 000000082270: BF800000
	.long 0xbf800000                                           // 000000082274: BF800000
	.long 0xbf800000                                           // 000000082278: BF800000
	.long 0xbf800000                                           // 00000008227C: BF800000
	.long 0xbf800000                                           // 000000082280: BF800000
	.long 0xbf800000                                           // 000000082284: BF800000
	.long 0xbf800000                                           // 000000082288: BF800000
	.long 0xbf800000                                           // 00000008228C: BF800000
	.long 0xbf800000                                           // 000000082290: BF800000
	.long 0xbf800000                                           // 000000082294: BF800000
	.long 0xbf800000                                           // 000000082298: BF800000
	.long 0xbf800000                                           // 00000008229C: BF800000
	.long 0xbf800000                                           // 0000000822A0: BF800000
	.long 0xbf800000                                           // 0000000822A4: BF800000
	.long 0xbf800000                                           // 0000000822A8: BF800000
	.long 0xbf800000                                           // 0000000822AC: BF800000
	.long 0xbf800000                                           // 0000000822B0: BF800000
	.long 0xbf800000                                           // 0000000822B4: BF800000
	.long 0xbf800000                                           // 0000000822B8: BF800000
	.long 0xbf800000                                           // 0000000822BC: BF800000
	.long 0xbf800000                                           // 0000000822C0: BF800000
	.long 0xbf800000                                           // 0000000822C4: BF800000
	.long 0xbf800000                                           // 0000000822C8: BF800000
	.long 0xbf800000                                           // 0000000822CC: BF800000
	.long 0xbf800000                                           // 0000000822D0: BF800000
	.long 0xbf800000                                           // 0000000822D4: BF800000
	.long 0xbf800000                                           // 0000000822D8: BF800000
	.long 0xbf800000                                           // 0000000822DC: BF800000
	.long 0xbf800000                                           // 0000000822E0: BF800000
	.long 0xbf800000                                           // 0000000822E4: BF800000
	.long 0xbf800000                                           // 0000000822E8: BF800000
	.long 0xbf800000                                           // 0000000822EC: BF800000
	.long 0xbf800000                                           // 0000000822F0: BF800000
	.long 0xbf800000                                           // 0000000822F4: BF800000
	.long 0xbf800000                                           // 0000000822F8: BF800000
	.long 0xbf800000                                           // 0000000822FC: BF800000

	.p2align	8
	.type	subtract_char_get_group_id_64,@function
	.size	subtract_char_get_group_id_64, subtract_char_get_group_id_64_symend-subtract_char_get_group_id_64
subtract_char_get_group_id_64:
	s_clause 0x1                                               // 000000082300: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000082304: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008230C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000082314: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000008231C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082320: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000082324: BF870091
	v_add_nc_u32_e32 v0, s3, v0                                // 000000082328: 4A000003
	v_sub_nc_u32_e32 v2, s2, v0                                // 00000008232C: 4C040002
	v_add_co_u32 v0, s0, s0, v0                                // 000000082330: D7000000 00020000
	s_delay_alu instid0(VALU_DEP_1)                            // 000000082338: BF870001
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 00000008233C: D5207C01 00010001
	global_store_b8 v[0:1], v2, off                            // 000000082344: DC620000 007C0200
	s_nop 0                                                    // 00000008234C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082350: BFB60003
	s_endpgm                                                   // 000000082354: BFB00000
subtract_char_get_group_id_64_symend:
	.long 0xbf800000                                           // 000000082358: BF800000
	.long 0xbf800000                                           // 00000008235C: BF800000
	.long 0xbf800000                                           // 000000082360: BF800000
	.long 0xbf800000                                           // 000000082364: BF800000
	.long 0xbf800000                                           // 000000082368: BF800000
	.long 0xbf800000                                           // 00000008236C: BF800000
	.long 0xbf800000                                           // 000000082370: BF800000
	.long 0xbf800000                                           // 000000082374: BF800000
	.long 0xbf800000                                           // 000000082378: BF800000
	.long 0xbf800000                                           // 00000008237C: BF800000
	.long 0xbf800000                                           // 000000082380: BF800000
	.long 0xbf800000                                           // 000000082384: BF800000
	.long 0xbf800000                                           // 000000082388: BF800000
	.long 0xbf800000                                           // 00000008238C: BF800000
	.long 0xbf800000                                           // 000000082390: BF800000
	.long 0xbf800000                                           // 000000082394: BF800000
	.long 0xbf800000                                           // 000000082398: BF800000
	.long 0xbf800000                                           // 00000008239C: BF800000
	.long 0xbf800000                                           // 0000000823A0: BF800000
	.long 0xbf800000                                           // 0000000823A4: BF800000
	.long 0xbf800000                                           // 0000000823A8: BF800000
	.long 0xbf800000                                           // 0000000823AC: BF800000
	.long 0xbf800000                                           // 0000000823B0: BF800000
	.long 0xbf800000                                           // 0000000823B4: BF800000
	.long 0xbf800000                                           // 0000000823B8: BF800000
	.long 0xbf800000                                           // 0000000823BC: BF800000
	.long 0xbf800000                                           // 0000000823C0: BF800000
	.long 0xbf800000                                           // 0000000823C4: BF800000
	.long 0xbf800000                                           // 0000000823C8: BF800000
	.long 0xbf800000                                           // 0000000823CC: BF800000
	.long 0xbf800000                                           // 0000000823D0: BF800000
	.long 0xbf800000                                           // 0000000823D4: BF800000
	.long 0xbf800000                                           // 0000000823D8: BF800000
	.long 0xbf800000                                           // 0000000823DC: BF800000
	.long 0xbf800000                                           // 0000000823E0: BF800000
	.long 0xbf800000                                           // 0000000823E4: BF800000
	.long 0xbf800000                                           // 0000000823E8: BF800000
	.long 0xbf800000                                           // 0000000823EC: BF800000
	.long 0xbf800000                                           // 0000000823F0: BF800000
	.long 0xbf800000                                           // 0000000823F4: BF800000
	.long 0xbf800000                                           // 0000000823F8: BF800000
	.long 0xbf800000                                           // 0000000823FC: BF800000

	.p2align	8
	.type	subtract_char_get_local_size_64,@function
	.size	subtract_char_get_local_size_64, subtract_char_get_local_size_64_symend-subtract_char_get_local_size_64
subtract_char_get_local_size_64:
	s_clause 0x1                                               // 000000082400: BF850001
	s_load_b32 s3, s[0:1], 0x10                                // 000000082404: F40000C0 F8000010
	s_load_b64 s[4:5], s[0:1], 0x38                            // 00000008240C: F4040100 F8000038
	s_add_u32 s6, s0, 16                                       // 000000082414: 80069000
	s_waitcnt lgkmcnt(0)                                       // 000000082418: BF89FC07
	s_addc_u32 s5, s1, 0                                       // 00000008241C: 82058001
	v_mov_b32_e32 v1, 0                                        // 000000082420: 7E020280
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000082424: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000008242C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000082434: BEA10080
	s_cmp_lt_u32 s2, s3                                        // 000000082438: BF0A0302
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 00000008243C: BF8704A1
	v_add_co_u32 v0, null, s4, v0                              // 000000082440: D7007C00 00020004
	s_cselect_b32 s3, 12, 18                                   // 000000082448: 9803928C
	s_add_u32 s6, s6, s3                                       // 00000008244C: 80060306
	s_addc_u32 s7, s5, 0                                       // 000000082450: 82078005
	global_load_u8 v1, v1, s[6:7]                              // 000000082454: DC420000 01060001
	s_waitcnt vmcnt(0)                                         // 00000008245C: BF8903F7
	v_sub_nc_u16 v2.l, v1.l, v0.l                              // 000000082460: D7040002 00020101
	s_waitcnt lgkmcnt(0)                                       // 000000082468: BF89FC07
	v_add_co_u32 v0, s0, s0, v0                                // 00000008246C: D7000000 00020000
	s_delay_alu instid0(VALU_DEP_1)                            // 000000082474: BF870001
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 000000082478: D5207C01 00010001
	global_store_b8 v[0:1], v2, off                            // 000000082480: DC620000 007C0200
	s_nop 0                                                    // 000000082488: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 00000008248C: BFB60003
	s_endpgm                                                   // 000000082490: BFB00000
subtract_char_get_local_size_64_symend:
	.long 0xbf800000                                           // 000000082494: BF800000
	.long 0xbf800000                                           // 000000082498: BF800000
	.long 0xbf800000                                           // 00000008249C: BF800000
	.long 0xbf800000                                           // 0000000824A0: BF800000
	.long 0xbf800000                                           // 0000000824A4: BF800000
	.long 0xbf800000                                           // 0000000824A8: BF800000
	.long 0xbf800000                                           // 0000000824AC: BF800000
	.long 0xbf800000                                           // 0000000824B0: BF800000
	.long 0xbf800000                                           // 0000000824B4: BF800000
	.long 0xbf800000                                           // 0000000824B8: BF800000
	.long 0xbf800000                                           // 0000000824BC: BF800000
	.long 0xbf800000                                           // 0000000824C0: BF800000
	.long 0xbf800000                                           // 0000000824C4: BF800000
	.long 0xbf800000                                           // 0000000824C8: BF800000
	.long 0xbf800000                                           // 0000000824CC: BF800000
	.long 0xbf800000                                           // 0000000824D0: BF800000
	.long 0xbf800000                                           // 0000000824D4: BF800000
	.long 0xbf800000                                           // 0000000824D8: BF800000
	.long 0xbf800000                                           // 0000000824DC: BF800000
	.long 0xbf800000                                           // 0000000824E0: BF800000
	.long 0xbf800000                                           // 0000000824E4: BF800000
	.long 0xbf800000                                           // 0000000824E8: BF800000
	.long 0xbf800000                                           // 0000000824EC: BF800000
	.long 0xbf800000                                           // 0000000824F0: BF800000
	.long 0xbf800000                                           // 0000000824F4: BF800000
	.long 0xbf800000                                           // 0000000824F8: BF800000
	.long 0xbf800000                                           // 0000000824FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_id_64,@function
	.size	subtract_char_get_global_id_64, subtract_char_get_global_id_64_symend-subtract_char_get_global_id_64
subtract_char_get_global_id_64:
	s_clause 0x1                                               // 000000082500: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000082504: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008250C: F4040000 F8000008
	s_lshl_b32 s2, s2, 6                                       // 000000082514: 84028602
	v_mov_b32_e32 v1, 0                                        // 000000082518: 7E020280
	s_mov_b32 s33, 0                                           // 00000008251C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082520: BF89FC07
	v_add3_u32 v0, s3, s2, v0                                  // 000000082524: D6550000 04000403
	global_store_b8 v0, v1, s[0:1]                             // 00000008252C: DC620000 00000100
	s_nop 0                                                    // 000000082534: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082538: BFB60003
	s_endpgm                                                   // 00000008253C: BFB00000
subtract_char_get_global_id_64_symend:
	.long 0xbf800000                                           // 000000082540: BF800000
	.long 0xbf800000                                           // 000000082544: BF800000
	.long 0xbf800000                                           // 000000082548: BF800000
	.long 0xbf800000                                           // 00000008254C: BF800000
	.long 0xbf800000                                           // 000000082550: BF800000
	.long 0xbf800000                                           // 000000082554: BF800000
	.long 0xbf800000                                           // 000000082558: BF800000
	.long 0xbf800000                                           // 00000008255C: BF800000
	.long 0xbf800000                                           // 000000082560: BF800000
	.long 0xbf800000                                           // 000000082564: BF800000
	.long 0xbf800000                                           // 000000082568: BF800000
	.long 0xbf800000                                           // 00000008256C: BF800000
	.long 0xbf800000                                           // 000000082570: BF800000
	.long 0xbf800000                                           // 000000082574: BF800000
	.long 0xbf800000                                           // 000000082578: BF800000
	.long 0xbf800000                                           // 00000008257C: BF800000
	.long 0xbf800000                                           // 000000082580: BF800000
	.long 0xbf800000                                           // 000000082584: BF800000
	.long 0xbf800000                                           // 000000082588: BF800000
	.long 0xbf800000                                           // 00000008258C: BF800000
	.long 0xbf800000                                           // 000000082590: BF800000
	.long 0xbf800000                                           // 000000082594: BF800000
	.long 0xbf800000                                           // 000000082598: BF800000
	.long 0xbf800000                                           // 00000008259C: BF800000
	.long 0xbf800000                                           // 0000000825A0: BF800000
	.long 0xbf800000                                           // 0000000825A4: BF800000
	.long 0xbf800000                                           // 0000000825A8: BF800000
	.long 0xbf800000                                           // 0000000825AC: BF800000
	.long 0xbf800000                                           // 0000000825B0: BF800000
	.long 0xbf800000                                           // 0000000825B4: BF800000
	.long 0xbf800000                                           // 0000000825B8: BF800000
	.long 0xbf800000                                           // 0000000825BC: BF800000
	.long 0xbf800000                                           // 0000000825C0: BF800000
	.long 0xbf800000                                           // 0000000825C4: BF800000
	.long 0xbf800000                                           // 0000000825C8: BF800000
	.long 0xbf800000                                           // 0000000825CC: BF800000
	.long 0xbf800000                                           // 0000000825D0: BF800000
	.long 0xbf800000                                           // 0000000825D4: BF800000
	.long 0xbf800000                                           // 0000000825D8: BF800000
	.long 0xbf800000                                           // 0000000825DC: BF800000
	.long 0xbf800000                                           // 0000000825E0: BF800000
	.long 0xbf800000                                           // 0000000825E4: BF800000
	.long 0xbf800000                                           // 0000000825E8: BF800000
	.long 0xbf800000                                           // 0000000825EC: BF800000
	.long 0xbf800000                                           // 0000000825F0: BF800000
	.long 0xbf800000                                           // 0000000825F4: BF800000
	.long 0xbf800000                                           // 0000000825F8: BF800000
	.long 0xbf800000                                           // 0000000825FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_size_64,@function
	.size	subtract_char_get_global_size_64, subtract_char_get_global_size_64_symend-subtract_char_get_global_size_64
subtract_char_get_global_size_64:
	s_clause 0x3                                               // 000000082600: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 000000082604: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x10                                // 00000008260C: F4000100 F8000010
	s_load_b32 s5, s[0:1], 0x20                                // 000000082614: F4000140 F8000020
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008261C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000082624: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000008262C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082630: BF89FC07
	s_delay_alu instid0(VALU_DEP_1)                            // 000000082634: BF870001
	v_add_nc_u32_e32 v0, s3, v0                                // 000000082638: 4A000003
	s_lshl_b32 s2, s4, 6                                       // 00000008263C: 84028604
	s_delay_alu instid0(VALU_DEP_1) | instid1(SALU_CYCLE_1)    // 000000082640: BF870481
	v_sub_nc_u32_e32 v1, s2, v0                                // 000000082644: 4C020002
	s_lshr_b32 s2, s5, 16                                      // 000000082648: 85029005
	v_add_co_u32 v0, s0, s0, v0                                // 00000008264C: D7000000 00020000
	s_delay_alu instid0(VALU_DEP_2)                            // 000000082654: BF870002
	v_add_nc_u32_e32 v2, s2, v1                                // 000000082658: 4A040202
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 00000008265C: D5207C01 00010001
	global_store_b8 v[0:1], v2, off                            // 000000082664: DC620000 007C0200
	s_nop 0                                                    // 00000008266C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082670: BFB60003
	s_endpgm                                                   // 000000082674: BFB00000
subtract_char_get_global_size_64_symend:
	.long 0xbf800000                                           // 000000082678: BF800000
	.long 0xbf800000                                           // 00000008267C: BF800000
	.long 0xbf800000                                           // 000000082680: BF800000
	.long 0xbf800000                                           // 000000082684: BF800000
	.long 0xbf800000                                           // 000000082688: BF800000
	.long 0xbf800000                                           // 00000008268C: BF800000
	.long 0xbf800000                                           // 000000082690: BF800000
	.long 0xbf800000                                           // 000000082694: BF800000
	.long 0xbf800000                                           // 000000082698: BF800000
	.long 0xbf800000                                           // 00000008269C: BF800000
	.long 0xbf800000                                           // 0000000826A0: BF800000
	.long 0xbf800000                                           // 0000000826A4: BF800000
	.long 0xbf800000                                           // 0000000826A8: BF800000
	.long 0xbf800000                                           // 0000000826AC: BF800000
	.long 0xbf800000                                           // 0000000826B0: BF800000
	.long 0xbf800000                                           // 0000000826B4: BF800000
	.long 0xbf800000                                           // 0000000826B8: BF800000
	.long 0xbf800000                                           // 0000000826BC: BF800000
	.long 0xbf800000                                           // 0000000826C0: BF800000
	.long 0xbf800000                                           // 0000000826C4: BF800000
	.long 0xbf800000                                           // 0000000826C8: BF800000
	.long 0xbf800000                                           // 0000000826CC: BF800000
	.long 0xbf800000                                           // 0000000826D0: BF800000
	.long 0xbf800000                                           // 0000000826D4: BF800000
	.long 0xbf800000                                           // 0000000826D8: BF800000
	.long 0xbf800000                                           // 0000000826DC: BF800000
	.long 0xbf800000                                           // 0000000826E0: BF800000
	.long 0xbf800000                                           // 0000000826E4: BF800000
	.long 0xbf800000                                           // 0000000826E8: BF800000
	.long 0xbf800000                                           // 0000000826EC: BF800000
	.long 0xbf800000                                           // 0000000826F0: BF800000
	.long 0xbf800000                                           // 0000000826F4: BF800000
	.long 0xbf800000                                           // 0000000826F8: BF800000
	.long 0xbf800000                                           // 0000000826FC: BF800000

	.p2align	8
	.type	subtract_char_get_num_groups_64,@function
	.size	subtract_char_get_num_groups_64, subtract_char_get_num_groups_64_symend-subtract_char_get_num_groups_64
subtract_char_get_num_groups_64:
	s_clause 0x3                                               // 000000082700: BF850003
	s_load_b32 s3, s[0:1], 0x38                                // 000000082704: F40000C0 F8000038
	s_load_b32 s4, s[0:1], 0x10                                // 00000008270C: F4000100 F8000010
	s_load_b32 s5, s[0:1], 0x20                                // 000000082714: F4000140 F8000020
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008271C: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 000000082724: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 00000008272C: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082730: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(SKIP_1) | instid1(SALU_CYCLE_1)// 000000082734: BF8704A1
	v_add_nc_u32_e32 v0, s3, v0                                // 000000082738: 4A000003
	s_lshr_b32 s2, s5, 16                                      // 00000008273C: 85029005
	v_cmp_ne_u16_e64 vcc_lo, s2, 0                             // 000000082740: D43D006A 00010002
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000082748: BF870122
	v_sub_nc_u32_e32 v1, s4, v0                                // 00000008274C: 4C020004
	v_add_co_u32 v0, s0, s0, v0                                // 000000082750: D7000000 00020000
	v_add_co_ci_u32_e32 v2, vcc_lo, 0, v1, vcc_lo              // 000000082758: 40040280
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 00000008275C: D5207C01 00010001
	global_store_b8 v[0:1], v2, off                            // 000000082764: DC620000 007C0200
	s_nop 0                                                    // 00000008276C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082770: BFB60003
	s_endpgm                                                   // 000000082774: BFB00000
subtract_char_get_num_groups_64_symend:
	.long 0xbf800000                                           // 000000082778: BF800000
	.long 0xbf800000                                           // 00000008277C: BF800000
	.long 0xbf800000                                           // 000000082780: BF800000
	.long 0xbf800000                                           // 000000082784: BF800000
	.long 0xbf800000                                           // 000000082788: BF800000
	.long 0xbf800000                                           // 00000008278C: BF800000
	.long 0xbf800000                                           // 000000082790: BF800000
	.long 0xbf800000                                           // 000000082794: BF800000
	.long 0xbf800000                                           // 000000082798: BF800000
	.long 0xbf800000                                           // 00000008279C: BF800000
	.long 0xbf800000                                           // 0000000827A0: BF800000
	.long 0xbf800000                                           // 0000000827A4: BF800000
	.long 0xbf800000                                           // 0000000827A8: BF800000
	.long 0xbf800000                                           // 0000000827AC: BF800000
	.long 0xbf800000                                           // 0000000827B0: BF800000
	.long 0xbf800000                                           // 0000000827B4: BF800000
	.long 0xbf800000                                           // 0000000827B8: BF800000
	.long 0xbf800000                                           // 0000000827BC: BF800000
	.long 0xbf800000                                           // 0000000827C0: BF800000
	.long 0xbf800000                                           // 0000000827C4: BF800000
	.long 0xbf800000                                           // 0000000827C8: BF800000
	.long 0xbf800000                                           // 0000000827CC: BF800000
	.long 0xbf800000                                           // 0000000827D0: BF800000
	.long 0xbf800000                                           // 0000000827D4: BF800000
	.long 0xbf800000                                           // 0000000827D8: BF800000
	.long 0xbf800000                                           // 0000000827DC: BF800000
	.long 0xbf800000                                           // 0000000827E0: BF800000
	.long 0xbf800000                                           // 0000000827E4: BF800000
	.long 0xbf800000                                           // 0000000827E8: BF800000
	.long 0xbf800000                                           // 0000000827EC: BF800000
	.long 0xbf800000                                           // 0000000827F0: BF800000
	.long 0xbf800000                                           // 0000000827F4: BF800000
	.long 0xbf800000                                           // 0000000827F8: BF800000
	.long 0xbf800000                                           // 0000000827FC: BF800000

	.p2align	8
	.type	subtract_char_get_work_dim,@function
	.size	subtract_char_get_work_dim, subtract_char_get_work_dim_symend-subtract_char_get_work_dim
subtract_char_get_work_dim:
	s_clause 0x2                                               // 000000082800: BF850002
	s_load_b64 s[4:5], s[0:1], 0x38                            // 000000082804: F4040100 F8000038
	s_load_b32 s3, s[0:1], 0x50                                // 00000008280C: F40000C0 F8000050
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000082814: F4040000 F8000008
	v_lshl_or_b32 v0, s2, 6, v0                                // 00000008281C: D6560000 04010C02
	s_mov_b32 s33, 0                                           // 000000082824: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082828: BF89FC07
	s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)// 00000008282C: BF870091
	v_add_co_u32 v0, null, s4, v0                              // 000000082830: D7007C00 00020004
	v_sub_nc_u16 v2.l, s3, v0.l                                // 000000082838: D7040002 00020003
	v_add_co_u32 v0, s0, s0, v0                                // 000000082840: D7000000 00020000
	s_delay_alu instid0(VALU_DEP_1)                            // 000000082848: BF870001
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 00000008284C: D5207C01 00010001
	global_store_b8 v[0:1], v2, off                            // 000000082854: DC620000 007C0200
	s_nop 0                                                    // 00000008285C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082860: BFB60003
	s_endpgm                                                   // 000000082864: BFB00000
subtract_char_get_work_dim_symend:
	.long 0xbf800000                                           // 000000082868: BF800000
	.long 0xbf800000                                           // 00000008286C: BF800000
	.long 0xbf800000                                           // 000000082870: BF800000
	.long 0xbf800000                                           // 000000082874: BF800000
	.long 0xbf800000                                           // 000000082878: BF800000
	.long 0xbf800000                                           // 00000008287C: BF800000
	.long 0xbf800000                                           // 000000082880: BF800000
	.long 0xbf800000                                           // 000000082884: BF800000
	.long 0xbf800000                                           // 000000082888: BF800000
	.long 0xbf800000                                           // 00000008288C: BF800000
	.long 0xbf800000                                           // 000000082890: BF800000
	.long 0xbf800000                                           // 000000082894: BF800000
	.long 0xbf800000                                           // 000000082898: BF800000
	.long 0xbf800000                                           // 00000008289C: BF800000
	.long 0xbf800000                                           // 0000000828A0: BF800000
	.long 0xbf800000                                           // 0000000828A4: BF800000
	.long 0xbf800000                                           // 0000000828A8: BF800000
	.long 0xbf800000                                           // 0000000828AC: BF800000
	.long 0xbf800000                                           // 0000000828B0: BF800000
	.long 0xbf800000                                           // 0000000828B4: BF800000
	.long 0xbf800000                                           // 0000000828B8: BF800000
	.long 0xbf800000                                           // 0000000828BC: BF800000
	.long 0xbf800000                                           // 0000000828C0: BF800000
	.long 0xbf800000                                           // 0000000828C4: BF800000
	.long 0xbf800000                                           // 0000000828C8: BF800000
	.long 0xbf800000                                           // 0000000828CC: BF800000
	.long 0xbf800000                                           // 0000000828D0: BF800000
	.long 0xbf800000                                           // 0000000828D4: BF800000
	.long 0xbf800000                                           // 0000000828D8: BF800000
	.long 0xbf800000                                           // 0000000828DC: BF800000
	.long 0xbf800000                                           // 0000000828E0: BF800000
	.long 0xbf800000                                           // 0000000828E4: BF800000
	.long 0xbf800000                                           // 0000000828E8: BF800000
	.long 0xbf800000                                           // 0000000828EC: BF800000
	.long 0xbf800000                                           // 0000000828F0: BF800000
	.long 0xbf800000                                           // 0000000828F4: BF800000
	.long 0xbf800000                                           // 0000000828F8: BF800000
	.long 0xbf800000                                           // 0000000828FC: BF800000

	.p2align	8
	.type	subtract_char_x_8_8,@function
	.size	subtract_char_x_8_8, subtract_char_x_8_8_symend-subtract_char_x_8_8
subtract_char_x_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000082900: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000082908: BF89FC07
	s_clause 0x1                                               // 00000008290C: BF850001
	s_load_b32 s5, s[0:1], null                                // 000000082910: F4000140 F8000000
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000082918: F4040000 F8000008
	v_bfe_u32 v1, v0, 10, 8                                    // 000000082920: D6100001 02211500
	s_lshl_b32 s3, s3, 3                                       // 000000082928: 84038303
	v_and_b32_e32 v0, 0x3ff, v0                                // 00000008292C: 360000FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000082934: 84028302
	s_mov_b32 s33, 0                                           // 000000082938: BEA10080
	v_add3_u32 v1, s3, s6, v1                                  // 00000008293C: D6550001 04040C03
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_1) | instid1(VALU_DEP_2)// 000000082944: BF870122
	v_add3_u32 v0, s4, s2, v0                                  // 000000082948: D6550000 04000404
	s_waitcnt lgkmcnt(0)                                       // 000000082950: BF89FC07
	v_sub_nc_u32_e32 v1, s5, v1                                // 000000082954: 4C020205
	global_store_b8 v0, v1, s[0:1]                             // 000000082958: DC620000 00000100
	s_nop 0                                                    // 000000082960: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082964: BFB60003
	s_endpgm                                                   // 000000082968: BFB00000
subtract_char_x_8_8_symend:
	.long 0xbf800000                                           // 00000008296C: BF800000
	.long 0xbf800000                                           // 000000082970: BF800000
	.long 0xbf800000                                           // 000000082974: BF800000
	.long 0xbf800000                                           // 000000082978: BF800000
	.long 0xbf800000                                           // 00000008297C: BF800000
	.long 0xbf800000                                           // 000000082980: BF800000
	.long 0xbf800000                                           // 000000082984: BF800000
	.long 0xbf800000                                           // 000000082988: BF800000
	.long 0xbf800000                                           // 00000008298C: BF800000
	.long 0xbf800000                                           // 000000082990: BF800000
	.long 0xbf800000                                           // 000000082994: BF800000
	.long 0xbf800000                                           // 000000082998: BF800000
	.long 0xbf800000                                           // 00000008299C: BF800000
	.long 0xbf800000                                           // 0000000829A0: BF800000
	.long 0xbf800000                                           // 0000000829A4: BF800000
	.long 0xbf800000                                           // 0000000829A8: BF800000
	.long 0xbf800000                                           // 0000000829AC: BF800000
	.long 0xbf800000                                           // 0000000829B0: BF800000
	.long 0xbf800000                                           // 0000000829B4: BF800000
	.long 0xbf800000                                           // 0000000829B8: BF800000
	.long 0xbf800000                                           // 0000000829BC: BF800000
	.long 0xbf800000                                           // 0000000829C0: BF800000
	.long 0xbf800000                                           // 0000000829C4: BF800000
	.long 0xbf800000                                           // 0000000829C8: BF800000
	.long 0xbf800000                                           // 0000000829CC: BF800000
	.long 0xbf800000                                           // 0000000829D0: BF800000
	.long 0xbf800000                                           // 0000000829D4: BF800000
	.long 0xbf800000                                           // 0000000829D8: BF800000
	.long 0xbf800000                                           // 0000000829DC: BF800000
	.long 0xbf800000                                           // 0000000829E0: BF800000
	.long 0xbf800000                                           // 0000000829E4: BF800000
	.long 0xbf800000                                           // 0000000829E8: BF800000
	.long 0xbf800000                                           // 0000000829EC: BF800000
	.long 0xbf800000                                           // 0000000829F0: BF800000
	.long 0xbf800000                                           // 0000000829F4: BF800000
	.long 0xbf800000                                           // 0000000829F8: BF800000
	.long 0xbf800000                                           // 0000000829FC: BF800000

	.p2align	8
	.type	subtract_char_get_global_offset_8_8,@function
	.size	subtract_char_get_global_offset_8_8, subtract_char_get_global_offset_8_8_symend-subtract_char_get_global_offset_8_8
subtract_char_get_global_offset_8_8:
	s_clause 0x1                                               // 000000082A00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000082A04: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000082A0C: F4040000 F8000008
	s_lshl_b32 s2, s2, 3                                       // 000000082A14: 84028302
	s_mov_b32 s33, 0                                           // 000000082A18: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082A1C: BF89FC07
	s_sub_i32 s3, s4, s6                                       // 000000082A20: 81830604
	v_add3_u32 v0, s4, s2, v0                                  // 000000082A24: D6550000 04000404
	v_mov_b32_e32 v1, s3                                       // 000000082A2C: 7E020203
	global_store_b8 v0, v1, s[0:1]                             // 000000082A30: DC620000 00000100
	s_nop 0                                                    // 000000082A38: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082A3C: BFB60003
	s_endpgm                                                   // 000000082A40: BFB00000
subtract_char_get_global_offset_8_8_symend:
	.long 0xbf800000                                           // 000000082A44: BF800000
	.long 0xbf800000                                           // 000000082A48: BF800000
	.long 0xbf800000                                           // 000000082A4C: BF800000
	.long 0xbf800000                                           // 000000082A50: BF800000
	.long 0xbf800000                                           // 000000082A54: BF800000
	.long 0xbf800000                                           // 000000082A58: BF800000
	.long 0xbf800000                                           // 000000082A5C: BF800000
	.long 0xbf800000                                           // 000000082A60: BF800000
	.long 0xbf800000                                           // 000000082A64: BF800000
	.long 0xbf800000                                           // 000000082A68: BF800000
	.long 0xbf800000                                           // 000000082A6C: BF800000
	.long 0xbf800000                                           // 000000082A70: BF800000
	.long 0xbf800000                                           // 000000082A74: BF800000
	.long 0xbf800000                                           // 000000082A78: BF800000
	.long 0xbf800000                                           // 000000082A7C: BF800000
	.long 0xbf800000                                           // 000000082A80: BF800000
	.long 0xbf800000                                           // 000000082A84: BF800000
	.long 0xbf800000                                           // 000000082A88: BF800000
	.long 0xbf800000                                           // 000000082A8C: BF800000
	.long 0xbf800000                                           // 000000082A90: BF800000
	.long 0xbf800000                                           // 000000082A94: BF800000
	.long 0xbf800000                                           // 000000082A98: BF800000
	.long 0xbf800000                                           // 000000082A9C: BF800000
	.long 0xbf800000                                           // 000000082AA0: BF800000
	.long 0xbf800000                                           // 000000082AA4: BF800000
	.long 0xbf800000                                           // 000000082AA8: BF800000
	.long 0xbf800000                                           // 000000082AAC: BF800000
	.long 0xbf800000                                           // 000000082AB0: BF800000
	.long 0xbf800000                                           // 000000082AB4: BF800000
	.long 0xbf800000                                           // 000000082AB8: BF800000
	.long 0xbf800000                                           // 000000082ABC: BF800000
	.long 0xbf800000                                           // 000000082AC0: BF800000
	.long 0xbf800000                                           // 000000082AC4: BF800000
	.long 0xbf800000                                           // 000000082AC8: BF800000
	.long 0xbf800000                                           // 000000082ACC: BF800000
	.long 0xbf800000                                           // 000000082AD0: BF800000
	.long 0xbf800000                                           // 000000082AD4: BF800000
	.long 0xbf800000                                           // 000000082AD8: BF800000
	.long 0xbf800000                                           // 000000082ADC: BF800000
	.long 0xbf800000                                           // 000000082AE0: BF800000
	.long 0xbf800000                                           // 000000082AE4: BF800000
	.long 0xbf800000                                           // 000000082AE8: BF800000
	.long 0xbf800000                                           // 000000082AEC: BF800000
	.long 0xbf800000                                           // 000000082AF0: BF800000
	.long 0xbf800000                                           // 000000082AF4: BF800000
	.long 0xbf800000                                           // 000000082AF8: BF800000
	.long 0xbf800000                                           // 000000082AFC: BF800000

	.p2align	8
	.type	subtract_char_get_local_id_8_8,@function
	.size	subtract_char_get_local_id_8_8, subtract_char_get_local_id_8_8_symend-subtract_char_get_local_id_8_8
subtract_char_get_local_id_8_8:
	s_clause 0x1                                               // 000000082B00: BF850001
	s_load_b32 s3, s[0:1], 0x38                                // 000000082B04: F40000C0 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000082B0C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000082B14: 360200FF 000003FF
	v_bfe_u32 v0, v0, 10, 8                                    // 000000082B1C: D6100000 02211500
	s_lshl_b32 s2, s2, 3                                       // 000000082B24: 84028302
	s_mov_b32 s33, 0                                           // 000000082B28: BEA10080
	s_delay_alu instid0(VALU_DEP_1)                            // 000000082B2C: BF870001
	v_sub_nc_u16 v0.l, v1.l, v0.l                              // 000000082B30: D7040000 00020101
	s_waitcnt lgkmcnt(0)                                       // 000000082B38: BF89FC07
	v_add3_u32 v1, s3, s2, v1                                  // 000000082B3C: D6550001 04040403
	global_store_b8 v1, v0, s[0:1]                             // 000000082B44: DC620000 00000001
	s_nop 0                                                    // 000000082B4C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082B50: BFB60003
	s_endpgm                                                   // 000000082B54: BFB00000
subtract_char_get_local_id_8_8_symend:
	.long 0xbf800000                                           // 000000082B58: BF800000
	.long 0xbf800000                                           // 000000082B5C: BF800000
	.long 0xbf800000                                           // 000000082B60: BF800000
	.long 0xbf800000                                           // 000000082B64: BF800000
	.long 0xbf800000                                           // 000000082B68: BF800000
	.long 0xbf800000                                           // 000000082B6C: BF800000
	.long 0xbf800000                                           // 000000082B70: BF800000
	.long 0xbf800000                                           // 000000082B74: BF800000
	.long 0xbf800000                                           // 000000082B78: BF800000
	.long 0xbf800000                                           // 000000082B7C: BF800000
	.long 0xbf800000                                           // 000000082B80: BF800000
	.long 0xbf800000                                           // 000000082B84: BF800000
	.long 0xbf800000                                           // 000000082B88: BF800000
	.long 0xbf800000                                           // 000000082B8C: BF800000
	.long 0xbf800000                                           // 000000082B90: BF800000
	.long 0xbf800000                                           // 000000082B94: BF800000
	.long 0xbf800000                                           // 000000082B98: BF800000
	.long 0xbf800000                                           // 000000082B9C: BF800000
	.long 0xbf800000                                           // 000000082BA0: BF800000
	.long 0xbf800000                                           // 000000082BA4: BF800000
	.long 0xbf800000                                           // 000000082BA8: BF800000
	.long 0xbf800000                                           // 000000082BAC: BF800000
	.long 0xbf800000                                           // 000000082BB0: BF800000
	.long 0xbf800000                                           // 000000082BB4: BF800000
	.long 0xbf800000                                           // 000000082BB8: BF800000
	.long 0xbf800000                                           // 000000082BBC: BF800000
	.long 0xbf800000                                           // 000000082BC0: BF800000
	.long 0xbf800000                                           // 000000082BC4: BF800000
	.long 0xbf800000                                           // 000000082BC8: BF800000
	.long 0xbf800000                                           // 000000082BCC: BF800000
	.long 0xbf800000                                           // 000000082BD0: BF800000
	.long 0xbf800000                                           // 000000082BD4: BF800000
	.long 0xbf800000                                           // 000000082BD8: BF800000
	.long 0xbf800000                                           // 000000082BDC: BF800000
	.long 0xbf800000                                           // 000000082BE0: BF800000
	.long 0xbf800000                                           // 000000082BE4: BF800000
	.long 0xbf800000                                           // 000000082BE8: BF800000
	.long 0xbf800000                                           // 000000082BEC: BF800000
	.long 0xbf800000                                           // 000000082BF0: BF800000
	.long 0xbf800000                                           // 000000082BF4: BF800000
	.long 0xbf800000                                           // 000000082BF8: BF800000
	.long 0xbf800000                                           // 000000082BFC: BF800000

	.p2align	8
	.type	subtract_char_get_group_id_8_8,@function
	.size	subtract_char_get_group_id_8_8, subtract_char_get_group_id_8_8_symend-subtract_char_get_group_id_8_8
subtract_char_get_group_id_8_8:
	s_clause 0x1                                               // 000000082C00: BF850001
	s_load_b32 s4, s[0:1], 0x38                                // 000000082C04: F4000100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000082C0C: F4040000 F8000008
	s_lshl_b32 s5, s2, 3                                       // 000000082C14: 84058302
	s_sub_i32 s2, s2, s3                                       // 000000082C18: 81820302
	s_mov_b32 s33, 0                                           // 000000082C1C: BEA10080
	v_mov_b32_e32 v1, s2                                       // 000000082C20: 7E020202
	s_waitcnt lgkmcnt(0)                                       // 000000082C24: BF89FC07
	v_add3_u32 v0, s4, s5, v0                                  // 000000082C28: D6550000 04000A04
	global_store_b8 v0, v1, s[0:1]                             // 000000082C30: DC620000 00000100
	s_nop 0                                                    // 000000082C38: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082C3C: BFB60003
	s_endpgm                                                   // 000000082C40: BFB00000
subtract_char_get_group_id_8_8_symend:
	.long 0xbf800000                                           // 000000082C44: BF800000
	.long 0xbf800000                                           // 000000082C48: BF800000
	.long 0xbf800000                                           // 000000082C4C: BF800000
	.long 0xbf800000                                           // 000000082C50: BF800000
	.long 0xbf800000                                           // 000000082C54: BF800000
	.long 0xbf800000                                           // 000000082C58: BF800000
	.long 0xbf800000                                           // 000000082C5C: BF800000
	.long 0xbf800000                                           // 000000082C60: BF800000
	.long 0xbf800000                                           // 000000082C64: BF800000
	.long 0xbf800000                                           // 000000082C68: BF800000
	.long 0xbf800000                                           // 000000082C6C: BF800000
	.long 0xbf800000                                           // 000000082C70: BF800000
	.long 0xbf800000                                           // 000000082C74: BF800000
	.long 0xbf800000                                           // 000000082C78: BF800000
	.long 0xbf800000                                           // 000000082C7C: BF800000
	.long 0xbf800000                                           // 000000082C80: BF800000
	.long 0xbf800000                                           // 000000082C84: BF800000
	.long 0xbf800000                                           // 000000082C88: BF800000
	.long 0xbf800000                                           // 000000082C8C: BF800000
	.long 0xbf800000                                           // 000000082C90: BF800000
	.long 0xbf800000                                           // 000000082C94: BF800000
	.long 0xbf800000                                           // 000000082C98: BF800000
	.long 0xbf800000                                           // 000000082C9C: BF800000
	.long 0xbf800000                                           // 000000082CA0: BF800000
	.long 0xbf800000                                           // 000000082CA4: BF800000
	.long 0xbf800000                                           // 000000082CA8: BF800000
	.long 0xbf800000                                           // 000000082CAC: BF800000
	.long 0xbf800000                                           // 000000082CB0: BF800000
	.long 0xbf800000                                           // 000000082CB4: BF800000
	.long 0xbf800000                                           // 000000082CB8: BF800000
	.long 0xbf800000                                           // 000000082CBC: BF800000
	.long 0xbf800000                                           // 000000082CC0: BF800000
	.long 0xbf800000                                           // 000000082CC4: BF800000
	.long 0xbf800000                                           // 000000082CC8: BF800000
	.long 0xbf800000                                           // 000000082CCC: BF800000
	.long 0xbf800000                                           // 000000082CD0: BF800000
	.long 0xbf800000                                           // 000000082CD4: BF800000
	.long 0xbf800000                                           // 000000082CD8: BF800000
	.long 0xbf800000                                           // 000000082CDC: BF800000
	.long 0xbf800000                                           // 000000082CE0: BF800000
	.long 0xbf800000                                           // 000000082CE4: BF800000
	.long 0xbf800000                                           // 000000082CE8: BF800000
	.long 0xbf800000                                           // 000000082CEC: BF800000
	.long 0xbf800000                                           // 000000082CF0: BF800000
	.long 0xbf800000                                           // 000000082CF4: BF800000
	.long 0xbf800000                                           // 000000082CF8: BF800000
	.long 0xbf800000                                           // 000000082CFC: BF800000

	.p2align	8
	.type	subtract_char_get_local_size_8_8,@function
	.size	subtract_char_get_local_size_8_8, subtract_char_get_local_size_8_8_symend-subtract_char_get_local_size_8_8
subtract_char_get_local_size_8_8:
	s_clause 0x1                                               // 000000082D00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 000000082D04: F4080100 F8000008
	s_load_b32 s9, s[0:1], 0x38                                // 000000082D0C: F4000240 F8000038
	s_add_u32 s8, s0, 16                                       // 000000082D14: 80089000
	s_addc_u32 s10, s1, 0                                      // 000000082D18: 820A8001
	s_lshl_b32 s11, s2, 3                                      // 000000082D1C: 840B8302
	v_mov_b32_e32 v1, 0                                        // 000000082D20: 7E020280
	s_mov_b32 s33, 0                                           // 000000082D24: BEA10080
	s_waitcnt lgkmcnt(0)                                       // 000000082D28: BF89FC07
	s_cmp_lt_u32 s2, s6                                        // 000000082D2C: BF0A0602
	v_add3_u32 v0, s9, s11, v0                                 // 000000082D30: D6550000 04001609
	s_cselect_b32 s0, 12, 18                                   // 000000082D38: 9800928C
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(SKIP_3) | instid1(SALU_CYCLE_1)// 000000082D3C: BF8704C9
	s_add_u32 s0, s8, s0                                       // 000000082D40: 80000008
	s_addc_u32 s1, s10, 0                                      // 000000082D44: 8201800A
	s_cmp_lt_u32 s3, s7                                        // 000000082D48: BF0A0703
	s_cselect_b32 s2, 14, 20                                   // 000000082D4C: 9802948E
	s_add_u32 s2, s8, s2                                       // 000000082D50: 80020208
	s_addc_u32 s3, s10, 0                                      // 000000082D54: 8203800A
	s_clause 0x1                                               // 000000082D58: BF850001
	global_load_u8 v2, v1, s[0:1]                              // 000000082D5C: DC420000 02000001
	global_load_u8 v1, v1, s[2:3]                              // 000000082D64: DC420000 01020001
	s_waitcnt vmcnt(0)                                         // 000000082D6C: BF8903F7
	v_sub_nc_u32_e32 v1, v2, v1                                // 000000082D70: 4C020302
	global_store_b8 v0, v1, s[4:5]                             // 000000082D74: DC620000 00040100
	s_nop 0                                                    // 000000082D7C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082D80: BFB60003
	s_endpgm                                                   // 000000082D84: BFB00000
subtract_char_get_local_size_8_8_symend:
	.long 0xbf800000                                           // 000000082D88: BF800000
	.long 0xbf800000                                           // 000000082D8C: BF800000
	.long 0xbf800000                                           // 000000082D90: BF800000
	.long 0xbf800000                                           // 000000082D94: BF800000
	.long 0xbf800000                                           // 000000082D98: BF800000
	.long 0xbf800000                                           // 000000082D9C: BF800000
	.long 0xbf800000                                           // 000000082DA0: BF800000
	.long 0xbf800000                                           // 000000082DA4: BF800000
	.long 0xbf800000                                           // 000000082DA8: BF800000
	.long 0xbf800000                                           // 000000082DAC: BF800000
	.long 0xbf800000                                           // 000000082DB0: BF800000
	.long 0xbf800000                                           // 000000082DB4: BF800000
	.long 0xbf800000                                           // 000000082DB8: BF800000
	.long 0xbf800000                                           // 000000082DBC: BF800000
	.long 0xbf800000                                           // 000000082DC0: BF800000
	.long 0xbf800000                                           // 000000082DC4: BF800000
	.long 0xbf800000                                           // 000000082DC8: BF800000
	.long 0xbf800000                                           // 000000082DCC: BF800000
	.long 0xbf800000                                           // 000000082DD0: BF800000
	.long 0xbf800000                                           // 000000082DD4: BF800000
	.long 0xbf800000                                           // 000000082DD8: BF800000
	.long 0xbf800000                                           // 000000082DDC: BF800000
	.long 0xbf800000                                           // 000000082DE0: BF800000
	.long 0xbf800000                                           // 000000082DE4: BF800000
	.long 0xbf800000                                           // 000000082DE8: BF800000
	.long 0xbf800000                                           // 000000082DEC: BF800000
	.long 0xbf800000                                           // 000000082DF0: BF800000
	.long 0xbf800000                                           // 000000082DF4: BF800000
	.long 0xbf800000                                           // 000000082DF8: BF800000
	.long 0xbf800000                                           // 000000082DFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_id_8_8,@function
	.size	subtract_char_get_global_id_8_8, subtract_char_get_global_id_8_8_symend-subtract_char_get_global_id_8_8
subtract_char_get_global_id_8_8:
	s_clause 0x1                                               // 000000082E00: BF850001
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000082E04: F4080100 F8000038
	s_load_b64 s[0:1], s[0:1], 0x8                             // 000000082E0C: F4040000 F8000008
	v_and_b32_e32 v1, 0x3ff, v0                                // 000000082E14: 360200FF 000003FF
	v_bfe_u32 v0, v0, 10, 8                                    // 000000082E1C: D6100000 02211500
	s_mulk_i32 s3, 0xf8                                        // 000000082E24: B80300F8
	s_mov_b32 s33, 0                                           // 000000082E28: BEA10080
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_2)// 000000082E2C: BF870132
	v_lshl_or_b32 v1, s2, 3, v1                                // 000000082E30: D6560001 04050602
	s_waitcnt lgkmcnt(0)                                       // 000000082E38: BF89FC07
	v_add_nc_u32_e32 v0, s6, v0                                // 000000082E3C: 4A000006
	v_add_nc_u32_e32 v1, s4, v1                                // 000000082E40: 4A020204
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_1)// 000000082E44: BF870092
	v_sub_nc_u32_e32 v0, s3, v0                                // 000000082E48: 4C000003
	v_add_nc_u32_e32 v2, v0, v1                                // 000000082E4C: 4A040300
	v_add_co_u32 v0, s0, s0, v1                                // 000000082E50: D7000000 00020200
	s_delay_alu instid0(VALU_DEP_1)                            // 000000082E58: BF870001
	v_add_co_ci_u32_e64 v1, null, s1, 0, s0                    // 000000082E5C: D5207C01 00010001
	global_store_b8 v[0:1], v2, off                            // 000000082E64: DC620000 007C0200
	s_nop 0                                                    // 000000082E6C: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082E70: BFB60003
	s_endpgm                                                   // 000000082E74: BFB00000
subtract_char_get_global_id_8_8_symend:
	.long 0xbf800000                                           // 000000082E78: BF800000
	.long 0xbf800000                                           // 000000082E7C: BF800000
	.long 0xbf800000                                           // 000000082E80: BF800000
	.long 0xbf800000                                           // 000000082E84: BF800000
	.long 0xbf800000                                           // 000000082E88: BF800000
	.long 0xbf800000                                           // 000000082E8C: BF800000
	.long 0xbf800000                                           // 000000082E90: BF800000
	.long 0xbf800000                                           // 000000082E94: BF800000
	.long 0xbf800000                                           // 000000082E98: BF800000
	.long 0xbf800000                                           // 000000082E9C: BF800000
	.long 0xbf800000                                           // 000000082EA0: BF800000
	.long 0xbf800000                                           // 000000082EA4: BF800000
	.long 0xbf800000                                           // 000000082EA8: BF800000
	.long 0xbf800000                                           // 000000082EAC: BF800000
	.long 0xbf800000                                           // 000000082EB0: BF800000
	.long 0xbf800000                                           // 000000082EB4: BF800000
	.long 0xbf800000                                           // 000000082EB8: BF800000
	.long 0xbf800000                                           // 000000082EBC: BF800000
	.long 0xbf800000                                           // 000000082EC0: BF800000
	.long 0xbf800000                                           // 000000082EC4: BF800000
	.long 0xbf800000                                           // 000000082EC8: BF800000
	.long 0xbf800000                                           // 000000082ECC: BF800000
	.long 0xbf800000                                           // 000000082ED0: BF800000
	.long 0xbf800000                                           // 000000082ED4: BF800000
	.long 0xbf800000                                           // 000000082ED8: BF800000
	.long 0xbf800000                                           // 000000082EDC: BF800000
	.long 0xbf800000                                           // 000000082EE0: BF800000
	.long 0xbf800000                                           // 000000082EE4: BF800000
	.long 0xbf800000                                           // 000000082EE8: BF800000
	.long 0xbf800000                                           // 000000082EEC: BF800000
	.long 0xbf800000                                           // 000000082EF0: BF800000
	.long 0xbf800000                                           // 000000082EF4: BF800000
	.long 0xbf800000                                           // 000000082EF8: BF800000
	.long 0xbf800000                                           // 000000082EFC: BF800000

	.p2align	8
	.type	subtract_char_get_global_size_8_8,@function
	.size	subtract_char_get_global_size_8_8, subtract_char_get_global_size_8_8_symend-subtract_char_get_global_size_8_8
subtract_char_get_global_size_8_8:
	v_mov_b32_e32 v1, 0                                        // 000000082F00: 7E020280
	s_mov_b32 s33, 0                                           // 000000082F04: BEA10080
	global_load_b32 v1, v1, s[0:1] offset:34                   // 000000082F08: DC520022 01000001
	s_clause 0x1                                               // 000000082F10: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 000000082F14: F4080100 F8000008
	s_load_b32 s0, s[0:1], 0x38                                // 000000082F1C: F4000000 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000082F24: BF89FC07
	s_lshl_b32 s1, s6, 3                                       // 000000082F28: 84018306
	s_lshl_b32 s3, s7, 3                                       // 000000082F2C: 84038307
	s_waitcnt vmcnt(0)                                         // 000000082F30: BF8903F7
	v_lshrrev_b32_e32 v2, 16, v1                               // 000000082F34: 32040290
	v_add_nc_u32_e32 v1, s1, v1                                // 000000082F38: 4A020201
	s_lshl_b32 s1, s2, 3                                       // 000000082F3C: 84018302
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(VALU_DEP_3)// 000000082F40: BF870199
	v_add3_u32 v0, s0, s1, v0                                  // 000000082F44: D6550000 04000200
	v_add_nc_u32_e32 v2, s3, v2                                // 000000082F4C: 4A040403
	s_delay_alu instid0(VALU_DEP_1)                            // 000000082F50: BF870001
	v_sub_nc_u32_e32 v1, v1, v2                                // 000000082F54: 4C020501
	global_store_b8 v0, v1, s[4:5]                             // 000000082F58: DC620000 00040100
	s_nop 0                                                    // 000000082F60: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000082F64: BFB60003
	s_endpgm                                                   // 000000082F68: BFB00000
subtract_char_get_global_size_8_8_symend:
	.long 0xbf800000                                           // 000000082F6C: BF800000
	.long 0xbf800000                                           // 000000082F70: BF800000
	.long 0xbf800000                                           // 000000082F74: BF800000
	.long 0xbf800000                                           // 000000082F78: BF800000
	.long 0xbf800000                                           // 000000082F7C: BF800000
	.long 0xbf800000                                           // 000000082F80: BF800000
	.long 0xbf800000                                           // 000000082F84: BF800000
	.long 0xbf800000                                           // 000000082F88: BF800000
	.long 0xbf800000                                           // 000000082F8C: BF800000
	.long 0xbf800000                                           // 000000082F90: BF800000
	.long 0xbf800000                                           // 000000082F94: BF800000
	.long 0xbf800000                                           // 000000082F98: BF800000
	.long 0xbf800000                                           // 000000082F9C: BF800000
	.long 0xbf800000                                           // 000000082FA0: BF800000
	.long 0xbf800000                                           // 000000082FA4: BF800000
	.long 0xbf800000                                           // 000000082FA8: BF800000
	.long 0xbf800000                                           // 000000082FAC: BF800000
	.long 0xbf800000                                           // 000000082FB0: BF800000
	.long 0xbf800000                                           // 000000082FB4: BF800000
	.long 0xbf800000                                           // 000000082FB8: BF800000
	.long 0xbf800000                                           // 000000082FBC: BF800000
	.long 0xbf800000                                           // 000000082FC0: BF800000
	.long 0xbf800000                                           // 000000082FC4: BF800000
	.long 0xbf800000                                           // 000000082FC8: BF800000
	.long 0xbf800000                                           // 000000082FCC: BF800000
	.long 0xbf800000                                           // 000000082FD0: BF800000
	.long 0xbf800000                                           // 000000082FD4: BF800000
	.long 0xbf800000                                           // 000000082FD8: BF800000
	.long 0xbf800000                                           // 000000082FDC: BF800000
	.long 0xbf800000                                           // 000000082FE0: BF800000
	.long 0xbf800000                                           // 000000082FE4: BF800000
	.long 0xbf800000                                           // 000000082FE8: BF800000
	.long 0xbf800000                                           // 000000082FEC: BF800000
	.long 0xbf800000                                           // 000000082FF0: BF800000
	.long 0xbf800000                                           // 000000082FF4: BF800000
	.long 0xbf800000                                           // 000000082FF8: BF800000
	.long 0xbf800000                                           // 000000082FFC: BF800000

	.p2align	8
	.type	subtract_char_get_num_groups_8_8,@function
	.size	subtract_char_get_num_groups_8_8, subtract_char_get_num_groups_8_8_symend-subtract_char_get_num_groups_8_8
subtract_char_get_num_groups_8_8:
	v_mov_b32_e32 v1, 0                                        // 000000083000: 7E020280
	s_lshl_b32 s2, s2, 3                                       // 000000083004: 84028302
	s_mov_b32 s33, 0                                           // 000000083008: BEA10080
	global_load_b32 v1, v1, s[0:1] offset:34                   // 00000008300C: DC520022 01000001
	s_clause 0x1                                               // 000000083014: BF850001
	s_load_b128 s[4:7], s[0:1], 0x8                            // 000000083018: F4080100 F8000008
	s_load_b32 s1, s[0:1], 0x38                                // 000000083020: F4000040 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000083028: BF89FC07
	v_add3_u32 v0, s1, s2, v0                                  // 00000008302C: D6550000 04000401
	s_waitcnt vmcnt(0)                                         // 000000083034: BF8903F7
	v_lshrrev_b32_e32 v2, 16, v1                               // 000000083038: 32040290
	v_cmp_ne_u16_e32 vcc_lo, 0, v1.l                           // 00000008303C: 7C7A0280
	s_delay_alu instid0(VALU_DEP_2) | instskip(SKIP_2) | instid1(VALU_DEP_1)// 000000083040: BF8700B2
	v_cmp_ne_u16_e64 s0, 0, v2.l                               // 000000083044: D43D0000 00020480
	s_cmp_lg_u32 vcc_lo, 0                                     // 00000008304C: BF07806A
	s_addc_u32 s3, s6, 0                                       // 000000083050: 82038006
	s_cmp_lg_u32 s0, 0                                         // 000000083054: BF078000
	s_addc_u32 s0, s7, 0                                       // 000000083058: 82008007
	s_delay_alu instid0(SALU_CYCLE_1) | instskip(NEXT) | instid1(SALU_CYCLE_1)// 00000008305C: BF870499
	s_sub_i32 s0, s3, s0                                       // 000000083060: 81800003
	v_mov_b32_e32 v1, s0                                       // 000000083064: 7E020200
	global_store_b8 v0, v1, s[4:5]                             // 000000083068: DC620000 00040100
	s_nop 0                                                    // 000000083070: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000083074: BFB60003
	s_endpgm                                                   // 000000083078: BFB00000
subtract_char_get_num_groups_8_8_symend:
	.long 0xbf800000                                           // 00000008307C: BF800000
	.long 0xbf800000                                           // 000000083080: BF800000
	.long 0xbf800000                                           // 000000083084: BF800000
	.long 0xbf800000                                           // 000000083088: BF800000
	.long 0xbf800000                                           // 00000008308C: BF800000
	.long 0xbf800000                                           // 000000083090: BF800000
	.long 0xbf800000                                           // 000000083094: BF800000
	.long 0xbf800000                                           // 000000083098: BF800000
	.long 0xbf800000                                           // 00000008309C: BF800000
	.long 0xbf800000                                           // 0000000830A0: BF800000
	.long 0xbf800000                                           // 0000000830A4: BF800000
	.long 0xbf800000                                           // 0000000830A8: BF800000
	.long 0xbf800000                                           // 0000000830AC: BF800000
	.long 0xbf800000                                           // 0000000830B0: BF800000
	.long 0xbf800000                                           // 0000000830B4: BF800000
	.long 0xbf800000                                           // 0000000830B8: BF800000
	.long 0xbf800000                                           // 0000000830BC: BF800000
	.long 0xbf800000                                           // 0000000830C0: BF800000
	.long 0xbf800000                                           // 0000000830C4: BF800000
	.long 0xbf800000                                           // 0000000830C8: BF800000
	.long 0xbf800000                                           // 0000000830CC: BF800000
	.long 0xbf800000                                           // 0000000830D0: BF800000
	.long 0xbf800000                                           // 0000000830D4: BF800000
	.long 0xbf800000                                           // 0000000830D8: BF800000
	.long 0xbf800000                                           // 0000000830DC: BF800000
	.long 0xbf800000                                           // 0000000830E0: BF800000
	.long 0xbf800000                                           // 0000000830E4: BF800000
	.long 0xbf800000                                           // 0000000830E8: BF800000
	.long 0xbf800000                                           // 0000000830EC: BF800000
	.long 0xbf800000                                           // 0000000830F0: BF800000
	.long 0xbf800000                                           // 0000000830F4: BF800000
	.long 0xbf800000                                           // 0000000830F8: BF800000
	.long 0xbf800000                                           // 0000000830FC: BF800000

	.p2align	8
	.type	subtract_char_get_work_dim_8_8,@function
	.size	subtract_char_get_work_dim_8_8, subtract_char_get_work_dim_8_8_symend-subtract_char_get_work_dim_8_8
subtract_char_get_work_dim_8_8:
	s_load_b128 s[4:7], s[0:1], 0x38                           // 000000083100: F4080100 F8000038
	s_waitcnt lgkmcnt(0)                                       // 000000083108: BF89FC07
	s_load_b32 s5, s[0:1], 0x50                                // 00000008310C: F4000140 F8000050
	v_bfe_u32 v1, v0, 10, 8                                    // 000000083114: D6100001 02211500
	s_load_b64 s[0:1], s[0:1], 0x8                             // 00000008311C: F4040000 F8000008
	s_mulk_i32 s3, 0xf8                                        // 000000083124: B80300F8
	v_and_b32_e32 v0, 0x3ff, v0                                // 000000083128: 360000FF 000003FF
	s_lshl_b32 s2, s2, 3                                       // 000000083130: 84028302
	s_mov_b32 s33, 0                                           // 000000083134: BEA10080
	v_add_nc_u32_e32 v1, s6, v1                                // 000000083138: 4A020206
	s_delay_alu instid0(VALU_DEP_2) | instskip(NEXT) | instid1(VALU_DEP_2)// 00000008313C: BF870112
	v_add3_u32 v0, s4, s2, v0                                  // 000000083140: D6550000 04000404
	v_sub_nc_u32_e32 v1, s3, v1                                // 000000083148: 4C020203
	s_waitcnt lgkmcnt(0)                                       // 00000008314C: BF89FC07
	s_delay_alu instid0(VALU_DEP_1)                            // 000000083150: BF870001
	v_add_nc_u32_e32 v1, s5, v1                                // 000000083154: 4A020205
	global_store_b8 v0, v1, s[0:1]                             // 000000083158: DC620000 00000100
	s_nop 0                                                    // 000000083160: BF800000
	s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)                       // 000000083164: BFB60003
	s_endpgm                                                   // 000000083168: BFB00000
subtract_char_get_work_dim_8_8_symend:
	.long 0xbf9f0000                                           // 00000008316C: BF9F0000
	.long 0xbf9f0000                                           // 000000083170: BF9F0000
	.long 0xbf9f0000                                           // 000000083174: BF9F0000
	.long 0xbf9f0000                                           // 000000083178: BF9F0000
	.long 0xbf9f0000                                           // 00000008317C: BF9F0000
	.long 0xbf9f0000                                           // 000000083180: BF9F0000
	.long 0xbf9f0000                                           // 000000083184: BF9F0000
	.long 0xbf9f0000                                           // 000000083188: BF9F0000
	.long 0xbf9f0000                                           // 00000008318C: BF9F0000
	.long 0xbf9f0000                                           // 000000083190: BF9F0000
	.long 0xbf9f0000                                           // 000000083194: BF9F0000
	.long 0xbf9f0000                                           // 000000083198: BF9F0000
	.long 0xbf9f0000                                           // 00000008319C: BF9F0000
	.long 0xbf9f0000                                           // 0000000831A0: BF9F0000
	.long 0xbf9f0000                                           // 0000000831A4: BF9F0000
	.long 0xbf9f0000                                           // 0000000831A8: BF9F0000
	.long 0xbf9f0000                                           // 0000000831AC: BF9F0000
	.long 0xbf9f0000                                           // 0000000831B0: BF9F0000
	.long 0xbf9f0000                                           // 0000000831B4: BF9F0000
	.long 0xbf9f0000                                           // 0000000831B8: BF9F0000
	.long 0xbf9f0000                                           // 0000000831BC: BF9F0000
	.long 0xbf9f0000                                           // 0000000831C0: BF9F0000
	.long 0xbf9f0000                                           // 0000000831C4: BF9F0000
	.long 0xbf9f0000                                           // 0000000831C8: BF9F0000
	.long 0xbf9f0000                                           // 0000000831CC: BF9F0000
	.long 0xbf9f0000                                           // 0000000831D0: BF9F0000
	.long 0xbf9f0000                                           // 0000000831D4: BF9F0000
	.long 0xbf9f0000                                           // 0000000831D8: BF9F0000
	.long 0xbf9f0000                                           // 0000000831DC: BF9F0000
	.long 0xbf9f0000                                           // 0000000831E0: BF9F0000
	.long 0xbf9f0000                                           // 0000000831E4: BF9F0000
	.long 0xbf9f0000                                           // 0000000831E8: BF9F0000
	.long 0xbf9f0000                                           // 0000000831EC: BF9F0000
	.long 0xbf9f0000                                           // 0000000831F0: BF9F0000
	.long 0xbf9f0000                                           // 0000000831F4: BF9F0000
	.long 0xbf9f0000                                           // 0000000831F8: BF9F0000
	.long 0xbf9f0000                                           // 0000000831FC: BF9F0000
	.long 0xbf9f0000                                           // 000000083200: BF9F0000
	.long 0xbf9f0000                                           // 000000083204: BF9F0000
	.long 0xbf9f0000                                           // 000000083208: BF9F0000
	.long 0xbf9f0000                                           // 00000008320C: BF9F0000
	.long 0xbf9f0000                                           // 000000083210: BF9F0000
	.long 0xbf9f0000                                           // 000000083214: BF9F0000
	.long 0xbf9f0000                                           // 000000083218: BF9F0000
	.long 0xbf9f0000                                           // 00000008321C: BF9F0000
	.long 0xbf9f0000                                           // 000000083220: BF9F0000
	.long 0xbf9f0000                                           // 000000083224: BF9F0000
	.long 0xbf9f0000                                           // 000000083228: BF9F0000
	.long 0xbf9f0000                                           // 00000008322C: BF9F0000
	.long 0xbf9f0000                                           // 000000083230: BF9F0000
	.long 0xbf9f0000                                           // 000000083234: BF9F0000
	.long 0xbf9f0000                                           // 000000083238: BF9F0000
	.long 0xbf9f0000                                           // 00000008323C: BF9F0000
	.long 0xbf9f0000                                           // 000000083240: BF9F0000
	.long 0xbf9f0000                                           // 000000083244: BF9F0000
	.long 0xbf9f0000                                           // 000000083248: BF9F0000
	.long 0xbf9f0000                                           // 00000008324C: BF9F0000
	.long 0xbf9f0000                                           // 000000083250: BF9F0000
	.long 0xbf9f0000                                           // 000000083254: BF9F0000
	.long 0xbf9f0000                                           // 000000083258: BF9F0000
	.long 0xbf9f0000                                           // 00000008325C: BF9F0000
	.long 0xbf9f0000                                           // 000000083260: BF9F0000
	.long 0xbf9f0000                                           // 000000083264: BF9F0000
	.long 0xbf9f0000                                           // 000000083268: BF9F0000
	.long 0xbf9f0000                                           // 00000008326C: BF9F0000
	.long 0xbf9f0000                                           // 000000083270: BF9F0000
	.long 0xbf9f0000                                           // 000000083274: BF9F0000
	.long 0xbf9f0000                                           // 000000083278: BF9F0000
	.long 0xbf9f0000                                           // 00000008327C: BF9F0000
	.long 0xbf9f0000                                           // 000000083280: BF9F0000
	.long 0xbf9f0000                                           // 000000083284: BF9F0000
	.long 0xbf9f0000                                           // 000000083288: BF9F0000
	.long 0xbf9f0000                                           // 00000008328C: BF9F0000
	.long 0xbf9f0000                                           // 000000083290: BF9F0000
	.long 0xbf9f0000                                           // 000000083294: BF9F0000
	.long 0xbf9f0000                                           // 000000083298: BF9F0000
	.long 0xbf9f0000                                           // 00000008329C: BF9F0000
	.long 0xbf9f0000                                           // 0000000832A0: BF9F0000
	.long 0xbf9f0000                                           // 0000000832A4: BF9F0000
	.long 0xbf9f0000                                           // 0000000832A8: BF9F0000
	.long 0xbf9f0000                                           // 0000000832AC: BF9F0000
	.long 0xbf9f0000                                           // 0000000832B0: BF9F0000
	.long 0xbf9f0000                                           // 0000000832B4: BF9F0000
	.long 0xbf9f0000                                           // 0000000832B8: BF9F0000
	.long 0xbf9f0000                                           // 0000000832BC: BF9F0000
	.long 0xbf9f0000                                           // 0000000832C0: BF9F0000
	.long 0xbf9f0000                                           // 0000000832C4: BF9F0000
	.long 0xbf9f0000                                           // 0000000832C8: BF9F0000
	.long 0xbf9f0000                                           // 0000000832CC: BF9F0000
	.long 0xbf9f0000                                           // 0000000832D0: BF9F0000
	.long 0xbf9f0000                                           // 0000000832D4: BF9F0000
	.long 0xbf9f0000                                           // 0000000832D8: BF9F0000
	.long 0xbf9f0000                                           // 0000000832DC: BF9F0000
	.long 0xbf9f0000                                           // 0000000832E0: BF9F0000
	.long 0xbf9f0000                                           // 0000000832E4: BF9F0000
	.long 0xbf9f0000                                           // 0000000832E8: BF9F0000
	.long 0xbf9f0000                                           // 0000000832EC: BF9F0000
	.long 0xbf9f0000                                           // 0000000832F0: BF9F0000
	.long 0xbf9f0000                                           // 0000000832F4: BF9F0000
	.long 0xbf9f0000                                           // 0000000832F8: BF9F0000
	.long 0xbf9f0000                                           // 0000000832FC: BF9F0000

	.section	.dynamic,#alloc,#write
_DYNAMIC:
	.long 0x6                                                  // 000000084300: 00000006
	.long 0                                                    // 000000084304: 00000000
	.ascii "0y"                                                // 000000084308: 7930
	.short 0x5                                                 // 00000008430A: 0005
	.long 0                                                    // 00000008430C: 00000000
	.long 0xb                                                  // 000000084310: 0000000B
	.long 0                                                    // 000000084314: 00000000
	.long 0x18                                                 // 000000084318: 00000018
	.long 0                                                    // 00000008431C: 00000000
	.long 0x5                                                  // 000000084320: 00000005
	.long 0                                                    // 000000084324: 00000000
	.ascii "@"                                                 // 000000084328: 40
	.byte 0xd3                                                 // 000000084329: D3
	.short 0x5                                                 // 00000008432A: 0005
	.long 0                                                    // 00000008432C: 00000000
	.ascii "\n"                                                // 000000084330: 0A
	.byte 0                                                    // 000000084331: 00
	.short 0                                                   // 000000084332: 0000
	.long 0                                                    // 000000084334: 00000000
	.ascii "JY"                                                // 000000084338: 594A
	.short 0                                                   // 00000008433A: 0000
	.long 0                                                    // 00000008433C: 00000000
	.long 0x6ffffef5                                           // 000000084340: 6FFFFEF5
	.long 0                                                    // 000000084344: 00000000
	.long 0x5b0f8                                              // 000000084348: 0005B0F8
	.long 0                                                    // 00000008434C: 00000000
	.long 0x4                                                  // 000000084350: 00000004
	.long 0                                                    // 000000084354: 00000000
	.long 0x5c0a0                                              // 000000084358: 0005C0A0
	.long 0                                                    // 00000008435C: 00000000
	.long 0                                                    // 000000084360: 00000000
	.long 0                                                    // 000000084364: 00000000
	.long 0                                                    // 000000084368: 00000000
	.long 0                                                    // 00000008436C: 00000000

	.section	.comment,"MS",@progbits
	.long 0x616c6300                                           // 000000000000: 616C6300
	.ascii "ng version 18.0.0 (ssh://gerritgit/lightning/ec/llvm-project 12ba2f50c2cd6ac494748370b29a8838deb2fb39)"// 000000000004: 7620676E 69737265 31206E6F 2E302E38 73282030 2F3A6873 7265672F 67746972 6C2F7469 74686769 676E696E 2F63652F 6D766C6C 6F72702D 7463656A 62323120 35663261 63326330 63613664 37343934 37333834 39326230 33383861 62656438 33626632 2939
	.short 0x4c00                                              // 00000000006A: 4C00
	.ascii "inker: LLD 18.0.0"                                 // 00000000006C: 656B6E69 4C203A72 3120444C 2E302E38 30
	.byte 0                                                    // 00000000007D: 00

	.amdgpu_pal_metadata
---
amdhsa.kernels:
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_x_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_x_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_offset_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_offset_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_group_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_group_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_local_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_global_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_num_groups_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_num_groups_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_work_dim_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_work_dim_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_x_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_x_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_offset_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_offset_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_group_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_group_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_local_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_global_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_num_groups_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_num_groups_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_work_dim_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_work_dim_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_x_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_x_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_offset_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_offset_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_group_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_group_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_local_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_global_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_num_groups_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_num_groups_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_work_dim_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_work_dim_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_x_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_x_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_offset_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_offset_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_group_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_group_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_local_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_global_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_num_groups_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_num_groups_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_work_dim_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_work_dim_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_x_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_x_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_offset_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_offset_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_group_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_group_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_local_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_global_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_num_groups_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_num_groups_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_work_dim_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_work_dim_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_x_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_x_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_offset_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_offset_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_group_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_group_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_local_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_global_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_num_groups_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_num_groups_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_work_dim_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_work_dim_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_x_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_x_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_offset_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_offset_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_group_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_group_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_local_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_global_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_num_groups_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_num_groups_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_work_dim_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_work_dim_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_x_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_x_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_offset_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_offset_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_group_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_group_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_local_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_global_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_num_groups_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_num_groups_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_work_dim_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_work_dim_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_x_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_x_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_offset_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_offset_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_group_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_group_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_local_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_global_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'int*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_num_groups_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_num_groups_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_get_work_dim_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_work_dim_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_x_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_x_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_offset_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_offset_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_group_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_group_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_num_groups_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_num_groups_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_x_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_x_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_offset_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_offset_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_group_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_group_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_local_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_local_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_global_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_global_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_num_groups_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_num_groups_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uint*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_get_work_dim_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_get_work_dim_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_x_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_x_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_offset_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_offset_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_group_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_group_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_local_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_global_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_num_groups_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_num_groups_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_work_dim_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_work_dim_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_x_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_x_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_offset_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_offset_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_group_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_group_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_local_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_global_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_num_groups_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_num_groups_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_work_dim_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_work_dim_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_x_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_x_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_offset_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_offset_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_group_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_group_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_local_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_global_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_num_groups_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_num_groups_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_work_dim_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_work_dim_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_x_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_x_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_offset_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_offset_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_group_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_group_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_local_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_global_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_num_groups_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_num_groups_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_work_dim_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_work_dim_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_x_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_x_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_offset_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_offset_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_group_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_group_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_local_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_global_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_num_groups_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_num_groups_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_work_dim_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_work_dim_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_x_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_x_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_offset_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_offset_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x11
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_group_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_group_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_local_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x12
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_global_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x11
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_num_groups_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_num_groups_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x11
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_work_dim_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_work_dim_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xf
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_x_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_x_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_offset_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_offset_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_group_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_group_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_local_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_global_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xe
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_num_groups_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_num_groups_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_work_dim_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_work_dim_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_x_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_x_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_offset_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_offset_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_group_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_group_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_local_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_global_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_num_groups_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_num_groups_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_work_dim_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_work_dim_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xd
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_x_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_x_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_offset_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_offset_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_group_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_group_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_local_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_global_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'long*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_num_groups_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_num_groups_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xb
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_long_get_work_dim_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_work_dim_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_x_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_x_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_offset_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_offset_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_group_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_group_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_num_groups_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_num_groups_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_x_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_x_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_offset_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_offset_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_group_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_group_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_local_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_local_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_global_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_global_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_num_groups_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_num_groups_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'ulong*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_long_get_work_dim_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_long_get_work_dim_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_x_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_x_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_offset_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_offset_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_group_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_group_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_local_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_global_id_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_id_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_size_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_size_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_num_groups_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_num_groups_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_work_dim_x
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_work_dim_x.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_x_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_x_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_offset_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_offset_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_group_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_group_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_local_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_global_id_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_id_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_size_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_size_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_num_groups_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_num_groups_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_work_dim_get_global_offset
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_work_dim_get_global_offset.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_x_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_x_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_offset_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_offset_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_group_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_group_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_local_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_global_id_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_id_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_size_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_size_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_num_groups_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_num_groups_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_work_dim_get_local_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_work_dim_get_local_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_x_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_x_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_offset_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_offset_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_group_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_group_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_local_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_global_id_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_id_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_size_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_size_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_num_groups_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_num_groups_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_work_dim_get_group_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_work_dim_get_group_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_x_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_x_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_offset_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_offset_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_group_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_group_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_local_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_global_id_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_id_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_size_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_size_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_num_groups_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_num_groups_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x5
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_work_dim_get_local_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_work_dim_get_local_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_x_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_x_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_offset_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_offset_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_group_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_group_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_local_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_global_id_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_id_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_size_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_size_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xc
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_num_groups_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_num_groups_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0xa
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_work_dim_get_global_id
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_work_dim_get_global_id.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_x_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_x_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_offset_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_offset_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_group_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_group_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_local_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_global_id_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_id_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x9
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_size_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_size_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_num_groups_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_num_groups_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_work_dim_get_global_size
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_work_dim_get_global_size.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_x_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_x_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_offset_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_offset_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_group_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_group_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_local_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_global_id_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_id_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_size_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_size_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x7
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_num_groups_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_num_groups_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_work_dim_get_num_groups
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_work_dim_get_num_groups.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_x_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_x_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_offset_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_offset_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x4
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_group_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x10
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_group_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_local_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_global_id_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_id_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x8
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           0x8
        .type_name:      'char*'
        .value_kind:     global_buffer
      - .offset:         0x8
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_size_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x10
      - 0x2
      - 0x2
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_size_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_num_groups_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_num_groups_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x6
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x10
    .name:           subtract_char_get_work_dim_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x2
      - 0x2
      - 0x4
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_work_dim_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x4
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_x_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_x_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_offset_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_offset_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_group_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_group_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_id_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_id_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_size_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_size_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_num_groups_64
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_num_groups_64.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_work_dim
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x40
      - 0x1
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_work_dim.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_x_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_x_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_offset_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_offset_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_group_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_group_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_local_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_local_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_id_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_id_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_global_size_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_global_size_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_num_groups_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x24
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_num_groups_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x3
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
  - .args:
      - .offset:         0
        .size:           0x4
        .type_name:      int
        .value_kind:     by_value
      - .address_space:  global
        .offset:         0x8
        .size:           0x8
        .type_name:      'uchar*'
        .value_kind:     global_buffer
      - .offset:         0x10
        .size:           0x4
        .value_kind:     hidden_block_count_x
      - .offset:         0x14
        .size:           0x4
        .value_kind:     hidden_block_count_y
      - .offset:         0x18
        .size:           0x4
        .value_kind:     hidden_block_count_z
      - .offset:         0x1c
        .size:           0x2
        .value_kind:     hidden_group_size_x
      - .offset:         0x1e
        .size:           0x2
        .value_kind:     hidden_group_size_y
      - .offset:         0x20
        .size:           0x2
        .value_kind:     hidden_group_size_z
      - .offset:         0x22
        .size:           0x2
        .value_kind:     hidden_remainder_x
      - .offset:         0x24
        .size:           0x2
        .value_kind:     hidden_remainder_y
      - .offset:         0x26
        .size:           0x2
        .value_kind:     hidden_remainder_z
      - .offset:         0x38
        .size:           0x8
        .value_kind:     hidden_global_offset_x
      - .offset:         0x40
        .size:           0x8
        .value_kind:     hidden_global_offset_y
      - .offset:         0x48
        .size:           0x8
        .value_kind:     hidden_global_offset_z
      - .offset:         0x50
        .size:           0x2
        .value_kind:     hidden_grid_dims
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 0x8
    .kernarg_segment_size: 0x110
    .language:       OpenCL C
    .language_version:
      - 0x2
      - 0
    .max_flat_workgroup_size: 0x40
    .name:           subtract_char_get_work_dim_8_8
    .private_segment_fixed_size: 0
    .reqd_workgroup_size:
      - 0x8
      - 0x8
      - 0x1
    .sgpr_count:     0x22
    .sgpr_spill_count: 0
    .symbol:         subtract_char_get_work_dim_8_8.kd
    .uses_dynamic_stack: false
    .vgpr_count:     0x2
    .vgpr_spill_count: 0
    .wavefront_size: 0x20
    .workgroup_processor_mode: 0x1
amdhsa.target:   amdgcn-amd-amdhsa--gfx1103
amdhsa.version:
  - 0x1
  - 0x2
amdpal.pipelines:
  - .registers:      {}
...
	.end_amdgpu_pal_metadata
